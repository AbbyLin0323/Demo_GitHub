ftableid nfc_id
////nfc setting+++++++++++++++++++++++++++++++++++++++++++++++++
//echo nfc reg init
//p/x $arg_reg_list_addr
//p/x $arg_reg_pos
//echo \r\n
//set variable $arg_nfc_reg_start = $arg_reg_pos
//set variable $arg_nfc_1st_reg_start = $arg_reg_pos

////fill nfc related reg entry
udelay    0
//Delay_Entry    0

	// 0x1ff8000c NFC pad IO setting NV is bit[2],1'b0 is single end without Vref
	////SetReg_Entry    ($arg_reg_base+0x000c)    ~(0x1f)    (0x1f)
//clrbit32  (REG_BASE+0x000c)  0x1f
//setbit32  (REG_BASE+0x000c)  (0x1f)
	
    //rNfcPgCfg                = 0xd1806008
    memw32    (REG_BASE+0x1000)     0xd1806008
    
    //rNfcMisc                 = 0x0fff0201;
    memw32    (REG_BASE+0x1014)     0x0fff0201
    
    //rNfcOtfbAdsBase          = 0x020001ff;
    memw32    (REG_BASE+0x1018)     0x020001ff
    
    //rNfcTCtrl0      = g_aAsyncTConfTab[ucIfType][ucMode].ulNfcTCtrl0;
    memw32    (REG_BASE+0x1004)     0x538C8910
    
    //rNfcTCtrl1      = g_aAsyncTConfTab[ucIfType][ucMode].ulNfcTCtrl1;
    memw32    (REG_BASE+0x1008)     0x0010C48c
    
    //rNfcTCtrl2      = g_aAsyncTConfTab[ucIfType][ucMode].ulNfcTCtrl2;
    memw32    (REG_BASE+0x100c)     0x89
    
    //rNfcModeConfig  = g_aAsyncTConfTab[ucIfType][ucMode].ulNfcModeConfig;
    memw32    (REG_BASE+0x102c)     0x9a900
    //rNfcEdoTCtrlECO          = 0x23000055;
    memw32    (REG_BASE+0x1030)      0x03000000
    
    //rNfcPRCQDelayTime        = 0x70381201;
    memw32    (REG_BASE+0x1034)     0x70380901
    
    //PMU NFCLK: 0-12.5M(NFPLL/16) 1-50M(NFPLL/8) 2-100M(NFPLL/4) 3-200M(NFPLL/2)
    //SetReg_Entry    ($arg_reg_base+0x1f20)    ~(0x3)    0x0
clrbit32  (REG_BASE+0x1f20)  0x3
setbit32  (REG_BASE+0x1f20)  0x0

	//disable NFC clock gating
    memw32    (REG_BASE+0x1070)     0x0
	memw32    (REG_BASE+0x1074)     0x0

//interface init/reset/pumapping/set feature/
nfcinit

nfcreset

udelay    50
//Delay_Entry    50000

nfcupdate

//set feature
nfcset    0x10    0x2 
nfcset    0x80    0x2 
nfcset    0x2     0x17 
nfcset    0x1     0x67

//#p/x *0x1ff8000c bit[16]= 0x1 Disable WP pin (A2) 
setbit32  (REG_BASE+0x0c) (0x1<<16)

// NFC pad IO setting bit[3]:RHSNFDIFF;bit[2]:RHSNF_NV;bit[1]:RHSNF_LV;bit[0]:RHSNF_RS
//*(volatile U32*)0x1ff8000c |= 0x3<<1;
//SetReg_Entry    ($arg_reg_base+0x000c)    ~(0x1f)    (0x1C)
clrbit32  (REG_BASE+0x000c)  0x1f
setbit32  (REG_BASE+0x000c)  (0x1C)

//NFC Pad Driving setting CH0:0x1ff80090;CH1:0x1ff80094;CH2:0x1ff80098;CH3:0X1FF8009C
memw32    (REG_BASE+0x0090)    (0x00555555)
memw32    (REG_BASE+0x0094)    (0x00555555)
memw32    (REG_BASE+0x0098)    (0x00555555)
memw32    (REG_BASE+0x009c)    (0x00555555)	

///* switch to sync mode */
    //pNfcPgCfg->bsIsMicron       = FALSE;
    ////SetReg_Entry    ($arg_reg_base+0x1000)    (~(0x1<<28))    (0x0<<28)
//clrbit32  (REG_BASE+0x1000)  (0x1<<28)
//setbit32  (REG_BASE+0x1000)  (0x0<<28)
    //SetReg_Entry    ($arg_reg_base+0x1000)    (~(0x1<<28))    (0x0<<28)  
clrbit32  (REG_BASE+0x1000)  (0x1<<28)


    //pNfcPgCfg->bsCeHoldEn       = TRUE;
    //SetReg_Entry    ($arg_reg_base+0x1000)    (~(0x1<<29))    (0x1<<29)

setbit32  (REG_BASE+0x1000)  (0x1<<29)
	
    //pNfcPgCfg->bsDDRCfg         = TRUE; pNfcPgCfg->bsDDRHfCfg       = TRUE;
    //SetReg_Entry    ($arg_reg_base+0x1000)    (~(0x3<<7))     (0x3<<7)
clrbit32  (REG_BASE+0x1000)  (0x3<<7)
setbit32  (REG_BASE+0x1000)  (0x3<<7)
        	
    //pNfcPgCfg->bsLdpcNvddrMode  = FALSE;
    //SetReg_Entry    ($arg_reg_base+0x1000)    (~(0x1<<17))    (0x0<<17)
clrbit32  (REG_BASE+0x1000)  (0x1<<17)

        	
    //enable recc report
    //SetReg_Entry    ($arg_reg_base+0x1000)    (~(0x1<<16))    (0x1<<16)

setbit32  (REG_BASE+0x1000)  (0x1<<16)
	
	//enable 3533 ODT
    //SetReg_Entry    ($arg_reg_base+0x1000)    (~(0x1<<10))    (0x1<<10)

setbit32  (REG_BASE+0x1000)  (0x1<<10)
        
//rNfcTCtrl0                = 0x50610bc8;
memw32    (REG_BASE+0x1004)     0x50690bc8

//rNfcTCtrl1                = 0xce119484;
memw32    (REG_BASE+0x1008)     0xcf119484
//memw32    (REG_BASE+0x1008)     0xcc119484

//rNfcTCtrl2                = 0xaf;
memw32    (REG_BASE+0x100c)     0xaf

//rNfcModeConfig            = 0x1fc9a900;
memw32    (REG_BASE+0x102c)     0x1fc9a900

//rNfcNfdmaCfg |= (1<<18);
//SetReg_Entry    ($arg_reg_base+0x10a0)    (~(0x1<<18))    (0x1<<18)|(0x1<<10)|(0x1<<2)|(0x1<<1)
clrbit32  (REG_BASE+0x10a0)  (0x1<<18)
setbit32  (REG_BASE+0x10a0)  (0x1<<18)|(0x1<<10)|(0x1<<2)|(0x1<<1)

//rNfcNfdmaCfg |= (1<<18);
//SetReg_Entry    ($arg_reg_base+0x1018)    (~(0x1<<30))    (0x1<<30)

setbit32  (REG_BASE+0x1018)  (0x1<<30)

//delay value for delay cells before DLYCOMP
//SetReg_Entry    ($arg_reg_base+0x1038)    (~(0xff<<16))    (0x00<<16)
clrbit32  (REG_BASE+0x1038)  (0xff<<16)
setbit32  (REG_BASE+0x1038)  (0x00<<16)

//DDR DLYCOMP config in sync mode	
memw32    (REG_BASE+0x1078)     	0x77606077

//set NFPLL output frequence
//rPMU(0x6c)     // NFPLL output setting
//NFPLL setting Bit[6:0]=0x1f Bit[9:8]=0x2:400MHz
//NFPLL setting Bit[6:0]=0x17 Bit[9:8]=0x2:300MHz
//NFPLL setting Bit[6:0]=0x1f Bit[9:8]=0x3:200MHz
//SetReg_Entry    ($arg_reg_base+0x1f6c)    (~(0x3<<8))   (0x2<<8)
//clrbit32  (REG_BASE+0x1f6c)  (0x3<<8)
//setbit32  (REG_BASE+0x1f6c)  (0x2<<8)
//SetReg_Entry    ($arg_reg_base+0x1f6c)    (~(0x7f<<0))   (0x1F<<0)
//clrbit32  (REG_BASE+0x1f6c)  (0x7f<<0)
//setbit32  (REG_BASE+0x1f6c)  (0x1F<<0)

//0x1ff81f20[1:0] = 2'b00 NFCLK=NFPLL output /16
//0x1ff81f20[1:0] = 2'b01 NFCLK=NFPLL output /8
//0x1ff81f20[1:0] = 2'b10 NFCLK=NFPLL output /4
//0x1ff81f20[1:0] = 2'b11 NFCLK=NFPLL output /2
//rPMU(0x20)      = g_aAsyncTConfTab[ucIfType][ucMode].ulPMU20; //clock setting
//SetReg_Entry    ($arg_reg_base+0x1f20)    ~(0x3)   0x3
clrbit32  (REG_BASE+0x1f20)  0x3
setbit32  (REG_BASE+0x1f20)  0x2

// #0x1ff81000 bit[0] SATA mode set to 0; PCIE mode set to 1;
	//SetReg_Entry    ($arg_reg_base+0x1000)    (~(0x1<<0))    (0x1<<0)

setbit32  (REG_BASE+0x1000)  (0x1)
  
//set $arg_nfc_1st_reg_cnt = (($arg_reg_pos-$arg_nfc_1st_reg_start)/16)
//set $arg_nfc_2nd_reg_start = $arg_reg_pos

//set $arg_nfc_reg_cnt = (($arg_reg_pos-$arg_nfc_reg_start)/16)
//set $arg_nfc_2nd_reg_cnt = (($arg_reg_pos-$arg_nfc_2nd_reg_start)/16)
