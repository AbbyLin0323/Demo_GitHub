
WholeChip_Mcu2.elf:     file format elf32-xtensa-le


Disassembly of section .data:

1ffa0800 <g_tBasicTestPatternCtrl>:
.data_symbol_1482204275():
1ffa0800:	0300010b 08050406 00000a09                       ..........

1ffa080a <g_tBasicTestPatternCtrl+0xa>:
1ffa080a:	00000000 fe000000                                ......

1ffa0810 <g_aPrcqTable>:
1ffa0810:	000ffe00 000ffe01 000ffe02 000ffe03     ................
1ffa0820:	000ffe04 000ff805 000ffc06 000ffa07     ................
1ffa0830:	000ff808 000ffc09 000ffa0a 000ff80b     ................
1ffa0840:	000ff80c 000ffa0d 000ffc0e 000ffa0f     ................
1ffa0850:	000ff810 000ffc11 000ffa12 000ff813     ................
1ffa0860:	000ff814 000ff815 000ffe16 000ffa17     ................
1ffa0870:	000ffe18 000fff19 000fff1a              ............

1ffa087c <g_aPrcqTable+0x6c>:
1ffa087c:	00000000                                ....

1ffa0880 <g_aBasicTestPatternCtrl>:
1ffa0880:	0001                                        ..

1ffa0882 <g_aBasicTestPatternCtrl+0x2>:
	...

1ffa088c <g_aBasicTestPatternCtrl+0xc>:
1ffa088c:	030002                                        ...

1ffa088f <g_aBasicTestPatternCtrl+0xf>:
	...

1ffa0898 <g_aBasicTestPatternCtrl+0x18>:
1ffa0898:	0401                                        ..

1ffa089a <g_aBasicTestPatternCtrl+0x1a>:
	...

1ffa08a4 <g_aBasicTestPatternCtrl+0x24>:
1ffa08a4:	0501                                        ..

1ffa08a6 <g_aBasicTestPatternCtrl+0x26>:
	...

1ffa08b0 <g_aBasicTestPatternCtrl+0x30>:
1ffa08b0:	0801                                        ..

1ffa08b2 <g_aBasicTestPatternCtrl+0x32>:
	...

1ffa08bc <g_aBasicTestPatternCtrl+0x3c>:
1ffa08bc:	0a0902                                        ...

1ffa08bf <g_aBasicTestPatternCtrl+0x3f>:
	...

1ffa08d0 <g_aXorPageLocationTable>:
1ffa08d0:	00000000 00000100 00020000 03000000     ................
1ffa08e0:	00000000 00000004 00000500 00060000     ................
1ffa08f0:	07000000 00000000 00000000 00000000     ................
	...
1ffa0970:	01010101 01010201 01030101 04010101     ................
1ffa0980:	01010101 01010105 01010601 01070101     ................
1ffa0990:	00010101 01010101 00000000 00000000     ................
	...
1ffa0a10:	02020202 02020302 02040202 05020202     ................
1ffa0a20:	02020202 02020206 02020702 02000202     ................
1ffa0a30:	01020202 02020202 00000000 00000000     ................
	...
1ffa0ab0:	03030303 03030403 03050303 06030303     ................
1ffa0ac0:	03030303 03030307 03030003 03010303     ................
1ffa0ad0:	02030303 03030303 00000000 00000000     ................
	...
1ffa0b50:	04040404 04040504 04060404 07040404     ................
1ffa0b60:	04040404 04040400 04040104 04020404     ................
1ffa0b70:	03040404 04040404 00000000 00000000     ................
	...
1ffa0bf0:	05050505 05050605 05070505 00050505     ................
1ffa0c00:	05050505 05050501 05050205 05030505     ................
1ffa0c10:	04050505 05050505 00000000 00000000     ................
	...

1ffa0c90 <_reent_ptr>:
1ffa0c90:	1ffa1f40                                @...

Disassembly of section .mcu1dram.data:

1ffa0ca0 <.mcu1dram.data_symbol_1482204275>:
.mcu1dram.data_symbol_1482204275():
1ffa0ca0:	0000ffff 0000ffff 00000000 00000000     ................
	...

Disassembly of section .bss:

1ffa11f0 <l_ulLoop$9601_1049_3>:
1ffa11f0:	00000000                                ....

1ffa11f4 <bInit$2905_558_3>:
	...

1ffa1200 <g_pMCU1DramEndBase>:
.bss_symbol_1482204275():
1ffa1200:	00000000                                ....

1ffa1204 <g_ulDramTotalSize>:
1ffa1204:	00000000                                ....

1ffa1208 <g_FreeMemBase>:
	...

1ffa1234 <g_ptFCmdReq>:
1ffa1234:	00000000                                ....

1ffa1238 <g_ulPuNum>:
1ffa1238:	00000000                                ....

1ffa123c <g_ptFCmdReqSts>:
1ffa123c:	00000000                                ....

1ffa1240 <g_ptFCmdReqDptr>:
1ffa1240:	00000000                                ....

1ffa1244 <g_ulGBBT>:
1ffa1244:	00000000                                ....

1ffa1248 <l_tGBbtInfo_150>:
	...

1ffa1258 <g_pRedBaseAddr>:
1ffa1258:	00000000                                ....

1ffa125c <g_ptFMUserMgr>:
1ffa125c:	00000000                                ....

1ffa1260 <g_ulSsuInOtfbBaseAddr>:
1ffa1260:	00000000                                ....

1ffa1264 <g_pSubSystemDevParamPage>:
1ffa1264:	00000000                                ....

1ffa1268 <g_ptFCmdIntrCtrl>:
1ffa1268:	00000000                                ....

1ffa126c <g_ptFCmdIntrCtrlBak>:
1ffa126c:	00000000                                ....

1ffa1270 <g_ptFCmdIntrErrH>:
1ffa1270:	00000000                                ....

1ffa1274 <g_ptFCmdIntrErrHBak>:
1ffa1274:	00000000                                ....

1ffa1278 <g_ptFCmdIntrDptr>:
1ffa1278:	00000000                                ....

1ffa127c <g_ptFCmdIntrDptrBak>:
1ffa127c:	00000000                                ....

1ffa1280 <g_ptFCmdReqBak>:
1ffa1280:	00000000                                ....

1ffa1284 <l_ptFMIntrMgr_526>:
1ffa1284:	00000000                                ....

1ffa1288 <g_pDecSramStsBase>:
1ffa1288:	00000000                                ....

1ffa128c <l_aExtHSpareTmp_637>:
1ffa128c:	00000000                                ....

1ffa1290 <l_tSDLBufMgr_721>:
	...

1ffa1298 <l_tSDLRedMgr_729>:
	...

1ffa12a0 <g_dbg_enable>:
1ffa12a0:	00000000                                ....

1ffa12a4 <g_IICSensorParam>:
1ffa12a4:	00000000                                ....

1ffa12a8 <l_pFWSMsgQueue_774>:
1ffa12a8:	00000000                                ....

1ffa12ac <l_pFWNtfnMsg_775>:
1ffa12ac:	00000000                                ....

1ffa12b0 <l_ulMsgSeqNum_776>:
1ffa12b0:	00000000                                ....

1ffa12b4 <l_ulNtfnMsgSeqNum_777>:
1ffa12b4:	00000000                                ....

1ffa12b8 <g_apSubMcShareData>:
1ffa12b8:	00000000                                ....

1ffa12bc <l_BootStaticFlag_859>:
1ffa12bc:	00000000                                ....

1ffa12c0 <l_ulSubSysNum_860>:
1ffa12c0:	00000000                                ....

1ffa12c4 <l_ulSubsysNumBits_861>:
1ffa12c4:	00000000                                ....

1ffa12c8 <g_pDecFifoCfg>:
1ffa12c8:	00000000                                ....

1ffa12cc <g_pDecFifoStsBase>:
1ffa12cc:	00000000                                ....

1ffa12d0 <g_pDecFifoStsTab>:
1ffa12d0:	00000000                                ....

1ffa12d4 <g_ucDecFifoRp>:
	...

1ffa12d6 <g_NormalDsgFifoHead>:
	...

1ffa12d8 <g_NormalDsgFifoTail>:
1ffa12d8:	00000000                                ....

1ffa12dc <l_ulMcuID_946>:
1ffa12dc:	00000000                                ....

1ffa12e0 <l_pDsgReport_947>:
1ffa12e0:	00000000                                ....

1ffa12e4 <g_pCodeStaAddr>:
1ffa12e4:	00000000                                ....

1ffa12e8 <g_pNfcLogicPU>:
1ffa12e8:	00000000                                ....

1ffa12ec <g_ulRedDataDramBase_1136>:
1ffa12ec:	00000000                                ....

1ffa12f0 <g_ulRedDataOtfbBase_1137>:
1ffa12f0:	00000000                                ....

1ffa12f4 <g_pNfcq>:
1ffa12f4:	00000000                                ....

1ffa12f8 <g_pNfcCmdSts>:
1ffa12f8:	00000000                                ....

1ffa12fc <g_pNfcPRCQ>:
1ffa12fc:	00000000                                ....

1ffa1300 <g_pNfcPRCQQe>:
1ffa1300:	00000000                                ....

1ffa1304 <g_pNfcPRCQQeExt>:
1ffa1304:	00000000                                ....

1ffa1308 <g_pNfcTrigger>:
1ffa1308:	00000000                                ....

1ffa130c <l_bNfcSaveFwFlag>:
1ffa130c:	00000000                                ....

1ffa1310 <l_bNfcLoadFwFlag>:
1ffa1310:	00000000                                ....

1ffa1314 <g_ErrInjEn>:
1ffa1314:	00000000                                ....

1ffa1318 <g_tErrInj>:
	...

1ffa1320 <pNfLpustREG>:
1ffa1320:	00000000                                ....

1ffa1324 <pNfcLlunstREG>:
1ffa1324:	00000000                                ....

1ffa1328 <pNfcLLunSwBitmap>:
1ffa1328:	00000000                                ....

1ffa132c <g_pNfcqForHalDebug>:
1ffa132c:	00000000                                ....

1ffa1330 <l_ucSEID_1255>:
1ffa1330:	00000000                                ....

1ffa1334 <l_pSETrigSizeReg_1257>:
1ffa1334:	00000000                                ....

1ffa1338 <l_pSETypeReg_1258>:
1ffa1338:	00000000                                ....

1ffa133c <l_pSEStatusReg_1259>:
1ffa133c:	00000000                                ....

1ffa1340 <l_pUserTimerOutCallBack_1266>:
1ffa1340:	00000000                                ....

1ffa1344 <l_pTlInfo_1273>:
1ffa1344:	00000000                                ....

1ffa1348 <l_ulSectorCnt_1274>:
1ffa1348:	00000000                                ....

1ffa134c <l_ulSectorSize_1275>:
1ffa134c:	00000000                                ....

1ffa1350 <l_ulWritePtr_1276>:
1ffa1350:	00000000                                ....

1ffa1354 <l_ulTracelogEnable_1277>:
1ffa1354:	00000000                                ....

1ffa1358 <l_pMcuTimerCallBack_1338>:
1ffa1358:	00000000                                ....

1ffa135c <g_bTlcMode>:
1ffa135c:	00000000                                ....

1ffa1360 <g_bEmEnable>:
1ffa1360:	00000000                                ....

1ffa1364 <g_bDecFifoEn>:
1ffa1364:	00000000                                ....

1ffa1368 <g_bRedOntf>:
1ffa1368:	00000000                                ....

1ffa136c <g_bLbaChk>:
1ffa136c:	00000000                                ....

1ffa1370 <pRRed>:
1ffa1370:	00000000                                ....

1ffa1374 <g_bSinglePln>:
1ffa1374:	00000000                                ....

1ffa1378 <g_pLoadReg>:
1ffa1378:	00000000                                ....

1ffa137c <g_pLLFDone>:
1ffa137c:	00000000                                ....

1ffa1380 <g_ulSsuInOtfbBase>:
1ffa1380:	00000000                                ....

1ffa1384 <g_ulSsuInDramBase>:
1ffa1384:	00000000                                ....

1ffa1388 <g_ulSsu1OtfbBase>:
1ffa1388:	00000000                                ....

1ffa138c <g_ulSsu1DramBase>:
1ffa138c:	00000000                                ....

1ffa1390 <g_ulCacheStatusAddr>:
1ffa1390:	00000000                                ....

1ffa1394 <pWrRed>:
1ffa1394:	00000000                                ....

1ffa1398 <g_pPattQ>:
1ffa1398:	00000000                                ....

1ffa139c <g_pPattStsQ>:
1ffa139c:	00000000                                ....

1ffa13a0 <g_pPattQDptr>:
1ffa13a0:	00000000                                ....

1ffa13a4 <g_ucTestPuStart>:
	...

1ffa13a5 <g_ucTestPuEnd>:
	...

1ffa13a6 <g_ucTestLunStart>:
	...

1ffa13a7 <g_ucTestLunEnd>:
	...

1ffa13a8 <g_bSsuEn>:
1ffa13a8:	00000000                                ....

1ffa13ac <g_bSsu0DramEn>:
1ffa13ac:	00000000                                ....

1ffa13b0 <g_bSsu1DramEn>:
1ffa13b0:	00000000                                ....

1ffa13b4 <g_bRawDataRead>:
1ffa13b4:	00000000                                ....

1ffa13b8 <g_bCacheStsEn>:
1ffa13b8:	00000000                                ....

1ffa13bc <g_usTestBlkStart>:
	...

1ffa13be <g_usTestBlkEnd>:
	...

1ffa13c0 <g_usTestPageStart>:
	...

1ffa13c2 <g_usTestPageEnd>:
	...

1ffa13c4 <g_bForceRetryEn>:
1ffa13c4:	00000000                                ....

1ffa13c8 <g_ucEntryIndex>:
1ffa13c8:	00000000                                ....

1ffa13cc <l_aChainNumMgr>:
1ffa13cc:	00000000                                ....

1ffa13d0 <l_ulMcuID_2022>:
1ffa13d0:	00000000                                ....

1ffa13d4 <l_pHsgReport_2023>:
1ffa13d4:	00000000                                ....

1ffa13d8 <l_pHwDebugInfo_2027>:
1ffa13d8:	00000000                                ....

1ffa13dc <l_ucMyMcuIndex_2028>:
1ffa13dc:	00000000                                ....

1ffa13e0 <l_bHwDebugTraceEn_2031>:
1ffa13e0:	00000000                                ....

1ffa13e4 <l_ulDrqBaseAddr_2035>:
1ffa13e4:	00000000                                ....

1ffa13e8 <l_ulDwqBaseAddr_2041>:
	...

1ffa13f0 <pPBIT>:
	...

1ffa1470 <pVBT>:
	...

1ffa14f0 <g_PuInfo>:
	...

1ffa1570 <g_SearchEngineParam_357>:
	...

1ffa16e0 <l_aTLunStsBmp_505>:
	...

1ffa1770 <l_aLunInPU_511>:
	...

1ffa1780 <l_aTLunArbBmp_512>:
	...

1ffa17d0 <g_aBrthLunMap_544>:
	...

1ffa17f0 <l_aExtHFlashStatus_647>:
	...

1ffa1810 <l_aXorMapTable_691>:
	...

1ffa1820 <g_aNormalDsgFifo>:
	...

1ffa1860 <l_aKeyData_962>:
	...

1ffa1a60 <l_aPhyPUMap_1131>:
	...

1ffa1a80 <l_aXorE_1313>:
	...

1ffa1ae0 <g_aStartTimer>:
	...

1ffa1b10 <g_aEndTimer>:
	...

1ffa1b40 <l_aSLCPageMap_2060>:
	...

1ffa1f40 <g_reent_29>:
	...

Disassembly of section .mcu12.bss:

1ffd7c00 <.mcu12.bss_symbol_1482204275>:
.mcu12.bss_symbol_1482204275():
1ffd7c00:	00000000                                ....

1ffd7c04 <l_ulPbnBindingTable>:
1ffd7c04:	00000000                                ....

1ffd7c08 <l_ucIsPbnBindingTableReady>:
1ffd7c08:	00000000                                ....

1ffd7c0c <l_aLunNeedSaveBBT_290>:
1ffd7c0c:	00000000                                ....

1ffd7c10 <ModuleEvent>:
	...

1ffd7c20 <ModuleEventParameter>:
	...

1ffd7c60 <g_ulDbgEvent>:
1ffd7c60:	00000000                                ....

1ffd7c64 <g_ulDbgPara1>:
1ffd7c64:	00000000                                ....

1ffd7c68 <g_ulDbgPara2>:
1ffd7c68:	00000000                                ....

1ffd7c6c <g_ulDbgPara3>:
1ffd7c6c:	00000000                                ....

Disassembly of section .WindowVectors.text:

20000000 <_pre_start>:
_pre_start():
20000000:	0b0985        	call0	2000b09c <_start>

20000003 <_pre_start+0x3>:
	...

20000004 <_save_int_ps>:
_save_int_ps():
20000004:	0300e0        	rsr.lbeg	a14
20000007:	0301d0        	rsr.lend	a13
2000000a:	0302c0        	rsr.lcount	a12
2000000d:	f00d      	ret.n

2000000f <_save_int_ps+0xb>:
	...

20000010 <_rest_int_ps>:
_rest_int_ps():
20000010:	1302c0        	wsr.lcount	a12
20000013:	1301d0        	wsr.lend	a13
20000016:	1300e0        	wsr.lbeg	a14
20000019:	f00d      	ret.n

Disassembly of section .Level2InterruptVector.text:

20000180 <_Level2Vector>:
_Level2Vector():
20000180:	13d210        	wsr.excsave2	a1
20000183:	408040        	rotw	4
20000186:	61d210        	xsr.excsave2	a1
20000189:	0303f0        	rsr.sar	a15
2000018c:	ffe745        	call0	20000004 <_save_int_ps>
2000018f:	09e105        	call0	20009fa0 <HAL_FlashIntEntry>
20000192:	ffe7c5        	call0	20000010 <_rest_int_ps>
20000195:	1303f0        	wsr.sar	a15
20000198:	4080c0        	rotw	-4
2000019b:	003210        	rfi	2

Disassembly of section .Level3InterruptVector.text:

200001c0 <_Level3Vector>:
_Level3Vector():
200001c0:	13d310        	wsr.excsave3	a1
200001c3:	408040        	rotw	4
200001c6:	61d310        	xsr.excsave3	a1
200001c9:	0303f0        	rsr.sar	a15
200001cc:	ffe345        	call0	20000004 <_save_int_ps>
200001cf:	09dd45        	call0	20009fa4 <HAL_SATAIntEntry>
200001d2:	ffe3c5        	call0	20000010 <_rest_int_ps>
200001d5:	1303f0        	wsr.sar	a15
200001d8:	4080c0        	rotw	-4
200001db:	003310        	rfi	3

Disassembly of section .Level4InterruptVector.text:

20000200 <_Level4Vector>:
_Level4Vector():
20000200:	13d410        	wsr.excsave4	a1
20000203:	408040        	rotw	4
20000206:	61d410        	xsr.excsave4	a1
20000209:	0303f0        	rsr.sar	a15
2000020c:	ffdf45        	call0	20000004 <_save_int_ps>
2000020f:	09dac5        	call0	20009fbc <HAL_L4TimerIntEntry>
20000212:	ffdfc5        	call0	20000010 <_rest_int_ps>
20000215:	1303f0        	wsr.sar	a15
20000218:	4080c0        	rotw	-4
2000021b:	003410        	rfi	4

Disassembly of section .Level5InterruptVector.text:

20000240 <_Level5Vector>:
_Level5Vector():
20000240:	13d510        	wsr.excsave5	a1
20000243:	408040        	rotw	4
20000246:	61d510        	xsr.excsave5	a1
20000249:	0303f0        	rsr.sar	a15
2000024c:	ffdb45        	call0	20000004 <_save_int_ps>
2000024f:	09d585        	call0	20009fa8 <HAL_L5TimerIntEntry>
20000252:	ffdbc5        	call0	20000010 <_rest_int_ps>
20000255:	1303f0        	wsr.sar	a15
20000258:	4080c0        	rotw	-4
2000025b:	003510        	rfi	5

Disassembly of section .DebugExceptionVector.text:

20000280 <_DebugExceptionVector>:
_DebugExceptionVector():
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/xtos/debug-vector.S:45
20000280:	13d620        	wsr.excsave6	a2
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/xtos/debug-vector.S:46
20000283:	827c      	movi.n	a2, -8
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/xtos/debug-vector.S:47
20000285:	005100        	simcall

20000288 <_DebugExceptionVector+0x8>:
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/xtos/debug-vector.S:59
20000288:	ffff06        	j	20000288 <_DebugExceptionVector+0x8>

Disassembly of section .NMIExceptionVector.text:

200002c0 <_NMIExceptionVector>:
_NMIExceptionVector():
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/xtos/nmi-vector.S:56
200002c0:	003710        	rfi	7

Disassembly of section .KernelExceptionVector.text:

20000300 <_KernelExceptionVector>:
_KernelExceptionVector():
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/xtos/kernel-vector.S:64
20000300:	004100        	break	1, 0
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/xtos/kernel-vector.S:72
20000303:	fffe46        	j	20000300 <_KernelExceptionVector>

Disassembly of section .UserExceptionVector.text:

20000340 <_UserExceptionVector>:
_UserExceptionVector():
20000340:	13d110        	wsr.excsave1	a1
20000343:	408040        	rotw	4
20000346:	61d110        	xsr.excsave1	a1
20000349:	0303f0        	rsr.sar	a15
2000034c:	ffcb45        	call0	20000004 <_save_int_ps>
2000034f:	09ca85        	call0	20009ff8 <HAL_UserExcpEntry>
20000352:	ffcbc5        	call0	20000010 <_rest_int_ps>
20000355:	1303f0        	wsr.sar	a15
20000358:	4080c0        	rotw	-4
2000035b:	003000        	rfe

Disassembly of section .DoubleExceptionVector.literal:

20000378 <_memmap_seg_iram0_DoubleExc_lit_end-0x8>:
20000378:	fff00010                                ....

Disassembly of section .DoubleExceptionVector.text:

200003c0 <_DoubleExceptionVector-0x10>:
200003c0:	03c030        	rsr.depc	a3
200003c3:	ffed61        	l32r	a6, 20000378 <_DoubleExceptionVector_literal_start>
200003c6:	0639      	s32i.n	a3, a6, 0
200003c8:	03e830        	rsr.exccause	a3
200003cb:	1639      	s32i.n	a3, a6, 4

200003cd <_DoubleExceptionVector-0x3>:
200003cd:	ffff06        	j	200003cd <_DoubleExceptionVector_text_start+0xd>

200003d0 <_DoubleExceptionVector>:
_DoubleExceptionVector():
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/xtos/double-vector.S:63
200003d0:	004140        	break	1, 4
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/xtos/double-vector.S:71
200003d3:	fffe46        	j	200003d0 <_DoubleExceptionVector>

Disassembly of section .ResetVector.text:

20000400 <_ResetVector>:
_ResetVector():
20000400:	000406        	j	20000414 <_ResetHandler>

20000403 <_ResetVector+0x3>:
	...

20000404 <_ResetVector+0x4>:
20000404:	00000000 20000000 00051044 20000000     ....... D...... 

20000414 <_ResetHandler>:
_ResetHandler():
20000414:	000c      	movi.n	a0, 0
20000416:	13e400        	wsr.intenable	a0
20000419:	fffa21        	l32r	a2, 20000404 <_ResetVector+0x4>
2000041c:	03eb30        	rsr.prid	a3
2000041f:	743030        	extui	a3, a3, 0, 8
20000422:	228c      	beqz.n	a2, 20000428 <_ResetHandler+0x14>
20000424:	03cc      	bnez.n	a3, 20000428 <_ResetHandler+0x14>
20000426:	0209      	s32i.n	a0, a2, 0

20000428 <_ResetHandler+0x14>:
20000428:	fff821        	l32r	a2, 20000408 <_ResetVector+0x8>
2000042b:	13e720        	wsr.vecbase	a2
2000042e:	531c      	movi.n	a3, 21
20000430:	136330        	wsr.atomctl	a3
20000433:	006120        	rsil	a2, 1
20000436:	fff521        	l32r	a2, 2000040c <_ResetVector+0xc>
20000439:	132820        	wsr.prefctl	a2

2000043c <unpackdone>:
2000043c:	fff531        	l32r	a3, 20000410 <_ResetVector+0x10>
2000043f:	f03d      	nop.n
20000441:	0003c0        	callx0	a3

Disassembly of section .text:

20000700 <_stext>:
_stext():
20000700:	1ff83a00 1ffa135c 000048f0 00002414     .:..\....H...$..
20000710:	1ff84000 1ff88000 400a8110 1ffa1200     .@.........@....
20000720:	400a02b8 1ffa19e0 1ff80000 1ff87204     ...@.........r..
20000730:	1ff87400 400a0000 400a0010 400a0310     .t.....@...@...@
20000740:	1ffd7c00 ffefffff 400a0300 400a02e0     .|.........@...@
20000750:	400a02f0 0000ffff 400a0338 87ffffff     ...@....8..@....
20000760:	80000000 00018000 1ffa1884 1fffffff     ................
20000770:	1ff81000 400a013c 1ff7fe00 00020000     ....<..@........
20000780:	1ff81b2c fffdffff 1ff7ffff 2fffffff     ,............../
20000790:	400a0354 1ff81db0 3fffffff c0000000     T..@.......?....
200007a0:	d0000000 00100000 00000890 400a0100     ...............@
200007b0:	1ffa1790 00008000 0000c000 00010000     ................
200007c0:	fc07ffff dfffffff bfffffff ffffe00f     ................
200007d0:	400a03bc 000fffff fffff7ff 00000800     ...@............
200007e0:	003fffff 00001000 1ffd8e08 fffff000     ..?.............
200007f0:	ffc00000 00000fff 7fffffff 400a03d0     ...............@
20000800:	1ffa1724 fff30000 0007ffff 10000000     $...............
20000810:	00004000 1ffa188c 1ffa1504 1ffa1584     .@..............
20000820:	400a03e0 1ffa0800 01000000 400a0114     ...@...........@
20000830:	400a0128 400a0424 1ffa1a44 400a438c     (..@$..@D....C.@
20000840:	1ffa1514 0c000000 1ffa14e4 400a043c     ............<..@
20000850:	ffffefff 1ffa12b0 02000000 1ff81b00     ................
20000860:	1ff81b04 1ff81b08 1ff81b0c 1ff81b10     ................
20000870:	1ff81b14 1ff81b18 1ff81b1c 1ff81b20     ............ ...
20000880:	1ff81b24 1ff81b28 1ff81b6c 1ff81b70     $...(...l...p...
20000890:	1ff81b74 1ff81b78 1ff81b7c 1ff81b50     t...x...|...P...
200008a0:	1ff81b54 1ff81b58 fdffffff 1ff83d08     T...X........=..
200008b0:	400a0444 1ff83d0c 1ff83d10 1ff83d14     D..@.=...=...=..
200008c0:	1ff83d18 1ff83d1c 1ff83d20 1ff83d24     .=...=.. =..$=..
200008d0:	1ff83d28 ffdfffff 1ff83d50 1ff83d54     (=......P=..T=..
200008e0:	1ff83d58 00200000 1ff83d00 1ff83d04     X=.... ..=...=..
200008f0:	1ff83d6c 1ff83d70 1ff83d74 1ff83d78     l=..p=..t=..x=..
20000900:	1ff83d7c 400a0b40 000186a0 0000c350     |=..@..@....P...
20000910:	00007530 400a0b30 fffff03f 400a0bd4     0u..0..@?......@
20000920:	0000ff00 400a449c 400a46f8 400a02e0     .....D.@.F.@...@
20000930:	400a02f0 400a0300 400a0cdc 400a0154     ...@...@...@T..@
20000940:	400a0230 c3ffffff 40000000 400a018c     0..@.......@...@
20000950:	400a01aa 4000c000 1ffa14f4 1ffa16f0     ...@...@........
20000960:	400a0170 400a1314 400a1330 400a134c     p..@...@0..@L..@
20000970:	400a1380 400a13c4 400a0020 400a13f0     ...@...@ ..@...@
20000980:	400a1418 400a143c 400a77b8 400a5f88     ...@<..@.w.@._.@
20000990:	400a7918 400a5f84 400a5f70 400a77c0     .y.@._.@p_.@.w.@
200009a0:	400a786c 400a699c 400a7504 400a74c8     lx.@.i.@.u.@.t.@
200009b0:	400a6754 400a1468 400a03bc 400a03d0     Tg.@h..@...@...@
200009c0:	0000c400 400a148c 400a0338 fff00000     .......@8..@....
200009d0:	1ffa128c 400a0024 400a14ac 400a1500     ....$..@...@...@
200009e0:	400a6bc8 1ffa12cc 400a1534 400a1578     .k.@....4..@x..@
200009f0:	400a1738 400a15b4 400a15e4 400a1620     8..@...@...@ ..@
20000a00:	400a1654 400a16c4 400a0044 1ffa1318     T..@...@D..@....
20000a10:	1ffa12d0 400a01f8 400a01d8 ffbfffff     .......@...@....
20000a20:	f87fffff 400a1854 400a01d0 400a17e0     ....T..@...@...@
20000a30:	400a180c 400a17b0 400a17c8 400a1834     ...@...@...@4..@
20000a40:	400a6dec 400a7338 400a72d0 400a75b8     .m.@8s.@.r.@.u.@
20000a50:	400a7434 400a73bc 1ffa12e0 400a1878     4t.@.s.@....x..@
20000a60:	400a006c 1ffa12c0 80000003 400a18b4     l..@...........@
20000a70:	ffe3ffff 400a18e0 400a6540 400a634c     .......@@e.@Lc.@
20000a80:	400a5fec 400a6154 400a6c10 400a7054     ._.@Ta.@.l.@Tp.@
20000a90:	400a0090 400a1904 400a1940 400a1984     ...@...@@..@...@
20000aa0:	400a19c4 400a1a0c 400a1a48 400a0098     ...@...@H..@...@
20000ab0:	400a1a90 400a1acc 400a1b08 400a1b4c     ...@...@...@L..@
20000ac0:	400a1b8c 400a1bc8 400a1c08 400a1c34     ...@...@...@4..@
20000ad0:	400a1c60 400a1c8c fffeffff 1ff80e00     `..@...@........
20000ae0:	400a1854 400a17e0 400a180c 400a17b0     T..@...@...@...@
20000af0:	400a17c8 400a1834 1ffa1300 400a00a0     ...@4..@.......@
20000b00:	400a1ee4 1ffa11f0 400a1f00 400a1534     ...@.......@4..@
20000b10:	400a1d34 400a1ec0 400a0200 fff0ffff     4..@...@...@....
20000b20:	400a1eac 400a1cf4 400a1d14 400a1e98     ...@...@...@...@
20000b30:	400a1e7c 400a1e60 400a1e00 400a1e30     |..@`..@...@0..@
20000b40:	400a1ddc 400a1dc4 400a1da8 400a1cb8     ...@...@...@...@
20000b50:	400a1d80 400a1d68 400a1d50 400a7540     ...@h..@P..@@u.@
20000b60:	1ffa1904 400a5f3c 400a5e64 400a1f94     ....<_.@d^.@...@
20000b70:	400a1fac 400a1fc4 400a1fdc 60000000     ...@...@...@...`
20000b80:	400a1ff4 60000400 400a200c 60000800     ...@...`. .@...`
20000b90:	003e1e00 0001e0e0 00002220 00070004     ..>..... "......
20000ba0:	00090008 fff0c000 fff0c400 1ffa1208     ................
20000bb0:	400a2024 400a7724 400a7674 400a7648     $ .@$w.@tv.@Hv.@
20000bc0:	400a2058 400a2074 400a2040 fff90000     X .@t .@@ .@....
20000bd0:	07800000 48000000 13800000 00005500     .......H.....U..
20000be0:	200b2020 1ff7ff00 400a7754 fff02d0c       . ....Tw.@.-..
20000bf0:	feffffff ffff0000 00001120 005ffffb     ........ ....._.
20000c00:	bfbe8000 005ffffc 400a20d8 400a2090     ......_.. .@. .@
20000c10:	00003c40 400a2168 400a2120 000f4400     @<..h!.@ !.@.D..
20000c20:	400a21e4 400a21b0 e002e200 00006200     .!.@.!.@.....b..
20000c30:	400a223c 400a2218 400a7d94 400a7d78     <".@.".@.}.@x}.@
20000c40:	1ffd1e00 1ff87380 1ff87100 1ff87200     .....s...q...r..
20000c50:	1ff87300 1ff87000 1ff87080 1ff83b3c     .s...p...p..<;..
20000c60:	1ff83b40 fffbffff 1ff83b88 1ff83b34     @;.......;..4;..
20000c70:	1ff83b38 1ff83b8c 1ffa11f4 fff02ed4     8;...;..........
20000c80:	400a2350 40178000 fff02d00 400a2390     P#.@...@.-...#.@
20000c90:	00178000 400a23b0 00123c00 400a23d0     .....#.@.<...#.@
20000ca0:	1ff81b4c 1ff81b4d 1ff81b4e 1ff83d4c     L...M...N...L=..
20000cb0:	1ff83d4d 1ff83d4e 1ff81a00 ffffbfff     M=..N=..........
20000cc0:	00002000 0000180b 1ffa169c 1ffa1570     . ..........p...
20000cd0:	1ffa1568 1ffa15e0 00003003 00002001     h........0... ..
20000ce0:	400a0210 ffe06f80 05f5e100 400a23f0     ...@.o.......#.@
20000cf0:	1ffa2038 40a17ffc 1ffd1a00 fff0ec00     8 .....@........
20000d00:	fff03c00 40142000 fff0bc00 40172000     .<... .@..... .@
20000d10:	40418000 22112222 1ffc8000 40a18800     ..A@"".".......@
20000d20:	fff0cc00 00080000 400a8864 400a8850     ........d..@P..@
20000d30:	400a8718 400a86e4 400a86c8 400a86b4     ...@...@...@...@
20000d40:	400a85c0 400a82c8 400a81f0 400a8124     ...@...@...@$..@
20000d50:	1ffa0800 1ff81f3c 1ffa11f0 1ffd7c00     ....<........|..
20000d60:	1ffd7c70 1ffa0c90 3c6ef35f 0019660d     p|......_.n<.f..
20000d70:	400a1d4c 1ffa1f40 e0000000              L..@@.......

20000d7c <TL_TraceLog>:
TL_TraceLog():
D:\IM_3D_TLC\firmware\HAL\Trace/HAL_TraceLog.c:269
    TL_LOG_HEADER *pTlLogHeader;
    TL_LOG_HEADER tTlLogHeader;

    if(FALSE == l_ulTracelogEnable)
    {
        return;
20000d7c:	f00d      	ret.n

20000d7e <TL_TraceLog+0x2>:
	...

20000d80 <HAL_SgeGetAllTransFsh>:
HAL_SgeGetAllTransFsh():
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:684
    20141119 Victor Zhang  Create    
========================================================================*/
GLOBAL BOOL HAL_SgeGetAllTransFsh(void)
{
    SGE_MODE_CLKEN_REG tReg;
    tReg.ulValue = rModeClkEn;
20000d80:	fe6021        	l32r	a2, 20000700 <_stext>
20000d83:	0020c0        	memw
20000d86:	402222        	l32i	a2, a2, 0x100
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:685
    return (BOOL)(tReg.bsAllTransFsh);
20000d89:	052120        	extui	a2, a2, 17, 1
20000d8c:	f00d      	ret.n

20000d8e <HAL_SgeGetAllTransFsh+0xe>:
	...

20000d90 <HAL_SgeGetAllEngIdle>:
HAL_SgeGetAllEngIdle():
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:667
    20141119   Victor Zhang  Create    
========================================================================*/
GLOBAL BOOL HAL_SgeGetAllEngIdle(void)
{
    SGE_MODE_CLKEN_REG tReg;
    tReg.ulValue = rModeClkEn;
20000d90:	fe5c21        	l32r	a2, 20000700 <_stext>
20000d93:	0020c0        	memw
20000d96:	402222        	l32i	a2, a2, 0x100
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:668
    return (BOOL)(tReg.bsAllEngIdle);
20000d99:	052020        	extui	a2, a2, 16, 1
20000d9c:	f00d      	ret.n

20000d9e <HAL_SgeGetAllEngIdle+0xe>:
	...

20000da0 <HAL_HwDebugTrace>:
HAL_HwDebugTrace():
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:210
    20140729    Gavin   created
    20141029    Gavin   disable for MixVector to avoid save area overflow.
    20150317    Gavin   add checking before tracing
------------------------------------------------------------------------------*/
void HAL_HwDebugTrace(U8 ucTag, U16 usTraceType, void *pEntry, U16 usEntryId, NFCQ_ENTRY *pNfcqEntry)
{
20000da0:	e0c112        	addi	a1, a1, -32
20000da3:	51c9      	s32i.n	a12, a1, 20
20000da5:	61d9      	s32i.n	a13, a1, 24
20000da7:	03cd      	mov.n	a12, a3
20000da9:	043d      	mov.n	a3, a4
20000dab:	fe5641        	l32r	a4, 20000704 <_stext+0x4>
20000dae:	4109      	s32i.n	a0, a1, 16
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:222
    NORMAL_DSG_ENTRY *pDsgEntry;
    TRACE_HCT_INFO *pTraceHctInfo;
    TRACE_SGE_INFO *pTraceSgeInfo;
    TRACE_TAG_INFO *pTraceTagInfo = &l_pHwDebugInfo->aTraceTagInfo[ucTag];

    if (FALSE == l_bHwDebugTraceEn)
20000db0:	212402        	l32i	a0, a4, 132
20000db3:	3169      	s32i.n	a6, a1, 12
20000db5:	063016        	beqz	a0, 20000e1c <HAL_HwDebugTrace+0x7c>
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:227
    {
        return;
    }

    switch (usTraceType)
20000db8:	492ce6        	bgei	a12, 2, 20000e05 <HAL_HwDebugTrace+0x65>
20000dbb:	046c96        	bltz	a12, 20000e05 <HAL_HwDebugTrace+0x65>
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:234
        case RCD_FCQ:
        case RCD_WBQ:
            pTraceHctInfo = &pTraceTagInfo->tTraceHctInfo;
            
            /* get current descriptor index and save area offset */
            ulDescIndex = pTraceHctInfo->ulHctDescIndex;
20000dbe:	fe5261        	l32r	a6, 20000708 <_stext+0x8>
20000dc1:	1f2482        	l32i	a8, a4, 124
20000dc4:	d12620        	mul16s	a2, a6, a2
20000dc7:	282a      	add.n	a2, a8, a2
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:235
            ulEntrySaveOffset = pTraceHctInfo->ulFcqWbqSaveOffset;
20000dc9:	1268      	l32i.n	a6, a2, 4
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:234
        case RCD_FCQ:
        case RCD_WBQ:
            pTraceHctInfo = &pTraceTagInfo->tTraceHctInfo;
            
            /* get current descriptor index and save area offset */
            ulDescIndex = pTraceHctInfo->ulHctDescIndex;
20000dcb:	0278      	l32i.n	a7, a2, 0
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:245

            //record FCQ/WBQ's location in save area
            pTraceHctInfo->aHctDesc[ulDescIndex].ulFcqWbqEntryOffset = ulEntrySaveOffset;

            /* back-up FCQ/WBQ */
            COM_MemCpy((U32 *)&pTraceHctInfo->ucFcqWbqBuff[ulEntrySaveOffset],
20000dcd:	026a      	add.n	a0, a2, a6
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:238
            /* get current descriptor index and save area offset */
            ulDescIndex = pTraceHctInfo->ulHctDescIndex;
            ulEntrySaveOffset = pTraceHctInfo->ulFcqWbqSaveOffset;

            /* add one descriptor */
            pTraceHctInfo->aHctDesc[ulDescIndex].eEntryType = usTraceType;
20000dcf:	b07720        	addx8	a7, a7, a2
20000dd2:	0457c2        	s16i	a12, a7, 8
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:239
            pTraceHctInfo->aHctDesc[ulDescIndex].usEntryId = usEntryId;
20000dd5:	055752        	s16i	a5, a7, 10
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:242

            //record FCQ/WBQ's location in save area
            pTraceHctInfo->aHctDesc[ulDescIndex].ulFcqWbqEntryOffset = ulEntrySaveOffset;
20000dd8:	3769      	s32i.n	a6, a7, 12
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:85
{
    U32 i;

    for (i = 0 ; i < LengthDW; i++)
    {
        *TargetAddr++ = *SrcAddr++;
20000dda:	03a8      	l32i.n	a10, a3, 0
20000ddc:	1260a2        	s32i	a10, a0, 72
20000ddf:	1398      	l32i.n	a9, a3, 4
20000de1:	136092        	s32i	a9, a0, 76
20000de4:	2388      	l32i.n	a8, a3, 8
20000de6:	146082        	s32i	a8, a0, 80
20000de9:	3378      	l32i.n	a7, a3, 12
20000deb:	156072        	s32i	a7, a0, 84
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:362
        default:
            //can not get here
            DBG_Getch();
    }
#endif        
    return;
20000dee:	4108      	l32i.n	a0, a1, 16
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:250
            COM_MemCpy((U32 *)&pTraceHctInfo->ucFcqWbqBuff[ulEntrySaveOffset],
                        (U32 *)pEntry, sizeof(HCT_FCQ_WBQ)/4);

            /* update descriptor index and save area offset for next calling */
            pTraceHctInfo->ulHctDescIndex++;
            pTraceHctInfo->ulFcqWbqSaveOffset += sizeof(HCT_FCQ_WBQ);
20000df0:	12b8      	l32i.n	a11, a2, 4
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:249
            /* back-up FCQ/WBQ */
            COM_MemCpy((U32 *)&pTraceHctInfo->ucFcqWbqBuff[ulEntrySaveOffset],
                        (U32 *)pEntry, sizeof(HCT_FCQ_WBQ)/4);

            /* update descriptor index and save area offset for next calling */
            pTraceHctInfo->ulHctDescIndex++;
20000df2:	02c8      	l32i.n	a12, a2, 0
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:250
            pTraceHctInfo->ulFcqWbqSaveOffset += sizeof(HCT_FCQ_WBQ);
20000df4:	10cbb2        	addi	a11, a11, 16
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:249
            /* back-up FCQ/WBQ */
            COM_MemCpy((U32 *)&pTraceHctInfo->ucFcqWbqBuff[ulEntrySaveOffset],
                        (U32 *)pEntry, sizeof(HCT_FCQ_WBQ)/4);

            /* update descriptor index and save area offset for next calling */
            pTraceHctInfo->ulHctDescIndex++;
20000df7:	cc1b      	addi.n	a12, a12, 1
20000df9:	02c9      	s32i.n	a12, a2, 0
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:250
            pTraceHctInfo->ulFcqWbqSaveOffset += sizeof(HCT_FCQ_WBQ);
20000dfb:	12b9      	s32i.n	a11, a2, 4
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:362
        default:
            //can not get here
            DBG_Getch();
    }
#endif        
    return;
20000dfd:	51c8      	l32i.n	a12, a1, 20
20000dff:	20c112        	addi	a1, a1, 32
20000e02:	f00d      	ret.n

20000e04 <HAL_HwDebugTrace+0x64>:
	...

20000e05 <HAL_HwDebugTrace+0x65>:
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:227
    if (FALSE == l_bHwDebugTraceEn)
    {
        return;
    }

    switch (usTraceType)
20000e05:	180c      	movi.n	a8, 1
20000e07:	026ce6        	bgei	a12, 6, 20000e0d <HAL_HwDebugTrace+0x6d>
20000e0a:	422ce6        	bgei	a12, 2, 20000e50 <HAL_HwDebugTrace+0xb0>
20000e0d:	faccd2        	addi	a13, a12, -6
20000e10:	155d16        	beqz	a13, 20000f69 <HAL_HwDebugTrace+0x1c9>
20000e13:	117c26        	beqi	a12, 7, 20000e28 <HAL_HwDebugTrace+0x88>
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:359

            break;
            
        default:
            //can not get here
            DBG_Getch();
20000e16:	fe4001        	l32r	a0, 20000718 <_stext+0x18>
20000e19:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:362
    }
#endif        
    return;
20000e1c:	51c8      	l32i.n	a12, a1, 20
20000e1e:	61d8      	l32i.n	a13, a1, 24
20000e20:	4108      	l32i.n	a0, a1, 16
20000e22:	20c112        	addi	a1, a1, 32
20000e25:	f00d      	ret.n

20000e27 <HAL_HwDebugTrace+0x87>:
	...

20000e28 <HAL_HwDebugTrace+0x88>:
20000e28:	61d8      	l32i.n	a13, a1, 24
20000e2a:	51c8      	l32i.n	a12, a1, 20
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:352

            break;

        case RCD_NFC_CHAIN:
            pTraceSgeInfo = &pTraceTagInfo->aTraceSgeInfo[l_ucMyMcuIndex];
            pTraceSgeInfo->usNfcTotalChain = usEntryId;
20000e2c:	1f2432        	l32i	a3, a4, 124
20000e2f:	800472        	l8ui	a7, a4, 128
20000e32:	fe3561        	l32r	a6, 20000708 <_stext+0x8>
20000e35:	fe3501        	l32r	a0, 2000070c <_stext+0xc>
20000e38:	d16620        	mul16s	a6, a6, a2
20000e3b:	d10070        	mul16s	a0, a0, a7
20000e3e:	336a      	add.n	a3, a3, a6
20000e40:	003a      	add.n	a0, a0, a3
20000e42:	6d5052        	s16i	a5, a0, 218
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:353
            pTraceSgeInfo->bAllNfcChainBuilt = TRUE;
20000e45:	356082        	s32i	a8, a0, 212
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:362
        default:
            //can not get here
            DBG_Getch();
    }
#endif        
    return;
20000e48:	4108      	l32i.n	a0, a1, 16
20000e4a:	20c112        	addi	a1, a1, 32
20000e4d:	f00d      	ret.n

20000e4f <HAL_HwDebugTrace+0xaf>:
	...

20000e50 <HAL_HwDebugTrace+0xb0>:
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
    20141028    Gavin   change attribute to "INLINE"
------------------------------------------------------------------------------*/
INLINE U32 HAL_GetMcuId(void)
{
    U32 ulMcuId;
    ulMcuId = XT_RSR_PRID();
20000e50:	03eb70        	rsr.prid	a7
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:258
            
        case RCD_DRQ:
        case RCD_DWQ:
        case RCD_SGQ_R:
        case RCD_SGQ_W:
            if (MCU0_ID == HAL_GetMcuId())
20000e53:	c51726        	beqi	a7, 1, 20000e1c <HAL_HwDebugTrace+0x7c>
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:263
            {
                //MCU0 has its own DRQ/DWQ to process non-media access, we do not record DRQ/DWQ for that usage
                return;
            }
            pTraceSgeInfo = &pTraceTagInfo->aTraceSgeInfo[l_ucMyMcuIndex];
20000e56:	fe2e91        	l32r	a9, 20000710 <_stext+0x10>
20000e59:	0139      	s32i.n	a3, a1, 0
20000e5b:	ffa2a2        	movi	a10, 0x2ff
20000e5e:	1f2472        	l32i	a7, a4, 124
20000e61:	8004d2        	l8ui	a13, a4, 128
20000e64:	fe2a61        	l32r	a6, 2000070c <_stext+0xc>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:85
20000e67:	0308      	l32i.n	a0, a3, 0
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:263
20000e69:	fe2781        	l32r	a8, 20000708 <_stext+0x8>
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:279

            //record first HSG's location in save area
            pTraceSgeInfo->aSgeDesc[ulDescIndex].ulHsgEntryOffset = ulEntrySaveOffset;

            //back-up all HSG in chain
            pHsgEntry = (HSG_ENTRY *)HAL_GetHsgAddr(((SGE_ENTRY *)pEntry)->bsHsgPtr);
20000e6c:	95b000        	extui	a11, a0, 16, 10
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:263
            if (MCU0_ID == HAL_GetMcuId())
            {
                //MCU0 has its own DRQ/DWQ to process non-media access, we do not record DRQ/DWQ for that usage
                return;
            }
            pTraceSgeInfo = &pTraceTagInfo->aTraceSgeInfo[l_ucMyMcuIndex];
20000e6f:	d18820        	mul16s	a8, a8, a2
20000e72:	d166d0        	mul16s	a6, a6, a13
20000e75:	778a      	add.n	a7, a7, a8
20000e77:	667a      	add.n	a6, a6, a7
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:267
            
            /* get current descriptor index and save area offset */
            ulDescIndex = pTraceSgeInfo->ulSgeDescIndex;
            ulEntrySaveOffset = pTraceSgeInfo->ulEntrySaveOffset;
20000e79:	3326d2        	l32i	a13, a6, 204
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:266
                return;
            }
            pTraceSgeInfo = &pTraceTagInfo->aTraceSgeInfo[l_ucMyMcuIndex];
            
            /* get current descriptor index and save area offset */
            ulDescIndex = pTraceSgeInfo->ulSgeDescIndex;
20000e7c:	322682        	l32i	a8, a6, 200
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:263
            if (MCU0_ID == HAL_GetMcuId())
            {
                //MCU0 has its own DRQ/DWQ to process non-media access, we do not record DRQ/DWQ for that usage
                return;
            }
            pTraceSgeInfo = &pTraceTagInfo->aTraceSgeInfo[l_ucMyMcuIndex];
20000e7f:	01d672        	addmi	a7, a6, 0x100
20000e82:	c8c772        	addi	a7, a7, -56
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:270
            /* get current descriptor index and save area offset */
            ulDescIndex = pTraceSgeInfo->ulSgeDescIndex;
            ulEntrySaveOffset = pTraceSgeInfo->ulEntrySaveOffset;

            /* add one descriptor */
            pTraceSgeInfo->aSgeDesc[ulDescIndex].eEntryType = usTraceType;
20000e85:	1188c0        	slli	a8, a8, 4
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:263
            if (MCU0_ID == HAL_GetMcuId())
            {
                //MCU0 has its own DRQ/DWQ to process non-media access, we do not record DRQ/DWQ for that usage
                return;
            }
            pTraceSgeInfo = &pTraceTagInfo->aTraceSgeInfo[l_ucMyMcuIndex];
20000e88:	2179      	s32i.n	a7, a1, 8
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:270
            /* get current descriptor index and save area offset */
            ulDescIndex = pTraceSgeInfo->ulSgeDescIndex;
            ulEntrySaveOffset = pTraceSgeInfo->ulEntrySaveOffset;

            /* add one descriptor */
            pTraceSgeInfo->aSgeDesc[ulDescIndex].eEntryType = usTraceType;
20000e8a:	1189      	s32i.n	a8, a1, 4
20000e8c:	886a      	add.n	a8, a8, a6
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:271
            pTraceSgeInfo->aSgeDesc[ulDescIndex].usEntryId = usEntryId;
20000e8e:	6f5852        	s16i	a5, a8, 222
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:270
            /* get current descriptor index and save area offset */
            ulDescIndex = pTraceSgeInfo->ulSgeDescIndex;
            ulEntrySaveOffset = pTraceSgeInfo->ulEntrySaveOffset;

            /* add one descriptor */
            pTraceSgeInfo->aSgeDesc[ulDescIndex].eEntryType = usTraceType;
20000e91:	6e58c2        	s16i	a12, a8, 220
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:85
20000e94:	386802        	s32i	a0, a8, 224
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:276
            pTraceSgeInfo->aSgeDesc[ulDescIndex].usEntryId = usEntryId;
            COM_MemCpy((U32 *)&pTraceSgeInfo->aSgeDesc[ulDescIndex].tSgeEntry,
                        (U32 *)pEntry, sizeof(SGE_ENTRY)/4);

            //record first HSG's location in save area
            pTraceSgeInfo->aSgeDesc[ulDescIndex].ulHsgEntryOffset = ulEntrySaveOffset;
20000e97:	3968d2        	s32i	a13, a8, 228
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:221
History:
    201409011    Tobey   uniform coding style
------------------------------------------------------------------------------*/
U32 HAL_GetHsgAddr(U16 usHsgId)
{
    if (usHsgId >= HSG_NUM)
20000e9a:	02bab7        	bgeu	a10, a11, 20000ea0 <HAL_HwDebugTrace+0x100>
20000e9d:	002dc6        	j	20000f58 <HAL_HwDebugTrace+0x1b8>
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:223
    {
        DBG_Getch();
20000ea0:	112bc0        	slli	a2, a11, 4
20000ea3:	229a      	add.n	a2, a2, a9
20000ea5:	000146        	j	20000eae <HAL_HwDebugTrace+0x10e>

20000ea8 <HAL_HwDebugTrace+0x108>:
	...

20000ea9 <HAL_HwDebugTrace+0x109>:
20000ea9:	1122c0        	slli	a2, a2, 4
20000eac:	229a      	add.n	a2, a2, a9
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:282

            //back-up all HSG in chain
            pHsgEntry = (HSG_ENTRY *)HAL_GetHsgAddr(((SGE_ENTRY *)pEntry)->bsHsgPtr);
            do
            {
                COM_MemCpy((U32 *)&pTraceSgeInfo->ucEntryBuff[ulEntrySaveOffset],
20000eae:	2138      	l32i.n	a3, a1, 8
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:85
20000eb0:	0278      	l32i.n	a7, a2, 0
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:282
20000eb2:	3d3a      	add.n	a3, a13, a3
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:284
                        (U32 *)pHsgEntry, sizeof(HSG_ENTRY)/4);
                ulEntrySaveOffset += sizeof(HSG_ENTRY);
20000eb4:	10cdd2        	addi	a13, a13, 16
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:282

            //back-up all HSG in chain
            pHsgEntry = (HSG_ENTRY *)HAL_GetHsgAddr(((SGE_ENTRY *)pEntry)->bsHsgPtr);
            do
            {
                COM_MemCpy((U32 *)&pTraceSgeInfo->ucEntryBuff[ulEntrySaveOffset],
20000eb7:	04d332        	addmi	a3, a3, 0x400
20000eba:	14c332        	addi	a3, a3, 20
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:85
20000ebd:	0379      	s32i.n	a7, a3, 0
20000ebf:	1268      	l32i.n	a6, a2, 4
20000ec1:	1369      	s32i.n	a6, a3, 4
20000ec3:	2258      	l32i.n	a5, a2, 8
20000ec5:	2359      	s32i.n	a5, a3, 8
20000ec7:	3248      	l32i.n	a4, a2, 12
20000ec9:	3349      	s32i.n	a4, a3, 12
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:286
                        (U32 *)pHsgEntry, sizeof(HSG_ENTRY)/4);
                ulEntrySaveOffset += sizeof(HSG_ENTRY);

                if (TRUE == pHsgEntry->bsLast)
20000ecb:	0228      	l32i.n	a2, a2, 0
20000ecd:	18e2a7        	bbsi	a2, 10, 20000ee9 <HAL_HwDebugTrace+0x149>
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:292
                {
                    break;//jump out of "while(1)" loop
                }
                else
                {
                    pHsgEntry = (HSG_ENTRY *)HAL_GetHsgAddr(pHsgEntry->bsNextHsgId);
20000ed0:	942020        	extui	a2, a2, 0, 10
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:221
History:
    201409011    Tobey   uniform coding style
------------------------------------------------------------------------------*/
U32 HAL_GetHsgAddr(U16 usHsgId)
{
    if (usHsgId >= HSG_NUM)
20000ed3:	d2ba27        	bgeu	a10, a2, 20000ea9 <HAL_HwDebugTrace+0x109>
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:223
    {
        DBG_Getch();
20000ed6:	fe1001        	l32r	a0, 20000718 <_stext+0x18>
20000ed9:	0000c0        	callx0	a0
20000edc:	fe0d91        	l32r	a9, 20000710 <_stext+0x10>
20000edf:	ffa2a2        	movi	a10, 0x2ff
20000ee2:	f27c      	movi.n	a2, -1
20000ee4:	fff186        	j	20000eae <HAL_HwDebugTrace+0x10e>

20000ee7 <HAL_HwDebugTrace+0x147>:
	...

20000ee9 <HAL_HwDebugTrace+0x149>:
20000ee9:	fecc82        	addi	a8, a12, -2
20000eec:	0a0816        	beqz	a8, 20000f90 <HAL_HwDebugTrace+0x1f0>
20000eef:	fdcc92        	addi	a9, a12, -3
20000ef2:	09a916        	beqz	a9, 20000f90 <HAL_HwDebugTrace+0x1f0>
20000ef5:	3108      	l32i.n	a0, a1, 12
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:322
                }while(1);
            }
            else//RCD_SGQ_R or RCD_SGQ_W
            {
                //record NFCQ's location in save area
                pTraceSgeInfo->aSgeDesc[ulDescIndex].ulNfcqEntryOffset = ulEntrySaveOffset;
20000ef7:	2138      	l32i.n	a3, a1, 8
20000ef9:	1148      	l32i.n	a4, a1, 4
20000efb:	220c      	movi.n	a2, 2
20000efd:	443a      	add.n	a4, a4, a3
20000eff:	84d9      	s32i.n	a13, a4, 32
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:325

                //back-up NFCQ to save area
                COM_MemCpy((U32 *)&pTraceSgeInfo->ucEntryBuff[ulEntrySaveOffset],
20000f01:	3d3a      	add.n	a3, a13, a3
20000f03:	04d332        	addmi	a3, a3, 0x400
20000f06:	14c332        	addi	a3, a3, 20
20000f09:	25a276        	loopgtz	a2, 20000f32 <HAL_HwDebugTrace+0x192>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:85
20000f0c:	0028      	l32i.n	a2, a0, 0
20000f0e:	0329      	s32i.n	a2, a3, 0
20000f10:	1028      	l32i.n	a2, a0, 4
20000f12:	1329      	s32i.n	a2, a3, 4
20000f14:	2028      	l32i.n	a2, a0, 8
20000f16:	2329      	s32i.n	a2, a3, 8
20000f18:	3028      	l32i.n	a2, a0, 12
20000f1a:	3329      	s32i.n	a2, a3, 12
20000f1c:	4028      	l32i.n	a2, a0, 16
20000f1e:	4329      	s32i.n	a2, a3, 16
20000f20:	5028      	l32i.n	a2, a0, 20
20000f22:	5329      	s32i.n	a2, a3, 20
20000f24:	6028      	l32i.n	a2, a0, 24
20000f26:	6329      	s32i.n	a2, a3, 24
20000f28:	7028      	l32i.n	a2, a0, 28
20000f2a:	7329      	s32i.n	a2, a3, 28
20000f2c:	20c002        	addi	a0, a0, 32
20000f2f:	20c332        	addi	a3, a3, 32

20000f32 <HAL_HwDebugTrace+0x192>:
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:327
                            (U32 *)pNfcqEntry, sizeof(NFCQ_ENTRY)/4);
                ulEntrySaveOffset += sizeof(NFCQ_ENTRY);
20000f32:	40cdd2        	addi	a13, a13, 64

20000f35 <HAL_HwDebugTrace+0x195>:
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:331
            }

            /* update descriptor index and save area offset for next calling */
            pTraceSgeInfo->ulSgeDescIndex++;
20000f35:	2168      	l32i.n	a6, a1, 8
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:362
        default:
            //can not get here
            DBG_Getch();
    }
#endif        
    return;
20000f37:	4108      	l32i.n	a0, a1, 16
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:331
                            (U32 *)pNfcqEntry, sizeof(NFCQ_ENTRY)/4);
                ulEntrySaveOffset += sizeof(NFCQ_ENTRY);
            }

            /* update descriptor index and save area offset for next calling */
            pTraceSgeInfo->ulSgeDescIndex++;
20000f39:	0658      	l32i.n	a5, a6, 0
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:332
            pTraceSgeInfo->ulEntrySaveOffset = ulEntrySaveOffset;
20000f3b:	16d9      	s32i.n	a13, a6, 4
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:331
                            (U32 *)pNfcqEntry, sizeof(NFCQ_ENTRY)/4);
                ulEntrySaveOffset += sizeof(NFCQ_ENTRY);
            }

            /* update descriptor index and save area offset for next calling */
            pTraceSgeInfo->ulSgeDescIndex++;
20000f3d:	551b      	addi.n	a5, a5, 1
20000f3f:	0659      	s32i.n	a5, a6, 0
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:335
            pTraceSgeInfo->ulEntrySaveOffset = ulEntrySaveOffset;
            
            //protect overflow case
            if (pTraceSgeInfo->ulSgeDescIndex >= TRACE_SGE_ENTRY_MAX_CNT)
20000f41:	02d5f6        	bgeui	a5, 64, 20000f47 <HAL_HwDebugTrace+0x1a7>
20000f44:	ffb506        	j	20000e1c <HAL_HwDebugTrace+0x7c>
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:362
        default:
            //can not get here
            DBG_Getch();
    }
#endif        
    return;
20000f47:	61d8      	l32i.n	a13, a1, 24
20000f49:	51c8      	l32i.n	a12, a1, 20
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:337
            pTraceSgeInfo->ulEntrySaveOffset = ulEntrySaveOffset;
            
            //protect overflow case
            if (pTraceSgeInfo->ulSgeDescIndex >= TRACE_SGE_ENTRY_MAX_CNT)
            {
                pTraceSgeInfo->ulSgeDescIndex = 0;
20000f4b:	2178      	l32i.n	a7, a1, 8
20000f4d:	060c      	movi.n	a6, 0
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:338
                pTraceSgeInfo->ulEntrySaveOffset = 0; // round back to the beginning of save area
20000f4f:	1769      	s32i.n	a6, a7, 4
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:337
            pTraceSgeInfo->ulEntrySaveOffset = ulEntrySaveOffset;
            
            //protect overflow case
            if (pTraceSgeInfo->ulSgeDescIndex >= TRACE_SGE_ENTRY_MAX_CNT)
            {
                pTraceSgeInfo->ulSgeDescIndex = 0;
20000f51:	0769      	s32i.n	a6, a7, 0
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:362
        default:
            //can not get here
            DBG_Getch();
    }
#endif        
    return;
20000f53:	20c112        	addi	a1, a1, 32
20000f56:	f00d      	ret.n

20000f58 <HAL_HwDebugTrace+0x1b8>:
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:223
20000f58:	fdf001        	l32r	a0, 20000718 <_stext+0x18>
20000f5b:	0000c0        	callx0	a0
20000f5e:	fdec91        	l32r	a9, 20000710 <_stext+0x10>
20000f61:	ffa2a2        	movi	a10, 0x2ff
20000f64:	f27c      	movi.n	a2, -1
20000f66:	ffd106        	j	20000eae <HAL_HwDebugTrace+0x10e>

20000f69 <HAL_HwDebugTrace+0x1c9>:
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:362
20000f69:	4108      	l32i.n	a0, a1, 16
20000f6b:	61d8      	l32i.n	a13, a1, 24
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:345

            break;
            
        case RCD_SGE_CHAIN:
            pTraceSgeInfo = &pTraceTagInfo->aTraceSgeInfo[l_ucMyMcuIndex];
            pTraceSgeInfo->usSgeTotalChain = usEntryId;
20000f6d:	1f24a2        	l32i	a10, a4, 124
20000f70:	8004c2        	l8ui	a12, a4, 128
20000f73:	fde5b1        	l32r	a11, 20000708 <_stext+0x8>
20000f76:	fde591        	l32r	a9, 2000070c <_stext+0xc>
20000f79:	d1bb20        	mul16s	a11, a11, a2
20000f7c:	d199c0        	mul16s	a9, a9, a12
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:362
        default:
            //can not get here
            DBG_Getch();
    }
#endif        
    return;
20000f7f:	51c8      	l32i.n	a12, a1, 20
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:345

            break;
            
        case RCD_SGE_CHAIN:
            pTraceSgeInfo = &pTraceTagInfo->aTraceSgeInfo[l_ucMyMcuIndex];
            pTraceSgeInfo->usSgeTotalChain = usEntryId;
20000f81:	aaba      	add.n	a10, a10, a11
20000f83:	99aa      	add.n	a9, a9, a10
20000f85:	6c5952        	s16i	a5, a9, 216
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:346
            pTraceSgeInfo->bAllSgeChainBuilt = TRUE;
20000f88:	346982        	s32i	a8, a9, 208
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:362
        default:
            //can not get here
            DBG_Getch();
    }
#endif        
    return;
20000f8b:	20c112        	addi	a1, a1, 32
20000f8e:	f00d      	ret.n

20000f90 <HAL_HwDebugTrace+0x1f0>:
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:296
                {
                    pHsgEntry = (HSG_ENTRY *)HAL_GetHsgAddr(pHsgEntry->bsNextHsgId);
                }
            }while(1);

            if (RCD_DRQ == usTraceType || RCD_DWQ == usTraceType)
20000f90:	fde1c1        	l32r	a12, 20000714 <_stext+0x14>
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:299
            {
                //record first DSG's location in save area
                pTraceSgeInfo->aSgeDesc[ulDescIndex].ulDsgEntryOffset = ulEntrySaveOffset;
20000f93:	2138      	l32i.n	a3, a1, 8
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:302

                //back-up all DSG for DRQ/DWQ
                pDsgEntry = (NORMAL_DSG_ENTRY *)HAL_GetNormalDsgAddr(((SGE_ENTRY *)pEntry)->bsDsgPtr);
20000f95:	0108      	l32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:299
            }while(1);

            if (RCD_DRQ == usTraceType || RCD_DWQ == usTraceType)
            {
                //record first DSG's location in save area
                pTraceSgeInfo->aSgeDesc[ulDescIndex].ulDsgEntryOffset = ulEntrySaveOffset;
20000f97:	1128      	l32i.n	a2, a1, 4
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:302

                //back-up all DSG for DRQ/DWQ
                pDsgEntry = (NORMAL_DSG_ENTRY *)HAL_GetNormalDsgAddr(((SGE_ENTRY *)pEntry)->bsDsgPtr);
20000f99:	0008      	l32i.n	a0, a0, 0
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:299
            }while(1);

            if (RCD_DRQ == usTraceType || RCD_DWQ == usTraceType)
            {
                //record first DSG's location in save area
                pTraceSgeInfo->aSgeDesc[ulDescIndex].ulDsgEntryOffset = ulEntrySaveOffset;
20000f9b:	223a      	add.n	a2, a2, a3
20000f9d:	82d9      	s32i.n	a13, a2, 32
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:302

                //back-up all DSG for DRQ/DWQ
                pDsgEntry = (NORMAL_DSG_ENTRY *)HAL_GetNormalDsgAddr(((SGE_ENTRY *)pEntry)->bsDsgPtr);
20000f9f:	840000        	extui	a0, a0, 0, 9
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:296
                {
                    pHsgEntry = (HSG_ENTRY *)HAL_GetHsgAddr(pHsgEntry->bsNextHsgId);
                }
            }while(1);

            if (RCD_DRQ == usTraceType || RCD_DWQ == usTraceType)
20000fa2:	ffa132        	movi	a3, 0x1ff
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:306
History:
    201409011    Tobey   uniform coding style
------------------------------------------------------------------------------*/
U32 HAL_GetNormalDsgAddr(U16 usDsgId)
{
    if(usDsgId >= NORMAL_DSG_NUM)
20000fa5:	473307        	bltu	a3, a0, 20000ff0 <HAL_HwDebugTrace+0x250>
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:327
                pTraceSgeInfo->aSgeDesc[ulDescIndex].ulNfcqEntryOffset = ulEntrySaveOffset;

                //back-up NFCQ to save area
                COM_MemCpy((U32 *)&pTraceSgeInfo->ucEntryBuff[ulEntrySaveOffset],
                            (U32 *)pNfcqEntry, sizeof(NFCQ_ENTRY)/4);
                ulEntrySaveOffset += sizeof(NFCQ_ENTRY);
20000fa8:	1100c0        	slli	a0, a0, 4
20000fab:	00ca      	add.n	a0, a0, a12
20000fad:	000106        	j	20000fb5 <HAL_HwDebugTrace+0x215>

20000fb0 <HAL_HwDebugTrace+0x210>:
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:308
    {
        DBG_Getch();
20000fb0:	1100c0        	slli	a0, a0, 4
20000fb3:	00ca      	add.n	a0, a0, a12
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:305

                //back-up all DSG for DRQ/DWQ
                pDsgEntry = (NORMAL_DSG_ENTRY *)HAL_GetNormalDsgAddr(((SGE_ENTRY *)pEntry)->bsDsgPtr);
                do
                {
                    COM_MemCpy((U32 *)&pTraceSgeInfo->ucEntryBuff[ulEntrySaveOffset],
20000fb5:	2128      	l32i.n	a2, a1, 8
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:85
20000fb7:	0078      	l32i.n	a7, a0, 0
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:305
20000fb9:	2d2a      	add.n	a2, a13, a2
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:307
                            (U32 *)pDsgEntry, sizeof(NORMAL_DSG_ENTRY)/4);
                    ulEntrySaveOffset += sizeof(NORMAL_DSG_ENTRY);
20000fbb:	10cdd2        	addi	a13, a13, 16
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:305

                //back-up all DSG for DRQ/DWQ
                pDsgEntry = (NORMAL_DSG_ENTRY *)HAL_GetNormalDsgAddr(((SGE_ENTRY *)pEntry)->bsDsgPtr);
                do
                {
                    COM_MemCpy((U32 *)&pTraceSgeInfo->ucEntryBuff[ulEntrySaveOffset],
20000fbe:	04d222        	addmi	a2, a2, 0x400
20000fc1:	14c222        	addi	a2, a2, 20
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:85
20000fc4:	0279      	s32i.n	a7, a2, 0
20000fc6:	1068      	l32i.n	a6, a0, 4
20000fc8:	1269      	s32i.n	a6, a2, 4
20000fca:	2058      	l32i.n	a5, a0, 8
20000fcc:	2259      	s32i.n	a5, a2, 8
20000fce:	3048      	l32i.n	a4, a0, 12
20000fd0:	036242        	s32i	a4, a2, 12
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:309
                            (U32 *)pDsgEntry, sizeof(NORMAL_DSG_ENTRY)/4);
                    ulEntrySaveOffset += sizeof(NORMAL_DSG_ENTRY);

                    if (TRUE == pDsgEntry->bsLast)
20000fd3:	002002        	l32i	a0, a0, 0
20000fd6:	048900        	extui	a8, a0, 9, 1
20000fd9:	f58856        	bnez	a8, 20000f35 <HAL_HwDebugTrace+0x195>
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:315
                    {
                        break;//jump out of "while(1)" loop
                    }
                    else
                    {
                        pDsgEntry = (NORMAL_DSG_ENTRY *)HAL_GetNormalDsgAddr(pDsgEntry->bsNextDsgId);
20000fdc:	840000        	extui	a0, a0, 0, 9
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:306
History:
    201409011    Tobey   uniform coding style
------------------------------------------------------------------------------*/
U32 HAL_GetNormalDsgAddr(U16 usDsgId)
{
    if(usDsgId >= NORMAL_DSG_NUM)
20000fdf:	cdb307        	bgeu	a3, a0, 20000fb0 <HAL_HwDebugTrace+0x210>
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:308
    {
        DBG_Getch();
20000fe2:	fdcd01        	l32r	a0, 20000718 <_stext+0x18>
20000fe5:	0000c0        	callx0	a0
20000fe8:	ffa132        	movi	a3, 0x1ff
20000feb:	000c      	movi.n	a0, 0
20000fed:	fff106        	j	20000fb5 <HAL_HwDebugTrace+0x215>

20000ff0 <HAL_HwDebugTrace+0x250>:
20000ff0:	fdca01        	l32r	a0, 20000718 <_stext+0x18>
20000ff3:	0000c0        	callx0	a0
20000ff6:	ffa132        	movi	a3, 0x1ff
20000ff9:	000c      	movi.n	a0, 0
20000ffb:	ffed86        	j	20000fb5 <HAL_HwDebugTrace+0x215>

20000ffe <HAL_HwDebugTrace+0x25e>:
	...

20001000 <L3_SetNfcqCustom>:
L3_SetNfcqCustom():
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:215
Usage      : 
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
void L3_SetNfcqCustom(NFCQ_ENTRY *ptNfcqEntry, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
20001000:	f0c112        	addi	a1, a1, -16
20001003:	0109      	s32i.n	a0, a1, 0
20001005:	21d9      	s32i.n	a13, a1, 8
20001007:	11c9      	s32i.n	a12, a1, 4
20001009:	02dd      	mov.n	a13, a2
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:218
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    
    if (TRUE == ptReqEntry->tFlashDesc.bsHostRdEn)
2000100b:	0328      	l32i.n	a2, a3, 0
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:215
Usage      : 
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
void L3_SetNfcqCustom(NFCQ_ENTRY *ptNfcqEntry, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
2000100d:	03cd      	mov.n	a12, a3
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:218
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    
    if (TRUE == ptReqEntry->tFlashDesc.bsHostRdEn)
2000100f:	4228      	l32i.n	a2, a2, 16
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:215
Usage      : 
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
void L3_SetNfcqCustom(NFCQ_ENTRY *ptNfcqEntry, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
20001011:	100c      	movi.n	a0, 1
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:218
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    
    if (TRUE == ptReqEntry->tFlashDesc.bsHostRdEn)
20001013:	527257        	bbci	a2, 21, 20001069 <L3_SetNfcqCustom+0x69>
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:220
    {
        ptNfcqEntry->bsOntfEn = TRUE;
20001016:	fdc121        	l32r	a2, 2000071c <_stext+0x1c>
20001019:	0d38      	l32i.n	a3, a13, 0
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:221
        ptNfcqEntry->bsTrigOmEn = TRUE;
2000101b:	00a442        	movi	a4, 0x400
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:220
{
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    
    if (TRUE == ptReqEntry->tFlashDesc.bsHostRdEn)
    {
        ptNfcqEntry->bsOntfEn = TRUE;
2000101e:	203300        	or	a3, a3, a0
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:221
        ptNfcqEntry->bsTrigOmEn = TRUE;
20001021:	203340        	or	a3, a3, a4
20001024:	0d39      	s32i.n	a3, a13, 0
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:71
    U8 ucPU, ucLunInPU;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    FCMD_DATA_TX_CTRL *ptHsgCtrl = &ptCtrlEntry->tDTxCtrl;
    HMEM_DPTR *ptHmemDptr = &ptReqEntry->tHostDesc.tHostDptr;
        
    if (FALSE == ptHsgCtrl->bsAddChainEn)
20001026:	3c38      	l32i.n	a3, a12, 12
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:67
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
LOCAL void L3_BuildSGQEntry(NFCQ_ENTRY* ptNfcqEntry, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U8 ucPU, ucLunInPU;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
20001028:	0c08      	l32i.n	a0, a12, 0
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:71
    FCMD_DATA_TX_CTRL *ptHsgCtrl = &ptCtrlEntry->tDTxCtrl;
    HMEM_DPTR *ptHmemDptr = &ptReqEntry->tHostDesc.tHostDptr;
        
    if (FALSE == ptHsgCtrl->bsAddChainEn)
2000102a:	5fe347        	bbsi	a3, 4, 2000108d <L3_SetNfcqCustom+0x8d>
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:73
    {
        ptHsgCtrl->bsAddChainEn = TRUE;
2000102d:	071c      	movi.n	a7, 16
2000102f:	207370        	or	a7, a3, a7
20001032:	3c79      	s32i.n	a7, a12, 12
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:75
        
        HAL_AddFinishReqLength(ptHmemDptr->bsCmdTag, ptReqEntry->tFlashDesc.bsSecLen);
20001034:	8068      	l32i.n	a6, a0, 32
20001036:	110052        	l8ui	a5, a0, 17
20001039:	546060        	extui	a6, a6, 0, 6
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
2000103c:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:167
    ucMcuId = HAL_GetMcuId();

    // increase finish sector count and finish chain count based on MCU id,
    // please note we have to increase finish chain count first otherwise
    // L1 might get the wrong finish chain count
    if(ucMcuId == MCU1_ID)
2000103f:	743030        	extui	a3, a3, 0, 8
20001042:	fec342        	addi	a4, a3, -2
20001045:	0e7416        	beqz	a4, 20001130 <L3_SetNfcqCustom+0x130>
20001048:	3109      	s32i.n	a0, a1, 12
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:172
    {
        pChainNumMgr->usFinishChainCntMcu1++;
        pChainNumMgr->usFinishSecCntMcu1 += usSecCnt;
    }
    else if(ucMcuId == MCU2_ID)
2000104a:	2e3366        	bnei	a3, 3, 2000107c <L3_SetNfcqCustom+0x7c>
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:174
    {
        pChainNumMgr->usFinishChainCntMcu2++;
2000104d:	7322a2        	l32i	a10, a2, 0x1cc
20001050:	909660        	addx2	a9, a6, a6
20001053:	a099a0        	addx4	a9, a9, a10
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:175
        pChainNumMgr->usFinishSecCntMcu2 += usSecCnt;
20001056:	041982        	l16ui	a8, a9, 8
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:174
        pChainNumMgr->usFinishChainCntMcu1++;
        pChainNumMgr->usFinishSecCntMcu1 += usSecCnt;
    }
    else if(ucMcuId == MCU2_ID)
    {
        pChainNumMgr->usFinishChainCntMcu2++;
20001059:	0519a2        	l16ui	a10, a9, 10
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:175
        pChainNumMgr->usFinishSecCntMcu2 += usSecCnt;
2000105c:	885a      	add.n	a8, a8, a5
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:174
        pChainNumMgr->usFinishChainCntMcu1++;
        pChainNumMgr->usFinishSecCntMcu1 += usSecCnt;
    }
    else if(ucMcuId == MCU2_ID)
    {
        pChainNumMgr->usFinishChainCntMcu2++;
2000105e:	aa1b      	addi.n	a10, a10, 1
20001060:	0559a2        	s16i	a10, a9, 10
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:175
        pChainNumMgr->usFinishSecCntMcu2 += usSecCnt;
20001063:	045982        	s16i	a8, a9, 8
20001066:	0008c6        	j	2000108d <L3_SetNfcqCustom+0x8d>

20001069 <L3_SetNfcqCustom+0x69>:
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:225
        ptNfcqEntry->bsOntfEn = TRUE;
        ptNfcqEntry->bsTrigOmEn = TRUE;

        L3_BuildSGQEntry(ptNfcqEntry, ptCtrlEntry);        
    }
    else if (TRUE == ptCtrlEntry->tDTxCtrl.bsDSGEn)
20001069:	33b8      	l32i.n	a11, a3, 12
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:231
    {
        ptNfcqEntry->bsDsgEn = TRUE;
        ptNfcqEntry->bsFstDsgPtr = ptCtrlEntry->tDTxCtrl.bsFstEngineID;
    }
    
    return;
2000106b:	11c8      	l32i.n	a12, a1, 4
2000106d:	04b0b0        	extui	a11, a11, 0, 1
20001070:	09cb56        	bnez	a11, 20001110 <L3_SetNfcqCustom+0x110>
20001073:	21d8      	l32i.n	a13, a1, 8
20001075:	0108      	l32i.n	a0, a1, 0
20001077:	10c112        	addi	a1, a1, 16
2000107a:	f00d      	ret.n

2000107c <L3_SetNfcqCustom+0x7c>:
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:179
    }
    else
    {
        DBG_Printf("add finish sector count mcu id error\n");
2000107c:	fda921        	l32r	a2, 20000720 <_stext+0x20>
2000107f:	09be45        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:180
        DBG_Getch();
20001082:	fda501        	l32r	a0, 20000718 <_stext+0x18>
20001085:	0000c0        	callx0	a0
20001088:	fda521        	l32r	a2, 2000071c <_stext+0x1c>
2000108b:	3108      	l32i.n	a0, a1, 12
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:78
        ptHsgCtrl->bsAddChainEn = TRUE;
        
        HAL_AddFinishReqLength(ptHmemDptr->bsCmdTag, ptReqEntry->tFlashDesc.bsSecLen);
    }
        
    g_pNfcqForHalDebug = ptNfcqEntry;
2000108d:	4b62d2        	s32i	a13, a2, 0x12c
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:82
    ucPU = L3_GET_PU(ptReqEntry->bsTLun);
    ucLunInPU = L3_GET_LUN_IN_PU(ptReqEntry->bsTLun);

    ASSERT(FCMD_REQ_TYPE_READ == ptReqEntry->bsReqType);
20001090:	0048      	l32i.n	a4, a0, 0
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:79
        
        HAL_AddFinishReqLength(ptHmemDptr->bsCmdTag, ptReqEntry->tFlashDesc.bsSecLen);
    }
        
    g_pNfcqForHalDebug = ptNfcqEntry;
    ucPU = L3_GET_PU(ptReqEntry->bsTLun);
20001092:	000032        	l8ui	a3, a0, 0
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:82
    ucLunInPU = L3_GET_LUN_IN_PU(ptReqEntry->bsTLun);

    ASSERT(FCMD_REQ_TYPE_READ == ptReqEntry->bsReqType);
20001095:	254240        	extui	a4, a4, 18, 3
20001098:	701466        	bnei	a4, 1, 2000110c <L3_SetNfcqCustom+0x10c>
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:83
    HAL_SgqBuildEntry(ptHmemDptr->bsCmdTag,ptHsgCtrl->bsFstEngineID, ucPU, ucLunInPU, FALSE);    
2000109b:	0a1c92        	l16ui	a9, a12, 20
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
    20151028     abby    add parameter ucLun
------------------------------------------------------------------------------*/
U8 HAL_NfcGetWP(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
2000109e:	3e2262        	l32i	a6, a2, 248
200010a1:	fda041        	l32r	a4, 20000724 <_stext+0x24>
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:83
200010a4:	8028      	l32i.n	a2, a0, 32
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
200010a6:	434a      	add.n	a4, a3, a4
200010a8:	800442        	l8ui	a4, a4, 128
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:83
200010ab:	542020        	extui	a2, a2, 0, 6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
200010ae:	1174c0        	slli	a7, a4, 4
200010b1:	667a      	add.n	a6, a6, a7
200010b3:	0020c0        	memw
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:497
    COM_MemZero((U32 *)pSgqEntry, sizeof(SGE_ENTRY)/sizeof(U32));
    pSgqEntry->bsHID = ucHID;
    pSgqEntry->bsHsgPtr = usFirstHsgId;
    pSgqEntry->bsWriteEn = bWriteEn;

    HAL_HwDebugTrace(ucHID, (TRUE == bWriteEn) ? RCD_SGQ_W : RCD_SGQ_R, pSgqEntry
200010b6:	430c      	movi.n	a3, 4
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:65
{
    U32 i;

    for (i = 0 ; i < LengthDW; i++)
    {
        *TargetAddr++ = 0;
200010b8:	080c      	movi.n	a8, 0
200010ba:	fd9ba1        	l32r	a10, 20000728 <_stext+0x28>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
200010bd:	000662        	l8ui	a6, a6, 0
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:493
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
    ucWp = HAL_NfcGetWP(ucPU, ucLun);

    pSgqEntry = HAL_GetSgqEntry(ucPhyPU,ucLun,ucWp);
    COM_MemZero((U32 *)pSgqEntry, sizeof(SGE_ENTRY)/sizeof(U32));
    pSgqEntry->bsHID = ucHID;
200010c0:	fd9b71        	l32r	a7, 2000072c <_stext+0x2c>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
200010c3:	416660        	srli	a6, a6, 6
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:497
    pSgqEntry->bsHsgPtr = usFirstHsgId;
    pSgqEntry->bsWriteEn = bWriteEn;

    HAL_HwDebugTrace(ucHID, (TRUE == bWriteEn) ? RCD_SGQ_W : RCD_SGQ_R, pSgqEntry
200010c6:	905460        	addx2	a5, a4, a6
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:65
200010c9:	b04460        	addx8	a4, a4, a6
200010cc:	1144e0        	slli	a4, a4, 2
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:493
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
    ucWp = HAL_NfcGetWP(ucPU, ucLun);

    pSgqEntry = HAL_GetSgqEntry(ucPhyPU,ucLun,ucWp);
    COM_MemZero((U32 *)pSgqEntry, sizeof(SGE_ENTRY)/sizeof(U32));
    pSgqEntry->bsHID = ucHID;
200010cf:	747a      	add.n	a7, a4, a7
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:65
200010d1:	a4aa      	add.n	a10, a4, a10
200010d3:	74daa2        	addmi	a10, a10, 0x7400
200010d6:	0a89      	s32i.n	a8, a10, 0
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:493
200010d8:	7f27a2        	l32i	a10, a7, 0x1fc
200010db:	016260        	slli	a6, a2, 26
200010de:	c10a64        	insbits	a6, a10, 0, 25
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:495
    pSgqEntry->bsHsgPtr = usFirstHsgId;
    pSgqEntry->bsWriteEn = bWriteEn;
200010e1:	ffad82        	movi	a8, 0xfffffdff
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:493
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
    ucWp = HAL_NfcGetWP(ucPU, ucLun);

    pSgqEntry = HAL_GetSgqEntry(ucPhyPU,ucLun,ucWp);
    COM_MemZero((U32 *)pSgqEntry, sizeof(SGE_ENTRY)/sizeof(U32));
    pSgqEntry->bsHID = ucHID;
200010e4:	7f6762        	s32i	a6, a7, 0x1fc
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:494
    pSgqEntry->bsHsgPtr = usFirstHsgId;
200010e7:	d10964        	insbits	a6, a9, 16, 25
200010ea:	7f6762        	s32i	a6, a7, 0x1fc
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:495
    pSgqEntry->bsWriteEn = bWriteEn;
200010ed:	106680        	and	a6, a6, a8
200010f0:	7f6762        	s32i	a6, a7, 0x1fc
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:497

    HAL_HwDebugTrace(ucHID, (TRUE == bWriteEn) ? RCD_SGQ_W : RCD_SGQ_R, pSgqEntry
200010f3:	fd8f61        	l32r	a6, 20000730 <_stext+0x30>
200010f6:	f45050        	extui	a5, a5, 0, 16
200010f9:	446a      	add.n	a4, a4, a6
200010fb:	0d6d      	mov.n	a6, a13
200010fd:	ffca05        	call0	20000da0 <HAL_HwDebugTrace>
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:231
    {
        ptNfcqEntry->bsDsgEn = TRUE;
        ptNfcqEntry->bsFstDsgPtr = ptCtrlEntry->tDTxCtrl.bsFstEngineID;
    }
    
    return;
20001100:	11c8      	l32i.n	a12, a1, 4
20001102:	21d8      	l32i.n	a13, a1, 8
20001104:	0108      	l32i.n	a0, a1, 0
20001106:	10c112        	addi	a1, a1, 16
20001109:	f00d      	ret.n

2000110b <L3_SetNfcqCustom+0x10b>:
	...

2000110c <L3_SetNfcqCustom+0x10c>:
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:82
        
    g_pNfcqForHalDebug = ptNfcqEntry;
    ucPU = L3_GET_PU(ptReqEntry->bsTLun);
    ucLunInPU = L3_GET_LUN_IN_PU(ptReqEntry->bsTLun);

    ASSERT(FCMD_REQ_TYPE_READ == ptReqEntry->bsReqType);
2000110c:	ffff06        	j	2000110c <L3_SetNfcqCustom+0x10c>

2000110f <L3_SetNfcqCustom+0x10f>:
	...

20001110 <L3_SetNfcqCustom+0x110>:
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:231
    {
        ptNfcqEntry->bsDsgEn = TRUE;
        ptNfcqEntry->bsFstDsgPtr = ptCtrlEntry->tDTxCtrl.bsFstEngineID;
    }
    
    return;
20001110:	0108      	l32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:227

        L3_BuildSGQEntry(ptNfcqEntry, ptCtrlEntry);        
    }
    else if (TRUE == ptCtrlEntry->tDTxCtrl.bsDSGEn)
    {
        ptNfcqEntry->bsDsgEn = TRUE;
20001112:	0d68      	l32i.n	a6, a13, 0
20001114:	80a072        	movi	a7, 128
20001117:	206670        	or	a6, a6, a7
2000111a:	0d69      	s32i.n	a6, a13, 0
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:228
        ptNfcqEntry->bsFstDsgPtr = ptCtrlEntry->tDTxCtrl.bsFstEngineID;
2000111c:	0a1352        	l16ui	a5, a3, 20
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:231
    }
    
    return;
2000111f:	11c8      	l32i.n	a12, a1, 4
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:228
        L3_BuildSGQEntry(ptNfcqEntry, ptCtrlEntry);        
    }
    else if (TRUE == ptCtrlEntry->tDTxCtrl.bsDSGEn)
    {
        ptNfcqEntry->bsDsgEn = TRUE;
        ptNfcqEntry->bsFstDsgPtr = ptCtrlEntry->tDTxCtrl.bsFstEngineID;
20001121:	015590        	slli	a5, a5, 23
20001124:	a20654        	insbits	a5, a6, 0, 22
20001127:	0d59      	s32i.n	a5, a13, 0
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:231
    }
    
    return;
20001129:	21d8      	l32i.n	a13, a1, 8
2000112b:	10c112        	addi	a1, a1, 16
2000112e:	f00d      	ret.n

20001130 <L3_SetNfcqCustom+0x130>:
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:169
    // increase finish sector count and finish chain count based on MCU id,
    // please note we have to increase finish chain count first otherwise
    // L1 might get the wrong finish chain count
    if(ucMcuId == MCU1_ID)
    {
        pChainNumMgr->usFinishChainCntMcu1++;
20001130:	7322a2        	l32i	a10, a2, 0x1cc
20001133:	909660        	addx2	a9, a6, a6
20001136:	a099a0        	addx4	a9, a9, a10
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:170
        pChainNumMgr->usFinishSecCntMcu1 += usSecCnt;
20001139:	021982        	l16ui	a8, a9, 4
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:169
    // increase finish sector count and finish chain count based on MCU id,
    // please note we have to increase finish chain count first otherwise
    // L1 might get the wrong finish chain count
    if(ucMcuId == MCU1_ID)
    {
        pChainNumMgr->usFinishChainCntMcu1++;
2000113c:	0319a2        	l16ui	a10, a9, 6
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:170
        pChainNumMgr->usFinishSecCntMcu1 += usSecCnt;
2000113f:	885a      	add.n	a8, a8, a5
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:169
    // increase finish sector count and finish chain count based on MCU id,
    // please note we have to increase finish chain count first otherwise
    // L1 might get the wrong finish chain count
    if(ucMcuId == MCU1_ID)
    {
        pChainNumMgr->usFinishChainCntMcu1++;
20001141:	aa1b      	addi.n	a10, a10, 1
20001143:	0359a2        	s16i	a10, a9, 6
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:170
        pChainNumMgr->usFinishSecCntMcu1 += usSecCnt;
20001146:	025982        	s16i	a8, a9, 4
20001149:	ffd006        	j	2000108d <L3_SetNfcqCustom+0x8d>

2000114c <L3_IFSetNFCQRowAddr..CG_1482204275>:
L3_IFSetNFCQRowAddr():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1217
LOCAL void L3_IFSetNFCQRowAddr(NFCQ_ENTRY *ptNfcqEntry, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U8 ucLun;
    U8 ucPln, ucRowAddrIdx = 0;
    FLASH_ADDR atDstFlashAddr[PLN_PER_LUN];
    FLASH_ADDR *pDstFlashAddr[PLN_PER_LUN] = { NULL };
2000114c:	041c      	movi.n	a4, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1213
History    : 
    1. 2016.7.18 JasonGuo create function
    2. 2016.9.26 JasonGuo l3 supports xx-nand-flash-adapter-part #4/4
==============================================================================*/
LOCAL void L3_IFSetNFCQRowAddr(NFCQ_ENTRY *ptNfcqEntry, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
2000114e:	90c112        	addi	a1, a1, -112
20001151:	1161c2        	s32i	a12, a1, 68
20001154:	1261d2        	s32i	a13, a1, 72
20001157:	1361e2        	s32i	a14, a1, 76
2000115a:	1461f2        	s32i	a15, a1, 80
2000115d:	106102        	s32i	a0, a1, 64
20001160:	166122        	s32i	a2, a1, 88
20001163:	1a6132        	s32i	a3, a1, 104
20001166:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1217
    U8 ucLun;
    U8 ucPln, ucRowAddrIdx = 0;
    FLASH_ADDR atDstFlashAddr[PLN_PER_LUN];
    FLASH_ADDR *pDstFlashAddr[PLN_PER_LUN] = { NULL };
20001168:	fd7331        	l32r	a3, 20000734 <_stext+0x34>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1213
History    : 
    1. 2016.7.18 JasonGuo create function
    2. 2016.9.26 JasonGuo l3 supports xx-nand-flash-adapter-part #4/4
==============================================================================*/
LOCAL void L3_IFSetNFCQRowAddr(NFCQ_ENTRY *ptNfcqEntry, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
2000116b:	300c      	movi.n	a0, 3
2000116d:	156102        	s32i	a0, a1, 84
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1217
    U8 ucLun;
    U8 ucPln, ucRowAddrIdx = 0;
    FLASH_ADDR atDstFlashAddr[PLN_PER_LUN];
    FLASH_ADDR *pDstFlashAddr[PLN_PER_LUN] = { NULL };
20001170:	0a0bc5        	call0	2000b230 <memcpy>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1221
    FLASH_ADDR tFlashAddr = {0};
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;

    BOOL bSLCMode = (FCMD_REQ_SLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
20001173:	130c      	movi.n	a3, 1
20001175:	0d0c      	movi.n	a13, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1218
{
    U8 ucLun;
    U8 ucPln, ucRowAddrIdx = 0;
    FLASH_ADDR atDstFlashAddr[PLN_PER_LUN];
    FLASH_ADDR *pDstFlashAddr[PLN_PER_LUN] = { NULL };
    FLASH_ADDR tFlashAddr = {0};
20001177:	10c172        	addi	a7, a1, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1219
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
2000117a:	1a2122        	l32i	a2, a1, 104
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1218
{
    U8 ucLun;
    U8 ucPln, ucRowAddrIdx = 0;
    FLASH_ADDR atDstFlashAddr[PLN_PER_LUN];
    FLASH_ADDR *pDstFlashAddr[PLN_PER_LUN] = { NULL };
    FLASH_ADDR tFlashAddr = {0};
2000117d:	fd6e81        	l32r	a8, 20000738 <_stext+0x38>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1219
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
20001180:	0228      	l32i.n	a2, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1218
{
    U8 ucLun;
    U8 ucPln, ucRowAddrIdx = 0;
    FLASH_ADDR atDstFlashAddr[PLN_PER_LUN];
    FLASH_ADDR *pDstFlashAddr[PLN_PER_LUN] = { NULL };
    FLASH_ADDR tFlashAddr = {0};
20001182:	1858      	l32i.n	a5, a8, 4
20001184:	1759      	s32i.n	a5, a7, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1219
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
20001186:	196122        	s32i	a2, a1, 100
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1218
{
    U8 ucLun;
    U8 ucPln, ucRowAddrIdx = 0;
    FLASH_ADDR atDstFlashAddr[PLN_PER_LUN];
    FLASH_ADDR *pDstFlashAddr[PLN_PER_LUN] = { NULL };
    FLASH_ADDR tFlashAddr = {0};
20001189:	0888      	l32i.n	a8, a8, 0
2000118b:	0789      	s32i.n	a8, a7, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1221
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;

    BOOL bSLCMode = (FCMD_REQ_SLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
2000118d:	4248      	l32i.n	a4, a2, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1219
    U8 ucLun;
    U8 ucPln, ucRowAddrIdx = 0;
    FLASH_ADDR atDstFlashAddr[PLN_PER_LUN];
    FLASH_ADDR *pDstFlashAddr[PLN_PER_LUN] = { NULL };
    FLASH_ADDR tFlashAddr = {0};
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
2000118f:	026d      	mov.n	a6, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1221

    BOOL bSLCMode = (FCMD_REQ_SLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
20001191:	154040        	extui	a4, a4, 16, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1224
    
    ucLun = L3_GET_LUN_IN_PU(ptReqEntry->bsTLun);
    if (FCMD_REQ_SUBTYPE_INTRNAL == ptReqEntry->bsReqSubType)
20001194:	0228      	l32i.n	a2, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1221
    FLASH_ADDR atDstFlashAddr[PLN_PER_LUN];
    FLASH_ADDR *pDstFlashAddr[PLN_PER_LUN] = { NULL };
    FLASH_ADDR tFlashAddr = {0};
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;

    BOOL bSLCMode = (FCMD_REQ_SLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
20001196:	83d340        	moveqz	a13, a3, a4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1224
    
    ucLun = L3_GET_LUN_IN_PU(ptReqEntry->bsTLun);
    if (FCMD_REQ_SUBTYPE_INTRNAL == ptReqEntry->bsReqSubType)
20001199:	252520        	extui	a2, a2, 21, 3
2000119c:	102266        	bnei	a2, 2, 200011b0 <L3_IFSetNFCQRowAddr..CG_1482204275+0x64>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1226
    {
        DBG_Printf("IM 3D-TLC do not support internal copy\n");
2000119f:	fd6721        	l32r	a2, 2000073c <_stext+0x3c>
200011a2:	09ac05        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1227
        DBG_Getch();
200011a5:	fd5c01        	l32r	a0, 20000718 <_stext+0x18>
200011a8:	0000c0        	callx0	a0
200011ab:	1a2162        	l32i	a6, a1, 104
200011ae:	0668      	l32i.n	a6, a6, 0

200011b0 <L3_IFSetNFCQRowAddr..CG_1482204275+0x64>:
200011b0:	fd5b31        	l32r	a3, 2000071c <_stext+0x1c>
200011b3:	23a292        	movi	a9, 0x223
200011b6:	20c1b2        	addi	a11, a1, 32
200011b9:	fd61a1        	l32r	a10, 20000740 <_stext+0x40>
200011bc:	fd6201        	l32r	a0, 20000744 <_stext+0x44>
200011bf:	040c      	movi.n	a4, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1230
    }

    if (FCMD_REQ_SUBTYPE_SINGLE == ptCtrlEntry->ptReqEntry->bsReqSubType)
200011c1:	0480d0        	extui	a8, a13, 0, 1
200011c4:	0678      	l32i.n	a7, a6, 0
200011c6:	0188c0        	slli	a8, a8, 20
200011c9:	176182        	s32i	a8, a1, 92
200011cc:	257570        	extui	a7, a7, 21, 3
200011cf:	2e7716        	beqz	a7, 200014ba <L3_IFSetNFCQRowAddr..CG_1482204275+0x36e>
200011d2:	4e0c      	movi.n	a14, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1242
        atDstFlashAddr[ucPln].usBlock = L2_BbtGetPbnBindingTable(ptReqEntry->bsTLun, ptReqEntry->tFlashDesc.bsPhyBlk, ucPln);
        pDstFlashAddr[0] = &atDstFlashAddr[ucPln];
    }
    else
    {
        for (ucPln = 0; ucPln < PLN_PER_LUN; ucPln++)
200011d4:	04cd      	mov.n	a12, a4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1244
        {
            atDstFlashAddr[ucPln].ucLun = ucLun;
200011d6:	b0fcb0        	addx8	a15, a12, a11
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2414
GLOBAL U16 L2_BbtGetPbnBindingTable(U8 ucTlun, U16 usPbn, U8 ucPlane)
{
    // this function is provided to L3 as a public interface

    // input check
    if(ucTlun >= SUBSYSTEM_LUN_NUM)
200011d9:	0e2352        	l32i	a5, a3, 56
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1248
            atDstFlashAddr[ucPln].bsPln = ucPln;
            atDstFlashAddr[ucPln].bsSLCMode = bSLCMode;
            atDstFlashAddr[ucPln].usPage = ptCtrlEntry->bsPhyPage;
            atDstFlashAddr[ucPln].usBlock = L2_BbtGetPbnBindingTable(ptReqEntry->bsTLun, ptReqEntry->tFlashDesc.bsPhyBlk, ucPln);
200011dc:	192122        	l32i	a2, a1, 100
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1247
        for (ucPln = 0; ucPln < PLN_PER_LUN; ucPln++)
        {
            atDstFlashAddr[ucPln].ucLun = ucLun;
            atDstFlashAddr[ucPln].bsPln = ucPln;
            atDstFlashAddr[ucPln].bsSLCMode = bSLCMode;
            atDstFlashAddr[ucPln].usPage = ptCtrlEntry->bsPhyPage;
200011df:	1a2162        	l32i	a6, a1, 104
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1244
    }
    else
    {
        for (ucPln = 0; ucPln < PLN_PER_LUN; ucPln++)
        {
            atDstFlashAddr[ucPln].ucLun = ucLun;
200011e2:	014f42        	s8i	a4, a15, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1245
            atDstFlashAddr[ucPln].bsPln = ucPln;
200011e5:	002f82        	l32i	a8, a15, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1246
            atDstFlashAddr[ucPln].bsSLCMode = bSLCMode;
200011e8:	172172        	l32i	a7, a1, 92
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1245
    else
    {
        for (ucPln = 0; ucPln < PLN_PER_LUN; ucPln++)
        {
            atDstFlashAddr[ucPln].ucLun = ucLun;
            atDstFlashAddr[ucPln].bsPln = ucPln;
200011eb:	930c84        	insbits	a8, a12, 16, 19
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1246
            atDstFlashAddr[ucPln].bsSLCMode = bSLCMode;
200011ee:	108800        	and	a8, a8, a0
200011f1:	207780        	or	a7, a7, a8
200011f4:	006f72        	s32i	a7, a15, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1247
            atDstFlashAddr[ucPln].usPage = ptCtrlEntry->bsPhyPage;
200011f7:	021662        	l16ui	a6, a6, 4
200011fa:	035f62        	s16i	a6, a15, 6
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1248
            atDstFlashAddr[ucPln].usBlock = L2_BbtGetPbnBindingTable(ptReqEntry->bsTLun, ptReqEntry->tFlashDesc.bsPhyBlk, ucPln);
200011fd:	32d8      	l32i.n	a13, a2, 12
200011ff:	000222        	l8ui	a2, a2, 0
20001202:	186122        	s32i	a2, a1, 96
20001205:	94dad0        	extui	a13, a13, 10, 10
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2414
20001208:	2ab257        	bgeu	a2, a5, 20001236 <L3_IFSetNFCQRowAddr..CG_1482204275+0xea>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2419
    {
        DBG_Printf("Tlun %d error\n", ucTlun);
        DBG_Getch();
    }
    else if(usPbn >= BBT_BLK_PER_PLN)
2000120b:	7239d7        	bltu	a9, a13, 20001281 <L3_IFSetNFCQRowAddr..CG_1482204275+0x135>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2424
    {
        DBG_Printf("PBN  %d error\n", usPbn);
        DBG_Getch();
    }
    else if(ucPlane >= PLN_PER_LUN)
2000120e:	7460c0        	extui	a6, a12, 0, 8
20001211:	4446b6        	bltui	a6, 4, 20001259 <L3_IFSetNFCQRowAddr..CG_1482204275+0x10d>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2426
    {
        DBG_Printf("plane %d error\n", ucPlane);
20001214:	063d      	mov.n	a3, a6
20001216:	fd4c21        	l32r	a2, 20000748 <_stext+0x48>
20001219:	09a485        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2427
        DBG_Getch();
2000121c:	fd3f01        	l32r	a0, 20000718 <_stext+0x18>
2000121f:	0000c0        	callx0	a0
20001222:	fd4801        	l32r	a0, 20000744 <_stext+0x44>
20001225:	040c      	movi.n	a4, 0
20001227:	fd46a1        	l32r	a10, 20000740 <_stext+0x40>
2000122a:	20c1b2        	addi	a11, a1, 32
2000122d:	fd3b31        	l32r	a3, 2000071c <_stext+0x1c>
20001230:	23a292        	movi	a9, 0x223
20001233:	000886        	j	20001259 <L3_IFSetNFCQRowAddr..CG_1482204275+0x10d>

20001236 <L3_IFSetNFCQRowAddr..CG_1482204275+0xea>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2416
    // this function is provided to L3 as a public interface

    // input check
    if(ucTlun >= SUBSYSTEM_LUN_NUM)
    {
        DBG_Printf("Tlun %d error\n", ucTlun);
20001236:	fd4521        	l32r	a2, 2000074c <_stext+0x4c>
20001239:	182132        	l32i	a3, a1, 96
2000123c:	201110        	or	a1, a1, a1
2000123f:	09a245        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2417
        DBG_Getch();
20001242:	fd3501        	l32r	a0, 20000718 <_stext+0x18>
20001245:	0000c0        	callx0	a0
20001248:	fd3f01        	l32r	a0, 20000744 <_stext+0x44>
2000124b:	040c      	movi.n	a4, 0
2000124d:	fd3ca1        	l32r	a10, 20000740 <_stext+0x40>
20001250:	20c1b2        	addi	a11, a1, 32
20001253:	fd3231        	l32r	a3, 2000071c <_stext+0x1c>
20001256:	23a292        	movi	a9, 0x223
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2430
    {
        DBG_Printf("plane %d error\n", ucPlane);
        DBG_Getch();
    }

    if(L2_BbtIsPbnBindingTableEnable() == TRUE)
20001259:	0020c0        	memw
2000125c:	2a28      	l32i.n	a2, a10, 8
2000125e:	0d6d      	mov.n	a6, a13
20001260:	742020        	extui	a2, a2, 0, 8
20001263:	3d1226        	beqi	a2, 1, 200012a4 <L3_IFSetNFCQRowAddr..CG_1482204275+0x158>
20001266:	ee0b      	addi.n	a14, a14, -1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1248
20001268:	025f62        	s16i	a6, a15, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1249
            pDstFlashAddr[ucPln] = &atDstFlashAddr[ucPln];
2000126b:	a0dc10        	addx4	a13, a12, a1
2000126e:	0df9      	s32i.n	a15, a13, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1242
        atDstFlashAddr[ucPln].usBlock = L2_BbtGetPbnBindingTable(ptReqEntry->bsTLun, ptReqEntry->tFlashDesc.bsPhyBlk, ucPln);
        pDstFlashAddr[0] = &atDstFlashAddr[ucPln];
    }
    else
    {
        for (ucPln = 0; ucPln < PLN_PER_LUN; ucPln++)
20001270:	cc1b      	addi.n	a12, a12, 1
20001272:	74c0c0        	extui	a12, a12, 0, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1244
        {
            atDstFlashAddr[ucPln].ucLun = ucLun;
20001275:	b0fcb0        	addx8	a15, a12, a11
20001278:	f5de56        	bnez	a14, 200011d9 <L3_IFSetNFCQRowAddr..CG_1482204275+0x8d>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1242
        atDstFlashAddr[ucPln].usBlock = L2_BbtGetPbnBindingTable(ptReqEntry->bsTLun, ptReqEntry->tFlashDesc.bsPhyBlk, ucPln);
        pDstFlashAddr[0] = &atDstFlashAddr[ucPln];
    }
    else
    {
        for (ucPln = 0; ucPln < PLN_PER_LUN; ucPln++)
2000127b:	01f8      	l32i.n	a15, a1, 0
2000127d:	0010c6        	j	200012c4 <L3_IFSetNFCQRowAddr..CG_1482204275+0x178>

20001280 <L3_IFSetNFCQRowAddr..CG_1482204275+0x134>:
	...

20001281 <L3_IFSetNFCQRowAddr..CG_1482204275+0x135>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2421
        DBG_Printf("Tlun %d error\n", ucTlun);
        DBG_Getch();
    }
    else if(usPbn >= BBT_BLK_PER_PLN)
    {
        DBG_Printf("PBN  %d error\n", usPbn);
20001281:	fd3321        	l32r	a2, 20000750 <_stext+0x50>
20001284:	0d3d      	mov.n	a3, a13
20001286:	099dc5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2422
        DBG_Getch();
20001289:	fd2301        	l32r	a0, 20000718 <_stext+0x18>
2000128c:	0000c0        	callx0	a0
2000128f:	fd2d01        	l32r	a0, 20000744 <_stext+0x44>
20001292:	040c      	movi.n	a4, 0
20001294:	fd2ba1        	l32r	a10, 20000740 <_stext+0x40>
20001297:	20c1b2        	addi	a11, a1, 32
2000129a:	fd2031        	l32r	a3, 2000071c <_stext+0x1c>
2000129d:	23a292        	movi	a9, 0x223
200012a0:	ffed46        	j	20001259 <L3_IFSetNFCQRowAddr..CG_1482204275+0x10d>

200012a3 <L3_IFSetNFCQRowAddr..CG_1482204275+0x157>:
	...

200012a4 <L3_IFSetNFCQRowAddr..CG_1482204275+0x158>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2430
    {
        DBG_Printf("plane %d error\n", ucPlane);
        DBG_Getch();
    }

    if(L2_BbtIsPbnBindingTableEnable() == TRUE)
200012a4:	7460c0        	extui	a6, a12, 0, 8
200012a7:	0020c0        	memw
200012aa:	182182        	l32i	a8, a1, 96
200012ad:	24a272        	movi	a7, 0x224
200012b0:	d17780        	mul16s	a7, a7, a8
200012b3:	1a88      	l32i.n	a8, a10, 4
200012b5:	7d7a      	add.n	a7, a13, a7
200012b7:	b07780        	addx8	a7, a7, a8
200012ba:	906670        	addx2	a6, a6, a7
200012bd:	001662        	l16ui	a6, a6, 0
200012c0:	ffe886        	j	20001266 <L3_IFSetNFCQRowAddr..CG_1482204275+0x11a>

200012c3 <L3_IFSetNFCQRowAddr..CG_1482204275+0x177>:
	...

200012c4 <L3_IFSetNFCQRowAddr..CG_1482204275+0x178>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1258
    tFlashAddr.ucLun = pDstFlashAddr[0]->ucLun;
    tFlashAddr.bsSLCMode = pDstFlashAddr[0]->bsSLCMode;

    // Target Flash Address Setting
       
    if (NULL == pDstFlashAddr[1]) // single plane operation, only for slc mode
200012c4:	031fb2        	l16ui	a11, a15, 6
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1254
            pDstFlashAddr[ucPln] = &atDstFlashAddr[ucPln];
        }
    }

    tFlashAddr.ucLun = pDstFlashAddr[0]->ucLun;
    tFlashAddr.bsSLCMode = pDstFlashAddr[0]->bsSLCMode;
200012c7:	0f08      	l32i.n	a0, a15, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1258

    // Target Flash Address Setting
       
    if (NULL == pDstFlashAddr[1]) // single plane operation, only for slc mode
200012c9:	1198      	l32i.n	a9, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1254
            pDstFlashAddr[ucPln] = &atDstFlashAddr[ucPln];
        }
    }

    tFlashAddr.ucLun = pDstFlashAddr[0]->ucLun;
    tFlashAddr.bsSLCMode = pDstFlashAddr[0]->bsSLCMode;
200012cb:	053400        	extui	a3, a0, 20, 1
200012ce:	0133c0        	slli	a3, a3, 20
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1258

    // Target Flash Address Setting
       
    if (NULL == pDstFlashAddr[1]) // single plane operation, only for slc mode
200012d1:	18b916        	beqz	a9, 20001460 <L3_IFSetNFCQRowAddr..CG_1482204275+0x314>
200012d4:	162182        	l32i	a8, a1, 88
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1268
        ptNfcqEntry->atRowAddr[ucRowAddrIdx++].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);
    }
    else
    {
        tFlashAddr.usPage = pDstFlashAddr[0]->usPage;
        for (ucPln = 0; ucPln < PLN_PER_LUN; ucPln++)
200012d7:	000c      	movi.n	a0, 0
200012d9:	019d      	mov.n	a9, a1
200012db:	420c      	movi.n	a2, 4
200012dd:	2aa276        	loopgtz	a2, 2000130b <L3_IFSetNFCQRowAddr..CG_1482204275+0x1bf>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1272
        {
            tFlashAddr.bsPln = ucPln;
            tFlashAddr.usBlock = pDstFlashAddr[ucPln]->usBlock;
            ptNfcqEntry->atRowAddr[ucRowAddrIdx++].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);
200012e0:	a02090        	addx4	a2, a0, a9
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1270
    else
    {
        tFlashAddr.usPage = pDstFlashAddr[0]->usPage;
        for (ucPln = 0; ucPln < PLN_PER_LUN; ucPln++)
        {
            tFlashAddr.bsPln = ucPln;
200012e3:	930034        	insbits	a3, a0, 16, 19
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1272
            tFlashAddr.usBlock = pDstFlashAddr[ucPln]->usBlock;
            ptNfcqEntry->atRowAddr[ucRowAddrIdx++].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);
200012e6:	a05080        	addx4	a5, a0, a8
200012e9:	701b      	addi.n	a7, a0, 1
200012eb:	0228      	l32i.n	a2, a2, 0
200012ed:	354030        	extui	a4, a3, 16, 4
200012f0:	8568      	l32i.n	a6, a5, 32
200012f2:	747070        	extui	a7, a7, 0, 8
200012f5:	021222        	l16ui	a2, a2, 4
200012f8:	114450        	slli	a4, a4, 11
200012fb:	070d      	mov.n	a0, a7
200012fd:	112230        	slli	a2, a2, 13
20001300:	202b20        	or	a2, a11, a2
20001303:	202240        	or	a2, a2, a4
20001306:	e10264        	insbits	a6, a2, 0, 29
20001309:	8569      	s32i.n	a6, a5, 32

2000130b <L3_IFSetNFCQRowAddr..CG_1482204275+0x1bf>:
2000130b:	07cd      	mov.n	a12, a7
2000130d:	054430        	extui	a4, a3, 20, 1
20001310:	0d0456        	bnez	a4, 200013e4 <L3_IFSetNFCQRowAddr..CG_1482204275+0x298>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1276
        }

        // for simple: only the tlc 2page program need the following process.
        if (TRUE == tFlashAddr.bsSLCMode || ptReqEntry->bsReqType != FCMD_REQ_TYPE_WRITE) return;
20001313:	192162        	l32i	a6, a1, 100
20001316:	4f0c      	movi.n	a15, 4
20001318:	0668      	l32i.n	a6, a6, 0
2000131a:	750c      	movi.n	a5, 7
2000131c:	d56260        	extui	a6, a6, 18, 14
2000131f:	020567        	bnone	a5, a6, 20001325 <L3_IFSetNFCQRowAddr..CG_1482204275+0x1d9>
20001322:	002f86        	j	200013e4 <L3_IFSetNFCQRowAddr..CG_1482204275+0x298>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:175
------------------------------------------------------------------------------*/
PAIR_PAGE_TYPE HAL_GetFlashPairPageType(U16 usPage)
{
    PAIR_PAGE_TYPE ePairPageType;

    if(usPage < 16)
20001325:	130c      	movi.n	a3, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1276
20001327:	6fa0d2        	movi	a13, 111
2000132a:	e0a5a2        	movi	a10, 0x5e0
2000132d:	ffa5e2        	movi	a14, 0x5ff
20001330:	02a042        	movi	a4, 2
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:175
20001333:	152172        	l32i	a7, a1, 84
20001336:	02bbb6        	bltui	a11, 16, 2000133c <L3_IFSetNFCQRowAddr..CG_1482204275+0x1f0>
20001339:	00a032        	movi	a3, 0

2000133c <L3_IFSetNFCQRowAddr..CG_1482204275+0x1f0>:
2000133c:	930730        	movnez	a0, a7, a3
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:180
    {
        ePairPageType = LOW_PAGE_WITHOUT_HIGH;
    }
    
    if((usPage >= 16) && (usPage < 112))
2000133f:	12bbb6        	bltui	a11, 16, 20001355 <L3_IFSetNFCQRowAddr..CG_1482204275+0x209>
20001342:	123db7        	bltu	a13, a11, 20001358 <L3_IFSetNFCQRowAddr..CG_1482204275+0x20c>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:182
    {
        if (EVEN == usPage % 2)
20001345:	0490b0        	extui	a9, a11, 0, 1
20001348:	180c      	movi.n	a8, 1
2000134a:	040d      	mov.n	a0, a4
2000134c:	830890        	moveqz	a0, a8, a9
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:192
        {
            ePairPageType = HIGH_PAGE;
        }
    }
    
    if((usPage >= 112) && (usPage < 1505))
2000134f:	1ebdb7        	bgeu	a13, a11, 20001371 <L3_IFSetNFCQRowAddr..CG_1482204275+0x225>
20001352:	000086        	j	20001358 <L3_IFSetNFCQRowAddr..CG_1482204275+0x20c>

20001355 <L3_IFSetNFCQRowAddr..CG_1482204275+0x209>:
20001355:	18bdb7        	bgeu	a13, a11, 20001371 <L3_IFSetNFCQRowAddr..CG_1482204275+0x225>
20001358:	183ab7        	bltu	a10, a11, 20001374 <L3_IFSetNFCQRowAddr..CG_1482204275+0x228>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:194
    {
        if (0 == (usPage - 112) % 3)
2000135b:	320c      	movi.n	a2, 3
2000135d:	90cb02        	addi	a0, a11, -112
20001360:	f20020        	rems	a0, a0, a2
20001363:	1cd016        	beqz	a0, 20001534 <L3_IFSetNFCQRowAddr..CG_1482204275+0x3e8>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:198
        {
            ePairPageType = EXTRA_PAGE;
        }
        else if (1 == (usPage - 112) % 3)
20001366:	150c      	movi.n	a5, 1
20001368:	ffc062        	addi	a6, a0, -1
2000136b:	200440        	or	a0, a4, a4
2000136e:	830560        	moveqz	a0, a5, a6
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:207
        else
        {
            ePairPageType = HIGH_PAGE;
        }
    }
    if((usPage >= 1505) && (usPage < 1536))
20001371:	0bbab7        	bgeu	a10, a11, 20001380 <L3_IFSetNFCQRowAddr..CG_1482204275+0x234>
20001374:	083eb7        	bltu	a14, a11, 20001380 <L3_IFSetNFCQRowAddr..CG_1482204275+0x234>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:209
    {
        if (0 == usPage % 2)
20001377:	152102        	l32i	a0, a1, 84
2000137a:	0470b0        	extui	a7, a11, 0, 1
2000137d:	830f70        	moveqz	a0, a15, a7
20001380:	800b      	addi.n	a8, a0, -1
20001382:	110816        	beqz	a8, 20001496 <L3_IFSetNFCQRowAddr..CG_1482204275+0x34a>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:175
------------------------------------------------------------------------------*/
PAIR_PAGE_TYPE HAL_GetFlashPairPageType(U16 usPage)
{
    PAIR_PAGE_TYPE ePairPageType;

    if(usPage < 16)
20001385:	152192        	l32i	a9, a1, 84
20001388:	930930        	movnez	a0, a9, a3
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:180
    {
        ePairPageType = LOW_PAGE_WITHOUT_HIGH;
    }
    
    if((usPage >= 16) && (usPage < 112))
2000138b:	6abbb6        	bltui	a11, 16, 200013f9 <L3_IFSetNFCQRowAddr..CG_1482204275+0x2ad>
2000138e:	6a3db7        	bltu	a13, a11, 200013fc <L3_IFSetNFCQRowAddr..CG_1482204275+0x2b0>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:182
    {
        if (EVEN == usPage % 2)
20001391:	0430b0        	extui	a3, a11, 0, 1
20001394:	120c      	movi.n	a2, 1
20001396:	040d      	mov.n	a0, a4
20001398:	830230        	moveqz	a0, a2, a3
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:192
        {
            ePairPageType = HIGH_PAGE;
        }
    }
    
    if((usPage >= 112) && (usPage < 1505))
2000139b:	76bdb7        	bgeu	a13, a11, 20001415 <L3_IFSetNFCQRowAddr..CG_1482204275+0x2c9>
2000139e:	001686        	j	200013fc <L3_IFSetNFCQRowAddr..CG_1482204275+0x2b0>

200013a1 <L3_IFSetNFCQRowAddr..CG_1482204275+0x255>:
	...

200013a2 <L3_IFSetNFCQRowAddr..CG_1482204275+0x256>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:228
{
    U16 usHighPg = INVALID_4F;
    
    if(usExtraPg == 112)
    {
        usHighPg = 49;
200013a2:	1d3c      	movi.n	a13, 49
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1284
        {
            tFlashAddr.usPage++;
        }
        else if (EXTRA_PAGE == HAL_GetFlashPairPageType(tFlashAddr.usPage))
        {
            tFlashAddr.usPage = HAL_GetHighPageIndexfromExtra(tFlashAddr.usPage);
200013a4:	0dbd      	mov.n	a11, a13
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1291
        else
        {
            return;
        }

        for (ucPln = 0; ucPln < PLN_PER_LUN; ucPln++)
200013a6:	000c      	movi.n	a0, 0
200013a8:	162172        	l32i	a7, a1, 88
200013ab:	208110        	or	a8, a1, a1
200013ae:	04a022        	movi	a2, 4
200013b1:	2aa276        	loopgtz	a2, 200013df <L3_IFSetNFCQRowAddr..CG_1482204275+0x293>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1295
        {
            tFlashAddr.bsPln = ucPln;
            tFlashAddr.usBlock = pDstFlashAddr[ucPln]->usBlock;
            ptNfcqEntry->atRowAddr[ucRowAddrIdx++].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);
200013b4:	a02080        	addx4	a2, a0, a8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1293
            return;
        }

        for (ucPln = 0; ucPln < PLN_PER_LUN; ucPln++)
        {
            tFlashAddr.bsPln = ucPln;
200013b7:	343000        	extui	a3, a0, 0, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1295
            tFlashAddr.usBlock = pDstFlashAddr[ucPln]->usBlock;
            ptNfcqEntry->atRowAddr[ucRowAddrIdx++].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);
200013ba:	a05c70        	addx4	a5, a12, a7
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1291
        else
        {
            return;
        }

        for (ucPln = 0; ucPln < PLN_PER_LUN; ucPln++)
200013bd:	001b      	addi.n	a0, a0, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1295
        {
            tFlashAddr.bsPln = ucPln;
            tFlashAddr.usBlock = pDstFlashAddr[ucPln]->usBlock;
            ptNfcqEntry->atRowAddr[ucRowAddrIdx++].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);
200013bf:	cc1b      	addi.n	a12, a12, 1
200013c1:	0228      	l32i.n	a2, a2, 0
200013c3:	113350        	slli	a3, a3, 11
200013c6:	8568      	l32i.n	a6, a5, 32
200013c8:	74c0c0        	extui	a12, a12, 0, 8
200013cb:	021222        	l16ui	a2, a2, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1291
        else
        {
            return;
        }

        for (ucPln = 0; ucPln < PLN_PER_LUN; ucPln++)
200013ce:	740000        	extui	a0, a0, 0, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1295
        {
            tFlashAddr.bsPln = ucPln;
            tFlashAddr.usBlock = pDstFlashAddr[ucPln]->usBlock;
            ptNfcqEntry->atRowAddr[ucRowAddrIdx++].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);
200013d1:	112230        	slli	a2, a2, 13
200013d4:	202b20        	or	a2, a11, a2
200013d7:	202230        	or	a2, a2, a3
200013da:	e10264        	insbits	a6, a2, 0, 29
200013dd:	8569      	s32i.n	a6, a5, 32

200013df <L3_IFSetNFCQRowAddr..CG_1482204275+0x293>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1297
        }
        ASSERT(ucRowAddrIdx <= 8);
200013df:	850c      	movi.n	a5, 8
200013e1:	7835c7        	bltu	a5, a12, 2000145d <L3_IFSetNFCQRowAddr..CG_1482204275+0x311>

200013e4 <L3_IFSetNFCQRowAddr..CG_1482204275+0x298>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1288
        {
            tFlashAddr.usPage = HAL_GetHighPageIndexfromExtra(tFlashAddr.usPage);
        }
        else
        {
            return;
200013e4:	1121c2        	l32i	a12, a1, 68
200013e7:	1221d2        	l32i	a13, a1, 72
200013ea:	1321e2        	l32i	a14, a1, 76
200013ed:	1421f2        	l32i	a15, a1, 80
200013f0:	102102        	l32i	a0, a1, 64
200013f3:	70c112        	addi	a1, a1, 112
200013f6:	f00d      	ret.n

200013f8 <L3_IFSetNFCQRowAddr..CG_1482204275+0x2ac>:
	...

200013f9 <L3_IFSetNFCQRowAddr..CG_1482204275+0x2ad>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:192
        {
            ePairPageType = HIGH_PAGE;
        }
    }
    
    if((usPage >= 112) && (usPage < 1505))
200013f9:	18bdb7        	bgeu	a13, a11, 20001415 <L3_IFSetNFCQRowAddr..CG_1482204275+0x2c9>
200013fc:	183ab7        	bltu	a10, a11, 20001418 <L3_IFSetNFCQRowAddr..CG_1482204275+0x2cc>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:194
    {
        if (0 == (usPage - 112) % 3)
200013ff:	320c      	movi.n	a2, 3
20001401:	90cb02        	addi	a0, a11, -112
20001404:	f20020        	rems	a0, a0, a2
20001407:	c09c      	beqz.n	a0, 20001427 <L3_IFSetNFCQRowAddr..CG_1482204275+0x2db>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:198
        {
            ePairPageType = EXTRA_PAGE;
        }
        else if (1 == (usPage - 112) % 3)
20001409:	ffc052        	addi	a5, a0, -1
2000140c:	01a032        	movi	a3, 1
2000140f:	834350        	moveqz	a4, a3, a5
20001412:	200440        	or	a0, a4, a4
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:207
        else
        {
            ePairPageType = HIGH_PAGE;
        }
    }
    if((usPage >= 1505) && (usPage < 1536))
20001415:	0bbab7        	bgeu	a10, a11, 20001424 <L3_IFSetNFCQRowAddr..CG_1482204275+0x2d8>
20001418:	083eb7        	bltu	a14, a11, 20001424 <L3_IFSetNFCQRowAddr..CG_1482204275+0x2d8>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:209
    {
        if (0 == usPage % 2)
2000141b:	152102        	l32i	a0, a1, 84
2000141e:	0460b0        	extui	a6, a11, 0, 1
20001421:	830f60        	moveqz	a0, a15, a6
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1282
        
        if (LOW_PAGE == HAL_GetFlashPairPageType(tFlashAddr.usPage))
        {
            tFlashAddr.usPage++;
        }
        else if (EXTRA_PAGE == HAL_GetFlashPairPageType(tFlashAddr.usPage))
20001424:	bc4066        	bnei	a0, 4, 200013e4 <L3_IFSetNFCQRowAddr..CG_1482204275+0x298>
20001427:	90cb72        	addi	a7, a11, -112
2000142a:	f74716        	beqz	a7, 200013a2 <L3_IFSetNFCQRowAddr..CG_1482204275+0x256>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:230
    
    if(usExtraPg == 112)
    {
        usHighPg = 49;
    }
    else if (((usExtraPg - 112) / 3) < 32)
2000142d:	cfa082        	movi	a8, 207
20001430:	6c28b7        	blt	a8, a11, 200014a0 <L3_IFSetNFCQRowAddr..CG_1482204275+0x354>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:232
    {
        usHighPg = 49 + (((usExtraPg - 112) / 3) * 2);
20001433:	3e0c      	movi.n	a14, 3
20001435:	d2d7e0        	quos	a13, a7, a14
20001438:	1e3c      	movi.n	a14, 49
2000143a:	90dde0        	addx2	a13, a13, a14
2000143d:	f4d0d0        	extui	a13, a13, 0, 16
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:247
    else if(usExtraPg > 1504)
    {
        usHighPg = (((usExtraPg - 1504) / 2) * 3) + 1410;
    }

    if(INVALID_4F == usHighPg)
20001440:	fcc5f1        	l32r	a15, 20000754 <_stext+0x54>
20001443:	f03d      	nop.n
20001445:	c0fdf0        	sub	a15, a13, a15
20001448:	f58f56        	bnez	a15, 200013a4 <L3_IFSetNFCQRowAddr..CG_1482204275+0x258>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:249
    {
        DBG_Printf("Get upper page error!!!\n");
2000144b:	fcc321        	l32r	a2, 20000758 <_stext+0x58>
2000144e:	098145        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:250
        DBG_Getch();
20001451:	fcb101        	l32r	a0, 20000718 <_stext+0x18>
20001454:	0000c0        	callx0	a0
20001457:	ffd246        	j	200013a4 <L3_IFSetNFCQRowAddr..CG_1482204275+0x258>

2000145a <L3_IFSetNFCQRowAddr..CG_1482204275+0x30e>:
2000145a:	000000                                        ...

2000145d <L3_IFSetNFCQRowAddr..CG_1482204275+0x311>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1297
        {
            tFlashAddr.bsPln = ucPln;
            tFlashAddr.usBlock = pDstFlashAddr[ucPln]->usBlock;
            ptNfcqEntry->atRowAddr[ucRowAddrIdx++].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);
        }
        ASSERT(ucRowAddrIdx <= 8);
2000145d:	ffff06        	j	2000145d <L3_IFSetNFCQRowAddr..CG_1482204275+0x311>

20001460 <L3_IFSetNFCQRowAddr..CG_1482204275+0x314>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1288
        {
            tFlashAddr.usPage = HAL_GetHighPageIndexfromExtra(tFlashAddr.usPage);
        }
        else
        {
            return;
20001460:	1121c2        	l32i	a12, a1, 68
20001463:	1221d2        	l32i	a13, a1, 72
20001466:	1321e2        	l32i	a14, a1, 76
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1263
    if (NULL == pDstFlashAddr[1]) // single plane operation, only for slc mode
    {
        tFlashAddr.usPage = pDstFlashAddr[0]->usPage;
        tFlashAddr.bsPln = pDstFlashAddr[0]->bsPln;
        tFlashAddr.usBlock = pDstFlashAddr[0]->usBlock;
        ptNfcqEntry->atRowAddr[ucRowAddrIdx++].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);
20001469:	162122        	l32i	a2, a1, 88
2000146c:	021f42        	l16ui	a4, a15, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1261
    // Target Flash Address Setting
       
    if (NULL == pDstFlashAddr[1]) // single plane operation, only for slc mode
    {
        tFlashAddr.usPage = pDstFlashAddr[0]->usPage;
        tFlashAddr.bsPln = pDstFlashAddr[0]->bsPln;
2000146f:	f55000        	extui	a5, a0, 16, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1288
        {
            tFlashAddr.usPage = HAL_GetHighPageIndexfromExtra(tFlashAddr.usPage);
        }
        else
        {
            return;
20001472:	1421f2        	l32i	a15, a1, 80
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1261
    // Target Flash Address Setting
       
    if (NULL == pDstFlashAddr[1]) // single plane operation, only for slc mode
    {
        tFlashAddr.usPage = pDstFlashAddr[0]->usPage;
        tFlashAddr.bsPln = pDstFlashAddr[0]->bsPln;
20001475:	930534        	insbits	a3, a5, 16, 19
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1263
        tFlashAddr.usBlock = pDstFlashAddr[0]->usBlock;
        ptNfcqEntry->atRowAddr[ucRowAddrIdx++].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);
20001478:	114430        	slli	a4, a4, 13
2000147b:	355030        	extui	a5, a3, 16, 4
2000147e:	8208      	l32i.n	a0, a2, 32
20001480:	115550        	slli	a5, a5, 11
20001483:	204b40        	or	a4, a11, a4
20001486:	204450        	or	a4, a4, a5
20001489:	e10404        	insbits	a0, a4, 0, 29
2000148c:	8209      	s32i.n	a0, a2, 32
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1288
        {
            tFlashAddr.usPage = HAL_GetHighPageIndexfromExtra(tFlashAddr.usPage);
        }
        else
        {
            return;
2000148e:	102102        	l32i	a0, a1, 64
20001491:	70c112        	addi	a1, a1, 112
20001494:	f00d      	ret.n

20001496 <L3_IFSetNFCQRowAddr..CG_1482204275+0x34a>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1280
        // for simple: only the tlc 2page program need the following process.
        if (TRUE == tFlashAddr.bsSLCMode || ptReqEntry->bsReqType != FCMD_REQ_TYPE_WRITE) return;
        
        if (LOW_PAGE == HAL_GetFlashPairPageType(tFlashAddr.usPage))
        {
            tFlashAddr.usPage++;
20001496:	bb1b      	addi.n	a11, a11, 1
20001498:	f4b0b0        	extui	a11, a11, 0, 16
2000149b:	ffc1c6        	j	200013a6 <L3_IFSetNFCQRowAddr..CG_1482204275+0x25a>

2000149e <L3_IFSetNFCQRowAddr..CG_1482204275+0x352>:
	...

200014a0 <L3_IFSetNFCQRowAddr..CG_1482204275+0x354>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:234
    }
    else if (((usExtraPg - 112) / 3) < 32)
    {
        usHighPg = 49 + (((usExtraPg - 112) / 3) * 2);
    }
    else if((((usExtraPg - 112) / 3) >= 32) && (usExtraPg < 1456))
200014a0:	afa5d2        	movi	a13, 0x5af
200014a3:	02bdb7        	bgeu	a13, a11, 200014a9 <L3_IFSetNFCQRowAddr..CG_1482204275+0x35d>
200014a6:	001f86        	j	20001528 <L3_IFSetNFCQRowAddr..CG_1482204275+0x3dc>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:236
    {
        usHighPg = 49 + (31 * 2) + ((((usExtraPg - 112) / 3) - 31) * 3);
200014a9:	3e0c      	movi.n	a14, 3
200014ab:	d2d7e0        	quos	a13, a7, a14
200014ae:	90ddd0        	addx2	a13, a13, a13
200014b1:	12cdd2        	addi	a13, a13, 18
200014b4:	f4d0d0        	extui	a13, a13, 0, 16
200014b7:	ffe146        	j	20001440 <L3_IFSetNFCQRowAddr..CG_1482204275+0x2f4>

200014ba <L3_IFSetNFCQRowAddr..CG_1482204275+0x36e>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1232
        DBG_Getch();
    }

    if (FCMD_REQ_SUBTYPE_SINGLE == ptCtrlEntry->ptReqEntry->bsReqSubType)
    {
        ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
200014ba:	1921e2        	l32i	a14, a1, 100
200014bd:	4ec8      	l32i.n	a12, a14, 16
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2414
GLOBAL U16 L2_BbtGetPbnBindingTable(U8 ucTlun, U16 usPbn, U8 ucPlane)
{
    // this function is provided to L3 as a public interface

    // input check
    if(ucTlun >= SUBSYSTEM_LUN_NUM)
200014bf:	e308      	l32i.n	a0, a3, 56
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1232
200014c1:	15c2c0        	extui	a12, a12, 18, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1233
        atDstFlashAddr[ucPln].ucLun = ucLun;
200014c4:	b0fcb0        	addx8	a15, a12, a11
200014c7:	014f42        	s8i	a4, a15, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1234
        atDstFlashAddr[ucPln].bsPln = ucPln;
200014ca:	0f58      	l32i.n	a5, a15, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1236
        atDstFlashAddr[ucPln].bsSLCMode = bSLCMode;
        atDstFlashAddr[ucPln].usPage = ptCtrlEntry->bsPhyPage;
200014cc:	1a2122        	l32i	a2, a1, 104
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1234

    if (FCMD_REQ_SUBTYPE_SINGLE == ptCtrlEntry->ptReqEntry->bsReqSubType)
    {
        ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
        atDstFlashAddr[ucPln].ucLun = ucLun;
        atDstFlashAddr[ucPln].bsPln = ucPln;
200014cf:	930c54        	insbits	a5, a12, 16, 19
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1235
        atDstFlashAddr[ucPln].bsSLCMode = bSLCMode;
200014d2:	b04d54        	insbits	a5, a13, 20, 20
200014d5:	0f59      	s32i.n	a5, a15, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1236
        atDstFlashAddr[ucPln].usPage = ptCtrlEntry->bsPhyPage;
200014d7:	021222        	l16ui	a2, a2, 4
200014da:	035f22        	s16i	a2, a15, 6
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1237
        atDstFlashAddr[ucPln].usBlock = L2_BbtGetPbnBindingTable(ptReqEntry->bsTLun, ptReqEntry->tFlashDesc.bsPhyBlk, ucPln);
200014dd:	3ed8      	l32i.n	a13, a14, 12
200014df:	000ee2        	l8ui	a14, a14, 0
200014e2:	94dad0        	extui	a13, a13, 10, 10
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2414
200014e5:	18be07        	bgeu	a14, a0, 20001501 <L3_IFSetNFCQRowAddr..CG_1482204275+0x3b5>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2419
    {
        DBG_Printf("Tlun %d error\n", ucTlun);
        DBG_Getch();
    }
    else if(usPbn >= BBT_BLK_PER_PLN)
200014e8:	26b9d7        	bgeu	a9, a13, 20001512 <L3_IFSetNFCQRowAddr..CG_1482204275+0x3c6>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2421
    {
        DBG_Printf("PBN  %d error\n", usPbn);
200014eb:	fc9921        	l32r	a2, 20000750 <_stext+0x50>
200014ee:	203dd0        	or	a3, a13, a13
200014f1:	097705        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2422
        DBG_Getch();
200014f4:	fc8901        	l32r	a0, 20000718 <_stext+0x18>
200014f7:	0000c0        	callx0	a0
200014fa:	fc91a1        	l32r	a10, 20000740 <_stext+0x40>
200014fd:	000446        	j	20001512 <L3_IFSetNFCQRowAddr..CG_1482204275+0x3c6>

20001500 <L3_IFSetNFCQRowAddr..CG_1482204275+0x3b4>:
	...

20001501 <L3_IFSetNFCQRowAddr..CG_1482204275+0x3b5>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2416
    // this function is provided to L3 as a public interface

    // input check
    if(ucTlun >= SUBSYSTEM_LUN_NUM)
    {
        DBG_Printf("Tlun %d error\n", ucTlun);
20001501:	fc9221        	l32r	a2, 2000074c <_stext+0x4c>
20001504:	0e3d      	mov.n	a3, a14
20001506:	0975c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2417
        DBG_Getch();
20001509:	fc8301        	l32r	a0, 20000718 <_stext+0x18>
2000150c:	0000c0        	callx0	a0
2000150f:	fc8ca1        	l32r	a10, 20000740 <_stext+0x40>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2430
    {
        DBG_Printf("plane %d error\n", ucPlane);
        DBG_Getch();
    }

    if(L2_BbtIsPbnBindingTableEnable() == TRUE)
20001512:	0020c0        	memw
20001515:	2a08      	l32i.n	a0, a10, 8
20001517:	740000        	extui	a0, a0, 0, 8
2000151a:	371026        	beqi	a0, 1, 20001555 <L3_IFSetNFCQRowAddr..CG_1482204275+0x409>
2000151d:	200dd0        	or	a0, a13, a13
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1237
20001520:	025f02        	s16i	a0, a15, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1238
        pDstFlashAddr[0] = &atDstFlashAddr[ucPln];
20001523:	01f9      	s32i.n	a15, a1, 0
20001525:	ff66c6        	j	200012c4 <L3_IFSetNFCQRowAddr..CG_1482204275+0x178>

20001528 <L3_IFSetNFCQRowAddr..CG_1482204275+0x3dc>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:238
    }
    else if((usExtraPg >= 1456) && (usExtraPg <= 1504))
20001528:	0d3ab7        	bltu	a10, a11, 20001539 <L3_IFSetNFCQRowAddr..CG_1482204275+0x3ed>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:240
    {
        usHighPg = 1362 + (usExtraPg - 1456);
2000152b:	a2cbd2        	addi	a13, a11, -94
2000152e:	f4d0d0        	extui	a13, a13, 0, 16
20001531:	ffc2c6        	j	20001440 <L3_IFSetNFCQRowAddr..CG_1482204275+0x2f4>

20001534 <L3_IFSetNFCQRowAddr..CG_1482204275+0x3e8>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:196
    
    if((usPage >= 112) && (usPage < 1505))
    {
        if (0 == (usPage - 112) % 3)
        {
            ePairPageType = EXTRA_PAGE;
20001534:	400c      	movi.n	a0, 4
20001536:	ff92c6        	j	20001385 <L3_IFSetNFCQRowAddr..CG_1482204275+0x239>

20001539 <L3_IFSetNFCQRowAddr..CG_1482204275+0x3ed>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:240
    {
        usHighPg = 49 + (31 * 2) + ((((usExtraPg - 112) / 3) - 31) * 3);
    }
    else if((usExtraPg >= 1456) && (usExtraPg <= 1504))
    {
        usHighPg = 1362 + (usExtraPg - 1456);
20001539:	20aae2        	movi	a14, 0xfffffa20
2000153c:	ebea      	add.n	a14, a11, a14
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:244
    }
    else if(usExtraPg > 1504)
    {
        usHighPg = (((usExtraPg - 1504) / 2) * 3) + 1410;
2000153e:	de1b      	addi.n	a13, a14, 1
20001540:	b3dee0        	movgez	a13, a14, a14
20001543:	21d1d0        	srai	a13, a13, 1
20001546:	90ddd0        	addx2	a13, a13, a13
20001549:	06ddd2        	addmi	a13, a13, 0x600
2000154c:	82cdd2        	addi	a13, a13, -126
2000154f:	f4d0d0        	extui	a13, a13, 0, 16
20001552:	ffba86        	j	20001440 <L3_IFSetNFCQRowAddr..CG_1482204275+0x2f4>

20001555 <L3_IFSetNFCQRowAddr..CG_1482204275+0x409>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2430
20001555:	0020c0        	memw
20001558:	24a202        	movi	a0, 0x224
2000155b:	d100e0        	mul16s	a0, a0, a14
2000155e:	1a28      	l32i.n	a2, a10, 4
20001560:	0d0a      	add.n	a0, a13, a0
20001562:	b00020        	addx8	a0, a0, a2
20001565:	900c00        	addx2	a0, a12, a0
20001568:	001002        	l16ui	a0, a0, 0
2000156b:	ffec46        	j	20001520 <L3_IFSetNFCQRowAddr..CG_1482204275+0x3d4>

2000156e <L3_IFSetNFCQRowAddr..CG_1482204275+0x422>:
	...

20001570 <L3_IFIsEnableSsu1..PF_1482204275>:
L3_IFIsEnableSsu1():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1158
==============================================================================*/
LOCAL BOOL L3_IFIsEnableSsu1(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{       
    BOOL bEnable = TRUE;

    if (TRUE != L3_IFIsAutoRptReq(ptCtrlEntry) || TRUE == L3_IFIsForceRecycle(ptCtrlEntry))
20001570:	0238      	l32i.n	a3, a2, 0
20001572:	0338      	l32i.n	a3, a3, 0
20001574:	153c30        	extui	a3, a3, 28, 2
20001577:	0f2366        	bnei	a3, 2, 2000158a <L3_IFIsEnableSsu1..PF_1482204275+0x1a>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1560
}
BOOL L3_IFIsForceRecycle(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    BOOL bEnable = FALSE;

    if ((NULL != ptCtrlEntry->ptErrHEntry)
2000157a:	9248      	l32i.n	a4, a2, 36
2000157c:	a4cc      	bnez.n	a4, 2000158a <L3_IFIsEnableSsu1..PF_1482204275+0x1a>
2000157e:	1258      	l32i.n	a5, a2, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1158
==============================================================================*/
LOCAL BOOL L3_IFIsEnableSsu1(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{       
    BOOL bEnable = TRUE;

    if (TRUE != L3_IFIsAutoRptReq(ptCtrlEntry) || TRUE == L3_IFIsForceRecycle(ptCtrlEntry))
20001580:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1560
}
BOOL L3_IFIsForceRecycle(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    BOOL bEnable = FALSE;

    if ((NULL != ptCtrlEntry->ptErrHEntry)
20001582:	155a50        	extui	a5, a5, 26, 2
20001585:	0125e6        	bgei	a5, 2, 2000158a <L3_IFIsEnableSsu1..PF_1482204275+0x1a>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1163
    if (TRUE != L3_IFIsAutoRptReq(ptCtrlEntry) || TRUE == L3_IFIsForceRecycle(ptCtrlEntry))
    {
        bEnable = FALSE;
    }

    return bEnable; 
20001588:	f00d      	ret.n

2000158a <L3_IFIsEnableSsu1..PF_1482204275+0x1a>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1158
==============================================================================*/
LOCAL BOOL L3_IFIsEnableSsu1(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{       
    BOOL bEnable = TRUE;

    if (TRUE != L3_IFIsAutoRptReq(ptCtrlEntry) || TRUE == L3_IFIsForceRecycle(ptCtrlEntry))
2000158a:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1163
    {
        bEnable = FALSE;
    }

    return bEnable; 
2000158c:	f00d      	ret.n

2000158e <L3_IFIsEnableSsu1..PF_1482204275+0x1e>:
	...

20001590 <L3_IFIsEnableSsu0..OF_1482204275>:
L3_IFIsEnableSsu0():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1136
==============================================================================*/
LOCAL BOOL L3_IFIsEnableSsu0(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    BOOL bEnable = TRUE;

    if (TRUE == L3_IFIsRecycled(ptCtrlEntry) || TRUE == L3_IFIsForceRecycle(ptCtrlEntry))
20001590:	0238      	l32i.n	a3, a2, 0
20001592:	0338      	l32i.n	a3, a3, 0
20001594:	153c30        	extui	a3, a3, 28, 2
20001597:	0f1326        	beqi	a3, 1, 200015aa <L3_IFIsEnableSsu0..OF_1482204275+0x1a>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1560
}
BOOL L3_IFIsForceRecycle(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    BOOL bEnable = FALSE;

    if ((NULL != ptCtrlEntry->ptErrHEntry)
2000159a:	9248      	l32i.n	a4, a2, 36
2000159c:	a4cc      	bnez.n	a4, 200015aa <L3_IFIsEnableSsu0..OF_1482204275+0x1a>
2000159e:	1258      	l32i.n	a5, a2, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1136
==============================================================================*/
LOCAL BOOL L3_IFIsEnableSsu0(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    BOOL bEnable = TRUE;

    if (TRUE == L3_IFIsRecycled(ptCtrlEntry) || TRUE == L3_IFIsForceRecycle(ptCtrlEntry))
200015a0:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1560
}
BOOL L3_IFIsForceRecycle(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    BOOL bEnable = FALSE;

    if ((NULL != ptCtrlEntry->ptErrHEntry)
200015a2:	155a50        	extui	a5, a5, 26, 2
200015a5:	0125e6        	bgei	a5, 2, 200015aa <L3_IFIsEnableSsu0..OF_1482204275+0x1a>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1141
    if (TRUE == L3_IFIsRecycled(ptCtrlEntry) || TRUE == L3_IFIsForceRecycle(ptCtrlEntry))
    {
        bEnable = FALSE;
    }
    
    return bEnable;
200015a8:	f00d      	ret.n

200015aa <L3_IFIsEnableSsu0..OF_1482204275+0x1a>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1136
==============================================================================*/
LOCAL BOOL L3_IFIsEnableSsu0(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    BOOL bEnable = TRUE;

    if (TRUE == L3_IFIsRecycled(ptCtrlEntry) || TRUE == L3_IFIsForceRecycle(ptCtrlEntry))
200015aa:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1141
    {
        bEnable = FALSE;
    }
    
    return bEnable;
200015ac:	f00d      	ret.n

200015ae <L3_IFIsEnableSsu0..OF_1482204275+0x1e>:
	...

200015b0 <L3_IFSetNFCQXor>:
L3_IFSetNFCQXor():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:312

    return bXoreReleaseFinish;
}

void L3_IFSetNFCQXor(NFCQ_ENTRY *ptNfcqEntry, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
200015b0:	f0c112        	addi	a1, a1, -16
200015b3:	0109      	s32i.n	a0, a1, 0
200015b5:	11c9      	s32i.n	a12, a1, 4
200015b7:	21d9      	s32i.n	a13, a1, 8
200015b9:	02cd      	mov.n	a12, a2
200015bb:	03dd      	mov.n	a13, a3
200015bd:	d2ac      	beqz.n	a2, 200015ee <L3_IFSetNFCQXor+0x3e>
200015bf:	e3ac      	beqz.n	a3, 200015f1 <L3_IFSetNFCQXor+0x41>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:316
    ASSERT(ptNfcqEntry != NULL);
    ASSERT(ptCtrlEntry != NULL);

    ptNfcqEntry->bsXorBufId = 0;
200015c1:	fc6631        	l32r	a3, 2000075c <_stext+0x5c>
200015c4:	3208      	l32i.n	a0, a2, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:317
    ptNfcqEntry->bsXorEn = TRUE;
200015c6:	fc6621        	l32r	a2, 20000760 <_stext+0x60>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:316
void L3_IFSetNFCQXor(NFCQ_ENTRY *ptNfcqEntry, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    ASSERT(ptNfcqEntry != NULL);
    ASSERT(ptCtrlEntry != NULL);

    ptNfcqEntry->bsXorBufId = 0;
200015c9:	100030        	and	a0, a0, a3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:317
    ptNfcqEntry->bsXorEn = TRUE;
200015cc:	200020        	or	a0, a0, a2
200015cf:	3c09      	s32i.n	a0, a12, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:318
    ptNfcqEntry->bsXorId = ptCtrlEntry->bsXoreId;
200015d1:	2d28      	l32i.n	a2, a13, 8
200015d3:	412520        	srli	a2, a2, 5
200015d6:	d28204        	insbits	a0, a2, 24, 26
200015d9:	3c09      	s32i.n	a0, a12, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:320

    if (TRUE == L3_IsTlcXor6DsgIssue(ptCtrlEntry->ptReqEntry))
200015db:	0d28      	l32i.n	a2, a13, 0
200015dd:	018205        	call0	20002e00 <L3_IsTlcXor6DsgIssue>
200015e0:	101226        	beqi	a2, 1, 200015f4 <L3_IFSetNFCQXor+0x44>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:324
    {
        ptNfcqEntry->bsParPgPos = 3 - ptCtrlEntry->bsMultiStep;
    }
    return;
200015e3:	11c8      	l32i.n	a12, a1, 4
200015e5:	21d8      	l32i.n	a13, a1, 8
200015e7:	0108      	l32i.n	a0, a1, 0
200015e9:	10c112        	addi	a1, a1, 16
200015ec:	f00d      	ret.n

200015ee <L3_IFSetNFCQXor+0x3e>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:313
    return bXoreReleaseFinish;
}

void L3_IFSetNFCQXor(NFCQ_ENTRY *ptNfcqEntry, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    ASSERT(ptNfcqEntry != NULL);
200015ee:	ffff06        	j	200015ee <L3_IFSetNFCQXor+0x3e>

200015f1 <L3_IFSetNFCQXor+0x41>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:314
    ASSERT(ptCtrlEntry != NULL);
200015f1:	ffff06        	j	200015f1 <L3_IFSetNFCQXor+0x41>

200015f4 <L3_IFSetNFCQXor+0x44>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:324

    if (TRUE == L3_IsTlcXor6DsgIssue(ptCtrlEntry->ptReqEntry))
    {
        ptNfcqEntry->bsParPgPos = 3 - ptCtrlEntry->bsMultiStep;
    }
    return;
200015f4:	0108      	l32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:322
    ptNfcqEntry->bsXorEn = TRUE;
    ptNfcqEntry->bsXorId = ptCtrlEntry->bsXoreId;

    if (TRUE == L3_IsTlcXor6DsgIssue(ptCtrlEntry->ptReqEntry))
    {
        ptNfcqEntry->bsParPgPos = 3 - ptCtrlEntry->bsMultiStep;
200015f6:	5c48      	l32i.n	a4, a12, 20
200015f8:	1d68      	l32i.n	a6, a13, 4
200015fa:	350c      	movi.n	a5, 3
200015fc:	156a60        	extui	a6, a6, 26, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:324
    }
    return;
200015ff:	21d8      	l32i.n	a13, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:322
    ptNfcqEntry->bsXorEn = TRUE;
    ptNfcqEntry->bsXorId = ptCtrlEntry->bsXoreId;

    if (TRUE == L3_IsTlcXor6DsgIssue(ptCtrlEntry->ptReqEntry))
    {
        ptNfcqEntry->bsParPgPos = 3 - ptCtrlEntry->bsMultiStep;
20001601:	c05560        	sub	a5, a5, a6
20001604:	032544        	insbits	a4, a5, 2, 3
20001607:	5c49      	s32i.n	a4, a12, 20
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:324
    }
    return;
20001609:	11c8      	l32i.n	a12, a1, 4
2000160b:	10c112        	addi	a1, a1, 16
2000160e:	f00d      	ret.n

20001610 <L3_IFSetNFCQDataTxfer..NF_1482204275>:
L3_IFSetNFCQDataTxfer():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1085
Usage      : 
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
LOCAL void L3_IFSetNFCQDataTxfer(NFCQ_ENTRY *ptNfcqEntry, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
20001610:	f0c112        	addi	a1, a1, -16
20001613:	31d9      	s32i.n	a13, a1, 12
20001615:	21c9      	s32i.n	a12, a1, 8
20001617:	1109      	s32i.n	a0, a1, 4
20001619:	03cd      	mov.n	a12, a3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1088
    U8 ucSecAddrIdx;

    for (ucSecAddrIdx = 0; ucSecAddrIdx < ptCtrlEntry->tDTxCtrl.bsSecAddrIndex; ucSecAddrIdx++)
2000161b:	6308      	l32i.n	a0, a3, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1085
Usage      : 
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
LOCAL void L3_IFSetNFCQDataTxfer(NFCQ_ENTRY *ptNfcqEntry, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
2000161d:	20d220        	or	a13, a2, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1088
    U8 ucSecAddrIdx;

    for (ucSecAddrIdx = 0; ucSecAddrIdx < ptCtrlEntry->tDTxCtrl.bsSecAddrIndex; ucSecAddrIdx++)
20001620:	242100        	extui	a2, a0, 1, 3
20001623:	2212a6        	blti	a2, 1, 20001649 <L3_IFSetNFCQDataTxfer..NF_1482204275+0x39>
20001626:	00a022        	movi	a2, 0
20001629:	188076        	loop	a0, 20001645 <L3_IFSetNFCQDataTxfer..NF_1482204275+0x35>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1090
    {
        ptNfcqEntry->aSecAddr[ucSecAddrIdx] = ptCtrlEntry->tDTxCtrl.aSecAddr[ucSecAddrIdx];
2000162c:	9042d0        	addx2	a4, a2, a13
2000162f:	9032c0        	addx2	a3, a2, a12
20001632:	0e1332        	l16ui	a3, a3, 28
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1088
==============================================================================*/
LOCAL void L3_IFSetNFCQDataTxfer(NFCQ_ENTRY *ptNfcqEntry, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U8 ucSecAddrIdx;

    for (ucSecAddrIdx = 0; ucSecAddrIdx < ptCtrlEntry->tDTxCtrl.bsSecAddrIndex; ucSecAddrIdx++)
20001635:	221b      	addi.n	a2, a2, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1090
    {
        ptNfcqEntry->aSecAddr[ucSecAddrIdx] = ptCtrlEntry->tDTxCtrl.aSecAddr[ucSecAddrIdx];
20001637:	025432        	s16i	a3, a4, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1088
==============================================================================*/
LOCAL void L3_IFSetNFCQDataTxfer(NFCQ_ENTRY *ptNfcqEntry, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U8 ucSecAddrIdx;

    for (ucSecAddrIdx = 0; ucSecAddrIdx < ptCtrlEntry->tDTxCtrl.bsSecAddrIndex; ucSecAddrIdx++)
2000163a:	6c08      	l32i.n	a0, a12, 24
2000163c:	742020        	extui	a2, a2, 0, 8
2000163f:	243100        	extui	a3, a0, 1, 3
20001642:	03a237        	bge	a2, a3, 20001649 <L3_IFSetNFCQDataTxfer..NF_1482204275+0x39>

20001645 <L3_IFSetNFCQDataTxfer..NF_1482204275+0x35>:
20001645:	fff806        	j	20001629 <L3_IFSetNFCQDataTxfer..NF_1482204275+0x19>

20001648 <L3_IFSetNFCQDataTxfer..NF_1482204275+0x38>:
	...

20001649 <L3_IFSetNFCQDataTxfer..NF_1482204275+0x39>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1093
    {
        ptNfcqEntry->aSecAddr[ucSecAddrIdx] = ptCtrlEntry->tDTxCtrl.aSecAddr[ucSecAddrIdx];
    }
    
    if (FCMD_REQ_TYPE_WRITE == ptCtrlEntry->ptReqEntry->bsReqType)
20001649:	0c48      	l32i.n	a4, a12, 0
2000164b:	0448      	l32i.n	a4, a4, 0
2000164d:	412400        	srli	a2, a0, 4
20001650:	254240        	extui	a4, a4, 18, 3
20001653:	0b1416        	beqz	a4, 20001708 <L3_IFSetNFCQDataTxfer..NF_1482204275+0xf8>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1099
    {
        ptNfcqEntry->bsDmaTotalLength = ptCtrlEntry->tDTxCtrl.bsDmaTotalLen >> 1; // Sec -> CW
    }
    else
    {
        ptNfcqEntry->bsDmaTotalLength = ptCtrlEntry->tDTxCtrl.bsDmaTotalLen;
20001656:	845400        	extui	a5, a0, 4, 9
20001659:	0c4d52        	s8i	a5, a13, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1102
    }
    
    if (0 != ptCtrlEntry->ptReqEntry->ulSpareAddr)
2000165c:	0c68      	l32i.n	a6, a12, 0
2000165e:	2668      	l32i.n	a6, a6, 8
20001660:	098616        	beqz	a6, 200016fc <L3_IFSetNFCQDataTxfer..NF_1482204275+0xec>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1105
    {
        ptNfcqEntry->bsRedEn   = TRUE;
        ptNfcqEntry->bsRedOntf = FALSE;
20001663:	e67c      	movi.n	a6, -2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1104
        ptNfcqEntry->bsDmaTotalLength = ptCtrlEntry->tDTxCtrl.bsDmaTotalLen;
    }
    
    if (0 != ptCtrlEntry->ptReqEntry->ulSpareAddr)
    {
        ptNfcqEntry->bsRedEn   = TRUE;
20001665:	4d58      	l32i.n	a5, a13, 16
20001667:	270c      	movi.n	a7, 2
20001669:	205570        	or	a5, a5, a7
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1105
        ptNfcqEntry->bsRedOntf = FALSE;
2000166c:	105560        	and	a5, a5, a6
2000166f:	4d59      	s32i.n	a5, a13, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1106
        ptNfcqEntry->bsRedOnly = ptCtrlEntry->ptReqEntry->tFlashDesc.bsRdRedOnly;
20001671:	0c48      	l32i.n	a4, a12, 0
20001673:	4448      	l32i.n	a4, a4, 16
20001675:	954640        	extui	a4, a4, 22, 10
20001678:	022454        	insbits	a5, a4, 2, 2
2000167b:	4d59      	s32i.n	a5, a13, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1059
    1. 2016.7.20 JasonGuo create function
==============================================================================*/
LOCAL U32 L3_IFGetRedAddrOffSet(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U32 ulAddrOffSet;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
2000167d:	0c68      	l32i.n	a6, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1104
        ptNfcqEntry->bsDmaTotalLength = ptCtrlEntry->tDTxCtrl.bsDmaTotalLen;
    }
    
    if (0 != ptCtrlEntry->ptReqEntry->ulSpareAddr)
    {
        ptNfcqEntry->bsRedEn   = TRUE;
2000167f:	fc3901        	l32r	a0, 20000764 <_stext+0x64>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1061
LOCAL U32 L3_IFGetRedAddrOffSet(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U32 ulAddrOffSet;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;

    if (TRUE != ptCtrlEntry->bsIntrReq)
20001682:	000632        	l8ui	a3, a6, 0
20001685:	2c78      	l32i.n	a7, a12, 8
20001687:	1133e0        	slli	a3, a3, 2
2000168a:	10e7b7        	bbsi	a7, 11, 2000169e <L3_IFSetNFCQDataTxfer..NF_1482204275+0x8e>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1063
    {
        ulAddrOffSet = RED_RELATIVE_ADDR(MCU1_ID, ptReqEntry->bsTLun, ptReqEntry->bsFCmdPri, ptReqEntry->bsReqPtr);
2000168d:	0698      	l32i.n	a9, a6, 0
2000168f:	159090        	extui	a9, a9, 16, 2
20001692:	010934        	insbits	a3, a9, 0, 1
20001695:	118370        	slli	a8, a3, 9
20001698:	213380        	srai	a3, a8, 3
2000169b:	000446        	j	200016b0 <L3_IFSetNFCQDataTxfer..NF_1482204275+0xa0>

2000169e <L3_IFSetNFCQDataTxfer..NF_1482204275+0x8e>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1067
    }
    else
    {        
        ulAddrOffSet = RED_RELATIVE_ADDR(MCU2_ID, ptReqEntry->bsTLun, 0, ptCtrlEntry->bsCtrlPtr);
2000169e:	1cb8      	l32i.n	a11, a12, 4
200016a0:	f03d      	nop.n
200016a2:	15bcb0        	extui	a11, a11, 28, 2
200016a5:	010b34        	insbits	a3, a11, 0, 1
200016a8:	11a370        	slli	a10, a3, 9
200016ab:	aa0a      	add.n	a10, a10, a0
200016ad:	2133a0        	srai	a3, a10, 3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1107
    if (0 != ptCtrlEntry->ptReqEntry->ulSpareAddr)
    {
        ptNfcqEntry->bsRedEn   = TRUE;
        ptNfcqEntry->bsRedOntf = FALSE;
        ptNfcqEntry->bsRedOnly = ptCtrlEntry->ptReqEntry->tFlashDesc.bsRdRedOnly;
        ptNfcqEntry->bsRedAddr = L3_IFGetRedAddrOffSet(ptCtrlEntry);
200016b0:	833354        	insbits	a5, a3, 3, 19
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1109

        if (TRUE == L3_IsDataDisperse(ptCtrlEntry->ptReqEntry))
200016b3:	0c28      	l32i.n	a2, a12, 0
200016b5:	006122        	s32i	a2, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1107
    if (0 != ptCtrlEntry->ptReqEntry->ulSpareAddr)
    {
        ptNfcqEntry->bsRedEn   = TRUE;
        ptNfcqEntry->bsRedOntf = FALSE;
        ptNfcqEntry->bsRedOnly = ptCtrlEntry->ptReqEntry->tFlashDesc.bsRdRedOnly;
        ptNfcqEntry->bsRedAddr = L3_IFGetRedAddrOffSet(ptCtrlEntry);
200016b8:	046d52        	s32i	a5, a13, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:126

// Use this to detect some special commands, such as the command containing XOR data of SLC write,
// the 1st program stage of the command containing XOR data of TLC write.
BOOL L3_IsDataDisperse(const FCMD_REQ_ENTRY *ptReqEntry)
{
    ASSERT(ptReqEntry != NULL);
200016bb:	92bc      	beqz.n	a2, 200016f8 <L3_IFSetNFCQDataTxfer..NF_1482204275+0xe8>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:128

    if ((TRUE == L3_IsNeedDoXor(ptReqEntry)) && (TRUE == ptReqEntry->bsContainXorData))
200016bd:	017185        	call0	20002dd8 <L3_IsNeedDoXor>
200016c0:	381266        	bnei	a2, 1, 200016fc <L3_IFSetNFCQDataTxfer..NF_1482204275+0xec>
200016c3:	0138      	l32i.n	a3, a1, 0
200016c5:	0338      	l32i.n	a3, a3, 0
200016c7:	3163d7        	bbci	a3, 13, 200016fc <L3_IFSetNFCQDataTxfer..NF_1482204275+0xec>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1061
LOCAL U32 L3_IFGetRedAddrOffSet(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U32 ulAddrOffSet;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;

    if (TRUE != ptCtrlEntry->bsIntrReq)
200016ca:	2c48      	l32i.n	a4, a12, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1111
        ptNfcqEntry->bsRedOnly = ptCtrlEntry->ptReqEntry->tFlashDesc.bsRdRedOnly;
        ptNfcqEntry->bsRedAddr = L3_IFGetRedAddrOffSet(ptCtrlEntry);

        if (TRUE == L3_IsDataDisperse(ptCtrlEntry->ptReqEntry))
        {
            U32 ulXorParityPartNum = (3 - ptCtrlEntry->bsMultiStep) % 3;
200016cc:	350c      	movi.n	a5, 3
200016ce:	300c      	movi.n	a0, 3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1059
    1. 2016.7.20 JasonGuo create function
==============================================================================*/
LOCAL U32 L3_IFGetRedAddrOffSet(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U32 ulAddrOffSet;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
200016d0:	0c68      	l32i.n	a6, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1111
        ptNfcqEntry->bsRedOnly = ptCtrlEntry->ptReqEntry->tFlashDesc.bsRdRedOnly;
        ptNfcqEntry->bsRedAddr = L3_IFGetRedAddrOffSet(ptCtrlEntry);

        if (TRUE == L3_IsDataDisperse(ptCtrlEntry->ptReqEntry))
        {
            U32 ulXorParityPartNum = (3 - ptCtrlEntry->bsMultiStep) % 3;
200016d2:	1c28      	l32i.n	a2, a12, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1061
LOCAL U32 L3_IFGetRedAddrOffSet(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U32 ulAddrOffSet;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;

    if (TRUE != ptCtrlEntry->bsIntrReq)
200016d4:	000632        	l8ui	a3, a6, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1111
        ptNfcqEntry->bsRedOnly = ptCtrlEntry->ptReqEntry->tFlashDesc.bsRdRedOnly;
        ptNfcqEntry->bsRedAddr = L3_IFGetRedAddrOffSet(ptCtrlEntry);

        if (TRUE == L3_IsDataDisperse(ptCtrlEntry->ptReqEntry))
        {
            U32 ulXorParityPartNum = (3 - ptCtrlEntry->bsMultiStep) % 3;
200016d7:	157a20        	extui	a7, a2, 26, 2
200016da:	c00070        	sub	a0, a0, a7
200016dd:	f20050        	rems	a0, a0, a5
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1061
LOCAL U32 L3_IFGetRedAddrOffSet(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U32 ulAddrOffSet;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;

    if (TRUE != ptCtrlEntry->bsIntrReq)
200016e0:	1133e0        	slli	a3, a3, 2
200016e3:	2ae4b7        	bbsi	a4, 11, 20001711 <L3_IFSetNFCQDataTxfer..NF_1482204275+0x101>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1063
    {
        ulAddrOffSet = RED_RELATIVE_ADDR(MCU1_ID, ptReqEntry->bsTLun, ptReqEntry->bsFCmdPri, ptReqEntry->bsReqPtr);
200016e6:	0698      	l32i.n	a9, a6, 0
200016e8:	159090        	extui	a9, a9, 16, 2
200016eb:	010934        	insbits	a3, a9, 0, 1
200016ee:	118370        	slli	a8, a3, 9
200016f1:	213380        	srai	a3, a8, 3
200016f4:	000a86        	j	20001722 <L3_IFSetNFCQDataTxfer..NF_1482204275+0x112>

200016f7 <L3_IFSetNFCQDataTxfer..NF_1482204275+0xe7>:
	...

200016f8 <L3_IFSetNFCQDataTxfer..NF_1482204275+0xe8>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:126

// Use this to detect some special commands, such as the command containing XOR data of SLC write,
// the 1st program stage of the command containing XOR data of TLC write.
BOOL L3_IsDataDisperse(const FCMD_REQ_ENTRY *ptReqEntry)
{
    ASSERT(ptReqEntry != NULL);
200016f8:	ffff06        	j	200016f8 <L3_IFSetNFCQDataTxfer..NF_1482204275+0xe8>

200016fb <L3_IFSetNFCQDataTxfer..NF_1482204275+0xeb>:
	...

200016fc <L3_IFSetNFCQDataTxfer..NF_1482204275+0xec>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1119
            ptNfcqEntry->bsRedAddXorPar0 = (HAL_XoreGetParityRedunOffset(ptCtrlEntry->bsXoreId) +
                                            ulXorParityPartNum * RED_SZ) >> XOR_REDUN_ALIGN_BITS;
        }
    }
    
    return;
200016fc:	21c8      	l32i.n	a12, a1, 8
200016fe:	31d8      	l32i.n	a13, a1, 12
20001700:	1108      	l32i.n	a0, a1, 4
20001702:	10c112        	addi	a1, a1, 16
20001705:	f00d      	ret.n

20001707 <L3_IFSetNFCQDataTxfer..NF_1482204275+0xf7>:
	...

20001708 <L3_IFSetNFCQDataTxfer..NF_1482204275+0xf8>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1095
        ptNfcqEntry->aSecAddr[ucSecAddrIdx] = ptCtrlEntry->tDTxCtrl.aSecAddr[ucSecAddrIdx];
    }
    
    if (FCMD_REQ_TYPE_WRITE == ptCtrlEntry->ptReqEntry->bsReqType)
    {
        ptNfcqEntry->bsDmaTotalLength = ptCtrlEntry->tDTxCtrl.bsDmaTotalLen >> 1; // Sec -> CW
20001708:	21a120        	srai	a10, a2, 1
2000170b:	0c4da2        	s8i	a10, a13, 12
2000170e:	ffd286        	j	2000165c <L3_IFSetNFCQDataTxfer..NF_1482204275+0x4c>

20001711 <L3_IFSetNFCQDataTxfer..NF_1482204275+0x101>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1067
    {
        ulAddrOffSet = RED_RELATIVE_ADDR(MCU1_ID, ptReqEntry->bsTLun, ptReqEntry->bsFCmdPri, ptReqEntry->bsReqPtr);
    }
    else
    {        
        ulAddrOffSet = RED_RELATIVE_ADDR(MCU2_ID, ptReqEntry->bsTLun, 0, ptCtrlEntry->bsCtrlPtr);
20001711:	fc1441        	l32r	a4, 20000764 <_stext+0x64>
20001714:	155c20        	extui	a5, a2, 28, 2
20001717:	010534        	insbits	a3, a5, 0, 1
2000171a:	11b370        	slli	a11, a3, 9
2000171d:	bb4a      	add.n	a11, a11, a4
2000171f:	2133b0        	srai	a3, a11, 3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1112
        ptNfcqEntry->bsRedAddr = L3_IFGetRedAddrOffSet(ptCtrlEntry);

        if (TRUE == L3_IsDataDisperse(ptCtrlEntry->ptReqEntry))
        {
            U32 ulXorParityPartNum = (3 - ptCtrlEntry->bsMultiStep) % 3;
            ptNfcqEntry->bsRedAddr = L3_IFGetRedAddrOffSet(ptCtrlEntry) +
20001722:	4d48      	l32i.n	a4, a13, 16
20001724:	115080        	slli	a5, a0, 8
20001727:	415350        	srli	a5, a5, 3
2000172a:	805350        	add	a5, a3, a5
2000172d:	833544        	insbits	a4, a5, 3, 19
20001730:	046d42        	s32i	a4, a13, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1114
                                     ((ulXorParityPartNum * RED_SW_SZ_DW * sizeof(U32)) >> 3);
            ptNfcqEntry->bsRedAddXorPar0 = (HAL_XoreGetParityRedunOffset(ptCtrlEntry->bsXoreId) +
20001733:	080c22        	l8ui	a2, a12, 8
20001736:	412520        	srli	a2, a2, 5
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:444
    return;
}

U32 HAL_XoreGetParityRedunOffset(U32 ulXoreId)
{
    ASSERT(ulXoreId < XORE_CNT);
20001739:	0362b6        	bltui	a2, 6, 20001740 <L3_IFSetNFCQDataTxfer..NF_1482204275+0x130>
2000173c:	ffff06        	j	2000173c <L3_IFSetNFCQDataTxfer..NF_1482204275+0x12c>

2000173f <L3_IFSetNFCQDataTxfer..NF_1482204275+0x12f>:
	...

20001740 <L3_IFSetNFCQDataTxfer..NF_1482204275+0x130>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1114
20001740:	fc0a61        	l32r	a6, 20000768 <_stext+0x68>
20001743:	1172c0        	slli	a7, a2, 4
20001746:	667a      	add.n	a6, a6, a7
20001748:	fc0971        	l32r	a7, 2000076c <_stext+0x6c>
2000174b:	7f2662        	l32i	a6, a6, 0x1fc
2000174e:	0020c0        	memw
20001751:	e668      	l32i.n	a6, a6, 56
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1119
                                            ulXorParityPartNum * RED_SZ) >> XOR_REDUN_ALIGN_BITS;
        }
    }
    
    return;
20001753:	21c8      	l32i.n	a12, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1114
        if (TRUE == L3_IsDataDisperse(ptCtrlEntry->ptReqEntry))
        {
            U32 ulXorParityPartNum = (3 - ptCtrlEntry->bsMultiStep) % 3;
            ptNfcqEntry->bsRedAddr = L3_IFGetRedAddrOffSet(ptCtrlEntry) +
                                     ((ulXorParityPartNum * RED_SW_SZ_DW * sizeof(U32)) >> 3);
            ptNfcqEntry->bsRedAddXorPar0 = (HAL_XoreGetParityRedunOffset(ptCtrlEntry->bsXoreId) +
20001755:	106670        	and	a6, a6, a7
20001758:	1170a0        	slli	a7, a0, 6
2000175b:	c56360        	extui	a6, a6, 19, 13
2000175e:	667a      	add.n	a6, a6, a7
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1119
                                            ulXorParityPartNum * RED_SZ) >> XOR_REDUN_ALIGN_BITS;
        }
    }
    
    return;
20001760:	1108      	l32i.n	a0, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1114
        if (TRUE == L3_IsDataDisperse(ptCtrlEntry->ptReqEntry))
        {
            U32 ulXorParityPartNum = (3 - ptCtrlEntry->bsMultiStep) % 3;
            ptNfcqEntry->bsRedAddr = L3_IFGetRedAddrOffSet(ptCtrlEntry) +
                                     ((ulXorParityPartNum * RED_SW_SZ_DW * sizeof(U32)) >> 3);
            ptNfcqEntry->bsRedAddXorPar0 = (HAL_XoreGetParityRedunOffset(ptCtrlEntry->bsXoreId) +
20001762:	416360        	srli	a6, a6, 3
20001765:	154d62        	s8i	a6, a13, 21
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1119
                                            ulXorParityPartNum * RED_SZ) >> XOR_REDUN_ALIGN_BITS;
        }
    }
    
    return;
20001768:	31d8      	l32i.n	a13, a1, 12
2000176a:	10c112        	addi	a1, a1, 16
2000176d:	f00d      	ret.n

2000176f <L3_IFSetNFCQDataTxfer..NF_1482204275+0x15f>:
	...

20001770 <L3_IFSetNFCQScrmable..LF_1482204275>:
L3_IFSetNFCQScrmable():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:989
History    : 
    1. 2016.7.18 JasonGuo create function
    2. 2016.9.26 JasonGuo l3 supports xx-nand-flash-adapter-part #3/4
==============================================================================*/
LOCAL void SWITCH_CASE_TXT L3_IFSetNFCQScrmable(NFCQ_ENTRY *ptNfcqEntry, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
20001770:	e0c112        	addi	a1, a1, -32
20001773:	31d9      	s32i.n	a13, a1, 12
20001775:	21c9      	s32i.n	a12, a1, 8
20001777:	1109      	s32i.n	a0, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:932
==============================================================================*/
LOCAL BOOL L3_IFIsScrEn(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    BOOL bIsScrEn;
    
    if (FCMD_REQ_TYPE_ERASE == ptCtrlEntry->ptReqEntry->bsReqType)
20001779:	0308      	l32i.n	a0, a3, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:989
History    : 
    1. 2016.7.18 JasonGuo create function
    2. 2016.9.26 JasonGuo l3 supports xx-nand-flash-adapter-part #3/4
==============================================================================*/
LOCAL void SWITCH_CASE_TXT L3_IFSetNFCQScrmable(NFCQ_ENTRY *ptNfcqEntry, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
2000177b:	03cd      	mov.n	a12, a3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:932
==============================================================================*/
LOCAL BOOL L3_IFIsScrEn(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    BOOL bIsScrEn;
    
    if (FCMD_REQ_TYPE_ERASE == ptCtrlEntry->ptReqEntry->bsReqType)
2000177d:	0008      	l32i.n	a0, a0, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:989
History    : 
    1. 2016.7.18 JasonGuo create function
    2. 2016.9.26 JasonGuo l3 supports xx-nand-flash-adapter-part #3/4
==============================================================================*/
LOCAL void SWITCH_CASE_TXT L3_IFSetNFCQScrmable(NFCQ_ENTRY *ptNfcqEntry, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
2000177f:	02dd      	mov.n	a13, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:932
==============================================================================*/
LOCAL BOOL L3_IFIsScrEn(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    BOOL bIsScrEn;
    
    if (FCMD_REQ_TYPE_ERASE == ptCtrlEntry->ptReqEntry->bsReqType)
20001781:	250200        	extui	a0, a0, 18, 3
20001784:	282026        	beqi	a0, 2, 200017b0 <L3_IFSetNFCQScrmable..LF_1482204275+0x40>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:936
    {
        bIsScrEn = FALSE;
    }
    else if (TRUE == HAL_NfcBypassScrb())
20001787:	fbfa01        	l32r	a0, 20000770 <_stext+0x70>
2000178a:	020c      	movi.n	a2, 0
2000178c:	180c      	movi.n	a8, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2342
==============================================================================*/
BOOL HAL_NfcBypassScrb(void)
{    
    volatile PG_CONF_REG *pNfcPgCfg = (volatile PG_CONF_REG *)&rNfcPgCfg;
    
    return (0 == pNfcPgCfg->bsScrBps) ? FALSE : TRUE;
2000178e:	083d      	mov.n	a3, a8
20001790:	0020c0        	memw
20001793:	0048      	l32i.n	a4, a0, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:940
    {
        bIsScrEn = FALSE;
    }
    else if (TRUE == ptCtrlEntry->bsRdRawData)
20001795:	170c      	movi.n	a7, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2342
20001797:	044340        	extui	a4, a4, 3, 1
2000179a:	833240        	moveqz	a3, a2, a4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:936
    
    if (FCMD_REQ_TYPE_ERASE == ptCtrlEntry->ptReqEntry->bsReqType)
    {
        bIsScrEn = FALSE;
    }
    else if (TRUE == HAL_NfcBypassScrb())
2000179d:	0f1326        	beqi	a3, 1, 200017b0 <L3_IFSetNFCQScrmable..LF_1482204275+0x40>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:940
    {
        bIsScrEn = FALSE;
    }
    else if (TRUE == ptCtrlEntry->bsRdRawData)
200017a0:	2c58      	l32i.n	a5, a12, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1000
    {
        ptNfcqEntry->bsPuEnpMsk = TRUE;
        return;
    }
     
    ucScrMod = ptCtrlEntry->bsScrMod;
200017a2:	290c      	movi.n	a9, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:940
    }
    else if (TRUE == HAL_NfcBypassScrb())
    {
        bIsScrEn = FALSE;
    }
    else if (TRUE == ptCtrlEntry->bsRdRawData)
200017a4:	046850        	extui	a6, a5, 8, 1
200017a7:	ffc662        	addi	a6, a6, -1
200017aa:	936760        	movnez	a6, a7, a6
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:994
{
    BOOL bScrEn;
    U8 ucScrMod;

    bScrEn = L3_IFIsScrEn(ptCtrlEntry);
    if (TRUE != bScrEn)
200017ad:	131626        	beqi	a6, 1, 200017c4 <L3_IFSetNFCQScrmable..LF_1482204275+0x54>

200017b0 <L3_IFSetNFCQScrmable..LF_1482204275+0x40>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1043
        }
    }
    
   ptNfcqEntry->bsTlcPlnNum = L3_IFGetScrSeedPlnNum(ptCtrlEntry);
    
    return;
200017b0:	1108      	l32i.n	a0, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:996
    U8 ucScrMod;

    bScrEn = L3_IFIsScrEn(ptCtrlEntry);
    if (TRUE != bScrEn)
    {
        ptNfcqEntry->bsPuEnpMsk = TRUE;
200017b2:	880c      	movi.n	a8, 8
200017b4:	0d78      	l32i.n	a7, a13, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1043
        }
    }
    
   ptNfcqEntry->bsTlcPlnNum = L3_IFGetScrSeedPlnNum(ptCtrlEntry);
    
    return;
200017b6:	21c8      	l32i.n	a12, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:996
    U8 ucScrMod;

    bScrEn = L3_IFIsScrEn(ptCtrlEntry);
    if (TRUE != bScrEn)
    {
        ptNfcqEntry->bsPuEnpMsk = TRUE;
200017b8:	207780        	or	a7, a7, a8
200017bb:	0d79      	s32i.n	a7, a13, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1043
        }
    }
    
   ptNfcqEntry->bsTlcPlnNum = L3_IFGetScrSeedPlnNum(ptCtrlEntry);
    
    return;
200017bd:	31d8      	l32i.n	a13, a1, 12
200017bf:	20c112        	addi	a1, a1, 32
200017c2:	f00d      	ret.n

200017c4 <L3_IFSetNFCQScrmable..LF_1482204275+0x54>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1000
    {
        ptNfcqEntry->bsPuEnpMsk = TRUE;
        return;
    }
     
    ucScrMod = ptCtrlEntry->bsScrMod;
200017c4:	006192        	s32i	a9, a1, 0
200017c7:	243250        	extui	a3, a5, 2, 3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1001
    switch (ucScrMod)
200017ca:	04f316        	beqz	a3, 2000181d <L3_IFSetNFCQScrmable..LF_1482204275+0xad>
200017cd:	7b4326        	beqi	a3, 4, 2000184c <L3_IFSetNFCQScrmable..LF_1482204275+0xdc>
200017d0:	3c5326        	beqi	a3, 5, 20001810 <L3_IFSetNFCQScrmable..LF_1482204275+0xa0>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1036
            break;
        }
        //#endif
        default:
        {
            DBG_Printf("L3_ScrambleSet.0x%x.\n", (U32)ptCtrlEntry);
200017d3:	fbe821        	l32r	a2, 20000774 <_stext+0x74>
200017d6:	203cc0        	or	a3, a12, a12
200017d9:	094885        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1037
            DBG_Getch();
200017dc:	fbcf01        	l32r	a0, 20000718 <_stext+0x18>
200017df:	0000c0        	callx0	a0
200017e2:	fbe301        	l32r	a0, 20000770 <_stext+0x70>
200017e5:	00a022        	movi	a2, 0
200017e8:	180c      	movi.n	a8, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2359
==============================================================================*/
BOOL HAL_NfcIsChkSeedSel(void)
{
    volatile PG_CONF_REG *pNfcPgCfg = (volatile PG_CONF_REG *)&rNfcPgCfg;
    
    return (1 == pNfcPgCfg->bsRTSB3dTlc) ? TRUE : FALSE;
200017ea:	02ad      	mov.n	a10, a2
200017ec:	0020c0        	memw
200017ef:	00b8      	l32i.n	a11, a0, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1007
    {
        case NORMAL_SCR:
        {
            ptNfcqEntry->bsScrSeed0 = ptCtrlEntry->bsPhyPage % (PG_PER_BLK - 1);

            break;
200017f1:	000c      	movi.n	a0, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2359
200017f3:	04bbb0        	extui	a11, a11, 11, 1
200017f6:	bb0b      	addi.n	a11, a11, -1
200017f8:	83a8b0        	moveqz	a10, a8, a11
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:967
LOCAL U8 L3_IFGetScrSeedPlnNum(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U8 ucPlnNum = 0;
    U8 ucReqSubType;

    if (TRUE == HAL_NfcIsChkSeedSel())
200017fb:	2d1a26        	beqi	a10, 1, 2000182c <L3_IFSetNFCQScrmable..LF_1482204275+0xbc>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1041
            DBG_Printf("L3_ScrambleSet.0x%x.\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }
    
   ptNfcqEntry->bsTlcPlnNum = L3_IFGetScrSeedPlnNum(ptCtrlEntry);
200017fe:	0dc8      	l32i.n	a12, a13, 0
20001800:	63e0c4        	insbits	a12, a0, 14, 15
20001803:	0dc9      	s32i.n	a12, a13, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1043
    
    return;
20001805:	21c8      	l32i.n	a12, a1, 8
20001807:	31d8      	l32i.n	a13, a1, 12
20001809:	1108      	l32i.n	a0, a1, 4
2000180b:	20c112        	addi	a1, a1, 32
2000180e:	f00d      	ret.n

20001810 <L3_IFSetNFCQScrmable..LF_1482204275+0xa0>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1028
            break;
        }
        //#ifdef XOR_ENABLE
        case TLC_WT_XOR_6DSG:
        {
            DBG_Getch();
20001810:	fbc201        	l32r	a0, 20000718 <_stext+0x18>
20001813:	0000c0        	callx0	a0
20001816:	fbd601        	l32r	a0, 20000770 <_stext+0x70>
20001819:	020c      	movi.n	a2, 0
2000181b:	180c      	movi.n	a8, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1030
            // For the 6 DSG issue of TLC XOR program.
            ptNfcqEntry->bsScrSeed0 = ptCtrlEntry->bsPhyPage % (PG_PER_BLK - 1);
2000181d:	021c32        	l16ui	a3, a12, 4
20001820:	ffa542        	movi	a4, 0x5ff
20001823:	e23340        	remu	a3, a3, a4
20001826:	134d32        	s8i	a3, a13, 19
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1031
            break;
20001829:	ffef46        	j	200017ea <L3_IFSetNFCQScrmable..LF_1482204275+0x7a>

2000182c <L3_IFSetNFCQScrmable..LF_1482204275+0xbc>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1043
        }
    }
    
   ptNfcqEntry->bsTlcPlnNum = L3_IFGetScrSeedPlnNum(ptCtrlEntry);
    
    return;
2000182c:	1108      	l32i.n	a0, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1041
            DBG_Printf("L3_ScrambleSet.0x%x.\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }
    
   ptNfcqEntry->bsTlcPlnNum = L3_IFGetScrSeedPlnNum(ptCtrlEntry);
2000182e:	0d58      	l32i.n	a5, a13, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:970
    U8 ucReqSubType;

    if (TRUE == HAL_NfcIsChkSeedSel())
    {
        ucReqSubType = ptCtrlEntry->ptReqEntry->bsReqSubType;
        ucPlnNum = (FCMD_REQ_SUBTYPE_SINGLE == ucReqSubType) ? 0 : PLN_PER_LUN_BITS;
20001830:	0c78      	l32i.n	a7, a12, 0
20001832:	0168      	l32i.n	a6, a1, 0
20001834:	0778      	l32i.n	a7, a7, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1043
        }
    }
    
   ptNfcqEntry->bsTlcPlnNum = L3_IFGetScrSeedPlnNum(ptCtrlEntry);
    
    return;
20001836:	21c8      	l32i.n	a12, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:970
    U8 ucReqSubType;

    if (TRUE == HAL_NfcIsChkSeedSel())
    {
        ucReqSubType = ptCtrlEntry->ptReqEntry->bsReqSubType;
        ucPlnNum = (FCMD_REQ_SUBTYPE_SINGLE == ucReqSubType) ? 0 : PLN_PER_LUN_BITS;
20001838:	257570        	extui	a7, a7, 21, 3
2000183b:	836270        	moveqz	a6, a2, a7
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1041
            DBG_Printf("L3_ScrambleSet.0x%x.\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }
    
   ptNfcqEntry->bsTlcPlnNum = L3_IFGetScrSeedPlnNum(ptCtrlEntry);
2000183e:	63e654        	insbits	a5, a6, 14, 15
20001841:	0d59      	s32i.n	a5, a13, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1043
    
    return;
20001843:	31d8      	l32i.n	a13, a1, 12
20001845:	20c112        	addi	a1, a1, 32
20001848:	f00d      	ret.n

2000184a <L3_IFSetNFCQScrmable..LF_1482204275+0xda>:
	...

2000184c <L3_IFSetNFCQScrmable..LF_1482204275+0xdc>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1011

            break;
        }
        case TLC_RW_TWO_PG:
        {
            ptNfcqEntry->bsScrSeed0 = ptCtrlEntry->bsPhyPage % (PG_PER_BLK - 1);
2000184c:	ffa5a2        	movi	a10, 0x5ff
2000184f:	021c92        	l16ui	a9, a12, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1007
    {
        case NORMAL_SCR:
        {
            ptNfcqEntry->bsScrSeed0 = ptCtrlEntry->bsPhyPage % (PG_PER_BLK - 1);

            break;
20001852:	370c      	movi.n	a7, 3
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:175
------------------------------------------------------------------------------*/
PAIR_PAGE_TYPE HAL_GetFlashPairPageType(U16 usPage)
{
    PAIR_PAGE_TYPE ePairPageType;

    if(usPage < 16)
20001854:	076d      	mov.n	a6, a7
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1011
        }
        case TLC_RW_TWO_PG:
        {
            ptNfcqEntry->bsScrSeed0 = ptCtrlEntry->bsPhyPage % (PG_PER_BLK - 1);
20001856:	e299a0        	remu	a9, a9, a10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1007
    {
        case NORMAL_SCR:
        {
            ptNfcqEntry->bsScrSeed0 = ptCtrlEntry->bsPhyPage % (PG_PER_BLK - 1);

            break;
20001859:	6fa0a2        	movi	a10, 111
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1011
        }
        case TLC_RW_TWO_PG:
        {
            ptNfcqEntry->bsScrSeed0 = ptCtrlEntry->bsPhyPage % (PG_PER_BLK - 1);
2000185c:	134d92        	s8i	a9, a13, 19
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1013

            if (EXTRA_PAGE == HAL_GetFlashPairPageType(ptCtrlEntry->bsPhyPage))
2000185f:	021c32        	l16ui	a3, a12, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1007
    {
        case NORMAL_SCR:
        {
            ptNfcqEntry->bsScrSeed0 = ptCtrlEntry->bsPhyPage % (PG_PER_BLK - 1);

            break;
20001862:	e0a592        	movi	a9, 0x5e0
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:175
20001865:	ffb3b6        	bltui	a3, 16, 20001868 <L3_IFSetNFCQScrmable..LF_1482204275+0xf8>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:180
    {
        ePairPageType = LOW_PAGE_WITHOUT_HIGH;
    }
    
    if((usPage >= 16) && (usPage < 112))
20001868:	11b3b6        	bltui	a3, 16, 2000187d <L3_IFSetNFCQScrmable..LF_1482204275+0x10d>
2000186b:	113a37        	bltu	a10, a3, 20001880 <L3_IFSetNFCQScrmable..LF_1482204275+0x110>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:182
    {
        if (EVEN == usPage % 2)
2000186e:	0168      	l32i.n	a6, a1, 0
20001870:	04b030        	extui	a11, a3, 0, 1
20001873:	8368b0        	moveqz	a6, a8, a11
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:192
        {
            ePairPageType = HIGH_PAGE;
        }
    }
    
    if((usPage >= 112) && (usPage < 1505))
20001876:	1bba37        	bgeu	a10, a3, 20001895 <L3_IFSetNFCQScrmable..LF_1482204275+0x125>
20001879:	0000c6        	j	20001880 <L3_IFSetNFCQScrmable..LF_1482204275+0x110>

2000187c <L3_IFSetNFCQScrmable..LF_1482204275+0x10c>:
	...

2000187d <L3_IFSetNFCQScrmable..LF_1482204275+0x10d>:
2000187d:	14ba37        	bgeu	a10, a3, 20001895 <L3_IFSetNFCQScrmable..LF_1482204275+0x125>
20001880:	143937        	bltu	a9, a3, 20001898 <L3_IFSetNFCQScrmable..LF_1482204275+0x128>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:194
    {
        if (0 == (usPage - 112) % 3)
20001883:	360c      	movi.n	a6, 3
20001885:	90c352        	addi	a5, a3, -112
20001888:	f25560        	rems	a5, a5, a6
2000188b:	95bc      	beqz.n	a5, 200018c8 <L3_IFSetNFCQScrmable..LF_1482204275+0x158>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:198
        {
            ePairPageType = EXTRA_PAGE;
        }
        else if (1 == (usPage - 112) % 3)
2000188d:	0168      	l32i.n	a6, a1, 0
2000188f:	ffc5a2        	addi	a10, a5, -1
20001892:	8368a0        	moveqz	a6, a8, a10
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:207
        else
        {
            ePairPageType = HIGH_PAGE;
        }
    }
    if((usPage >= 1505) && (usPage < 1536))
20001895:	0fb937        	bgeu	a9, a3, 200018a8 <L3_IFSetNFCQScrmable..LF_1482204275+0x138>
20001898:	ffa5b2        	movi	a11, 0x5ff
2000189b:	093b37        	bltu	a11, a3, 200018a8 <L3_IFSetNFCQScrmable..LF_1482204275+0x138>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:209
    {
        if (0 == usPage % 2)
2000189e:	045030        	extui	a5, a3, 0, 1
200018a1:	440c      	movi.n	a4, 4
200018a3:	837450        	moveqz	a7, a4, a5
200018a6:	076d      	mov.n	a6, a7
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1013
        }
        case TLC_RW_TWO_PG:
        {
            ptNfcqEntry->bsScrSeed0 = ptCtrlEntry->bsPhyPage % (PG_PER_BLK - 1);

            if (EXTRA_PAGE == HAL_GetFlashPairPageType(ptCtrlEntry->bsPhyPage))
200018a8:	1c4626        	beqi	a6, 4, 200018c8 <L3_IFSetNFCQScrmable..LF_1482204275+0x158>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1020
                ptNfcqEntry->bsScrSeed1Lsb = ((U8)HAL_GetHighPageIndexfromExtra(ptCtrlEntry->bsPhyPage)) & 0x1;            //bit0
                ptNfcqEntry->bsScrSeed1Msb = (((U8)HAL_GetHighPageIndexfromExtra(ptCtrlEntry->bsPhyPage)) & 0xFE) >> 1;     //bit7-1
            }
            else
            {
                ptNfcqEntry->bsScrSeed1Lsb = (ptCtrlEntry->bsPhyPage + 1) & 0x1;            //bit0
200018ab:	5d98      	l32i.n	a9, a13, 20
200018ad:	a31b      	addi.n	a10, a3, 1
200018af:	000a94        	insbits	a9, a10, 0, 0
200018b2:	5d99      	s32i.n	a9, a13, 20
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1021
                ptNfcqEntry->bsScrSeed1Msb = ((ptCtrlEntry->bsPhyPage + 1) & 0xFE) >> 1;    //bit7-1
200018b4:	021c72        	l16ui	a7, a12, 4
200018b7:	6d68      	l32i.n	a6, a13, 24
200018b9:	771b      	addi.n	a7, a7, 1
200018bb:	217170        	srai	a7, a7, 1
200018be:	f39764        	insbits	a6, a7, 25, 31
200018c1:	6d69      	s32i.n	a6, a13, 24
200018c3:	ffc8c6        	j	200017ea <L3_IFSetNFCQScrmable..LF_1482204275+0x7a>

200018c6 <L3_IFSetNFCQScrmable..LF_1482204275+0x156>:
	...

200018c8 <L3_IFSetNFCQScrmable..LF_1482204275+0x158>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1015
        {
            ptNfcqEntry->bsScrSeed0 = ptCtrlEntry->bsPhyPage % (PG_PER_BLK - 1);

            if (EXTRA_PAGE == HAL_GetFlashPairPageType(ptCtrlEntry->bsPhyPage))
            {
                ptNfcqEntry->bsScrSeed1Lsb = ((U8)HAL_GetHighPageIndexfromExtra(ptCtrlEntry->bsPhyPage)) & 0x1;            //bit0
200018c8:	afa5b2        	movi	a11, 0x5af
200018cb:	fba261        	l32r	a6, 20000754 <_stext+0x54>
200018ce:	cfa072        	movi	a7, 207
200018d1:	70a0a2        	movi	a10, 112
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:226

U16 HAL_GetHighPageIndexfromExtra(U16 usExtraPg)
{
    U16 usHighPg = INVALID_4F;
    
    if(usExtraPg == 112)
200018d4:	4213a7        	beq	a3, a10, 2000191a <L3_IFSetNFCQScrmable..LF_1482204275+0x1aa>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:230
    {
        usHighPg = 49;
    }
    else if (((usExtraPg - 112) / 3) < 32)
200018d7:	02a737        	bge	a7, a3, 200018dd <L3_IFSetNFCQScrmable..LF_1482204275+0x16d>
200018da:	002386        	j	2000196c <L3_IFSetNFCQScrmable..LF_1482204275+0x1fc>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:232
    {
        usHighPg = 49 + (((usExtraPg - 112) / 3) * 2);
200018dd:	340c      	movi.n	a4, 3
200018df:	90c332        	addi	a3, a3, -112
200018e2:	d23340        	quos	a3, a3, a4
200018e5:	143c      	movi.n	a4, 49
200018e7:	903340        	addx2	a3, a3, a4
200018ea:	f43030        	extui	a3, a3, 0, 16
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:247
    else if(usExtraPg > 1504)
    {
        usHighPg = (((usExtraPg - 1504) / 2) * 3) + 1410;
    }

    if(INVALID_4F == usHighPg)
200018ed:	2b9367        	bne	a3, a6, 2000191c <L3_IFSetNFCQScrmable..LF_1482204275+0x1ac>
200018f0:	4139      	s32i.n	a3, a1, 16
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:249
    {
        DBG_Printf("Get upper page error!!!\n");
200018f2:	fb9921        	l32r	a2, 20000758 <_stext+0x58>
200018f5:	0936c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:250
        DBG_Getch();
200018f8:	fb8801        	l32r	a0, 20000718 <_stext+0x18>
200018fb:	0000c0        	callx0	a0
200018fe:	fb9c01        	l32r	a0, 20000770 <_stext+0x70>
20001901:	020c      	movi.n	a2, 0
20001903:	180c      	movi.n	a8, 1
20001905:	e0a592        	movi	a9, 0x5e0
20001908:	4138      	l32i.n	a3, a1, 16
2000190a:	fb9261        	l32r	a6, 20000754 <_stext+0x54>
2000190d:	cfa072        	movi	a7, 207
20001910:	70a0a2        	movi	a10, 112
20001913:	afa5b2        	movi	a11, 0x5af
20001916:	000086        	j	2000191c <L3_IFSetNFCQScrmable..LF_1482204275+0x1ac>

20001919 <L3_IFSetNFCQScrmable..LF_1482204275+0x1a9>:
	...

2000191a <L3_IFSetNFCQScrmable..LF_1482204275+0x1aa>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:228
{
    U16 usHighPg = INVALID_4F;
    
    if(usExtraPg == 112)
    {
        usHighPg = 49;
2000191a:	133c      	movi.n	a3, 49
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1015
2000191c:	5d58      	l32i.n	a5, a13, 20
2000191e:	000354        	insbits	a5, a3, 0, 0
20001921:	5d59      	s32i.n	a5, a13, 20
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1016
                ptNfcqEntry->bsScrSeed1Msb = (((U8)HAL_GetHighPageIndexfromExtra(ptCtrlEntry->bsPhyPage)) & 0xFE) >> 1;     //bit7-1
20001923:	021c32        	l16ui	a3, a12, 4
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:226

U16 HAL_GetHighPageIndexfromExtra(U16 usExtraPg)
{
    U16 usHighPg = INVALID_4F;
    
    if(usExtraPg == 112)
20001926:	3213a7        	beq	a3, a10, 2000195c <L3_IFSetNFCQScrmable..LF_1482204275+0x1ec>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:230
    {
        usHighPg = 49;
    }
    else if (((usExtraPg - 112) / 3) < 32)
20001929:	572737        	blt	a7, a3, 20001984 <L3_IFSetNFCQScrmable..LF_1482204275+0x214>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:232
    {
        usHighPg = 49 + (((usExtraPg - 112) / 3) * 2);
2000192c:	340c      	movi.n	a4, 3
2000192e:	90c332        	addi	a3, a3, -112
20001931:	d23340        	quos	a3, a3, a4
20001934:	143c      	movi.n	a4, 49
20001936:	903340        	addx2	a3, a3, a4
20001939:	f43030        	extui	a3, a3, 0, 16
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:247
    else if(usExtraPg > 1504)
    {
        usHighPg = (((usExtraPg - 1504) / 2) * 3) + 1410;
    }

    if(INVALID_4F == usHighPg)
2000193c:	1e9367        	bne	a3, a6, 2000195e <L3_IFSetNFCQScrmable..LF_1482204275+0x1ee>
2000193f:	046132        	s32i	a3, a1, 16
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:249
    {
        DBG_Printf("Get upper page error!!!\n");
20001942:	fb8521        	l32r	a2, 20000758 <_stext+0x58>
20001945:	0931c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:250
        DBG_Getch();
20001948:	fb7401        	l32r	a0, 20000718 <_stext+0x18>
2000194b:	0000c0        	callx0	a0
2000194e:	fb8801        	l32r	a0, 20000770 <_stext+0x70>
20001951:	00a022        	movi	a2, 0
20001954:	01a082        	movi	a8, 1
20001957:	4138      	l32i.n	a3, a1, 16
20001959:	000046        	j	2000195e <L3_IFSetNFCQScrmable..LF_1482204275+0x1ee>

2000195c <L3_IFSetNFCQScrmable..LF_1482204275+0x1ec>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:228
{
    U16 usHighPg = INVALID_4F;
    
    if(usExtraPg == 112)
    {
        usHighPg = 49;
2000195c:	133c      	movi.n	a3, 49
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1016
2000195e:	6d58      	l32i.n	a5, a13, 24
20001960:	216130        	srai	a6, a3, 1
20001963:	f39654        	insbits	a5, a6, 25, 31
20001966:	6d59      	s32i.n	a5, a13, 24
20001968:	ff9f86        	j	200017ea <L3_IFSetNFCQScrmable..LF_1482204275+0x7a>

2000196b <L3_IFSetNFCQScrmable..LF_1482204275+0x1fb>:
	...

2000196c <L3_IFSetNFCQScrmable..LF_1482204275+0x1fc>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:234
    }
    else if (((usExtraPg - 112) / 3) < 32)
    {
        usHighPg = 49 + (((usExtraPg - 112) / 3) * 2);
    }
    else if((((usExtraPg - 112) / 3) >= 32) && (usExtraPg < 1456))
2000196c:	2b3b37        	bltu	a11, a3, 2000199b <L3_IFSetNFCQScrmable..LF_1482204275+0x22b>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:236
    {
        usHighPg = 49 + (31 * 2) + ((((usExtraPg - 112) / 3) - 31) * 3);
2000196f:	340c      	movi.n	a4, 3
20001971:	90c332        	addi	a3, a3, -112
20001974:	d23340        	quos	a3, a3, a4
20001977:	903330        	addx2	a3, a3, a3
2000197a:	12c332        	addi	a3, a3, 18
2000197d:	f43030        	extui	a3, a3, 0, 16
20001980:	ffda46        	j	200018ed <L3_IFSetNFCQScrmable..LF_1482204275+0x17d>

20001983 <L3_IFSetNFCQScrmable..LF_1482204275+0x213>:
	...

20001984 <L3_IFSetNFCQScrmable..LF_1482204275+0x214>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:234
    }
    else if (((usExtraPg - 112) / 3) < 32)
    {
        usHighPg = 49 + (((usExtraPg - 112) / 3) * 2);
    }
    else if((((usExtraPg - 112) / 3) >= 32) && (usExtraPg < 1456))
20001984:	203b37        	bltu	a11, a3, 200019a8 <L3_IFSetNFCQScrmable..LF_1482204275+0x238>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:236
    {
        usHighPg = 49 + (31 * 2) + ((((usExtraPg - 112) / 3) - 31) * 3);
20001987:	340c      	movi.n	a4, 3
20001989:	90c332        	addi	a3, a3, -112
2000198c:	d23340        	quos	a3, a3, a4
2000198f:	903330        	addx2	a3, a3, a3
20001992:	12c332        	addi	a3, a3, 18
20001995:	f43030        	extui	a3, a3, 0, 16
20001998:	ffe806        	j	2000193c <L3_IFSetNFCQScrmable..LF_1482204275+0x1cc>

2000199b <L3_IFSetNFCQScrmable..LF_1482204275+0x22b>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:238
    }
    else if((usExtraPg >= 1456) && (usExtraPg <= 1504))
2000199b:	153937        	bltu	a9, a3, 200019b4 <L3_IFSetNFCQScrmable..LF_1482204275+0x244>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:240
    {
        usHighPg = 1362 + (usExtraPg - 1456);
2000199e:	a2c332        	addi	a3, a3, -94
200019a1:	f43030        	extui	a3, a3, 0, 16
200019a4:	ffd146        	j	200018ed <L3_IFSetNFCQScrmable..LF_1482204275+0x17d>

200019a7 <L3_IFSetNFCQScrmable..LF_1482204275+0x237>:
	...

200019a8 <L3_IFSetNFCQScrmable..LF_1482204275+0x238>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:238
    }
    else if((((usExtraPg - 112) / 3) >= 32) && (usExtraPg < 1456))
    {
        usHighPg = 49 + (31 * 2) + ((((usExtraPg - 112) / 3) - 31) * 3);
    }
    else if((usExtraPg >= 1456) && (usExtraPg <= 1504))
200019a8:	243937        	bltu	a9, a3, 200019d0 <L3_IFSetNFCQScrmable..LF_1482204275+0x260>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:240
    {
        usHighPg = 1362 + (usExtraPg - 1456);
200019ab:	a2c332        	addi	a3, a3, -94
200019ae:	f43030        	extui	a3, a3, 0, 16
200019b1:	ffe1c6        	j	2000193c <L3_IFSetNFCQScrmable..LF_1482204275+0x1cc>

200019b4 <L3_IFSetNFCQScrmable..LF_1482204275+0x244>:
200019b4:	20aa42        	movi	a4, 0xfffffa20
200019b7:	434a      	add.n	a4, a3, a4
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:244
    }
    else if(usExtraPg > 1504)
    {
        usHighPg = (((usExtraPg - 1504) / 2) * 3) + 1410;
200019b9:	341b      	addi.n	a3, a4, 1
200019bb:	b33440        	movgez	a3, a4, a4
200019be:	213130        	srai	a3, a3, 1
200019c1:	903330        	addx2	a3, a3, a3
200019c4:	06d332        	addmi	a3, a3, 0x600
200019c7:	82c332        	addi	a3, a3, -126
200019ca:	f43030        	extui	a3, a3, 0, 16
200019cd:	ffc706        	j	200018ed <L3_IFSetNFCQScrmable..LF_1482204275+0x17d>

200019d0 <L3_IFSetNFCQScrmable..LF_1482204275+0x260>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:240
    {
        usHighPg = 49 + (31 * 2) + ((((usExtraPg - 112) / 3) - 31) * 3);
    }
    else if((usExtraPg >= 1456) && (usExtraPg <= 1504))
    {
        usHighPg = 1362 + (usExtraPg - 1456);
200019d0:	20aa42        	movi	a4, 0xfffffa20
200019d3:	434a      	add.n	a4, a3, a4
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:244
    }
    else if(usExtraPg > 1504)
    {
        usHighPg = (((usExtraPg - 1504) / 2) * 3) + 1410;
200019d5:	341b      	addi.n	a3, a4, 1
200019d7:	b33440        	movgez	a3, a4, a4
200019da:	213130        	srai	a3, a3, 1
200019dd:	903330        	addx2	a3, a3, a3
200019e0:	06d332        	addmi	a3, a3, 0x600
200019e3:	82c332        	addi	a3, a3, -126
200019e6:	f43030        	extui	a3, a3, 0, 16
200019e9:	ffd3c6        	j	2000193c <L3_IFSetNFCQScrmable..LF_1482204275+0x1cc>

200019ec <L3_IFSetNFCQTrace..DG_1482204275>:
L3_IFSetNFCQTrace():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
    20151028     abby    add parameter ucLun
------------------------------------------------------------------------------*/
U8 HAL_NfcGetWP(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
200019ec:	fb4c41        	l32r	a4, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1318
==============================================================================*/
LOCAL void L3_IFSetNFCQTrace(NFCQ_ENTRY *ptNfcqEntry, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U8 ucTLun = ptCtrlEntry->ptReqEntry->bsTLun;
    
    ptNfcqEntry->atRowAddr[0].bsFCmdPtr = ptCtrlEntry->bsCtrlPtr;
200019ef:	8278      	l32i.n	a7, a2, 32
200019f1:	1368      	l32i.n	a6, a3, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1316
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
LOCAL void L3_IFSetNFCQTrace(NFCQ_ENTRY *ptNfcqEntry, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U8 ucTLun = ptCtrlEntry->ptReqEntry->bsTLun;
200019f3:	0358      	l32i.n	a5, a3, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1318
    
    ptNfcqEntry->atRowAddr[0].bsFCmdPtr = ptCtrlEntry->bsCtrlPtr;
200019f5:	356c60        	extui	a6, a6, 28, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1316
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
LOCAL void L3_IFSetNFCQTrace(NFCQ_ENTRY *ptNfcqEntry, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U8 ucTLun = ptCtrlEntry->ptReqEntry->bsTLun;
200019f8:	000552        	l8ui	a5, a5, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1318
    
    ptNfcqEntry->atRowAddr[0].bsFCmdPtr = ptCtrlEntry->bsCtrlPtr;
200019fb:	f3e674        	insbits	a7, a6, 30, 31
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
200019fe:	fb4961        	l32r	a6, 20000724 <_stext+0x24>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1318
20001a01:	8279      	s32i.n	a7, a2, 32
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
20001a03:	556a      	add.n	a5, a5, a6
20001a05:	800552        	l8ui	a5, a5, 128
20001a08:	3e2442        	l32i	a4, a4, 248
20001a0b:	1155c0        	slli	a5, a5, 4
20001a0e:	445a      	add.n	a4, a4, a5
20001a10:	0020c0        	memw
20001a13:	000442        	l8ui	a4, a4, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1319
    ptCtrlEntry->bsNfcqPtr = HAL_NfcGetWP(L3_GET_PU(ucTLun), L3_GET_LUN_IN_PU(ucTLun));
20001a16:	1358      	l32i.n	a5, a3, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
20001a18:	414640        	srli	a4, a4, 6
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1319
20001a1b:	014420        	slli	a4, a4, 30
20001a1e:	e10544        	insbits	a4, a5, 0, 29
20001a21:	1349      	s32i.n	a4, a3, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1321

    return;
20001a23:	f00d      	ret.n

20001a25 <L3_IFSetNFCQTrace..DG_1482204275+0x39>:
L3_IFSetNFCQTrace..DG_1482204275():
20001a25:	000000                                        ...

20001a28 <HAL_DMAESetValueLenLimit..CM_1482204275>:
HAL_DMAESetValueLenLimit():
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:654
History: 
20140912    Kristin    Coding style uniform
20141202    Kristin    Add a input parameter ucMCUID
------------------------------------------------------------------------------*/
LOCAL BOOL DMAE_TEXT_ATTR HAL_DMAESetValueLenLimit(const U32 ulDesAddr,const U32 ulLenByte, U32 ulValue, U8 ucMCUID)
{
20001a28:	03ad      	mov.n	a10, a3
20001a2a:	e0c112        	addi	a1, a1, -32
20001a2d:	0109      	s32i.n	a0, a1, 0
20001a2f:	11c9      	s32i.n	a12, a1, 4
20001a31:	31e9      	s32i.n	a14, a1, 12
20001a33:	21d9      	s32i.n	a13, a1, 8
20001a35:	02ed      	mov.n	a14, a2
20001a37:	042d      	mov.n	a2, a4
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
20001a39:	03ebd0        	rsr.prid	a13
20001a3c:	fb4fc1        	l32r	a12, 20000778 <_stext+0x78>
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:149
#ifndef SIM
    U32 ulMcuID;
    U32 ulLockValue;
        
    ulMcuID = HAL_GetMcuId();
    if ((MCU0_ID == ulMcuID) || (MCU1_ID == ulMcuID) || (MCU2_ID == ulMcuID))
20001a3f:	051d26        	beqi	a13, 1, 20001a48 <HAL_DMAESetValueLenLimit..CM_1482204275+0x20>
20001a42:	022d26        	beqi	a13, 2, 20001a48 <HAL_DMAESetValueLenLimit..CM_1482204275+0x20>
20001a45:	093d66        	bnei	a13, 3, 20001a52 <HAL_DMAESetValueLenLimit..CM_1482204275+0x2a>
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:151
    {
        *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4) = ulMcuID;
20001a48:	0020c0        	memw
20001a4b:	cc6cd2        	s32i	a13, a12, 0x330
20001a4e:	000386        	j	20001a60 <HAL_DMAESetValueLenLimit..CM_1482204275+0x38>

20001a51 <HAL_DMAESetValueLenLimit..CM_1482204275+0x29>:
	...

20001a52 <HAL_DMAESetValueLenLimit..CM_1482204275+0x2a>:
20001a52:	5139      	s32i.n	a3, a1, 20
20001a54:	6149      	s32i.n	a4, a1, 24
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:155
    }
    else
    {
        DBG_Getch();
20001a56:	fb3001        	l32r	a0, 20000718 <_stext+0x18>
20001a59:	0000c0        	callx0	a0
20001a5c:	6128      	l32i.n	a2, a1, 24
20001a5e:	51a8      	l32i.n	a10, a1, 20
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:158
    }

    ulLockValue = *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4);
20001a60:	0020c0        	memw
20001a63:	cc2c02        	l32i	a0, a12, 0x330
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:661
    volatile DMAE_CMDENTRY *pCurCmdEntry;
    U8 ucDesAreaType;
    U32 ulCmdDesAddr;
    U32 *pDataReg;
    
    if (FALSE == HAL_MultiCoreGetSpinLock(SPINLOCKID_CLKGATING))
20001a66:	0f1d07        	beq	a13, a0, 20001a79 <HAL_DMAESetValueLenLimit..CM_1482204275+0x51>
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:663
    {
        return FALSE;
20001a69:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:683
    
    if (FALSE == HAL_DMAEParseAddress(&ucDesAreaType, &ulCmdDesAddr, ulDesAddr))
    {
        HAL_DMAEClockEnable(FALSE);
        HAL_MultiCoreReleaseSpinLock(SPINLOCKID_CLKGATING);
        return FALSE;
20001a6b:	11c8      	l32i.n	a12, a1, 4
20001a6d:	21d8      	l32i.n	a13, a1, 8
20001a6f:	31e8      	l32i.n	a14, a1, 12
20001a71:	0108      	l32i.n	a0, a1, 0
20001a73:	20c112        	addi	a1, a1, 32
20001a76:	f00d      	ret.n

20001a78 <HAL_DMAESetValueLenLimit..CM_1482204275+0x50>:
	...

20001a79 <HAL_DMAESetValueLenLimit..CM_1482204275+0x51>:
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:45

LOCAL void DMAE_TEXT_ATTR HAL_DMAEClockEnable(U32 ulEnable)
{
    if (TRUE == ulEnable)
    {
        rGlbClkGating |= MSK_EN_DMAE_CLK;
20001a79:	fb4041        	l32r	a4, 2000077c <_stext+0x7c>
20001a7c:	0020c0        	memw
20001a7f:	852c32        	l32i	a3, a12, 0x214
20001a82:	203340        	or	a3, a3, a4
20001a85:	0020c0        	memw
20001a88:	856c32        	s32i	a3, a12, 0x214
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
20001a8b:	03eb00        	rsr.prid	a0
20001a8e:	080c      	movi.n	a8, 0
20001a90:	fb3cd1        	l32r	a13, 20000780 <_stext+0x80>
20001a93:	fb3c71        	l32r	a7, 20000784 <_stext+0x84>
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:314
    U8 ucCmdId;
    U8 ucCmdIDRet = INVALID_2F;

    ucMCUID = HAL_GetMcuId();

    switch(ucMCUID)
20001a96:	740000        	extui	a0, a0, 0, 8
20001a99:	501026        	beqi	a0, 1, 20001aed <HAL_DMAESetValueLenLimit..CM_1482204275+0xc5>
20001a9c:	fec052        	addi	a5, a0, -2
20001a9f:	1ad516        	beqz	a5, 20001c50 <HAL_DMAESetValueLenLimit..CM_1482204275+0x228>
20001aa2:	693066        	bnei	a0, 3, 20001b0f <HAL_DMAESetValueLenLimit..CM_1482204275+0xe7>
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:339
            }
        }
        break;

    case MCU2_ID:
        for (ucCmdId = DMAE_CMD_HEAD_MCU2; ucCmdId <= DMAE_CMD_TAIL_MCU2; ucCmdId++)
20001aa5:	500c      	movi.n	a0, 5
20001aa7:	360c      	movi.n	a6, 3
20001aa9:	1ba676        	loopgtz	a6, 20001ac8 <HAL_DMAESetValueLenLimit..CM_1482204275+0xa0>
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:275
{
    volatile DMAE_CMDENTRY *pCmdEntry;
    U8 ucStatus;
 
    pCmdEntry =  (volatile DMAE_CMDENTRY *)(DMAE_CMDENTRY_BASE + ucCmdID * sizeof(DMAE_CMDENTRY));
    ucStatus = pCmdEntry->bsStatus;
20001aac:	743000        	extui	a3, a0, 0, 8
20001aaf:	1133c0        	slli	a3, a3, 4
20001ab2:	33da      	add.n	a3, a3, a13
20001ab4:	0020c0        	memw
20001ab7:	7f2332        	l32i	a3, a3, 0x1fc
20001aba:	143c30        	extui	a3, a3, 12, 2
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:277
    
    if ((DMAE_CMDENTRY_STATUS_DONE == ucStatus) || (DMAE_CMDENTRY_STATUS_IDLE == ucStatus))
20001abd:	733326        	beqi	a3, 3, 20001b34 <HAL_DMAESetValueLenLimit..CM_1482204275+0x10c>
20001ac0:	070316        	beqz	a3, 20001b34 <HAL_DMAESetValueLenLimit..CM_1482204275+0x10c>
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:339
            }
        }
        break;

    case MCU2_ID:
        for (ucCmdId = DMAE_CMD_HEAD_MCU2; ucCmdId <= DMAE_CMD_TAIL_MCU2; ucCmdId++)
20001ac3:	001b      	addi.n	a0, a0, 1
20001ac5:	740000        	extui	a0, a0, 0, 8

20001ac8 <HAL_DMAESetValueLenLimit..CM_1482204275+0xa0>:
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:50
        rGlbClkGating |= MSK_EN_DMAE_CLK;
    }

    else
    {
        rGlbClkGating &= ~MSK_EN_DMAE_CLK;
20001ac8:	0020c0        	memw
20001acb:	852c22        	l32i	a2, a12, 0x214
20001ace:	102270        	and	a2, a2, a7
20001ad1:	0020c0        	memw
20001ad4:	856c22        	s32i	a2, a12, 0x214
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
History:
    20140917    Tobey  uniform coding style
------------------------------------------------------------------------------*/
void MULTI_CORE_TEXT_ATTR HAL_MultiCoreReleaseSpinLock(U8 ucLockId)
{
    *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4) = 0;
20001ad7:	0020c0        	memw
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:673
    ucCurCmdID = HAL_DMAEGetNextCmdID();
    if (INVALID_2F == ucCurCmdID)
    {
        HAL_DMAEClockEnable(FALSE);
        HAL_MultiCoreReleaseSpinLock(SPINLOCKID_CLKGATING);
        return FALSE;
20001ada:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:683
    
    if (FALSE == HAL_DMAEParseAddress(&ucDesAreaType, &ulCmdDesAddr, ulDesAddr))
    {
        HAL_DMAEClockEnable(FALSE);
        HAL_MultiCoreReleaseSpinLock(SPINLOCKID_CLKGATING);
        return FALSE;
20001adc:	21d8      	l32i.n	a13, a1, 8
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
20001ade:	cc6c82        	s32i	a8, a12, 0x330
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:683
20001ae1:	31e8      	l32i.n	a14, a1, 12
20001ae3:	11c8      	l32i.n	a12, a1, 4
20001ae5:	0108      	l32i.n	a0, a1, 0
20001ae7:	20c112        	addi	a1, a1, 32
20001aea:	f00d      	ret.n

20001aec <HAL_DMAESetValueLenLimit..CM_1482204275+0xc4>:
	...

20001aed <HAL_DMAESetValueLenLimit..CM_1482204275+0xc5>:
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:317
    ucMCUID = HAL_GetMcuId();

    switch(ucMCUID)
    {
    case MCU0_ID:
        for (ucCmdId = DMAE_CMD_HEAD_MCU0; ucCmdId <= DMAE_CMD_TAIL_MCU0; ucCmdId++)
20001aed:	000c      	movi.n	a0, 0
20001aef:	230c      	movi.n	a3, 2
20001af1:	1aa376        	loopgtz	a3, 20001b0f <HAL_DMAESetValueLenLimit..CM_1482204275+0xe7>
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:275
{
    volatile DMAE_CMDENTRY *pCmdEntry;
    U8 ucStatus;
 
    pCmdEntry =  (volatile DMAE_CMDENTRY *)(DMAE_CMDENTRY_BASE + ucCmdID * sizeof(DMAE_CMDENTRY));
    ucStatus = pCmdEntry->bsStatus;
20001af4:	743000        	extui	a3, a0, 0, 8
20001af7:	1133c0        	slli	a3, a3, 4
20001afa:	33da      	add.n	a3, a3, a13
20001afc:	0020c0        	memw
20001aff:	7f2332        	l32i	a3, a3, 0x1fc
20001b02:	143c30        	extui	a3, a3, 12, 2
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:277
    
    if ((DMAE_CMDENTRY_STATUS_DONE == ucStatus) || (DMAE_CMDENTRY_STATUS_IDLE == ucStatus))
20001b05:	2b3326        	beqi	a3, 3, 20001b34 <HAL_DMAESetValueLenLimit..CM_1482204275+0x10c>
20001b08:	83ac      	beqz.n	a3, 20001b34 <HAL_DMAESetValueLenLimit..CM_1482204275+0x10c>
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:317
    ucMCUID = HAL_GetMcuId();

    switch(ucMCUID)
    {
    case MCU0_ID:
        for (ucCmdId = DMAE_CMD_HEAD_MCU0; ucCmdId <= DMAE_CMD_TAIL_MCU0; ucCmdId++)
20001b0a:	001b      	addi.n	a0, a0, 1
20001b0c:	740000        	extui	a0, a0, 0, 8
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:50
        rGlbClkGating |= MSK_EN_DMAE_CLK;
    }

    else
    {
        rGlbClkGating &= ~MSK_EN_DMAE_CLK;
20001b0f:	0020c0        	memw
20001b12:	852c22        	l32i	a2, a12, 0x214
20001b15:	102270        	and	a2, a2, a7
20001b18:	0020c0        	memw
20001b1b:	856c22        	s32i	a2, a12, 0x214
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
20001b1e:	0020c0        	memw
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:673
    ucCurCmdID = HAL_DMAEGetNextCmdID();
    if (INVALID_2F == ucCurCmdID)
    {
        HAL_DMAEClockEnable(FALSE);
        HAL_MultiCoreReleaseSpinLock(SPINLOCKID_CLKGATING);
        return FALSE;
20001b21:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:683
    
    if (FALSE == HAL_DMAEParseAddress(&ucDesAreaType, &ulCmdDesAddr, ulDesAddr))
    {
        HAL_DMAEClockEnable(FALSE);
        HAL_MultiCoreReleaseSpinLock(SPINLOCKID_CLKGATING);
        return FALSE;
20001b23:	21d8      	l32i.n	a13, a1, 8
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
20001b25:	cc6c82        	s32i	a8, a12, 0x330
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:683
20001b28:	31e8      	l32i.n	a14, a1, 12
20001b2a:	11c8      	l32i.n	a12, a1, 4
20001b2c:	0108      	l32i.n	a0, a1, 0
20001b2e:	20c112        	addi	a1, a1, 32
20001b31:	f00d      	ret.n

20001b33 <HAL_DMAESetValueLenLimit..CM_1482204275+0x10b>:
	...

20001b34 <HAL_DMAESetValueLenLimit..CM_1482204275+0x10c>:
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:669
    }

    HAL_DMAEClockEnable(TRUE);

    ucCurCmdID = HAL_DMAEGetNextCmdID();
    if (INVALID_2F == ucCurCmdID)
20001b34:	ffa032        	movi	a3, 255
20001b37:	d41037        	beq	a0, a3, 20001b0f <HAL_DMAESetValueLenLimit..CM_1482204275+0xe7>
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:201
History:  
20140912    Kristin    Coding style uniform
------------------------------------------------------------------------------*/
BOOL DMAE_TEXT_ATTR HAL_DMAEParseAddress(U8 *pAreaType, U32 *pAddrOut, const U32 ulAddrIn)
{  
    if (ulAddrIn < SRAM0_START_ADDRESS)
20001b3a:	fb1341        	l32r	a4, 20000788 <_stext+0x88>
20001b3d:	0234e7        	bltu	a4, a14, 20001b43 <HAL_DMAESetValueLenLimit..CM_1482204275+0x11b>
20001b40:	005c06        	j	20001cb4 <HAL_DMAESetValueLenLimit..CM_1482204275+0x28c>
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:205
    {    
        return FALSE;
    }
    else if ((ulAddrIn >= SRAM0_START_ADDRESS) && (ulAddrIn < SPI_START_ADDRESS)) /* SRAM */
20001b43:	fb1251        	l32r	a5, 2000078c <_stext+0x8c>
20001b46:	02b5e7        	bgeu	a5, a14, 20001b4c <HAL_DMAESetValueLenLimit..CM_1482204275+0x124>
20001b49:	0053c6        	j	20001c9c <HAL_DMAESetValueLenLimit..CM_1482204275+0x274>
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:207
    {
        *pAddrOut = ulAddrIn; //absolute address      
20001b4c:	206ee0        	or	a6, a14, a14
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:208
        *pAreaType = DMAE_SEL_AREA_PIF;     
20001b4f:	00a032        	movi	a3, 0
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:124
void DMAE_TEXT_ATTR HAL_DMAESelMCU(U8 ucDMAECmdID, U8 ucMCUID)
{
    U8 ucMCUSel;
    DMAE_CMDENTRY *pCmdEntry = (DMAE_CMDENTRY *)(DMAE_CMDENTRY_BASE + ucDMAECmdID * sizeof(DMAE_CMDENTRY));

    switch (ucMCUID)
20001b52:	204220        	or	a4, a2, a2
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:686
        HAL_DMAEClockEnable(FALSE);
        HAL_MultiCoreReleaseSpinLock(SPINLOCKID_CLKGATING);
        return FALSE;
    }
    
    pCurCmdEntry->bTrigger = 0;
20001b55:	11e0c0        	slli	a14, a0, 4
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:217
    {
        *pAddrOut = ulAddrIn - DRAM_START_ADDRESS; //relative address
        *pAreaType = DMAE_SEL_AREA_DRAM;
    }
#else
    else if ((ulAddrIn >= DRAM_START_ADDRESS) && (ulAddrIn < DRAM_HIGH_START_ADDRESS)) /* DRAM */
20001b58:	ffae52        	movi	a5, 0xfffffeff
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:686
        HAL_DMAEClockEnable(FALSE);
        HAL_MultiCoreReleaseSpinLock(SPINLOCKID_CLKGATING);
        return FALSE;
    }
    
    pCurCmdEntry->bTrigger = 0;
20001b5b:	80eed0        	add	a14, a14, a13
20001b5e:	0020c0        	memw
20001b61:	7f2eb2        	l32i	a11, a14, 0x1fc
20001b64:	10bb50        	and	a11, a11, a5
20001b67:	20bb80        	or	a11, a11, a8
20001b6a:	0020c0        	memw
20001b6d:	7f6eb2        	s32i	a11, a14, 0x1fc
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:688
    
    pCurCmdEntry->bsDesType = ucDesAreaType;
20001b70:	0020c0        	memw
20001b73:	7f2e92        	l32i	a9, a14, 0x1fc
20001b76:	010394        	insbits	a9, a3, 0, 1
20001b79:	0020c0        	memw
20001b7c:	7f6e92        	s32i	a9, a14, 0x1fc
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:689
    pCurCmdEntry->ulDesAddr = ulCmdDesAddr;
20001b7f:	0020c0        	memw
20001b82:	7e6e62        	s32i	a6, a14, 0x1f8
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:690
    pCurCmdEntry->bsSrcType = DMAE_SEL_AREA_REG;
20001b85:	40a0b2        	movi	a11, 64
20001b88:	8faf52        	movi	a5, -113
20001b8b:	0020c0        	memw
20001b8e:	7f2e92        	l32i	a9, a14, 0x1fc
20001b91:	109950        	and	a9, a9, a5
20001b94:	2099b0        	or	a9, a9, a11
20001b97:	0020c0        	memw
20001b9a:	7f6e92        	s32i	a9, a14, 0x1fc
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:691
    pCurCmdEntry->bsLength = DMAE_GET_CMD_LEN(ulLenByte);
20001b9d:	0020c0        	memw
20001ba0:	4154a0        	srli	a5, a10, 4
20001ba3:	7f2eb2        	l32i	a11, a14, 0x1fc
20001ba6:	550b      	addi.n	a5, a5, -1
20001ba8:	f005b4        	insbits	a11, a5, 16, 28
20001bab:	0020c0        	memw
20001bae:	7f6eb2        	s32i	a11, a14, 0x1fc
20001bb1:	920b      	addi.n	a9, a2, -1
20001bb3:	136916        	beqz	a9, 20001ced <HAL_DMAESetValueLenLimit..CM_1482204275+0x2c5>
20001bb6:	fec222        	addi	a2, a2, -2
20001bb9:	144216        	beqz	a2, 20001d01 <HAL_DMAESetValueLenLimit..CM_1482204275+0x2d9>
20001bbc:	4109      	s32i.n	a0, a1, 16
20001bbe:	fdc432        	addi	a3, a4, -3
20001bc1:	113316        	beqz	a3, 20001cd8 <HAL_DMAESetValueLenLimit..CM_1482204275+0x2b0>
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:139
    case MCU2_ID:
        ucMCUSel = DMAE_SEL_MCU2;
        break;

    default:
        DBG_Printf("HAL_DMAESelMCU: get MCU ID %d error", ucMCUID);
20001bc4:	faf321        	l32r	a2, 20000790 <_stext+0x90>
20001bc7:	043d      	mov.n	a3, a4
20001bc9:	090985        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:140
        DBG_Getch();
20001bcc:	fad301        	l32r	a0, 20000718 <_stext+0x18>
20001bcf:	0000c0        	callx0	a0
20001bd2:	4108      	l32i.n	a0, a1, 16
20001bd4:	faec71        	l32r	a7, 20000784 <_stext+0x84>
20001bd7:	080c      	movi.n	a8, 0
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:693
    pCurCmdEntry->bsDesType = ucDesAreaType;
    pCurCmdEntry->ulDesAddr = ulCmdDesAddr;
    pCurCmdEntry->bsSrcType = DMAE_SEL_AREA_REG;
    pCurCmdEntry->bsLength = DMAE_GET_CMD_LEN(ulLenByte);
    HAL_DMAESelMCU(ucCurCmdID, ucMCUID);
    *pDataReg = ulValue;
20001bd9:	faee51        	l32r	a5, 20000794 <_stext+0x94>
20001bdc:	1130e0        	slli	a3, a0, 2
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:150
    HAL_MultiCoreGetSpinLockWait(SPINLOCKID_DMAE);
    rGlbTrfc &= (~MSK_DMAE_MCU_SEL);
    rGlbTrfc |= (ucMCUSel << 16);
    HAL_MultiCoreReleaseSpinLock(SPINLOCKID_DMAE);
#else
    pCmdEntry->bsMCUSel = ucMCUSel;
20001bdf:	744000        	extui	a4, a0, 0, 8
20001be2:	1144c0        	slli	a4, a4, 4
20001be5:	44da      	add.n	a4, a4, a13
20001be7:	7f24b2        	l32i	a11, a4, 0x1fc
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:693
    pCurCmdEntry->bsDesType = ucDesAreaType;
    pCurCmdEntry->ulDesAddr = ulCmdDesAddr;
    pCurCmdEntry->bsSrcType = DMAE_SEL_AREA_REG;
    pCurCmdEntry->bsLength = DMAE_GET_CMD_LEN(ulLenByte);
    HAL_DMAESelMCU(ucCurCmdID, ucMCUID);
    *pDataReg = ulValue;
20001bea:	335a      	add.n	a3, a3, a5
20001bec:	006382        	s32i	a8, a3, 0
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:150
    HAL_MultiCoreGetSpinLockWait(SPINLOCKID_DMAE);
    rGlbTrfc &= (~MSK_DMAE_MCU_SEL);
    rGlbTrfc |= (ucMCUSel << 16);
    HAL_MultiCoreReleaseSpinLock(SPINLOCKID_DMAE);
#else
    pCmdEntry->bsMCUSel = ucMCUSel;
20001bef:	63e2b4        	insbits	a11, a2, 14, 15
20001bf2:	7f64b2        	s32i	a11, a4, 0x1fc
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:695
    pCurCmdEntry->bsSrcType = DMAE_SEL_AREA_REG;
    pCurCmdEntry->bsLength = DMAE_GET_CMD_LEN(ulLenByte);
    HAL_DMAESelMCU(ucCurCmdID, ucMCUID);
    *pDataReg = ulValue;
    
    pCurCmdEntry->bTrigger = 1;
20001bf5:	00a192        	movi	a9, 0x100
20001bf8:	0020c0        	memw
20001bfb:	7f2e62        	l32i	a6, a14, 0x1fc
20001bfe:	ffaea2        	movi	a10, 0xfffffeff
20001c01:	1066a0        	and	a6, a6, a10
20001c04:	206690        	or	a6, a6, a9
20001c07:	0020c0        	memw
20001c0a:	7f6e62        	s32i	a6, a14, 0x1fc
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:378
{
    volatile DMAE_CMDENTRY *pCmdEntry;
    U8 ucStatus;
    
    pCmdEntry =  (volatile DMAE_CMDENTRY *)(DMAE_CMDENTRY_BASE + ucCmdID * sizeof(DMAE_CMDENTRY));
    ucStatus = pCmdEntry->bsStatus;
20001c0d:	0020c0        	memw
20001c10:	7f2452        	l32i	a5, a4, 0x1fc
20001c13:	145c50        	extui	a5, a5, 12, 2
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:380
    
    if (DMAE_CMDENTRY_STATUS_DONE == ucStatus)
20001c16:	123526        	beqi	a5, 3, 20001c2c <HAL_DMAESetValueLenLimit..CM_1482204275+0x204>
20001c19:	0b8076        	loop	a0, 20001c28 <HAL_DMAESetValueLenLimit..CM_1482204275+0x200>
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:378
{
    volatile DMAE_CMDENTRY *pCmdEntry;
    U8 ucStatus;
    
    pCmdEntry =  (volatile DMAE_CMDENTRY *)(DMAE_CMDENTRY_BASE + ucCmdID * sizeof(DMAE_CMDENTRY));
    ucStatus = pCmdEntry->bsStatus;
20001c1c:	0020c0        	memw
20001c1f:	7f2452        	l32i	a5, a4, 0x1fc
20001c22:	145c50        	extui	a5, a5, 12, 2
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:380
    
    if (DMAE_CMDENTRY_STATUS_DONE == ucStatus)
20001c25:	033526        	beqi	a5, 3, 20001c2c <HAL_DMAESetValueLenLimit..CM_1482204275+0x204>

20001c28 <HAL_DMAESetValueLenLimit..CM_1482204275+0x200>:
20001c28:	fffb46        	j	20001c19 <HAL_DMAESetValueLenLimit..CM_1482204275+0x1f1>

20001c2b <HAL_DMAESetValueLenLimit..CM_1482204275+0x203>:
	...

20001c2c <HAL_DMAESetValueLenLimit..CM_1482204275+0x204>:
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:50
        rGlbClkGating |= MSK_EN_DMAE_CLK;
    }

    else
    {
        rGlbClkGating &= ~MSK_EN_DMAE_CLK;
20001c2c:	0020c0        	memw
20001c2f:	852c62        	l32i	a6, a12, 0x214
20001c32:	106670        	and	a6, a6, a7
20001c35:	0020c0        	memw
20001c38:	856c62        	s32i	a6, a12, 0x214
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
20001c3b:	0020c0        	memw
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:708
        ;
    }
    
    HAL_DMAEClockEnable(FALSE);
    HAL_MultiCoreReleaseSpinLock(SPINLOCKID_CLKGATING);
    return TRUE;
20001c3e:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:683
    
    if (FALSE == HAL_DMAEParseAddress(&ucDesAreaType, &ulCmdDesAddr, ulDesAddr))
    {
        HAL_DMAEClockEnable(FALSE);
        HAL_MultiCoreReleaseSpinLock(SPINLOCKID_CLKGATING);
        return FALSE;
20001c40:	21d8      	l32i.n	a13, a1, 8
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
20001c42:	cc6c82        	s32i	a8, a12, 0x330
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:683
20001c45:	31e8      	l32i.n	a14, a1, 12
20001c47:	11c8      	l32i.n	a12, a1, 4
20001c49:	0108      	l32i.n	a0, a1, 0
20001c4b:	20c112        	addi	a1, a1, 32
20001c4e:	f00d      	ret.n

20001c50 <HAL_DMAESetValueLenLimit..CM_1482204275+0x228>:
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:328
            }
        }
        break;

    case MCU1_ID:
        for (ucCmdId = DMAE_CMD_HEAD_MCU1; ucCmdId <= DMAE_CMD_TAIL_MCU1; ucCmdId++)
20001c50:	200c      	movi.n	a0, 2
20001c52:	03a092        	movi	a9, 3
20001c55:	1ea976        	loopgtz	a9, 20001c77 <HAL_DMAESetValueLenLimit..CM_1482204275+0x24f>
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:275
{
    volatile DMAE_CMDENTRY *pCmdEntry;
    U8 ucStatus;
 
    pCmdEntry =  (volatile DMAE_CMDENTRY *)(DMAE_CMDENTRY_BASE + ucCmdID * sizeof(DMAE_CMDENTRY));
    ucStatus = pCmdEntry->bsStatus;
20001c58:	743000        	extui	a3, a0, 0, 8
20001c5b:	1133c0        	slli	a3, a3, 4
20001c5e:	33da      	add.n	a3, a3, a13
20001c60:	0020c0        	memw
20001c63:	7f2332        	l32i	a3, a3, 0x1fc
20001c66:	143c30        	extui	a3, a3, 12, 2
20001c69:	fdc3b2        	addi	a11, a3, -3
20001c6c:	ec4b16        	beqz	a11, 20001b34 <HAL_DMAESetValueLenLimit..CM_1482204275+0x10c>
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:277
    
    if ((DMAE_CMDENTRY_STATUS_DONE == ucStatus) || (DMAE_CMDENTRY_STATUS_IDLE == ucStatus))
20001c6f:	ec1316        	beqz	a3, 20001b34 <HAL_DMAESetValueLenLimit..CM_1482204275+0x10c>
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:328
            }
        }
        break;

    case MCU1_ID:
        for (ucCmdId = DMAE_CMD_HEAD_MCU1; ucCmdId <= DMAE_CMD_TAIL_MCU1; ucCmdId++)
20001c72:	001b      	addi.n	a0, a0, 1
20001c74:	740000        	extui	a0, a0, 0, 8

20001c77 <HAL_DMAESetValueLenLimit..CM_1482204275+0x24f>:
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:50
        rGlbClkGating |= MSK_EN_DMAE_CLK;
    }

    else
    {
        rGlbClkGating &= ~MSK_EN_DMAE_CLK;
20001c77:	0020c0        	memw
20001c7a:	852c22        	l32i	a2, a12, 0x214
20001c7d:	102270        	and	a2, a2, a7
20001c80:	0020c0        	memw
20001c83:	856c22        	s32i	a2, a12, 0x214
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
20001c86:	0020c0        	memw
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:673
    ucCurCmdID = HAL_DMAEGetNextCmdID();
    if (INVALID_2F == ucCurCmdID)
    {
        HAL_DMAEClockEnable(FALSE);
        HAL_MultiCoreReleaseSpinLock(SPINLOCKID_CLKGATING);
        return FALSE;
20001c89:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:683
    
    if (FALSE == HAL_DMAEParseAddress(&ucDesAreaType, &ulCmdDesAddr, ulDesAddr))
    {
        HAL_DMAEClockEnable(FALSE);
        HAL_MultiCoreReleaseSpinLock(SPINLOCKID_CLKGATING);
        return FALSE;
20001c8b:	21d8      	l32i.n	a13, a1, 8
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
20001c8d:	cc6c82        	s32i	a8, a12, 0x330
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:683
20001c90:	31e8      	l32i.n	a14, a1, 12
20001c92:	11c8      	l32i.n	a12, a1, 4
20001c94:	0108      	l32i.n	a0, a1, 0
20001c96:	20c112        	addi	a1, a1, 32
20001c99:	f00d      	ret.n

20001c9b <HAL_DMAESetValueLenLimit..CM_1482204275+0x273>:
	...

20001c9c <HAL_DMAESetValueLenLimit..CM_1482204275+0x274>:
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:208
        return FALSE;
    }
    else if ((ulAddrIn >= SRAM0_START_ADDRESS) && (ulAddrIn < SPI_START_ADDRESS)) /* SRAM */
    {
        *pAddrOut = ulAddrIn; //absolute address      
        *pAreaType = DMAE_SEL_AREA_PIF;     
20001c9c:	fabf31        	l32r	a3, 20000798 <_stext+0x98>
20001c9f:	faa941        	l32r	a4, 20000744 <_stext+0x44>
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:217
    {
        *pAddrOut = ulAddrIn - DRAM_START_ADDRESS; //relative address
        *pAreaType = DMAE_SEL_AREA_DRAM;
    }
#else
    else if ((ulAddrIn >= DRAM_START_ADDRESS) && (ulAddrIn < DRAM_HIGH_START_ADDRESS)) /* DRAM */
20001ca2:	37b3e7        	bgeu	a3, a14, 20001cdd <HAL_DMAESetValueLenLimit..CM_1482204275+0x2b5>
20001ca5:	05de96        	bltz	a14, 20001d06 <HAL_DMAESetValueLenLimit..CM_1482204275+0x2de>
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:219
    {
        *pAddrOut = ulAddrIn - DRAM_START_ADDRESS;        
20001ca8:	fabd61        	l32r	a6, 2000079c <_stext+0x9c>
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:220
        *pAreaType = DMAE_SEL_AREA_DRAM;     
20001cab:	230c      	movi.n	a3, 2
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:219
        *pAreaType = DMAE_SEL_AREA_DRAM;
    }
#else
    else if ((ulAddrIn >= DRAM_START_ADDRESS) && (ulAddrIn < DRAM_HIGH_START_ADDRESS)) /* DRAM */
    {
        *pAddrOut = ulAddrIn - DRAM_START_ADDRESS;        
20001cad:	6e6a      	add.n	a6, a14, a6
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:220
        *pAreaType = DMAE_SEL_AREA_DRAM;     
20001caf:	ffa7c6        	j	20001b52 <HAL_DMAESetValueLenLimit..CM_1482204275+0x12a>

20001cb2 <HAL_DMAESetValueLenLimit..CM_1482204275+0x28a>:
	...

20001cb4 <HAL_DMAESetValueLenLimit..CM_1482204275+0x28c>:
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:50
        rGlbClkGating |= MSK_EN_DMAE_CLK;
    }

    else
    {
        rGlbClkGating &= ~MSK_EN_DMAE_CLK;
20001cb4:	0020c0        	memw
20001cb7:	852c92        	l32i	a9, a12, 0x214
20001cba:	109970        	and	a9, a9, a7
20001cbd:	0020c0        	memw
20001cc0:	856c92        	s32i	a9, a12, 0x214
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
20001cc3:	0020c0        	memw
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:683
    
    if (FALSE == HAL_DMAEParseAddress(&ucDesAreaType, &ulCmdDesAddr, ulDesAddr))
    {
        HAL_DMAEClockEnable(FALSE);
        HAL_MultiCoreReleaseSpinLock(SPINLOCKID_CLKGATING);
        return FALSE;
20001cc6:	020c      	movi.n	a2, 0
20001cc8:	21d8      	l32i.n	a13, a1, 8
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
20001cca:	cc6c82        	s32i	a8, a12, 0x330
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:683
20001ccd:	31e8      	l32i.n	a14, a1, 12
20001ccf:	11c8      	l32i.n	a12, a1, 4
20001cd1:	0108      	l32i.n	a0, a1, 0
20001cd3:	20c112        	addi	a1, a1, 32
20001cd6:	f00d      	ret.n

20001cd8 <HAL_DMAESetValueLenLimit..CM_1482204275+0x2b0>:
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:135
    case MCU1_ID:
        ucMCUSel = DMAE_SEL_MCU1;
        break;

    case MCU2_ID:
        ucMCUSel = DMAE_SEL_MCU2;
20001cd8:	220c      	movi.n	a2, 2
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:136
        break;
20001cda:	ffbec6        	j	20001bd9 <HAL_DMAESetValueLenLimit..CM_1482204275+0x1b1>

20001cdd <HAL_DMAESetValueLenLimit..CM_1482204275+0x2b5>:
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:222
    else if ((ulAddrIn >= DRAM_START_ADDRESS) && (ulAddrIn < DRAM_HIGH_START_ADDRESS)) /* DRAM */
    {
        *pAddrOut = ulAddrIn - DRAM_START_ADDRESS;        
        *pAreaType = DMAE_SEL_AREA_DRAM;     
    }
    else if ((ulAddrIn >= DRAM_HIGH_START_ADDRESS) && (ulAddrIn < OTFB_START_ADDRESS)) /* DRAM */
20001cdd:	025e96        	bltz	a14, 20001d06 <HAL_DMAESetValueLenLimit..CM_1482204275+0x2de>
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:234
        
        *pAddrOut = ulAddrIn - DRAM_HIGH_START_ADDRESS;
        *pAreaType = DMAE_SEL_AREA_DRAM;     
    }
#endif
    else if ((ulAddrIn >= SPI_START_ADDRESS) && (ulAddrIn < DRAM_START_ADDRESS)) /* SPI NOR Flash */
20001ce0:	1033e7        	bltu	a3, a14, 20001cf4 <HAL_DMAESetValueLenLimit..CM_1482204275+0x2cc>
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:236
    {
        *pAddrOut = ulAddrIn - SPI_START_ADDRESS; //relative address
20001ce3:	faaf61        	l32r	a6, 200007a0 <_stext+0xa0>
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:237
        *pAreaType = DMAE_SEL_AREA_SPI; 
20001ce6:	330c      	movi.n	a3, 3
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:236
        *pAreaType = DMAE_SEL_AREA_DRAM;     
    }
#endif
    else if ((ulAddrIn >= SPI_START_ADDRESS) && (ulAddrIn < DRAM_START_ADDRESS)) /* SPI NOR Flash */
    {
        *pAddrOut = ulAddrIn - SPI_START_ADDRESS; //relative address
20001ce8:	6e6a      	add.n	a6, a14, a6
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:237
        *pAreaType = DMAE_SEL_AREA_SPI; 
20001cea:	ff9906        	j	20001b52 <HAL_DMAESetValueLenLimit..CM_1482204275+0x12a>

20001ced <HAL_DMAESetValueLenLimit..CM_1482204275+0x2c5>:
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:127
    DMAE_CMDENTRY *pCmdEntry = (DMAE_CMDENTRY *)(DMAE_CMDENTRY_BASE + ucDMAECmdID * sizeof(DMAE_CMDENTRY));

    switch (ucMCUID)
    {
    case MCU0_ID:
        ucMCUSel = DMAE_SEL_MCU0;
20001ced:	020c      	movi.n	a2, 0
20001cef:	ffb986        	j	20001bd9 <HAL_DMAESetValueLenLimit..CM_1482204275+0x1b1>

20001cf2 <HAL_DMAESetValueLenLimit..CM_1482204275+0x2ca>:
	...

20001cf4 <HAL_DMAESetValueLenLimit..CM_1482204275+0x2cc>:
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:239
    else if ((ulAddrIn >= SPI_START_ADDRESS) && (ulAddrIn < DRAM_START_ADDRESS)) /* SPI NOR Flash */
    {
        *pAddrOut = ulAddrIn - SPI_START_ADDRESS; //relative address
        *pAreaType = DMAE_SEL_AREA_SPI; 
    }
    else if (ulAddrIn >= OTFB_START_ADDRESS) /* OTFB */
20001cf4:	bcb4e7        	bgeu	a4, a14, 20001cb4 <HAL_DMAESetValueLenLimit..CM_1482204275+0x28c>
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:241
    {
        *pAddrOut = ulAddrIn - OTFB_START_ADDRESS; //relative address
20001cf7:	faab61        	l32r	a6, 200007a4 <_stext+0xa4>
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:242
        *pAreaType = DMAE_SEL_AREA_OTFB;
20001cfa:	130c      	movi.n	a3, 1
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:241
        *pAddrOut = ulAddrIn - SPI_START_ADDRESS; //relative address
        *pAreaType = DMAE_SEL_AREA_SPI; 
    }
    else if (ulAddrIn >= OTFB_START_ADDRESS) /* OTFB */
    {
        *pAddrOut = ulAddrIn - OTFB_START_ADDRESS; //relative address
20001cfc:	6e6a      	add.n	a6, a14, a6
20001cfe:	ff9406        	j	20001b52 <HAL_DMAESetValueLenLimit..CM_1482204275+0x12a>

20001d01 <HAL_DMAESetValueLenLimit..CM_1482204275+0x2d9>:
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:131
    case MCU0_ID:
        ucMCUSel = DMAE_SEL_MCU0;
        break;

    case MCU1_ID:
        ucMCUSel = DMAE_SEL_MCU1;
20001d01:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:132
        break;
20001d03:	ffb486        	j	20001bd9 <HAL_DMAESetValueLenLimit..CM_1482204275+0x1b1>

20001d06 <HAL_DMAESetValueLenLimit..CM_1482204275+0x2de>:
20001d06:	4109      	s32i.n	a0, a1, 16
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:222
    else if ((ulAddrIn >= DRAM_START_ADDRESS) && (ulAddrIn < DRAM_HIGH_START_ADDRESS)) /* DRAM */
    {
        *pAddrOut = ulAddrIn - DRAM_START_ADDRESS;        
        *pAreaType = DMAE_SEL_AREA_DRAM;     
    }
    else if ((ulAddrIn >= DRAM_HIGH_START_ADDRESS) && (ulAddrIn < OTFB_START_ADDRESS)) /* DRAM */
20001d08:	d434e7        	bltu	a4, a14, 20001ce0 <HAL_DMAESetValueLenLimit..CM_1482204275+0x2b8>
20001d0b:	51a9      	s32i.n	a10, a1, 20
20001d0d:	6129      	s32i.n	a2, a1, 24
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:548
#ifndef SIM
    U32 ulAllAttr;
    U32 ulIdx;
    U8 ucAttr;
    
    ulAllAttr = xthal_get_dcacheattr();
20001d0f:	094a45        	call0	2000b1b4 <xthal_get_cacheattr>
20001d12:	fa9c71        	l32r	a7, 20000784 <_stext+0x84>
20001d15:	080c      	movi.n	a8, 0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:552
    ulIdx = (ulAddr >> 29);
    ucAttr = ((ulAllAttr >> (ulIdx * 4)) & 0xF);

    if (1 == ucAttr || 4 == ucAttr)
20001d17:	253de0        	extui	a3, a14, 29, 3
20001d1a:	1133e0        	slli	a3, a3, 2
20001d1d:	400300        	ssr	a3
20001d20:	912020        	srl	a2, a2
20001d23:	342020        	extui	a2, a2, 0, 4
20001d26:	021226        	beqi	a2, 1, 20001d2c <HAL_DMAESetValueLenLimit..CM_1482204275+0x304>
20001d29:	074266        	bnei	a2, 4, 20001d34 <HAL_DMAESetValueLenLimit..CM_1482204275+0x30c>
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:520
    20141028    Gavin   add "INLINE" attribute
------------------------------------------------------------------------------*/
INLINE void HAL_InvalidateDCache(void)
{
#ifndef SIM
    xthal_dcache_all_invalidate();   
20001d2c:	096905        	call0	2000b3c0 <xthal_dcache_all_invalidate>
20001d2f:	fa9571        	l32r	a7, 20000784 <_stext+0x84>
20001d32:	080c      	movi.n	a8, 0
20001d34:	6128      	l32i.n	a2, a1, 24
20001d36:	51a8      	l32i.n	a10, a1, 20
20001d38:	4108      	l32i.n	a0, a1, 16
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:230
        if (TRUE == HAL_IsDCacheEnabled(ulAddrIn))
        {
            HAL_InvalidateDCache();
        }
        
        *pAddrOut = ulAddrIn - DRAM_HIGH_START_ADDRESS;
20001d3a:	fa8961        	l32r	a6, 20000760 <_stext+0x60>
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:231
        *pAreaType = DMAE_SEL_AREA_DRAM;     
20001d3d:	230c      	movi.n	a3, 2
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:230
        if (TRUE == HAL_IsDCacheEnabled(ulAddrIn))
        {
            HAL_InvalidateDCache();
        }
        
        *pAddrOut = ulAddrIn - DRAM_HIGH_START_ADDRESS;
20001d3f:	6e6a      	add.n	a6, a14, a6
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:231
        *pAreaType = DMAE_SEL_AREA_DRAM;     
20001d41:	ff8346        	j	20001b52 <HAL_DMAESetValueLenLimit..CM_1482204275+0x12a>

20001d44 <L2_BbtGetGBbtBadBlkBit..H_1482204275>:
L2_BbtGetGBbtBadBlkBit():
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:283
History    :
1. 2014.10.13 steven create
2. 2015.05.25 Jason refactoring
==============================================================================*/
LOCAL BOOL L2_BbtGetGBbtBadBlkBit(U8 ucTLun, U8 ucPln, U16 usBlock)
{
20001d44:	150c      	movi.n	a5, 1
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:289
    U32 ulBitPos, ulBytePos;
    BOOL bBadBlk;

    ulBitPos = ucTLun * PLN_PER_LUN * BBT_BLK_PER_PLN + ucPln * BBT_BLK_PER_PLN + usBlock;
    ulBytePos = g_ulGBBT + ulBitPos / 8;
    bBadBlk = (0 != (*(volatile U8 *)ulBytePos & (1 << (ulBitPos % 8)))) ? TRUE : FALSE;
20001d46:	fa7561        	l32r	a6, 2000071c <_stext+0x1c>
20001d49:	fa9771        	l32r	a7, 200007a8 <_stext+0xa8>
20001d4c:	24a282        	movi	a8, 0x224
20001d4f:	d18830        	mul16s	a8, a8, a3
20001d52:	d17720        	mul16s	a7, a7, a2
20001d55:	112662        	l32i	a6, a6, 68
20001d58:	020c      	movi.n	a2, 0
20001d5a:	778a      	add.n	a7, a7, a8
20001d5c:	747a      	add.n	a7, a4, a7
20001d5e:	418370        	srli	a8, a7, 3
20001d61:	668a      	add.n	a6, a6, a8
20001d63:	0020c0        	memw
20001d66:	000662        	l8ui	a6, a6, 0
20001d69:	247070        	extui	a7, a7, 0, 3
20001d6c:	400700        	ssr	a7
20001d6f:	b16060        	sra	a6, a6
20001d72:	046060        	extui	a6, a6, 0, 1
20001d75:	932560        	movnez	a2, a5, a6
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:291

    return bBadBlk;
20001d78:	f00d      	ret.n

20001d7a <L2_BbtGetGBbtBadBlkBit..H_1482204275+0x36>:
	...

20001d7c <L3_XorMapInsert..LJ_1482204275>:
L3_XorMapInsert():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:62
    }
}

LOCAL void L3_XorMapInsert(U32 ulKey, U32 ulValue)
{
    ASSERT(ulKey < (U32)BIT(l_kXorStripeIdBits));
20001d7c:	fa8c51        	l32r	a5, 200007ac <_stext+0xac>
20001d7f:	a80552        	l8ui	a5, a5, 168
20001d82:	140c      	movi.n	a4, 1
20001d84:	401500        	ssl	a5
20001d87:	a14400        	sll	a4, a4
20001d8a:	0eb247        	bgeu	a2, a4, 20001d9c <L3_XorMapInsert..LJ_1482204275+0x20>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:63
    ASSERT(ulValue < XORE_CNT);
20001d8d:	0f63f6        	bgeui	a3, 6, 20001da0 <L3_XorMapInsert..LJ_1482204275+0x24>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:65

    l_aXorMapTable[ulValue] = ulKey;
20001d90:	fa8861        	l32r	a6, 200007b0 <_stext+0xb0>
20001d93:	636a      	add.n	a6, a3, a6
20001d95:	804622        	s8i	a2, a6, 128
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:66
}
20001d98:	f00d      	ret.n

20001d9a <L3_XorMapInsert..LJ_1482204275+0x1e>:
	...

20001d9c <L3_XorMapInsert..LJ_1482204275+0x20>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:62
    }
}

LOCAL void L3_XorMapInsert(U32 ulKey, U32 ulValue)
{
    ASSERT(ulKey < (U32)BIT(l_kXorStripeIdBits));
20001d9c:	ffff06        	j	20001d9c <L3_XorMapInsert..LJ_1482204275+0x20>

20001d9f <L3_XorMapInsert..LJ_1482204275+0x23>:
	...

20001da0 <L3_XorMapInsert..LJ_1482204275+0x24>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:63
    ASSERT(ulValue < XORE_CNT);
20001da0:	ffff06        	j	20001da0 <L3_XorMapInsert..LJ_1482204275+0x24>

20001da3 <L3_XorMapInsert..LJ_1482204275+0x27>:
	...

20001da4 <HAL_XoreNfcModeConfig>:
HAL_XoreNfcModeConfig():
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:253

// @todo if we can calculate the ulPreRdyPageCnt value automatically?
void HAL_XoreNfcModeConfig(U32 ulXoreId, XOR_TARGET eTarget, U32 ulPageProtectRatio,
    U32 ulPreRdyPageCnt, BOOL bIsSemiFinishedWork)
{
    ASSERT(ulXoreId < XORE_CNT);
20001da4:	6862f6        	bgeui	a2, 6, 20001e10 <HAL_XoreNfcModeConfig+0x6c>
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:255
    ASSERT((eTarget >= 0) && (eTarget < XOR_TARGET_ASSERT));
    ASSERT((ulPageProtectRatio > 1) && (ulPageProtectRatio <= BIT(8)));
20001da7:	6923b6        	bltui	a3, 2, 20001e14 <HAL_XoreNfcModeConfig+0x70>
20001daa:	00a152        	movi	a5, 0x100
20001dad:	633537        	bltu	a5, a3, 20001e14 <HAL_XoreNfcModeConfig+0x70>
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:256
    ASSERT(ulPreRdyPageCnt < PLN_PER_LUN);
20001db0:	6444f6        	bgeui	a4, 4, 20001e18 <HAL_XoreNfcModeConfig+0x74>
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:261
    ASSERT((bIsSemiFinishedWork == TRUE) || (bIsSemiFinishedWork == FALSE));

    volatile XORE_CFG_REG   *pConfigReg = l_aXorE[ulXoreId].pConfigReg;

    pConfigReg->bsMode = XOR_NFC_MODE;
20001db3:	1182c0        	slli	a8, a2, 4
20001db6:	fa6c71        	l32r	a7, 20000768 <_stext+0x68>
20001db9:	cfafa2        	movi	a10, -49
20001dbc:	778a      	add.n	a7, a7, a8
20001dbe:	7f2772        	l32i	a7, a7, 0x1fc
20001dc1:	0020c0        	memw
20001dc4:	0798      	l32i.n	a9, a7, 0
20001dc6:	1099a0        	and	a9, a9, a10
20001dc9:	0020c0        	memw
20001dcc:	0799      	s32i.n	a9, a7, 0
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:262
    pConfigReg->bsTarget = eTarget;
20001dce:	860c      	movi.n	a6, 8
20001dd0:	787c      	movi.n	a8, -9
20001dd2:	0020c0        	memw
20001dd5:	0758      	l32i.n	a5, a7, 0
20001dd7:	105580        	and	a5, a5, a8
20001dda:	205560        	or	a5, a5, a6
20001ddd:	0020c0        	memw
20001de0:	0759      	s32i.n	a5, a7, 0
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:266
    // In register, value 3 represent use 3 user data page to generate XOR page.
    // In firmware if protect ratio is 64, it represents that use 63 user data
    // pages to generate one XOR page, So need to minus 1.
    pConfigReg->bsPageCountNfBp = ulPageProtectRatio - 1;
20001de2:	b30b      	addi.n	a11, a3, -1
20001de4:	0020c0        	memw
20001de7:	07a8      	l32i.n	a10, a7, 0
20001de9:	82bba4        	insbits	a10, a11, 11, 18
20001dec:	0020c0        	memw
20001def:	07a9      	s32i.n	a10, a7, 0
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:267
    pConfigReg->bsPreRdyPageCntNf = ulPreRdyPageCnt;
20001df1:	0020c0        	memw
20001df4:	c798      	l32i.n	a9, a7, 48
20001df6:	030494        	insbits	a9, a4, 0, 3
20001df9:	0020c0        	memw
20001dfc:	c799      	s32i.n	a9, a7, 48
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:270
    // Stop a XOR engine and store the parity data to somewhere, then start it to
    // continue do the unfinished part, we need set the "bsHave1stPageNfBp" to 0.
    pConfigReg->bsHave1stPageNfBp = !bIsSemiFinishedWork;
20001dfe:	fa5861        	l32r	a6, 20000760 <_stext+0x60>
20001e01:	0020c0        	memw
20001e04:	1788      	l32i.n	a8, a7, 4
20001e06:	e20864        	insbits	a6, a8, 0, 30
20001e09:	0020c0        	memw
20001e0c:	1769      	s32i.n	a6, a7, 4
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:272

    return;
20001e0e:	f00d      	ret.n

20001e10 <HAL_XoreNfcModeConfig+0x6c>:
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:253

// @todo if we can calculate the ulPreRdyPageCnt value automatically?
void HAL_XoreNfcModeConfig(U32 ulXoreId, XOR_TARGET eTarget, U32 ulPageProtectRatio,
    U32 ulPreRdyPageCnt, BOOL bIsSemiFinishedWork)
{
    ASSERT(ulXoreId < XORE_CNT);
20001e10:	ffff06        	j	20001e10 <HAL_XoreNfcModeConfig+0x6c>

20001e13 <HAL_XoreNfcModeConfig+0x6f>:
	...

20001e14 <HAL_XoreNfcModeConfig+0x70>:
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:255
    ASSERT((eTarget >= 0) && (eTarget < XOR_TARGET_ASSERT));
    ASSERT((ulPageProtectRatio > 1) && (ulPageProtectRatio <= BIT(8)));
20001e14:	ffff06        	j	20001e14 <HAL_XoreNfcModeConfig+0x70>

20001e17 <HAL_XoreNfcModeConfig+0x73>:
	...

20001e18 <HAL_XoreNfcModeConfig+0x74>:
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:256
    ASSERT(ulPreRdyPageCnt < PLN_PER_LUN);
20001e18:	ffff06        	j	20001e18 <HAL_XoreNfcModeConfig+0x74>

20001e1b <HAL_XoreNfcModeConfig+0x77>:
	...

20001e1c <HAL_GetXore>:
HAL_GetXore():
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:147

    return;
}

BOOL HAL_GetXore(U32 ulXorPageSize, U32 *pXoreId)
{
20001e1c:	fa6661        	l32r	a6, 200007b4 <_stext+0xb4>
20001e1f:	fa6681        	l32r	a8, 200007b8 <_stext+0xb8>
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:148
    ASSERT((ulXorPageSize == (8 * KB_SIZE)) || (ulXorPageSize == (16 * KB_SIZE)) ||
20001e22:	e0d242        	addmi	a4, a2, 0xffffe000
20001e25:	149c      	beqz.n	a4, 20001e3a <HAL_GetXore+0x1e>
20001e27:	c0d252        	addmi	a5, a2, 0xffffc000
20001e2a:	c58c      	beqz.n	a5, 20001e3a <HAL_GetXore+0x1e>
20001e2c:	0a1267        	beq	a2, a6, 20001e3a <HAL_GetXore+0x1e>
20001e2f:	071287        	beq	a2, a8, 20001e3a <HAL_GetXore+0x1e>
20001e32:	fa6271        	l32r	a7, 200007bc <_stext+0xbc>
20001e35:	f03d      	nop.n
20001e37:	329277        	bne	a2, a7, 20001e6d <HAL_GetXore+0x51>
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:151
        (ulXorPageSize == (32 * KB_SIZE)) || (ulXorPageSize == (48 * KB_SIZE)) ||
        (ulXorPageSize == (64 * KB_SIZE)));
    ASSERT(pXoreId != NULL);
20001e3a:	23bc      	beqz.n	a3, 20001e70 <HAL_GetXore+0x54>
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:183
#else
#error "Flash type must be defined!"
#endif // FLASH_TLC

    // Search a valid XOR engine and hold it.
    for (i = ulXoreSearchStart; i < ulXoreSearchEnd; ++i)
20001e3c:	fa4ba1        	l32r	a10, 20000768 <_stext+0x68>
20001e3f:	c09260        	sub	a9, a2, a6
20001e42:	0ab916        	beqz	a9, 20001ef1 <HAL_GetXore+0xd5>
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:174
    {
        ulXoreSearchEnd = ONE_PASS_3DMLC_WRITE_XORE_CNT;
    }
    else
    {
        ulXoreSearchStart = ONE_PASS_3DMLC_WRITE_XORE_CNT;
20001e45:	460c      	movi.n	a6, 4
20001e47:	650c      	movi.n	a5, 6

20001e49 <HAL_GetXore+0x2d>:
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:183
#else
#error "Flash type must be defined!"
#endif // FLASH_TLC

    // Search a valid XOR engine and hold it.
    for (i = ulXoreSearchStart; i < ulXoreSearchEnd; ++i)
20001e49:	c0b560        	sub	a11, a5, a6
20001e4c:	1156c0        	slli	a5, a6, 4
20001e4f:	55aa      	add.n	a5, a5, a10
20001e51:	149b76        	loopnez	a11, 20001e69 <HAL_GetXore+0x4d>
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:185
    {
        if ((l_aXorE[i].pConfigReg->bsValid == TRUE) && (l_aXorE[i].bIsParityNeedStore == FALSE))
20001e54:	7f2572        	l32i	a7, a5, 0x1fc
20001e57:	0020c0        	memw
20001e5a:	0798      	l32i.n	a9, a7, 0
20001e5c:	8225b2        	l32i	a11, a5, 0x208
20001e5f:	0179f7        	bbci	a9, 31, 20001e64 <HAL_GetXore+0x48>
20001e62:	eb8c      	beqz.n	a11, 20001e74 <HAL_GetXore+0x58>
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:183
#else
#error "Flash type must be defined!"
#endif // FLASH_TLC

    // Search a valid XOR engine and hold it.
    for (i = ulXoreSearchStart; i < ulXoreSearchEnd; ++i)
20001e64:	661b      	addi.n	a6, a6, 1
20001e66:	10c552        	addi	a5, a5, 16

20001e69 <HAL_GetXore+0x4d>:
20001e69:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:217
        // parity to DRAM automatically.
        pConfigReg->bsSetDsgVldEnNf = FALSE;
        pConfigReg->bsAutoLoadEnNfBp = FALSE;
    }

    return bRequestResult;
20001e6b:	f00d      	ret.n

20001e6d <HAL_GetXore+0x51>:
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:148
    return;
}

BOOL HAL_GetXore(U32 ulXorPageSize, U32 *pXoreId)
{
    ASSERT((ulXorPageSize == (8 * KB_SIZE)) || (ulXorPageSize == (16 * KB_SIZE)) ||
20001e6d:	ffff06        	j	20001e6d <HAL_GetXore+0x51>

20001e70 <HAL_GetXore+0x54>:
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:151
        (ulXorPageSize == (32 * KB_SIZE)) || (ulXorPageSize == (48 * KB_SIZE)) ||
        (ulXorPageSize == (64 * KB_SIZE)));
    ASSERT(pXoreId != NULL);
20001e70:	ffff06        	j	20001e70 <HAL_GetXore+0x54>

20001e73 <HAL_GetXore+0x57>:
	...

20001e74 <HAL_GetXore+0x58>:
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:187
    // Search a valid XOR engine and hold it.
    for (i = ulXoreSearchStart; i < ulXoreSearchEnd; ++i)
    {
        if ((l_aXorE[i].pConfigReg->bsValid == TRUE) && (l_aXorE[i].bIsParityNeedStore == FALSE))
        {
            l_aXorE[i].pConfigReg->bsValid = FALSE;
20001e74:	090c      	movi.n	a9, 0
20001e76:	09bd      	mov.n	a11, a9
20001e78:	0020c0        	memw
20001e7b:	0748      	l32i.n	a4, a7, 0
20001e7d:	e204b4        	insbits	a11, a4, 0, 30
20001e80:	0020c0        	memw
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:194
            if (ulXorPageSize == (48 * KB_SIZE))
            {
                l_aXorE[i].bIsParityNeedStore = TRUE;
            }
            
            *pXoreId = i;
20001e83:	0369      	s32i.n	a6, a3, 0
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:187
    // Search a valid XOR engine and hold it.
    for (i = ulXoreSearchStart; i < ulXoreSearchEnd; ++i)
    {
        if ((l_aXorE[i].pConfigReg->bsValid == TRUE) && (l_aXorE[i].bIsParityNeedStore == FALSE))
        {
            l_aXorE[i].pConfigReg->bsValid = FALSE;
20001e85:	07b9      	s32i.n	a11, a7, 0
20001e87:	c04280        	sub	a4, a2, a8
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:203
    }

    // Request successful, we will set some default configure item of the XOR engine.
    if (bRequestResult == TRUE)
    {
        volatile XORE_CFG_REG   *pConfigReg = l_aXorE[*pXoreId].pConfigReg;
20001e8a:	1176c0        	slli	a7, a6, 4
20001e8d:	067416        	beqz	a4, 20001ef8 <HAL_GetXore+0xdc>
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:205

        pConfigReg->bsPageSize = ulXorPageSize >> 14;
20001e90:	418e20        	srli	a8, a2, 14
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:203
    }

    // Request successful, we will set some default configure item of the XOR engine.
    if (bRequestResult == TRUE)
    {
        volatile XORE_CFG_REG   *pConfigReg = l_aXorE[*pXoreId].pConfigReg;
20001e93:	7a7a      	add.n	a7, a10, a7
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:195
            {
                l_aXorE[i].bIsParityNeedStore = TRUE;
            }
            
            *pXoreId = i;
            bRequestResult = TRUE;
20001e95:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:203
    }

    // Request successful, we will set some default configure item of the XOR engine.
    if (bRequestResult == TRUE)
    {
        volatile XORE_CFG_REG   *pConfigReg = l_aXorE[*pXoreId].pConfigReg;
20001e97:	7f2772        	l32i	a7, a7, 0x1fc
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:205

        pConfigReg->bsPageSize = ulXorPageSize >> 14;
20001e9a:	0020c0        	memw
20001e9d:	0758      	l32i.n	a5, a7, 0
20001e9f:	020854        	insbits	a5, a8, 0, 2
20001ea2:	0020c0        	memw
20001ea5:	0759      	s32i.n	a5, a7, 0
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:208

        // Default behavior: Do whole Page operation in every mode.
        pConfigReg->bsStartCw = 0;
20001ea7:	fa4641        	l32r	a4, 200007c0 <_stext+0xc0>
20001eaa:	0020c0        	memw
20001ead:	07b8      	l32i.n	a11, a7, 0
20001eaf:	10bb40        	and	a11, a11, a4
20001eb2:	20bb90        	or	a11, a11, a9
20001eb5:	0020c0        	memw
20001eb8:	07b9      	s32i.n	a11, a7, 0
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:209
        pConfigReg->bsCodeWordCnt = XOR_CWCNT_INDEX_BY_PAGESIZE_INDEX(ulXorPageSize >> 14);
20001eba:	0020c0        	memw
20001ebd:	c758      	l32i.n	a5, a7, 48
20001ebf:	883b      	addi.n	a8, a8, 3
20001ec1:	438854        	insbits	a5, a8, 8, 11
20001ec4:	0020c0        	memw
20001ec7:	c759      	s32i.n	a5, a7, 48
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:213

        // Default behavior: XOR engine is not responsible for setting DSG valid; XOR engine don't move the XOR
        // parity to DRAM automatically.
        pConfigReg->bsSetDsgVldEnNf = FALSE;
20001ec9:	fa3e41        	l32r	a4, 200007c4 <_stext+0xc4>
20001ecc:	0020c0        	memw
20001ecf:	17b8      	l32i.n	a11, a7, 4
20001ed1:	10bb40        	and	a11, a11, a4
20001ed4:	20bb90        	or	a11, a11, a9
20001ed7:	0020c0        	memw
20001eda:	17b9      	s32i.n	a11, a7, 4
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:214
        pConfigReg->bsAutoLoadEnNfBp = FALSE;
20001edc:	fa3b81        	l32r	a8, 200007c8 <_stext+0xc8>
20001edf:	0020c0        	memw
20001ee2:	1758      	l32i.n	a5, a7, 4
20001ee4:	105580        	and	a5, a5, a8
20001ee7:	205590        	or	a5, a5, a9
20001eea:	0020c0        	memw
20001eed:	1759      	s32i.n	a5, a7, 4
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:217
    }

    return bRequestResult;
20001eef:	f00d      	ret.n

20001ef1 <HAL_GetXore+0xd5>:
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:170
        ulXoreSearchStart = TLC_WRITE_XORE_CNT;
    }
#elif (defined(FLASH_3D_MLC)||defined(FLASH_INTEL_3DTLC))
    if (ulXorPageSize == (32 * KB_SIZE))
    {
        ulXoreSearchEnd = ONE_PASS_3DMLC_WRITE_XORE_CNT;
20001ef1:	060c      	movi.n	a6, 0
20001ef3:	450c      	movi.n	a5, 4
20001ef5:	ffd406        	j	20001e49 <HAL_GetXore+0x2d>

20001ef8 <HAL_GetXore+0xdc>:
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:191
        {
            l_aXorE[i].pConfigReg->bsValid = FALSE;

            if (ulXorPageSize == (48 * KB_SIZE))
            {
                l_aXorE[i].bIsParityNeedStore = TRUE;
20001ef8:	180c      	movi.n	a8, 1
20001efa:	826582        	s32i	a8, a5, 0x208
20001efd:	ffe3c6        	j	20001e90 <HAL_GetXore+0x74>

20001f00 <L3_AllocResource>:
L3_AllocResource():
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:188
Usage      : 
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
GLOBAL BOOL L3_AllocResource(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
20001f00:	a0c112        	addi	a1, a1, -96
20001f03:	a109      	s32i.n	a0, a1, 40
20001f05:	e1f9      	s32i.n	a15, a1, 56
20001f07:	d1e9      	s32i.n	a14, a1, 52
20001f09:	b1c9      	s32i.n	a12, a1, 44
20001f0b:	c1d9      	s32i.n	a13, a1, 48
20001f0d:	fa1ac1        	l32r	a12, 20000778 <_stext+0x78>
20001f10:	fd7c      	movi.n	a13, -1
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:191
    BOOL bResult;

    if (TRUE == ptCtrlEntry->ptReqEntry->tFlashDesc.bsHostRdEn)
20001f12:	02e8      	l32i.n	a14, a2, 0
20001f14:	02fd      	mov.n	a15, a2
20001f16:	4e28      	l32i.n	a2, a14, 16
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:188
Usage      : 
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
GLOBAL BOOL L3_AllocResource(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
20001f18:	fa0f01        	l32r	a0, 20000754 <_stext+0x54>
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:191
    BOOL bResult;

    if (TRUE == ptCtrlEntry->ptReqEntry->tFlashDesc.bsHostRdEn)
20001f1b:	437257        	bbci	a2, 21, 20001f62 <L3_AllocResource+0x62>
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:193
    {
        bResult = L3_NvmeAllocHSG(ptCtrlEntry);
20001f1e:	f9f861        	l32r	a6, 20000700 <_stext>
20001f21:	fa0081        	l32r	a8, 20000724 <_stext+0x24>
20001f24:	000e72        	l8ui	a7, a14, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
20001f27:	f9fda1        	l32r	a10, 2000071c <_stext+0x1c>
20001f2a:	378a      	add.n	a3, a7, a8
20001f2c:	800332        	l8ui	a3, a3, 128
20001f2f:	3e2aa2        	l32i	a10, a10, 248
20001f32:	11b3c0        	slli	a11, a3, 4
20001f35:	aaba      	add.n	a10, a10, a11
20001f37:	0020c0        	memw
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:424

    ucSgqStaRegNum = ucPhyPU / PUNUM_PER_SGQ_STATUS_REG;
    ucSgqStaPuMapOffset = ucPhyPU % PUNUM_PER_SGQ_STATUS_REG;
    ucSgqStaPuLevelMapBit =  1 <<((ucSgqStaPuMapOffset * NFCQ_DEPTH_TOTAL) + ucLun* NFCQ_DEPTH + ucLevel);

    switch  (ucSgqStaRegNum)
20001f3a:	742230        	extui	a2, a3, 2, 8
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:422
    U32  ucSgqStaPuMapOffset;
    U32  ucSgqStaPuLevelMapBit;

    ucSgqStaRegNum = ucPhyPU / PUNUM_PER_SGQ_STATUS_REG;
    ucSgqStaPuMapOffset = ucPhyPU % PUNUM_PER_SGQ_STATUS_REG;
    ucSgqStaPuLevelMapBit =  1 <<((ucSgqStaPuMapOffset * NFCQ_DEPTH_TOTAL) + ucLun* NFCQ_DEPTH + ucLevel);
20001f3d:	150c      	movi.n	a5, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
20001f3f:	000aa2        	l8ui	a10, a10, 0
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:422
20001f42:	149030        	extui	a9, a3, 0, 2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
20001f45:	41a6a0        	srli	a10, a10, 6
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:422
20001f48:	b099a0        	addx8	a9, a9, a10
20001f4b:	401900        	ssl	a9
20001f4e:	a15500        	sll	a5, a5
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:424

    switch  (ucSgqStaRegNum)
20001f51:	6342f6        	bgeui	a2, 4, 20001fb8 <L3_AllocResource+0xb8>
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:430
    {
        case 0:
        case 1:
        case 2:
        case 3:
            ulSgqStatus = *(((volatile U32*)rSgqStatusP1Addr) + ucSgqStaRegNum);
20001f54:	a04260        	addx4	a4, a2, a6
20001f57:	0020c0        	memw
20001f5a:	512442        	l32i	a4, a4, 0x144
20001f5d:	0149      	s32i.n	a4, a1, 0
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:431
            break;
20001f5f:	002246        	j	20001fec <L3_AllocResource+0xec>

20001f62 <L3_AllocResource+0x62>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:329
    FCMD_REQ_ENTRY *ptReqEntry;

    ptReqEntry = ptCtrlEntry->ptReqEntry;
    ptDsgCtrl = &ptCtrlEntry->tDTxCtrl;

    if (((FCMD_REQ_TYPE_READ == ptReqEntry->bsReqType)
20001f62:	0e98      	l32i.n	a9, a14, 0
20001f64:	253290        	extui	a3, a9, 18, 3
20001f67:	430b      	addi.n	a4, a3, -1
20001f69:	51b416        	beqz	a4, 20002488 <L3_AllocResource+0x588>
20001f6c:	51e316        	beqz	a3, 2000248e <L3_AllocResource+0x58e>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:342
        
        ptDsgCtrl->bsDSGEn = TRUE;
    }
    else
    {        
        if (TRUE == ptReqEntry->tFlashDesc.bsRdRedOnly)
20001f6f:	2b7267        	bbci	a2, 22, 20001f9e <L3_AllocResource+0x9e>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:344
        {
            if (FCMD_REQ_SUBTYPE_NORMAL == ptReqEntry->bsReqSubType)
20001f72:	fa1621        	l32r	a2, 200007cc <_stext+0xcc>
20001f75:	6f08      	l32i.n	a0, a15, 24
20001f77:	255590        	extui	a5, a9, 21, 3
20001f7a:	550b      	addi.n	a5, a5, -1
20001f7c:	100020        	and	a0, a0, a2
20001f7f:	619516        	beqz	a5, 2000259c <L3_AllocResource+0x69c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:354
            {
                ptDsgCtrl->bsDmaTotalLen = 0;
            }
        }
        
        ptDsgCtrl->bsDSGEn = FALSE;
20001f82:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:200
    else
    {
        bResult = L3_IFAllocDSG(ptCtrlEntry);
    }
  
    return bResult;
20001f84:	b1c8      	l32i.n	a12, a1, 44
20001f86:	c1d8      	l32i.n	a13, a1, 48
20001f88:	d1e8      	l32i.n	a14, a1, 52
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:350
            {
                ptDsgCtrl->bsDmaTotalLen = PLN_PER_LUN-1;
            }
            else
            {
                ptDsgCtrl->bsDmaTotalLen = 0;
20001f8a:	6f09      	s32i.n	a0, a15, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:354
            }
        }
        
        ptDsgCtrl->bsDSGEn = FALSE;
20001f8c:	3f68      	l32i.n	a6, a15, 12
20001f8e:	e77c      	movi.n	a7, -2
20001f90:	106670        	and	a6, a6, a7
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:200
20001f93:	a108      	l32i.n	a0, a1, 40
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:354
20001f95:	3f69      	s32i.n	a6, a15, 12
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:200
20001f97:	e1f8      	l32i.n	a15, a1, 56
20001f99:	60c112        	addi	a1, a1, 96
20001f9c:	f00d      	ret.n

20001f9e <L3_AllocResource+0x9e>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:354
20001f9e:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:200
20001fa0:	a108      	l32i.n	a0, a1, 40
20001fa2:	b1c8      	l32i.n	a12, a1, 44
20001fa4:	c1d8      	l32i.n	a13, a1, 48
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:354
20001fa6:	e77c      	movi.n	a7, -2
20001fa8:	3f68      	l32i.n	a6, a15, 12
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:200
20001faa:	d1e8      	l32i.n	a14, a1, 52
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:354
20001fac:	106670        	and	a6, a6, a7
20001faf:	3f69      	s32i.n	a6, a15, 12
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:200
20001fb1:	e1f8      	l32i.n	a15, a1, 56
20001fb3:	60c112        	addi	a1, a1, 96
20001fb6:	f00d      	ret.n

20001fb8 <L3_AllocResource+0xb8>:
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:424

    ucSgqStaRegNum = ucPhyPU / PUNUM_PER_SGQ_STATUS_REG;
    ucSgqStaPuMapOffset = ucPhyPU % PUNUM_PER_SGQ_STATUS_REG;
    ucSgqStaPuLevelMapBit =  1 <<((ucSgqStaPuMapOffset * NFCQ_DEPTH_TOTAL) + ucLun* NFCQ_DEPTH + ucLevel);

    switch  (ucSgqStaRegNum)
20001fb8:	1482f6        	bgeui	a2, 8, 20001fd0 <L3_AllocResource+0xd0>
20001fbb:	1142b6        	bltui	a2, 4, 20001fd0 <L3_AllocResource+0xd0>
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:436
            break;
        case 4:
        case 5:
        case 6:
        case 7:
            ulSgqStatus = *(((volatile U32*)rSgqStatusP2Addr) + (ucSgqStaRegNum - 4));
20001fbe:	f9d081        	l32r	a8, 20000700 <_stext>
20001fc1:	a08280        	addx4	a8, a2, a8
20001fc4:	0020c0        	memw
20001fc7:	692882        	l32i	a8, a8, 0x1a4
20001fca:	0189      	s32i.n	a8, a1, 0
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:437
            break;
20001fcc:	000706        	j	20001fec <L3_AllocResource+0xec>

20001fcf <L3_AllocResource+0xcf>:
	...

20001fd0 <L3_AllocResource+0xd0>:
20001fd0:	146172        	s32i	a7, a1, 80
20001fd3:	7159      	s32i.n	a5, a1, 28
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:439
        default:
            DBG_Printf("ucPhyPu is invalid\n", ucPhyPU);
20001fd5:	f9fe21        	l32r	a2, 200007d0 <_stext+0xd0>
20001fd8:	201110        	or	a1, a1, a1
20001fdb:	08c885        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:440
            DBG_Getch();
20001fde:	f9ce01        	l32r	a0, 20000718 <_stext+0x18>
20001fe1:	0000c0        	callx0	a0
20001fe4:	f9dc01        	l32r	a0, 20000754 <_stext+0x54>
20001fe7:	7158      	l32i.n	a5, a1, 28
20001fe9:	142172        	l32i	a7, a1, 80
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:444
            break;
    }

    if (0 != (rGlbOTFBMCtrl0 & (1 << 18)))
20001fec:	0020c0        	memw
20001fef:	8a2c92        	l32i	a9, a12, 0x228
20001ff2:	059290        	extui	a9, a9, 18, 1
20001ff5:	4ab956        	bnez	a9, 200024a4 <L3_AllocResource+0x5a4>
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:446
    {
        DBG_Printf("PU=%d GLB_28\n", ucPU);
20001ff8:	0138      	l32i.n	a3, a1, 0
20001ffa:	1a0c      	movi.n	a10, 1
20001ffc:	103350        	and	a3, a3, a5
20001fff:	933a30        	movnez	a3, a10, a3
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:107
    BOOL bIsSGQIdle;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    FCMD_DATA_TX_CTRL *ptHsgCtrl = &ptCtrlEntry->tDTxCtrl;
    HMEM_DPTR *ptHmemDptr = &ptReqEntry->tHostDesc.tHostDptr;

    bIsSGQIdle = HAL_SgqIsBusy(L3_GET_PU(ptReqEntry->bsTLun), L3_GET_LUN_IN_PU(ptReqEntry->bsTLun)) ? FALSE : TRUE;
20002002:	150c      	movi.n	a5, 1
20002004:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:109

    if (TRUE == ptHsgCtrl->bsBdEngineDone)
20002006:	6f48      	l32i.n	a4, a15, 24
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:107
    BOOL bIsSGQIdle;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    FCMD_DATA_TX_CTRL *ptHsgCtrl = &ptCtrlEntry->tDTxCtrl;
    HMEM_DPTR *ptHmemDptr = &ptReqEntry->tHostDesc.tHostDptr;

    bIsSGQIdle = HAL_SgqIsBusy(L3_GET_PU(ptReqEntry->bsTLun), L3_GET_LUN_IN_PU(ptReqEntry->bsTLun)) ? FALSE : TRUE;
20002008:	832530        	moveqz	a2, a5, a3
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:109

    if (TRUE == ptHsgCtrl->bsBdEngineDone)
2000200b:	0e6407        	bbci	a4, 0, 2000201d <L3_AllocResource+0x11d>
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:200
    else
    {
        bResult = L3_IFAllocDSG(ptCtrlEntry);
    }
  
    return bResult;
2000200e:	b1c8      	l32i.n	a12, a1, 44
20002010:	c1d8      	l32i.n	a13, a1, 48
20002012:	d1e8      	l32i.n	a14, a1, 52
20002014:	e1f8      	l32i.n	a15, a1, 56
20002016:	a108      	l32i.n	a0, a1, 40
20002018:	60c112        	addi	a1, a1, 96
2000201b:	f00d      	ret.n

2000201d <L3_AllocResource+0x11d>:
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:114
    if (TRUE == ptHsgCtrl->bsBdEngineDone)
    {
        return bIsSGQIdle;
    }
    
    if (INVALID_4F == ptHsgCtrl->bsFstEngineID)
2000201d:	0a1f62        	l16ui	a6, a15, 20
20002020:	086122        	s32i	a2, a1, 32
20002023:	c06600        	sub	a6, a6, a0
20002026:	4ba616        	beqz	a6, 200024e4 <L3_AllocResource+0x5e4>
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:127
        ptHsgCtrl->bsCurEngineID = usCurHsgId;

        ptHsgCtrl->bsRemSecLen = ptReqEntry->tFlashDesc.bsSecLen << SEC_SZ_BITS;
        ptHsgCtrl->bsPrdOrPrpIdx = ptHmemDptr->bsPrdOrPrpIndex;
        ptHsgCtrl->bsLstSecRemain = ptHmemDptr->bsLastSecRemain;
        ptHsgCtrl->bsOffSet = ptHmemDptr->bsOffset;
20002029:	032f32        	l32i	a3, a15, 12
2000202c:	f9ea41        	l32r	a4, 200007d4 <_stext+0xd4>
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:130
    }
    
    while (0 < ptHsgCtrl->bsRemSecLen)
2000202f:	413530        	srli	a3, a3, 5
20002032:	103340        	and	a3, a3, a4
20002035:	0213e6        	bgei	a3, 1, 2000203b <L3_AllocResource+0x13b>
20002038:	00ec06        	j	200023ec <L3_AllocResource+0x4ec>
2000203b:	f159      	s32i.n	a5, a1, 60
2000203d:	002006        	j	200020c1 <L3_AllocResource+0x1c1>

20002040 <L3_AllocResource+0x140>:
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:407
            }     
        }
    }
    else
    {
        pHsgEntry->ulLBA = pHmemDptr->ulLBA;
20002040:	aea8      	l32i.n	a10, a14, 40
20002042:	8e88      	l32i.n	a8, a14, 32
20002044:	37a9      	s32i.n	a10, a7, 12
20002046:	846c80        	extui	a6, a8, 12, 9
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:410
    }

    if(0 != pHmemDptr->bsLastSecRemain)
20002049:	173616        	beqz	a6, 200021c0 <L3_AllocResource+0x2c0>
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:412
    {
        pHmemDptr->bsLastSecRemain = SEC_SIZE - (pHsgEntry->bsLength - pHmemDptr->bsLastSecRemain)%SEC_SIZE;
2000204c:	00a2b2        	movi	a11, 0x200
2000204f:	00a242        	movi	a4, 0x200
20002052:	c02960        	sub	a2, a9, a6
20002055:	f22240        	rems	a2, a2, a4
20002058:	c0bb20        	sub	a11, a11, a2
2000205b:	a0cb84        	insbits	a8, a11, 12, 20
2000205e:	8e89      	s32i.n	a8, a14, 32
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:146
            usNextHsgId = INVALID_4F;
        }

        ulRemainSecLen = ptHsgCtrl->bsRemSecLen;
        HAL_BuildHsg(ptHmemDptr, &ulRemainSecLen, ptHsgCtrl->bsCurEngineID, usNextHsgId);
        ptHsgCtrl->bsRemSecLen = ulRemainSecLen;
20002060:	3f78      	l32i.n	a7, a15, 12
20002062:	c05374        	insbits	a7, a3, 5, 24
20002065:	3f79      	s32i.n	a7, a15, 12
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:265
    else
    {
        DBG_Getch();
    }
#else
    l_pHsgReport->bsHsgValue = ucStsValue;
20002067:	f9ad71        	l32r	a7, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:146
2000206a:	0b1f52        	l16ui	a5, a15, 22
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:265
2000206d:	752722        	l32i	a2, a7, 0x1d4
20002070:	0020c0        	memw
20002073:	eb7c      	movi.n	a11, -2
20002075:	0268      	l32i.n	a6, a2, 0
20002077:	1a0c      	movi.n	a10, 1
20002079:	1066b0        	and	a6, a6, a11
2000207c:	2066a0        	or	a6, a6, a10
2000207f:	0020c0        	memw
20002082:	0269      	s32i.n	a6, a2, 0
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:266
    l_pHsgReport->bsHsgWrIndex = usHsgId;
20002084:	0020c0        	memw
20002087:	0248      	l32i.n	a4, a2, 0
20002089:	421544        	insbits	a4, a5, 1, 10
2000208c:	0020c0        	memw
2000208f:	0249      	s32i.n	a4, a2, 0
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:267
    l_pHsgReport->bsHsgWrEn = TRUE;
20002091:	0020c0        	memw
20002094:	f9d161        	l32r	a6, 200007d8 <_stext+0xd8>
20002097:	0298      	l32i.n	a9, a2, 0
20002099:	f9d051        	l32r	a5, 200007dc <_stext+0xdc>
2000209c:	109960        	and	a9, a9, a6
2000209f:	209950        	or	a9, a9, a5
200020a2:	0020c0        	memw
200020a5:	0299      	s32i.n	a9, a2, 0
200020a7:	c08d00        	sub	a8, a13, a0
200020aa:	312816        	beqz	a8, 200023c0 <L3_AllocResource+0x4c0>
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:151
        HAL_SetHsgSts(ptHsgCtrl->bsCurEngineID, TRUE);

        if (INVALID_4F != usNextHsgId)
        {
            ptHsgCtrl->bsCurEngineID = usNextHsgId;
200020ad:	0b5fd2        	s16i	a13, a15, 22
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:130
        ptHsgCtrl->bsPrdOrPrpIdx = ptHmemDptr->bsPrdOrPrpIndex;
        ptHsgCtrl->bsLstSecRemain = ptHmemDptr->bsLastSecRemain;
        ptHsgCtrl->bsOffSet = ptHmemDptr->bsOffset;
    }
    
    while (0 < ptHsgCtrl->bsRemSecLen)
200020b0:	3f38      	l32i.n	a3, a15, 12
200020b2:	f9c841        	l32r	a4, 200007d4 <_stext+0xd4>
200020b5:	413530        	srli	a3, a3, 5
200020b8:	103340        	and	a3, a3, a4
200020bb:	0213e6        	bgei	a3, 1, 200020c1 <L3_AllocResource+0x1c1>
200020be:	00ca86        	j	200023ec <L3_AllocResource+0x4ec>
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:453
    pPrd = (volatile PRD *)HAL_GetLocalPrdEntryAddr(pHmemDptr->bsCmdTag, pHmemDptr->bsPrdOrPrpIndex);
    ulRemLenInEntry = pPrd->DBC + 1 - pHmemDptr->bsOffset;
#else //NVMe mode
    volatile QWORD *pHostMemAddr;
    pHostMemAddr = (volatile QWORD *)HAL_GetLocalPrpEntryAddr(pHmemDptr->bsCmdTag, pHmemDptr->bsPrdOrPrpIndex);
    ulRemLenInEntry = HPAGE_SIZE - pHmemDptr->bsOffset;
200020c1:	f9c7a1        	l32r	a10, 200007e0 <_stext+0xe0>
200020c4:	9e98      	l32i.n	a9, a14, 36
200020c6:	f9c761        	l32r	a6, 200007e4 <_stext+0xe4>
200020c9:	1099a0        	and	a9, a9, a10
200020cc:	c06690        	sub	a6, a6, a9
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:132
    {
        if (FALSE == HAL_CheckForLastHsg(ptHmemDptr, ptHsgCtrl->bsRemSecLen))
200020cf:	13b637        	bgeu	a6, a3, 200020e6 <L3_AllocResource+0x1e6>
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:102
------------------------------------------------------------------------------*/
BOOL HAL_GetHsg(U16 *pHsgId)
{
    BOOL bStsFlag;

    if (0 != (rGlbOTFBMCtrl0 & (1 << 18)))
200020d2:	0020c0        	memw
200020d5:	8a2cb2        	l32i	a11, a12, 0x228
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:105
    {
        /* Returns a dummy HSG id on PCIe reset handling. */
        *pHsgId = 0;
200020d8:	0d0c      	movi.n	a13, 0
200020da:	05b2b0        	extui	a11, a11, 18, 1
200020dd:	12fb16        	beqz	a11, 20002210 <L3_AllocResource+0x310>
200020e0:	0351d2        	s16i	a13, a1, 6
200020e3:	000146        	j	200020ec <L3_AllocResource+0x1ec>

200020e6 <L3_AllocResource+0x1e6>:
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:141
                break;
            }
        }
        else
        {
            usNextHsgId = INVALID_4F;
200020e6:	f99bd1        	l32r	a13, 20000754 <_stext+0x54>
200020e9:	0351d2        	s16i	a13, a1, 6
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:145
        }

        ulRemainSecLen = ptHsgCtrl->bsRemSecLen;
        HAL_BuildHsg(ptHmemDptr, &ulRemainSecLen, ptHsgCtrl->bsCurEngineID, usNextHsgId);
200020ec:	0b1fa2        	l16ui	a10, a15, 22
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:344
    ulRemLenInEntry = (pPrd->DBC + 1) - pHmemDptr->bsOffset;
    tWordIn.HighDw = pPrd->DBAHi;
    tWordIn.LowDw = pPrd->DBALo;
#else // NVMe mode
    volatile QWORD *pHostMemAddr;
    pHostMemAddr = (volatile QWORD *)HAL_GetLocalPrpEntryAddr(pHmemDptr->bsCmdTag, pHmemDptr->bsPrdOrPrpIndex);
200020ef:	8e88      	l32i.n	a8, a14, 32
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:346
    ulRemLenInEntry = HPAGE_SIZE - pHmemDptr->bsOffset;
    tWordIn.HighDw = pHostMemAddr->HighDw;
200020f1:	f9bd21        	l32r	a2, 200007e8 <_stext+0xe8>
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:344
    ulRemLenInEntry = (pPrd->DBC + 1) - pHmemDptr->bsOffset;
    tWordIn.HighDw = pPrd->DBAHi;
    tWordIn.LowDw = pPrd->DBALo;
#else // NVMe mode
    volatile QWORD *pHostMemAddr;
    pHostMemAddr = (volatile QWORD *)HAL_GetLocalPrpEntryAddr(pHmemDptr->bsCmdTag, pHmemDptr->bsPrdOrPrpIndex);
200020f4:	547680        	extui	a7, a8, 6, 6
200020f7:	548080        	extui	a8, a8, 0, 6
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:346
    ulRemLenInEntry = HPAGE_SIZE - pHmemDptr->bsOffset;
    tWordIn.HighDw = pHostMemAddr->HighDw;
200020fa:	11b8b0        	slli	a11, a8, 5
200020fd:	88ba      	add.n	a8, a8, a11
200020ff:	778a      	add.n	a7, a7, a8
20002101:	b07720        	addx8	a7, a7, a2
20002104:	0020c0        	memw
20002107:	7f2782        	l32i	a8, a7, 0x1fc
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:347
    tWordIn.LowDw = pHostMemAddr->LowDw & (~HPAGE_SIZE_MSK);
2000210a:	0020c0        	memw
2000210d:	f9b7b1        	l32r	a11, 200007ec <_stext+0xec>
20002110:	7e2772        	l32i	a7, a7, 0x1f8
D:\IM_3D_TLC\firmware\COM/COM_QWord.c:50

void COM_QwAddDw(QWORD *pQwIn, U32 ulDwIn, QWORD *pQwOut)
{
    pQwOut->LowDw = (U32)(pQwIn->LowDw + ulDwIn);
    
    if (INVALID_8F - ulDwIn > pQwIn->LowDw)
20002113:	f47c      	movi.n	a4, -1
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:221
History:
    201409011    Tobey   uniform coding style
------------------------------------------------------------------------------*/
U32 HAL_GetHsgAddr(U16 usHsgId)
{
    if (usHsgId >= HSG_NUM)
20002115:	9420d0        	extui	a2, a13, 0, 10
20002118:	9129      	s32i.n	a2, a1, 36
D:\IM_3D_TLC\firmware\COM/COM_QWord.c:50
2000211a:	c04490        	sub	a4, a4, a9
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:347
2000211d:	1077b0        	and	a7, a7, a11
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:221
20002120:	997a      	add.n	a9, a9, a7
D:\IM_3D_TLC\firmware\COM/COM_QWord.c:50
20002122:	04b747        	bgeu	a7, a4, 2000212a <L3_AllocResource+0x22a>
D:\IM_3D_TLC\firmware\COM/COM_QWord.c:52
    {
        pQwOut->HighDw = pQwIn->HighDw;
20002125:	f189      	s32i.n	a8, a1, 60
20002127:	000246        	j	20002134 <L3_AllocResource+0x234>

2000212a <L3_AllocResource+0x22a>:
D:\IM_3D_TLC\firmware\COM/COM_QWord.c:56
    }
    else
    {
        pQwOut->HighDw += (U32)(pQwIn->HighDw + 1);
2000212a:	f158      	l32i.n	a5, a1, 60
2000212c:	b81b      	addi.n	a11, a8, 1
2000212e:	8055b0        	add	a5, a5, a11
20002131:	0f6152        	s32i	a5, a1, 60
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:221
20002134:	f480d0        	extui	a8, a13, 0, 16
20002137:	ffa2b2        	movi	a11, 0x2ff
2000213a:	02bba7        	bgeu	a11, a10, 20002140 <L3_AllocResource+0x240>
2000213d:	0057c6        	j	200022a0 <L3_AllocResource+0x3a0>
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:396
    *pByteLen = ulHostReqRemainLen;

    //update pHmemDptr
    if(0 != pHmemDptr->bsLastSecRemain)
    {
        if( ( pHsgEntry->bsLength - pHmemDptr->bsLastSecRemain) > 0)
20002140:	f97421        	l32r	a2, 20000710 <_stext+0x10>
20002143:	117ac0        	slli	a7, a10, 4
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:357

    //fill HSG
    ulHsgAddr = HAL_GetHsgAddr(usCurHsgId);
    pHsgEntry = (HSG_ENTRY *)ulHsgAddr;

    pHsgEntry->ulHostAddrHigh = tWordOut.HighDw;
20002146:	f148      	l32i.n	a4, a1, 60
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:396
    *pByteLen = ulHostReqRemainLen;

    //update pHmemDptr
    if(0 != pHmemDptr->bsLastSecRemain)
    {
        if( ( pHsgEntry->bsLength - pHmemDptr->bsLastSecRemain) > 0)
20002148:	772a      	add.n	a7, a7, a2
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:358
    //fill HSG
    ulHsgAddr = HAL_GetHsgAddr(usCurHsgId);
    pHsgEntry = (HSG_ENTRY *)ulHsgAddr;

    pHsgEntry->ulHostAddrHigh = tWordOut.HighDw;
    pHsgEntry->ulHostAddrLow = tWordOut.LowDw;
2000214a:	1799      	s32i.n	a9, a7, 4
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:359
    pHsgEntry->bsNextHsgId = usNextHsgId;
2000214c:	0798      	l32i.n	a9, a7, 0
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:357

    //fill HSG
    ulHsgAddr = HAL_GetHsgAddr(usCurHsgId);
    pHsgEntry = (HSG_ENTRY *)ulHsgAddr;

    pHsgEntry->ulHostAddrHigh = tWordOut.HighDw;
2000214e:	2749      	s32i.n	a4, a7, 8
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:359
    pHsgEntry->ulHostAddrLow = tWordOut.LowDw;
    pHsgEntry->bsNextHsgId = usNextHsgId;
20002150:	410d94        	insbits	a9, a13, 0, 9
20002153:	0799      	s32i.n	a9, a7, 0
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:361

    if(INVALID_4F == usNextHsgId)
20002155:	781807        	beq	a8, a0, 200021d1 <L3_AllocResource+0x2d1>
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:367
    {
        pHsgEntry->bsLast = TRUE;
    }
    else
    {
        pHsgEntry->bsLast = FALSE;
20002158:	ffab82        	movi	a8, 0xfffffbff
2000215b:	108980        	and	a8, a9, a8
2000215e:	006782        	s32i	a8, a7, 0
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:370
    }

    if(ulHostReqRemainLen > ulRemLenInEntry)
20002161:	77b637        	bgeu	a6, a3, 200021dc <L3_AllocResource+0x2dc>
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:373
    {
        pHsgEntry->bsLength = ulRemLenInEntry;  
        pHmemDptr->bsOffset = 0;
20002164:	f9a3b1        	l32r	a11, 200007f0 <_stext+0xf0>
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:372
        pHsgEntry->bsLast = FALSE;
    }

    if(ulHostReqRemainLen > ulRemLenInEntry)
    {
        pHsgEntry->bsLength = ulRemLenInEntry;  
20002167:	e3e684        	insbits	a8, a6, 14, 31
2000216a:	0789      	s32i.n	a8, a7, 0
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:374
        pHmemDptr->bsOffset = 0;
        pHmemDptr->bsPrdOrPrpIndex++;
2000216c:	8e88      	l32i.n	a8, a14, 32
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:373
    }

    if(ulHostReqRemainLen > ulRemLenInEntry)
    {
        pHsgEntry->bsLength = ulRemLenInEntry;  
        pHmemDptr->bsOffset = 0;
2000216e:	9ea8      	l32i.n	a10, a14, 36
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:374
        pHmemDptr->bsPrdOrPrpIndex++;
20002170:	549680        	extui	a9, a8, 6, 6
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:373
    }

    if(ulHostReqRemainLen > ulRemLenInEntry)
    {
        pHsgEntry->bsLength = ulRemLenInEntry;  
        pHmemDptr->bsOffset = 0;
20002173:	10aab0        	and	a10, a10, a11
20002176:	9ea9      	s32i.n	a10, a14, 36
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:374
        pHmemDptr->bsPrdOrPrpIndex++;
20002178:	01c992        	addi	a9, a9, 1
2000217b:	436984        	insbits	a8, a9, 6, 11
2000217e:	086e82        	s32i	a8, a14, 32
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:390
        }
#endif
    }

    //return remain length
    ulHostReqRemainLen -= pHsgEntry->bsLength;
20002181:	0798      	l32i.n	a9, a7, 0
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:394
    *pByteLen = ulHostReqRemainLen;

    //update pHmemDptr
    if(0 != pHmemDptr->bsLastSecRemain)
20002183:	846c80        	extui	a6, a8, 12, 9
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:390
        }
#endif
    }

    //return remain length
    ulHostReqRemainLen -= pHsgEntry->bsLength;
20002186:	419e90        	srli	a9, a9, 14
20002189:	c03390        	sub	a3, a3, a9
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:394
    *pByteLen = ulHostReqRemainLen;

    //update pHmemDptr
    if(0 != pHmemDptr->bsLastSecRemain)
2000218c:	eb0616        	beqz	a6, 20002040 <L3_AllocResource+0x140>
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:396
    {
        if( ( pHsgEntry->bsLength - pHmemDptr->bsLastSecRemain) > 0)
2000218f:	c0a960        	sub	a10, a9, a6
20002192:	021ae6        	bgei	a10, 1, 20002198 <L3_AllocResource+0x298>
20002195:	ffac06        	j	20002049 <L3_AllocResource+0x149>
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:399
        {
            pHsgEntry->ulLBA = pHmemDptr->ulLBA + 1;
            if(( pHsgEntry->bsLength - pHmemDptr->bsLastSecRemain)/SEC_SIZE )
20002198:	fea3b2        	movi	a11, 0x3fe
2000219b:	8e88      	l32i.n	a8, a14, 32
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:398
    //update pHmemDptr
    if(0 != pHmemDptr->bsLastSecRemain)
    {
        if( ( pHsgEntry->bsLength - pHmemDptr->bsLastSecRemain) > 0)
        {
            pHsgEntry->ulLBA = pHmemDptr->ulLBA + 1;
2000219d:	aea8      	l32i.n	a10, a14, 40
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:399
            if(( pHsgEntry->bsLength - pHmemDptr->bsLastSecRemain)/SEC_SIZE )
2000219f:	846c80        	extui	a6, a8, 12, 9
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:398
    //update pHmemDptr
    if(0 != pHmemDptr->bsLastSecRemain)
    {
        if( ( pHsgEntry->bsLength - pHmemDptr->bsLastSecRemain) > 0)
        {
            pHsgEntry->ulLBA = pHmemDptr->ulLBA + 1;
200021a2:	aa1b      	addi.n	a10, a10, 1
200021a4:	37a9      	s32i.n	a10, a7, 12
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:399
            if(( pHsgEntry->bsLength - pHmemDptr->bsLastSecRemain)/SEC_SIZE )
200021a6:	c02960        	sub	a2, a9, a6
200021a9:	02d222        	addmi	a2, a2, 0x200
200021ac:	220b      	addi.n	a2, a2, -1
200021ae:	023b27        	bltu	a11, a2, 200021b4 <L3_AllocResource+0x2b4>
200021b1:	ffa506        	j	20002049 <L3_AllocResource+0x149>
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:401
            {
                pHmemDptr->ulLBA++;
200021b4:	0a6ea2        	s32i	a10, a14, 40
200021b7:	002792        	l32i	a9, a7, 0
200021ba:	419e90        	srli	a9, a9, 14
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:410
    else
    {
        pHsgEntry->ulLBA = pHmemDptr->ulLBA;
    }

    if(0 != pHmemDptr->bsLastSecRemain)
200021bd:	e8b656        	bnez	a6, 2000204c <L3_AllocResource+0x14c>
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:416
    {
        pHmemDptr->bsLastSecRemain = SEC_SIZE - (pHsgEntry->bsLength - pHmemDptr->bsLastSecRemain)%SEC_SIZE;
    }
    else
    {
        pHmemDptr->bsLastSecRemain = SEC_SIZE - pHsgEntry->bsLength%SEC_SIZE;
200021c0:	84b090        	extui	a11, a9, 0, 9
200021c3:	00a2a2        	movi	a10, 0x200
200021c6:	c0aab0        	sub	a10, a10, a11
200021c9:	a0ca84        	insbits	a8, a10, 12, 20
200021cc:	8e89      	s32i.n	a8, a14, 32
200021ce:	ffa386        	j	20002060 <L3_AllocResource+0x160>

200021d1 <L3_AllocResource+0x2d1>:
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:363
    pHsgEntry->ulHostAddrLow = tWordOut.LowDw;
    pHsgEntry->bsNextHsgId = usNextHsgId;

    if(INVALID_4F == usNextHsgId)
    {
        pHsgEntry->bsLast = TRUE;
200021d1:	00a482        	movi	a8, 0x400
200021d4:	208980        	or	a8, a9, a8
200021d7:	0789      	s32i.n	a8, a7, 0
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:370
    else
    {
        pHsgEntry->bsLast = FALSE;
    }

    if(ulHostReqRemainLen > ulRemLenInEntry)
200021d9:	873637        	bltu	a6, a3, 20002164 <L3_AllocResource+0x264>
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:379
        pHmemDptr->bsPrdOrPrpIndex++;
    }
    else
    {
        pHsgEntry->bsLength = ulHostReqRemainLen;    
        pHmemDptr->bsOffset += ulHostReqRemainLen;
200021dc:	f98191        	l32r	a9, 200007e0 <_stext+0xe0>
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:378
        pHmemDptr->bsOffset = 0;
        pHmemDptr->bsPrdOrPrpIndex++;
    }
    else
    {
        pHsgEntry->bsLength = ulHostReqRemainLen;    
200021df:	e3e384        	insbits	a8, a3, 14, 31
200021e2:	0789      	s32i.n	a8, a7, 0
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:379
        pHmemDptr->bsOffset += ulHostReqRemainLen;
200021e4:	9e68      	l32i.n	a6, a14, 36
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:381
#ifdef HOST_NVME
        if(pHmemDptr->bsOffset >= HPAGE_SIZE)
200021e6:	8e88      	l32i.n	a8, a14, 32
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:379
        pHmemDptr->bsPrdOrPrpIndex++;
    }
    else
    {
        pHsgEntry->bsLength = ulHostReqRemainLen;    
        pHmemDptr->bsOffset += ulHostReqRemainLen;
200021e8:	10a690        	and	a10, a6, a9
200021eb:	a3aa      	add.n	a10, a3, a10
200021ed:	a10a64        	insbits	a6, a10, 0, 21
200021f0:	9e69      	s32i.n	a6, a14, 36
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:381
#ifdef HOST_NVME
        if(pHmemDptr->bsOffset >= HPAGE_SIZE)
200021f2:	f980a1        	l32r	a10, 200007f4 <_stext+0xf4>
200021f5:	109690        	and	a9, a6, a9
200021f8:	85aa97        	bge	a10, a9, 20002181 <L3_AllocResource+0x281>
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:383
        {
            pHmemDptr->bsOffset -= HPAGE_SIZE;
200021fb:	f0d922        	addmi	a2, a9, 0xfffff000
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:384
            pHmemDptr->bsPrdOrPrpIndex++;
200021fe:	54b680        	extui	a11, a8, 6, 6
20002201:	bb1b      	addi.n	a11, a11, 1
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:383
        pHsgEntry->bsLength = ulHostReqRemainLen;    
        pHmemDptr->bsOffset += ulHostReqRemainLen;
#ifdef HOST_NVME
        if(pHmemDptr->bsOffset >= HPAGE_SIZE)
        {
            pHmemDptr->bsOffset -= HPAGE_SIZE;
20002203:	a10264        	insbits	a6, a2, 0, 21
20002206:	9e69      	s32i.n	a6, a14, 36
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:384
            pHmemDptr->bsPrdOrPrpIndex++;
20002208:	436b84        	insbits	a8, a11, 6, 11
2000220b:	8e89      	s32i.n	a8, a14, 32
2000220d:	ffdc06        	j	20002181 <L3_AllocResource+0x281>

20002210 <L3_AllocResource+0x310>:
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
    20141028    Gavin   change attribute to "INLINE"
------------------------------------------------------------------------------*/
INLINE U32 HAL_GetMcuId(void)
{
    U32 ulMcuId;
    ulMcuId = XT_RSR_PRID();
20002210:	03ebd0        	rsr.prid	a13
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:149
#ifndef SIM
    U32 ulMcuID;
    U32 ulLockValue;
        
    ulMcuID = HAL_GetMcuId();
    if ((MCU0_ID == ulMcuID) || (MCU1_ID == ulMcuID) || (MCU2_ID == ulMcuID))
20002213:	051d26        	beqi	a13, 1, 2000221c <L3_AllocResource+0x31c>
20002216:	022d26        	beqi	a13, 2, 2000221c <L3_AllocResource+0x31c>
20002219:	083d66        	bnei	a13, 3, 20002225 <L3_AllocResource+0x325>
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:151
    {
        *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4) = ulMcuID;
2000221c:	0020c0        	memw
2000221f:	ce6cd2        	s32i	a13, a12, 0x338
20002222:	000206        	j	2000222e <L3_AllocResource+0x32e>

20002225 <L3_AllocResource+0x325>:
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:155
    }
    else
    {
        DBG_Getch();
20002225:	f93c01        	l32r	a0, 20000718 <_stext+0x18>
20002228:	0000c0        	callx0	a0
2000222b:	f94a01        	l32r	a0, 20000754 <_stext+0x54>
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:158
    }

    ulLockValue = *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4);
2000222e:	0020c0        	memw
20002231:	ce2c32        	l32i	a3, a12, 0x338
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:187
{
    BOOL bSts = FALSE;
    do
    {
        bSts = HAL_MultiCoreGetSpinLock(ucLockId);
    }while (FALSE == bSts);
20002234:	d89d37        	bne	a13, a3, 20002210 <L3_AllocResource+0x310>
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:164
    201409011    Tobey   uniform coding style
------------------------------------------------------------------------------*/
BOOL HAL_GetCurHsg(U16 *pHsgId)
{
    BOOL bStsFlag;
    if (TRUE == l_pHsgReport->bsHsgValidEn)
20002237:	f93931        	l32r	a3, 2000071c <_stext+0x1c>
2000223a:	752332        	l32i	a3, a3, 0x1d4
2000223d:	0020c0        	memw
20002240:	0348      	l32i.n	a4, a3, 0
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:172
        bStsFlag = TRUE;
    }
    else
    {
        *pHsgId = INVALID_4F;
        bStsFlag = FALSE;
20002242:	050c      	movi.n	a5, 0
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:164
    201409011    Tobey   uniform coding style
------------------------------------------------------------------------------*/
BOOL HAL_GetCurHsg(U16 *pHsgId)
{
    BOOL bStsFlag;
    if (TRUE == l_pHsgReport->bsHsgValidEn)
20002244:	1574f7        	bbci	a4, 31, 2000225d <L3_AllocResource+0x35d>
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:166
    {
        *pHsgId = l_pHsgReport->bsHsgId;
20002247:	0020c0        	memw
2000224a:	f96b21        	l32r	a2, 200007f8 <_stext+0xf8>
2000224d:	03d8      	l32i.n	a13, a3, 0
2000224f:	150c      	movi.n	a5, 1
20002251:	10dd20        	and	a13, a13, a2
20002254:	a5d5d0        	extui	a13, a13, 21, 11
20002257:	0351d2        	s16i	a13, a1, 6
2000225a:	000146        	j	20002263 <L3_AllocResource+0x363>

2000225d <L3_AllocResource+0x35d>:
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:171
        bStsFlag = TRUE;
    }
    else
    {
        *pHsgId = INVALID_4F;
2000225d:	f93dd1        	l32r	a13, 20000754 <_stext+0x54>
20002260:	0351d2        	s16i	a13, a1, 6
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:198
void HAL_TriggerHsg(void)
{
#ifdef SIM
    HSG_AllocateHsg(l_ulMcuID);
#else
    l_pHsgReport->bsHsgTrigger = TRUE;
20002263:	0020c0        	memw
20002266:	f93761        	l32r	a6, 20000744 <_stext+0x44>
20002269:	0348      	l32i.n	a4, a3, 0
2000226b:	104460        	and	a4, a4, a6
2000226e:	f94d61        	l32r	a6, 200007a4 <_stext+0xa4>
20002271:	204460        	or	a4, a4, a6
20002274:	0020c0        	memw
20002277:	0349      	s32i.n	a4, a3, 0
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
History:
    20140917    Tobey  uniform coding style
------------------------------------------------------------------------------*/
void MULTI_CORE_TEXT_ATTR HAL_MultiCoreReleaseSpinLock(U8 ucLockId)
{
    *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4) = 0;
20002279:	0020c0        	memw
2000227c:	070c      	movi.n	a7, 0
2000227e:	ce6c72        	s32i	a7, a12, 0x338
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:136
    {
        if (FALSE == HAL_CheckForLastHsg(ptHmemDptr, ptHsgCtrl->bsRemSecLen))
        {
            if (FALSE == HAL_GetHsg(&usNextHsgId))
            {
                break;
20002281:	167516        	beqz	a5, 200023ec <L3_AllocResource+0x4ec>
20002284:	f95861        	l32r	a6, 200007e4 <_stext+0xe4>
20002287:	f956a1        	l32r	a10, 200007e0 <_stext+0xe0>
2000228a:	9e98      	l32i.n	a9, a14, 36
2000228c:	3f38      	l32i.n	a3, a15, 12
2000228e:	f95141        	l32r	a4, 200007d4 <_stext+0xd4>
20002291:	413530        	srli	a3, a3, 5
20002294:	103340        	and	a3, a3, a4
20002297:	1099a0        	and	a9, a9, a10
2000229a:	c06690        	sub	a6, a6, a9
2000229d:	ff92c6        	j	200020ec <L3_AllocResource+0x1ec>

200022a0 <L3_AllocResource+0x3a0>:
200022a0:	6199      	s32i.n	a9, a1, 24
200022a2:	5189      	s32i.n	a8, a1, 20
200022a4:	106162        	s32i	a6, a1, 64
200022a7:	136132        	s32i	a3, a1, 76
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:223
------------------------------------------------------------------------------*/
U32 HAL_GetHsgAddr(U16 usHsgId)
{
    if (usHsgId >= HSG_NUM)
    {
        DBG_Getch();
200022aa:	f91b01        	l32r	a0, 20000718 <_stext+0x18>
200022ad:	0000c0        	callx0	a0
200022b0:	132132        	l32i	a3, a1, 76
200022b3:	102162        	l32i	a6, a1, 64
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:359
    ulHsgAddr = HAL_GetHsgAddr(usCurHsgId);
    pHsgEntry = (HSG_ENTRY *)ulHsgAddr;

    pHsgEntry->ulHostAddrHigh = tWordOut.HighDw;
    pHsgEntry->ulHostAddrLow = tWordOut.LowDw;
    pHsgEntry->bsNextHsgId = usNextHsgId;
200022b6:	9188      	l32i.n	a8, a1, 36
200022b8:	00ac92        	movi	a9, 0xfffffc00
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:358
    //fill HSG
    ulHsgAddr = HAL_GetHsgAddr(usCurHsgId);
    pHsgEntry = (HSG_ENTRY *)ulHsgAddr;

    pHsgEntry->ulHostAddrHigh = tWordOut.HighDw;
    pHsgEntry->ulHostAddrLow = tWordOut.LowDw;
200022bb:	6108      	l32i.n	a0, a1, 24
200022bd:	070c      	movi.n	a7, 0
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:357

    //fill HSG
    ulHsgAddr = HAL_GetHsgAddr(usCurHsgId);
    pHsgEntry = (HSG_ENTRY *)ulHsgAddr;

    pHsgEntry->ulHostAddrHigh = tWordOut.HighDw;
200022bf:	f158      	l32i.n	a5, a1, 60
200022c1:	074752        	s8i	a5, a7, 7
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:358
    pHsgEntry->ulHostAddrLow = tWordOut.LowDw;
200022c4:	034702        	s8i	a0, a7, 3
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:357

    //fill HSG
    ulHsgAddr = HAL_GetHsgAddr(usCurHsgId);
    pHsgEntry = (HSG_ENTRY *)ulHsgAddr;

    pHsgEntry->ulHostAddrHigh = tWordOut.HighDw;
200022c7:	41b850        	srli	a11, a5, 8
200022ca:	0847b2        	s8i	a11, a7, 8
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:358
    pHsgEntry->ulHostAddrLow = tWordOut.LowDw;
200022cd:	410800        	srli	a0, a0, 8
200022d0:	044702        	s8i	a0, a7, 4
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:357

    //fill HSG
    ulHsgAddr = HAL_GetHsgAddr(usCurHsgId);
    pHsgEntry = (HSG_ENTRY *)ulHsgAddr;

    pHsgEntry->ulHostAddrHigh = tWordOut.HighDw;
200022d3:	41b8b0        	srli	a11, a11, 8
200022d6:	0947b2        	s8i	a11, a7, 9
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:358
    pHsgEntry->ulHostAddrLow = tWordOut.LowDw;
200022d9:	410800        	srli	a0, a0, 8
200022dc:	054702        	s8i	a0, a7, 5
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:357

    //fill HSG
    ulHsgAddr = HAL_GetHsgAddr(usCurHsgId);
    pHsgEntry = (HSG_ENTRY *)ulHsgAddr;

    pHsgEntry->ulHostAddrHigh = tWordOut.HighDw;
200022df:	41b8b0        	srli	a11, a11, 8
200022e2:	0a47b2        	s8i	a11, a7, 10
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:358
    pHsgEntry->ulHostAddrLow = tWordOut.LowDw;
200022e5:	410800        	srli	a0, a0, 8
200022e8:	064702        	s8i	a0, a7, 6
200022eb:	fb7c      	movi.n	a11, -1
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:359
    pHsgEntry->bsNextHsgId = usNextHsgId;
200022ed:	030ba2        	l8ui	a10, a11, 3
200022f0:	020b02        	l8ui	a0, a11, 2
200022f3:	11aa80        	slli	a10, a10, 8
200022f6:	20aa00        	or	a10, a10, a0
200022f9:	11aa80        	slli	a10, a10, 8
200022fc:	010b02        	l8ui	a0, a11, 1
200022ff:	000bb2        	l8ui	a11, a11, 0
20002302:	20aa00        	or	a10, a10, a0
20002305:	11aa80        	slli	a10, a10, 8
20002308:	f07c      	movi.n	a0, -1
2000230a:	20aab0        	or	a10, a10, a11
2000230d:	51b8      	l32i.n	a11, a1, 20
2000230f:	10aa90        	and	a10, a10, a9
20002312:	2088a0        	or	a8, a8, a10
20002315:	004082        	s8i	a8, a0, 0
20002318:	414880        	srli	a4, a8, 8
2000231b:	412840        	srli	a2, a4, 8
2000231e:	014042        	s8i	a4, a0, 1
20002321:	024022        	s8i	a2, a0, 2
20002324:	412820        	srli	a2, a2, 8
20002327:	034022        	s8i	a2, a0, 3
2000232a:	f90a01        	l32r	a0, 20000754 <_stext+0x54>
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:223
2000232d:	f77c      	movi.n	a7, -1
2000232f:	c0bb00        	sub	a11, a11, a0
20002332:	0e3b16        	beqz	a11, 20002419 <L3_AllocResource+0x519>
20002335:	f27c      	movi.n	a2, -1
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:367
    {
        pHsgEntry->bsLast = TRUE;
    }
    else
    {
        pHsgEntry->bsLast = FALSE;
20002337:	ffab52        	movi	a5, 0xfffffbff
2000233a:	108850        	and	a8, a8, a5
2000233d:	414880        	srli	a4, a8, 8
20002340:	014242        	s8i	a4, a2, 1
20002343:	004282        	s8i	a8, a2, 0
20002346:	414840        	srli	a4, a4, 8
20002349:	024242        	s8i	a4, a2, 2
2000234c:	414840        	srli	a4, a4, 8
2000234f:	034242        	s8i	a4, a2, 3
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:370
    }

    if(ulHostReqRemainLen > ulRemLenInEntry)
20002352:	023637        	bltu	a6, a3, 20002358 <L3_AllocResource+0x458>
20002355:	0038c6        	j	2000243c <L3_AllocResource+0x53c>
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:373
    {
        pHsgEntry->bsLength = ulRemLenInEntry;  
        pHmemDptr->bsOffset = 0;
20002358:	f926b1        	l32r	a11, 200007f0 <_stext+0xf0>
2000235b:	f47c      	movi.n	a4, -1
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:372
        pHsgEntry->bsLast = FALSE;
    }

    if(ulHostReqRemainLen > ulRemLenInEntry)
    {
        pHsgEntry->bsLength = ulRemLenInEntry;  
2000235d:	e3e684        	insbits	a8, a6, 14, 31
20002360:	412880        	srli	a2, a8, 8
20002363:	014422        	s8i	a2, a4, 1
20002366:	004482        	s8i	a8, a4, 0
20002369:	412820        	srli	a2, a2, 8
2000236c:	024422        	s8i	a2, a4, 2
2000236f:	412820        	srli	a2, a2, 8
20002372:	034422        	s8i	a2, a4, 3
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:374
        pHmemDptr->bsOffset = 0;
        pHmemDptr->bsPrdOrPrpIndex++;
20002375:	8e88      	l32i.n	a8, a14, 32
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:373
    }

    if(ulHostReqRemainLen > ulRemLenInEntry)
    {
        pHsgEntry->bsLength = ulRemLenInEntry;  
        pHmemDptr->bsOffset = 0;
20002377:	9ea8      	l32i.n	a10, a14, 36
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:374
        pHmemDptr->bsPrdOrPrpIndex++;
20002379:	549680        	extui	a9, a8, 6, 6
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:373
    }

    if(ulHostReqRemainLen > ulRemLenInEntry)
    {
        pHsgEntry->bsLength = ulRemLenInEntry;  
        pHmemDptr->bsOffset = 0;
2000237c:	10aab0        	and	a10, a10, a11
2000237f:	9ea9      	s32i.n	a10, a14, 36
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:374
        pHmemDptr->bsPrdOrPrpIndex++;
20002381:	991b      	addi.n	a9, a9, 1
20002383:	436984        	insbits	a8, a9, 6, 11
20002386:	8e89      	s32i.n	a8, a14, 32
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:394
    //return remain length
    ulHostReqRemainLen -= pHsgEntry->bsLength;
    *pByteLen = ulHostReqRemainLen;

    //update pHmemDptr
    if(0 != pHmemDptr->bsLastSecRemain)
20002388:	846c80        	extui	a6, a8, 12, 9
2000238b:	fa7c      	movi.n	a10, -1
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:390
        }
#endif
    }

    //return remain length
    ulHostReqRemainLen -= pHsgEntry->bsLength;
2000238d:	030a92        	l8ui	a9, a10, 3
20002390:	020ab2        	l8ui	a11, a10, 2
20002393:	119980        	slli	a9, a9, 8
20002396:	2099b0        	or	a9, a9, a11
20002399:	119980        	slli	a9, a9, 8
2000239c:	010ab2        	l8ui	a11, a10, 1
2000239f:	000aa2        	l8ui	a10, a10, 0
200023a2:	2099b0        	or	a9, a9, a11
200023a5:	119980        	slli	a9, a9, 8
200023a8:	2099a0        	or	a9, a9, a10
200023ab:	419e90        	srli	a9, a9, 14
200023ae:	c03390        	sub	a3, a3, a9
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:394
    *pByteLen = ulHostReqRemainLen;

    //update pHmemDptr
    if(0 != pHmemDptr->bsLastSecRemain)
200023b1:	c8b616        	beqz	a6, 20002040 <L3_AllocResource+0x140>
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:396
    {
        if( ( pHsgEntry->bsLength - pHmemDptr->bsLastSecRemain) > 0)
200023b4:	c0a960        	sub	a10, a9, a6
200023b7:	021aa6        	blti	a10, 1, 200023bd <L3_AllocResource+0x4bd>
200023ba:	ff7686        	j	20002198 <L3_AllocResource+0x298>
200023bd:	ff2206        	j	20002049 <L3_AllocResource+0x149>

200023c0 <L3_AllocResource+0x4c0>:
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:162
            ptHsgCtrl->bsSecAddrIndex = 1;
            ptHsgCtrl->bsDmaTotalLen = ptReqEntry->tFlashDesc.bsSecLen;

            ptHsgCtrl->bsBdEngineDone = TRUE;

            if (FALSE == bIsSGQIdle)
200023c0:	81b8      	l32i.n	a11, a1, 32
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:157
        }
        else
        {
            ptHsgCtrl->aSecAddr[0].bsSecStart = ptReqEntry->tFlashDesc.bsSecStart;
            ptHsgCtrl->aSecAddr[0].bsSecLength= ptReqEntry->tFlashDesc.bsSecLen;
            ptHsgCtrl->bsSecAddrIndex = 1;
200023c2:	107c      	movi.n	a0, -15
200023c4:	6fd8      	l32i.n	a13, a15, 24
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:155
        {
            ptHsgCtrl->bsCurEngineID = usNextHsgId;
        }
        else
        {
            ptHsgCtrl->aSecAddr[0].bsSecStart = ptReqEntry->tFlashDesc.bsSecStart;
200023c6:	100e32        	l8ui	a3, a14, 16
200023c9:	1d4f32        	s8i	a3, a15, 29
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:157
            ptHsgCtrl->aSecAddr[0].bsSecLength= ptReqEntry->tFlashDesc.bsSecLen;
            ptHsgCtrl->bsSecAddrIndex = 1;
200023cc:	10dd00        	and	a13, a13, a0
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:156
            ptHsgCtrl->bsCurEngineID = usNextHsgId;
        }
        else
        {
            ptHsgCtrl->aSecAddr[0].bsSecStart = ptReqEntry->tFlashDesc.bsSecStart;
            ptHsgCtrl->aSecAddr[0].bsSecLength= ptReqEntry->tFlashDesc.bsSecLen;
200023cf:	110e22        	l8ui	a2, a14, 17
200023d2:	1c4f22        	s8i	a2, a15, 28
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:157
            ptHsgCtrl->bsSecAddrIndex = 1;
200023d5:	200c      	movi.n	a0, 2
200023d7:	20dd00        	or	a13, a13, a0
200023da:	6fd9      	s32i.n	a13, a15, 24
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:158
            ptHsgCtrl->bsDmaTotalLen = ptReqEntry->tFlashDesc.bsSecLen;
200023dc:	110e22        	l8ui	a2, a14, 17
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:160

            ptHsgCtrl->bsBdEngineDone = TRUE;
200023df:	100c      	movi.n	a0, 1
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:158
        else
        {
            ptHsgCtrl->aSecAddr[0].bsSecStart = ptReqEntry->tFlashDesc.bsSecStart;
            ptHsgCtrl->aSecAddr[0].bsSecLength= ptReqEntry->tFlashDesc.bsSecLen;
            ptHsgCtrl->bsSecAddrIndex = 1;
            ptHsgCtrl->bsDmaTotalLen = ptReqEntry->tFlashDesc.bsSecLen;
200023e1:	6042d4        	insbits	a13, a2, 4, 12
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:160

            ptHsgCtrl->bsBdEngineDone = TRUE;
200023e4:	20dd00        	or	a13, a13, a0
200023e7:	6fd9      	s32i.n	a13, a15, 24
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:162

            if (FALSE == bIsSGQIdle)
200023e9:	3fbb16        	beqz	a11, 200027e8 <L3_AllocResource+0x8e8>
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:130
        ptHsgCtrl->bsPrdOrPrpIdx = ptHmemDptr->bsPrdOrPrpIndex;
        ptHsgCtrl->bsLstSecRemain = ptHmemDptr->bsLastSecRemain;
        ptHsgCtrl->bsOffSet = ptHmemDptr->bsOffset;
    }
    
    while (0 < ptHsgCtrl->bsRemSecLen)
200023ec:	8148      	l32i.n	a4, a1, 32
200023ee:	020c      	movi.n	a2, 0
200023f0:	449c      	beqz.n	a4, 20002408 <L3_AllocResource+0x508>
200023f2:	6f58      	l32i.n	a5, a15, 24
200023f4:	106507        	bbci	a5, 0, 20002408 <L3_AllocResource+0x508>
200023f7:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:200
    else
    {
        bResult = L3_IFAllocDSG(ptCtrlEntry);
    }
  
    return bResult;
200023f9:	b1c8      	l32i.n	a12, a1, 44
200023fb:	c1d8      	l32i.n	a13, a1, 48
200023fd:	d1e8      	l32i.n	a14, a1, 52
200023ff:	e1f8      	l32i.n	a15, a1, 56
20002401:	a108      	l32i.n	a0, a1, 40
20002403:	60c112        	addi	a1, a1, 96
20002406:	f00d      	ret.n

20002408 <L3_AllocResource+0x508>:
20002408:	b1c8      	l32i.n	a12, a1, 44
2000240a:	c1d8      	l32i.n	a13, a1, 48
2000240c:	d1e8      	l32i.n	a14, a1, 52
2000240e:	e1f8      	l32i.n	a15, a1, 56
20002410:	a108      	l32i.n	a0, a1, 40
20002412:	60c112        	addi	a1, a1, 96
20002415:	f00d      	ret.n

20002417 <L3_AllocResource+0x517>:
	...

20002419 <L3_AllocResource+0x519>:
20002419:	f97c      	movi.n	a9, -1
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:363
    pHsgEntry->ulHostAddrLow = tWordOut.LowDw;
    pHsgEntry->bsNextHsgId = usNextHsgId;

    if(INVALID_4F == usNextHsgId)
    {
        pHsgEntry->bsLast = TRUE;
2000241b:	00a4b2        	movi	a11, 0x400
2000241e:	2088b0        	or	a8, a8, a11
20002421:	41a880        	srli	a10, a8, 8
20002424:	0149a2        	s8i	a10, a9, 1
20002427:	004982        	s8i	a8, a9, 0
2000242a:	41a8a0        	srli	a10, a10, 8
2000242d:	0249a2        	s8i	a10, a9, 2
20002430:	41a8a0        	srli	a10, a10, 8
20002433:	0349a2        	s8i	a10, a9, 3
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:370
    else
    {
        pHsgEntry->bsLast = FALSE;
    }

    if(ulHostReqRemainLen > ulRemLenInEntry)
20002436:	02b637        	bgeu	a6, a3, 2000243c <L3_AllocResource+0x53c>
20002439:	ffc6c6        	j	20002358 <L3_AllocResource+0x458>
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:379
        pHmemDptr->bsPrdOrPrpIndex++;
    }
    else
    {
        pHsgEntry->bsLength = ulHostReqRemainLen;    
        pHmemDptr->bsOffset += ulHostReqRemainLen;
2000243c:	f8e991        	l32r	a9, 200007e0 <_stext+0xe0>
2000243f:	f27c      	movi.n	a2, -1
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:378
        pHmemDptr->bsOffset = 0;
        pHmemDptr->bsPrdOrPrpIndex++;
    }
    else
    {
        pHsgEntry->bsLength = ulHostReqRemainLen;    
20002441:	e3e384        	insbits	a8, a3, 14, 31
20002444:	41b880        	srli	a11, a8, 8
20002447:	0142b2        	s8i	a11, a2, 1
2000244a:	004282        	s8i	a8, a2, 0
2000244d:	41b8b0        	srli	a11, a11, 8
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:381
        pHmemDptr->bsOffset += ulHostReqRemainLen;
#ifdef HOST_NVME
        if(pHmemDptr->bsOffset >= HPAGE_SIZE)
20002450:	8e88      	l32i.n	a8, a14, 32
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:378
        pHmemDptr->bsOffset = 0;
        pHmemDptr->bsPrdOrPrpIndex++;
    }
    else
    {
        pHsgEntry->bsLength = ulHostReqRemainLen;    
20002452:	0242b2        	s8i	a11, a2, 2
20002455:	41b8b0        	srli	a11, a11, 8
20002458:	0342b2        	s8i	a11, a2, 3
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:379
        pHmemDptr->bsOffset += ulHostReqRemainLen;
2000245b:	9e68      	l32i.n	a6, a14, 36
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:381
#ifdef HOST_NVME
        if(pHmemDptr->bsOffset >= HPAGE_SIZE)
2000245d:	f8e521        	l32r	a2, 200007f4 <_stext+0xf4>
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:379
        pHmemDptr->bsPrdOrPrpIndex++;
    }
    else
    {
        pHsgEntry->bsLength = ulHostReqRemainLen;    
        pHmemDptr->bsOffset += ulHostReqRemainLen;
20002460:	10a690        	and	a10, a6, a9
20002463:	a3aa      	add.n	a10, a3, a10
20002465:	a10a64        	insbits	a6, a10, 0, 21
20002468:	9e69      	s32i.n	a6, a14, 36
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:381
#ifdef HOST_NVME
        if(pHmemDptr->bsOffset >= HPAGE_SIZE)
2000246a:	109690        	and	a9, a6, a9
2000246d:	022297        	blt	a2, a9, 20002473 <L3_AllocResource+0x573>
20002470:	ffc506        	j	20002388 <L3_AllocResource+0x488>
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:383
        {
            pHmemDptr->bsOffset -= HPAGE_SIZE;
20002473:	f0d942        	addmi	a4, a9, 0xfffff000
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:384
            pHmemDptr->bsPrdOrPrpIndex++;
20002476:	542680        	extui	a2, a8, 6, 6
20002479:	221b      	addi.n	a2, a2, 1
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:383
        pHsgEntry->bsLength = ulHostReqRemainLen;    
        pHmemDptr->bsOffset += ulHostReqRemainLen;
#ifdef HOST_NVME
        if(pHmemDptr->bsOffset >= HPAGE_SIZE)
        {
            pHmemDptr->bsOffset -= HPAGE_SIZE;
2000247b:	a10464        	insbits	a6, a4, 0, 21
2000247e:	9e69      	s32i.n	a6, a14, 36
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:384
            pHmemDptr->bsPrdOrPrpIndex++;
20002480:	436284        	insbits	a8, a2, 6, 11
20002483:	8e89      	s32i.n	a8, a14, 32
20002485:	ffbfc6        	j	20002388 <L3_AllocResource+0x488>

20002488 <L3_AllocResource+0x588>:
20002488:	055620        	extui	a5, a2, 22, 1
2000248b:	add556        	bnez	a5, 20001f6c <L3_AllocResource+0x6c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:333

    if (((FCMD_REQ_TYPE_READ == ptReqEntry->bsReqType)
      && (FALSE == ptReqEntry->tFlashDesc.bsRdRedOnly))
     || (FCMD_REQ_TYPE_WRITE == ptReqEntry->bsReqType))
    {        
        if (TRUE == ptDsgCtrl->bsBdEngineDone)
2000248e:	6f68      	l32i.n	a6, a15, 24
20002490:	206607        	bbci	a6, 0, 200024b4 <L3_AllocResource+0x5b4>
20002493:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:200
20002495:	b1c8      	l32i.n	a12, a1, 44
20002497:	c1d8      	l32i.n	a13, a1, 48
20002499:	d1e8      	l32i.n	a14, a1, 52
2000249b:	e1f8      	l32i.n	a15, a1, 56
2000249d:	a108      	l32i.n	a0, a1, 40
2000249f:	60c112        	addi	a1, a1, 96
200024a2:	f00d      	ret.n

200024a4 <L3_AllocResource+0x5a4>:
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:446
200024a4:	f8d621        	l32r	a2, 200007fc <_stext+0xfc>
200024a7:	073d      	mov.n	a3, a7
200024a9:	087b85        	call0	2000ac64 <dbg_printf>
200024ac:	f8aa01        	l32r	a0, 20000754 <_stext+0x54>
200024af:	030c      	movi.n	a3, 0
200024b1:	fed346        	j	20002002 <L3_AllocResource+0x102>

200024b4 <L3_AllocResource+0x5b4>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:338
        {
            return TRUE;
        }
        
        ptDsgCtrl->bsDSGEn = TRUE;
200024b4:	190c      	movi.n	a9, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:359
        ptDsgCtrl->bsDSGEn = FALSE;

        return TRUE;
    }

    if (INVALID_4F == ptDsgCtrl->bsFstEngineID)
200024b6:	0a1f72        	l16ui	a7, a15, 20
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:338
        if (TRUE == ptDsgCtrl->bsBdEngineDone)
        {
            return TRUE;
        }
        
        ptDsgCtrl->bsDSGEn = TRUE;
200024b9:	3f88      	l32i.n	a8, a15, 12
200024bb:	c07700        	sub	a7, a7, a0
200024be:	208890        	or	a8, a8, a9
200024c1:	3f89      	s32i.n	a8, a15, 12
200024c3:	535716        	beqz	a7, 200029fc <L3_AllocResource+0xafc>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:366
        if (FALSE == HAL_GetNormalDsg(&usCurDsgId))
        {
            return FALSE;
        }
        ptDsgCtrl->bsFstEngineID = usCurDsgId;
        ptDsgCtrl->bsCurEngineID = usCurDsgId;
200024c6:	0a1c      	movi.n	a10, 16
200024c8:	e90c      	movi.n	a9, 14
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:369
    }

    if (TRUE == ptReqEntry->tFlashDesc.bsMergeRdEn)
200024ca:	4eb8      	l32i.n	a11, a14, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:366
        if (FALSE == HAL_GetNormalDsg(&usCurDsgId))
        {
            return FALSE;
        }
        ptDsgCtrl->bsFstEngineID = usCurDsgId;
        ptDsgCtrl->bsCurEngineID = usCurDsgId;
200024cc:	f89281        	l32r	a8, 20000714 <_stext+0x14>
200024cf:	05b7b0        	extui	a11, a11, 23, 1
200024d2:	0e7b16        	beqz	a11, 200025bd <L3_AllocResource+0x6bd>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:371
    }

    if (TRUE == ptReqEntry->tFlashDesc.bsMergeRdEn)
    {
        while (TRUE != ptDsgCtrl->bsBdEngineDone)
200024d5:	6f38      	l32i.n	a3, a15, 24
200024d7:	042030        	extui	a2, a3, 0, 1
200024da:	04c030        	extui	a12, a3, 0, 1
200024dd:	28bc56        	bnez	a12, 2000276c <L3_AllocResource+0x86c>
200024e0:	007486        	j	200026b6 <L3_AllocResource+0x7b6>

200024e3 <L3_AllocResource+0x5e3>:
	...

200024e4 <L3_AllocResource+0x5e4>:
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:102
------------------------------------------------------------------------------*/
BOOL HAL_GetHsg(U16 *pHsgId)
{
    BOOL bStsFlag;

    if (0 != (rGlbOTFBMCtrl0 & (1 << 18)))
200024e4:	0020c0        	memw
200024e7:	8a2c32        	l32i	a3, a12, 0x228
200024ea:	053230        	extui	a3, a3, 18, 1
200024ed:	340356        	bnez	a3, 20002831 <L3_AllocResource+0x931>
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
200024f0:	03ebd0        	rsr.prid	a13
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:149
#ifndef SIM
    U32 ulMcuID;
    U32 ulLockValue;
        
    ulMcuID = HAL_GetMcuId();
    if ((MCU0_ID == ulMcuID) || (MCU1_ID == ulMcuID) || (MCU2_ID == ulMcuID))
200024f3:	051d26        	beqi	a13, 1, 200024fc <L3_AllocResource+0x5fc>
200024f6:	022d26        	beqi	a13, 2, 200024fc <L3_AllocResource+0x5fc>
200024f9:	083d66        	bnei	a13, 3, 20002505 <L3_AllocResource+0x605>
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:151
    {
        *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4) = ulMcuID;
200024fc:	0020c0        	memw
200024ff:	ce6cd2        	s32i	a13, a12, 0x338
20002502:	000206        	j	2000250e <L3_AllocResource+0x60e>

20002505 <L3_AllocResource+0x605>:
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:155
    }
    else
    {
        DBG_Getch();
20002505:	f88401        	l32r	a0, 20000718 <_stext+0x18>
20002508:	0000c0        	callx0	a0
2000250b:	f89201        	l32r	a0, 20000754 <_stext+0x54>
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:158
    }

    ulLockValue = *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4);
2000250e:	0020c0        	memw
20002511:	ce2c42        	l32i	a4, a12, 0x338
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:187
{
    BOOL bSts = FALSE;
    do
    {
        bSts = HAL_MultiCoreGetSpinLock(ucLockId);
    }while (FALSE == bSts);
20002514:	d89d47        	bne	a13, a4, 200024f0 <L3_AllocResource+0x5f0>
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:164
    201409011    Tobey   uniform coding style
------------------------------------------------------------------------------*/
BOOL HAL_GetCurHsg(U16 *pHsgId)
{
    BOOL bStsFlag;
    if (TRUE == l_pHsgReport->bsHsgValidEn)
20002517:	f88131        	l32r	a3, 2000071c <_stext+0x1c>
2000251a:	752332        	l32i	a3, a3, 0x1d4
2000251d:	0020c0        	memw
20002520:	0358      	l32i.n	a5, a3, 0
20002522:	1675f7        	bbci	a5, 31, 2000253c <L3_AllocResource+0x63c>
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:166
    {
        *pHsgId = l_pHsgReport->bsHsgId;
20002525:	0020c0        	memw
20002528:	f8b471        	l32r	a7, 200007f8 <_stext+0xf8>
2000252b:	0368      	l32i.n	a6, a3, 0
2000252d:	150c      	movi.n	a5, 1
2000252f:	106670        	and	a6, a6, a7
20002532:	a56560        	extui	a6, a6, 21, 11
20002535:	025162        	s16i	a6, a1, 4
20002538:	000206        	j	20002544 <L3_AllocResource+0x644>

2000253b <L3_AllocResource+0x63b>:
	...

2000253c <L3_AllocResource+0x63c>:
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:172
        bStsFlag = TRUE;
    }
    else
    {
        *pHsgId = INVALID_4F;
        bStsFlag = FALSE;
2000253c:	050c      	movi.n	a5, 0
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:171
        *pHsgId = l_pHsgReport->bsHsgId;
        bStsFlag = TRUE;
    }
    else
    {
        *pHsgId = INVALID_4F;
2000253e:	f88561        	l32r	a6, 20000754 <_stext+0x54>
20002541:	025162        	s16i	a6, a1, 4
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:198
void HAL_TriggerHsg(void)
{
#ifdef SIM
    HSG_AllocateHsg(l_ulMcuID);
#else
    l_pHsgReport->bsHsgTrigger = TRUE;
20002544:	0020c0        	memw
20002547:	f87fa1        	l32r	a10, 20000744 <_stext+0x44>
2000254a:	0398      	l32i.n	a9, a3, 0
2000254c:	1099a0        	and	a9, a9, a10
2000254f:	f895a1        	l32r	a10, 200007a4 <_stext+0xa4>
20002552:	2099a0        	or	a9, a9, a10
20002555:	0020c0        	memw
20002558:	0399      	s32i.n	a9, a3, 0
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
History:
    20140917    Tobey  uniform coding style
------------------------------------------------------------------------------*/
void MULTI_CORE_TEXT_ATTR HAL_MultiCoreReleaseSpinLock(U8 ucLockId)
{
    *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4) = 0;
2000255a:	0020c0        	memw
2000255d:	080c      	movi.n	a8, 0
2000255f:	ce6c82        	s32i	a8, a12, 0x338
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:116
        return bIsSGQIdle;
    }
    
    if (INVALID_4F == ptHsgCtrl->bsFstEngineID)
    {                        
        if (FALSE == HAL_GetHsg(&usCurHsgId))
20002562:	2d3516        	beqz	a5, 20002839 <L3_AllocResource+0x939>
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:126
        ptHsgCtrl->bsFstEngineID = usCurHsgId;
        ptHsgCtrl->bsCurEngineID = usCurHsgId;

        ptHsgCtrl->bsRemSecLen = ptReqEntry->tFlashDesc.bsSecLen << SEC_SZ_BITS;
        ptHsgCtrl->bsPrdOrPrpIdx = ptHmemDptr->bsPrdOrPrpIndex;
        ptHsgCtrl->bsLstSecRemain = ptHmemDptr->bsLastSecRemain;
20002565:	00ac22        	movi	a2, 0xfffffc00
20002568:	4fb8      	l32i.n	a11, a15, 16
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:122
        {
            return FALSE;
        }

        ptHsgCtrl->bsFstEngineID = usCurHsgId;
        ptHsgCtrl->bsCurEngineID = usCurHsgId;
2000256a:	0b5f62        	s16i	a6, a15, 22
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:121
        if (FALSE == HAL_GetHsg(&usCurHsgId))
        {
            return FALSE;
        }

        ptHsgCtrl->bsFstEngineID = usCurHsgId;
2000256d:	0a5f62        	s16i	a6, a15, 20
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:124
        ptHsgCtrl->bsCurEngineID = usCurHsgId;

        ptHsgCtrl->bsRemSecLen = ptReqEntry->tFlashDesc.bsSecLen << SEC_SZ_BITS;
20002570:	110e42        	l8ui	a4, a14, 17
20002573:	3f38      	l32i.n	a3, a15, 12
20002575:	114470        	slli	a4, a4, 9
20002578:	c05434        	insbits	a3, a4, 5, 24
2000257b:	3f39      	s32i.n	a3, a15, 12
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:125
        ptHsgCtrl->bsPrdOrPrpIdx = ptHmemDptr->bsPrdOrPrpIndex;
2000257d:	8e58      	l32i.n	a5, a14, 32
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:126
        ptHsgCtrl->bsLstSecRemain = ptHmemDptr->bsLastSecRemain;
2000257f:	10bb20        	and	a11, a11, a2
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:125

        ptHsgCtrl->bsFstEngineID = usCurHsgId;
        ptHsgCtrl->bsCurEngineID = usCurHsgId;

        ptHsgCtrl->bsRemSecLen = ptReqEntry->tFlashDesc.bsSecLen << SEC_SZ_BITS;
        ptHsgCtrl->bsPrdOrPrpIdx = ptHmemDptr->bsPrdOrPrpIndex;
20002582:	415650        	srli	a5, a5, 6
20002585:	f3a534        	insbits	a3, a5, 26, 31
20002588:	3f39      	s32i.n	a3, a15, 12
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:126
        ptHsgCtrl->bsLstSecRemain = ptHmemDptr->bsLastSecRemain;
2000258a:	8e48      	l32i.n	a4, a14, 32
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:127
        ptHsgCtrl->bsOffSet = ptHmemDptr->bsOffset;
2000258c:	9e28      	l32i.n	a2, a14, 36
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:126
        ptHsgCtrl->bsFstEngineID = usCurHsgId;
        ptHsgCtrl->bsCurEngineID = usCurHsgId;

        ptHsgCtrl->bsRemSecLen = ptReqEntry->tFlashDesc.bsSecLen << SEC_SZ_BITS;
        ptHsgCtrl->bsPrdOrPrpIdx = ptHmemDptr->bsPrdOrPrpIndex;
        ptHsgCtrl->bsLstSecRemain = ptHmemDptr->bsLastSecRemain;
2000258e:	414c40        	srli	a4, a4, 12
20002591:	4004b4        	insbits	a11, a4, 0, 8
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:127
        ptHsgCtrl->bsOffSet = ptHmemDptr->bsOffset;
20002594:	e3a2b4        	insbits	a11, a2, 10, 31
20002597:	4fb9      	s32i.n	a11, a15, 16
20002599:	fea3c6        	j	2000202c <L3_AllocResource+0x12c>

2000259c <L3_AllocResource+0x69c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:354
            {
                ptDsgCtrl->bsDmaTotalLen = 0;
            }
        }
        
        ptDsgCtrl->bsDSGEn = FALSE;
2000259c:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:200
    else
    {
        bResult = L3_IFAllocDSG(ptCtrlEntry);
    }
  
    return bResult;
2000259e:	b1c8      	l32i.n	a12, a1, 44
200025a0:	c1d8      	l32i.n	a13, a1, 48
200025a2:	d1e8      	l32i.n	a14, a1, 52
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:354
200025a4:	e77c      	movi.n	a7, -2
200025a6:	3f68      	l32i.n	a6, a15, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:346
    {        
        if (TRUE == ptReqEntry->tFlashDesc.bsRdRedOnly)
        {
            if (FCMD_REQ_SUBTYPE_NORMAL == ptReqEntry->bsReqSubType)
            {
                ptDsgCtrl->bsDmaTotalLen = PLN_PER_LUN-1;
200025a8:	053c      	movi.n	a5, 48
200025aa:	205050        	or	a5, a0, a5
200025ad:	6f59      	s32i.n	a5, a15, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:354
            {
                ptDsgCtrl->bsDmaTotalLen = 0;
            }
        }
        
        ptDsgCtrl->bsDSGEn = FALSE;
200025af:	106670        	and	a6, a6, a7
200025b2:	3f69      	s32i.n	a6, a15, 12
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:200
200025b4:	a108      	l32i.n	a0, a1, 40
200025b6:	e1f8      	l32i.n	a15, a1, 56
200025b8:	60c112        	addi	a1, a1, 96
200025bb:	f00d      	ret.n

200025bd <L3_AllocResource+0x6bd>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:126

// Use this to detect some special commands, such as the command containing XOR data of SLC write,
// the 1st program stage of the command containing XOR data of TLC write.
BOOL L3_IsDataDisperse(const FCMD_REQ_ENTRY *ptReqEntry)
{
    ASSERT(ptReqEntry != NULL);
200025bd:	223e16        	beqz	a14, 200027e4 <L3_AllocResource+0x8e4>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:128

    if ((TRUE == L3_IsNeedDoXor(ptReqEntry)) && (TRUE == ptReqEntry->bsContainXorData))
200025c0:	0e2d      	mov.n	a2, a14
200025c2:	008145        	call0	20002dd8 <L3_IsNeedDoXor>
200025c5:	620b      	addi.n	a6, a2, -1
200025c7:	45a616        	beqz	a6, 20002a25 <L3_AllocResource+0xb25>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:454

        ptDsgCtrl->bsBdEngineDone = TRUE;
    }
    else
    {
        while (TRUE != ptDsgCtrl->bsBdEngineDone)
200025ca:	6f38      	l32i.n	a3, a15, 24
200025cc:	042030        	extui	a2, a3, 0, 1
200025cf:	047030        	extui	a7, a3, 0, 1
200025d2:	35b716        	beqz	a7, 20002931 <L3_AllocResource+0xa31>
200025d5:	0064c6        	j	2000276c <L3_AllocResource+0x86c>

200025d8 <L3_AllocResource+0x6d8>:
	...

200025da <L3_AllocResource+0x6da>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:284
        ucCurBitPos++;
    }

    if(SEC_PER_LPN <= ucCurBitPos)
    {
        ucCurBitPos = 0;
200025da:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:385
                    break;
                }   
            }
            else
            {
                usNextDsgId = INVALID_4F;
200025dc:	055102        	s16i	a0, a1, 10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:388
            }
                        
            ptDsgCtrl->aSecAddr[ptDsgCtrl->bsSecAddrIndex].bsSecStart  = ptReqEntry->tFlashDesc.bsSecStart + ucStartBitInLpn;
200025df:	100e42        	l8ui	a4, a14, 16
200025e2:	245130        	extui	a5, a3, 1, 3
200025e5:	9055f0        	addx2	a5, a5, a15
200025e8:	44ca      	add.n	a4, a4, a12
200025ea:	1d4542        	s8i	a4, a5, 29
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:389
            ptDsgCtrl->aSecAddr[ptDsgCtrl->bsSecAddrIndex].bsSecLength = ucBitLenInLpn;
200025ed:	6f38      	l32i.n	a3, a15, 24
200025ef:	243130        	extui	a3, a3, 1, 3
200025f2:	9033f0        	addx2	a3, a3, a15
200025f5:	1c4362        	s8i	a6, a3, 28
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:394
            ptDsgCtrl->bsSecAddrIndex++;
            ptDsgCtrl->bsDmaTotalLen += ucBitLenInLpn;
            ptDsgCtrl->bsLpnBitMapPos = ucBitPos;

            ptDsgEntry = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(ptDsgCtrl->bsCurEngineID);
200025f8:	0b1f32        	l16ui	a3, a15, 22
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:390
                usNextDsgId = INVALID_4F;
            }
                        
            ptDsgCtrl->aSecAddr[ptDsgCtrl->bsSecAddrIndex].bsSecStart  = ptReqEntry->tFlashDesc.bsSecStart + ucStartBitInLpn;
            ptDsgCtrl->aSecAddr[ptDsgCtrl->bsSecAddrIndex].bsSecLength = ucBitLenInLpn;
            ptDsgCtrl->bsSecAddrIndex++;
200025fb:	6f48      	l32i.n	a4, a15, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:392
            ptDsgCtrl->bsDmaTotalLen += ucBitLenInLpn;
            ptDsgCtrl->bsLpnBitMapPos = ucBitPos;
200025fd:	3fb8      	l32i.n	a11, a15, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:390
                usNextDsgId = INVALID_4F;
            }
                        
            ptDsgCtrl->aSecAddr[ptDsgCtrl->bsSecAddrIndex].bsSecStart  = ptReqEntry->tFlashDesc.bsSecStart + ucStartBitInLpn;
            ptDsgCtrl->aSecAddr[ptDsgCtrl->bsSecAddrIndex].bsSecLength = ucBitLenInLpn;
            ptDsgCtrl->bsSecAddrIndex++;
200025ff:	247140        	extui	a7, a4, 1, 3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:392
            ptDsgCtrl->bsDmaTotalLen += ucBitLenInLpn;
            ptDsgCtrl->bsLpnBitMapPos = ucBitPos;
20002602:	0312b4        	insbits	a11, a2, 1, 3
20002605:	3fb9      	s32i.n	a11, a15, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:390
                usNextDsgId = INVALID_4F;
            }
                        
            ptDsgCtrl->aSecAddr[ptDsgCtrl->bsSecAddrIndex].bsSecStart  = ptReqEntry->tFlashDesc.bsSecStart + ucStartBitInLpn;
            ptDsgCtrl->aSecAddr[ptDsgCtrl->bsSecAddrIndex].bsSecLength = ucBitLenInLpn;
            ptDsgCtrl->bsSecAddrIndex++;
20002607:	771b      	addi.n	a7, a7, 1
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:306
History:
    201409011    Tobey   uniform coding style
------------------------------------------------------------------------------*/
U32 HAL_GetNormalDsgAddr(U16 usDsgId)
{
    if(usDsgId >= NORMAL_DSG_NUM)
20002609:	ffa1b2        	movi	a11, 0x1ff
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:390
2000260c:	031744        	insbits	a4, a7, 1, 3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:391
            ptDsgCtrl->bsDmaTotalLen += ucBitLenInLpn;
2000260f:	845440        	extui	a5, a4, 4, 9
20002612:	565a      	add.n	a5, a6, a5
20002614:	604544        	insbits	a4, a5, 4, 12
20002617:	6f49      	s32i.n	a4, a15, 24
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:306
20002619:	02bb37        	bgeu	a11, a3, 2000261f <L3_AllocResource+0x71f>
2000261c:	004706        	j	2000273c <L3_AllocResource+0x83c>
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:308
    {
        DBG_Getch();
2000261f:	1123c0        	slli	a2, a3, 4
20002622:	228a      	add.n	a2, a2, a8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:398

            ptDsgEntry = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(ptDsgCtrl->bsCurEngineID);
            COM_MemZero((U32*)ptDsgEntry,sizeof(NORMAL_DSG_ENTRY)>>2);
            
            usBufSizeBits = (FCMD_REQ_SUBTYPE_SINGLE == ptReqEntry->bsReqSubType) ? LOGIC_PG_SZ_BITS : BUF_SIZE_BITS;
            ptDsgEntry->bsDramAddr    = HAL_NfcGetDmaAddr(ptReqEntry->atBufDesc[0].bsBufID, ptReqEntry->atBufDesc[0].bsSecStart + ucStartBitInLpn, usBufSizeBits);
20002624:	0a1e42        	l16ui	a4, a14, 20
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:65
20002627:	030c      	movi.n	a3, 0
20002629:	0239      	s32i.n	a3, a2, 0
2000262b:	1239      	s32i.n	a3, a2, 4
2000262d:	2239      	s32i.n	a3, a2, 8
2000262f:	3239      	s32i.n	a3, a2, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:398
20002631:	0a5d      	mov.n	a5, a10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:402
            ptDsgEntry->bsXferByteLen = ucBitLenInLpn << SEC_SZ_BITS;
            ptDsgEntry->bsNextDsgId   = usNextDsgId;

            if (INVALID_4F != usNextDsgId)
20002633:	f83a31        	l32r	a3, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:398

            ptDsgEntry = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(ptDsgCtrl->bsCurEngineID);
            COM_MemZero((U32*)ptDsgEntry,sizeof(NORMAL_DSG_ENTRY)>>2);
            
            usBufSizeBits = (FCMD_REQ_SUBTYPE_SINGLE == ptReqEntry->bsReqSubType) ? LOGIC_PG_SZ_BITS : BUF_SIZE_BITS;
            ptDsgEntry->bsDramAddr    = HAL_NfcGetDmaAddr(ptReqEntry->atBufDesc[0].bsBufID, ptReqEntry->atBufDesc[0].bsSecStart + ucStartBitInLpn, usBufSizeBits);
20002636:	0e78      	l32i.n	a7, a14, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:402
            ptDsgEntry->bsXferByteLen = ucBitLenInLpn << SEC_SZ_BITS;
            ptDsgEntry->bsNextDsgId   = usNextDsgId;

            if (INVALID_4F != usNextDsgId)
20002638:	382332        	l32i	a3, a3, 224
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:398

            ptDsgEntry = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(ptDsgCtrl->bsCurEngineID);
            COM_MemZero((U32*)ptDsgEntry,sizeof(NORMAL_DSG_ENTRY)>>2);
            
            usBufSizeBits = (FCMD_REQ_SUBTYPE_SINGLE == ptReqEntry->bsReqSubType) ? LOGIC_PG_SZ_BITS : BUF_SIZE_BITS;
            ptDsgEntry->bsDramAddr    = HAL_NfcGetDmaAddr(ptReqEntry->atBufDesc[0].bsBufID, ptReqEntry->atBufDesc[0].bsSecStart + ucStartBitInLpn, usBufSizeBits);
2000263b:	257570        	extui	a7, a7, 21, 3
2000263e:	835970        	moveqz	a5, a9, a7
20002641:	401500        	ssl	a5
20002644:	160e72        	l8ui	a7, a14, 22
20002647:	1258      	l32i.n	a5, a2, 4
20002649:	a14400        	sll	a4, a4
2000264c:	77ca      	add.n	a7, a7, a12
2000264e:	117770        	slli	a7, a7, 9
20002651:	447a      	add.n	a4, a4, a7
20002653:	000544        	insbits	a4, a5, 0, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:400
            ptDsgEntry->bsXferByteLen = ucBitLenInLpn << SEC_SZ_BITS;
            ptDsgEntry->bsNextDsgId   = usNextDsgId;
20002656:	051172        	l16ui	a7, a1, 10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:399
            ptDsgEntry = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(ptDsgCtrl->bsCurEngineID);
            COM_MemZero((U32*)ptDsgEntry,sizeof(NORMAL_DSG_ENTRY)>>2);
            
            usBufSizeBits = (FCMD_REQ_SUBTYPE_SINGLE == ptReqEntry->bsReqSubType) ? LOGIC_PG_SZ_BITS : BUF_SIZE_BITS;
            ptDsgEntry->bsDramAddr    = HAL_NfcGetDmaAddr(ptReqEntry->atBufDesc[0].bsBufID, ptReqEntry->atBufDesc[0].bsSecStart + ucStartBitInLpn, usBufSizeBits);
            ptDsgEntry->bsXferByteLen = ucBitLenInLpn << SEC_SZ_BITS;
20002659:	0258      	l32i.n	a5, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:398

            ptDsgEntry = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(ptDsgCtrl->bsCurEngineID);
            COM_MemZero((U32*)ptDsgEntry,sizeof(NORMAL_DSG_ENTRY)>>2);
            
            usBufSizeBits = (FCMD_REQ_SUBTYPE_SINGLE == ptReqEntry->bsReqSubType) ? LOGIC_PG_SZ_BITS : BUF_SIZE_BITS;
            ptDsgEntry->bsDramAddr    = HAL_NfcGetDmaAddr(ptReqEntry->atBufDesc[0].bsBufID, ptReqEntry->atBufDesc[0].bsSecStart + ucStartBitInLpn, usBufSizeBits);
2000265b:	1249      	s32i.n	a4, a2, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:399
            ptDsgEntry->bsXferByteLen = ucBitLenInLpn << SEC_SZ_BITS;
2000265d:	d45050        	extui	a5, a5, 0, 14
20002660:	c04700        	sub	a4, a7, a0
20002663:	f37654        	insbits	a5, a6, 23, 31
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:400
            ptDsgEntry->bsNextDsgId   = usNextDsgId;
20002666:	400754        	insbits	a5, a7, 0, 8
20002669:	0259      	s32i.n	a5, a2, 0
2000266b:	10d416        	beqz	a4, 2000277c <L3_AllocResource+0x87c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:402

            if (INVALID_4F != usNextDsgId)
2000266e:	0b1f52        	l16ui	a5, a15, 22
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:350
    else
    {
        DBG_Getch();
    }
#else
    l_pDsgReport->bsDsgValue = ucStsValue;
20002671:	0020c0        	memw
20002674:	03b8      	l32i.n	a11, a3, 0
20002676:	e27c      	movi.n	a2, -2
20002678:	10bb20        	and	a11, a11, a2
2000267b:	120c      	movi.n	a2, 1
2000267d:	20bb20        	or	a11, a11, a2
20002680:	0020c0        	memw
20002683:	03b9      	s32i.n	a11, a3, 0
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:351
    l_pDsgReport->bsDsgWrIndex = usDsgId;
20002685:	0020c0        	memw
20002688:	0348      	l32i.n	a4, a3, 0
2000268a:	421544        	insbits	a4, a5, 1, 10
2000268d:	0020c0        	memw
20002690:	0349      	s32i.n	a4, a3, 0
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:352
    l_pDsgReport->bsDsgWrEn = TRUE;
20002692:	0020c0        	memw
20002695:	f85021        	l32r	a2, 200007d8 <_stext+0xd8>
20002698:	03b8      	l32i.n	a11, a3, 0
2000269a:	10bb20        	and	a11, a11, a2
2000269d:	f84f21        	l32r	a2, 200007dc <_stext+0xdc>
200026a0:	20bb20        	or	a11, a11, a2
200026a3:	0020c0        	memw
200026a6:	03b9      	s32i.n	a11, a3, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:405
            {
                HAL_SetNormalDsgSts(ptDsgCtrl->bsCurEngineID, NORMAL_DSG_VALID);
                ptDsgCtrl->bsCurEngineID = usNextDsgId;
200026a8:	6f38      	l32i.n	a3, a15, 24
200026aa:	0b5f72        	s16i	a7, a15, 22
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:371
        ptDsgCtrl->bsCurEngineID = usCurDsgId;
    }

    if (TRUE == ptReqEntry->tFlashDesc.bsMergeRdEn)
    {
        while (TRUE != ptDsgCtrl->bsBdEngineDone)
200026ad:	042030        	extui	a2, a3, 0, 1
200026b0:	026307        	bbci	a3, 0, 200026b6 <L3_AllocResource+0x7b6>
200026b3:	002d46        	j	2000276c <L3_AllocResource+0x86c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:374
        {
            ucBitPos = ptDsgCtrl->bsLpnBitMapPos;            
            bFind = L3_IFSearchSeqBit1(ptReqEntry->tFlashDesc.bsLpnBitmap, &ucStartBitInLpn, &ucBitLenInLpn, &ucBitPos);
200026b6:	130e72        	l8ui	a7, a14, 19
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:373

    if (TRUE == ptReqEntry->tFlashDesc.bsMergeRdEn)
    {
        while (TRUE != ptDsgCtrl->bsBdEngineDone)
        {
            ucBitPos = ptDsgCtrl->bsLpnBitMapPos;            
200026b9:	3f28      	l32i.n	a2, a15, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:374
            bFind = L3_IFSearchSeqBit1(ptReqEntry->tFlashDesc.bsLpnBitmap, &ucStartBitInLpn, &ucBitLenInLpn, &ucBitPos);
200026bb:	075d      	mov.n	a5, a7
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:373

    if (TRUE == ptReqEntry->tFlashDesc.bsMergeRdEn)
    {
        while (TRUE != ptDsgCtrl->bsBdEngineDone)
        {
            ucBitPos = ptDsgCtrl->bsLpnBitMapPos;            
200026bd:	242120        	extui	a2, a2, 1, 3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:277
LOCAL BOOL L3_IFSearchSeqBit1(U8 LpnBitMap, U8 *ptStartBitInLpn, U8 *ptBit1NumInLpn, U8 *ptBitPos)
{
    U8 ucCurBitPos = *ptBitPos;
    U8 ucBit1NumInLpn;

    while (!(LpnBitMap & (1<<ucCurBitPos)) && (SEC_PER_LPN >ucCurBitPos))
200026c0:	400200        	ssr	a2
200026c3:	b14070        	sra	a4, a7
200026c6:	086407        	bbci	a4, 0, 200026d2 <L3_AllocResource+0x7d2>
200026c9:	0004c6        	j	200026e0 <L3_AllocResource+0x7e0>

200026cc <L3_AllocResource+0x7cc>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:279
    {
        ucCurBitPos++;
200026cc:	0282b6        	bltui	a2, 8, 200026d2 <L3_AllocResource+0x7d2>
200026cf:	ffc1c6        	j	200025da <L3_AllocResource+0x6da>
200026d2:	221b      	addi.n	a2, a2, 1
200026d4:	742020        	extui	a2, a2, 0, 8
200026d7:	400200        	ssr	a2
200026da:	b14050        	sra	a4, a5
200026dd:	eb6407        	bbci	a4, 0, 200026cc <L3_AllocResource+0x7cc>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:282
    }

    if(SEC_PER_LPN <= ucCurBitPos)
200026e0:	0282b6        	bltui	a2, 8, 200026e6 <L3_AllocResource+0x7e6>
200026e3:	ffbcc6        	j	200025da <L3_AllocResource+0x6da>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:290

        *ptBitPos = ucCurBitPos;
        return FALSE;
    }

    *ptStartBitInLpn = ucCurBitPos++;
200026e6:	02cd      	mov.n	a12, a2
200026e8:	221b      	addi.n	a2, a2, 1
200026ea:	742020        	extui	a2, a2, 0, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:293

    ucBit1NumInLpn = 1;
    while ((LpnBitMap&(1<<ucCurBitPos)) && (SEC_PER_LPN>ucCurBitPos))
200026ed:	400200        	ssr	a2
200026f0:	b14050        	sra	a4, a5
200026f3:	076407        	bbci	a4, 0, 200026fe <L3_AllocResource+0x7fe>
200026f6:	0482f6        	bgeui	a2, 8, 200026fe <L3_AllocResource+0x7fe>
200026f9:	160c      	movi.n	a6, 1
200026fb:	0033c6        	j	200027ce <L3_AllocResource+0x8ce>

200026fe <L3_AllocResource+0x7fe>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:296
    {
        ucBit1NumInLpn++;
        ucCurBitPos++;
200026fe:	160c      	movi.n	a6, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:301
    }

    *ptBit1NumInLpn = ucBit1NumInLpn;

    *ptBitPos = ucCurBitPos;
20002700:	116122        	s32i	a2, a1, 68
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:376
        while (TRUE != ptDsgCtrl->bsBdEngineDone)
        {
            ucBitPos = ptDsgCtrl->bsLpnBitMapPos;            
            bFind = L3_IFSearchSeqBit1(ptReqEntry->tFlashDesc.bsLpnBitmap, &ucStartBitInLpn, &ucBitLenInLpn, &ucBitPos);

            if ((TRUE == bFind) && (ptReqEntry->tFlashDesc.bsLpnBitmap > MULTI_VALUE_1(ucBitPos)))
20002703:	ffaf52        	movi	a5, -1
20002706:	400200        	ssr	a2
20002709:	9140d0        	srl	a4, a13
2000270c:	401200        	ssl	a2
2000270f:	a14400        	sll	a4, a4
20002712:	304450        	xor	a4, a4, a5
20002715:	023477        	bltu	a4, a7, 2000271b <L3_AllocResource+0x81b>
20002718:	ffb006        	j	200025dc <L3_AllocResource+0x6dc>
2000271b:	126162        	s32i	a6, a1, 72
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:378
            {
                if (FALSE == HAL_GetNormalDsg(&usNextDsgId))
2000271e:	0ac122        	addi	a2, a1, 10
20002721:	03b485        	call0	2000626c <HAL_GetNormalDsg>
20002724:	f80c01        	l32r	a0, 20000754 <_stext+0x54>
20002727:	02c216        	beqz	a2, 20002757 <L3_AllocResource+0x857>
2000272a:	122162        	l32i	a6, a1, 72
2000272d:	112122        	l32i	a2, a1, 68
20002730:	f7f981        	l32r	a8, 20000714 <_stext+0x14>
20002733:	e90c      	movi.n	a9, 14
20002735:	0a1c      	movi.n	a10, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:380
                {
                    break;
20002737:	6f38      	l32i.n	a3, a15, 24
20002739:	ffa886        	j	200025df <L3_AllocResource+0x6df>

2000273c <L3_AllocResource+0x83c>:
2000273c:	126162        	s32i	a6, a1, 72
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:308
------------------------------------------------------------------------------*/
U32 HAL_GetNormalDsgAddr(U16 usDsgId)
{
    if(usDsgId >= NORMAL_DSG_NUM)
    {
        DBG_Getch();
2000273f:	f7f601        	l32r	a0, 20000718 <_stext+0x18>
20002742:	0000c0        	callx0	a0
20002745:	f80301        	l32r	a0, 20000754 <_stext+0x54>
20002748:	122162        	l32i	a6, a1, 72
2000274b:	f7f281        	l32r	a8, 20000714 <_stext+0x14>
2000274e:	e90c      	movi.n	a9, 14
20002750:	0a1c      	movi.n	a10, 16
20002752:	020c      	movi.n	a2, 0
20002754:	ffb306        	j	20002624 <L3_AllocResource+0x724>

20002757 <L3_AllocResource+0x857>:
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:200
20002757:	a108      	l32i.n	a0, a1, 40
20002759:	b1c8      	l32i.n	a12, a1, 44
2000275b:	c1d8      	l32i.n	a13, a1, 48
2000275d:	d1e8      	l32i.n	a14, a1, 52
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:371
        ptDsgCtrl->bsCurEngineID = usCurDsgId;
    }

    if (TRUE == ptReqEntry->tFlashDesc.bsMergeRdEn)
    {
        while (TRUE != ptDsgCtrl->bsBdEngineDone)
2000275f:	6f28      	l32i.n	a2, a15, 24
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:200
20002761:	e1f8      	l32i.n	a15, a1, 56
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:371
20002763:	042020        	extui	a2, a2, 0, 1
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:200
20002766:	60c112        	addi	a1, a1, 96
20002769:	f00d      	ret.n

2000276b <L3_AllocResource+0x86b>:
	...

2000276c <L3_AllocResource+0x86c>:
2000276c:	b1c8      	l32i.n	a12, a1, 44
2000276e:	c1d8      	l32i.n	a13, a1, 48
20002770:	d1e8      	l32i.n	a14, a1, 52
20002772:	e1f8      	l32i.n	a15, a1, 56
20002774:	a108      	l32i.n	a0, a1, 40
20002776:	60c112        	addi	a1, a1, 96
20002779:	f00d      	ret.n

2000277b <L3_AllocResource+0x87b>:
	...

2000277c <L3_AllocResource+0x87c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:409
                HAL_SetNormalDsgSts(ptDsgCtrl->bsCurEngineID, NORMAL_DSG_VALID);
                ptDsgCtrl->bsCurEngineID = usNextDsgId;
            }
            else
            {
                ptDsgEntry->bsLast  = TRUE;
2000277c:	00a272        	movi	a7, 0x200
2000277f:	207570        	or	a7, a5, a7
20002782:	0279      	s32i.n	a7, a2, 0
20002784:	0b1fb2        	l16ui	a11, a15, 22
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:350
    else
    {
        DBG_Getch();
    }
#else
    l_pDsgReport->bsDsgValue = ucStsValue;
20002787:	0020c0        	memw
2000278a:	0378      	l32i.n	a7, a3, 0
2000278c:	e47c      	movi.n	a4, -2
2000278e:	107740        	and	a7, a7, a4
20002791:	140c      	movi.n	a4, 1
20002793:	207740        	or	a7, a7, a4
20002796:	0020c0        	memw
20002799:	0379      	s32i.n	a7, a3, 0
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:351
    l_pDsgReport->bsDsgWrIndex = usDsgId;
2000279b:	0020c0        	memw
2000279e:	0378      	l32i.n	a7, a3, 0
200027a0:	421b74        	insbits	a7, a11, 1, 10
200027a3:	0020c0        	memw
200027a6:	0379      	s32i.n	a7, a3, 0
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:352
    l_pDsgReport->bsDsgWrEn = TRUE;
200027a8:	0020c0        	memw
200027ab:	f80bb1        	l32r	a11, 200007d8 <_stext+0xd8>
200027ae:	0378      	l32i.n	a7, a3, 0
200027b0:	1077b0        	and	a7, a7, a11
200027b3:	f80ab1        	l32r	a11, 200007dc <_stext+0xdc>
200027b6:	2077b0        	or	a7, a7, a11
200027b9:	0020c0        	memw
200027bc:	0379      	s32i.n	a7, a3, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:411
                HAL_SetNormalDsgSts(ptDsgCtrl->bsCurEngineID, NORMAL_DSG_VALID);
                ptDsgCtrl->bsBdEngineDone = TRUE;
200027be:	6f38      	l32i.n	a3, a15, 24
200027c0:	203340        	or	a3, a3, a4
200027c3:	6f39      	s32i.n	a3, a15, 24
200027c5:	ffb906        	j	200026ad <L3_AllocResource+0x7ad>

200027c8 <L3_AllocResource+0x8c8>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:296

    ucBit1NumInLpn = 1;
    while ((LpnBitMap&(1<<ucCurBitPos)) && (SEC_PER_LPN>ucCurBitPos))
    {
        ucBit1NumInLpn++;
        ucCurBitPos++;
200027c8:	0282b6        	bltui	a2, 8, 200027ce <L3_AllocResource+0x8ce>
200027cb:	ffcc46        	j	20002700 <L3_AllocResource+0x800>
200027ce:	221b      	addi.n	a2, a2, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:295
    *ptStartBitInLpn = ucCurBitPos++;

    ucBit1NumInLpn = 1;
    while ((LpnBitMap&(1<<ucCurBitPos)) && (SEC_PER_LPN>ucCurBitPos))
    {
        ucBit1NumInLpn++;
200027d0:	661b      	addi.n	a6, a6, 1
200027d2:	746060        	extui	a6, a6, 0, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:296
        ucCurBitPos++;
200027d5:	742020        	extui	a2, a2, 0, 8
200027d8:	400200        	ssr	a2
200027db:	b1b050        	sra	a11, a5
200027de:	e6eb07        	bbsi	a11, 0, 200027c8 <L3_AllocResource+0x8c8>
200027e1:	ffc6c6        	j	20002700 <L3_AllocResource+0x800>

200027e4 <L3_AllocResource+0x8e4>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:126

// Use this to detect some special commands, such as the command containing XOR data of SLC write,
// the 1st program stage of the command containing XOR data of TLC write.
BOOL L3_IsDataDisperse(const FCMD_REQ_ENTRY *ptReqEntry)
{
    ASSERT(ptReqEntry != NULL);
200027e4:	ffff06        	j	200027e4 <L3_AllocResource+0x8e4>

200027e7 <L3_AllocResource+0x8e7>:
	...

200027e8 <L3_AllocResource+0x8e8>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
200027e8:	f7cf31        	l32r	a3, 20000724 <_stext+0x24>
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:164

            ptHsgCtrl->bsBdEngineDone = TRUE;

            if (FALSE == bIsSGQIdle)
            {    
                bIsSGQIdle = HAL_SgqIsBusy(L3_GET_PU(ptReqEntry->bsTLun), L3_GET_LUN_IN_PU(ptReqEntry->bsTLun)) ? FALSE : TRUE;
200027eb:	000ed2        	l8ui	a13, a14, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
200027ee:	f7cb91        	l32r	a9, 2000071c <_stext+0x1c>
200027f1:	3d3a      	add.n	a3, a13, a3
200027f3:	800332        	l8ui	a3, a3, 128
200027f6:	3e2992        	l32i	a9, a9, 248
200027f9:	11a3c0        	slli	a10, a3, 4
200027fc:	99aa      	add.n	a9, a9, a10
200027fe:	0020c0        	memw
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:424

    ucSgqStaRegNum = ucPhyPU / PUNUM_PER_SGQ_STATUS_REG;
    ucSgqStaPuMapOffset = ucPhyPU % PUNUM_PER_SGQ_STATUS_REG;
    ucSgqStaPuLevelMapBit =  1 <<((ucSgqStaPuMapOffset * NFCQ_DEPTH_TOTAL) + ucLun* NFCQ_DEPTH + ucLevel);

    switch  (ucSgqStaRegNum)
20002801:	740230        	extui	a0, a3, 2, 8
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:422
    U32  ucSgqStaPuMapOffset;
    U32  ucSgqStaPuLevelMapBit;

    ucSgqStaRegNum = ucPhyPU / PUNUM_PER_SGQ_STATUS_REG;
    ucSgqStaPuMapOffset = ucPhyPU % PUNUM_PER_SGQ_STATUS_REG;
    ucSgqStaPuLevelMapBit =  1 <<((ucSgqStaPuMapOffset * NFCQ_DEPTH_TOTAL) + ucLun* NFCQ_DEPTH + ucLevel);
20002804:	170c      	movi.n	a7, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
20002806:	000992        	l8ui	a9, a9, 0
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:422
20002809:	148030        	extui	a8, a3, 0, 2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
2000280c:	419690        	srli	a9, a9, 6
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:422
2000280f:	b08890        	addx8	a8, a8, a9
20002812:	401800        	ssl	a8
20002815:	a17700        	sll	a7, a7
20002818:	7179      	s32i.n	a7, a1, 28
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:424

    switch  (ucSgqStaRegNum)
2000281a:	0240b6        	bltui	a0, 4, 20002820 <L3_AllocResource+0x920>
2000281d:	0064c6        	j	200029b4 <L3_AllocResource+0xab4>
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:430
    {
        case 0:
        case 1:
        case 2:
        case 3:
            ulSgqStatus = *(((volatile U32*)rSgqStatusP1Addr) + ucSgqStaRegNum);
20002820:	f7b841        	l32r	a4, 20000700 <_stext>
20002823:	a04040        	addx4	a4, a0, a4
20002826:	0020c0        	memw
20002829:	512442        	l32i	a4, a4, 0x144
2000282c:	0149      	s32i.n	a4, a1, 0
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:431
            break;
2000282e:	006986        	j	200029d8 <L3_AllocResource+0xad8>

20002831 <L3_AllocResource+0x931>:
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:105
    BOOL bStsFlag;

    if (0 != (rGlbOTFBMCtrl0 & (1 << 18)))
    {
        /* Returns a dummy HSG id on PCIe reset handling. */
        *pHsgId = 0;
20002831:	060c      	movi.n	a6, 0
20002833:	025162        	s16i	a6, a1, 4
20002836:	ff4ac6        	j	20002565 <L3_AllocResource+0x665>

20002839 <L3_AllocResource+0x939>:
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:116
        return bIsSGQIdle;
    }
    
    if (INVALID_4F == ptHsgCtrl->bsFstEngineID)
    {                        
        if (FALSE == HAL_GetHsg(&usCurHsgId))
20002839:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:200
    else
    {
        bResult = L3_IFAllocDSG(ptCtrlEntry);
    }
  
    return bResult;
2000283b:	b1c8      	l32i.n	a12, a1, 44
2000283d:	c1d8      	l32i.n	a13, a1, 48
2000283f:	d1e8      	l32i.n	a14, a1, 52
20002841:	e1f8      	l32i.n	a15, a1, 56
20002843:	a108      	l32i.n	a0, a1, 40
20002845:	60c112        	addi	a1, a1, 96
20002848:	f00d      	ret.n

2000284a <L3_AllocResource+0x94a>:
	...

2000284c <L3_AllocResource+0x94c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:466
                    break;
                }
            }
            else
            {
                usNextDsgId = INVALID_4F;
2000284c:	f7c251        	l32r	a5, 20000754 <_stext+0x54>
2000284f:	055152        	s16i	a5, a1, 10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:470
            }

            ucTmpSecLen = ptReqEntry->atBufDesc[ptDsgCtrl->bsSecAddrIndex].bsSecLen;
            ptDsgCtrl->aSecAddr[ptDsgCtrl->bsSecAddrIndex].bsSecStart  = ptReqEntry->tFlashDesc.bsSecStart + ptDsgCtrl->bsDmaTotalLen;            
20002852:	9020f0        	addx2	a2, a0, a15
20002855:	844430        	extui	a4, a3, 4, 9
20002858:	100ed2        	l8ui	a13, a14, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:469
            else
            {
                usNextDsgId = INVALID_4F;
            }

            ucTmpSecLen = ptReqEntry->atBufDesc[ptDsgCtrl->bsSecAddrIndex].bsSecLen;
2000285b:	a090e0        	addx4	a9, a0, a14
2000285e:	170992        	l8ui	a9, a9, 23
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:470
            ptDsgCtrl->aSecAddr[ptDsgCtrl->bsSecAddrIndex].bsSecStart  = ptReqEntry->tFlashDesc.bsSecStart + ptDsgCtrl->bsDmaTotalLen;            
20002861:	dd4a      	add.n	a13, a13, a4
20002863:	1d42d2        	s8i	a13, a2, 29
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:471
            ptDsgCtrl->aSecAddr[ptDsgCtrl->bsSecAddrIndex].bsSecLength = ucTmpSecLen;            
20002866:	6fb8      	l32i.n	a11, a15, 24
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:306
History:
    201409011    Tobey   uniform coding style
------------------------------------------------------------------------------*/
U32 HAL_GetNormalDsgAddr(U16 usDsgId)
{
    if(usDsgId >= NORMAL_DSG_NUM)
20002868:	ffa162        	movi	a6, 0x1ff
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:471
2000286b:	24b1b0        	extui	a11, a11, 1, 3
2000286e:	90bbf0        	addx2	a11, a11, a15
20002871:	1c4b92        	s8i	a9, a11, 28
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:472
            ptDsgCtrl->bsDmaTotalLen += ucTmpSecLen;
20002874:	6f78      	l32i.n	a7, a15, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:475
            ptDsgCtrl->bsSecAddrIndex++;

            ptDsgEntry = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(ptDsgCtrl->bsCurEngineID);
20002876:	0b1f02        	l16ui	a0, a15, 22
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:472
            }

            ucTmpSecLen = ptReqEntry->atBufDesc[ptDsgCtrl->bsSecAddrIndex].bsSecLen;
            ptDsgCtrl->aSecAddr[ptDsgCtrl->bsSecAddrIndex].bsSecStart  = ptReqEntry->tFlashDesc.bsSecStart + ptDsgCtrl->bsDmaTotalLen;            
            ptDsgCtrl->aSecAddr[ptDsgCtrl->bsSecAddrIndex].bsSecLength = ucTmpSecLen;            
            ptDsgCtrl->bsDmaTotalLen += ucTmpSecLen;
20002879:	84a470        	extui	a10, a7, 4, 9
2000287c:	99aa      	add.n	a9, a9, a10
2000287e:	604974        	insbits	a7, a9, 4, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:473
            ptDsgCtrl->bsSecAddrIndex++;
20002881:	248170        	extui	a8, a7, 1, 3
20002884:	881b      	addi.n	a8, a8, 1
20002886:	031874        	insbits	a7, a8, 1, 3
20002889:	6f79      	s32i.n	a7, a15, 24
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:306
2000288b:	02b607        	bgeu	a6, a0, 20002891 <L3_AllocResource+0x991>
2000288e:	003286        	j	2000295c <L3_AllocResource+0xa5c>
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:308
    {
        DBG_Getch();
20002891:	f7a021        	l32r	a2, 20000714 <_stext+0x14>
20002894:	1100c0        	slli	a0, a0, 4
20002897:	002a      	add.n	a0, a0, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:481
            COM_MemZero((U32*)ptDsgEntry,sizeof(NORMAL_DSG_ENTRY)>>2);
            
            usBufSizeBits = (FCMD_REQ_SUBTYPE_SINGLE == ptReqEntry->bsReqSubType) ? LOGIC_PG_SZ_BITS : BUF_SIZE_BITS;
            ptDsgEntry->bsDramAddr = HAL_NfcGetDmaAddr(ptReqEntry->atBufDesc[ucBuffPos].bsBufID, ptReqEntry->atBufDesc[ucBuffPos].bsSecStart, usBufSizeBits);
            ptDsgEntry->bsXferByteLen = ptReqEntry->atBufDesc[ucBuffPos].bsSecLen << SEC_SZ_BITS;
            ptDsgEntry->bsNextDsgId   = usNextDsgId;
20002899:	051172        	l16ui	a7, a1, 10
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:65
2000289c:	030c      	movi.n	a3, 0
2000289e:	0039      	s32i.n	a3, a0, 0
200028a0:	1039      	s32i.n	a3, a0, 4
200028a2:	2039      	s32i.n	a3, a0, 8
200028a4:	3039      	s32i.n	a3, a0, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:479

            ptDsgEntry = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(ptDsgCtrl->bsCurEngineID);
            COM_MemZero((U32*)ptDsgEntry,sizeof(NORMAL_DSG_ENTRY)>>2);
            
            usBufSizeBits = (FCMD_REQ_SUBTYPE_SINGLE == ptReqEntry->bsReqSubType) ? LOGIC_PG_SZ_BITS : BUF_SIZE_BITS;
            ptDsgEntry->bsDramAddr = HAL_NfcGetDmaAddr(ptReqEntry->atBufDesc[ucBuffPos].bsBufID, ptReqEntry->atBufDesc[ucBuffPos].bsSecStart, usBufSizeBits);
200028a6:	1058      	l32i.n	a5, a0, 4
200028a8:	0a1c62        	l16ui	a6, a12, 20
200028ab:	e90c      	movi.n	a9, 14
200028ad:	081c      	movi.n	a8, 16
200028af:	0ea8      	l32i.n	a10, a14, 0
200028b1:	160c42        	l8ui	a4, a12, 22
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:483
            ptDsgEntry->bsXferByteLen = ptReqEntry->atBufDesc[ucBuffPos].bsSecLen << SEC_SZ_BITS;
            ptDsgEntry->bsNextDsgId   = usNextDsgId;

            if (INVALID_4F != usNextDsgId)
200028b4:	f79a31        	l32r	a3, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:480
            ptDsgEntry = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(ptDsgCtrl->bsCurEngineID);
            COM_MemZero((U32*)ptDsgEntry,sizeof(NORMAL_DSG_ENTRY)>>2);
            
            usBufSizeBits = (FCMD_REQ_SUBTYPE_SINGLE == ptReqEntry->bsReqSubType) ? LOGIC_PG_SZ_BITS : BUF_SIZE_BITS;
            ptDsgEntry->bsDramAddr = HAL_NfcGetDmaAddr(ptReqEntry->atBufDesc[ucBuffPos].bsBufID, ptReqEntry->atBufDesc[ucBuffPos].bsSecStart, usBufSizeBits);
            ptDsgEntry->bsXferByteLen = ptReqEntry->atBufDesc[ucBuffPos].bsSecLen << SEC_SZ_BITS;
200028b7:	0028      	l32i.n	a2, a0, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:483
            ptDsgEntry->bsNextDsgId   = usNextDsgId;

            if (INVALID_4F != usNextDsgId)
200028b9:	382332        	l32i	a3, a3, 224
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:480
            ptDsgEntry = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(ptDsgCtrl->bsCurEngineID);
            COM_MemZero((U32*)ptDsgEntry,sizeof(NORMAL_DSG_ENTRY)>>2);
            
            usBufSizeBits = (FCMD_REQ_SUBTYPE_SINGLE == ptReqEntry->bsReqSubType) ? LOGIC_PG_SZ_BITS : BUF_SIZE_BITS;
            ptDsgEntry->bsDramAddr = HAL_NfcGetDmaAddr(ptReqEntry->atBufDesc[ucBuffPos].bsBufID, ptReqEntry->atBufDesc[ucBuffPos].bsSecStart, usBufSizeBits);
            ptDsgEntry->bsXferByteLen = ptReqEntry->atBufDesc[ucBuffPos].bsSecLen << SEC_SZ_BITS;
200028bc:	d42020        	extui	a2, a2, 0, 14
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:479

            ptDsgEntry = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(ptDsgCtrl->bsCurEngineID);
            COM_MemZero((U32*)ptDsgEntry,sizeof(NORMAL_DSG_ENTRY)>>2);
            
            usBufSizeBits = (FCMD_REQ_SUBTYPE_SINGLE == ptReqEntry->bsReqSubType) ? LOGIC_PG_SZ_BITS : BUF_SIZE_BITS;
            ptDsgEntry->bsDramAddr = HAL_NfcGetDmaAddr(ptReqEntry->atBufDesc[ucBuffPos].bsBufID, ptReqEntry->atBufDesc[ucBuffPos].bsSecStart, usBufSizeBits);
200028bf:	114470        	slli	a4, a4, 9
200028c2:	25a5a0        	extui	a10, a10, 21, 3
200028c5:	8389a0        	moveqz	a8, a9, a10
200028c8:	401800        	ssl	a8
200028cb:	a16600        	sll	a6, a6
200028ce:	446a      	add.n	a4, a4, a6
200028d0:	000544        	insbits	a4, a5, 0, 0
200028d3:	1049      	s32i.n	a4, a0, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:480
            ptDsgEntry->bsXferByteLen = ptReqEntry->atBufDesc[ucBuffPos].bsSecLen << SEC_SZ_BITS;
200028d5:	170c52        	l8ui	a5, a12, 23
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:483
            ptDsgEntry->bsNextDsgId   = usNextDsgId;

            if (INVALID_4F != usNextDsgId)
200028d8:	f79f41        	l32r	a4, 20000754 <_stext+0x54>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:480
            ptDsgEntry = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(ptDsgCtrl->bsCurEngineID);
            COM_MemZero((U32*)ptDsgEntry,sizeof(NORMAL_DSG_ENTRY)>>2);
            
            usBufSizeBits = (FCMD_REQ_SUBTYPE_SINGLE == ptReqEntry->bsReqSubType) ? LOGIC_PG_SZ_BITS : BUF_SIZE_BITS;
            ptDsgEntry->bsDramAddr = HAL_NfcGetDmaAddr(ptReqEntry->atBufDesc[ucBuffPos].bsBufID, ptReqEntry->atBufDesc[ucBuffPos].bsSecStart, usBufSizeBits);
            ptDsgEntry->bsXferByteLen = ptReqEntry->atBufDesc[ucBuffPos].bsSecLen << SEC_SZ_BITS;
200028db:	f27524        	insbits	a2, a5, 23, 30
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:481
            ptDsgEntry->bsNextDsgId   = usNextDsgId;
200028de:	400724        	insbits	a2, a7, 0, 8
200028e1:	0029      	s32i.n	a2, a0, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:483

            if (INVALID_4F != usNextDsgId)
200028e3:	029747        	bne	a7, a4, 200028e9 <L3_AllocResource+0x9e9>
200028e6:	001f86        	j	20002968 <L3_AllocResource+0xa68>
200028e9:	0b1f82        	l16ui	a8, a15, 22
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:350
    else
    {
        DBG_Getch();
    }
#else
    l_pDsgReport->bsDsgValue = ucStsValue;
200028ec:	0020c0        	memw
200028ef:	0398      	l32i.n	a9, a3, 0
200028f1:	ea7c      	movi.n	a10, -2
200028f3:	1099a0        	and	a9, a9, a10
200028f6:	1a0c      	movi.n	a10, 1
200028f8:	2099a0        	or	a9, a9, a10
200028fb:	0020c0        	memw
200028fe:	0399      	s32i.n	a9, a3, 0
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:351
    l_pDsgReport->bsDsgWrIndex = usDsgId;
20002900:	0020c0        	memw
20002903:	0368      	l32i.n	a6, a3, 0
20002905:	421864        	insbits	a6, a8, 1, 10
20002908:	0020c0        	memw
2000290b:	0369      	s32i.n	a6, a3, 0
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:352
    l_pDsgReport->bsDsgWrEn = TRUE;
2000290d:	0020c0        	memw
20002910:	f7b251        	l32r	a5, 200007d8 <_stext+0xd8>
20002913:	0348      	l32i.n	a4, a3, 0
20002915:	104450        	and	a4, a4, a5
20002918:	f7b151        	l32r	a5, 200007dc <_stext+0xdc>
2000291b:	204450        	or	a4, a4, a5
2000291e:	0020c0        	memw
20002921:	0349      	s32i.n	a4, a3, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:486
            {
                HAL_SetNormalDsgSts(ptDsgCtrl->bsCurEngineID, NORMAL_DSG_VALID);
                ptDsgCtrl->bsCurEngineID = usNextDsgId;
20002923:	6f38      	l32i.n	a3, a15, 24
20002925:	0b5f72        	s16i	a7, a15, 22
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:454

        ptDsgCtrl->bsBdEngineDone = TRUE;
    }
    else
    {
        while (TRUE != ptDsgCtrl->bsBdEngineDone)
20002928:	042030        	extui	a2, a3, 0, 1
2000292b:	04b030        	extui	a11, a3, 0, 1
2000292e:	e3ab56        	bnez	a11, 2000276c <L3_AllocResource+0x86c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:456
        {
            ucBuffPos = ptDsgCtrl->bsSecAddrIndex;
20002931:	240130        	extui	a0, a3, 1, 3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:457
            if (DSG_BUFF_SIZE > (ucBuffPos + 1) && (INVALID_4F != ptReqEntry->atBufDesc[ucBuffPos + 1].bsBufID))
20002934:	a0c0e0        	addx4	a12, a0, a14
20002937:	0220a6        	blti	a0, 2, 2000293d <L3_AllocResource+0xa3d>
2000293a:	ffc386        	j	2000284c <L3_AllocResource+0x94c>
2000293d:	f78521        	l32r	a2, 20000754 <_stext+0x54>
20002940:	0c1cd2        	l16ui	a13, a12, 24
20002943:	c0dd20        	sub	a13, a13, a2
20002946:	f02d16        	beqz	a13, 2000284c <L3_AllocResource+0x94c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:459
            {
                if (FALSE == HAL_GetNormalDsg(&usNextDsgId))
20002949:	21ab      	addi.n	a2, a1, 10
2000294b:	039205        	call0	2000626c <HAL_GetNormalDsg>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:461
                {
                    break;
2000294e:	e05216        	beqz	a2, 20002757 <L3_AllocResource+0x857>
20002951:	6f38      	l32i.n	a3, a15, 24
20002953:	240130        	extui	a0, a3, 1, 3
20002956:	ffbe06        	j	20002852 <L3_AllocResource+0x952>

20002959 <L3_AllocResource+0xa59>:
20002959:	000000                                        ...

2000295c <L3_AllocResource+0xa5c>:
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:308
------------------------------------------------------------------------------*/
U32 HAL_GetNormalDsgAddr(U16 usDsgId)
{
    if(usDsgId >= NORMAL_DSG_NUM)
    {
        DBG_Getch();
2000295c:	f76f01        	l32r	a0, 20000718 <_stext+0x18>
2000295f:	0000c0        	callx0	a0
20002962:	000c      	movi.n	a0, 0
20002964:	ffcc46        	j	20002899 <L3_AllocResource+0x999>

20002967 <L3_AllocResource+0xa67>:
	...

20002968 <L3_AllocResource+0xa68>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:498
                    ptDsgEntry->bsBuffMapId = ptReqEntry->tHostDesc.tHostDptr.bsPrdID;// Host Read only one buffer now.
                    ptDsgEntry->bsMapSecOff = ptReqEntry->atBufDesc[ucBuffPos].bsSecStart;
                }
                #endif

                ptDsgEntry->bsLast  = TRUE;
20002968:	00a2b2        	movi	a11, 0x200
2000296b:	20b2b0        	or	a11, a2, a11
2000296e:	00b9      	s32i.n	a11, a0, 0
20002970:	0b1f82        	l16ui	a8, a15, 22
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:350
    else
    {
        DBG_Getch();
    }
#else
    l_pDsgReport->bsDsgValue = ucStsValue;
20002973:	0020c0        	memw
20002976:	ea7c      	movi.n	a10, -2
20002978:	0398      	l32i.n	a9, a3, 0
2000297a:	140c      	movi.n	a4, 1
2000297c:	1099a0        	and	a9, a9, a10
2000297f:	209940        	or	a9, a9, a4
20002982:	0020c0        	memw
20002985:	0399      	s32i.n	a9, a3, 0
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:351
    l_pDsgReport->bsDsgWrIndex = usDsgId;
20002987:	0020c0        	memw
2000298a:	0378      	l32i.n	a7, a3, 0
2000298c:	421874        	insbits	a7, a8, 1, 10
2000298f:	0020c0        	memw
20002992:	0379      	s32i.n	a7, a3, 0
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:352
    l_pDsgReport->bsDsgWrEn = TRUE;
20002994:	0020c0        	memw
20002997:	f79061        	l32r	a6, 200007d8 <_stext+0xd8>
2000299a:	0358      	l32i.n	a5, a3, 0
2000299c:	105560        	and	a5, a5, a6
2000299f:	f78f61        	l32r	a6, 200007dc <_stext+0xdc>
200029a2:	205560        	or	a5, a5, a6
200029a5:	0020c0        	memw
200029a8:	0359      	s32i.n	a5, a3, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:500
                HAL_SetNormalDsgSts(ptDsgCtrl->bsCurEngineID, NORMAL_DSG_VALID);
                ptDsgCtrl->bsBdEngineDone = TRUE;
200029aa:	6f38      	l32i.n	a3, a15, 24
200029ac:	203340        	or	a3, a3, a4
200029af:	6f39      	s32i.n	a3, a15, 24
200029b1:	ffdcc6        	j	20002928 <L3_AllocResource+0xa28>

200029b4 <L3_AllocResource+0xab4>:
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:424

    ucSgqStaRegNum = ucPhyPU / PUNUM_PER_SGQ_STATUS_REG;
    ucSgqStaPuMapOffset = ucPhyPU % PUNUM_PER_SGQ_STATUS_REG;
    ucSgqStaPuLevelMapBit =  1 <<((ucSgqStaPuMapOffset * NFCQ_DEPTH_TOTAL) + ucLun* NFCQ_DEPTH + ucLevel);

    switch  (ucSgqStaRegNum)
200029b4:	1480f6        	bgeui	a0, 8, 200029cc <L3_AllocResource+0xacc>
200029b7:	1140b6        	bltui	a0, 4, 200029cc <L3_AllocResource+0xacc>
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:436
            break;
        case 4:
        case 5:
        case 6:
        case 7:
            ulSgqStatus = *(((volatile U32*)rSgqStatusP2Addr) + (ucSgqStaRegNum - 4));
200029ba:	f751e1        	l32r	a14, 20000700 <_stext>
200029bd:	a0e0e0        	addx4	a14, a0, a14
200029c0:	0020c0        	memw
200029c3:	692ee2        	l32i	a14, a14, 0x1a4
200029c6:	01e9      	s32i.n	a14, a1, 0
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:437
            break;
200029c8:	000306        	j	200029d8 <L3_AllocResource+0xad8>

200029cb <L3_AllocResource+0xacb>:
	...

200029cc <L3_AllocResource+0xacc>:
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:439
        default:
            DBG_Printf("ucPhyPu is invalid\n", ucPhyPU);
200029cc:	f78121        	l32r	a2, 200007d0 <_stext+0xd0>
200029cf:	082945        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:440
            DBG_Getch();
200029d2:	f75101        	l32r	a0, 20000718 <_stext+0x18>
200029d5:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:444
            break;
    }

    if (0 != (rGlbOTFBMCtrl0 & (1 << 18)))
200029d8:	0020c0        	memw
200029db:	8a2c02        	l32i	a0, a12, 0x228
200029de:	33f027        	bbsi	a0, 18, 20002a15 <L3_AllocResource+0xb15>
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:446
    {
        DBG_Printf("PU=%d GLB_28\n", ucPU);
200029e1:	072132        	l32i	a3, a1, 28
200029e4:	002102        	l32i	a0, a1, 0
200029e7:	01a022        	movi	a2, 1
200029ea:	100030        	and	a0, a0, a3
200029ed:	930200        	movnez	a0, a2, a0
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:164

            ptHsgCtrl->bsBdEngineDone = TRUE;

            if (FALSE == bIsSGQIdle)
            {    
                bIsSGQIdle = HAL_SgqIsBusy(L3_GET_PU(ptReqEntry->bsTLun), L3_GET_LUN_IN_PU(ptReqEntry->bsTLun)) ? FALSE : TRUE;
200029f0:	150c      	movi.n	a5, 1
200029f2:	040c      	movi.n	a4, 0
200029f4:	834500        	moveqz	a4, a5, a0
200029f7:	8149      	s32i.n	a4, a1, 32
200029f9:	fe7bc6        	j	200023ec <L3_AllocResource+0x4ec>

200029fc <L3_AllocResource+0xafc>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:361
        return TRUE;
    }

    if (INVALID_4F == ptDsgCtrl->bsFstEngineID)
    {
        if (FALSE == HAL_GetNormalDsg(&usCurDsgId))
200029fc:	218b      	addi.n	a2, a1, 8
200029fe:	0386c5        	call0	2000626c <HAL_GetNormalDsg>
20002a01:	27c216        	beqz	a2, 20002c81 <L3_AllocResource+0xd81>
20002a04:	f75401        	l32r	a0, 20000754 <_stext+0x54>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:365
        {
            return FALSE;
        }
        ptDsgCtrl->bsFstEngineID = usCurDsgId;
20002a07:	041162        	l16ui	a6, a1, 8
20002a0a:	0a5f62        	s16i	a6, a15, 20
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:366
        ptDsgCtrl->bsCurEngineID = usCurDsgId;
20002a0d:	0b5f62        	s16i	a6, a15, 22
20002a10:	feac86        	j	200024c6 <L3_AllocResource+0x5c6>

20002a13 <L3_AllocResource+0xb13>:
	...

20002a15 <L3_AllocResource+0xb15>:
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:446
20002a15:	f77921        	l32r	a2, 200007fc <_stext+0xfc>
20002a18:	0d3d      	mov.n	a3, a13
20002a1a:	082485        	call0	2000ac64 <dbg_printf>
20002a1d:	000c      	movi.n	a0, 0
20002a1f:	fff346        	j	200029f0 <L3_AllocResource+0xaf0>

20002a22 <L3_AllocResource+0xb22>:
20002a22:	000000                                        ...

20002a25 <L3_AllocResource+0xb25>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:128

    if ((TRUE == L3_IsNeedDoXor(ptReqEntry)) && (TRUE == ptReqEntry->bsContainXorData))
20002a25:	0e78      	l32i.n	a7, a14, 0
20002a27:	047d70        	extui	a7, a7, 13, 1
20002a2a:	b9c716        	beqz	a7, 200025ca <L3_AllocResource+0x6ca>
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:166
    BOOL bStsFlag;

#ifdef PATCH_HW_NORMAL_DSG_POOL
    U16 usDsgID;

    if (TRUE == HAL_NormalDsgFifoIsEmpty())
20002a2d:	f73b81        	l32r	a8, 2000071c <_stext+0x1c>
20002a30:	6b1802        	l16ui	a0, a8, 214
20002a33:	6c1882        	l16ui	a8, a8, 216
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:417
            }
        }
    }
    else if (TRUE == L3_IsDataDisperse(ptReqEntry))
    {
        if (FALSE == HAL_GetNormalDsg(&usNextDsgId))
20002a36:	f77221        	l32r	a2, 20000800 <_stext+0x100>
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:166
20002a39:	1f1807        	beq	a8, a0, 20002a5c <L3_AllocResource+0xb5c>
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:94
{
    U16 usDsgID;

    usDsgID = g_aNormalDsgFifo[g_NormalDsgFifoHead];

    g_NormalDsgFifoHead = (g_NormalDsgFifoHead + 1) % NORMAL_DSG_FIFO_DEPTH;
20002a3c:	0b2c      	movi.n	a11, 32
20002a3e:	a01b      	addi.n	a10, a0, 1
20002a40:	02dd      	mov.n	a13, a2
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:173
        bStsFlag = FALSE;
    }
    else
    {
        *pDsgId = HAL_NormalDsgFifoPop();
        bStsFlag = TRUE;
20002a42:	190c      	movi.n	a9, 1
20002a44:	4199      	s32i.n	a9, a1, 16
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:92

LOCAL U16 HAL_NormalDsgFifoPop(void)
{
    U16 usDsgID;

    usDsgID = g_aNormalDsgFifo[g_NormalDsgFifoHead];
20002a46:	90d0d0        	addx2	a13, a0, a13
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:94

    g_NormalDsgFifoHead = (g_NormalDsgFifoHead + 1) % NORMAL_DSG_FIFO_DEPTH;
20002a49:	f2aab0        	rems	a10, a10, a11
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:92

LOCAL U16 HAL_NormalDsgFifoPop(void)
{
    U16 usDsgID;

    usDsgID = g_aNormalDsgFifo[g_NormalDsgFifoHead];
20002a4c:	7e1dd2        	l16ui	a13, a13, 252
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:94

    g_NormalDsgFifoHead = (g_NormalDsgFifoHead + 1) % NORMAL_DSG_FIFO_DEPTH;
20002a4f:	f733b1        	l32r	a11, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:172
    {
        bStsFlag = FALSE;
    }
    else
    {
        *pDsgId = HAL_NormalDsgFifoPop();
20002a52:	0551d2        	s16i	a13, a1, 10
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:94
{
    U16 usDsgID;

    usDsgID = g_aNormalDsgFifo[g_NormalDsgFifoHead];

    g_NormalDsgFifoHead = (g_NormalDsgFifoHead + 1) % NORMAL_DSG_FIFO_DEPTH;
20002a55:	6b5ba2        	s16i	a10, a11, 214
20002a58:	000106        	j	20002a60 <L3_AllocResource+0xb60>

20002a5b <L3_AllocResource+0xb5b>:
	...

20002a5c <L3_AllocResource+0xb5c>:
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:166
    BOOL bStsFlag;

#ifdef PATCH_HW_NORMAL_DSG_POOL
    U16 usDsgID;

    if (TRUE == HAL_NormalDsgFifoIsEmpty())
20002a5c:	000c      	movi.n	a0, 0
20002a5e:	4109      	s32i.n	a0, a1, 16
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
20002a60:	03ebd0        	rsr.prid	a13
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:149
#ifndef SIM
    U32 ulMcuID;
    U32 ulLockValue;
        
    ulMcuID = HAL_GetMcuId();
    if ((MCU0_ID == ulMcuID) || (MCU1_ID == ulMcuID) || (MCU2_ID == ulMcuID))
20002a63:	051d26        	beqi	a13, 1, 20002a6c <L3_AllocResource+0xb6c>
20002a66:	022d26        	beqi	a13, 2, 20002a6c <L3_AllocResource+0xb6c>
20002a69:	083d66        	bnei	a13, 3, 20002a75 <L3_AllocResource+0xb75>
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:151
    {
        *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4) = ulMcuID;
20002a6c:	0020c0        	memw
20002a6f:	ce6cd2        	s32i	a13, a12, 0x338
20002a72:	000146        	j	20002a7b <L3_AllocResource+0xb7b>

20002a75 <L3_AllocResource+0xb75>:
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:155
    }
    else
    {
        DBG_Getch();
20002a75:	f72801        	l32r	a0, 20000718 <_stext+0x18>
20002a78:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:158
    }

    ulLockValue = *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4);
20002a7b:	0020c0        	memw
20002a7e:	ce2c22        	l32i	a2, a12, 0x338
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:187
{
    BOOL bSts = FALSE;
    do
    {
        bSts = HAL_MultiCoreGetSpinLock(ucLockId);
    }while (FALSE == bSts);
20002a81:	db9d27        	bne	a13, a2, 20002a60 <L3_AllocResource+0xb60>
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:241
    201409011    Tobey   uniform coding style
------------------------------------------------------------------------------*/
BOOL HAL_GetCurNormalDsg(U16 *pDsgId)
{
    BOOL bStsFlag;
    if (TRUE == l_pDsgReport->bsDsgValidEn)
20002a84:	f72631        	l32r	a3, 2000071c <_stext+0x1c>
20002a87:	382332        	l32i	a3, a3, 224
20002a8a:	0020c0        	memw
20002a8d:	0348      	l32i.n	a4, a3, 0
20002a8f:	2674f7        	bbci	a4, 31, 20002ab9 <L3_AllocResource+0xbb9>
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:243
    {
        *pDsgId = l_pDsgReport->bsDsgId;
20002a92:	0020c0        	memw
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:83

LOCAL void HAL_NormalDsgFifoPush(U16 usDsgID)
{
    g_aNormalDsgFifo[g_NormalDsgFifoTail] = usDsgID;

    g_NormalDsgFifoTail = (g_NormalDsgFifoTail + 1) % NORMAL_DSG_FIFO_DEPTH;
20002a95:	082c      	movi.n	a8, 32
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:81
    return (g_NormalDsgFifoHead == (g_NormalDsgFifoTail + 1) % NORMAL_DSG_FIFO_DEPTH) ? TRUE : FALSE;
}

LOCAL void HAL_NormalDsgFifoPush(U16 usDsgID)
{
    g_aNormalDsgFifo[g_NormalDsgFifoTail] = usDsgID;
20002a97:	f75a71        	l32r	a7, 20000800 <_stext+0x100>
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:243
BOOL HAL_GetCurNormalDsg(U16 *pDsgId)
{
    BOOL bStsFlag;
    if (TRUE == l_pDsgReport->bsDsgValidEn)
    {
        *pDsgId = l_pDsgReport->bsDsgId;
20002a9a:	f75791        	l32r	a9, 200007f8 <_stext+0xf8>
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:81
    return (g_NormalDsgFifoHead == (g_NormalDsgFifoTail + 1) % NORMAL_DSG_FIFO_DEPTH) ? TRUE : FALSE;
}

LOCAL void HAL_NormalDsgFifoPush(U16 usDsgID)
{
    g_aNormalDsgFifo[g_NormalDsgFifoTail] = usDsgID;
20002a9d:	f71f51        	l32r	a5, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:243
BOOL HAL_GetCurNormalDsg(U16 *pDsgId)
{
    BOOL bStsFlag;
    if (TRUE == l_pDsgReport->bsDsgValidEn)
    {
        *pDsgId = l_pDsgReport->bsDsgId;
20002aa0:	0368      	l32i.n	a6, a3, 0
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:81
    return (g_NormalDsgFifoHead == (g_NormalDsgFifoTail + 1) % NORMAL_DSG_FIFO_DEPTH) ? TRUE : FALSE;
}

LOCAL void HAL_NormalDsgFifoPush(U16 usDsgID)
{
    g_aNormalDsgFifo[g_NormalDsgFifoTail] = usDsgID;
20002aa2:	6c1542        	l16ui	a4, a5, 216
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:243
BOOL HAL_GetCurNormalDsg(U16 *pDsgId)
{
    BOOL bStsFlag;
    if (TRUE == l_pDsgReport->bsDsgValidEn)
    {
        *pDsgId = l_pDsgReport->bsDsgId;
20002aa5:	106690        	and	a6, a6, a9
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:81
    return (g_NormalDsgFifoHead == (g_NormalDsgFifoTail + 1) % NORMAL_DSG_FIFO_DEPTH) ? TRUE : FALSE;
}

LOCAL void HAL_NormalDsgFifoPush(U16 usDsgID)
{
    g_aNormalDsgFifo[g_NormalDsgFifoTail] = usDsgID;
20002aa8:	907470        	addx2	a7, a4, a7
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:243
BOOL HAL_GetCurNormalDsg(U16 *pDsgId)
{
    BOOL bStsFlag;
    if (TRUE == l_pDsgReport->bsDsgValidEn)
    {
        *pDsgId = l_pDsgReport->bsDsgId;
20002aab:	a56560        	extui	a6, a6, 21, 11
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:83

LOCAL void HAL_NormalDsgFifoPush(U16 usDsgID)
{
    g_aNormalDsgFifo[g_NormalDsgFifoTail] = usDsgID;

    g_NormalDsgFifoTail = (g_NormalDsgFifoTail + 1) % NORMAL_DSG_FIFO_DEPTH;
20002aae:	441b      	addi.n	a4, a4, 1
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:81
    return (g_NormalDsgFifoHead == (g_NormalDsgFifoTail + 1) % NORMAL_DSG_FIFO_DEPTH) ? TRUE : FALSE;
}

LOCAL void HAL_NormalDsgFifoPush(U16 usDsgID)
{
    g_aNormalDsgFifo[g_NormalDsgFifoTail] = usDsgID;
20002ab0:	7e5762        	s16i	a6, a7, 252
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:83

    g_NormalDsgFifoTail = (g_NormalDsgFifoTail + 1) % NORMAL_DSG_FIFO_DEPTH;
20002ab3:	f24480        	rems	a4, a4, a8
20002ab6:	6c5542        	s16i	a4, a5, 216
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
20002ab9:	03ebd0        	rsr.prid	a13
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:149
#ifndef SIM
    U32 ulMcuID;
    U32 ulLockValue;
        
    ulMcuID = HAL_GetMcuId();
    if ((MCU0_ID == ulMcuID) || (MCU1_ID == ulMcuID) || (MCU2_ID == ulMcuID))
20002abc:	051d26        	beqi	a13, 1, 20002ac5 <L3_AllocResource+0xbc5>
20002abf:	022d26        	beqi	a13, 2, 20002ac5 <L3_AllocResource+0xbc5>
20002ac2:	0b3d66        	bnei	a13, 3, 20002ad1 <L3_AllocResource+0xbd1>
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:151
    {
        *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4) = ulMcuID;
20002ac5:	0020c0        	memw
20002ac8:	ce6cd2        	s32i	a13, a12, 0x338
20002acb:	000206        	j	20002ad7 <L3_AllocResource+0xbd7>

20002ace <L3_AllocResource+0xbce>:
20002ace:	000000                                        ...

20002ad1 <L3_AllocResource+0xbd1>:
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:155
    }
    else
    {
        DBG_Getch();
20002ad1:	f71101        	l32r	a0, 20000718 <_stext+0x18>
20002ad4:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:158
    }

    ulLockValue = *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4);
20002ad7:	0020c0        	memw
20002ada:	ce2c82        	l32i	a8, a12, 0x338
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:187
{
    BOOL bSts = FALSE;
    do
    {
        bSts = HAL_MultiCoreGetSpinLock(ucLockId);
    }while (FALSE == bSts);
20002add:	d89d87        	bne	a13, a8, 20002ab9 <L3_AllocResource+0xbb9>
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:278

#ifdef PATCH_HW_BUG_IN_ALLC_DSG_OR_HSG
    HAL_MultiCoreGetSpinLockWait(SPINLOCKID_ALLC_DSG_OR_HSG);
#endif

    l_pDsgReport->bsDsgTrigger = TRUE;
20002ae0:	f70f31        	l32r	a3, 2000071c <_stext+0x1c>
20002ae3:	382332        	l32i	a3, a3, 224
20002ae6:	0020c0        	memw
20002ae9:	f716d1        	l32r	a13, 20000744 <_stext+0x44>
20002aec:	03b8      	l32i.n	a11, a3, 0
20002aee:	10bbd0        	and	a11, a11, a13
20002af1:	f72cd1        	l32r	a13, 200007a4 <_stext+0xa4>
20002af4:	20bbd0        	or	a11, a11, a13
20002af7:	0020c0        	memw
20002afa:	03b9      	s32i.n	a11, a3, 0
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
History:
    20140917    Tobey  uniform coding style
------------------------------------------------------------------------------*/
void MULTI_CORE_TEXT_ATTR HAL_MultiCoreReleaseSpinLock(U8 ucLockId)
{
    *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4) = 0;
20002afc:	0020c0        	memw
20002aff:	0a0c      	movi.n	a10, 0
20002b01:	ce6ca2        	s32i	a10, a12, 0x338
20002b04:	0020c0        	memw
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:417
20002b07:	4198      	l32i.n	a9, a1, 16
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
20002b09:	ce6ca2        	s32i	a10, a12, 0x338
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:417
20002b0c:	171916        	beqz	a9, 20002c81 <L3_AllocResource+0xd81>
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:306
History:
    201409011    Tobey   uniform coding style
------------------------------------------------------------------------------*/
U32 HAL_GetNormalDsgAddr(U16 usDsgId)
{
    if(usDsgId >= NORMAL_DSG_NUM)
20002b0f:	ffa142        	movi	a4, 0x1ff
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:424
            return FALSE;
        }

        ucBuffPos = (3 - ptCtrlEntry->bsMultiStep) % 3;
        ucTmpSecLen = ptReqEntry->atBufDesc[ucBuffPos].bsSecLen;           
        ptDsgCtrl->bsDmaTotalLen = ucTmpSecLen;
20002b12:	6f58      	l32i.n	a5, a15, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:422
        if (FALSE == HAL_GetNormalDsg(&usNextDsgId))
        {
            return FALSE;
        }

        ucBuffPos = (3 - ptCtrlEntry->bsMultiStep) % 3;
20002b14:	3d0c      	movi.n	a13, 3
20002b16:	1f08      	l32i.n	a0, a15, 4
20002b18:	3c0c      	movi.n	a12, 3
20002b1a:	150a00        	extui	a0, a0, 26, 2
20002b1d:	c0cc00        	sub	a12, a12, a0
20002b20:	f2ccd0        	rems	a12, a12, a13
20002b23:	74c0c0        	extui	a12, a12, 0, 8
20002b26:	31c9      	s32i.n	a12, a1, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:423
        ucTmpSecLen = ptReqEntry->atBufDesc[ucBuffPos].bsSecLen;           
20002b28:	a0cce0        	addx4	a12, a12, a14
20002b2b:	170cd2        	l8ui	a13, a12, 23
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:426
        ptDsgCtrl->bsDmaTotalLen = ucTmpSecLen;

        ptDsgEntry = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(ptDsgCtrl->bsCurEngineID);
20002b2e:	0b1f02        	l16ui	a0, a15, 22
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:424
            return FALSE;
        }

        ucBuffPos = (3 - ptCtrlEntry->bsMultiStep) % 3;
        ucTmpSecLen = ptReqEntry->atBufDesc[ucBuffPos].bsSecLen;           
        ptDsgCtrl->bsDmaTotalLen = ucTmpSecLen;
20002b31:	604d54        	insbits	a5, a13, 4, 12
20002b34:	6f59      	s32i.n	a5, a15, 24
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:306
20002b36:	02b407        	bgeu	a4, a0, 20002b3c <L3_AllocResource+0xc3c>
20002b39:	0056c6        	j	20002c98 <L3_AllocResource+0xd98>
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:308
    {
        DBG_Getch();
20002b3c:	f6f621        	l32r	a2, 20000714 <_stext+0x14>
20002b3f:	1100c0        	slli	a0, a0, 4
20002b42:	800020        	add	a0, a0, a2
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:65
20002b45:	040c      	movi.n	a4, 0
20002b47:	0049      	s32i.n	a4, a0, 0
20002b49:	1049      	s32i.n	a4, a0, 4
20002b4b:	2049      	s32i.n	a4, a0, 8
20002b4d:	3049      	s32i.n	a4, a0, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:429

        ptDsgEntry = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(ptDsgCtrl->bsCurEngineID);
        COM_MemZero((U32*)ptDsgEntry,sizeof(NORMAL_DSG_ENTRY)>>2);
            
        ASSERT(FCMD_REQ_SUBTYPE_NORMAL == ptReqEntry->bsReqSubType);
20002b4f:	0e58      	l32i.n	a5, a14, 0
20002b51:	255550        	extui	a5, a5, 21, 3
20002b54:	550b      	addi.n	a5, a5, -1
20002b56:	13a556        	bnez	a5, 20002c94 <L3_AllocResource+0xd94>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:430
        ptDsgEntry->bsDramAddr = HAL_NfcGetDmaAddr(ptReqEntry->atBufDesc[ucBuffPos].bsBufID,
20002b59:	1078      	l32i.n	a7, a0, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:434
                                                   ptReqEntry->atBufDesc[ucBuffPos].bsSecStart,
                                                   BUF_SIZE_BITS);
        ptDsgEntry->bsXferByteLen = (ucTmpSecLen << SEC_SZ_BITS) - PHYPG_SZ;
        ptDsgEntry->bsNextDsgId   = usNextDsgId;
20002b5b:	051122        	l16ui	a2, a1, 10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:433
            
        ASSERT(FCMD_REQ_SUBTYPE_NORMAL == ptReqEntry->bsReqSubType);
        ptDsgEntry->bsDramAddr = HAL_NfcGetDmaAddr(ptReqEntry->atBufDesc[ucBuffPos].bsBufID,
                                                   ptReqEntry->atBufDesc[ucBuffPos].bsSecStart,
                                                   BUF_SIZE_BITS);
        ptDsgEntry->bsXferByteLen = (ucTmpSecLen << SEC_SZ_BITS) - PHYPG_SZ;
20002b5e:	0048      	l32i.n	a4, a0, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:430

        ptDsgEntry = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(ptDsgCtrl->bsCurEngineID);
        COM_MemZero((U32*)ptDsgEntry,sizeof(NORMAL_DSG_ENTRY)>>2);
            
        ASSERT(FCMD_REQ_SUBTYPE_NORMAL == ptReqEntry->bsReqSubType);
        ptDsgEntry->bsDramAddr = HAL_NfcGetDmaAddr(ptReqEntry->atBufDesc[ucBuffPos].bsBufID,
20002b60:	160c62        	l8ui	a6, a12, 22
20002b63:	0a1c82        	l16ui	a8, a12, 20
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:433
                                                   ptReqEntry->atBufDesc[ucBuffPos].bsSecStart,
                                                   BUF_SIZE_BITS);
        ptDsgEntry->bsXferByteLen = (ucTmpSecLen << SEC_SZ_BITS) - PHYPG_SZ;
20002b66:	115d70        	slli	a5, a13, 9
20002b69:	c0d552        	addmi	a5, a5, 0xffffc000
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:430

        ptDsgEntry = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(ptDsgCtrl->bsCurEngineID);
        COM_MemZero((U32*)ptDsgEntry,sizeof(NORMAL_DSG_ENTRY)>>2);
            
        ASSERT(FCMD_REQ_SUBTYPE_NORMAL == ptReqEntry->bsReqSubType);
        ptDsgEntry->bsDramAddr = HAL_NfcGetDmaAddr(ptReqEntry->atBufDesc[ucBuffPos].bsBufID,
20002b6c:	118800        	slli	a8, a8, 16
20002b6f:	116670        	slli	a6, a6, 9
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:433
                                                   ptReqEntry->atBufDesc[ucBuffPos].bsSecStart,
                                                   BUF_SIZE_BITS);
        ptDsgEntry->bsXferByteLen = (ucTmpSecLen << SEC_SZ_BITS) - PHYPG_SZ;
20002b72:	e3e544        	insbits	a4, a5, 14, 31
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:434
        ptDsgEntry->bsNextDsgId   = usNextDsgId;
20002b75:	400244        	insbits	a4, a2, 0, 8
20002b78:	0049      	s32i.n	a4, a0, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:430

        ptDsgEntry = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(ptDsgCtrl->bsCurEngineID);
        COM_MemZero((U32*)ptDsgEntry,sizeof(NORMAL_DSG_ENTRY)>>2);
            
        ASSERT(FCMD_REQ_SUBTYPE_NORMAL == ptReqEntry->bsReqSubType);
        ptDsgEntry->bsDramAddr = HAL_NfcGetDmaAddr(ptReqEntry->atBufDesc[ucBuffPos].bsBufID,
20002b7a:	668a      	add.n	a6, a6, a8
20002b7c:	000764        	insbits	a6, a7, 0, 0
20002b7f:	1069      	s32i.n	a6, a0, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:434
                                                   ptReqEntry->atBufDesc[ucBuffPos].bsSecStart,
                                                   BUF_SIZE_BITS);
        ptDsgEntry->bsXferByteLen = (ucTmpSecLen << SEC_SZ_BITS) - PHYPG_SZ;
        ptDsgEntry->bsNextDsgId   = usNextDsgId;
20002b81:	0b1fa2        	l16ui	a10, a15, 22
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:350
    else
    {
        DBG_Getch();
    }
#else
    l_pDsgReport->bsDsgValue = ucStsValue;
20002b84:	0020c0        	memw
20002b87:	03b8      	l32i.n	a11, a3, 0
20002b89:	ee7c      	movi.n	a14, -2
20002b8b:	10bbe0        	and	a11, a11, a14
20002b8e:	1e0c      	movi.n	a14, 1
20002b90:	20bbe0        	or	a11, a11, a14
20002b93:	0020c0        	memw
20002b96:	03b9      	s32i.n	a11, a3, 0
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:351
    l_pDsgReport->bsDsgWrIndex = usDsgId;
20002b98:	0020c0        	memw
20002b9b:	0398      	l32i.n	a9, a3, 0
20002b9d:	421a94        	insbits	a9, a10, 1, 10
20002ba0:	0020c0        	memw
20002ba3:	0399      	s32i.n	a9, a3, 0
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:352
    l_pDsgReport->bsDsgWrEn = TRUE;
20002ba5:	0020c0        	memw
20002ba8:	f70c81        	l32r	a8, 200007d8 <_stext+0xd8>
20002bab:	0378      	l32i.n	a7, a3, 0
20002bad:	107780        	and	a7, a7, a8
20002bb0:	f70b81        	l32r	a8, 200007dc <_stext+0xdc>
20002bb3:	207780        	or	a7, a7, a8
20002bb6:	0020c0        	memw
20002bb9:	0379      	s32i.n	a7, a3, 0
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:306
History:
    201409011    Tobey   uniform coding style
------------------------------------------------------------------------------*/
U32 HAL_GetNormalDsgAddr(U16 usDsgId)
{
    if(usDsgId >= NORMAL_DSG_NUM)
20002bbb:	ffa162        	movi	a6, 0x1ff
20002bbe:	02b627        	bgeu	a6, a2, 20002bc4 <L3_AllocResource+0xcc4>
20002bc1:	0039c6        	j	20002cac <L3_AllocResource+0xdac>
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:308
    {
        DBG_Getch();
20002bc4:	f6d441        	l32r	a4, 20000714 <_stext+0x14>
20002bc7:	1102c0        	slli	a0, a2, 4
20002bca:	004a      	add.n	a0, a0, a4
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:65
20002bcc:	050c      	movi.n	a5, 0
20002bce:	0059      	s32i.n	a5, a0, 0
20002bd0:	1059      	s32i.n	a5, a0, 4
20002bd2:	2059      	s32i.n	a5, a0, 8
20002bd4:	3059      	s32i.n	a5, a0, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:441
        HAL_SetNormalDsgSts(ptDsgCtrl->bsCurEngineID, NORMAL_DSG_VALID);

        NORMAL_DSG_ENTRY *pt2ndDsgEntry = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(usNextDsgId);
        COM_MemZero((U32*)pt2ndDsgEntry, sizeof(NORMAL_DSG_ENTRY) >> 2);

        pt2ndDsgEntry->bsOntf = TRUE;
20002bd6:	1068      	l32i.n	a6, a0, 4
20002bd8:	170c      	movi.n	a7, 1
20002bda:	206670        	or	a6, a6, a7
20002bdd:	1069      	s32i.n	a6, a0, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:442
        pt2ndDsgEntry->bsDramAddr = (HAL_XoreGetParityPageAddr(ptCtrlEntry->bsXoreId) +
20002bdf:	080f52        	l8ui	a5, a15, 8
20002be2:	415550        	srli	a5, a5, 5
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:409
    return l_aXorE[ulXoreId].pStatusReg->bsDonePageCount;
}

U32 HAL_XoreGetParityPageAddr(U32 ulXoreId)
{
    ASSERT(ulXoreId < XORE_CNT);
20002be5:	0265b6        	bltui	a5, 6, 20002beb <L3_AllocResource+0xceb>
20002be8:	002f46        	j	20002ca9 <L3_AllocResource+0xda9>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:442
20002beb:	f70791        	l32r	a9, 20000808 <_stext+0x108>
20002bee:	11e5c0        	slli	a14, a5, 4
20002bf1:	f6ddd1        	l32r	a13, 20000768 <_stext+0x68>
20002bf4:	f70481        	l32r	a8, 20000804 <_stext+0x104>
20002bf7:	ddea      	add.n	a13, a13, a14
20002bf9:	7f2dd2        	l32i	a13, a13, 0x1fc
20002bfc:	0020c0        	memw
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:446
                                     (ucBuffPos * PHYPG_SZ) - OTFB_START_ADDRESS) >> 1;
        pt2ndDsgEntry->bsXferByteLen = PHYPG_SZ;
        pt2ndDsgEntry->bsLast = TRUE;
        pt2ndDsgEntry->bsNextDsgId = INVALID_4F;
20002bff:	ffa1c2        	movi	a12, 0x1ff
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:444
        COM_MemZero((U32*)pt2ndDsgEntry, sizeof(NORMAL_DSG_ENTRY) >> 2);

        pt2ndDsgEntry->bsOntf = TRUE;
        pt2ndDsgEntry->bsDramAddr = (HAL_XoreGetParityPageAddr(ptCtrlEntry->bsXoreId) +
                                     (ucBuffPos * PHYPG_SZ) - OTFB_START_ADDRESS) >> 1;
        pt2ndDsgEntry->bsXferByteLen = PHYPG_SZ;
20002c02:	0078      	l32i.n	a7, a0, 0
20002c04:	f702e1        	l32r	a14, 2000080c <_stext+0x10c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:442

        NORMAL_DSG_ENTRY *pt2ndDsgEntry = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(usNextDsgId);
        COM_MemZero((U32*)pt2ndDsgEntry, sizeof(NORMAL_DSG_ENTRY) >> 2);

        pt2ndDsgEntry->bsOntf = TRUE;
        pt2ndDsgEntry->bsDramAddr = (HAL_XoreGetParityPageAddr(ptCtrlEntry->bsXoreId) +
20002c07:	3148      	l32i.n	a4, a1, 12
20002c09:	edd8      	l32i.n	a13, a13, 56
20002c0b:	114420        	slli	a4, a4, 14
20002c0e:	10dd90        	and	a13, a13, a9
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:444
                                     (ucBuffPos * PHYPG_SZ) - OTFB_START_ADDRESS) >> 1;
        pt2ndDsgEntry->bsXferByteLen = PHYPG_SZ;
20002c11:	6107e4        	insbits	a14, a7, 0, 13
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:442

        NORMAL_DSG_ENTRY *pt2ndDsgEntry = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(usNextDsgId);
        COM_MemZero((U32*)pt2ndDsgEntry, sizeof(NORMAL_DSG_ENTRY) >> 2);

        pt2ndDsgEntry->bsOntf = TRUE;
        pt2ndDsgEntry->bsDramAddr = (HAL_XoreGetParityPageAddr(ptCtrlEntry->bsXoreId) +
20002c14:	dd8a      	add.n	a13, a13, a8
20002c16:	dd4a      	add.n	a13, a13, a4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:444
                                     (ucBuffPos * PHYPG_SZ) - OTFB_START_ADDRESS) >> 1;
        pt2ndDsgEntry->bsXferByteLen = PHYPG_SZ;
20002c18:	00e9      	s32i.n	a14, a0, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:445
        pt2ndDsgEntry->bsLast = TRUE;
20002c1a:	00a242        	movi	a4, 0x200
20002c1d:	20ee40        	or	a14, a14, a4
20002c20:	00e9      	s32i.n	a14, a0, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:442

        NORMAL_DSG_ENTRY *pt2ndDsgEntry = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(usNextDsgId);
        COM_MemZero((U32*)pt2ndDsgEntry, sizeof(NORMAL_DSG_ENTRY) >> 2);

        pt2ndDsgEntry->bsOntf = TRUE;
        pt2ndDsgEntry->bsDramAddr = (HAL_XoreGetParityPageAddr(ptCtrlEntry->bsXoreId) +
20002c22:	f6e041        	l32r	a4, 200007a4 <_stext+0xa4>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:446
                                     (ucBuffPos * PHYPG_SZ) - OTFB_START_ADDRESS) >> 1;
        pt2ndDsgEntry->bsXferByteLen = PHYPG_SZ;
        pt2ndDsgEntry->bsLast = TRUE;
        pt2ndDsgEntry->bsNextDsgId = INVALID_4F;
20002c25:	20cec0        	or	a12, a14, a12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:442

        NORMAL_DSG_ENTRY *pt2ndDsgEntry = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(usNextDsgId);
        COM_MemZero((U32*)pt2ndDsgEntry, sizeof(NORMAL_DSG_ENTRY) >> 2);

        pt2ndDsgEntry->bsOntf = TRUE;
        pt2ndDsgEntry->bsDramAddr = (HAL_XoreGetParityPageAddr(ptCtrlEntry->bsXoreId) +
20002c28:	dd4a      	add.n	a13, a13, a4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:446
                                     (ucBuffPos * PHYPG_SZ) - OTFB_START_ADDRESS) >> 1;
        pt2ndDsgEntry->bsXferByteLen = PHYPG_SZ;
        pt2ndDsgEntry->bsLast = TRUE;
        pt2ndDsgEntry->bsNextDsgId = INVALID_4F;
20002c2a:	00c9      	s32i.n	a12, a0, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:442

        NORMAL_DSG_ENTRY *pt2ndDsgEntry = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(usNextDsgId);
        COM_MemZero((U32*)pt2ndDsgEntry, sizeof(NORMAL_DSG_ENTRY) >> 2);

        pt2ndDsgEntry->bsOntf = TRUE;
        pt2ndDsgEntry->bsDramAddr = (HAL_XoreGetParityPageAddr(ptCtrlEntry->bsXoreId) +
20002c2c:	0006d4        	insbits	a13, a6, 0, 0
20002c2f:	10d9      	s32i.n	a13, a0, 4
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:350
    else
    {
        DBG_Getch();
    }
#else
    l_pDsgReport->bsDsgValue = ucStsValue;
20002c31:	0020c0        	memw
20002c34:	eb7c      	movi.n	a11, -2
20002c36:	03a8      	l32i.n	a10, a3, 0
20002c38:	140c      	movi.n	a4, 1
20002c3a:	10aab0        	and	a10, a10, a11
20002c3d:	20aa40        	or	a10, a10, a4
20002c40:	0020c0        	memw
20002c43:	03a9      	s32i.n	a10, a3, 0
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:351
    l_pDsgReport->bsDsgWrIndex = usDsgId;
20002c45:	0020c0        	memw
20002c48:	0398      	l32i.n	a9, a3, 0
20002c4a:	421294        	insbits	a9, a2, 1, 10
20002c4d:	0020c0        	memw
20002c50:	0399      	s32i.n	a9, a3, 0
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:352
    l_pDsgReport->bsDsgWrEn = TRUE;
20002c52:	0020c0        	memw
20002c55:	f6e081        	l32r	a8, 200007d8 <_stext+0xd8>
20002c58:	0378      	l32i.n	a7, a3, 0
20002c5a:	107780        	and	a7, a7, a8
20002c5d:	f6df81        	l32r	a8, 200007dc <_stext+0xdc>
20002c60:	207780        	or	a7, a7, a8
20002c63:	0020c0        	memw
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:200
    else
    {
        bResult = L3_IFAllocDSG(ptCtrlEntry);
    }
  
    return bResult;
20002c66:	a108      	l32i.n	a0, a1, 40
20002c68:	b1c8      	l32i.n	a12, a1, 44
20002c6a:	c1d8      	l32i.n	a13, a1, 48
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:352
20002c6c:	0379      	s32i.n	a7, a3, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:450
        pt2ndDsgEntry->bsLast = TRUE;
        pt2ndDsgEntry->bsNextDsgId = INVALID_4F;

        HAL_SetNormalDsgSts(usNextDsgId, NORMAL_DSG_VALID);

        ptDsgCtrl->bsBdEngineDone = TRUE;
20002c6e:	6f28      	l32i.n	a2, a15, 24
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:200
20002c70:	d1e8      	l32i.n	a14, a1, 52
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:450
20002c72:	202240        	or	a2, a2, a4
20002c75:	6f29      	s32i.n	a2, a15, 24
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:200
20002c77:	e1f8      	l32i.n	a15, a1, 56
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:450
20002c79:	042020        	extui	a2, a2, 0, 1
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:200
20002c7c:	60c112        	addi	a1, a1, 96
20002c7f:	f00d      	ret.n

20002c81 <L3_AllocResource+0xd81>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:361
        return TRUE;
    }

    if (INVALID_4F == ptDsgCtrl->bsFstEngineID)
    {
        if (FALSE == HAL_GetNormalDsg(&usCurDsgId))
20002c81:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:200
20002c83:	b1c8      	l32i.n	a12, a1, 44
20002c85:	c1d8      	l32i.n	a13, a1, 48
20002c87:	d1e8      	l32i.n	a14, a1, 52
20002c89:	e1f8      	l32i.n	a15, a1, 56
20002c8b:	a108      	l32i.n	a0, a1, 40
20002c8d:	60c112        	addi	a1, a1, 96
20002c90:	f00d      	ret.n

20002c92 <L3_AllocResource+0xd92>:
	...

20002c94 <L3_AllocResource+0xd94>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:429
        ptDsgCtrl->bsDmaTotalLen = ucTmpSecLen;

        ptDsgEntry = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(ptDsgCtrl->bsCurEngineID);
        COM_MemZero((U32*)ptDsgEntry,sizeof(NORMAL_DSG_ENTRY)>>2);
            
        ASSERT(FCMD_REQ_SUBTYPE_NORMAL == ptReqEntry->bsReqSubType);
20002c94:	ffff06        	j	20002c94 <L3_AllocResource+0xd94>

20002c97 <L3_AllocResource+0xd97>:
	...

20002c98 <L3_AllocResource+0xd98>:
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:308
------------------------------------------------------------------------------*/
U32 HAL_GetNormalDsgAddr(U16 usDsgId)
{
    if(usDsgId >= NORMAL_DSG_NUM)
    {
        DBG_Getch();
20002c98:	f6a001        	l32r	a0, 20000718 <_stext+0x18>
20002c9b:	0000c0        	callx0	a0
20002c9e:	f69f31        	l32r	a3, 2000071c <_stext+0x1c>
20002ca1:	000c      	movi.n	a0, 0
20002ca3:	382332        	l32i	a3, a3, 224
20002ca6:	ffa6c6        	j	20002b45 <L3_AllocResource+0xc45>

20002ca9 <L3_AllocResource+0xda9>:
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:409
20002ca9:	ffff06        	j	20002ca9 <L3_AllocResource+0xda9>

20002cac <L3_AllocResource+0xdac>:
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:308
20002cac:	f69b01        	l32r	a0, 20000718 <_stext+0x18>
20002caf:	0000c0        	callx0	a0
20002cb2:	000c      	movi.n	a0, 0
20002cb4:	f69a31        	l32r	a3, 2000071c <_stext+0x1c>
20002cb7:	051122        	l16ui	a2, a1, 10
20002cba:	382332        	l32i	a3, a3, 224
20002cbd:	ffc2c6        	j	20002bcc <L3_AllocResource+0xccc>

20002cc0 <L3_AllocXore>:
L3_AllocXore():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:153
    }
    return FALSE;
}

BOOL L3_AllocXore(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
20002cc0:	e0c112        	addi	a1, a1, -32
20002cc3:	0561c2        	s32i	a12, a1, 20
20002cc6:	046102        	s32i	a0, a1, 16
20002cc9:	20c220        	or	a12, a2, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:154
    ASSERT(ptCtrlEntry != NULL);
20002ccc:	0d1216        	beqz	a2, 20002da1 <L3_AllocXore+0xe1>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:155
    ASSERT(ptCtrlEntry->ptReqEntry != NULL);
20002ccf:	0208      	l32i.n	a0, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:157

    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
20002cd1:	130c      	movi.n	a3, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:155
}

BOOL L3_AllocXore(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    ASSERT(ptCtrlEntry != NULL);
    ASSERT(ptCtrlEntry->ptReqEntry != NULL);
20002cd3:	0d1016        	beqz	a0, 20002da8 <L3_AllocXore+0xe8>
20002cd6:	2109      	s32i.n	a0, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:158

    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    U32 ulXorStripeId = ptReqEntry->bsXorStripeId;
20002cd8:	0028      	l32i.n	a2, a0, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:157
BOOL L3_AllocXore(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    ASSERT(ptCtrlEntry != NULL);
    ASSERT(ptCtrlEntry->ptReqEntry != NULL);

    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
20002cda:	f6b441        	l32r	a4, 200007ac <_stext+0xac>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:158
    U32 ulXorStripeId = ptReqEntry->bsXorStripeId;
20002cdd:	352820        	extui	a2, a2, 24, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:159
    ASSERT(ulXorStripeId < (U32)BIT(l_kXorStripeIdBits));
20002ce0:	a80442        	l8ui	a4, a4, 168
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:158
{
    ASSERT(ptCtrlEntry != NULL);
    ASSERT(ptCtrlEntry->ptReqEntry != NULL);

    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    U32 ulXorStripeId = ptReqEntry->bsXorStripeId;
20002ce3:	3129      	s32i.n	a2, a1, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:159
    ASSERT(ulXorStripeId < (U32)BIT(l_kXorStripeIdBits));
20002ce5:	401400        	ssl	a4
20002ce8:	a13300        	sll	a3, a3
20002ceb:	023237        	bltu	a2, a3, 20002cf1 <L3_AllocXore+0x31>
20002cee:	002c86        	j	20002da4 <L3_AllocXore+0xe4>
20002cf1:	013d      	mov.n	a3, a1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:160
    U32 ulXoreId = 0;
20002cf3:	050c      	movi.n	a5, 0
20002cf5:	0159      	s32i.n	a5, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:162

    if (TRUE == L3_XorMapFind(ulXorStripeId, &ulXoreId))
20002cf7:	01a185        	call0	20004710 <L3_XorMapFind..MJ_1482204275>
20002cfa:	620b      	addi.n	a6, a2, -1
20002cfc:	0bc616        	beqz	a6, 20002dbc <L3_AllocXore+0xfc>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:170
        PRINT_DEBUG("L3_AllocXore: Find Existing XOR engine:%d. XOR Stripe ID:%d.\n", ulXoreId,
                    ulXorStripeId);
        return TRUE;
    }

    FCMD_REQ_BLK_MOD eBlockMode = ptReqEntry->tFlashDesc.bsBlkMod;
20002cff:	2108      	l32i.n	a0, a1, 8
20002d01:	320c      	movi.n	a2, 3
20002d03:	4008      	l32i.n	a0, a0, 16
20002d05:	1129      	s32i.n	a2, a1, 4
20002d07:	150000        	extui	a0, a0, 16, 2
20002d0a:	708c      	beqz.n	a0, 20002d15 <L3_AllocXore+0x55>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:171
    ASSERT((eBlockMode == FCMD_REQ_SLC_BLK) || (eBlockMode == FCMD_REQ_MLC_BLK) ||
20002d0c:	051026        	beqi	a0, 1, 20002d15 <L3_AllocXore+0x55>
20002d0f:	fec022        	addi	a2, a0, -2
20002d12:	096256        	bnez	a2, 20002dac <L3_AllocXore+0xec>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:176
           (eBlockMode == FCMD_REQ_TLC_BLK));
    U32 ulXorPageSize = (eBlockMode == FCMD_REQ_TLC_BLK) ? 
                        PHYPG_SZ * INTRPG_PER_PGADDR * PGADDR_PER_PRG : PHYPG_SZ;

    if (TRUE == HAL_GetXore(ulXorPageSize, &ulXoreId))
20002d15:	f6a731        	l32r	a3, 200007b4 <_stext+0xb4>
20002d18:	f6be21        	l32r	a2, 20000810 <_stext+0x110>
20002d1b:	fec042        	addi	a4, a0, -2
20002d1e:	832340        	moveqz	a2, a3, a4
20002d21:	013d      	mov.n	a3, a1
20002d23:	ff0f85        	call0	20001e1c <HAL_GetXore>
20002d26:	021226        	beqi	a2, 1, 20002d2c <L3_AllocXore+0x6c>
20002d29:	0020c6        	j	20002db0 <L3_AllocXore+0xf0>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:178
    {
        FCMD_REQ_SUBTYPE eReqSubType = ptReqEntry->bsReqSubType;
20002d2c:	2108      	l32i.n	a0, a1, 8
20002d2e:	0008      	l32i.n	a0, a0, 0
20002d30:	250500        	extui	a0, a0, 21, 3
20002d33:	308c      	beqz.n	a0, 20002d3a <L3_AllocXore+0x7a>
20002d35:	200b      	addi.n	a2, a0, -1
20002d37:	095256        	bnez	a2, 20002dd0 <L3_AllocXore+0x110>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:179
        ASSERT((eReqSubType == FCMD_REQ_SUBTYPE_SINGLE) || (eReqSubType == FCMD_REQ_SUBTYPE_NORMAL));
20002d3a:	0128      	l32i.n	a2, a1, 0
20002d3c:	050c      	movi.n	a5, 0
20002d3e:	f69b31        	l32r	a3, 200007ac <_stext+0xac>
20002d41:	1148      	l32i.n	a4, a1, 4
20002d43:	a90332        	l8ui	a3, a3, 169
20002d46:	834500        	moveqz	a4, a5, a0
20002d49:	ff0585        	call0	20001da4 <HAL_XoreNfcModeConfig>
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:372
    return;
}

void HAL_XoreTrigger(U32 ulXoreId)
{
    ASSERT(ulXoreId < XORE_CNT);
20002d4c:	0138      	l32i.n	a3, a1, 0
20002d4e:	0263b6        	bltui	a3, 6, 20002d54 <L3_AllocXore+0x94>
20002d51:	001fc6        	j	20002dd4 <L3_AllocXore+0x114>
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:374

    l_aXorE[ulXoreId].pControlReg->bsStop = FALSE;
20002d54:	1183c0        	slli	a8, a3, 4
20002d57:	f6af71        	l32r	a7, 20000814 <_stext+0x114>
20002d5a:	fda0a2        	movi	a10, 253
20002d5d:	778a      	add.n	a7, a7, a8
20002d5f:	7f2772        	l32i	a7, a7, 0x1fc
20002d62:	0020c0        	memw
20002d65:	040792        	l8ui	a9, a7, 4
20002d68:	1099a0        	and	a9, a9, a10
20002d6b:	0020c0        	memw
20002d6e:	044792        	s8i	a9, a7, 4
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:375
    l_aXorE[ulXoreId].pControlReg->bsTrigger = TRUE;
20002d71:	fea082        	movi	a8, 254
20002d74:	0020c0        	memw
20002d77:	040762        	l8ui	a6, a7, 4
20002d7a:	106680        	and	a6, a6, a8
20002d7d:	180c      	movi.n	a8, 1
20002d7f:	206680        	or	a6, a6, a8
20002d82:	0020c0        	memw
20002d85:	044762        	s8i	a6, a7, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:186

        HAL_XoreNfcModeConfig(ulXoreId, XOR_PROTECT, l_kXorProtectRatio, ulPreRdyPageCnt,
                                FALSE);
        HAL_XoreTrigger(ulXoreId);

        L3_XorMapInsert(ulXorStripeId, ulXoreId);
20002d88:	3128      	l32i.n	a2, a1, 12
20002d8a:	feff05        	call0	20001d7c <L3_XorMapInsert..LJ_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:167
    if (TRUE == L3_XorMapFind(ulXorStripeId, &ulXoreId))
    {
        ptCtrlEntry->bsXoreId = ulXoreId;
        PRINT_DEBUG("L3_AllocXore: Find Existing XOR engine:%d. XOR Stripe ID:%d.\n", ulXoreId,
                    ulXorStripeId);
        return TRUE;
20002d8d:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:164
    ASSERT(ulXorStripeId < (U32)BIT(l_kXorStripeIdBits));
    U32 ulXoreId = 0;

    if (TRUE == L3_XorMapFind(ulXorStripeId, &ulXoreId))
    {
        ptCtrlEntry->bsXoreId = ulXoreId;
20002d8f:	01a8      	l32i.n	a10, a1, 0
20002d91:	2c98      	l32i.n	a9, a12, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:192
        ptCtrlEntry->bsXoreId = ulXoreId;
        PRINT_DEBUG("L3_AllocXore: Request New XOR engine:%d success.\n", ulXoreId);
        return TRUE;
    }

    return FALSE; 
20002d93:	4108      	l32i.n	a0, a1, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:164
    ASSERT(ulXorStripeId < (U32)BIT(l_kXorStripeIdBits));
    U32 ulXoreId = 0;

    if (TRUE == L3_XorMapFind(ulXorStripeId, &ulXoreId))
    {
        ptCtrlEntry->bsXoreId = ulXoreId;
20002d95:	235a94        	insbits	a9, a10, 5, 7
20002d98:	2c99      	s32i.n	a9, a12, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:192
        ptCtrlEntry->bsXoreId = ulXoreId;
        PRINT_DEBUG("L3_AllocXore: Request New XOR engine:%d success.\n", ulXoreId);
        return TRUE;
    }

    return FALSE; 
20002d9a:	51c8      	l32i.n	a12, a1, 20
20002d9c:	20c112        	addi	a1, a1, 32
20002d9f:	f00d      	ret.n

20002da1 <L3_AllocXore+0xe1>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:154
    return FALSE;
}

BOOL L3_AllocXore(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    ASSERT(ptCtrlEntry != NULL);
20002da1:	ffff06        	j	20002da1 <L3_AllocXore+0xe1>

20002da4 <L3_AllocXore+0xe4>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:159
    ASSERT(ptCtrlEntry->ptReqEntry != NULL);

    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    U32 ulXorStripeId = ptReqEntry->bsXorStripeId;
    ASSERT(ulXorStripeId < (U32)BIT(l_kXorStripeIdBits));
20002da4:	ffff06        	j	20002da4 <L3_AllocXore+0xe4>

20002da7 <L3_AllocXore+0xe7>:
	...

20002da8 <L3_AllocXore+0xe8>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:155
}

BOOL L3_AllocXore(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    ASSERT(ptCtrlEntry != NULL);
    ASSERT(ptCtrlEntry->ptReqEntry != NULL);
20002da8:	ffff06        	j	20002da8 <L3_AllocXore+0xe8>

20002dab <L3_AllocXore+0xeb>:
	...

20002dac <L3_AllocXore+0xec>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:171
                    ulXorStripeId);
        return TRUE;
    }

    FCMD_REQ_BLK_MOD eBlockMode = ptReqEntry->tFlashDesc.bsBlkMod;
    ASSERT((eBlockMode == FCMD_REQ_SLC_BLK) || (eBlockMode == FCMD_REQ_MLC_BLK) ||
20002dac:	ffff06        	j	20002dac <L3_AllocXore+0xec>

20002daf <L3_AllocXore+0xef>:
	...

20002db0 <L3_AllocXore+0xf0>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:192
        ptCtrlEntry->bsXoreId = ulXoreId;
        PRINT_DEBUG("L3_AllocXore: Request New XOR engine:%d success.\n", ulXoreId);
        return TRUE;
    }

    return FALSE; 
20002db0:	020c      	movi.n	a2, 0
20002db2:	51c8      	l32i.n	a12, a1, 20
20002db4:	4108      	l32i.n	a0, a1, 16
20002db6:	20c112        	addi	a1, a1, 32
20002db9:	f00d      	ret.n

20002dbb <L3_AllocXore+0xfb>:
	...

20002dbc <L3_AllocXore+0xfc>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:164
    ASSERT(ulXorStripeId < (U32)BIT(l_kXorStripeIdBits));
    U32 ulXoreId = 0;

    if (TRUE == L3_XorMapFind(ulXorStripeId, &ulXoreId))
    {
        ptCtrlEntry->bsXoreId = ulXoreId;
20002dbc:	0108      	l32i.n	a0, a1, 0
20002dbe:	2cb8      	l32i.n	a11, a12, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:167
        PRINT_DEBUG("L3_AllocXore: Find Existing XOR engine:%d. XOR Stripe ID:%d.\n", ulXoreId,
                    ulXorStripeId);
        return TRUE;
20002dc0:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:164
    ASSERT(ulXorStripeId < (U32)BIT(l_kXorStripeIdBits));
    U32 ulXoreId = 0;

    if (TRUE == L3_XorMapFind(ulXorStripeId, &ulXoreId))
    {
        ptCtrlEntry->bsXoreId = ulXoreId;
20002dc2:	2350b4        	insbits	a11, a0, 5, 7
20002dc5:	2cb9      	s32i.n	a11, a12, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:192
        ptCtrlEntry->bsXoreId = ulXoreId;
        PRINT_DEBUG("L3_AllocXore: Request New XOR engine:%d success.\n", ulXoreId);
        return TRUE;
    }

    return FALSE; 
20002dc7:	51c8      	l32i.n	a12, a1, 20
20002dc9:	4108      	l32i.n	a0, a1, 16
20002dcb:	20c112        	addi	a1, a1, 32
20002dce:	f00d      	ret.n

20002dd0 <L3_AllocXore+0x110>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:179
                        PHYPG_SZ * INTRPG_PER_PGADDR * PGADDR_PER_PRG : PHYPG_SZ;

    if (TRUE == HAL_GetXore(ulXorPageSize, &ulXoreId))
    {
        FCMD_REQ_SUBTYPE eReqSubType = ptReqEntry->bsReqSubType;
        ASSERT((eReqSubType == FCMD_REQ_SUBTYPE_SINGLE) || (eReqSubType == FCMD_REQ_SUBTYPE_NORMAL));
20002dd0:	ffff06        	j	20002dd0 <L3_AllocXore+0x110>

20002dd3 <L3_AllocXore+0x113>:
	...

20002dd4 <L3_AllocXore+0x114>:
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:372
    return;
}

void HAL_XoreTrigger(U32 ulXoreId)
{
    ASSERT(ulXoreId < XORE_CNT);
20002dd4:	ffff06        	j	20002dd4 <L3_AllocXore+0x114>

20002dd7 <L3_AllocXore+0x117>:
	...

20002dd8 <L3_IsNeedDoXor>:
L3_IsNeedDoXor():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:99
    l_aXorMapTable[ulValue] = BIT(l_kXorStripeIdBits);
    return;
}

BOOL L3_IsNeedDoXor(const FCMD_REQ_ENTRY *ptReqEntry)
{
20002dd8:	929c      	beqz.n	a2, 20002df5 <L3_IsNeedDoXor+0x1d>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:102
    ASSERT(ptReqEntry != NULL);

    if ((FCMD_REQ_TYPE_WRITE == ptReqEntry->bsReqType) && (TRUE == ptReqEntry->bsXorEn))
20002dda:	0248      	l32i.n	a4, a2, 0
20002ddc:	253240        	extui	a3, a4, 18, 3
20002ddf:	53dc      	bnez.n	a3, 20002df8 <L3_IsNeedDoXor+0x20>
20002de1:	1374e7        	bbci	a4, 30, 20002df8 <L3_IsNeedDoXor+0x20>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:105
    {
        // For TLC only the first program cycle need to do XOR.
        FCMD_REQ_BLK_MOD eBlockMode = ptReqEntry->tFlashDesc.bsBlkMod;
20002de4:	4228      	l32i.n	a2, a2, 16
20002de6:	152020        	extui	a2, a2, 16, 2
20002de9:	428c      	beqz.n	a2, 20002df1 <L3_IsNeedDoXor+0x19>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:106
        ASSERT((eBlockMode == FCMD_REQ_SLC_BLK) || (eBlockMode == FCMD_REQ_MLC_BLK) ||
20002deb:	021226        	beqi	a2, 1, 20002df1 <L3_IsNeedDoXor+0x19>
20002dee:	0a2266        	bnei	a2, 2, 20002dfc <L3_IsNeedDoXor+0x24>

20002df1 <L3_IsNeedDoXor+0x19>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:113

        if (eBlockMode == FCMD_REQ_TLC_BLK)
        {
            if (0 == HAL_FlashGetTlcPrgCycle(ptReqEntry->tFlashDesc.bsVirPage))
            {
                return TRUE;
20002df1:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:119
            }
            return FALSE;
        }
        return TRUE;
    }
    return FALSE;
20002df3:	f00d      	ret.n

20002df5 <L3_IsNeedDoXor+0x1d>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:100
    return;
}

BOOL L3_IsNeedDoXor(const FCMD_REQ_ENTRY *ptReqEntry)
{
    ASSERT(ptReqEntry != NULL);
20002df5:	ffff06        	j	20002df5 <L3_IsNeedDoXor+0x1d>

20002df8 <L3_IsNeedDoXor+0x20>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:119
            }
            return FALSE;
        }
        return TRUE;
    }
    return FALSE;
20002df8:	020c      	movi.n	a2, 0
20002dfa:	f00d      	ret.n

20002dfc <L3_IsNeedDoXor+0x24>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:106

    if ((FCMD_REQ_TYPE_WRITE == ptReqEntry->bsReqType) && (TRUE == ptReqEntry->bsXorEn))
    {
        // For TLC only the first program cycle need to do XOR.
        FCMD_REQ_BLK_MOD eBlockMode = ptReqEntry->tFlashDesc.bsBlkMod;
        ASSERT((eBlockMode == FCMD_REQ_SLC_BLK) || (eBlockMode == FCMD_REQ_MLC_BLK) ||
20002dfc:	ffff06        	j	20002dfc <L3_IsNeedDoXor+0x24>

20002dff <L3_IsNeedDoXor+0x27>:
	...

20002e00 <L3_IsTlcXor6DsgIssue>:
L3_IsTlcXor6DsgIssue():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:138
}

// The code that enabled by this function only is used to pach the TLC XOR 6 DSG issue, so if this
// hardware bug were fixed, these code would be removed.
BOOL L3_IsTlcXor6DsgIssue(const FCMD_REQ_ENTRY *ptReqEntry)
{
20002e00:	f0c112        	addi	a1, a1, -16
20002e03:	11c9      	s32i.n	a12, a1, 4
20002e05:	0109      	s32i.n	a0, a1, 0
20002e07:	02cd      	mov.n	a12, a2
20002e09:	32ac      	beqz.n	a2, 20002e30 <L3_IsTlcXor6DsgIssue+0x30>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:141
    ASSERT(ptReqEntry != NULL);

    FCMD_REQ_BLK_MOD eBlockMode = ptReqEntry->tFlashDesc.bsBlkMod;
20002e0b:	4208      	l32i.n	a0, a2, 16
20002e0d:	150000        	extui	a0, a0, 16, 2
20002e10:	50ac      	beqz.n	a0, 20002e39 <L3_IsTlcXor6DsgIssue+0x39>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:142
    ASSERT((eBlockMode == FCMD_REQ_SLC_BLK) || (eBlockMode == FCMD_REQ_MLC_BLK) ||
20002e12:	231026        	beqi	a0, 1, 20002e39 <L3_IsTlcXor6DsgIssue+0x39>
20002e15:	1b2066        	bnei	a0, 2, 20002e34 <L3_IsTlcXor6DsgIssue+0x34>

20002e18 <L3_IsTlcXor6DsgIssue+0x18>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:128
// the 1st program stage of the command containing XOR data of TLC write.
BOOL L3_IsDataDisperse(const FCMD_REQ_ENTRY *ptReqEntry)
{
    ASSERT(ptReqEntry != NULL);

    if ((TRUE == L3_IsNeedDoXor(ptReqEntry)) && (TRUE == ptReqEntry->bsContainXorData))
20002e18:	0c2d      	mov.n	a2, a12
20002e1a:	fffbc5        	call0	20002dd8 <L3_IsNeedDoXor>
20002e1d:	1b1266        	bnei	a2, 1, 20002e3c <L3_IsTlcXor6DsgIssue+0x3c>
20002e20:	0c28      	l32i.n	a2, a12, 0
20002e22:	1662d7        	bbci	a2, 13, 20002e3c <L3_IsTlcXor6DsgIssue+0x3c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:147
    ASSERT((eBlockMode == FCMD_REQ_SLC_BLK) || (eBlockMode == FCMD_REQ_MLC_BLK) ||
           (eBlockMode == FCMD_REQ_TLC_BLK));

    if ((eBlockMode == FCMD_REQ_TLC_BLK) && (TRUE == L3_IsDataDisperse(ptReqEntry)))
    {
        return TRUE;
20002e25:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:149
    }
    return FALSE;
20002e27:	11c8      	l32i.n	a12, a1, 4
20002e29:	0108      	l32i.n	a0, a1, 0
20002e2b:	10c112        	addi	a1, a1, 16
20002e2e:	f00d      	ret.n

20002e30 <L3_IsTlcXor6DsgIssue+0x30>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:139

// The code that enabled by this function only is used to pach the TLC XOR 6 DSG issue, so if this
// hardware bug were fixed, these code would be removed.
BOOL L3_IsTlcXor6DsgIssue(const FCMD_REQ_ENTRY *ptReqEntry)
{
    ASSERT(ptReqEntry != NULL);
20002e30:	ffff06        	j	20002e30 <L3_IsTlcXor6DsgIssue+0x30>

20002e33 <L3_IsTlcXor6DsgIssue+0x33>:
	...

20002e34 <L3_IsTlcXor6DsgIssue+0x34>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:142

    FCMD_REQ_BLK_MOD eBlockMode = ptReqEntry->tFlashDesc.bsBlkMod;
    ASSERT((eBlockMode == FCMD_REQ_SLC_BLK) || (eBlockMode == FCMD_REQ_MLC_BLK) ||
20002e34:	ffff06        	j	20002e34 <L3_IsTlcXor6DsgIssue+0x34>

20002e37 <L3_IsTlcXor6DsgIssue+0x37>:
	...

20002e39 <L3_IsTlcXor6DsgIssue+0x39>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:145
           (eBlockMode == FCMD_REQ_TLC_BLK));

    if ((eBlockMode == FCMD_REQ_TLC_BLK) && (TRUE == L3_IsDataDisperse(ptReqEntry)))
20002e39:	db2026        	beqi	a0, 2, 20002e18 <L3_IsTlcXor6DsgIssue+0x18>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:149
    {
        return TRUE;
    }
    return FALSE;
20002e3c:	020c      	movi.n	a2, 0
20002e3e:	11c8      	l32i.n	a12, a1, 4
20002e40:	0108      	l32i.n	a0, a1, 0
20002e42:	10c112        	addi	a1, a1, 16
20002e45:	f00d      	ret.n

20002e47 <L3_IsTlcXor6DsgIssue+0x47>:
	...

20002e48 <L3_IFUpdtIntrCtrl..HG_1482204275>:
L3_IFUpdtIntrCtrl():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1602
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
LOCAL void L3_IFUpdtIntrCtrl(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U8 ucTLun = ptCtrlEntry->ptReqEntry->bsTLun;
20002e48:	0258      	l32i.n	a5, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1604
    
    if (TRUE == L3_IFIsRecycled(ptCtrlEntry))
20002e4a:	0538      	l32i.n	a3, a5, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1602
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
LOCAL void L3_IFUpdtIntrCtrl(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U8 ucTLun = ptCtrlEntry->ptReqEntry->bsTLun;
20002e4c:	000552        	l8ui	a5, a5, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1604
    
    if (TRUE == L3_IFIsRecycled(ptCtrlEntry))
20002e4f:	153c30        	extui	a3, a3, 28, 2
20002e52:	1e1366        	bnei	a3, 1, 20002e74 <L3_IFUpdtIntrCtrl..HG_1482204275+0x2c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:385
    ASSERT(INVALID_DPTR == ucRptr || NFCQ_DEPTH > ucRptr);

    ptDptr = (FALSE == bBak) ? g_ptFCmdIntrDptr : g_ptFCmdIntrDptrBak;

    //FIRMWARE_LogInfo("TLun#%d IntrRptr#0x%x 0x%x\n", ucTLun, ptDptr->atIntrQDptr[ucTLun].ucRptr, ucRptr);
    ASSERT(INVALID_DPTR == ucRptr || INVALID_DPTR == ptDptr->atIntrQDptr[ucTLun].ucRptr || ucRptr == ptDptr->atIntrQDptr[ucTLun].ucRptr);
20002e55:	f63171        	l32r	a7, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1606
    {
        L3_FCMDQSetIntrRptr(ucTLun, ptCtrlEntry->bsCtrlPtr, FALSE);
20002e58:	ffa082        	movi	a8, 255
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:385
20002e5b:	1e2772        	l32i	a7, a7, 120
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1606
20002e5e:	012222        	l32i	a2, a2, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:385
20002e61:	a07570        	addx4	a7, a5, a7
20002e64:	010762        	l8ui	a6, a7, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1606
20002e67:	152c20        	extui	a2, a2, 28, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:385
20002e6a:	0a1687        	beq	a6, a8, 20002e78 <L3_IFUpdtIntrCtrl..HG_1482204275+0x30>
20002e6d:	071267        	beq	a2, a6, 20002e78 <L3_IFUpdtIntrCtrl..HG_1482204275+0x30>

20002e70 <L3_IFUpdtIntrCtrl..HG_1482204275+0x28>:
20002e70:	ffff06        	j	20002e70 <L3_IFUpdtIntrCtrl..HG_1482204275+0x28>

20002e73 <L3_IFUpdtIntrCtrl..HG_1482204275+0x2b>:
	...

20002e74 <L3_IFUpdtIntrCtrl..HG_1482204275+0x2c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1609
    }

    return;
20002e74:	f00d      	ret.n

20002e76 <L3_IFUpdtIntrCtrl..HG_1482204275+0x2e>:
	...

20002e78 <L3_IFUpdtIntrCtrl..HG_1482204275+0x30>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:386
    ptDptr->atIntrQDptr[ucTLun].ucRptr = ucRptr;
20002e78:	014722        	s8i	a2, a7, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:388

    if (NFCQ_DEPTH > ucRptr)
20002e7b:	f47c      	movi.n	a4, -1
20002e7d:	401500        	ssl	a5
20002e80:	160c      	movi.n	a6, 1
20002e82:	f66551        	l32r	a5, 20000818 <_stext+0x118>
20002e85:	a16600        	sll	a6, a6
20002e88:	304640        	xor	a4, a6, a4
20002e8b:	2242f6        	bgeui	a2, 4, 20002eb1 <L3_IFUpdtIntrCtrl..HG_1482204275+0x69>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:262
void L3_SchSetStsBit(U8 ucTLun, STS_BITMAP_TYPE eStsBmpType)
{
    U8 ucPU = L3_GET_PU(ucTLun);
    U8 ucLunInPU = L3_GET_LUN_IN_PU(ucTLun);

    l_aTLunStsBmp[eStsBmpType][ucLunInPU] |= 1 << ucPU;
20002e8e:	0020c0        	memw
20002e91:	7f2582        	l32i	a8, a5, 0x1fc
20002e94:	208860        	or	a8, a8, a6
20002e97:	0020c0        	memw
20002e9a:	7f6582        	s32i	a8, a5, 0x1fc
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:409
void L3_SchClrArbBit(U8 ucTLun, ARB_BITMAP_TYPE eArbBmpType)
{
    U8 ucPU = L3_GET_PU(ucTLun);
    U8 ucLunInPU = L3_GET_LUN_IN_PU(ucTLun);

    l_aTLunArbBmp[eArbBmpType][ucLunInPU] &= ~(1 << ucPU);
20002e9d:	f65f81        	l32r	a8, 2000081c <_stext+0x11c>
20002ea0:	0020c0        	memw
20002ea3:	7f2872        	l32i	a7, a8, 0x1fc
20002ea6:	107740        	and	a7, a7, a4
20002ea9:	0020c0        	memw
20002eac:	7f6872        	s32i	a7, a8, 0x1fc
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1609
20002eaf:	f00d      	ret.n

20002eb1 <L3_IFUpdtIntrCtrl..HG_1482204275+0x69>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:283
void L3_SchClrStsBit(U8 ucTLun, STS_BITMAP_TYPE eStsBmpType)
{
    U8 ucPU = L3_GET_PU(ucTLun);
    U8 ucLunInPU = L3_GET_LUN_IN_PU(ucTLun);

    l_aTLunStsBmp[eStsBmpType][ucLunInPU] &= ~(1 << ucPU);
20002eb1:	0020c0        	memw
20002eb4:	7f2592        	l32i	a9, a5, 0x1fc
20002eb7:	109940        	and	a9, a9, a4
20002eba:	0020c0        	memw
20002ebd:	7f6592        	s32i	a9, a5, 0x1fc
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1609
20002ec0:	f00d      	ret.n

20002ec2 <L3_IFUpdtIntrCtrl..HG_1482204275+0x7a>:
	...

20002ec4 <L3_IFConfigNFCQ..FG_1482204275>:
L3_IFConfigNFCQ():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1498
Usage      : 
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
LOCAL void L3_IFConfigNFCQ(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
20002ec4:	e0c112        	addi	a1, a1, -32
20002ec7:	6129      	s32i.n	a2, a1, 24
20002ec9:	21c9      	s32i.n	a12, a1, 8
20002ecb:	51f9      	s32i.n	a15, a1, 20
20002ecd:	31d9      	s32i.n	a13, a1, 12
20002ecf:	41e9      	s32i.n	a14, a1, 16
20002ed1:	1109      	s32i.n	a0, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:910
LOCAL NFCQ_ENTRY *L3_IFAllocNFCQ(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U8 ucTLun;
    NFCQ_ENTRY *ptNfcqEntry;

    ucTLun = ptCtrlEntry->ptReqEntry->bsTLun;        
20002ed3:	02e8      	l32i.n	a14, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
20002ed5:	f61301        	l32r	a0, 20000724 <_stext+0x24>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:910
20002ed8:	000ee2        	l8ui	a14, a14, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1498
Usage      : 
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
LOCAL void L3_IFConfigNFCQ(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
20002edb:	f610d1        	l32r	a13, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
20002ede:	0e0a      	add.n	a0, a14, a0
20002ee0:	800002        	l8ui	a0, a0, 128
20002ee3:	3e2df2        	l32i	a15, a13, 248
20002ee6:	1100c0        	slli	a0, a0, 4
20002ee9:	ff0a      	add.n	a15, a15, a0
20002eeb:	0020c0        	memw
20002eee:	000ff2        	l8ui	a15, a15, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:911
{
    U8 ucTLun;
    NFCQ_ENTRY *ptNfcqEntry;

    ucTLun = ptCtrlEntry->ptReqEntry->bsTLun;        
    ptNfcqEntry = (NFCQ_ENTRY*)HAL_NfcGetNfcqEntryAddr(L3_GET_PU(ucTLun), L3_GET_LUN_IN_PU(ucTLun));
20002ef1:	3d2dd2        	l32i	a13, a13, 244
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
20002ef4:	41f6f0        	srli	a15, a15, 6
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:911
20002ef7:	b0eef0        	addx8	a14, a14, a15
20002efa:	11eea0        	slli	a14, a14, 6
20002efd:	ddea      	add.n	a13, a13, a14
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:408
History:
20150601    Kristin    Create
------------------------------------------------------------------------------*/
LOCAL BOOL DMAE_TEXT_ATTR HAL_DMAEParamCheck(U32 ulSrcAddr, U32 ulDesAddr, U32 ulLenByte)
{
    if ((0 != (ulDesAddr & 0xF)) || ((INVALID_8F != ulSrcAddr) && (0 != (ulSrcAddr & 0xF))) || (0 != (ulLenByte & 0xF)))
20002eff:	3400d0        	extui	a0, a13, 0, 4
20002f02:	e08c      	beqz.n	a0, 20002f14 <L3_IFConfigNFCQ..FG_1482204275+0x50>
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:740
------------------------------------------------------------------------------*/
void DMAE_TEXT_ATTR HAL_DMAESetValue(const U32 ulDesAddr,const U32 ulLenByte, U32 ulValue)
{
    if (FALSE == HAL_DMAEParamCheck(INVALID_8F, ulDesAddr, ulLenByte))
    {
        DBG_Printf("HAL_DMAESetValue parameter error: ulDesAddr=0x%x, ulLenByte=0x%x\n", ulDesAddr, ulLenByte);
20002f04:	f64721        	l32r	a2, 20000820 <_stext+0x120>
20002f07:	0d3d      	mov.n	a3, a13
20002f09:	044c      	movi.n	a4, 64
20002f0b:	07d585        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:741
        DBG_Getch();
20002f0e:	f60201        	l32r	a0, 20000718 <_stext+0x18>
20002f11:	0000c0        	callx0	a0

20002f14 <L3_IFConfigNFCQ..FG_1482204275+0x50>:
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:746
    }

#ifdef DMAE_ENABLE
    U32 ulCurSetLen;
    U32 ulCurDesAddr = ulDesAddr;
20002f14:	0dcd      	mov.n	a12, a13
20002f16:	01d9      	s32i.n	a13, a1, 0
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:749
    U32 ulRemainLen = ulLenByte;

    while (ulRemainLen > 0)
20002f18:	f619f1        	l32r	a15, 2000077c <_stext+0x7c>
20002f1b:	0e4c      	movi.n	a14, 64
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:751
    {
        if (ulRemainLen >= DMAE_ENTRY_MAX_LENGTH_IN_BYTE)
20002f1d:	63def0        	minu	a13, a14, a15
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
20002f20:	03eb40        	rsr.prid	a4
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:760
        else
        {
            ulCurSetLen = ulRemainLen;
        }

        while (FALSE == HAL_DMAESetValueLenLimit(ulCurDesAddr, ulCurSetLen, ulValue, (U8)HAL_GetMcuId()))
20002f23:	0c2d      	mov.n	a2, a12
20002f25:	203dd0        	or	a3, a13, a13
20002f28:	744040        	extui	a4, a4, 0, 8
20002f2b:	feafc5        	call0	20001a28 <HAL_DMAESetValueLenLimit..CM_1482204275>
20002f2e:	e2cc      	bnez.n	a2, 20002f40 <L3_IFConfigNFCQ..FG_1482204275+0x7c>
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
20002f30:	03eb40        	rsr.prid	a4
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:760
20002f33:	0c2d      	mov.n	a2, a12
20002f35:	0d3d      	mov.n	a3, a13
20002f37:	744040        	extui	a4, a4, 0, 8
20002f3a:	feaec5        	call0	20001a28 <HAL_DMAESetValueLenLimit..CM_1482204275>
20002f3d:	fef216        	beqz	a2, 20002f30 <L3_IFConfigNFCQ..FG_1482204275+0x6c>
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:765
        {
        }

        ulRemainLen -= ulCurSetLen;
        ulCurDesAddr += ulCurSetLen;
20002f40:	cdca      	add.n	a12, a13, a12
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:764

        while (FALSE == HAL_DMAESetValueLenLimit(ulCurDesAddr, ulCurSetLen, ulValue, (U8)HAL_GetMcuId()))
        {
        }

        ulRemainLen -= ulCurSetLen;
20002f42:	c0eed0        	sub	a14, a14, a13
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:749
#ifdef DMAE_ENABLE
    U32 ulCurSetLen;
    U32 ulCurDesAddr = ulDesAddr;
    U32 ulRemainLen = ulLenByte;

    while (ulRemainLen > 0)
20002f45:	fd4e56        	bnez	a14, 20002f1d <L3_IFConfigNFCQ..FG_1482204275+0x59>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1503
{
    NFCQ_ENTRY *ptNfcqEntry;

    ptNfcqEntry = L3_IFAllocNFCQ(ptCtrlEntry);
    
    L3_IFSetNFCQComm(ptNfcqEntry, ptCtrlEntry);
20002f48:	f637d1        	l32r	a13, 20000824 <_stext+0x124>
20002f4b:	7e0c      	movi.n	a14, 7
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1337
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
LOCAL void L3_IFSetNFCQComm(NFCQ_ENTRY *ptNfcqEntry, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
20002f4d:	61c8      	l32i.n	a12, a1, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1503
{
    NFCQ_ENTRY *ptNfcqEntry;

    ptNfcqEntry = L3_IFAllocNFCQ(ptCtrlEntry);
    
    L3_IFSetNFCQComm(ptNfcqEntry, ptCtrlEntry);
20002f4f:	270c      	movi.n	a7, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1337
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
LOCAL void L3_IFSetNFCQComm(NFCQ_ENTRY *ptNfcqEntry, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
20002f51:	0cc8      	l32i.n	a12, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1503
{
    NFCQ_ENTRY *ptNfcqEntry;

    ptNfcqEntry = L3_IFAllocNFCQ(ptCtrlEntry);
    
    L3_IFSetNFCQComm(ptNfcqEntry, ptCtrlEntry);
20002f53:	04a162        	movi	a6, 0x104
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1339
==============================================================================*/
LOCAL void L3_IFSetNFCQComm(NFCQ_ENTRY *ptNfcqEntry, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;

    if (FCMD_REQ_SUBTYPE_SETFEATURE == ptCtrlEntry->ptReqEntry->bsReqSubType)
20002f56:	002c02        	l32i	a0, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1503
{
    NFCQ_ENTRY *ptNfcqEntry;

    ptNfcqEntry = L3_IFAllocNFCQ(ptCtrlEntry);
    
    L3_IFSetNFCQComm(ptNfcqEntry, ptCtrlEntry);
20002f59:	91a0f2        	movi	a15, 145
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1339
==============================================================================*/
LOCAL void L3_IFSetNFCQComm(NFCQ_ENTRY *ptNfcqEntry, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;

    if (FCMD_REQ_SUBTYPE_SETFEATURE == ptCtrlEntry->ptReqEntry->bsReqSubType)
20002f5c:	255500        	extui	a5, a0, 21, 3
20002f5f:	f9c582        	addi	a8, a5, -7
20002f62:	137816        	beqz	a8, 2000309d <L3_IFConfigNFCQ..FG_1482204275+0x1d9>
20002f65:	fec522        	addi	a2, a5, -2
20002f68:	178216        	beqz	a2, 200030e4 <L3_IFConfigNFCQ..FG_1482204275+0x220>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1363
        ASSERT(FCMD_REQ_TYPE_WRITE == ptCtrlEntry->ptReqEntry->bsReqType);
        ASSERT(FCMD_REQ_TLC_BLK == ptCtrlEntry->ptReqEntry->tFlashDesc.bsBlkMod);
        
        ptNfcqEntry->bsDmaByteEn = TRUE;
    }
    else if (FCMD_REQ_TYPE_ERASE != ptReqEntry->bsReqType)
20002f6b:	253200        	extui	a3, a0, 18, 3
20002f6e:	4f2326        	beqi	a3, 2, 20002fc1 <L3_IFConfigNFCQ..FG_1482204275+0xfd>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1365
    {
        L3_IFSetNFCQScrmable(ptNfcqEntry, ptCtrlEntry);
20002f71:	002122        	l32i	a2, a1, 0
20002f74:	6138      	l32i.n	a3, a1, 24
20002f76:	fe7f85        	call0	20001770 <L3_IFSetNFCQScrmable..LF_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1367

        L3_IFSetNFCQDataTxfer(ptNfcqEntry, ptCtrlEntry);
20002f79:	002122        	l32i	a2, a1, 0
20002f7c:	062132        	l32i	a3, a1, 24
20002f7f:	fe6905        	call0	20001610 <L3_IFSetNFCQDataTxfer..NF_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1369

        if (FCMD_REQ_TYPE_READ == ptReqEntry->bsReqType)
20002f82:	0c08      	l32i.n	a0, a12, 0
20002f84:	250200        	extui	a0, a0, 18, 3
20002f87:	1a1026        	beqi	a0, 1, 20002fa5 <L3_IFConfigNFCQ..FG_1482204275+0xe1>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1376
            ptNfcqEntry->bsBypassRdErr = ptCtrlEntry->bsBypassEcc;   
            /* add rawdata read */
            ptNfcqEntry->bsRawReadEn = ptCtrlEntry->bsRdRawData;
            //DBG_Printf("RawReadEn = %d\n",ptNfcqEntry->bsRawReadEn);
        }
        else if (FCMD_REQ_TYPE_WRITE == ptReqEntry->bsReqType)
20002f8a:	30fc      	bnez.n	a0, 20002fc1 <L3_IFConfigNFCQ..FG_1482204275+0xfd>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1378
        {
            if (TRUE == L3_IsNeedDoXor(ptCtrlEntry->ptReqEntry))
20002f8c:	6128      	l32i.n	a2, a1, 24
20002f8e:	f03d      	nop.n
20002f90:	0228      	l32i.n	a2, a2, 0
20002f92:	ffe445        	call0	20002dd8 <L3_IsNeedDoXor>
20002f95:	281266        	bnei	a2, 1, 20002fc1 <L3_IFConfigNFCQ..FG_1482204275+0xfd>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1380
            {
                L3_IFSetNFCQXor(ptNfcqEntry, ptCtrlEntry);
20002f98:	0128      	l32i.n	a2, a1, 0
20002f9a:	062132        	l32i	a3, a1, 24
20002f9d:	fe6105        	call0	200015b0 <L3_IFSetNFCQXor>
20002fa0:	000746        	j	20002fc1 <L3_IFConfigNFCQ..FG_1482204275+0xfd>

20002fa3 <L3_IFConfigNFCQ..FG_1482204275+0xdf>:
	...

20002fa5 <L3_IFConfigNFCQ..FG_1482204275+0xe1>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1371

        L3_IFSetNFCQDataTxfer(ptNfcqEntry, ptCtrlEntry);

        if (FCMD_REQ_TYPE_READ == ptReqEntry->bsReqType)
        {
            ptNfcqEntry->bsBypassRdErr = ptCtrlEntry->bsBypassEcc;   
20002fa5:	6158      	l32i.n	a5, a1, 24
20002fa7:	0148      	l32i.n	a4, a1, 0
20002fa9:	2578      	l32i.n	a7, a5, 8
20002fab:	5468      	l32i.n	a6, a4, 20
20002fad:	417970        	srli	a7, a7, 9
20002fb0:	011764        	insbits	a6, a7, 1, 1
20002fb3:	5469      	s32i.n	a6, a4, 20
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1373
            /* add rawdata read */
            ptNfcqEntry->bsRawReadEn = ptCtrlEntry->bsRdRawData;
20002fb5:	2558      	l32i.n	a5, a5, 8
20002fb7:	4438      	l32i.n	a3, a4, 16
20002fb9:	415850        	srli	a5, a5, 8
20002fbc:	b04534        	insbits	a3, a5, 20, 20
20002fbf:	4439      	s32i.n	a3, a4, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1385
                L3_IFSetNFCQXor(ptNfcqEntry, ptCtrlEntry);
            }
        }
    }
    
    if (TRUE == L3_IFIsEnableSsu0(ptCtrlEntry))
20002fc1:	6128      	l32i.n	a2, a1, 24
20002fc3:	fe5cc5        	call0	20001590 <L3_IFIsEnableSsu0..OF_1482204275>
20002fc6:	080c      	movi.n	a8, 0
20002fc8:	f618c1        	l32r	a12, 20000828 <_stext+0x128>
20002fcb:	3b1266        	bnei	a2, 1, 2000300a <L3_IFConfigNFCQ..FG_1482204275+0x146>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1389
    {
        ptNfcqEntry->bsSsu0En   = TRUE;
        ptNfcqEntry->bsSsu0Ontf = TRUE;
        ptNfcqEntry->bsSsu0Addr = L3_IFGetSsu0AddrOffSet(ptCtrlEntry->ptReqEntry);
20002fce:	6138      	l32i.n	a3, a1, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1387
        }
    }
    
    if (TRUE == L3_IFIsEnableSsu0(ptCtrlEntry))
    {
        ptNfcqEntry->bsSsu0En   = TRUE;
20002fd0:	00a152        	movi	a5, 0x100
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1389
        ptNfcqEntry->bsSsu0Ontf = TRUE;
        ptNfcqEntry->bsSsu0Addr = L3_IFGetSsu0AddrOffSet(ptCtrlEntry->ptReqEntry);
20002fd3:	f5d221        	l32r	a2, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1388
    }
    
    if (TRUE == L3_IFIsEnableSsu0(ptCtrlEntry))
    {
        ptNfcqEntry->bsSsu0En   = TRUE;
        ptNfcqEntry->bsSsu0Ontf = TRUE;
20002fd6:	01a8      	l32i.n	a10, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1389
        ptNfcqEntry->bsSsu0Addr = L3_IFGetSsu0AddrOffSet(ptCtrlEntry->ptReqEntry);
20002fd8:	1822b2        	l32i	a11, a2, 96
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1388
    }
    
    if (TRUE == L3_IFIsEnableSsu0(ptCtrlEntry))
    {
        ptNfcqEntry->bsSsu0En   = TRUE;
        ptNfcqEntry->bsSsu0Ontf = TRUE;
20002fdb:	6a68      	l32i.n	a6, a10, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1387
        }
    }
    
    if (TRUE == L3_IFIsEnableSsu0(ptCtrlEntry))
    {
        ptNfcqEntry->bsSsu0En   = TRUE;
20002fdd:	0a48      	l32i.n	a4, a10, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1388
        ptNfcqEntry->bsSsu0Ontf = TRUE;
20002fdf:	2066c0        	or	a6, a6, a12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1387
        }
    }
    
    if (TRUE == L3_IFIsEnableSsu0(ptCtrlEntry))
    {
        ptNfcqEntry->bsSsu0En   = TRUE;
20002fe2:	204450        	or	a4, a4, a5
20002fe5:	0a49      	s32i.n	a4, a10, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1388
        ptNfcqEntry->bsSsu0Ontf = TRUE;
20002fe7:	6a69      	s32i.n	a6, a10, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1389
        ptNfcqEntry->bsSsu0Addr = L3_IFGetSsu0AddrOffSet(ptCtrlEntry->ptReqEntry);
20002fe9:	0338      	l32i.n	a3, a3, 0
20002feb:	f228      	l32i.n	a2, a2, 60
20002fed:	000392        	l8ui	a9, a3, 0
20002ff0:	0338      	l32i.n	a3, a3, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1390
        ptNfcqEntry->bsSsu0Data = FCMD_REQ_STS_INIT;
20002ff2:	1a4a82        	s8i	a8, a10, 26
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1389
    
    if (TRUE == L3_IFIsEnableSsu0(ptCtrlEntry))
    {
        ptNfcqEntry->bsSsu0En   = TRUE;
        ptNfcqEntry->bsSsu0Ontf = TRUE;
        ptNfcqEntry->bsSsu0Addr = L3_IFGetSsu0AddrOffSet(ptCtrlEntry->ptReqEntry);
20002ff5:	150030        	extui	a0, a3, 16, 2
20002ff8:	043f30        	extui	a3, a3, 15, 1
20002ffb:	809930        	add	a9, a9, a3
20002ffe:	a09920        	addx4	a9, a9, a2
20003001:	809900        	add	a9, a9, a0
20003004:	c099b0        	sub	a9, a9, a11
20003007:	0c5a92        	s16i	a9, a10, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1393
        ptNfcqEntry->bsSsu0Data = FCMD_REQ_STS_INIT;
    }

    if (TRUE == L3_IFIsEnableSsu1(ptCtrlEntry))
2000300a:	6128      	l32i.n	a2, a1, 24
2000300c:	fe5605        	call0	20001570 <L3_IFIsEnableSsu1..PF_1482204275>
2000300f:	291266        	bnei	a2, 1, 2000303c <L3_IFConfigNFCQ..FG_1482204275+0x178>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1397
    {
        ptNfcqEntry->bsSsu1En   = TRUE;
        ptNfcqEntry->bsSsu1Ontf = TRUE;
        ptNfcqEntry->bsSsu1Addr = L3_IFGetSsu1AddrOffSet(ptCtrlEntry->ptReqEntry);
20003012:	6178      	l32i.n	a7, a1, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1396
    }

    if (TRUE == L3_IFIsEnableSsu1(ptCtrlEntry))
    {
        ptNfcqEntry->bsSsu1En   = TRUE;
        ptNfcqEntry->bsSsu1Ontf = TRUE;
20003014:	0188      	l32i.n	a8, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1395
        ptNfcqEntry->bsSsu0Data = FCMD_REQ_STS_INIT;
    }

    if (TRUE == L3_IFIsEnableSsu1(ptCtrlEntry))
    {
        ptNfcqEntry->bsSsu1En   = TRUE;
20003016:	00a2a2        	movi	a10, 0x200
20003019:	0898      	l32i.n	a9, a8, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1396
        ptNfcqEntry->bsSsu1Ontf = TRUE;
2000301b:	78b8      	l32i.n	a11, a8, 28
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1395
        ptNfcqEntry->bsSsu0Data = FCMD_REQ_STS_INIT;
    }

    if (TRUE == L3_IFIsEnableSsu1(ptCtrlEntry))
    {
        ptNfcqEntry->bsSsu1En   = TRUE;
2000301d:	2099a0        	or	a9, a9, a10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1396
        ptNfcqEntry->bsSsu1Ontf = TRUE;
20003020:	20bbc0        	or	a11, a11, a12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1398
        ptNfcqEntry->bsSsu1Addr = L3_IFGetSsu1AddrOffSet(ptCtrlEntry->ptReqEntry);
        ptNfcqEntry->bsSsu1Data = SUBSYSTEM_STATUS_SUCCESS;
20003023:	0a0c      	movi.n	a10, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1396
    }

    if (TRUE == L3_IFIsEnableSsu1(ptCtrlEntry))
    {
        ptNfcqEntry->bsSsu1En   = TRUE;
        ptNfcqEntry->bsSsu1Ontf = TRUE;
20003025:	78b9      	s32i.n	a11, a8, 28
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1395
        ptNfcqEntry->bsSsu0Data = FCMD_REQ_STS_INIT;
    }

    if (TRUE == L3_IFIsEnableSsu1(ptCtrlEntry))
    {
        ptNfcqEntry->bsSsu1En   = TRUE;
20003027:	0899      	s32i.n	a9, a8, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1397
        ptNfcqEntry->bsSsu1Ontf = TRUE;
        ptNfcqEntry->bsSsu1Addr = L3_IFGetSsu1AddrOffSet(ptCtrlEntry->ptReqEntry);
20003029:	f5bc91        	l32r	a9, 2000071c <_stext+0x1c>
2000302c:	0778      	l32i.n	a7, a7, 0
2000302e:	182992        	l32i	a9, a9, 96
20003031:	1778      	l32i.n	a7, a7, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1398
        ptNfcqEntry->bsSsu1Data = SUBSYSTEM_STATUS_SUCCESS;
20003033:	1e48a2        	s8i	a10, a8, 30
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1397

    if (TRUE == L3_IFIsEnableSsu1(ptCtrlEntry))
    {
        ptNfcqEntry->bsSsu1En   = TRUE;
        ptNfcqEntry->bsSsu1Ontf = TRUE;
        ptNfcqEntry->bsSsu1Addr = L3_IFGetSsu1AddrOffSet(ptCtrlEntry->ptReqEntry);
20003036:	c07790        	sub	a7, a7, a9
20003039:	0e5872        	s16i	a7, a8, 28
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1401
        ptNfcqEntry->bsSsu1Data = SUBSYSTEM_STATUS_SUCCESS;
    }
    
    ptNfcqEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ptCtrlEntry->bsCmdType);
2000303c:	6138      	l32i.n	a3, a1, 24
2000303e:	060302        	l8ui	a0, a3, 6
20003041:	0128      	l32i.n	a2, a1, 0
20003043:	a000d0        	addx4	a0, a0, a13
20003046:	4008      	l32i.n	a0, a0, 16
20003048:	32c8      	l32i.n	a12, a2, 12
2000304a:	410b00        	srli	a0, a0, 11
2000304d:	8080c4        	insbits	a12, a0, 8, 16
20003050:	32c9      	s32i.n	a12, a2, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1403

    L3_IFSetNFCQRowAddr(ptNfcqEntry, ptCtrlEntry);
20003052:	fe0f85        	call0	2000114c <L3_IFSetNFCQRowAddr..CG_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1405

    L3_IFSetNFCQTrace(ptNfcqEntry, ptCtrlEntry);
20003055:	0128      	l32i.n	a2, a1, 0
20003057:	6138      	l32i.n	a3, a1, 24
20003059:	fe9905        	call0	200019ec <L3_IFSetNFCQTrace..DG_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1423
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
void L3_IFSetNFCQCustom(NFCQ_ENTRY *ptNfcqEntry, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    if (FCMD_REQ_SUBTYPE_SETFEATURE == ptCtrlEntry->ptReqEntry->bsReqSubType)
2000305c:	6168      	l32i.n	a6, a1, 24
2000305e:	0668      	l32i.n	a6, a6, 0
20003060:	0608      	l32i.n	a0, a6, 0
20003062:	255500        	extui	a5, a0, 21, 3
20003065:	f9c522        	addi	a2, a5, -7
20003068:	092216        	beqz	a2, 200030fe <L3_IFConfigNFCQ..FG_1482204275+0x23a>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1430
        ASSERT(0x91 == ptCtrlEntry->ptReqEntry->ulReqStsAddr);
        ASSERT(0x100 == ptCtrlEntry->ptReqEntry->ulSpareAddr || 0x104 == ptCtrlEntry->ptReqEntry->ulSpareAddr);
        return;
    }

    if (FCMD_REQ_SUBTYPE_INTRNAL == ptCtrlEntry->ptReqEntry->bsReqSubType)
2000306b:	162566        	bnei	a5, 2, 20003085 <L3_IFConfigNFCQ..FG_1482204275+0x1c1>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1432
    {
        ASSERT(FCMD_REQ_TYPE_WRITE == ptCtrlEntry->ptReqEntry->bsReqType);
2000306e:	d57200        	extui	a7, a0, 18, 14
20003071:	0b8e77        	bany	a14, a7, 20003080 <L3_IFConfigNFCQ..FG_1482204275+0x1bc>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1433
        ASSERT(FCMD_REQ_TLC_BLK == ptCtrlEntry->ptReqEntry->tFlashDesc.bsBlkMod);
20003074:	4688      	l32i.n	a8, a6, 16
20003076:	158080        	extui	a8, a8, 16, 2
20003079:	0f2826        	beqi	a8, 2, 2000308c <L3_IFConfigNFCQ..FG_1482204275+0x1c8>
2000307c:	ffff06        	j	2000307c <L3_IFConfigNFCQ..FG_1482204275+0x1b8>

2000307f <L3_IFConfigNFCQ..FG_1482204275+0x1bb>:
	...

20003080 <L3_IFConfigNFCQ..FG_1482204275+0x1bc>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1432
        return;
    }

    if (FCMD_REQ_SUBTYPE_INTRNAL == ptCtrlEntry->ptReqEntry->bsReqSubType)
    {
        ASSERT(FCMD_REQ_TYPE_WRITE == ptCtrlEntry->ptReqEntry->bsReqType);
20003080:	ffff06        	j	20003080 <L3_IFConfigNFCQ..FG_1482204275+0x1bc>

20003083 <L3_IFConfigNFCQ..FG_1482204275+0x1bf>:
	...

20003085 <L3_IFConfigNFCQ..FG_1482204275+0x1c1>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1437
        ASSERT(FCMD_REQ_TLC_BLK == ptCtrlEntry->ptReqEntry->tFlashDesc.bsBlkMod);
        return;
    }

    L3_SetNfcqCustom(ptNfcqEntry, ptCtrlEntry);
20003085:	0128      	l32i.n	a2, a1, 0
20003087:	6138      	l32i.n	a3, a1, 24
20003089:	fdf745        	call0	20001000 <L3_SetNfcqCustom>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1515

    #ifdef L3_DBG_ERR_INJ_EN
    L3_DbgSetNFCQErrInj(ptNfcqEntry, ptCtrlEntry);
    #endif

    return;
2000308c:	21c8      	l32i.n	a12, a1, 8
2000308e:	31d8      	l32i.n	a13, a1, 12
20003090:	41e8      	l32i.n	a14, a1, 16
20003092:	51f8      	l32i.n	a15, a1, 20
20003094:	1108      	l32i.n	a0, a1, 4
20003096:	20c112        	addi	a1, a1, 32
20003099:	f00d      	ret.n

2000309b <L3_IFConfigNFCQ..FG_1482204275+0x1d7>:
	...

2000309d <L3_IFConfigNFCQ..FG_1482204275+0x1d9>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1341
{
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;

    if (FCMD_REQ_SUBTYPE_SETFEATURE == ptCtrlEntry->ptReqEntry->bsReqSubType)
    {
        ASSERT(0x91 == ptCtrlEntry->ptReqEntry->ulReqStsAddr);
2000309d:	1c98      	l32i.n	a9, a12, 4
2000309f:	3d99f7        	bne	a9, a15, 200030e0 <L3_IFConfigNFCQ..FG_1482204275+0x21c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1342
        ASSERT(0x100 == ptCtrlEntry->ptReqEntry->ulSpareAddr || 0x104 == ptCtrlEntry->ptReqEntry->ulSpareAddr);//dannier add
200030a2:	2c08      	l32i.n	a0, a12, 8
200030a4:	02f026        	beqi	a0, 0x100, 200030aa <L3_IFConfigNFCQ..FG_1482204275+0x1e6>
200030a7:	759067        	bne	a0, a6, 20003120 <L3_IFConfigNFCQ..FG_1482204275+0x25c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1343
        ptNfcqEntry->bsDmaByteEn = TRUE;
200030aa:	0128      	l32i.n	a2, a1, 0
200030ac:	0258      	l32i.n	a5, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1345

        ptNfcqEntry->aByteAddr.usByteAddr = ptCtrlEntry->ptReqEntry->ulReqStsAddr;
200030ae:	6138      	l32i.n	a3, a1, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1343

    if (FCMD_REQ_SUBTYPE_SETFEATURE == ptCtrlEntry->ptReqEntry->bsReqSubType)
    {
        ASSERT(0x91 == ptCtrlEntry->ptReqEntry->ulReqStsAddr);
        ASSERT(0x100 == ptCtrlEntry->ptReqEntry->ulSpareAddr || 0x104 == ptCtrlEntry->ptReqEntry->ulSpareAddr);//dannier add
        ptNfcqEntry->bsDmaByteEn = TRUE;
200030b0:	205570        	or	a5, a5, a7
200030b3:	0259      	s32i.n	a5, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1345

        ptNfcqEntry->aByteAddr.usByteAddr = ptCtrlEntry->ptReqEntry->ulReqStsAddr;
200030b5:	0348      	l32i.n	a4, a3, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1346
        ptNfcqEntry->aByteAddr.usByteLength = sizeof(U32);
200030b7:	400c      	movi.n	a0, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1345
    {
        ASSERT(0x91 == ptCtrlEntry->ptReqEntry->ulReqStsAddr);
        ASSERT(0x100 == ptCtrlEntry->ptReqEntry->ulSpareAddr || 0x104 == ptCtrlEntry->ptReqEntry->ulSpareAddr);//dannier add
        ptNfcqEntry->bsDmaByteEn = TRUE;

        ptNfcqEntry->aByteAddr.usByteAddr = ptCtrlEntry->ptReqEntry->ulReqStsAddr;
200030b9:	1448      	l32i.n	a4, a4, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1346
        ptNfcqEntry->aByteAddr.usByteLength = sizeof(U32);
200030bb:	035202        	s16i	a0, a2, 6
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1345
    {
        ASSERT(0x91 == ptCtrlEntry->ptReqEntry->ulReqStsAddr);
        ASSERT(0x100 == ptCtrlEntry->ptReqEntry->ulSpareAddr || 0x104 == ptCtrlEntry->ptReqEntry->ulSpareAddr);//dannier add
        ptNfcqEntry->bsDmaByteEn = TRUE;

        ptNfcqEntry->aByteAddr.usByteAddr = ptCtrlEntry->ptReqEntry->ulReqStsAddr;
200030be:	025242        	s16i	a4, a2, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1348
        ptNfcqEntry->aByteAddr.usByteLength = sizeof(U32);

        ptNfcqEntry->ulSetFeatVal = ptCtrlEntry->ptReqEntry->ulSpareAddr;
200030c1:	03c8      	l32i.n	a12, a3, 0
200030c3:	2cc8      	l32i.n	a12, a12, 8
200030c5:	22c9      	s32i.n	a12, a2, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1350

        ptNfcqEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ptCtrlEntry->bsCmdType);
200030c7:	0603b2        	l8ui	a11, a3, 6
200030ca:	a0bbd0        	addx4	a11, a11, a13
200030cd:	4bb8      	l32i.n	a11, a11, 16
200030cf:	32a8      	l32i.n	a10, a2, 12
200030d1:	41bbb0        	srli	a11, a11, 11
200030d4:	808ba4        	insbits	a10, a11, 8, 16
200030d7:	32a9      	s32i.n	a10, a2, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1352

        L3_IFSetNFCQTrace(ptNfcqEntry, ptCtrlEntry);
200030d9:	fe9105        	call0	200019ec <L3_IFSetNFCQTrace..DG_1482204275>
200030dc:	ffdf06        	j	2000305c <L3_IFConfigNFCQ..FG_1482204275+0x198>

200030df <L3_IFConfigNFCQ..FG_1482204275+0x21b>:
	...

200030e0 <L3_IFConfigNFCQ..FG_1482204275+0x21c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1341
{
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;

    if (FCMD_REQ_SUBTYPE_SETFEATURE == ptCtrlEntry->ptReqEntry->bsReqSubType)
    {
        ASSERT(0x91 == ptCtrlEntry->ptReqEntry->ulReqStsAddr);
200030e0:	ffff06        	j	200030e0 <L3_IFConfigNFCQ..FG_1482204275+0x21c>

200030e3 <L3_IFConfigNFCQ..FG_1482204275+0x21f>:
	...

200030e4 <L3_IFConfigNFCQ..FG_1482204275+0x220>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1358
        return;
    }
    
    if (FCMD_REQ_SUBTYPE_INTRNAL == ptCtrlEntry->ptReqEntry->bsReqSubType)
    {
        ASSERT(FCMD_REQ_TYPE_WRITE == ptCtrlEntry->ptReqEntry->bsReqType);
200030e4:	d58200        	extui	a8, a0, 18, 14
200030e7:	2d8e87        	bany	a14, a8, 20003118 <L3_IFConfigNFCQ..FG_1482204275+0x254>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1359
        ASSERT(FCMD_REQ_TLC_BLK == ptCtrlEntry->ptReqEntry->tFlashDesc.bsBlkMod);
200030ea:	4c98      	l32i.n	a9, a12, 16
200030ec:	159090        	extui	a9, a9, 16, 2
200030ef:	282966        	bnei	a9, 2, 2000311b <L3_IFConfigNFCQ..FG_1482204275+0x257>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1361
        
        ptNfcqEntry->bsDmaByteEn = TRUE;
200030f2:	01b8      	l32i.n	a11, a1, 0
200030f4:	0ba8      	l32i.n	a10, a11, 0
200030f6:	20aa70        	or	a10, a10, a7
200030f9:	0ba9      	s32i.n	a10, a11, 0
200030fb:	ffb086        	j	20002fc1 <L3_IFConfigNFCQ..FG_1482204275+0xfd>

200030fe <L3_IFConfigNFCQ..FG_1482204275+0x23a>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1425
==============================================================================*/
void L3_IFSetNFCQCustom(NFCQ_ENTRY *ptNfcqEntry, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    if (FCMD_REQ_SUBTYPE_SETFEATURE == ptCtrlEntry->ptReqEntry->bsReqSubType)
    {
        ASSERT(0x91 == ptCtrlEntry->ptReqEntry->ulReqStsAddr);
200030fe:	16b8      	l32i.n	a11, a6, 4
20003100:	109bf7        	bne	a11, a15, 20003114 <L3_IFConfigNFCQ..FG_1482204275+0x250>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1426
        ASSERT(0x100 == ptCtrlEntry->ptReqEntry->ulSpareAddr || 0x104 == ptCtrlEntry->ptReqEntry->ulSpareAddr);
20003103:	2608      	l32i.n	a0, a6, 8
20003105:	83f026        	beqi	a0, 0x100, 2000308c <L3_IFConfigNFCQ..FG_1482204275+0x1c8>
20003108:	04a1c2        	movi	a12, 0x104
2000310b:	0290c7        	bne	a0, a12, 20003111 <L3_IFConfigNFCQ..FG_1482204275+0x24d>
2000310e:	ffde86        	j	2000308c <L3_IFConfigNFCQ..FG_1482204275+0x1c8>
20003111:	ffff06        	j	20003111 <L3_IFConfigNFCQ..FG_1482204275+0x24d>

20003114 <L3_IFConfigNFCQ..FG_1482204275+0x250>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1425
==============================================================================*/
void L3_IFSetNFCQCustom(NFCQ_ENTRY *ptNfcqEntry, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    if (FCMD_REQ_SUBTYPE_SETFEATURE == ptCtrlEntry->ptReqEntry->bsReqSubType)
    {
        ASSERT(0x91 == ptCtrlEntry->ptReqEntry->ulReqStsAddr);
20003114:	ffff06        	j	20003114 <L3_IFConfigNFCQ..FG_1482204275+0x250>

20003117 <L3_IFConfigNFCQ..FG_1482204275+0x253>:
	...

20003118 <L3_IFConfigNFCQ..FG_1482204275+0x254>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1358
        return;
    }
    
    if (FCMD_REQ_SUBTYPE_INTRNAL == ptCtrlEntry->ptReqEntry->bsReqSubType)
    {
        ASSERT(FCMD_REQ_TYPE_WRITE == ptCtrlEntry->ptReqEntry->bsReqType);
20003118:	ffff06        	j	20003118 <L3_IFConfigNFCQ..FG_1482204275+0x254>

2000311b <L3_IFConfigNFCQ..FG_1482204275+0x257>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1359
        ASSERT(FCMD_REQ_TLC_BLK == ptCtrlEntry->ptReqEntry->tFlashDesc.bsBlkMod);
2000311b:	ffff06        	j	2000311b <L3_IFConfigNFCQ..FG_1482204275+0x257>

2000311e <L3_IFConfigNFCQ..FG_1482204275+0x25a>:
	...

20003120 <L3_IFConfigNFCQ..FG_1482204275+0x25c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1342
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;

    if (FCMD_REQ_SUBTYPE_SETFEATURE == ptCtrlEntry->ptReqEntry->bsReqSubType)
    {
        ASSERT(0x91 == ptCtrlEntry->ptReqEntry->ulReqStsAddr);
        ASSERT(0x100 == ptCtrlEntry->ptReqEntry->ulSpareAddr || 0x104 == ptCtrlEntry->ptReqEntry->ulSpareAddr);//dannier add
20003120:	ffff06        	j	20003120 <L3_IFConfigNFCQ..FG_1482204275+0x25c>

20003123 <L3_IFConfigNFCQ..FG_1482204275+0x25f>:
	...

20003124 <L3_IFAdaptFCmd..HF_1482204275>:
L3_IFAdaptFCmd():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:887
Usage      : 
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
LOCAL void L3_IFAdaptFCmd(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{  
20003124:	e0c112        	addi	a1, a1, -32
20003127:	51d9      	s32i.n	a13, a1, 20
20003129:	3109      	s32i.n	a0, a1, 12
2000312b:	61e9      	s32i.n	a14, a1, 24
2000312d:	41c9      	s32i.n	a12, a1, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:627
    1. 2016.7.18 JasonGuo create function
    2. 2016.9.26 JasonGuo l3 supports xx-nand-flash-adapter-part #1/4
==============================================================================*/
LOCAL void SWITCH_CASE_TXT L3_IFAdaptBlkPage(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
2000312f:	0238      	l32i.n	a3, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:887
Usage      : 
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
LOCAL void L3_IFAdaptFCmd(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{  
20003131:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:629
==============================================================================*/
LOCAL void SWITCH_CASE_TXT L3_IFAdaptBlkPage(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;

    if (FCMD_REQ_SUBTYPE_SETFEATURE == ptCtrlEntry->ptReqEntry->bsReqSubType)
20003133:	0328      	l32i.n	a2, a3, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:627
    1. 2016.7.18 JasonGuo create function
    2. 2016.9.26 JasonGuo l3 supports xx-nand-flash-adapter-part #1/4
==============================================================================*/
LOCAL void SWITCH_CASE_TXT L3_IFAdaptBlkPage(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
20003135:	03ed      	mov.n	a14, a3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:629

    if (FCMD_REQ_SUBTYPE_SETFEATURE == ptCtrlEntry->ptReqEntry->bsReqSubType)
20003137:	250520        	extui	a0, a2, 21, 3
2000313a:	f9c002        	addi	a0, a0, -7
2000313d:	0c7016        	beqz	a0, 20003208 <L3_IFAdaptFCmd..HF_1482204275+0xe4>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:636
        ASSERT(0x91 == ptCtrlEntry->ptReqEntry->ulReqStsAddr);
        ASSERT(0x100 == ptCtrlEntry->ptReqEntry->ulSpareAddr || 0x104 == ptCtrlEntry->ptReqEntry->ulSpareAddr);//dannier add
        return;
    }

    ASSERT(FCMD_REQ_MLC_BLK != ptReqEntry->tFlashDesc.bsBlkMod);
20003140:	4308      	l32i.n	a0, a3, 16
20003142:	150000        	extui	a0, a0, 16, 2
20003145:	400b      	addi.n	a4, a0, -1
20003147:	0b9416        	beqz	a4, 20003204 <L3_IFAdaptFCmd..HF_1482204275+0xe0>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:638
    
    switch (ptReqEntry->tFlashDesc.bsBlkMod)
2000314a:	0e6016        	beqz	a0, 20003234 <L3_IFAdaptFCmd..HF_1482204275+0x110>
2000314d:	fec022        	addi	a2, a0, -2
20003150:	0d0216        	beqz	a2, 20003224 <L3_IFAdaptFCmd..HF_1482204275+0x100>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:701

            break;
        }
        default:
        {
            DBG_Printf("L3_Adapter1 0x%x\n", (U32)ptCtrlEntry);
20003153:	f5b621        	l32r	a2, 2000082c <_stext+0x12c>
20003156:	203cc0        	or	a3, a12, a12
20003159:	07b085        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:702
            DBG_Getch();
2000315c:	f56f01        	l32r	a0, 20000718 <_stext+0x18>
2000315f:	0000c0        	callx0	a0
20003162:	0ce8      	l32i.n	a14, a12, 0

20003164 <L3_IFAdaptFCmd..HF_1482204275+0x40>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:765
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    U8 ucReqType = ptReqEntry->bsReqType;
    U8 ucReqSubType = ptReqEntry->bsReqSubType;
    U8 ucIntrPage = ptCtrlEntry->bsIntrPage;
    U8 ucMultiStep = ptCtrlEntry->bsMultiStep;    
    BOOL bSlcBlk = (FCMD_REQ_SLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
20003164:	030c      	movi.n	a3, 0
20003166:	4e08      	l32i.n	a0, a14, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:761
    2. 2016.9.26 JasonGuo l3 supports xx-nand-flash-adapter-part #2/4
==============================================================================*/
LOCAL void SWITCH_CASE_TXT L3_IFAdaptCmdType(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{    
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    U8 ucReqType = ptReqEntry->bsReqType;
20003168:	0ed8      	l32i.n	a13, a14, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:765
    U8 ucReqSubType = ptReqEntry->bsReqSubType;
    U8 ucIntrPage = ptCtrlEntry->bsIntrPage;
    U8 ucMultiStep = ptCtrlEntry->bsMultiStep;    
    BOOL bSlcBlk = (FCMD_REQ_SLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
2000316a:	150000        	extui	a0, a0, 16, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:762
==============================================================================*/
LOCAL void SWITCH_CASE_TXT L3_IFAdaptCmdType(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{    
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    U8 ucReqType = ptReqEntry->bsReqType;
    U8 ucReqSubType = ptReqEntry->bsReqSubType;
2000316d:	2525d0        	extui	a2, a13, 21, 3
20003170:	2129      	s32i.n	a2, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:761
    2. 2016.9.26 JasonGuo l3 supports xx-nand-flash-adapter-part #2/4
==============================================================================*/
LOCAL void SWITCH_CASE_TXT L3_IFAdaptCmdType(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{    
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    U8 ucReqType = ptReqEntry->bsReqType;
20003172:	25d2d0        	extui	a13, a13, 18, 3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:765
    U8 ucReqSubType = ptReqEntry->bsReqSubType;
    U8 ucIntrPage = ptCtrlEntry->bsIntrPage;
    U8 ucMultiStep = ptCtrlEntry->bsMultiStep;    
    BOOL bSlcBlk = (FCMD_REQ_SLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
20003175:	120c      	movi.n	a2, 1
20003177:	833200        	moveqz	a3, a2, a0
2000317a:	1139      	s32i.n	a3, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:766
    BOOL bCCLEnOrXorEn = (FCMD_REQ_TYPE_READ == ucReqType) ? L3_IFIsReadCmdHit(ptCtrlEntry) : L3_IsTlcXor6DsgIssue(ptReqEntry);
2000317c:	2e1d66        	bnei	a13, 1, 200031ae <L3_IFAdaptFCmd..HF_1482204275+0x8a>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:725
{
    BOOL bReadHit = FALSE;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    U8 ucTLun = ptReqEntry->bsTLun;

    if ((ptCtrlEntry->bsPhyPage == L3_FMGetPhyPage(ucTLun))
2000317f:	021c52        	l16ui	a5, a12, 4
20003182:	f56641        	l32r	a4, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:723
==============================================================================*/
LOCAL BOOL L3_IFIsReadCmdHit(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    BOOL bReadHit = FALSE;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    U8 ucTLun = ptReqEntry->bsTLun;
20003185:	000e32        	l8ui	a3, a14, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:725

    if ((ptCtrlEntry->bsPhyPage == L3_FMGetPhyPage(ucTLun))
20003188:	212442        	l32i	a4, a4, 132
2000318b:	903330        	addx2	a3, a3, a3
2000318e:	a03340        	addx4	a3, a3, a4
20003191:	011342        	l16ui	a4, a3, 2
20003194:	3e68      	l32i.n	a6, a14, 12
20003196:	609457        	bne	a4, a5, 200031fa <L3_IFAdaptFCmd..HF_1482204275+0xd6>
20003199:	001352        	l16ui	a5, a3, 0
2000319c:	946a60        	extui	a6, a6, 10, 10
2000319f:	579567        	bne	a5, a6, 200031fa <L3_IFAdaptFCmd..HF_1482204275+0xd6>
200031a2:	060c82        	l8ui	a8, a12, 6
200031a5:	040372        	l8ui	a7, a3, 4
200031a8:	4e9787        	bne	a7, a8, 200031fa <L3_IFAdaptFCmd..HF_1482204275+0xd6>
200031ab:	001346        	j	200031fc <L3_IFAdaptFCmd..HF_1482204275+0xd8>

200031ae <L3_IFAdaptFCmd..HF_1482204275+0x8a>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:766
    U8 ucReqType = ptReqEntry->bsReqType;
    U8 ucReqSubType = ptReqEntry->bsReqSubType;
    U8 ucIntrPage = ptCtrlEntry->bsIntrPage;
    U8 ucMultiStep = ptCtrlEntry->bsMultiStep;    
    BOOL bSlcBlk = (FCMD_REQ_SLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
    BOOL bCCLEnOrXorEn = (FCMD_REQ_TYPE_READ == ucReqType) ? L3_IFIsReadCmdHit(ptCtrlEntry) : L3_IsTlcXor6DsgIssue(ptReqEntry);
200031ae:	0e2d      	mov.n	a2, a14
200031b0:	ffc4c5        	call0	20002e00 <L3_IsTlcXor6DsgIssue>
200031b3:	042e92        	l32i	a9, a14, 16
200031b6:	159090        	extui	a9, a9, 16, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:769
    U8 ucCmdType, ucScrMod = INVALID_2F;
    
    ASSERT(FCMD_REQ_MLC_BLK != ptReqEntry->tFlashDesc.bsBlkMod);
200031b9:	421926        	beqi	a9, 1, 200031ff <L3_IFAdaptFCmd..HF_1482204275+0xdb>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:771
   
    switch (ucReqType)
200031bc:	0ddd16        	beqz	a13, 2000329d <L3_IFAdaptFCmd..HF_1482204275+0x179>
200031bf:	ad0b      	addi.n	a10, a13, -1
200031c1:	115a16        	beqz	a10, 200032da <L3_IFAdaptFCmd..HF_1482204275+0x1b6>
200031c4:	fecdb2        	addi	a11, a13, -2
200031c7:	14bb16        	beqz	a11, 20003316 <L3_IFAdaptFCmd..HF_1482204275+0x1f2>
200031ca:	f9cde2        	addi	a14, a13, -7
200031cd:	0b0e16        	beqz	a14, 20003281 <L3_IFAdaptFCmd..HF_1482204275+0x15d>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:858
            ucCmdType = NF_PRCQ_SETFEATURE;
            break;
        }
        default:
        {
            DBG_Printf("L3_Adapter2 0x%x\n", (U32)ptCtrlEntry);
200031d0:	f59821        	l32r	a2, 20000830 <_stext+0x130>
200031d3:	0c3d      	mov.n	a3, a12
200031d5:	07a8c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:859
            DBG_Getch();
200031d8:	f55001        	l32r	a0, 20000718 <_stext+0x18>
200031db:	0000c0        	callx0	a0
200031de:	ffa022        	movi	a2, 255
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:892
{  
    L3_IFAdaptBlkPage(ptCtrlEntry);

    L3_IFAdaptCmdType(ptCtrlEntry);
    
    return;
200031e1:	51d8      	l32i.n	a13, a1, 20
200031e3:	61e8      	l32i.n	a14, a1, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:864
            DBG_Getch();
        }
    }
    
    ptCtrlEntry->bsCmdType = ucCmdType;
    ptCtrlEntry->bsScrMod = ucScrMod;
200031e5:	2c38      	l32i.n	a3, a12, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:863
            DBG_Printf("L3_Adapter2 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }
    
    ptCtrlEntry->bsCmdType = ucCmdType;
200031e7:	064c02        	s8i	a0, a12, 6
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:864
    ptCtrlEntry->bsScrMod = ucScrMod;
200031ea:	202234        	insbits	a3, a2, 2, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:892
{  
    L3_IFAdaptBlkPage(ptCtrlEntry);

    L3_IFAdaptCmdType(ptCtrlEntry);
    
    return;
200031ed:	3108      	l32i.n	a0, a1, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:864
            DBG_Getch();
        }
    }
    
    ptCtrlEntry->bsCmdType = ucCmdType;
    ptCtrlEntry->bsScrMod = ucScrMod;
200031ef:	2c39      	s32i.n	a3, a12, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:892
{  
    L3_IFAdaptBlkPage(ptCtrlEntry);

    L3_IFAdaptCmdType(ptCtrlEntry);
    
    return;
200031f1:	41c8      	l32i.n	a12, a1, 16
200031f3:	20c112        	addi	a1, a1, 32
200031f6:	f00d      	ret.n

200031f8 <L3_IFAdaptFCmd..HF_1482204275+0xd4>:
	...

200031fa <L3_IFAdaptFCmd..HF_1482204275+0xd6>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:725
{
    BOOL bReadHit = FALSE;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    U8 ucTLun = ptReqEntry->bsTLun;

    if ((ptCtrlEntry->bsPhyPage == L3_FMGetPhyPage(ucTLun))
200031fa:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:769
    U8 ucMultiStep = ptCtrlEntry->bsMultiStep;    
    BOOL bSlcBlk = (FCMD_REQ_SLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
    BOOL bCCLEnOrXorEn = (FCMD_REQ_TYPE_READ == ucReqType) ? L3_IFIsReadCmdHit(ptCtrlEntry) : L3_IsTlcXor6DsgIssue(ptReqEntry);
    U8 ucCmdType, ucScrMod = INVALID_2F;
    
    ASSERT(FCMD_REQ_MLC_BLK != ptReqEntry->tFlashDesc.bsBlkMod);
200031fc:	bc1066        	bnei	a0, 1, 200031bc <L3_IFAdaptFCmd..HF_1482204275+0x98>
200031ff:	ffff06        	j	200031ff <L3_IFAdaptFCmd..HF_1482204275+0xdb>

20003202 <L3_IFAdaptFCmd..HF_1482204275+0xde>:
	...

20003204 <L3_IFAdaptFCmd..HF_1482204275+0xe0>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:636
        ASSERT(0x91 == ptCtrlEntry->ptReqEntry->ulReqStsAddr);
        ASSERT(0x100 == ptCtrlEntry->ptReqEntry->ulSpareAddr || 0x104 == ptCtrlEntry->ptReqEntry->ulSpareAddr);//dannier add
        return;
    }

    ASSERT(FCMD_REQ_MLC_BLK != ptReqEntry->tFlashDesc.bsBlkMod);
20003204:	ffff06        	j	20003204 <L3_IFAdaptFCmd..HF_1482204275+0xe0>

20003207 <L3_IFAdaptFCmd..HF_1482204275+0xe3>:
	...

20003208 <L3_IFAdaptFCmd..HF_1482204275+0xe4>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:631
{
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;

    if (FCMD_REQ_SUBTYPE_SETFEATURE == ptCtrlEntry->ptReqEntry->bsReqSubType)
    {
        ASSERT(0x91 == ptCtrlEntry->ptReqEntry->ulReqStsAddr);
20003208:	1348      	l32i.n	a4, a3, 4
2000320a:	91a052        	movi	a5, 145
2000320d:	1f9457        	bne	a4, a5, 20003230 <L3_IFAdaptFCmd..HF_1482204275+0x10c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:632
        ASSERT(0x100 == ptCtrlEntry->ptReqEntry->ulSpareAddr || 0x104 == ptCtrlEntry->ptReqEntry->ulSpareAddr);//dannier add
20003210:	2308      	l32i.n	a0, a3, 8
20003212:	ffd062        	addmi	a6, a0, 0xffffff00
20003215:	f4b616        	beqz	a6, 20003164 <L3_IFAdaptFCmd..HF_1482204275+0x40>
20003218:	04a172        	movi	a7, 0x104
2000321b:	c07070        	sub	a7, a0, a7
2000321e:	f42716        	beqz	a7, 20003164 <L3_IFAdaptFCmd..HF_1482204275+0x40>
20003221:	ffff06        	j	20003221 <L3_IFAdaptFCmd..HF_1482204275+0xfd>

20003224 <L3_IFAdaptFCmd..HF_1482204275+0x100>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:695
            {
                ptReqEntry->tFlashDesc.bsPhyBlk =  ptReqEntry->tFlashDesc.bsVirBlk;
            }
            #endif
            // Tlc PhyPage -> L3 handle;
            ptCtrlEntry->bsPhyPage = ptReqEntry->tFlashDesc.bsVirPage;
20003224:	3388      	l32i.n	a8, a3, 12
20003226:	a58480        	extui	a8, a8, 20, 11
20003229:	025c82        	s16i	a8, a12, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:697

            break;
2000322c:	ffcd06        	j	20003164 <L3_IFAdaptFCmd..HF_1482204275+0x40>

2000322f <L3_IFAdaptFCmd..HF_1482204275+0x10b>:
	...

20003230 <L3_IFAdaptFCmd..HF_1482204275+0x10c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:631
{
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;

    if (FCMD_REQ_SUBTYPE_SETFEATURE == ptCtrlEntry->ptReqEntry->bsReqSubType)
    {
        ASSERT(0x91 == ptCtrlEntry->ptReqEntry->ulReqStsAddr);
20003230:	ffff06        	j	20003230 <L3_IFAdaptFCmd..HF_1482204275+0x10c>

20003233 <L3_IFAdaptFCmd..HF_1482204275+0x10f>:
	...

20003234 <L3_IFAdaptFCmd..HF_1482204275+0x110>:
20003234:	0139      	s32i.n	a3, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:644
    {
        case FCMD_REQ_SLC_BLK:
        {
            // Slc Table block fail -> L2 handle;
            // Slc Data block fail - L3 handle;
            if (TRUE != ptReqEntry->bsTableReq)
20003236:	3308      	l32i.n	a0, a3, 12
20003238:	18e2b7        	bbsi	a2, 11, 20003254 <L3_IFAdaptFCmd..HF_1482204275+0x130>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:611
LOCAL U32 L3_IFGetPhyBlk(FCMD_REQ_ENTRY *ptReqEntry)
{
    U8 ucSPU = L2_GET_SPU(ptReqEntry->bsTLun);
    U8 ucLunInSPU = L2_GET_LUN_IN_SPU(ptReqEntry->bsTLun);

    return L2_VBT_GetPhysicalBlockAddr(ucSPU, ucLunInSPU, ptReqEntry->tFlashDesc.bsVirBlk);
2000323b:	000322        	l8ui	a2, a3, 0
2000323e:	944000        	extui	a4, a0, 0, 10
20003241:	030c      	movi.n	a3, 0
20003243:	f57e01        	l32r	a0, 2000083c <_stext+0x13c>
20003246:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:647
            // Slc Table block fail -> L2 handle;
            // Slc Data block fail - L3 handle;
            if (TRUE != ptReqEntry->bsTableReq)
            {
                // JasonGuo20161128: direct to re-get the physical block for improving the perofrmance#1.
                if (1)//(FALSE == ptCtrlEntry->bsIntrReq)
20003249:	0138      	l32i.n	a3, a1, 0
2000324b:	032302        	l32i	a0, a3, 12
2000324e:	83a204        	insbits	a0, a2, 10, 19
20003251:	036302        	s32i	a0, a3, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:587
==============================================================================*/
LOCAL U16 L3_IFGetSLCPhyPage(FCMD_REQ_ENTRY *ptReqEntry)
{
    U16 usLogicPage = ptReqEntry->tFlashDesc.bsVirPage;

    if (PG_PER_SLC_BLK <= usLogicPage)   
20003254:	ffa142        	movi	a4, 0x1ff
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:585
History    : 
    1. 2016.7.19 JasonGuo create function
==============================================================================*/
LOCAL U16 L3_IFGetSLCPhyPage(FCMD_REQ_ENTRY *ptReqEntry)
{
    U16 usLogicPage = ptReqEntry->tFlashDesc.bsVirPage;
20003257:	a50400        	extui	a0, a0, 20, 11
2000325a:	7109      	s32i.n	a0, a1, 28
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:587

    if (PG_PER_SLC_BLK <= usLogicPage)   
2000325c:	0db407        	bgeu	a4, a0, 2000326d <L3_IFAdaptFCmd..HF_1482204275+0x149>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:589
    {    
        DBG_Printf("L3_GetPhyPage. 0x%x\n", (U32)ptReqEntry);
2000325f:	f57521        	l32r	a2, 20000834 <_stext+0x134>
20003262:	07a005        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:590
        DBG_Getch();
20003265:	f52c01        	l32r	a0, 20000718 <_stext+0x18>
20003268:	0000c0        	callx0	a0
2000326b:	7108      	l32i.n	a0, a1, 28
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:661
                    }
                }
            }

            // Slc PhyPage -> L3 handle;
            ptCtrlEntry->bsPhyPage = L3_IFGetSLCPhyPage(ptReqEntry);
2000326d:	f57251        	l32r	a5, 20000838 <_stext+0x138>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:663

            break;
20003270:	0ce8      	l32i.n	a14, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:661
                    }
                }
            }

            // Slc PhyPage -> L3 handle;
            ptCtrlEntry->bsPhyPage = L3_IFGetSLCPhyPage(ptReqEntry);
20003272:	905050        	addx2	a5, a0, a5
20003275:	7e1552        	l16ui	a5, a5, 252
20003278:	025c52        	s16i	a5, a12, 4
2000327b:	ffb946        	j	20003164 <L3_IFAdaptFCmd..HF_1482204275+0x40>

2000327e <L3_IFAdaptFCmd..HF_1482204275+0x15a>:
2000327e:	000000                                        ...

20003281 <L3_IFAdaptFCmd..HF_1482204275+0x15d>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:892
{  
    L3_IFAdaptBlkPage(ptCtrlEntry);

    L3_IFAdaptCmdType(ptCtrlEntry);
    
    return;
20003281:	3108      	l32i.n	a0, a1, 12
20003283:	51d8      	l32i.n	a13, a1, 20
20003285:	61e8      	l32i.n	a14, a1, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:853

            break;
        }
        case FCMD_REQ_TYPE_SETFEATURE:
        {
            ucCmdType = NF_PRCQ_SETFEATURE;
20003287:	560c      	movi.n	a6, 5
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:864
            DBG_Getch();
        }
    }
    
    ptCtrlEntry->bsCmdType = ucCmdType;
    ptCtrlEntry->bsScrMod = ucScrMod;
20003289:	2c78      	l32i.n	a7, a12, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:854
            break;
        }
        case FCMD_REQ_TYPE_SETFEATURE:
        {
            ucCmdType = NF_PRCQ_SETFEATURE;
            break;
2000328b:	ffa082        	movi	a8, 255
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:864
            DBG_Getch();
        }
    }
    
    ptCtrlEntry->bsCmdType = ucCmdType;
    ptCtrlEntry->bsScrMod = ucScrMod;
2000328e:	202874        	insbits	a7, a8, 2, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:863
            DBG_Printf("L3_Adapter2 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }
    
    ptCtrlEntry->bsCmdType = ucCmdType;
20003291:	064c62        	s8i	a6, a12, 6
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:864
    ptCtrlEntry->bsScrMod = ucScrMod;
20003294:	2c79      	s32i.n	a7, a12, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:892
{  
    L3_IFAdaptBlkPage(ptCtrlEntry);

    L3_IFAdaptCmdType(ptCtrlEntry);
    
    return;
20003296:	41c8      	l32i.n	a12, a1, 16
20003298:	20c112        	addi	a1, a1, 32
2000329b:	f00d      	ret.n

2000329d <L3_IFAdaptFCmd..HF_1482204275+0x179>:
2000329d:	2198      	l32i.n	a9, a1, 8
2000329f:	fec992        	addi	a9, a9, -2
200032a2:	10e916        	beqz	a9, 200033b4 <L3_IFAdaptFCmd..HF_1482204275+0x290>
200032a5:	21a8      	l32i.n	a10, a1, 8
200032a7:	aa0b      	addi.n	a10, a10, -1
200032a9:	0aba16        	beqz	a10, 20003358 <L3_IFAdaptFCmd..HF_1482204275+0x234>
200032ac:	21b8      	l32i.n	a11, a1, 8
200032ae:	fdcbb2        	addi	a11, a11, -3
200032b1:	0e7b16        	beqz	a11, 2000339c <L3_IFAdaptFCmd..HF_1482204275+0x278>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:826
            else if (FCMD_REQ_SUBTYPE_ONEPG == ucReqSubType)
            {
                ucCmdType = (TRUE == bSlcBlk) ? NF_PRCQ_PRG_MULTIPLN_LOW_PG_NO_HIGH : NF_PRCQ_TLC_PRG_MULTIPLN_LOW_PG_NO_HIGH;
                ucScrMod = NORMAL_SCR;
            }
            else if (FCMD_REQ_SUBTYPE_SINGLE == ucReqSubType)
200032b4:	0221d2        	l32i	a13, a1, 8
200032b7:	08dd16        	beqz	a13, 20003348 <L3_IFAdaptFCmd..HF_1482204275+0x224>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:833
                ucCmdType = (TRUE == bSlcBlk) ? NF_PRCQ_PRG_LOW_PG : NF_PRCQ_TLC_PRG_LOW_PG;
                ucScrMod = NORMAL_SCR;
            }
            else
            {
                DBG_Getch();
200032ba:	f51701        	l32r	a0, 20000718 <_stext+0x18>
200032bd:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:892
{  
    L3_IFAdaptBlkPage(ptCtrlEntry);

    L3_IFAdaptCmdType(ptCtrlEntry);
    
    return;
200032c0:	51d8      	l32i.n	a13, a1, 20
200032c2:	61e8      	l32i.n	a14, a1, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:801
        }
        case FCMD_REQ_TYPE_WRITE:
        {
            if (FCMD_REQ_SUBTYPE_INTRNAL == ucReqSubType)
            {
                DBG_Getch();
200032c4:	ffa022        	movi	a2, 255
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:864
            DBG_Getch();
        }
    }
    
    ptCtrlEntry->bsCmdType = ucCmdType;
    ptCtrlEntry->bsScrMod = ucScrMod;
200032c7:	2c38      	l32i.n	a3, a12, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:863
            DBG_Printf("L3_Adapter2 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }
    
    ptCtrlEntry->bsCmdType = ucCmdType;
200032c9:	064c02        	s8i	a0, a12, 6
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:864
    ptCtrlEntry->bsScrMod = ucScrMod;
200032cc:	202234        	insbits	a3, a2, 2, 4
200032cf:	2c39      	s32i.n	a3, a12, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:892
{  
    L3_IFAdaptBlkPage(ptCtrlEntry);

    L3_IFAdaptCmdType(ptCtrlEntry);
    
    return;
200032d1:	3108      	l32i.n	a0, a1, 12
200032d3:	41c8      	l32i.n	a12, a1, 16
200032d5:	20c112        	addi	a1, a1, 32
200032d8:	f00d      	ret.n

200032da <L3_IFAdaptFCmd..HF_1482204275+0x1b6>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:775
   
    switch (ucReqType)
    {
        case FCMD_REQ_TYPE_READ:
        {
            if (FCMD_REQ_SUBTYPE_NORMAL == ucReqSubType)
200032da:	21e8      	l32i.n	a14, a1, 8
200032dc:	030c      	movi.n	a3, 0
200032de:	100c      	movi.n	a0, 1
200032e0:	420b      	addi.n	a4, a2, -1
200032e2:	1158      	l32i.n	a5, a1, 4
200032e4:	020c      	movi.n	a2, 0
200032e6:	550b      	addi.n	a5, a5, -1
200032e8:	832050        	moveqz	a2, a0, a5
200032eb:	833040        	moveqz	a3, a0, a4
200032ee:	7b1e26        	beqi	a14, 1, 2000336d <L3_IFAdaptFCmd..HF_1482204275+0x249>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:892
{  
    L3_IFAdaptBlkPage(ptCtrlEntry);

    L3_IFAdaptCmdType(ptCtrlEntry);
    
    return;
200032f1:	51d8      	l32i.n	a13, a1, 20
200032f3:	61e8      	l32i.n	a14, a1, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:788
            }
            else
            {                
                ucCmdType = (TRUE == bSlcBlk) ? NF_PRCQ_READ : NF_PRCQ_TLC_READ;

                if (TRUE == bCCLEnOrXorEn)
200032f5:	d60c      	movi.n	a6, 13
200032f7:	770c      	movi.n	a7, 7
200032f9:	a00c      	movi.n	a0, 10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:864
            DBG_Getch();
        }
    }
    
    ptCtrlEntry->bsCmdType = ucCmdType;
    ptCtrlEntry->bsScrMod = ucScrMod;
200032fb:	2c88      	l32i.n	a8, a12, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:795
                    ucCmdType = NF_PRCQ_CCLR;
                }
            }
            ucScrMod = NORMAL_SCR;

            break;
200032fd:	090c      	movi.n	a9, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:864
            DBG_Getch();
        }
    }
    
    ptCtrlEntry->bsCmdType = ucCmdType;
    ptCtrlEntry->bsScrMod = ucScrMod;
200032ff:	202984        	insbits	a8, a9, 2, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:788
            }
            else
            {                
                ucCmdType = (TRUE == bSlcBlk) ? NF_PRCQ_READ : NF_PRCQ_TLC_READ;

                if (TRUE == bCCLEnOrXorEn)
20003302:	930720        	movnez	a0, a7, a2
20003305:	930630        	movnez	a0, a6, a3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:864
            DBG_Getch();
        }
    }
    
    ptCtrlEntry->bsCmdType = ucCmdType;
    ptCtrlEntry->bsScrMod = ucScrMod;
20003308:	2c89      	s32i.n	a8, a12, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:863
            DBG_Printf("L3_Adapter2 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }
    
    ptCtrlEntry->bsCmdType = ucCmdType;
2000330a:	064c02        	s8i	a0, a12, 6
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:892
{  
    L3_IFAdaptBlkPage(ptCtrlEntry);

    L3_IFAdaptCmdType(ptCtrlEntry);
    
    return;
2000330d:	41c8      	l32i.n	a12, a1, 16
2000330f:	3108      	l32i.n	a0, a1, 12
20003311:	20c112        	addi	a1, a1, 32
20003314:	f00d      	ret.n

20003316 <L3_IFAdaptFCmd..HF_1482204275+0x1f2>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:840

            break;
        }
        case FCMD_REQ_TYPE_ERASE:
        {
            if (FCMD_REQ_SUBTYPE_SINGLE == ucReqSubType)
20003316:	21a8      	l32i.n	a10, a1, 8
20003318:	1b0c      	movi.n	a11, 1
2000331a:	11d8      	l32i.n	a13, a1, 4
2000331c:	020c      	movi.n	a2, 0
2000331e:	dd0b      	addi.n	a13, a13, -1
20003320:	832bd0        	moveqz	a2, a11, a13
20003323:	06ba16        	beqz	a10, 20003392 <L3_IFAdaptFCmd..HF_1482204275+0x26e>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:846
            {                
                ucCmdType = (TRUE == bSlcBlk) ? NF_PRCQ_ERS : NF_PRCQ_TLC_ERS;
            }
            else
            {                
                ucCmdType = (TRUE == bSlcBlk) ? NF_PRCQ_ERS_MULTIPLN : NF_PRCQ_TLC_ERS_MULTIPLN;
20003326:	ee0c      	movi.n	a14, 14
20003328:	101c      	movi.n	a0, 17
2000332a:	930e20        	movnez	a0, a14, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:892
{  
    L3_IFAdaptBlkPage(ptCtrlEntry);

    L3_IFAdaptCmdType(ptCtrlEntry);
    
    return;
2000332d:	51d8      	l32i.n	a13, a1, 20
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:863
            DBG_Printf("L3_Adapter2 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }
    
    ptCtrlEntry->bsCmdType = ucCmdType;
2000332f:	064c02        	s8i	a0, a12, 6
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:849
            else
            {                
                ucCmdType = (TRUE == bSlcBlk) ? NF_PRCQ_ERS_MULTIPLN : NF_PRCQ_TLC_ERS_MULTIPLN;
            }

            break;
20003332:	ffa022        	movi	a2, 255
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:864
            DBG_Getch();
        }
    }
    
    ptCtrlEntry->bsCmdType = ucCmdType;
    ptCtrlEntry->bsScrMod = ucScrMod;
20003335:	2c08      	l32i.n	a0, a12, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:892
{  
    L3_IFAdaptBlkPage(ptCtrlEntry);

    L3_IFAdaptCmdType(ptCtrlEntry);
    
    return;
20003337:	61e8      	l32i.n	a14, a1, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:864
            DBG_Getch();
        }
    }
    
    ptCtrlEntry->bsCmdType = ucCmdType;
    ptCtrlEntry->bsScrMod = ucScrMod;
20003339:	202204        	insbits	a0, a2, 2, 4
2000333c:	2c09      	s32i.n	a0, a12, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:892
{  
    L3_IFAdaptBlkPage(ptCtrlEntry);

    L3_IFAdaptCmdType(ptCtrlEntry);
    
    return;
2000333e:	41c8      	l32i.n	a12, a1, 16
20003340:	3108      	l32i.n	a0, a1, 12
20003342:	20c112        	addi	a1, a1, 32
20003345:	f00d      	ret.n

20003347 <L3_IFAdaptFCmd..HF_1482204275+0x223>:
	...

20003348 <L3_IFAdaptFCmd..HF_1482204275+0x224>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:828
                ucCmdType = (TRUE == bSlcBlk) ? NF_PRCQ_PRG_MULTIPLN_LOW_PG_NO_HIGH : NF_PRCQ_TLC_PRG_MULTIPLN_LOW_PG_NO_HIGH;
                ucScrMod = NORMAL_SCR;
            }
            else if (FCMD_REQ_SUBTYPE_SINGLE == ucReqSubType)
            {
                ucCmdType = (TRUE == bSlcBlk) ? NF_PRCQ_PRG_LOW_PG : NF_PRCQ_TLC_PRG_LOW_PG;
20003348:	020c      	movi.n	a2, 0
2000334a:	830c      	movi.n	a3, 8
2000334c:	1148      	l32i.n	a4, a1, 4
2000334e:	c00c      	movi.n	a0, 12
20003350:	440b      	addi.n	a4, a4, -1
20003352:	830340        	moveqz	a0, a3, a4
20003355:	ffa206        	j	200031e1 <L3_IFAdaptFCmd..HF_1482204275+0xbd>

20003358 <L3_IFAdaptFCmd..HF_1482204275+0x234>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:805
            {
                DBG_Getch();
            }
            else if (FCMD_REQ_SUBTYPE_NORMAL == ucReqSubType)
            {
                if (TRUE == bCCLEnOrXorEn)                    
20003358:	051266        	bnei	a2, 1, 20003361 <L3_IFAdaptFCmd..HF_1482204275+0x23d>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:807
                {
                    DBG_Getch();                    
2000335b:	f4ef01        	l32r	a0, 20000718 <_stext+0x18>
2000335e:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:810
                }
                                
                if (TRUE == bSlcBlk)
20003361:	1158      	l32i.n	a5, a1, 4
20003363:	451526        	beqi	a5, 1, 200033ac <L3_IFAdaptFCmd..HF_1482204275+0x288>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:817
                    ucCmdType = NF_PRCQ_PRG_MULTIPLN;
                    ucScrMod = NORMAL_SCR;
                }
                else
                {
                    ucCmdType = NF_PRCQ_TLC_PRG_MULTIPLN;
20003366:	301c      	movi.n	a0, 19
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:818
                    ucScrMod = TLC_RW_TWO_PG;
20003368:	420c      	movi.n	a2, 4
2000336a:	ff9cc6        	j	200031e1 <L3_IFAdaptFCmd..HF_1482204275+0xbd>

2000336d <L3_IFAdaptFCmd..HF_1482204275+0x249>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:892
{  
    L3_IFAdaptBlkPage(ptCtrlEntry);

    L3_IFAdaptCmdType(ptCtrlEntry);
    
    return;
2000336d:	51d8      	l32i.n	a13, a1, 20
2000336f:	61e8      	l32i.n	a14, a1, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:779
        {
            if (FCMD_REQ_SUBTYPE_NORMAL == ucReqSubType)
            {
                ucCmdType = (TRUE == bSlcBlk) ? NF_PRCQ_READ_MULTIPLN : NF_PRCQ_TLC_READ_MULTIPLN;
                
                if (TRUE == bCCLEnOrXorEn)
20003371:	761c      	movi.n	a6, 23
20003373:	f70c      	movi.n	a7, 15
20003375:	201c      	movi.n	a0, 18
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:864
            DBG_Getch();
        }
    }
    
    ptCtrlEntry->bsCmdType = ucCmdType;
    ptCtrlEntry->bsScrMod = ucScrMod;
20003377:	2c88      	l32i.n	a8, a12, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:795
                    ucCmdType = NF_PRCQ_CCLR;
                }
            }
            ucScrMod = NORMAL_SCR;

            break;
20003379:	090c      	movi.n	a9, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:864
            DBG_Getch();
        }
    }
    
    ptCtrlEntry->bsCmdType = ucCmdType;
    ptCtrlEntry->bsScrMod = ucScrMod;
2000337b:	202984        	insbits	a8, a9, 2, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:779
        {
            if (FCMD_REQ_SUBTYPE_NORMAL == ucReqSubType)
            {
                ucCmdType = (TRUE == bSlcBlk) ? NF_PRCQ_READ_MULTIPLN : NF_PRCQ_TLC_READ_MULTIPLN;
                
                if (TRUE == bCCLEnOrXorEn)
2000337e:	930720        	movnez	a0, a7, a2
20003381:	930630        	movnez	a0, a6, a3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:864
            DBG_Getch();
        }
    }
    
    ptCtrlEntry->bsCmdType = ucCmdType;
    ptCtrlEntry->bsScrMod = ucScrMod;
20003384:	2c89      	s32i.n	a8, a12, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:863
            DBG_Printf("L3_Adapter2 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }
    
    ptCtrlEntry->bsCmdType = ucCmdType;
20003386:	064c02        	s8i	a0, a12, 6
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:892
{  
    L3_IFAdaptBlkPage(ptCtrlEntry);

    L3_IFAdaptCmdType(ptCtrlEntry);
    
    return;
20003389:	41c8      	l32i.n	a12, a1, 16
2000338b:	3108      	l32i.n	a0, a1, 12
2000338d:	20c112        	addi	a1, a1, 32
20003390:	f00d      	ret.n

20003392 <L3_IFAdaptFCmd..HF_1482204275+0x26e>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:842
        }
        case FCMD_REQ_TYPE_ERASE:
        {
            if (FCMD_REQ_SUBTYPE_SINGLE == ucReqSubType)
            {                
                ucCmdType = (TRUE == bSlcBlk) ? NF_PRCQ_ERS : NF_PRCQ_TLC_ERS;
20003392:	680c      	movi.n	a8, 6
20003394:	900c      	movi.n	a0, 9
20003396:	930820        	movnez	a0, a8, a2
20003399:	ffe406        	j	2000332d <L3_IFAdaptFCmd..HF_1482204275+0x209>

2000339c <L3_IFAdaptFCmd..HF_1482204275+0x278>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:823
                    ucScrMod = TLC_RW_TWO_PG;
                }                                
            }
            else if (FCMD_REQ_SUBTYPE_ONEPG == ucReqSubType)
            {
                ucCmdType = (TRUE == bSlcBlk) ? NF_PRCQ_PRG_MULTIPLN_LOW_PG_NO_HIGH : NF_PRCQ_TLC_PRG_MULTIPLN_LOW_PG_NO_HIGH;
2000339c:	020c      	movi.n	a2, 0
2000339e:	091c      	movi.n	a9, 16
200033a0:	11a8      	l32i.n	a10, a1, 4
200033a2:	401c      	movi.n	a0, 20
200033a4:	aa0b      	addi.n	a10, a10, -1
200033a6:	8309a0        	moveqz	a0, a9, a10
200033a9:	ff8d06        	j	200031e1 <L3_IFAdaptFCmd..HF_1482204275+0xbd>

200033ac <L3_IFAdaptFCmd..HF_1482204275+0x288>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:812
                    DBG_Getch();                    
                }
                                
                if (TRUE == bSlcBlk)
                {
                    ucCmdType = NF_PRCQ_PRG_MULTIPLN;
200033ac:	001c      	movi.n	a0, 16
200033ae:	020c      	movi.n	a2, 0
200033b0:	ff8b46        	j	200031e1 <L3_IFAdaptFCmd..HF_1482204275+0xbd>

200033b3 <L3_IFAdaptFCmd..HF_1482204275+0x28f>:
	...

200033b4 <L3_IFAdaptFCmd..HF_1482204275+0x290>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:801
        }
        case FCMD_REQ_TYPE_WRITE:
        {
            if (FCMD_REQ_SUBTYPE_INTRNAL == ucReqSubType)
            {
                DBG_Getch();
200033b4:	f4d901        	l32r	a0, 20000718 <_stext+0x18>
200033b7:	0000c0        	callx0	a0
200033ba:	ffc086        	j	200032c0 <L3_IFAdaptFCmd..HF_1482204275+0x19c>

200033bd <L3_IFAdaptFCmd..HF_1482204275+0x299>:
L3_IFAdaptFCmd..HF_1482204275():
200033bd:	000000                                        ...

200033c0 <L3_IFAllocResource..BF_1482204275>:
L3_IFAllocResource():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:519
Usage      : 
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
LOCAL BOOL L3_IFAllocResource(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
200033c0:	f0c112        	addi	a1, a1, -16
200033c3:	21c9      	s32i.n	a12, a1, 8
200033c5:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:522
    BOOL bResult;
    
    if (FCMD_REQ_SUBTYPE_SETFEATURE == ptCtrlEntry->ptReqEntry->bsReqSubType)
200033c7:	0228      	l32i.n	a2, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:519
Usage      : 
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
LOCAL BOOL L3_IFAllocResource(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
200033c9:	760c      	movi.n	a6, 7
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:522
    BOOL bResult;
    
    if (FCMD_REQ_SUBTYPE_SETFEATURE == ptCtrlEntry->ptReqEntry->bsReqSubType)
200033cb:	0258      	l32i.n	a5, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:519
Usage      : 
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
LOCAL BOOL L3_IFAllocResource(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
200033cd:	1109      	s32i.n	a0, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:522
    BOOL bResult;
    
    if (FCMD_REQ_SUBTYPE_SETFEATURE == ptCtrlEntry->ptReqEntry->bsReqSubType)
200033cf:	250550        	extui	a0, a5, 21, 3
200033d2:	f9c032        	addi	a3, a0, -7
200033d5:	0cf316        	beqz	a3, 200034a8 <L3_IFAllocResource..BF_1482204275+0xe8>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:529
        ASSERT(0x91 == ptCtrlEntry->ptReqEntry->ulReqStsAddr);
        ASSERT(0x100 == ptCtrlEntry->ptReqEntry->ulSpareAddr || 0x104 == ptCtrlEntry->ptReqEntry->ulSpareAddr);//dannier add
        return TRUE;
    }

    if (FCMD_REQ_SUBTYPE_INTRNAL == ptCtrlEntry->ptReqEntry->bsReqSubType)
200033d8:	1f2066        	bnei	a0, 2, 200033fb <L3_IFAllocResource..BF_1482204275+0x3b>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:531
    {
        ASSERT(FCMD_REQ_TYPE_WRITE == ptCtrlEntry->ptReqEntry->bsReqType);
200033db:	d54250        	extui	a4, a5, 18, 14
200033de:	020647        	bnone	a6, a4, 200033e4 <L3_IFAllocResource..BF_1482204275+0x24>
200033e1:	002fc6        	j	200034a4 <L3_IFAllocResource..BF_1482204275+0xe4>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:532
        ASSERT(FCMD_REQ_TLC_BLK == ptCtrlEntry->ptReqEntry->tFlashDesc.bsBlkMod);
200033e4:	042252        	l32i	a5, a2, 16
200033e7:	155050        	extui	a5, a5, 16, 2
200033ea:	fec552        	addi	a5, a5, -2
200033ed:	0d7556        	bnez	a5, 200034c8 <L3_IFAllocResource..BF_1482204275+0x108>

200033f0 <L3_IFAllocResource..BF_1482204275+0x30>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:526
    
    if (FCMD_REQ_SUBTYPE_SETFEATURE == ptCtrlEntry->ptReqEntry->bsReqSubType)
    {
        ASSERT(0x91 == ptCtrlEntry->ptReqEntry->ulReqStsAddr);
        ASSERT(0x100 == ptCtrlEntry->ptReqEntry->ulSpareAddr || 0x104 == ptCtrlEntry->ptReqEntry->ulSpareAddr);//dannier add
        return TRUE;
200033f0:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:568
        {
            L3_FCMDQSetIntrPptr(ucTLun, ptCtrlEntry->bsCtrlPtr, FALSE);
        }
    }

    return bResult;
200033f2:	21c8      	l32i.n	a12, a1, 8
200033f4:	1108      	l32i.n	a0, a1, 4
200033f6:	10c112        	addi	a1, a1, 16
200033f9:	f00d      	ret.n

200033fb <L3_IFAllocResource..BF_1482204275+0x3b>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:536
        ASSERT(FCMD_REQ_TYPE_WRITE == ptCtrlEntry->ptReqEntry->bsReqType);
        ASSERT(FCMD_REQ_TLC_BLK == ptCtrlEntry->ptReqEntry->tFlashDesc.bsBlkMod);
        return TRUE;
    }

    if (TRUE == L3_IsTlcXor6DsgIssue(ptCtrlEntry->ptReqEntry))
200033fb:	ffa045        	call0	20002e00 <L3_IsTlcXor6DsgIssue>
200033fe:	ffc262        	addi	a6, a2, -1
20003401:	0c7616        	beqz	a6, 200034cc <L3_IFAllocResource..BF_1482204275+0x10c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:544
        {
            ptCtrlEntry->bsMultiStep = 3;
        }
    }

    if (TRUE == L3_IsNeedDoXor(ptCtrlEntry->ptReqEntry))
20003404:	002c22        	l32i	a2, a12, 0
20003407:	ff9d05        	call0	20002dd8 <L3_IsNeedDoXor>
2000340a:	01a092        	movi	a9, 1
2000340d:	006192        	s32i	a9, a1, 0
20003410:	3c1266        	bnei	a2, 1, 20003450 <L3_IFAllocResource..BF_1482204275+0x90>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:546
    {
        if (FALSE == L3_AllocXore(ptCtrlEntry))
20003413:	0c2d      	mov.n	a2, a12
20003415:	ff8a85        	call0	20002cc0 <L3_AllocXore>
20003418:	42fc      	bnez.n	a2, 20003450 <L3_IFAllocResource..BF_1482204275+0x90>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:548
        {
            U8 ucTLun = ptCtrlEntry->ptReqEntry->bsTLun; 
2000341a:	0c28      	l32i.n	a2, a12, 0
2000341c:	000222        	l8ui	a2, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:243
BOOL L3_SchGetStsBit(U8 ucTLun, STS_BITMAP_TYPE eStsBmpType)
{
    U8 ucPU = L3_GET_PU(ucTLun);
    U8 ucLunInPU = L3_GET_LUN_IN_PU(ucTLun);

    return (0==(l_aTLunStsBmp[eStsBmpType][ucLunInPU] & (1<<ucPU))) ? 0 : 1;
2000341f:	01a8      	l32i.n	a10, a1, 0
20003421:	401200        	ssl	a2
20003424:	a13a00        	sll	a3, a10
20003427:	0020c0        	memw
2000342a:	f50501        	l32r	a0, 20000840 <_stext+0x140>
2000342d:	7f2002        	l32i	a0, a0, 0x1fc
20003430:	0b0c      	movi.n	a11, 0
20003432:	100030        	and	a0, a0, a3
20003435:	83ab00        	moveqz	a10, a11, a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:549
            if (TRUE != L3_SchGetStsBit(ucTLun, STS_BMP_ERRH))
20003438:	091a26        	beqi	a10, 1, 20003445 <L3_IFAllocResource..BF_1482204275+0x85>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:551
            {
                L3_FCMDQSetIntrPptr(ucTLun, ptCtrlEntry->bsCtrlPtr, FALSE);
2000343b:	1c38      	l32i.n	a3, a12, 4
2000343d:	040c      	movi.n	a4, 0
2000343f:	153c30        	extui	a3, a3, 28, 2
20003442:	01acc5        	call0	20004f10 <L3_FCMDQSetIntrPptr>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:554
            }
            PRINT_DEBUG("L3_IFAllocResource: XOR Engine Allocation Failed, Command Be Pended.\n");
            return FALSE;
20003445:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:568
        {
            L3_FCMDQSetIntrPptr(ucTLun, ptCtrlEntry->bsCtrlPtr, FALSE);
        }
    }

    return bResult;
20003447:	21c8      	l32i.n	a12, a1, 8
20003449:	1108      	l32i.n	a0, a1, 4
2000344b:	10c112        	addi	a1, a1, 16
2000344e:	f00d      	ret.n

20003450 <L3_IFAllocResource..BF_1482204275+0x90>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:558
            PRINT_DEBUG("L3_IFAllocResource: XOR Engine Allocation Failed, Command Be Pended.\n");
            return FALSE;
        }
    }

    bResult = L3_AllocResource(ptCtrlEntry);
20003450:	202cc0        	or	a2, a12, a12
20003453:	feaac5        	call0	20001f00 <L3_AllocResource>
20003456:	200220        	or	a0, a2, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:559
    if (TRUE != bResult)
20003459:	3b1226        	beqi	a2, 1, 20003498 <L3_IFAllocResource..BF_1482204275+0xd8>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:561
    {
        U8 ucTLun = ptCtrlEntry->ptReqEntry->bsTLun; 
2000345c:	002c22        	l32i	a2, a12, 0
2000345f:	000222        	l8ui	a2, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:243
20003462:	0148      	l32i.n	a4, a1, 0
20003464:	401200        	ssl	a2
20003467:	a17400        	sll	a7, a4
2000346a:	0020c0        	memw
2000346d:	f4f461        	l32r	a6, 20000840 <_stext+0x140>
20003470:	3109      	s32i.n	a0, a1, 12
20003472:	7f2662        	l32i	a6, a6, 0x1fc
20003475:	050c      	movi.n	a5, 0
20003477:	106670        	and	a6, a6, a7
2000347a:	834560        	moveqz	a4, a5, a6
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:562
        if (TRUE != L3_SchGetStsBit(ucTLun, STS_BMP_ERRH))
2000347d:	171426        	beqi	a4, 1, 20003498 <L3_IFAllocResource..BF_1482204275+0xd8>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:564
        {
            L3_FCMDQSetIntrPptr(ucTLun, ptCtrlEntry->bsCtrlPtr, FALSE);
20003480:	1c38      	l32i.n	a3, a12, 4
20003482:	040c      	movi.n	a4, 0
20003484:	153c30        	extui	a3, a3, 28, 2
20003487:	01a885        	call0	20004f10 <L3_FCMDQSetIntrPptr>
2000348a:	3108      	l32i.n	a0, a1, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:568
        }
    }

    return bResult;
2000348c:	21c8      	l32i.n	a12, a1, 8
2000348e:	002d      	mov.n	a2, a0
20003490:	1108      	l32i.n	a0, a1, 4
20003492:	10c112        	addi	a1, a1, 16
20003495:	f00d      	ret.n

20003497 <L3_IFAllocResource..BF_1482204275+0xd7>:
	...

20003498 <L3_IFAllocResource..BF_1482204275+0xd8>:
20003498:	21c8      	l32i.n	a12, a1, 8
2000349a:	002d      	mov.n	a2, a0
2000349c:	1108      	l32i.n	a0, a1, 4
2000349e:	10c112        	addi	a1, a1, 16
200034a1:	f00d      	ret.n

200034a3 <L3_IFAllocResource..BF_1482204275+0xe3>:
	...

200034a4 <L3_IFAllocResource..BF_1482204275+0xe4>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:531
        return TRUE;
    }

    if (FCMD_REQ_SUBTYPE_INTRNAL == ptCtrlEntry->ptReqEntry->bsReqSubType)
    {
        ASSERT(FCMD_REQ_TYPE_WRITE == ptCtrlEntry->ptReqEntry->bsReqType);
200034a4:	ffff06        	j	200034a4 <L3_IFAllocResource..BF_1482204275+0xe4>

200034a7 <L3_IFAllocResource..BF_1482204275+0xe7>:
	...

200034a8 <L3_IFAllocResource..BF_1482204275+0xe8>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:524
{
    BOOL bResult;
    
    if (FCMD_REQ_SUBTYPE_SETFEATURE == ptCtrlEntry->ptReqEntry->bsReqSubType)
    {
        ASSERT(0x91 == ptCtrlEntry->ptReqEntry->ulReqStsAddr);
200034a8:	1248      	l32i.n	a4, a2, 4
200034aa:	91a052        	movi	a5, 145
200034ad:	139457        	bne	a4, a5, 200034c4 <L3_IFAllocResource..BF_1482204275+0x104>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:525
        ASSERT(0x100 == ptCtrlEntry->ptReqEntry->ulSpareAddr || 0x104 == ptCtrlEntry->ptReqEntry->ulSpareAddr);//dannier add
200034b0:	2208      	l32i.n	a0, a2, 8
200034b2:	ffd062        	addmi	a6, a0, 0xffffff00
200034b5:	f37616        	beqz	a6, 200033f0 <L3_IFAllocResource..BF_1482204275+0x30>
200034b8:	04a172        	movi	a7, 0x104
200034bb:	c07070        	sub	a7, a0, a7
200034be:	f2e716        	beqz	a7, 200033f0 <L3_IFAllocResource..BF_1482204275+0x30>
200034c1:	ffff06        	j	200034c1 <L3_IFAllocResource..BF_1482204275+0x101>

200034c4 <L3_IFAllocResource..BF_1482204275+0x104>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:524
{
    BOOL bResult;
    
    if (FCMD_REQ_SUBTYPE_SETFEATURE == ptCtrlEntry->ptReqEntry->bsReqSubType)
    {
        ASSERT(0x91 == ptCtrlEntry->ptReqEntry->ulReqStsAddr);
200034c4:	ffff06        	j	200034c4 <L3_IFAllocResource..BF_1482204275+0x104>

200034c7 <L3_IFAllocResource..BF_1482204275+0x107>:
	...

200034c8 <L3_IFAllocResource..BF_1482204275+0x108>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:532
    }

    if (FCMD_REQ_SUBTYPE_INTRNAL == ptCtrlEntry->ptReqEntry->bsReqSubType)
    {
        ASSERT(FCMD_REQ_TYPE_WRITE == ptCtrlEntry->ptReqEntry->bsReqType);
        ASSERT(FCMD_REQ_TLC_BLK == ptCtrlEntry->ptReqEntry->tFlashDesc.bsBlkMod);
200034c8:	ffff06        	j	200034c8 <L3_IFAllocResource..BF_1482204275+0x108>

200034cb <L3_IFAllocResource..BF_1482204275+0x10b>:
	...

200034cc <L3_IFAllocResource..BF_1482204275+0x10c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:538
        return TRUE;
    }

    if (TRUE == L3_IsTlcXor6DsgIssue(ptCtrlEntry->ptReqEntry))
    {
        if (ptCtrlEntry->bsMultiStep == 0)
200034cc:	1c08      	l32i.n	a0, a12, 4
200034ce:	158a00        	extui	a8, a0, 26, 2
200034d1:	f2f856        	bnez	a8, 20003404 <L3_IFAllocResource..BF_1482204275+0x44>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:540
        {
            ptCtrlEntry->bsMultiStep = 3;
200034d4:	f4dc91        	l32r	a9, 20000844 <_stext+0x144>
200034d7:	209090        	or	a9, a0, a9
200034da:	1c99      	s32i.n	a9, a12, 4
200034dc:	ffc906        	j	20003404 <L3_IFAllocResource..BF_1482204275+0x44>

200034df <L3_IFAllocResource..BF_1482204275+0x11f>:
	...

200034e0 <L3_SchClrStsBit>:
L3_SchClrStsBit():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:283
void L3_SchClrStsBit(U8 ucTLun, STS_BITMAP_TYPE eStsBmpType)
{
    U8 ucPU = L3_GET_PU(ucTLun);
    U8 ucLunInPU = L3_GET_LUN_IN_PU(ucTLun);

    l_aTLunStsBmp[eStsBmpType][ucLunInPU] &= ~(1 << ucPU);
200034e0:	f87c      	movi.n	a8, -1
200034e2:	1173c0        	slli	a7, a3, 4
200034e5:	f4d851        	l32r	a5, 20000848 <_stext+0x148>
200034e8:	401200        	ssl	a2
200034eb:	160c      	movi.n	a6, 1
200034ed:	a16600        	sll	a6, a6
200034f0:	557a      	add.n	a5, a5, a7
200034f2:	306680        	xor	a6, a6, a8
200034f5:	0020c0        	memw
200034f8:	7f2542        	l32i	a4, a5, 0x1fc
200034fb:	104460        	and	a4, a4, a6
200034fe:	0020c0        	memw
20003501:	7f6542        	s32i	a4, a5, 0x1fc
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:285

    return;
20003504:	f00d      	ret.n

20003506 <L3_SchClrStsBit+0x26>:
	...

20003508 <L2_BbtIsPbnBindingTableEnable>:
L2_BbtIsPbnBindingTableEnable():
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:3412
    l_ucIsPbnBindingTableReady = TRUE;
}

GLOBAL U8 L2_BbtIsPbnBindingTableEnable(void)
{
    return l_ucIsPbnBindingTableReady;
20003508:	f48e21        	l32r	a2, 20000740 <_stext+0x40>
2000350b:	0020c0        	memw
2000350e:	2228      	l32i.n	a2, a2, 8
20003510:	742020        	extui	a2, a2, 0, 8
20003513:	f00d      	ret.n

20003515 <L2_BbtIsPbnBindingTableEnable+0xd>:
20003515:	000000                                        ...

20003518 <L3_RedMgrReleaseNode>:
L3_RedMgrReleaseNode():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:275
Usage      : 
History    : 
    1. 2016.8.15 JasonGuo create function
==============================================================================*/
void L3_RedMgrReleaseNode(SDL_NODE *ptBsyNode)
{
20003518:	f0c112        	addi	a1, a1, -16
2000351b:	0361e2        	s32i	a14, a1, 12
2000351e:	0161c2        	s32i	a12, a1, 4
20003521:	006102        	s32i	a0, a1, 0
20003524:	f47e01        	l32r	a0, 2000071c <_stext+0x1c>
20003527:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:222
==============================================================================*/
void SDL_ReleaseNode(SDL_MGR *ptSDLMgr, SDL_NODE *ptBsyNode)
{
    U16 usBsyPtr;

    SDL_ASSERT(SDL_INVALID != ptSDLMgr->ptHead->bsBsyHeadPtr);
20003529:	262022        	l32i	a2, a0, 152
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:275
2000352c:	f48ae1        	l32r	a14, 20000754 <_stext+0x54>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:222
2000352f:	021222        	l16ui	a2, a2, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:275
20003532:	21d9      	s32i.n	a13, a1, 8
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:222
20003534:	1192e7        	bne	a2, a14, 20003549 <L3_RedMgrReleaseNode+0x31>
20003537:	f4c521        	l32r	a2, 2000084c <_stext+0x14c>
2000353a:	dea032        	movi	a3, 222
2000353d:	077245        	call0	2000ac64 <dbg_printf>
20003540:	f47601        	l32r	a0, 20000718 <_stext+0x18>
20003543:	0000c0        	callx0	a0
20003546:	f47501        	l32r	a0, 2000071c <_stext+0x1c>

20003549 <L3_RedMgrReleaseNode+0x31>:
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:223
    SDL_ASSERT(SDL_NODE_STS_BUSY == ptBsyNode->bsStatus);
20003549:	0c38      	l32i.n	a3, a12, 0
2000354b:	143030        	extui	a3, a3, 0, 2
2000354e:	141326        	beqi	a3, 1, 20003566 <L3_RedMgrReleaseNode+0x4e>
20003551:	f4be21        	l32r	a2, 2000084c <_stext+0x14c>
20003554:	dfa032        	movi	a3, 223
20003557:	201110        	or	a1, a1, a1
2000355a:	077085        	call0	2000ac64 <dbg_printf>
2000355d:	f46e01        	l32r	a0, 20000718 <_stext+0x18>
20003560:	0000c0        	callx0	a0
20003563:	f46e01        	l32r	a0, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:228

    usBsyPtr = ptBsyNode->bsIndex;

    // Del the ptBsyNode from the busy liink list
    if (ptSDLMgr->ptHead->bsBsyHeadPtr == ptSDLMgr->ptHead->bsBsyTailPtr)
20003566:	262022        	l32i	a2, a0, 152
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:225
    U16 usBsyPtr;

    SDL_ASSERT(SDL_INVALID != ptSDLMgr->ptHead->bsBsyHeadPtr);
    SDL_ASSERT(SDL_NODE_STS_BUSY == ptBsyNode->bsStatus);

    usBsyPtr = ptBsyNode->bsIndex;
20003569:	011cd2        	l16ui	a13, a12, 2
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:228

    // Del the ptBsyNode from the busy liink list
    if (ptSDLMgr->ptHead->bsBsyHeadPtr == ptSDLMgr->ptHead->bsBsyTailPtr)
2000356c:	021252        	l16ui	a5, a2, 4
2000356f:	031262        	l16ui	a6, a2, 6
20003572:	c04d50        	sub	a4, a13, a5
20003575:	789567        	bne	a5, a6, 200035f1 <L3_RedMgrReleaseNode+0xd9>
20003578:	0ec456        	bnez	a4, 20003668 <L3_RedMgrReleaseNode+0x150>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:231
    {
        SDL_ASSERT(ptSDLMgr->ptHead->bsBsyHeadPtr == usBsyPtr);
        ptSDLMgr->ptHead->bsBsyHeadPtr = SDL_INVALID;
2000357b:	0252e2        	s16i	a14, a2, 4
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:232
        ptSDLMgr->ptHead->bsBsyTailPtr = SDL_INVALID;
2000357e:	0352e2        	s16i	a14, a2, 6
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:256
            ptSDLMgr->ptList[ptBsyNode->bsNext].bsPre = ptBsyNode->bsPre;
        }
    }

    // Add the ptBsyNode to the free link list tail
    if (SDL_INVALID == ptSDLMgr->ptHead->bsFreeTailPtr)
20003581:	011242        	l16ui	a4, a2, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:277
    SDL_ReleaseNode(&l_tSDLRedMgr, ptBsyNode);
    SDL_ASSERT(l_tSDLRedMgr.ptHead->bsFreeCnt + l_tSDLRedMgr.ptHead->bsBsyCnt == SDL_RED_NUM);
20003584:	00a4b2        	movi	a11, 0x400
20003587:	c054e0        	sub	a5, a4, a14
2000358a:	0ae516        	beqz	a5, 2000363c <L3_RedMgrReleaseNode+0x124>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:267
    }
    else
    {
        ptBsyNode->bsPre = ptSDLMgr->ptHead->bsFreeTailPtr;
        ptBsyNode->bsNext = ptSDLMgr->ptHead->bsFreeHeadPtr;
        ptSDLMgr->ptList[ptSDLMgr->ptHead->bsFreeHeadPtr].bsPre = usBsyPtr;
2000358d:	272072        	l32i	a7, a0, 156
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:265
        ptBsyNode->bsPre = ptSDLMgr->ptHead->bsFreeTailPtr;
        ptBsyNode->bsNext = ptSDLMgr->ptHead->bsFreeHeadPtr;
    }
    else
    {
        ptBsyNode->bsPre = ptSDLMgr->ptHead->bsFreeTailPtr;
20003590:	025c42        	s16i	a4, a12, 4
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:266
        ptBsyNode->bsNext = ptSDLMgr->ptHead->bsFreeHeadPtr;
20003593:	001292        	l16ui	a9, a2, 0
20003596:	035c92        	s16i	a9, a12, 6
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:267
        ptSDLMgr->ptList[ptSDLMgr->ptHead->bsFreeHeadPtr].bsPre = usBsyPtr;
20003599:	001282        	l16ui	a8, a2, 0
2000359c:	b08870        	addx8	a8, a8, a7
2000359f:	0258d2        	s16i	a13, a8, 4
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:268
        ptSDLMgr->ptList[ptSDLMgr->ptHead->bsFreeTailPtr].bsNext = usBsyPtr;
200035a2:	011262        	l16ui	a6, a2, 2
200035a5:	b06670        	addx8	a6, a6, a7
200035a8:	0356d2        	s16i	a13, a6, 6
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:269
        ptSDLMgr->ptHead->bsFreeTailPtr = usBsyPtr;
200035ab:	0152d2        	s16i	a13, a2, 2
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:272
    }

    ptBsyNode->bsStatus = SDL_NODE_STS_FREE;
200035ae:	002ce2        	l32i	a14, a12, 0
200035b1:	fcaf02        	movi	a0, -4
200035b4:	10ee00        	and	a14, a14, a0
200035b7:	006ce2        	s32i	a14, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:280
    //SDL_ASSERT(SDL_ShowList(&l_tSDLRedMgr, SDL_NODE_STS_FREE, TRUE) + SDL_ShowList(&l_tSDLRedMgr, SDL_NODE_STS_BUSY, TRUE) == SDL_RED_NUM);

    return;
200035ba:	11c8      	l32i.n	a12, a1, 4
200035bc:	31e8      	l32i.n	a14, a1, 12
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:276
    
    // update free/busy node cnt
    ptSDLMgr->ptHead->bsFreeCnt++;
    ptSDLMgr->ptHead->bsBsyCnt--;
200035be:	0512d2        	l16ui	a13, a2, 10
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:275
    }

    ptBsyNode->bsStatus = SDL_NODE_STS_FREE;
    
    // update free/busy node cnt
    ptSDLMgr->ptHead->bsFreeCnt++;
200035c1:	0412a2        	l16ui	a10, a2, 8
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:276
    ptSDLMgr->ptHead->bsBsyCnt--;
200035c4:	dd0b      	addi.n	a13, a13, -1
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:275
    }

    ptBsyNode->bsStatus = SDL_NODE_STS_FREE;
    
    // update free/busy node cnt
    ptSDLMgr->ptHead->bsFreeCnt++;
200035c6:	aa1b      	addi.n	a10, a10, 1
200035c8:	0452a2        	s16i	a10, a2, 8
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:276
    ptSDLMgr->ptHead->bsBsyCnt--;
200035cb:	f4d0d0        	extui	a13, a13, 0, 16
200035ce:	0552d2        	s16i	a13, a2, 10
200035d1:	f4a0a0        	extui	a10, a10, 0, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:277
    1. 2016.8.15 JasonGuo create function
==============================================================================*/
void L3_RedMgrReleaseNode(SDL_NODE *ptBsyNode)
{
    SDL_ReleaseNode(&l_tSDLRedMgr, ptBsyNode);
    SDL_ASSERT(l_tSDLRedMgr.ptHead->bsFreeCnt + l_tSDLRedMgr.ptHead->bsBsyCnt == SDL_RED_NUM);
200035d4:	aada      	add.n	a10, a10, a13
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:280
    //SDL_ASSERT(SDL_ShowList(&l_tSDLRedMgr, SDL_NODE_STS_FREE, TRUE) + SDL_ShowList(&l_tSDLRedMgr, SDL_NODE_STS_BUSY, TRUE) == SDL_RED_NUM);

    return;
200035d6:	21d8      	l32i.n	a13, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:277
    1. 2016.8.15 JasonGuo create function
==============================================================================*/
void L3_RedMgrReleaseNode(SDL_NODE *ptBsyNode)
{
    SDL_ReleaseNode(&l_tSDLRedMgr, ptBsyNode);
    SDL_ASSERT(l_tSDLRedMgr.ptHead->bsFreeCnt + l_tSDLRedMgr.ptHead->bsBsyCnt == SDL_RED_NUM);
200035d8:	0e1ab7        	beq	a10, a11, 200035ea <L3_RedMgrReleaseNode+0xd2>
200035db:	f49c21        	l32r	a2, 2000084c <_stext+0x14c>
200035de:	15a132        	movi	a3, 0x115
200035e1:	076805        	call0	2000ac64 <dbg_printf>
200035e4:	f44d01        	l32r	a0, 20000718 <_stext+0x18>
200035e7:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:280
    //SDL_ASSERT(SDL_ShowList(&l_tSDLRedMgr, SDL_NODE_STS_FREE, TRUE) + SDL_ShowList(&l_tSDLRedMgr, SDL_NODE_STS_BUSY, TRUE) == SDL_RED_NUM);

    return;
200035ea:	0108      	l32i.n	a0, a1, 0
200035ec:	10c112        	addi	a1, a1, 16
200035ef:	f00d      	ret.n

200035f1 <L3_RedMgrReleaseNode+0xd9>:
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:236
        ptSDLMgr->ptHead->bsBsyHeadPtr = SDL_INVALID;
        ptSDLMgr->ptHead->bsBsyTailPtr = SDL_INVALID;
    }
    else
    {
        if (ptSDLMgr->ptHead->bsBsyHeadPtr == usBsyPtr)
200035f1:	272072        	l32i	a7, a0, 156
200035f4:	209d57        	bne	a13, a5, 20003618 <L3_RedMgrReleaseNode+0x100>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:238
        {
            ptSDLMgr->ptHead->bsBsyHeadPtr = ptBsyNode->bsNext;
200035f7:	031c82        	l16ui	a8, a12, 6
200035fa:	025282        	s16i	a8, a2, 4
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:239
            ptSDLMgr->ptList[ptBsyNode->bsNext].bsPre = ptBsyNode->bsPre;
200035fd:	031c62        	l16ui	a6, a12, 6
20003600:	021c52        	l16ui	a5, a12, 4
20003603:	b06670        	addx8	a6, a6, a7
20003606:	025652        	s16i	a5, a6, 4
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:240
            ptSDLMgr->ptList[ptSDLMgr->ptHead->bsBsyTailPtr].bsNext = ptSDLMgr->ptHead->bsBsyHeadPtr;
20003609:	031242        	l16ui	a4, a2, 6
2000360c:	021232        	l16ui	a3, a2, 4
2000360f:	b04470        	addx8	a4, a4, a7
20003612:	035432        	s16i	a3, a4, 6
20003615:	ffda06        	j	20003581 <L3_RedMgrReleaseNode+0x69>

20003618 <L3_RedMgrReleaseNode+0x100>:
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:242
        }
        else if (ptSDLMgr->ptHead->bsBsyTailPtr == usBsyPtr)
20003618:	021c52        	l16ui	a5, a12, 4
2000361b:	319d67        	bne	a13, a6, 20003650 <L3_RedMgrReleaseNode+0x138>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:244
        {
            ptSDLMgr->ptHead->bsBsyTailPtr = ptBsyNode->bsPre;
2000361e:	035252        	s16i	a5, a2, 6
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:245
            ptSDLMgr->ptList[ptBsyNode->bsPre].bsNext = ptBsyNode->bsNext;
20003621:	021c32        	l16ui	a3, a12, 4
20003624:	031cb2        	l16ui	a11, a12, 6
20003627:	b03370        	addx8	a3, a3, a7
2000362a:	0353b2        	s16i	a11, a3, 6
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:246
            ptSDLMgr->ptList[ptSDLMgr->ptHead->bsBsyHeadPtr].bsPre = ptSDLMgr->ptHead->bsBsyTailPtr;
2000362d:	0212a2        	l16ui	a10, a2, 4
20003630:	031292        	l16ui	a9, a2, 6
20003633:	b0aa70        	addx8	a10, a10, a7
20003636:	025a92        	s16i	a9, a10, 4
20003639:	ffd106        	j	20003581 <L3_RedMgrReleaseNode+0x69>

2000363c <L3_RedMgrReleaseNode+0x124>:
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:259

    // Add the ptBsyNode to the free link list tail
    if (SDL_INVALID == ptSDLMgr->ptHead->bsFreeTailPtr)
    {
        ptSDLMgr->ptHead->bsFreeTailPtr = usBsyPtr;
        ptSDLMgr->ptHead->bsFreeHeadPtr = usBsyPtr;
2000363c:	0052d2        	s16i	a13, a2, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:258
    }

    // Add the ptBsyNode to the free link list tail
    if (SDL_INVALID == ptSDLMgr->ptHead->bsFreeTailPtr)
    {
        ptSDLMgr->ptHead->bsFreeTailPtr = usBsyPtr;
2000363f:	0152d2        	s16i	a13, a2, 2
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:260
        ptSDLMgr->ptHead->bsFreeHeadPtr = usBsyPtr;
        ptBsyNode->bsPre = ptSDLMgr->ptHead->bsFreeTailPtr;
20003642:	025cd2        	s16i	a13, a12, 4
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:261
        ptBsyNode->bsNext = ptSDLMgr->ptHead->bsFreeHeadPtr;
20003645:	001242        	l16ui	a4, a2, 0
20003648:	035c42        	s16i	a4, a12, 6
2000364b:	ffd7c6        	j	200035ae <L3_RedMgrReleaseNode+0x96>

2000364e <L3_RedMgrReleaseNode+0x136>:
	...

20003650 <L3_RedMgrReleaseNode+0x138>:
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:250
            ptSDLMgr->ptList[ptBsyNode->bsPre].bsNext = ptBsyNode->bsNext;
            ptSDLMgr->ptList[ptSDLMgr->ptHead->bsBsyHeadPtr].bsPre = ptSDLMgr->ptHead->bsBsyTailPtr;
        }
        else
        {
            ptSDLMgr->ptList[ptBsyNode->bsPre].bsNext = ptBsyNode->bsNext;
20003650:	b0a570        	addx8	a10, a5, a7
20003653:	031c92        	l16ui	a9, a12, 6
20003656:	035a92        	s16i	a9, a10, 6
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:251
            ptSDLMgr->ptList[ptBsyNode->bsNext].bsPre = ptBsyNode->bsPre;
20003659:	031c82        	l16ui	a8, a12, 6
2000365c:	021c62        	l16ui	a6, a12, 4
2000365f:	b08870        	addx8	a8, a8, a7
20003662:	025862        	s16i	a6, a8, 4
20003665:	ffc606        	j	20003581 <L3_RedMgrReleaseNode+0x69>

20003668 <L3_RedMgrReleaseNode+0x150>:
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:230
    usBsyPtr = ptBsyNode->bsIndex;

    // Del the ptBsyNode from the busy liink list
    if (ptSDLMgr->ptHead->bsBsyHeadPtr == ptSDLMgr->ptHead->bsBsyTailPtr)
    {
        SDL_ASSERT(ptSDLMgr->ptHead->bsBsyHeadPtr == usBsyPtr);
20003668:	f47921        	l32r	a2, 2000084c <_stext+0x14c>
2000366b:	e6a032        	movi	a3, 230
2000366e:	075f45        	call0	2000ac64 <dbg_printf>
20003671:	f42901        	l32r	a0, 20000718 <_stext+0x18>
20003674:	0000c0        	callx0	a0
20003677:	f42901        	l32r	a0, 2000071c <_stext+0x1c>
2000367a:	262022        	l32i	a2, a0, 152
2000367d:	ffbe86        	j	2000357b <L3_RedMgrReleaseNode+0x63>

20003680 <L3_RedMgrGetRedAddrByNode>:
L3_RedMgrGetRedAddrByNode():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:299
{
    U32 ulRedAddr;

    ulRedAddr = SDL_GetAddrByMemID(l_tSDLRedMgr.ptHead->ulMemBase, ptNode->bsIndex, l_tSDLRedMgr.ptHead->ulUnitSize);

    return ulRedAddr;
20003680:	f42741        	l32r	a4, 2000071c <_stext+0x1c>
20003683:	262442        	l32i	a4, a4, 152
20003686:	011252        	l16ui	a5, a2, 2
20003689:	4438      	l32i.n	a3, a4, 16
2000368b:	5428      	l32i.n	a2, a4, 20
2000368d:	823350        	mull	a3, a3, a5
20003690:	223a      	add.n	a2, a2, a3
20003692:	f00d      	ret.n

20003694 <L3_RedMgrAllocateNode>:
L3_RedMgrAllocateNode():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:254
Usage      : 
History    : 
    1. 2016.8.15 JasonGuo create function
==============================================================================*/
SDL_NODE *L3_RedMgrAllocateNode(void)
{
20003694:	f0c112        	addi	a1, a1, -16
20003697:	21d9      	s32i.n	a13, a1, 8
20003699:	0109      	s32i.n	a0, a1, 0
2000369b:	f42001        	l32r	a0, 2000071c <_stext+0x1c>
2000369e:	31e9      	s32i.n	a14, a1, 12
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:159
SDL_NODE *SDL_AllocNode(SDL_MGR *ptSDLMgr)
{
    U16 usFreePtr;
    SDL_NODE *ptFreeNode;

    usFreePtr = ptSDLMgr->ptHead->bsFreeHeadPtr;
200036a0:	262022        	l32i	a2, a0, 152
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:254
200036a3:	f42ce1        	l32r	a14, 20000754 <_stext+0x54>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:159
200036a6:	0012d2        	l16ui	a13, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:254
200036a9:	11c9      	s32i.n	a12, a1, 4
200036ab:	c03de0        	sub	a3, a13, a14
200036ae:	0cb316        	beqz	a3, 2000377d <L3_RedMgrAllocateNode+0xe9>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:165
    if (SDL_INVALID == usFreePtr)
    {
        return NULL;
    }

    ptFreeNode = &ptSDLMgr->ptList[usFreePtr];
200036b1:	2720c2        	l32i	a12, a0, 156
200036b4:	b0cdc0        	addx8	a12, a13, a12
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:167

    SDL_ASSERT(SDL_NODE_STS_FREE == ptFreeNode->bsStatus);
200036b7:	0c58      	l32i.n	a5, a12, 0
200036b9:	03a042        	movi	a4, 3
200036bc:	140457        	bnone	a4, a5, 200036d4 <L3_RedMgrAllocateNode+0x40>
200036bf:	f46321        	l32r	a2, 2000084c <_stext+0x14c>
200036c2:	a7a032        	movi	a3, 167
200036c5:	0759c5        	call0	2000ac64 <dbg_printf>
200036c8:	f41401        	l32r	a0, 20000718 <_stext+0x18>
200036cb:	0000c0        	callx0	a0
200036ce:	f41301        	l32r	a0, 2000071c <_stext+0x1c>
200036d1:	262022        	l32i	a2, a0, 152

200036d4 <L3_RedMgrAllocateNode+0x40>:
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:168
    ptFreeNode->bsStatus = SDL_NODE_STS_BUSY;
200036d4:	0c58      	l32i.n	a5, a12, 0
200036d6:	c67c      	movi.n	a6, -4
200036d8:	105560        	and	a5, a5, a6
200036db:	160c      	movi.n	a6, 1
200036dd:	205560        	or	a5, a5, a6
200036e0:	0c59      	s32i.n	a5, a12, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:171

    // Del the ptFreeNode from the free link list head
    if (ptSDLMgr->ptHead->bsFreeHeadPtr == ptSDLMgr->ptHead->bsFreeTailPtr)
200036e2:	011242        	l16ui	a4, a2, 2
200036e5:	001232        	l16ui	a3, a2, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:179
        ptSDLMgr->ptHead->bsFreeTailPtr = SDL_INVALID;
    }
    else
    {
        ptSDLMgr->ptHead->bsFreeHeadPtr = ptFreeNode->bsNext;
        ptSDLMgr->ptList[ptFreeNode->bsNext].bsPre = ptFreeNode->bsPre;
200036e8:	272092        	l32i	a9, a0, 156
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:171

    SDL_ASSERT(SDL_NODE_STS_FREE == ptFreeNode->bsStatus);
    ptFreeNode->bsStatus = SDL_NODE_STS_BUSY;

    // Del the ptFreeNode from the free link list head
    if (ptSDLMgr->ptHead->bsFreeHeadPtr == ptSDLMgr->ptHead->bsFreeTailPtr)
200036eb:	099347        	bne	a3, a4, 200036f8 <L3_RedMgrAllocateNode+0x64>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:173
    {
        ptSDLMgr->ptHead->bsFreeHeadPtr = SDL_INVALID;
200036ee:	0052e2        	s16i	a14, a2, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:174
        ptSDLMgr->ptHead->bsFreeTailPtr = SDL_INVALID;
200036f1:	0152e2        	s16i	a14, a2, 2
200036f4:	000786        	j	20003716 <L3_RedMgrAllocateNode+0x82>

200036f7 <L3_RedMgrAllocateNode+0x63>:
	...

200036f8 <L3_RedMgrAllocateNode+0x64>:
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:178
    }
    else
    {
        ptSDLMgr->ptHead->bsFreeHeadPtr = ptFreeNode->bsNext;
200036f8:	031c32        	l16ui	a3, a12, 6
200036fb:	005232        	s16i	a3, a2, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:179
        ptSDLMgr->ptList[ptFreeNode->bsNext].bsPre = ptFreeNode->bsPre;
200036fe:	031cb2        	l16ui	a11, a12, 6
20003701:	021ca2        	l16ui	a10, a12, 4
20003704:	b0bb90        	addx8	a11, a11, a9
20003707:	025ba2        	s16i	a10, a11, 4
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:180
        ptSDLMgr->ptList[ptFreeNode->bsPre].bsNext = ptFreeNode->bsNext;
2000370a:	021c82        	l16ui	a8, a12, 4
2000370d:	031c72        	l16ui	a7, a12, 6
20003710:	b08890        	addx8	a8, a8, a9
20003713:	035872        	s16i	a7, a8, 6
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:184
    }

    // Add the ptFreeNode to the busy link list tail
    if (SDL_INVALID == ptSDLMgr->ptHead->bsBsyTailPtr)
20003716:	031252        	l16ui	a5, a2, 6
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:195
    }
    else
    {
        ptFreeNode->bsPre = ptSDLMgr->ptHead->bsBsyTailPtr;
        ptFreeNode->bsNext = ptSDLMgr->ptHead->bsBsyHeadPtr;
        ptSDLMgr->ptList[ptSDLMgr->ptHead->bsBsyHeadPtr].bsPre = usFreePtr;
20003719:	272062        	l32i	a6, a0, 156
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:184
        ptSDLMgr->ptList[ptFreeNode->bsNext].bsPre = ptFreeNode->bsPre;
        ptSDLMgr->ptList[ptFreeNode->bsPre].bsNext = ptFreeNode->bsNext;
    }

    // Add the ptFreeNode to the busy link list tail
    if (SDL_INVALID == ptSDLMgr->ptHead->bsBsyTailPtr)
2000371c:	6515e7        	beq	a5, a14, 20003785 <L3_RedMgrAllocateNode+0xf1>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:193
        ptFreeNode->bsPre = ptSDLMgr->ptHead->bsBsyTailPtr;
        ptFreeNode->bsNext = ptSDLMgr->ptHead->bsBsyHeadPtr;
    }
    else
    {
        ptFreeNode->bsPre = ptSDLMgr->ptHead->bsBsyTailPtr;
2000371f:	025c52        	s16i	a5, a12, 4
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:194
        ptFreeNode->bsNext = ptSDLMgr->ptHead->bsBsyHeadPtr;
20003722:	021282        	l16ui	a8, a2, 4
20003725:	035c82        	s16i	a8, a12, 6
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:195
        ptSDLMgr->ptList[ptSDLMgr->ptHead->bsBsyHeadPtr].bsPre = usFreePtr;
20003728:	021272        	l16ui	a7, a2, 4
2000372b:	b07760        	addx8	a7, a7, a6
2000372e:	0257d2        	s16i	a13, a7, 4
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:196
        ptSDLMgr->ptList[ptSDLMgr->ptHead->bsBsyTailPtr].bsNext = usFreePtr;
20003731:	031242        	l16ui	a4, a2, 6
20003734:	b04460        	addx8	a4, a4, a6
20003737:	0354d2        	s16i	a13, a4, 6
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:197
        ptSDLMgr->ptHead->bsBsyTailPtr = usFreePtr;
2000373a:	0352d2        	s16i	a13, a2, 6
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:202
    }
    
    // update free/busy node cnt
    ptSDLMgr->ptHead->bsFreeCnt--;
    ptSDLMgr->ptHead->bsBsyCnt++;
2000373d:	051202        	l16ui	a0, a2, 10
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:201
        ptSDLMgr->ptList[ptSDLMgr->ptHead->bsBsyTailPtr].bsNext = usFreePtr;
        ptSDLMgr->ptHead->bsBsyTailPtr = usFreePtr;
    }
    
    // update free/busy node cnt
    ptSDLMgr->ptHead->bsFreeCnt--;
20003740:	041232        	l16ui	a3, a2, 8
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:202
    ptSDLMgr->ptHead->bsBsyCnt++;
20003743:	001b      	addi.n	a0, a0, 1
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:201
        ptSDLMgr->ptList[ptSDLMgr->ptHead->bsBsyTailPtr].bsNext = usFreePtr;
        ptSDLMgr->ptHead->bsBsyTailPtr = usFreePtr;
    }
    
    // update free/busy node cnt
    ptSDLMgr->ptHead->bsFreeCnt--;
20003745:	ffc332        	addi	a3, a3, -1
20003748:	045232        	s16i	a3, a2, 8
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:202
    ptSDLMgr->ptHead->bsBsyCnt++;
2000374b:	f40000        	extui	a0, a0, 0, 16
2000374e:	055202        	s16i	a0, a2, 10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:261

    ptFreeNode = SDL_AllocNode(&l_tSDLRedMgr);
    SDL_ASSERT(l_tSDLRedMgr.ptHead->bsFreeCnt + l_tSDLRedMgr.ptHead->bsBsyCnt == SDL_RED_NUM);
    //SDL_ASSERT(SDL_ShowList(&l_tSDLRedMgr, SDL_NODE_STS_FREE, TRUE) + SDL_ShowList(&l_tSDLRedMgr, SDL_NODE_STS_BUSY, TRUE) == SDL_RED_NUM);

    return ptFreeNode;
20003751:	0221d2        	l32i	a13, a1, 8
20003754:	0321e2        	l32i	a14, a1, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:258
SDL_NODE *L3_RedMgrAllocateNode(void)
{
    SDL_NODE *ptFreeNode;

    ptFreeNode = SDL_AllocNode(&l_tSDLRedMgr);
    SDL_ASSERT(l_tSDLRedMgr.ptHead->bsFreeCnt + l_tSDLRedMgr.ptHead->bsBsyCnt == SDL_RED_NUM);
20003757:	041232        	l16ui	a3, a2, 8
2000375a:	00a442        	movi	a4, 0x400
2000375d:	803300        	add	a3, a3, a0
20003760:	0e1347        	beq	a3, a4, 20003772 <L3_RedMgrAllocateNode+0xde>
20003763:	f43a21        	l32r	a2, 2000084c <_stext+0x14c>
20003766:	02a132        	movi	a3, 0x102
20003769:	074f85        	call0	2000ac64 <dbg_printf>
2000376c:	f3eb01        	l32r	a0, 20000718 <_stext+0x18>
2000376f:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:261
    //SDL_ASSERT(SDL_ShowList(&l_tSDLRedMgr, SDL_NODE_STS_FREE, TRUE) + SDL_ShowList(&l_tSDLRedMgr, SDL_NODE_STS_BUSY, TRUE) == SDL_RED_NUM);

    return ptFreeNode;
20003772:	0c2d      	mov.n	a2, a12
20003774:	0108      	l32i.n	a0, a1, 0
20003776:	11c8      	l32i.n	a12, a1, 4
20003778:	10c112        	addi	a1, a1, 16
2000377b:	f00d      	ret.n

2000377d <L3_RedMgrAllocateNode+0xe9>:
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:160
{
    U16 usFreePtr;
    SDL_NODE *ptFreeNode;

    usFreePtr = ptSDLMgr->ptHead->bsFreeHeadPtr;
    if (SDL_INVALID == usFreePtr)
2000377d:	0c0c      	movi.n	a12, 0
2000377f:	051202        	l16ui	a0, a2, 10
20003782:	fff2c6        	j	20003751 <L3_RedMgrAllocateNode+0xbd>

20003785 <L3_RedMgrAllocateNode+0xf1>:
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:187

    // Add the ptFreeNode to the busy link list tail
    if (SDL_INVALID == ptSDLMgr->ptHead->bsBsyTailPtr)
    {
        ptSDLMgr->ptHead->bsBsyTailPtr = usFreePtr;
        ptSDLMgr->ptHead->bsBsyHeadPtr = ptSDLMgr->ptHead->bsBsyTailPtr;
20003785:	0252d2        	s16i	a13, a2, 4
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:186
    }

    // Add the ptFreeNode to the busy link list tail
    if (SDL_INVALID == ptSDLMgr->ptHead->bsBsyTailPtr)
    {
        ptSDLMgr->ptHead->bsBsyTailPtr = usFreePtr;
20003788:	0352d2        	s16i	a13, a2, 6
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:188
        ptSDLMgr->ptHead->bsBsyHeadPtr = ptSDLMgr->ptHead->bsBsyTailPtr;
        ptFreeNode->bsPre = ptSDLMgr->ptHead->bsBsyTailPtr;
2000378b:	025cd2        	s16i	a13, a12, 4
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:189
        ptFreeNode->bsNext = ptSDLMgr->ptHead->bsBsyHeadPtr;
2000378e:	021242        	l16ui	a4, a2, 4
20003791:	035c42        	s16i	a4, a12, 6
20003794:	ffe946        	j	2000373d <L3_RedMgrAllocateNode+0xa9>

20003797 <L3_RedMgrAllocateNode+0x103>:
	...

20003798 <L3_BufMgrReleaseNode>:
L3_BufMgrReleaseNode():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:177
Usage      : 
History    : 
    1. 2016.8.15 JasonGuo create function
==============================================================================*/
void L3_BufMgrReleaseNode(SDL_NODE *ptBsyNode)
{
20003798:	f0c112        	addi	a1, a1, -16
2000379b:	0361e2        	s32i	a14, a1, 12
2000379e:	0161c2        	s32i	a12, a1, 4
200037a1:	006102        	s32i	a0, a1, 0
200037a4:	f3de01        	l32r	a0, 2000071c <_stext+0x1c>
200037a7:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:222
==============================================================================*/
void SDL_ReleaseNode(SDL_MGR *ptSDLMgr, SDL_NODE *ptBsyNode)
{
    U16 usBsyPtr;

    SDL_ASSERT(SDL_INVALID != ptSDLMgr->ptHead->bsBsyHeadPtr);
200037a9:	242022        	l32i	a2, a0, 144
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:177
200037ac:	f3eae1        	l32r	a14, 20000754 <_stext+0x54>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:222
200037af:	021222        	l16ui	a2, a2, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:177
200037b2:	21d9      	s32i.n	a13, a1, 8
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:222
200037b4:	1192e7        	bne	a2, a14, 200037c9 <L3_BufMgrReleaseNode+0x31>
200037b7:	f42521        	l32r	a2, 2000084c <_stext+0x14c>
200037ba:	dea032        	movi	a3, 222
200037bd:	074a45        	call0	2000ac64 <dbg_printf>
200037c0:	f3d601        	l32r	a0, 20000718 <_stext+0x18>
200037c3:	0000c0        	callx0	a0
200037c6:	f3d501        	l32r	a0, 2000071c <_stext+0x1c>

200037c9 <L3_BufMgrReleaseNode+0x31>:
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:223
    SDL_ASSERT(SDL_NODE_STS_BUSY == ptBsyNode->bsStatus);
200037c9:	0c38      	l32i.n	a3, a12, 0
200037cb:	143030        	extui	a3, a3, 0, 2
200037ce:	141326        	beqi	a3, 1, 200037e6 <L3_BufMgrReleaseNode+0x4e>
200037d1:	f41e21        	l32r	a2, 2000084c <_stext+0x14c>
200037d4:	dfa032        	movi	a3, 223
200037d7:	201110        	or	a1, a1, a1
200037da:	074885        	call0	2000ac64 <dbg_printf>
200037dd:	f3ce01        	l32r	a0, 20000718 <_stext+0x18>
200037e0:	0000c0        	callx0	a0
200037e3:	f3ce01        	l32r	a0, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:228

    usBsyPtr = ptBsyNode->bsIndex;

    // Del the ptBsyNode from the busy liink list
    if (ptSDLMgr->ptHead->bsBsyHeadPtr == ptSDLMgr->ptHead->bsBsyTailPtr)
200037e6:	242022        	l32i	a2, a0, 144
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:225
    U16 usBsyPtr;

    SDL_ASSERT(SDL_INVALID != ptSDLMgr->ptHead->bsBsyHeadPtr);
    SDL_ASSERT(SDL_NODE_STS_BUSY == ptBsyNode->bsStatus);

    usBsyPtr = ptBsyNode->bsIndex;
200037e9:	011cd2        	l16ui	a13, a12, 2
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:228

    // Del the ptBsyNode from the busy liink list
    if (ptSDLMgr->ptHead->bsBsyHeadPtr == ptSDLMgr->ptHead->bsBsyTailPtr)
200037ec:	021252        	l16ui	a5, a2, 4
200037ef:	031262        	l16ui	a6, a2, 6
200037f2:	c04d50        	sub	a4, a13, a5
200037f5:	789567        	bne	a5, a6, 20003871 <L3_BufMgrReleaseNode+0xd9>
200037f8:	0ec456        	bnez	a4, 200038e8 <L3_BufMgrReleaseNode+0x150>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:231
    {
        SDL_ASSERT(ptSDLMgr->ptHead->bsBsyHeadPtr == usBsyPtr);
        ptSDLMgr->ptHead->bsBsyHeadPtr = SDL_INVALID;
200037fb:	0252e2        	s16i	a14, a2, 4
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:232
        ptSDLMgr->ptHead->bsBsyTailPtr = SDL_INVALID;
200037fe:	0352e2        	s16i	a14, a2, 6
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:256
            ptSDLMgr->ptList[ptBsyNode->bsNext].bsPre = ptBsyNode->bsPre;
        }
    }

    // Add the ptBsyNode to the free link list tail
    if (SDL_INVALID == ptSDLMgr->ptHead->bsFreeTailPtr)
20003801:	011242        	l16ui	a4, a2, 2
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:267
    }
    else
    {
        ptBsyNode->bsPre = ptSDLMgr->ptHead->bsFreeTailPtr;
        ptBsyNode->bsNext = ptSDLMgr->ptHead->bsFreeHeadPtr;
        ptSDLMgr->ptList[ptSDLMgr->ptHead->bsFreeHeadPtr].bsPre = usBsyPtr;
20003804:	252072        	l32i	a7, a0, 148
20003807:	c054e0        	sub	a5, a4, a14
2000380a:	0ae516        	beqz	a5, 200038bc <L3_BufMgrReleaseNode+0x124>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:265
        ptBsyNode->bsPre = ptSDLMgr->ptHead->bsFreeTailPtr;
        ptBsyNode->bsNext = ptSDLMgr->ptHead->bsFreeHeadPtr;
    }
    else
    {
        ptBsyNode->bsPre = ptSDLMgr->ptHead->bsFreeTailPtr;
2000380d:	025c42        	s16i	a4, a12, 4
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:266
        ptBsyNode->bsNext = ptSDLMgr->ptHead->bsFreeHeadPtr;
20003810:	001292        	l16ui	a9, a2, 0
20003813:	035c92        	s16i	a9, a12, 6
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:267
        ptSDLMgr->ptList[ptSDLMgr->ptHead->bsFreeHeadPtr].bsPre = usBsyPtr;
20003816:	001282        	l16ui	a8, a2, 0
20003819:	0020f0        	nop
2000381c:	b08870        	addx8	a8, a8, a7
2000381f:	0258d2        	s16i	a13, a8, 4
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:268
        ptSDLMgr->ptList[ptSDLMgr->ptHead->bsFreeTailPtr].bsNext = usBsyPtr;
20003822:	011262        	l16ui	a6, a2, 2
20003825:	b06670        	addx8	a6, a6, a7
20003828:	0356d2        	s16i	a13, a6, 6
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:269
        ptSDLMgr->ptHead->bsFreeTailPtr = usBsyPtr;
2000382b:	0152d2        	s16i	a13, a2, 2
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:272
    }

    ptBsyNode->bsStatus = SDL_NODE_STS_FREE;
2000382e:	002cd2        	l32i	a13, a12, 0
20003831:	fcafe2        	movi	a14, -4
20003834:	10dde0        	and	a13, a13, a14
20003837:	006cd2        	s32i	a13, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:182
    SDL_ReleaseNode(&l_tSDLBufMgr, ptBsyNode);    
    SDL_ASSERT(l_tSDLBufMgr.ptHead->bsFreeCnt + l_tSDLBufMgr.ptHead->bsBsyCnt == SDL_BUF_NUM);
    //SDL_ASSERT(SDL_ShowList(&l_tSDLBufMgr, SDL_NODE_STS_FREE, TRUE) + SDL_ShowList(&l_tSDLBufMgr, SDL_NODE_STS_BUSY, TRUE) == SDL_BUF_NUM);

    return;
2000383a:	31e8      	l32i.n	a14, a1, 12
2000383c:	11c8      	l32i.n	a12, a1, 4
2000383e:	21d8      	l32i.n	a13, a1, 8
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:276
    
    // update free/busy node cnt
    ptSDLMgr->ptHead->bsFreeCnt++;
    ptSDLMgr->ptHead->bsBsyCnt--;
20003840:	0512b2        	l16ui	a11, a2, 10
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:275
    }

    ptBsyNode->bsStatus = SDL_NODE_STS_FREE;
    
    // update free/busy node cnt
    ptSDLMgr->ptHead->bsFreeCnt++;
20003843:	0412a2        	l16ui	a10, a2, 8
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:276
    ptSDLMgr->ptHead->bsBsyCnt--;
20003846:	bb0b      	addi.n	a11, a11, -1
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:275
    }

    ptBsyNode->bsStatus = SDL_NODE_STS_FREE;
    
    // update free/busy node cnt
    ptSDLMgr->ptHead->bsFreeCnt++;
20003848:	aa1b      	addi.n	a10, a10, 1
2000384a:	0452a2        	s16i	a10, a2, 8
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:276
    ptSDLMgr->ptHead->bsBsyCnt--;
2000384d:	f4b0b0        	extui	a11, a11, 0, 16
20003850:	0552b2        	s16i	a11, a2, 10
20003853:	f4a0a0        	extui	a10, a10, 0, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:179
    1. 2016.8.15 JasonGuo create function
==============================================================================*/
void L3_BufMgrReleaseNode(SDL_NODE *ptBsyNode)
{
    SDL_ReleaseNode(&l_tSDLBufMgr, ptBsyNode);    
    SDL_ASSERT(l_tSDLBufMgr.ptHead->bsFreeCnt + l_tSDLBufMgr.ptHead->bsBsyCnt == SDL_BUF_NUM);
20003856:	aaba      	add.n	a10, a10, a11
20003858:	0eba26        	beqi	a10, 16, 2000386a <L3_BufMgrReleaseNode+0xd2>
2000385b:	f3fc21        	l32r	a2, 2000084c <_stext+0x14c>
2000385e:	b3a032        	movi	a3, 179
20003861:	074005        	call0	2000ac64 <dbg_printf>
20003864:	f3ad01        	l32r	a0, 20000718 <_stext+0x18>
20003867:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:182
    //SDL_ASSERT(SDL_ShowList(&l_tSDLBufMgr, SDL_NODE_STS_FREE, TRUE) + SDL_ShowList(&l_tSDLBufMgr, SDL_NODE_STS_BUSY, TRUE) == SDL_BUF_NUM);

    return;
2000386a:	0108      	l32i.n	a0, a1, 0
2000386c:	10c112        	addi	a1, a1, 16
2000386f:	f00d      	ret.n

20003871 <L3_BufMgrReleaseNode+0xd9>:
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:236
        ptSDLMgr->ptHead->bsBsyHeadPtr = SDL_INVALID;
        ptSDLMgr->ptHead->bsBsyTailPtr = SDL_INVALID;
    }
    else
    {
        if (ptSDLMgr->ptHead->bsBsyHeadPtr == usBsyPtr)
20003871:	252072        	l32i	a7, a0, 148
20003874:	209d57        	bne	a13, a5, 20003898 <L3_BufMgrReleaseNode+0x100>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:238
        {
            ptSDLMgr->ptHead->bsBsyHeadPtr = ptBsyNode->bsNext;
20003877:	031c82        	l16ui	a8, a12, 6
2000387a:	025282        	s16i	a8, a2, 4
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:239
            ptSDLMgr->ptList[ptBsyNode->bsNext].bsPre = ptBsyNode->bsPre;
2000387d:	031c62        	l16ui	a6, a12, 6
20003880:	021c52        	l16ui	a5, a12, 4
20003883:	b06670        	addx8	a6, a6, a7
20003886:	025652        	s16i	a5, a6, 4
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:240
            ptSDLMgr->ptList[ptSDLMgr->ptHead->bsBsyTailPtr].bsNext = ptSDLMgr->ptHead->bsBsyHeadPtr;
20003889:	031242        	l16ui	a4, a2, 6
2000388c:	021232        	l16ui	a3, a2, 4
2000388f:	b04470        	addx8	a4, a4, a7
20003892:	035432        	s16i	a3, a4, 6
20003895:	ffda06        	j	20003801 <L3_BufMgrReleaseNode+0x69>

20003898 <L3_BufMgrReleaseNode+0x100>:
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:242
        }
        else if (ptSDLMgr->ptHead->bsBsyTailPtr == usBsyPtr)
20003898:	021c52        	l16ui	a5, a12, 4
2000389b:	319d67        	bne	a13, a6, 200038d0 <L3_BufMgrReleaseNode+0x138>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:244
        {
            ptSDLMgr->ptHead->bsBsyTailPtr = ptBsyNode->bsPre;
2000389e:	035252        	s16i	a5, a2, 6
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:245
            ptSDLMgr->ptList[ptBsyNode->bsPre].bsNext = ptBsyNode->bsNext;
200038a1:	021c32        	l16ui	a3, a12, 4
200038a4:	031cb2        	l16ui	a11, a12, 6
200038a7:	b03370        	addx8	a3, a3, a7
200038aa:	0353b2        	s16i	a11, a3, 6
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:246
            ptSDLMgr->ptList[ptSDLMgr->ptHead->bsBsyHeadPtr].bsPre = ptSDLMgr->ptHead->bsBsyTailPtr;
200038ad:	0212a2        	l16ui	a10, a2, 4
200038b0:	031292        	l16ui	a9, a2, 6
200038b3:	b0aa70        	addx8	a10, a10, a7
200038b6:	025a92        	s16i	a9, a10, 4
200038b9:	ffd106        	j	20003801 <L3_BufMgrReleaseNode+0x69>

200038bc <L3_BufMgrReleaseNode+0x124>:
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:259

    // Add the ptBsyNode to the free link list tail
    if (SDL_INVALID == ptSDLMgr->ptHead->bsFreeTailPtr)
    {
        ptSDLMgr->ptHead->bsFreeTailPtr = usBsyPtr;
        ptSDLMgr->ptHead->bsFreeHeadPtr = usBsyPtr;
200038bc:	0052d2        	s16i	a13, a2, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:258
    }

    // Add the ptBsyNode to the free link list tail
    if (SDL_INVALID == ptSDLMgr->ptHead->bsFreeTailPtr)
    {
        ptSDLMgr->ptHead->bsFreeTailPtr = usBsyPtr;
200038bf:	0152d2        	s16i	a13, a2, 2
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:260
        ptSDLMgr->ptHead->bsFreeHeadPtr = usBsyPtr;
        ptBsyNode->bsPre = ptSDLMgr->ptHead->bsFreeTailPtr;
200038c2:	025cd2        	s16i	a13, a12, 4
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:261
        ptBsyNode->bsNext = ptSDLMgr->ptHead->bsFreeHeadPtr;
200038c5:	001242        	l16ui	a4, a2, 0
200038c8:	035c42        	s16i	a4, a12, 6
200038cb:	ffd7c6        	j	2000382e <L3_BufMgrReleaseNode+0x96>

200038ce <L3_BufMgrReleaseNode+0x136>:
	...

200038d0 <L3_BufMgrReleaseNode+0x138>:
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:250
            ptSDLMgr->ptList[ptBsyNode->bsPre].bsNext = ptBsyNode->bsNext;
            ptSDLMgr->ptList[ptSDLMgr->ptHead->bsBsyHeadPtr].bsPre = ptSDLMgr->ptHead->bsBsyTailPtr;
        }
        else
        {
            ptSDLMgr->ptList[ptBsyNode->bsPre].bsNext = ptBsyNode->bsNext;
200038d0:	b0a570        	addx8	a10, a5, a7
200038d3:	031c92        	l16ui	a9, a12, 6
200038d6:	035a92        	s16i	a9, a10, 6
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:251
            ptSDLMgr->ptList[ptBsyNode->bsNext].bsPre = ptBsyNode->bsPre;
200038d9:	031c82        	l16ui	a8, a12, 6
200038dc:	021c62        	l16ui	a6, a12, 4
200038df:	b08870        	addx8	a8, a8, a7
200038e2:	025862        	s16i	a6, a8, 4
200038e5:	ffc606        	j	20003801 <L3_BufMgrReleaseNode+0x69>

200038e8 <L3_BufMgrReleaseNode+0x150>:
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:230
    usBsyPtr = ptBsyNode->bsIndex;

    // Del the ptBsyNode from the busy liink list
    if (ptSDLMgr->ptHead->bsBsyHeadPtr == ptSDLMgr->ptHead->bsBsyTailPtr)
    {
        SDL_ASSERT(ptSDLMgr->ptHead->bsBsyHeadPtr == usBsyPtr);
200038e8:	f3d921        	l32r	a2, 2000084c <_stext+0x14c>
200038eb:	e6a032        	movi	a3, 230
200038ee:	073745        	call0	2000ac64 <dbg_printf>
200038f1:	f38901        	l32r	a0, 20000718 <_stext+0x18>
200038f4:	0000c0        	callx0	a0
200038f7:	f38901        	l32r	a0, 2000071c <_stext+0x1c>
200038fa:	242022        	l32i	a2, a0, 144
200038fd:	ffbe86        	j	200037fb <L3_BufMgrReleaseNode+0x63>

20003900 <L3_BufMgrGetBufIDByNode>:
L3_BufMgrGetBufIDByNode():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:203
    U32 ulBufAddr;
    
    ulBufAddr = SDL_GetAddrByMemID(l_tSDLBufMgr.ptHead->ulMemBase, ptNode->bsIndex, l_tSDLBufMgr.ptHead->ulUnitSize);
    usBufID = COM_GetBufferIDByMemAddr(ulBufAddr, TRUE, BUF_SIZE_BITS);

    return usBufID;
20003900:	f38751        	l32r	a5, 2000071c <_stext+0x1c>
20003903:	242552        	l32i	a5, a5, 144
20003906:	011262        	l16ui	a6, a2, 2
20003909:	4548      	l32i.n	a4, a5, 16
2000390b:	5528      	l32i.n	a2, a5, 20
2000390d:	824460        	mull	a4, a4, a6
20003910:	f3a331        	l32r	a3, 2000079c <_stext+0x9c>
20003913:	224a      	add.n	a2, a2, a4
20003915:	223a      	add.n	a2, a2, a3
20003917:	f52020        	extui	a2, a2, 16, 16
2000391a:	f00d      	ret.n

2000391c <L3_FCMDQAllocTmpReqEntry>:
L3_FCMDQAllocTmpReqEntry():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:654

    ptReqEntry = &g_ptFCmdReqBak[ucTLun];
    COM_MemZero((U32*)ptReqEntry, sizeof(FCMD_REQ_ENTRY)>>2);
    
    ptReqEntry->bsTLun = ucTLun;
    ptReqEntry->bsTBRebuilding = 0;
2000391c:	ffae82        	movi	a8, 0xfffffeff
2000391f:	330c      	movi.n	a3, 3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:647
Usage      : 
History    : 
    1. 2016.8.11 JasonGuo create function
==============================================================================*/
FCMD_REQ_ENTRY *L3_FCMDQAllocTmpReqEntry(U8 ucTLun)
{
20003921:	025d      	mov.n	a5, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:651
    FCMD_REQ_ENTRY *ptReqEntry;

    ptReqEntry = &g_ptFCmdReqBak[ucTLun];
    COM_MemZero((U32*)ptReqEntry, sizeof(FCMD_REQ_ENTRY)>>2);
20003923:	f37e61        	l32r	a6, 2000071c <_stext+0x1c>
20003926:	907220        	addx2	a7, a2, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:647
Usage      : 
History    : 
    1. 2016.8.11 JasonGuo create function
==============================================================================*/
FCMD_REQ_ENTRY *L3_FCMDQAllocTmpReqEntry(U8 ucTLun)
{
20003929:	f0c112        	addi	a1, a1, -16
2000392c:	0109      	s32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:651
    FCMD_REQ_ENTRY *ptReqEntry;

    ptReqEntry = &g_ptFCmdReqBak[ucTLun];
    COM_MemZero((U32*)ptReqEntry, sizeof(FCMD_REQ_ENTRY)>>2);
2000392e:	1177c0        	slli	a7, a7, 4
20003931:	202662        	l32i	a6, a6, 128
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:63
****************************************************************************/
void COM_MemZero(U32* TargetAddr,U32 LengthDW)
{
    U32 i;

    for (i = 0 ; i < LengthDW; i++)
20003934:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:651
20003936:	667a      	add.n	a6, a6, a7
20003938:	060d      	mov.n	a0, a6
2000393a:	0aa376        	loopgtz	a3, 20003948 <L3_FCMDQAllocTmpReqEntry+0x2c>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:65
    {
        *TargetAddr++ = 0;
2000393d:	0029      	s32i.n	a2, a0, 0
2000393f:	1029      	s32i.n	a2, a0, 4
20003941:	2029      	s32i.n	a2, a0, 8
20003943:	3029      	s32i.n	a2, a0, 12
20003945:	10c002        	addi	a0, a0, 16

20003948 <L3_FCMDQAllocTmpReqEntry+0x2c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:657
    
    ptReqEntry->bsTLun = ucTLun;
    ptReqEntry->bsTBRebuilding = 0;
    ptReqEntry->bsBootUpOk = TRUE;
    
    return ptReqEntry;
20003948:	062d      	mov.n	a2, a6
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:653
    FCMD_REQ_ENTRY *ptReqEntry;

    ptReqEntry = &g_ptFCmdReqBak[ucTLun];
    COM_MemZero((U32*)ptReqEntry, sizeof(FCMD_REQ_ENTRY)>>2);
    
    ptReqEntry->bsTLun = ucTLun;
2000394a:	004652        	s8i	a5, a6, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:654
    ptReqEntry->bsTBRebuilding = 0;
2000394d:	0678      	l32i.n	a7, a6, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:657
    ptReqEntry->bsBootUpOk = TRUE;
    
    return ptReqEntry;
2000394f:	0108      	l32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:654

    ptReqEntry = &g_ptFCmdReqBak[ucTLun];
    COM_MemZero((U32*)ptReqEntry, sizeof(FCMD_REQ_ENTRY)>>2);
    
    ptReqEntry->bsTLun = ucTLun;
    ptReqEntry->bsTBRebuilding = 0;
20003951:	107780        	and	a7, a7, a8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:655
    ptReqEntry->bsBootUpOk = TRUE;
20003954:	00a282        	movi	a8, 0x200
20003957:	207780        	or	a7, a7, a8
2000395a:	0679      	s32i.n	a7, a6, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:657
    
    return ptReqEntry;
2000395c:	10c112        	addi	a1, a1, 16
2000395f:	f00d      	ret.n

20003961 <L3_FCMDQAllocTmpReqEntry+0x45>:
20003961:	000000                                        ...

20003964 <L3_BufMgrAllocateNode>:
L3_BufMgrAllocateNode():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:156
Usage      : 
History    : 
    1. 2016.8.15 JasonGuo create function
==============================================================================*/
SDL_NODE *L3_BufMgrAllocateNode(void)
{
20003964:	f0c112        	addi	a1, a1, -16
20003967:	21d9      	s32i.n	a13, a1, 8
20003969:	0109      	s32i.n	a0, a1, 0
2000396b:	f36c01        	l32r	a0, 2000071c <_stext+0x1c>
2000396e:	31e9      	s32i.n	a14, a1, 12
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:159
SDL_NODE *SDL_AllocNode(SDL_MGR *ptSDLMgr)
{
    U16 usFreePtr;
    SDL_NODE *ptFreeNode;

    usFreePtr = ptSDLMgr->ptHead->bsFreeHeadPtr;
20003970:	242022        	l32i	a2, a0, 144
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:156
20003973:	f378e1        	l32r	a14, 20000754 <_stext+0x54>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:159
20003976:	0012d2        	l16ui	a13, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:156
20003979:	11c9      	s32i.n	a12, a1, 4
2000397b:	c03de0        	sub	a3, a13, a14
2000397e:	0c7316        	beqz	a3, 20003a49 <L3_BufMgrAllocateNode+0xe5>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:165
    if (SDL_INVALID == usFreePtr)
    {
        return NULL;
    }

    ptFreeNode = &ptSDLMgr->ptList[usFreePtr];
20003981:	2520c2        	l32i	a12, a0, 148
20003984:	b0cdc0        	addx8	a12, a13, a12
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:167

    SDL_ASSERT(SDL_NODE_STS_FREE == ptFreeNode->bsStatus);
20003987:	0c58      	l32i.n	a5, a12, 0
20003989:	03a042        	movi	a4, 3
2000398c:	140457        	bnone	a4, a5, 200039a4 <L3_BufMgrAllocateNode+0x40>
2000398f:	f3af21        	l32r	a2, 2000084c <_stext+0x14c>
20003992:	a7a032        	movi	a3, 167
20003995:	072cc5        	call0	2000ac64 <dbg_printf>
20003998:	f36001        	l32r	a0, 20000718 <_stext+0x18>
2000399b:	0000c0        	callx0	a0
2000399e:	f35f01        	l32r	a0, 2000071c <_stext+0x1c>
200039a1:	242022        	l32i	a2, a0, 144

200039a4 <L3_BufMgrAllocateNode+0x40>:
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:168
    ptFreeNode->bsStatus = SDL_NODE_STS_BUSY;
200039a4:	0c58      	l32i.n	a5, a12, 0
200039a6:	c67c      	movi.n	a6, -4
200039a8:	105560        	and	a5, a5, a6
200039ab:	160c      	movi.n	a6, 1
200039ad:	205560        	or	a5, a5, a6
200039b0:	0c59      	s32i.n	a5, a12, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:171

    // Del the ptFreeNode from the free link list head
    if (ptSDLMgr->ptHead->bsFreeHeadPtr == ptSDLMgr->ptHead->bsFreeTailPtr)
200039b2:	011242        	l16ui	a4, a2, 2
200039b5:	001232        	l16ui	a3, a2, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:179
        ptSDLMgr->ptHead->bsFreeTailPtr = SDL_INVALID;
    }
    else
    {
        ptSDLMgr->ptHead->bsFreeHeadPtr = ptFreeNode->bsNext;
        ptSDLMgr->ptList[ptFreeNode->bsNext].bsPre = ptFreeNode->bsPre;
200039b8:	252092        	l32i	a9, a0, 148
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:171

    SDL_ASSERT(SDL_NODE_STS_FREE == ptFreeNode->bsStatus);
    ptFreeNode->bsStatus = SDL_NODE_STS_BUSY;

    // Del the ptFreeNode from the free link list head
    if (ptSDLMgr->ptHead->bsFreeHeadPtr == ptSDLMgr->ptHead->bsFreeTailPtr)
200039bb:	099347        	bne	a3, a4, 200039c8 <L3_BufMgrAllocateNode+0x64>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:173
    {
        ptSDLMgr->ptHead->bsFreeHeadPtr = SDL_INVALID;
200039be:	0052e2        	s16i	a14, a2, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:174
        ptSDLMgr->ptHead->bsFreeTailPtr = SDL_INVALID;
200039c1:	0152e2        	s16i	a14, a2, 2
200039c4:	000786        	j	200039e6 <L3_BufMgrAllocateNode+0x82>

200039c7 <L3_BufMgrAllocateNode+0x63>:
	...

200039c8 <L3_BufMgrAllocateNode+0x64>:
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:178
    }
    else
    {
        ptSDLMgr->ptHead->bsFreeHeadPtr = ptFreeNode->bsNext;
200039c8:	031c32        	l16ui	a3, a12, 6
200039cb:	005232        	s16i	a3, a2, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:179
        ptSDLMgr->ptList[ptFreeNode->bsNext].bsPre = ptFreeNode->bsPre;
200039ce:	031cb2        	l16ui	a11, a12, 6
200039d1:	021ca2        	l16ui	a10, a12, 4
200039d4:	b0bb90        	addx8	a11, a11, a9
200039d7:	025ba2        	s16i	a10, a11, 4
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:180
        ptSDLMgr->ptList[ptFreeNode->bsPre].bsNext = ptFreeNode->bsNext;
200039da:	021c82        	l16ui	a8, a12, 4
200039dd:	031c72        	l16ui	a7, a12, 6
200039e0:	b08890        	addx8	a8, a8, a9
200039e3:	035872        	s16i	a7, a8, 6
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:184
    }

    // Add the ptFreeNode to the busy link list tail
    if (SDL_INVALID == ptSDLMgr->ptHead->bsBsyTailPtr)
200039e6:	031252        	l16ui	a5, a2, 6
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:195
    }
    else
    {
        ptFreeNode->bsPre = ptSDLMgr->ptHead->bsBsyTailPtr;
        ptFreeNode->bsNext = ptSDLMgr->ptHead->bsBsyHeadPtr;
        ptSDLMgr->ptList[ptSDLMgr->ptHead->bsBsyHeadPtr].bsPre = usFreePtr;
200039e9:	252062        	l32i	a6, a0, 148
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:184
        ptSDLMgr->ptList[ptFreeNode->bsNext].bsPre = ptFreeNode->bsPre;
        ptSDLMgr->ptList[ptFreeNode->bsPre].bsNext = ptFreeNode->bsNext;
    }

    // Add the ptFreeNode to the busy link list tail
    if (SDL_INVALID == ptSDLMgr->ptHead->bsBsyTailPtr)
200039ec:	6115e7        	beq	a5, a14, 20003a51 <L3_BufMgrAllocateNode+0xed>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:193
        ptFreeNode->bsPre = ptSDLMgr->ptHead->bsBsyTailPtr;
        ptFreeNode->bsNext = ptSDLMgr->ptHead->bsBsyHeadPtr;
    }
    else
    {
        ptFreeNode->bsPre = ptSDLMgr->ptHead->bsBsyTailPtr;
200039ef:	025c52        	s16i	a5, a12, 4
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:194
        ptFreeNode->bsNext = ptSDLMgr->ptHead->bsBsyHeadPtr;
200039f2:	021282        	l16ui	a8, a2, 4
200039f5:	035c82        	s16i	a8, a12, 6
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:195
        ptSDLMgr->ptList[ptSDLMgr->ptHead->bsBsyHeadPtr].bsPre = usFreePtr;
200039f8:	021272        	l16ui	a7, a2, 4
200039fb:	b07760        	addx8	a7, a7, a6
200039fe:	0257d2        	s16i	a13, a7, 4
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:196
        ptSDLMgr->ptList[ptSDLMgr->ptHead->bsBsyTailPtr].bsNext = usFreePtr;
20003a01:	031242        	l16ui	a4, a2, 6
20003a04:	b04460        	addx8	a4, a4, a6
20003a07:	0354d2        	s16i	a13, a4, 6
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:197
        ptSDLMgr->ptHead->bsBsyTailPtr = usFreePtr;
20003a0a:	0352d2        	s16i	a13, a2, 6
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:202
    }
    
    // update free/busy node cnt
    ptSDLMgr->ptHead->bsFreeCnt--;
    ptSDLMgr->ptHead->bsBsyCnt++;
20003a0d:	051202        	l16ui	a0, a2, 10
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:201
        ptSDLMgr->ptList[ptSDLMgr->ptHead->bsBsyTailPtr].bsNext = usFreePtr;
        ptSDLMgr->ptHead->bsBsyTailPtr = usFreePtr;
    }
    
    // update free/busy node cnt
    ptSDLMgr->ptHead->bsFreeCnt--;
20003a10:	041232        	l16ui	a3, a2, 8
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:202
    ptSDLMgr->ptHead->bsBsyCnt++;
20003a13:	001b      	addi.n	a0, a0, 1
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:201
        ptSDLMgr->ptList[ptSDLMgr->ptHead->bsBsyTailPtr].bsNext = usFreePtr;
        ptSDLMgr->ptHead->bsBsyTailPtr = usFreePtr;
    }
    
    // update free/busy node cnt
    ptSDLMgr->ptHead->bsFreeCnt--;
20003a15:	330b      	addi.n	a3, a3, -1
20003a17:	045232        	s16i	a3, a2, 8
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:202
    ptSDLMgr->ptHead->bsBsyCnt++;
20003a1a:	f40000        	extui	a0, a0, 0, 16
20003a1d:	055202        	s16i	a0, a2, 10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:163

    ptFreeNode = SDL_AllocNode(&l_tSDLBufMgr);    
    SDL_ASSERT(l_tSDLBufMgr.ptHead->bsFreeCnt + l_tSDLBufMgr.ptHead->bsBsyCnt == SDL_BUF_NUM);
    //SDL_ASSERT(SDL_ShowList(&l_tSDLBufMgr, SDL_NODE_STS_FREE, TRUE) + SDL_ShowList(&l_tSDLBufMgr, SDL_NODE_STS_BUSY, TRUE) == SDL_BUF_NUM);

    return ptFreeNode;
20003a20:	0221d2        	l32i	a13, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:160
SDL_NODE *L3_BufMgrAllocateNode(void)
{
    SDL_NODE *ptFreeNode;

    ptFreeNode = SDL_AllocNode(&l_tSDLBufMgr);    
    SDL_ASSERT(l_tSDLBufMgr.ptHead->bsFreeCnt + l_tSDLBufMgr.ptHead->bsBsyCnt == SDL_BUF_NUM);
20003a23:	041232        	l16ui	a3, a2, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:163
    //SDL_ASSERT(SDL_ShowList(&l_tSDLBufMgr, SDL_NODE_STS_FREE, TRUE) + SDL_ShowList(&l_tSDLBufMgr, SDL_NODE_STS_BUSY, TRUE) == SDL_BUF_NUM);

    return ptFreeNode;
20003a26:	0321e2        	l32i	a14, a1, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:160
SDL_NODE *L3_BufMgrAllocateNode(void)
{
    SDL_NODE *ptFreeNode;

    ptFreeNode = SDL_AllocNode(&l_tSDLBufMgr);    
    SDL_ASSERT(l_tSDLBufMgr.ptHead->bsFreeCnt + l_tSDLBufMgr.ptHead->bsBsyCnt == SDL_BUF_NUM);
20003a29:	803300        	add	a3, a3, a0
20003a2c:	0eb326        	beqi	a3, 16, 20003a3e <L3_BufMgrAllocateNode+0xda>
20003a2f:	f38721        	l32r	a2, 2000084c <_stext+0x14c>
20003a32:	a0a032        	movi	a3, 160
20003a35:	0722c5        	call0	2000ac64 <dbg_printf>
20003a38:	f33801        	l32r	a0, 20000718 <_stext+0x18>
20003a3b:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:163
    //SDL_ASSERT(SDL_ShowList(&l_tSDLBufMgr, SDL_NODE_STS_FREE, TRUE) + SDL_ShowList(&l_tSDLBufMgr, SDL_NODE_STS_BUSY, TRUE) == SDL_BUF_NUM);

    return ptFreeNode;
20003a3e:	0c2d      	mov.n	a2, a12
20003a40:	0108      	l32i.n	a0, a1, 0
20003a42:	11c8      	l32i.n	a12, a1, 4
20003a44:	10c112        	addi	a1, a1, 16
20003a47:	f00d      	ret.n

20003a49 <L3_BufMgrAllocateNode+0xe5>:
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:160
{
    U16 usFreePtr;
    SDL_NODE *ptFreeNode;

    usFreePtr = ptSDLMgr->ptHead->bsFreeHeadPtr;
    if (SDL_INVALID == usFreePtr)
20003a49:	0c0c      	movi.n	a12, 0
20003a4b:	051202        	l16ui	a0, a2, 10
20003a4e:	fff386        	j	20003a20 <L3_BufMgrAllocateNode+0xbc>

20003a51 <L3_BufMgrAllocateNode+0xed>:
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:187

    // Add the ptFreeNode to the busy link list tail
    if (SDL_INVALID == ptSDLMgr->ptHead->bsBsyTailPtr)
    {
        ptSDLMgr->ptHead->bsBsyTailPtr = usFreePtr;
        ptSDLMgr->ptHead->bsBsyHeadPtr = ptSDLMgr->ptHead->bsBsyTailPtr;
20003a51:	0252d2        	s16i	a13, a2, 4
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:186
    }

    // Add the ptFreeNode to the busy link list tail
    if (SDL_INVALID == ptSDLMgr->ptHead->bsBsyTailPtr)
    {
        ptSDLMgr->ptHead->bsBsyTailPtr = usFreePtr;
20003a54:	0352d2        	s16i	a13, a2, 6
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:188
        ptSDLMgr->ptHead->bsBsyHeadPtr = ptSDLMgr->ptHead->bsBsyTailPtr;
        ptFreeNode->bsPre = ptSDLMgr->ptHead->bsBsyTailPtr;
20003a57:	025cd2        	s16i	a13, a12, 4
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SDL.c:189
        ptFreeNode->bsNext = ptSDLMgr->ptHead->bsBsyHeadPtr;
20003a5a:	021242        	l16ui	a4, a2, 4
20003a5d:	035c42        	s16i	a4, a12, 6
20003a60:	ffea46        	j	20003a0d <L3_BufMgrAllocateNode+0xa9>

20003a63 <L3_BufMgrAllocateNode+0xff>:
	...

20003a64 <L3_RedMgrGetFreeCnt>:
L3_RedMgrGetFreeCnt():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:314
History    : 
    1. 2016.8.16 JasonGuo create function
==============================================================================*/
U16 L3_RedMgrGetFreeCnt(void)
{
    return l_tSDLRedMgr.ptHead->bsFreeCnt;
20003a64:	f32e21        	l32r	a2, 2000071c <_stext+0x1c>
20003a67:	262222        	l32i	a2, a2, 152
20003a6a:	041222        	l16ui	a2, a2, 8
20003a6d:	f00d      	ret.n

20003a6f <L3_RedMgrGetFreeCnt+0xb>:
	...

20003a70 <L3_BufMgrGetFreeCnt>:
L3_BufMgrGetFreeCnt():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:218
History    : 
    1. 2016.8.16 JasonGuo create function
==============================================================================*/
U16 L3_BufMgrGetFreeCnt(void)
{
    return l_tSDLBufMgr.ptHead->bsFreeCnt;
20003a70:	f32b21        	l32r	a2, 2000071c <_stext+0x1c>
20003a73:	242222        	l32i	a2, a2, 144
20003a76:	041222        	l16ui	a2, a2, 8
20003a79:	f00d      	ret.n

20003a7b <L3_BufMgrGetFreeCnt+0xb>:
	...

20003a7c <L2_SESearchBlock>:
L2_SESearchBlock():
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:263
Author       : Kristin Wang
Modification : Created function

*****************************************************************************/
void L2_SESearchBlock(U32 ulSearchCase, U32 *pStartItem, U8 ucTLCBlk, SE_SEARCH_VALUE_RESULT* pSEGetResult)
{
20003a7c:	e0c112        	addi	a1, a1, -32
20003a7f:	31e9      	s32i.n	a14, a1, 12
20003a81:	41f9      	s32i.n	a15, a1, 16
20003a83:	7159      	s32i.n	a5, a1, 28
20003a85:	0109      	s32i.n	a0, a1, 0
20003a87:	11c9      	s32i.n	a12, a1, 4
20003a89:	21d9      	s32i.n	a13, a1, 8
20003a8b:	02cd      	mov.n	a12, a2
20003a8d:	03dd      	mov.n	a13, a3
20003a8f:	740040        	extui	a0, a4, 0, 8
20003a92:	6109      	s32i.n	a0, a1, 24
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:266
    SE_SEARCH_VALUE_PARAM* pSEParamSet;

    if (SEARCH_CASE_MAX <= ulSearchCase)
20003a94:	0262b6        	bltui	a2, 6, 20003a9a <L2_SESearchBlock+0x1e>
20003a97:	00f946        	j	20003e80 <L2_SESearchBlock+0x404>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:273
        DBG_Printf("L2_SESearchBlock: ulSearchCase = %d, ERROR!\n", ulSearchCase);
        DBG_Getch();
    }
    else
    {
        pSEParamSet = &g_SearchEngineParam[ulSearchCase];
20003a9a:	f320e1        	l32r	a14, 2000071c <_stext+0x1c>
20003a9d:	c23c      	movi.n	a2, 60
20003a9f:	822c20        	mull	a2, a12, a2
20003aa2:	05fd      	mov.n	a15, a5
20003aa4:	80ee20        	add	a14, a14, a2
20003aa7:	03dee2        	addmi	a14, a14, 0x300
20003aaa:	70cee2        	addi	a14, a14, 112

20003aad <L2_SESearchBlock+0x31>:
20003aad:	f33b31        	l32r	a3, 2000079c <_stext+0x9c>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:277
    }

#ifdef DCACHE
    pSEParamSet->ulStartAddr = (U32)pStartItem - DRAM_HIGH_ADDR_OFFSET;
20003ab0:	3d3a      	add.n	a3, a13, a3
20003ab2:	006e32        	s32i	a3, a14, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:282
#else
    pSEParamSet->ulStartAddr = (U32)pStartItem;
#endif

    switch (ulSearchCase)
20003ab5:	052cb6        	bltui	a12, 2, 20003abe <L2_SESearchBlock+0x42>
20003ab8:	116cf6        	bgeui	a12, 6, 20003acd <L2_SESearchBlock+0x51>
20003abb:	0e4cb6        	bltui	a12, 4, 20003acd <L2_SESearchBlock+0x51>
20003abe:	400b      	addi.n	a4, a0, -1
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:288
    {
    case FREE_ERASE_CNT_MAX:
    case FREE_ERASE_CNT_MIN:
    case BROKEN_ERASE_CNT_MAX:
    case BROKEN_ERASE_CNT_MIN:
        if (TRUE == ucTLCBlk)
20003ac0:	be08      	l32i.n	a0, a14, 44
20003ac2:	4e6416        	beqz	a4, 20003fac <L2_SESearchBlock+0x530>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:294
        {
            pSEParamSet->ulXorValueMaskHigh |= 0x1000;
        }
        else
        {
            pSEParamSet->ulXorValueMaskHigh &= 0xFFFFEFFF;
20003ac5:	f36251        	l32r	a5, 20000850 <_stext+0x150>
20003ac8:	105050        	and	a5, a0, a5
20003acb:	be59      	s32i.n	a5, a14, 44
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:300
        }

        break;

    default:
        break;
20003acd:	f36161        	l32r	a6, 20000854 <_stext+0x154>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:61
20140915    Kristin    1. Coding style uniform
                       2. Input Param void -> U8
------------------------------------------------------------------------------*/
void HAL_SEClockEnable(U8 ucSEID)
{
    HAL_MultiCoreGetSpinLockWait(SPINLOCKID_CLKGATING);
20003ad0:	f32ac1        	l32r	a12, 20000778 <_stext+0x78>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:300
20003ad3:	800662        	l8ui	a6, a6, 128
20003ad6:	5169      	s32i.n	a6, a1, 20
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
20003ad8:	03ebd0        	rsr.prid	a13
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:149
#ifndef SIM
    U32 ulMcuID;
    U32 ulLockValue;
        
    ulMcuID = HAL_GetMcuId();
    if ((MCU0_ID == ulMcuID) || (MCU1_ID == ulMcuID) || (MCU2_ID == ulMcuID))
20003adb:	051d26        	beqi	a13, 1, 20003ae4 <L2_SESearchBlock+0x68>
20003ade:	022d26        	beqi	a13, 2, 20003ae4 <L2_SESearchBlock+0x68>
20003ae1:	083d66        	bnei	a13, 3, 20003aed <L2_SESearchBlock+0x71>
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:151
    {
        *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4) = ulMcuID;
20003ae4:	0020c0        	memw
20003ae7:	cc6cd2        	s32i	a13, a12, 0x330
20003aea:	000146        	j	20003af3 <L2_SESearchBlock+0x77>

20003aed <L2_SESearchBlock+0x71>:
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:155
    }
    else
    {
        DBG_Getch();
20003aed:	f30a01        	l32r	a0, 20000718 <_stext+0x18>
20003af0:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:158
    }

    ulLockValue = *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4);
20003af3:	0020c0        	memw
20003af6:	cc2c72        	l32i	a7, a12, 0x330
20003af9:	0020f0        	nop
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:187
{
    BOOL bSts = FALSE;
    do
    {
        bSts = HAL_MultiCoreGetSpinLock(ucLockId);
    }while (FALSE == bSts);
20003afc:	d89d77        	bne	a13, a7, 20003ad8 <L2_SESearchBlock+0x5c>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:62
    if (SE0 == ucSEID)
20003aff:	5188      	l32i.n	a8, a1, 20
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:61
20140915    Kristin    1. Coding style uniform
                       2. Input Param void -> U8
------------------------------------------------------------------------------*/
void HAL_SEClockEnable(U8 ucSEID)
{
    HAL_MultiCoreGetSpinLockWait(SPINLOCKID_CLKGATING);
20003b01:	f32851        	l32r	a5, 200007a4 <_stext+0xa4>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:62
    if (SE0 == ucSEID)
20003b04:	490816        	beqz	a8, 20003f98 <L2_SESearchBlock+0x51c>
20003b07:	980b      	addi.n	a9, a8, -1
20003b09:	437916        	beqz	a9, 20003f44 <L2_SESearchBlock+0x4c8>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:72
    {
        rGlbClkGating |= MSK_EN_SE1_CLK; 
    }
    else
    {
        rGlbClkGating |= MSK_EN_SE2_CLK;
20003b0c:	f353b1        	l32r	a11, 20000858 <_stext+0x158>
20003b0f:	0020c0        	memw
20003b12:	852ca2        	l32i	a10, a12, 0x214
20003b15:	20aab0        	or	a10, a10, a11
20003b18:	0020c0        	memw
20003b1b:	856ca2        	s32i	a10, a12, 0x214
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:75
    }

    HAL_MultiCoreReleaseSpinLock(SPINLOCKID_CLKGATING);
20003b1e:	170c      	movi.n	a7, 1
20003b20:	0d0c      	movi.n	a13, 0
20003b22:	fea0a2        	movi	a10, 254
20003b25:	f34d01        	l32r	a0, 2000085c <_stext+0x15c>
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
History:
    20140917    Tobey  uniform coding style
------------------------------------------------------------------------------*/
void MULTI_CORE_TEXT_ATTR HAL_MultiCoreReleaseSpinLock(U8 ucLockId)
{
    *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4) = 0;
20003b28:	0020c0        	memw
20003b2b:	cc6cd2        	s32i	a13, a12, 0x330
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:290
History:
20140915    Kristin    Coding style uniform
------------------------------------------------------------------------------*/
void HAL_SETriggerSearchValue(SE_SEARCH_VALUE_PARAM *ptValParam,U8 ucGroupID)
{
    l_pSETrigSizeReg->bsTrigger = 0;
20003b2e:	f34921        	l32r	a2, 20000854 <_stext+0x154>
20003b31:	212242        	l32i	a4, a2, 132
20003b34:	0020c0        	memw
20003b37:	000432        	l8ui	a3, a4, 0
20003b3a:	1033a0        	and	a3, a3, a10
20003b3d:	0020c0        	memw
20003b40:	004432        	s8i	a3, a4, 0
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:292

    if (FALSE == ptValParam->bsOTFB)
20003b43:	ee38      	l32i.n	a3, a14, 56
20003b45:	800222        	l8ui	a2, a2, 128
20003b48:	35e3e7        	bbsi	a3, 14, 20003b81 <L2_SESearchBlock+0x105>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:182
{
#if defined(VT3514_A0) || defined(VT3514_B0)
    HAL_MultiCoreGetSpinLockWait(SPINLOCKID_SE);
#endif

    if (SE0 == ucSEID)
20003b4b:	40a216        	beqz	a2, 20003f59 <L2_SESearchBlock+0x4dd>
20003b4e:	520b      	addi.n	a5, a2, -1
20003b50:	4a0516        	beqz	a5, 20003ff4 <L2_SESearchBlock+0x578>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:192
    {
        rGlbTrfc &= (~MSK_EN_SE1_OTFB); 
    }
    else
    {
        rGlbTrfc &= (~MSK_EN_SE2_OTFB); 
20003b53:	7faf82        	movi	a8, -129
20003b56:	0020c0        	memw
20003b59:	992c62        	l32i	a6, a12, 0x264
20003b5c:	106680        	and	a6, a6, a8
20003b5f:	0020c0        	memw
20003b62:	996c62        	s32i	a6, a12, 0x264
20003b65:	fec292        	addi	a9, a2, -2
20003b68:	405916        	beqz	a9, 20003f71 <L2_SESearchBlock+0x4f5>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:295
    l_pSETrigSizeReg->bsTrigger = 0;

    if (FALSE == ptValParam->bsOTFB)
    {
        HAL_SEOtfbDisable(l_ucSEID); 
        rSE_START_ADDR(l_ucSEID) = ptValParam->ulStartAddr - DRAM_START_ADDRESS;
20003b6b:	11b280        	slli	a11, a2, 8
20003b6e:	0b0a      	add.n	a0, a11, a0
20003b70:	f30b61        	l32r	a6, 2000079c <_stext+0x9c>
20003b73:	0e58      	l32i.n	a5, a14, 0
20003b75:	556a      	add.n	a5, a5, a6
20003b77:	0020c0        	memw
20003b7a:	0059      	s32i.n	a5, a0, 0
20003b7c:	000c46        	j	20003bb1 <L2_SESearchBlock+0x135>

20003b7f <L2_SESearchBlock+0x103>:
	...

20003b81 <L2_SESearchBlock+0x105>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:138
{
#if defined(VT3514_A0) || defined(VT3514_B0)
    HAL_MultiCoreGetSpinLockWait(SPINLOCKID_SE);
#endif

    if (SE0 == ucSEID)
20003b81:	3f4216        	beqz	a2, 20003f79 <L2_SESearchBlock+0x4fd>
20003b84:	ffc282        	addi	a8, a2, -1
20003b87:	47e816        	beqz	a8, 20004009 <L2_SESearchBlock+0x58d>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:148
    {
        rGlbTrfc |= MSK_EN_SE1_OTFB; 
    }
    else
    {
        rGlbTrfc |= MSK_EN_SE2_OTFB; 
20003b8a:	80a0b2        	movi	a11, 128
20003b8d:	0020c0        	memw
20003b90:	992c92        	l32i	a9, a12, 0x264
20003b93:	2099b0        	or	a9, a9, a11
20003b96:	0020c0        	memw
20003b99:	996c92        	s32i	a9, a12, 0x264
20003b9c:	fec262        	addi	a6, a2, -2
20003b9f:	3ed616        	beqz	a6, 20003f90 <L2_SESearchBlock+0x514>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:300
        rSE_START_ADDR(l_ucSEID) = ptValParam->ulStartAddr - DRAM_START_ADDRESS;
    }
    else
    {
        HAL_SEOtfbEnable(l_ucSEID); 
        rSE_START_ADDR(l_ucSEID) = ptValParam->ulStartAddr - OTFB_START_ADDRESS;
20003ba2:	118280        	slli	a8, a2, 8
20003ba5:	800800        	add	a0, a8, a0
20003ba8:	0e98      	l32i.n	a9, a14, 0
20003baa:	995a      	add.n	a9, a9, a5
20003bac:	0020c0        	memw
20003baf:	0099      	s32i.n	a9, a0, 0
20003bb1:	f32b81        	l32r	a8, 20000860 <_stext+0x160>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:302
    }
    if (FALSE == ptValParam->bsItemSizeDW)
20003bb4:	012e02        	l32i	a0, a14, 4
20003bb7:	045c30        	extui	a5, a3, 12, 1
20003bba:	04bc30        	extui	a11, a3, 12, 1
20003bbd:	2a0b56        	bnez	a11, 20003e61 <L2_SESearchBlock+0x3e5>
20003bc0:	fec262        	addi	a6, a2, -2
20003bc3:	3f1616        	beqz	a6, 20003fb8 <L2_SESearchBlock+0x53c>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:304
    {
        rSE_SEARCH_LEN_QW(l_ucSEID) = ptValParam->ulItemCnt;
20003bc6:	119280        	slli	a9, a2, 8
20003bc9:	808980        	add	a8, a9, a8
20003bcc:	0020c0        	memw
20003bcf:	006802        	s32i	a0, a8, 0
20003bd2:	fec2b2        	addi	a11, a2, -2
20003bd5:	2a1b16        	beqz	a11, 20003e7a <L2_SESearchBlock+0x3fe>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:310
    }
    else
    {
        rSE_SEARCH_LEN_QW(l_ucSEID) = ptValParam->ulItemCnt/2;
    }
    rSE_PITCH_SIZE(l_ucSEID) = ptValParam->ucPitchQW;
20003bd8:	f32361        	l32r	a6, 20000864 <_stext+0x164>
20003bdb:	110280        	slli	a0, a2, 8
20003bde:	800060        	add	a0, a0, a6
20003be1:	380e92        	l8ui	a9, a14, 56
20003be4:	0020c0        	memw
20003be7:	004092        	s8i	a9, a0, 0
20003bea:	fec282        	addi	a8, a2, -2
20003bed:	2bf816        	beqz	a8, 20003eb0 <L2_SESearchBlock+0x434>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:314

    if (SE_1ST_MSK_GROUP == ucGroupID)
    {  
        rSE_FMSK_SELECTION_LOW(l_ucSEID) = ptValParam->ulSelMaskLow;
20003bf0:	f31e61        	l32r	a6, 20000868 <_stext+0x168>
20003bf3:	110280        	slli	a0, a2, 8
20003bf6:	006a      	add.n	a0, a0, a6
20003bf8:	2e98      	l32i.n	a9, a14, 8
20003bfa:	0020c0        	memw
20003bfd:	0099      	s32i.n	a9, a0, 0
20003bff:	fec282        	addi	a8, a2, -2
20003c02:	2b2816        	beqz	a8, 20003eb8 <L2_SESearchBlock+0x43c>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:315
        rSE_FMSK_SELECTION_HIGH(l_ucSEID) = ptValParam->ulSelMaskHigh;
20003c05:	f31961        	l32r	a6, 2000086c <_stext+0x16c>
20003c08:	110280        	slli	a0, a2, 8
20003c0b:	006a      	add.n	a0, a0, a6
20003c0d:	3e98      	l32i.n	a9, a14, 12
20003c0f:	0020c0        	memw
20003c12:	0099      	s32i.n	a9, a0, 0
20003c14:	fec282        	addi	a8, a2, -2
20003c17:	2a5816        	beqz	a8, 20003ec0 <L2_SESearchBlock+0x444>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:316
        rSE_FMASK_CONDITION_LOW(l_ucSEID) = ptValParam->ulCondMaskLow;
20003c1a:	f31561        	l32r	a6, 20000870 <_stext+0x170>
20003c1d:	110280        	slli	a0, a2, 8
20003c20:	006a      	add.n	a0, a0, a6
20003c22:	4e98      	l32i.n	a9, a14, 16
20003c24:	0020c0        	memw
20003c27:	0099      	s32i.n	a9, a0, 0
20003c29:	fec282        	addi	a8, a2, -2
20003c2c:	298816        	beqz	a8, 20003ec8 <L2_SESearchBlock+0x44c>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:317
        rSE_FMASK_CONDITION_HIGH(l_ucSEID) = ptValParam->ulCondMaskHigh;
20003c2f:	f31161        	l32r	a6, 20000874 <_stext+0x174>
20003c32:	110280        	slli	a0, a2, 8
20003c35:	800060        	add	a0, a0, a6
20003c38:	5e98      	l32i.n	a9, a14, 20
20003c3a:	0020c0        	memw
20003c3d:	0099      	s32i.n	a9, a0, 0
20003c3f:	fec282        	addi	a8, a2, -2
20003c42:	28a816        	beqz	a8, 20003ed0 <L2_SESearchBlock+0x454>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:318
        rSE_FMASK_FIELD_LOW(l_ucSEID) = ptValParam->ulFieldMaskLow;
20003c45:	f30c61        	l32r	a6, 20000878 <_stext+0x178>
20003c48:	110280        	slli	a0, a2, 8
20003c4b:	006a      	add.n	a0, a0, a6
20003c4d:	6e98      	l32i.n	a9, a14, 24
20003c4f:	0020c0        	memw
20003c52:	0099      	s32i.n	a9, a0, 0
20003c54:	fec282        	addi	a8, a2, -2
20003c57:	27d816        	beqz	a8, 20003ed8 <L2_SESearchBlock+0x45c>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:319
        rSE_FMASK_FIELD_HIGH(l_ucSEID) = ptValParam->ulFieldMaskHigh;
20003c5a:	f30861        	l32r	a6, 2000087c <_stext+0x17c>
20003c5d:	110280        	slli	a0, a2, 8
20003c60:	006a      	add.n	a0, a0, a6
20003c62:	7e98      	l32i.n	a9, a14, 28
20003c64:	0020c0        	memw
20003c67:	0099      	s32i.n	a9, a0, 0
20003c69:	fec282        	addi	a8, a2, -2
20003c6c:	270816        	beqz	a8, 20003ee0 <L2_SESearchBlock+0x464>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:320
        rSE_FVALUE_SEARCHED_LOW(l_ucSEID) = ptValParam->ulValToSearchLow;
20003c6f:	f30461        	l32r	a6, 20000880 <_stext+0x180>
20003c72:	110280        	slli	a0, a2, 8
20003c75:	800060        	add	a0, a0, a6
20003c78:	ce98      	l32i.n	a9, a14, 48
20003c7a:	0020c0        	memw
20003c7d:	0099      	s32i.n	a9, a0, 0
20003c7f:	fec282        	addi	a8, a2, -2
20003c82:	262816        	beqz	a8, 20003ee8 <L2_SESearchBlock+0x46c>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:321
        rSE_FVALUE_SEARCHED_HIGH(l_ucSEID) = ptValParam->ulValToSearchHigh;
20003c85:	f2ff61        	l32r	a6, 20000884 <_stext+0x184>
20003c88:	110280        	slli	a0, a2, 8
20003c8b:	800060        	add	a0, a0, a6
20003c8e:	e97c      	movi.n	a9, -2
20003c90:	f2fe81        	l32r	a8, 20000888 <_stext+0x188>
20003c93:	deb8      	l32i.n	a11, a14, 52
20003c95:	0020c0        	memw
20003c98:	00b9      	s32i.n	a11, a0, 0
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:323

        if ( TRUE == ptValParam->bsXorEn )
20003c9a:	7363d7        	bbci	a3, 13, 20003d11 <L2_SESearchBlock+0x295>
20003c9d:	fec202        	addi	a0, a2, -2
20003ca0:	324016        	beqz	a0, 20003fc8 <L2_SESearchBlock+0x54c>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:325
        {
            rSE_XOR_MASK_ENABLE(l_ucSEID) |= MSK_FGROUP_XOR_EN;
20003ca3:	110280        	slli	a0, a2, 8
20003ca6:	800080        	add	a0, a0, a8
20003ca9:	0020c0        	memw
20003cac:	0088      	l32i.n	a8, a0, 0
20003cae:	208870        	or	a8, a8, a7
20003cb1:	0020c0        	memw
20003cb4:	0089      	s32i.n	a8, a0, 0
20003cb6:	fec262        	addi	a6, a2, -2
20003cb9:	313616        	beqz	a6, 20003fd0 <L2_SESearchBlock+0x554>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:326
            rSE_FMASK_XOR_FIELD_LOW(l_ucSEID) = ptValParam->ulXorFieldMaskLow;
20003cbc:	f2f461        	l32r	a6, 2000088c <_stext+0x18c>
20003cbf:	110280        	slli	a0, a2, 8
20003cc2:	006a      	add.n	a0, a0, a6
20003cc4:	8eb8      	l32i.n	a11, a14, 32
20003cc6:	0020c0        	memw
20003cc9:	00b9      	s32i.n	a11, a0, 0
20003ccb:	fec282        	addi	a8, a2, -2
20003cce:	304816        	beqz	a8, 20003fd6 <L2_SESearchBlock+0x55a>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:327
            rSE_FMASK_XOR_FIELD_HIGH(l_ucSEID) = ptValParam->ulXorFieldMaskHigh;
20003cd1:	f2ef61        	l32r	a6, 20000890 <_stext+0x190>
20003cd4:	110280        	slli	a0, a2, 8
20003cd7:	006a      	add.n	a0, a0, a6
20003cd9:	9eb8      	l32i.n	a11, a14, 36
20003cdb:	0020c0        	memw
20003cde:	00b9      	s32i.n	a11, a0, 0
20003ce0:	fec282        	addi	a8, a2, -2
20003ce3:	2f5816        	beqz	a8, 20003fdc <L2_SESearchBlock+0x560>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:328
            rSE_FMASK_XOR_VALUE_LOW(l_ucSEID) = ptValParam->ulXorValueMaskLow;
20003ce6:	f2eb61        	l32r	a6, 20000894 <_stext+0x194>
20003ce9:	110280        	slli	a0, a2, 8
20003cec:	006a      	add.n	a0, a0, a6
20003cee:	aeb8      	l32i.n	a11, a14, 40
20003cf0:	0020c0        	memw
20003cf3:	00b9      	s32i.n	a11, a0, 0
20003cf5:	fec282        	addi	a8, a2, -2
20003cf8:	2e8816        	beqz	a8, 20003fe4 <L2_SESearchBlock+0x568>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:329
            rSE_FMASK_XOR_VALUE_HIGH(l_ucSEID) = ptValParam->ulXorValueMaskHigh;
20003cfb:	f2e761        	l32r	a6, 20000898 <_stext+0x198>
20003cfe:	110280        	slli	a0, a2, 8
20003d01:	800060        	add	a0, a0, a6
20003d04:	be88      	l32i.n	a8, a14, 44
20003d06:	0020c0        	memw
20003d09:	0089      	s32i.n	a8, a0, 0
20003d0b:	000686        	j	20003d29 <L2_SESearchBlock+0x2ad>

20003d0e <L2_SESearchBlock+0x292>:
20003d0e:	000000                                        ...

20003d11 <L2_SESearchBlock+0x295>:
20003d11:	fec2b2        	addi	a11, a2, -2
20003d14:	2d4b16        	beqz	a11, 20003fec <L2_SESearchBlock+0x570>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:333
        }
        else
        {
            rSE_XOR_MASK_ENABLE(l_ucSEID) &= (~MSK_FGROUP_XOR_EN);
20003d17:	110280        	slli	a0, a2, 8
20003d1a:	008a      	add.n	a0, a0, a8
20003d1c:	0020c0        	memw
20003d1f:	0068      	l32i.n	a6, a0, 0
20003d21:	106690        	and	a6, a6, a9
20003d24:	0020c0        	memw
20003d27:	0069      	s32i.n	a6, a0, 0
20003d29:	e1a0e2        	movi	a14, 225
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:336
        }

        l_pSETypeReg->bsFGroupSType = ptValParam->bsSearchType;
20003d2c:	248830        	extui	a8, a3, 8, 3
20003d2f:	f2c901        	l32r	a0, 20000854 <_stext+0x154>
20003d32:	f8a0b2        	movi	a11, 248
20003d35:	2220a2        	l32i	a10, a0, 136
20003d38:	0020c0        	memw
20003d3b:	000a92        	l8ui	a9, a10, 0
20003d3e:	1099b0        	and	a9, a9, a11
20003d41:	209980        	or	a9, a9, a8
20003d44:	0020c0        	memw
20003d47:	004a92        	s8i	a9, a10, 0
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:337
        l_pSETypeReg->bsFGroupCType = ptValParam->bsCondType;
20003d4a:	f7a062        	movi	a6, 247
20003d4d:	0020c0        	memw
20003d50:	000a92        	l8ui	a9, a10, 0
20003d53:	41bb30        	srli	a11, a3, 11
20003d56:	109960        	and	a9, a9, a6
20003d59:	033b94        	insbits	a9, a11, 3, 3
20003d5c:	0020c0        	memw
20003d5f:	004a92        	s8i	a9, a10, 0
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:367

        l_pSETypeReg->bsSGroupSType = ptValParam->bsSearchType;
        l_pSETypeReg->bsSGroupCType = ptValParam->bsCondType;
    }
    
    if (FALSE == ptValParam->bsItemSizeDW)
20003d62:	18a516        	beqz	a5, 20003ef0 <L2_SESearchBlock+0x474>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:373
    {
        l_pSETrigSizeReg->bsItemSize = SE_ITEM_SIZE_QWORD;
    }
    else
    {
        l_pSETrigSizeReg->bsItemSize = SE_ITEM_SIZE_DWORD;
20003d65:	02a062        	movi	a6, 2
20003d68:	fea052        	movi	a5, 254
20003d6b:	0020c0        	memw
20003d6e:	000432        	l8ui	a3, a4, 0
20003d71:	1033e0        	and	a3, a3, a14
20003d74:	203360        	or	a3, a3, a6
20003d77:	0020c0        	memw
20003d7a:	004432        	s8i	a3, a4, 0
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:376
    }

    l_pSETrigSizeReg->bsTrigger = TRUE;
20003d7d:	0020c0        	memw
20003d80:	000492        	l8ui	a9, a4, 0
20003d83:	109950        	and	a9, a9, a5
20003d86:	209970        	or	a9, a9, a7
20003d89:	0020c0        	memw
20003d8c:	004492        	s8i	a9, a4, 0
20003d8f:	461c      	movi.n	a6, 20
20003d91:	03a676        	loopgtz	a6, 20003d98 <L2_SESearchBlock+0x31c>
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:612
INLINE void HAL_DelayCycle(U32 ulCycleCnt)
{
    while (ulCycleCnt--)
    {
        #ifndef SIM
            asm volatile ("nop\n"); // not use XT_NOP() to prevent compiler optimizing it
20003d94:	f03d      	nop.n
20003d96:	f03d      	nop.n

20003d98 <L2_SESearchBlock+0x31c>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:404
------------------------------------------------------------------------------*/
void HAL_SEGetSearchValueResult(U8 ucSType, U8 ucGroupID,SE_SEARCH_VALUE_RESULT *ptValResult)
{
    HAL_DelayCycle(SE_WAIT_TIME);

    while ( FALSE == l_pSEStatusReg->bStable )
20003d98:	f2af31        	l32r	a3, 20000854 <_stext+0x154>
20003d9b:	f03d      	nop.n
20003d9d:	232332        	l32i	a3, a3, 140
20003da0:	0020c0        	memw
20003da3:	0003a2        	l8ui	a10, a3, 0
20003da6:	0eea07        	bbsi	a10, 0, 20003db8 <L2_SESearchBlock+0x33c>
20003da9:	088076        	loop	a0, 20003db5 <L2_SESearchBlock+0x339>
20003dac:	0020c0        	memw
20003daf:	000342        	l8ui	a4, a3, 0
20003db2:	02e407        	bbsi	a4, 0, 20003db8 <L2_SESearchBlock+0x33c>
20003db5:	fffc06        	j	20003da9 <L2_SESearchBlock+0x32d>

20003db8 <L2_SESearchBlock+0x33c>:
20003db8:	fec852        	addi	a5, a8, -2
20003dbb:	0d9516        	beqz	a5, 20003e98 <L2_SESearchBlock+0x41c>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:414
    if (SE_1ST_MSK_GROUP == ucGroupID)
    {
        if ((SEARCH_TYPE_SAME != ucSType) ||
            ((SEARCH_TYPE_SAME == ucSType) && (TRUE == l_pSEStatusReg->bFGroupFind)))
        {
            ptValResult->bsFind = TRUE;
20003dbe:	3f88      	l32i.n	a8, a15, 12
20003dc0:	fec262        	addi	a6, a2, -2
20003dc3:	208870        	or	a8, a8, a7
20003dc6:	036f82        	s32i	a8, a15, 12
20003dc9:	164616        	beqz	a6, 20003f31 <L2_SESearchBlock+0x4b5>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:415
            ptValResult->ulIndex = rSE_FINDEX(l_ucSEID);
20003dcc:	f2b431        	l32r	a3, 2000089c <_stext+0x19c>
20003dcf:	110280        	slli	a0, a2, 8
20003dd2:	003a      	add.n	a0, a0, a3
20003dd4:	0020c0        	memw
20003dd7:	fec242        	addi	a4, a2, -2
20003dda:	0058      	l32i.n	a5, a0, 0
20003ddc:	0f59      	s32i.n	a5, a15, 0
20003dde:	155416        	beqz	a4, 20003f37 <L2_SESearchBlock+0x4bb>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:416
            ptValResult->ulRtnValueLow = rSE_RETURN_FVALUE_LOW(l_ucSEID);
20003de1:	f2af31        	l32r	a3, 200008a0 <_stext+0x1a0>
20003de4:	110280        	slli	a0, a2, 8
20003de7:	003a      	add.n	a0, a0, a3
20003de9:	0020c0        	memw
20003dec:	fec242        	addi	a4, a2, -2
20003def:	0058      	l32i.n	a5, a0, 0
20003df1:	016f52        	s32i	a5, a15, 4
20003df4:	145416        	beqz	a4, 20003f3d <L2_SESearchBlock+0x4c1>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:417
            ptValResult->ulRtnValueHigh = rSE_RETURN_FVALUE_HIGH(l_ucSEID);
20003df7:	f2ab31        	l32r	a3, 200008a4 <_stext+0x1a4>
20003dfa:	110280        	slli	a0, a2, 8
20003dfd:	800030        	add	a0, a0, a3
20003e00:	0020c0        	memw
20003e03:	002042        	l32i	a4, a0, 0
20003e06:	2f49      	s32i.n	a4, a15, 8
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:467
void HAL_SESearchValue(SE_SEARCH_VALUE_PARAM *ptValParam, U8 ucGroupID, SE_SEARCH_VALUE_RESULT *ptValResult)
{
    HAL_SEClockEnable(l_ucSEID);
    HAL_SETriggerSearchValue(ptValParam,ucGroupID);
    HAL_SEGetSearchValueResult(ptValParam->bsSearchType, ucGroupID,ptValResult);
    HAL_SEClockDisable(l_ucSEID);
20003e08:	02ed      	mov.n	a14, a2
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
    20141028    Gavin   change attribute to "INLINE"
------------------------------------------------------------------------------*/
INLINE U32 HAL_GetMcuId(void)
{
    U32 ulMcuId;
    ulMcuId = XT_RSR_PRID();
20003e0a:	03ebd0        	rsr.prid	a13
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:149
#ifndef SIM
    U32 ulMcuID;
    U32 ulLockValue;
        
    ulMcuID = HAL_GetMcuId();
    if ((MCU0_ID == ulMcuID) || (MCU1_ID == ulMcuID) || (MCU2_ID == ulMcuID))
20003e0d:	051d26        	beqi	a13, 1, 20003e16 <L2_SESearchBlock+0x39a>
20003e10:	022d26        	beqi	a13, 2, 20003e16 <L2_SESearchBlock+0x39a>
20003e13:	093d66        	bnei	a13, 3, 20003e20 <L2_SESearchBlock+0x3a4>
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:151
    {
        *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4) = ulMcuID;
20003e16:	0020c0        	memw
20003e19:	cc6cd2        	s32i	a13, a12, 0x330
20003e1c:	000186        	j	20003e26 <L2_SESearchBlock+0x3aa>

20003e1f <L2_SESearchBlock+0x3a3>:
	...

20003e20 <L2_SESearchBlock+0x3a4>:
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:155
    }
    else
    {
        DBG_Getch();
20003e20:	f23e01        	l32r	a0, 20000718 <_stext+0x18>
20003e23:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:158
    }

    ulLockValue = *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4);
20003e26:	0020c0        	memw
20003e29:	cc2c52        	l32i	a5, a12, 0x330
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:187
{
    BOOL bSts = FALSE;
    do
    {
        bSts = HAL_MultiCoreGetSpinLock(ucLockId);
    }while (FALSE == bSts);
20003e2c:	da9d57        	bne	a13, a5, 20003e0a <L2_SESearchBlock+0x38e>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:97
                       2. Input Param void -> U8
------------------------------------------------------------------------------*/
void HAL_SEClockDisable(U8 ucSEID)
{
    HAL_MultiCoreGetSpinLockWait(SPINLOCKID_CLKGATING);
    if (SE0 == ucSEID)
20003e2f:	1eae16        	beqz	a14, 2000401d <L2_SESearchBlock+0x5a1>
20003e32:	6e0b      	addi.n	a6, a14, -1
20003e34:	0d0616        	beqz	a6, 20003f08 <L2_SESearchBlock+0x48c>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:107
    {
        rGlbClkGating &= (~MSK_EN_SE1_CLK); 
    }
    else
    {
        rGlbClkGating &= (~MSK_EN_SE2_CLK); 
20003e37:	f29c91        	l32r	a9, 200008a8 <_stext+0x1a8>
20003e3a:	0020c0        	memw
20003e3d:	852c82        	l32i	a8, a12, 0x214
20003e40:	108890        	and	a8, a8, a9
20003e43:	0020c0        	memw
20003e46:	856c82        	s32i	a8, a12, 0x214
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
History:
    20140917    Tobey  uniform coding style
------------------------------------------------------------------------------*/
void MULTI_CORE_TEXT_ATTR HAL_MultiCoreReleaseSpinLock(U8 ucLockId)
{
    *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4) = 0;
20003e49:	0020c0        	memw
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:305
    }

    HAL_SESearchValue(pSEParamSet, SE_1ST_MSK_GROUP, pSEGetResult);

    return;
20003e4c:	0108      	l32i.n	a0, a1, 0
20003e4e:	21d8      	l32i.n	a13, a1, 8
20003e50:	31e8      	l32i.n	a14, a1, 12
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
20003e52:	070c      	movi.n	a7, 0
20003e54:	cc6c72        	s32i	a7, a12, 0x330
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:305
20003e57:	41f8      	l32i.n	a15, a1, 16
20003e59:	11c8      	l32i.n	a12, a1, 4
20003e5b:	20c112        	addi	a1, a1, 32
20003e5e:	f00d      	ret.n

20003e60 <L2_SESearchBlock+0x3e4>:
	...

20003e61 <L2_SESearchBlock+0x3e5>:
20003e61:	fec2b2        	addi	a11, a2, -2
20003e64:	158b16        	beqz	a11, 20003fc0 <L2_SESearchBlock+0x544>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:308
    {
        rSE_SEARCH_LEN_QW(l_ucSEID) = ptValParam->ulItemCnt;
    }
    else
    {
        rSE_SEARCH_LEN_QW(l_ucSEID) = ptValParam->ulItemCnt/2;
20003e67:	116280        	slli	a6, a2, 8
20003e6a:	868a      	add.n	a8, a6, a8
20003e6c:	41b100        	srli	a11, a0, 1
20003e6f:	0020c0        	memw
20003e72:	08b9      	s32i.n	a11, a8, 0
20003e74:	fec292        	addi	a9, a2, -2
20003e77:	d5d956        	bnez	a9, 20003bd8 <L2_SESearchBlock+0x15c>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:310
    }
    rSE_PITCH_SIZE(l_ucSEID) = ptValParam->ucPitchQW;
20003e7a:	f28c01        	l32r	a0, 200008ac <_stext+0x1ac>
20003e7d:	ff5806        	j	20003be1 <L2_SESearchBlock+0x165>

20003e80 <L2_SESearchBlock+0x404>:
20003e80:	20f550        	or	a15, a5, a5
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:268
{
    SE_SEARCH_VALUE_PARAM* pSEParamSet;

    if (SEARCH_CASE_MAX <= ulSearchCase)
    {
        DBG_Printf("L2_SESearchBlock: ulSearchCase = %d, ERROR!\n", ulSearchCase);
20003e83:	f28b21        	l32r	a2, 200008b0 <_stext+0x1b0>
20003e86:	203cc0        	or	a3, a12, a12
20003e89:	06dd85        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:269
        DBG_Getch();
20003e8c:	f22301        	l32r	a0, 20000718 <_stext+0x18>
20003e8f:	0000c0        	callx0	a0
20003e92:	062102        	l32i	a0, a1, 24
20003e95:	ff0506        	j	20003aad <L2_SESearchBlock+0x31>

20003e98 <L2_SESearchBlock+0x41c>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:411
        /*wait search finish*/
    }

    if (SE_1ST_MSK_GROUP == ucGroupID)
    {
        if ((SEARCH_TYPE_SAME != ucSType) ||
20003e98:	0020c0        	memw
20003e9b:	0003e2        	l8ui	a14, a3, 0
20003e9e:	04e1e0        	extui	a14, a14, 1, 1
20003ea1:	f19e56        	bnez	a14, 20003dbe <L2_SESearchBlock+0x342>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:421
            ptValResult->ulRtnValueLow = rSE_RETURN_FVALUE_LOW(l_ucSEID);
            ptValResult->ulRtnValueHigh = rSE_RETURN_FVALUE_HIGH(l_ucSEID);
        }
        else
        {
            ptValResult->bsFind = FALSE;
20003ea4:	3f08      	l32i.n	a0, a15, 12
20003ea6:	e37c      	movi.n	a3, -2
20003ea8:	100030        	and	a0, a0, a3
20003eab:	3f09      	s32i.n	a0, a15, 12
20003ead:	ffd5c6        	j	20003e08 <L2_SESearchBlock+0x38c>

20003eb0 <L2_SESearchBlock+0x434>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:314
    }
    rSE_PITCH_SIZE(l_ucSEID) = ptValParam->ucPitchQW;

    if (SE_1ST_MSK_GROUP == ucGroupID)
    {  
        rSE_FMSK_SELECTION_LOW(l_ucSEID) = ptValParam->ulSelMaskLow;
20003eb0:	f28101        	l32r	a0, 200008b4 <_stext+0x1b4>
20003eb3:	ff5046        	j	20003bf8 <L2_SESearchBlock+0x17c>

20003eb6 <L2_SESearchBlock+0x43a>:
	...

20003eb8 <L2_SESearchBlock+0x43c>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:315
        rSE_FMSK_SELECTION_HIGH(l_ucSEID) = ptValParam->ulSelMaskHigh;
20003eb8:	f28001        	l32r	a0, 200008b8 <_stext+0x1b8>
20003ebb:	ff5386        	j	20003c0d <L2_SESearchBlock+0x191>

20003ebe <L2_SESearchBlock+0x442>:
	...

20003ec0 <L2_SESearchBlock+0x444>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:316
        rSE_FMASK_CONDITION_LOW(l_ucSEID) = ptValParam->ulCondMaskLow;
20003ec0:	f27f01        	l32r	a0, 200008bc <_stext+0x1bc>
20003ec3:	ff56c6        	j	20003c22 <L2_SESearchBlock+0x1a6>

20003ec6 <L2_SESearchBlock+0x44a>:
	...

20003ec8 <L2_SESearchBlock+0x44c>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:317
        rSE_FMASK_CONDITION_HIGH(l_ucSEID) = ptValParam->ulCondMaskHigh;
20003ec8:	f27e01        	l32r	a0, 200008c0 <_stext+0x1c0>
20003ecb:	ff5a46        	j	20003c38 <L2_SESearchBlock+0x1bc>

20003ece <L2_SESearchBlock+0x452>:
	...

20003ed0 <L2_SESearchBlock+0x454>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:318
        rSE_FMASK_FIELD_LOW(l_ucSEID) = ptValParam->ulFieldMaskLow;
20003ed0:	f27d01        	l32r	a0, 200008c4 <_stext+0x1c4>
20003ed3:	ff5d86        	j	20003c4d <L2_SESearchBlock+0x1d1>

20003ed6 <L2_SESearchBlock+0x45a>:
	...

20003ed8 <L2_SESearchBlock+0x45c>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:319
        rSE_FMASK_FIELD_HIGH(l_ucSEID) = ptValParam->ulFieldMaskHigh;
20003ed8:	f27c01        	l32r	a0, 200008c8 <_stext+0x1c8>
20003edb:	ff60c6        	j	20003c62 <L2_SESearchBlock+0x1e6>

20003ede <L2_SESearchBlock+0x462>:
	...

20003ee0 <L2_SESearchBlock+0x464>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:320
        rSE_FVALUE_SEARCHED_LOW(l_ucSEID) = ptValParam->ulValToSearchLow;
20003ee0:	f27b01        	l32r	a0, 200008cc <_stext+0x1cc>
20003ee3:	ff6446        	j	20003c78 <L2_SESearchBlock+0x1fc>

20003ee6 <L2_SESearchBlock+0x46a>:
	...

20003ee8 <L2_SESearchBlock+0x46c>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:321
        rSE_FVALUE_SEARCHED_HIGH(l_ucSEID) = ptValParam->ulValToSearchHigh;
20003ee8:	f27a01        	l32r	a0, 200008d0 <_stext+0x1d0>
20003eeb:	ff67c6        	j	20003c8e <L2_SESearchBlock+0x212>

20003eee <L2_SESearchBlock+0x472>:
	...

20003ef0 <L2_SESearchBlock+0x474>:
20003ef0:	fea052        	movi	a5, 254
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:369
        l_pSETypeReg->bsSGroupCType = ptValParam->bsCondType;
    }
    
    if (FALSE == ptValParam->bsItemSizeDW)
    {
        l_pSETrigSizeReg->bsItemSize = SE_ITEM_SIZE_QWORD;
20003ef3:	0020c0        	memw
20003ef6:	000462        	l8ui	a6, a4, 0
20003ef9:	1066e0        	and	a6, a6, a14
20003efc:	2066d0        	or	a6, a6, a13
20003eff:	0020c0        	memw
20003f02:	004462        	s8i	a6, a4, 0
20003f05:	ff9d06        	j	20003d7d <L2_SESearchBlock+0x301>

20003f08 <L2_SESearchBlock+0x48c>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:103
    {
        rGlbClkGating &= (~MSK_EN_SE0_CLK);
    }
    else if (SE1 == ucSEID)
    {
        rGlbClkGating &= (~MSK_EN_SE1_CLK); 
20003f08:	f27391        	l32r	a9, 200008d4 <_stext+0x1d4>
20003f0b:	0020c0        	memw
20003f0e:	852c82        	l32i	a8, a12, 0x214
20003f11:	108890        	and	a8, a8, a9
20003f14:	0020c0        	memw
20003f17:	856c82        	s32i	a8, a12, 0x214
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
20003f1a:	0020c0        	memw
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:305
        break;
    }

    HAL_SESearchValue(pSEParamSet, SE_1ST_MSK_GROUP, pSEGetResult);

    return;
20003f1d:	0108      	l32i.n	a0, a1, 0
20003f1f:	21d8      	l32i.n	a13, a1, 8
20003f21:	31e8      	l32i.n	a14, a1, 12
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
20003f23:	070c      	movi.n	a7, 0
20003f25:	cc6c72        	s32i	a7, a12, 0x330
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:305
20003f28:	41f8      	l32i.n	a15, a1, 16
20003f2a:	11c8      	l32i.n	a12, a1, 4
20003f2c:	20c112        	addi	a1, a1, 32
20003f2f:	f00d      	ret.n

20003f31 <L2_SESearchBlock+0x4b5>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:415
    {
        if ((SEARCH_TYPE_SAME != ucSType) ||
            ((SEARCH_TYPE_SAME == ucSType) && (TRUE == l_pSEStatusReg->bFGroupFind)))
        {
            ptValResult->bsFind = TRUE;
            ptValResult->ulIndex = rSE_FINDEX(l_ucSEID);
20003f31:	f26901        	l32r	a0, 200008d8 <_stext+0x1d8>
20003f34:	ffa706        	j	20003dd4 <L2_SESearchBlock+0x358>

20003f37 <L2_SESearchBlock+0x4bb>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:416
            ptValResult->ulRtnValueLow = rSE_RETURN_FVALUE_LOW(l_ucSEID);
20003f37:	f26901        	l32r	a0, 200008dc <_stext+0x1dc>
20003f3a:	ffaac6        	j	20003de9 <L2_SESearchBlock+0x36d>

20003f3d <L2_SESearchBlock+0x4c1>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:417
            ptValResult->ulRtnValueHigh = rSE_RETURN_FVALUE_HIGH(l_ucSEID);
20003f3d:	f26801        	l32r	a0, 200008e0 <_stext+0x1e0>
20003f40:	ffaf06        	j	20003e00 <L2_SESearchBlock+0x384>

20003f43 <L2_SESearchBlock+0x4c7>:
	...

20003f44 <L2_SESearchBlock+0x4c8>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:68
    {
        rGlbClkGating |= MSK_EN_SE0_CLK; 
    }
    else if (SE1 == ucSEID)
    {
        rGlbClkGating |= MSK_EN_SE1_CLK; 
20003f44:	f268b1        	l32r	a11, 200008e4 <_stext+0x1e4>
20003f47:	0020c0        	memw
20003f4a:	852ca2        	l32i	a10, a12, 0x214
20003f4d:	20aab0        	or	a10, a10, a11
20003f50:	0020c0        	memw
20003f53:	856ca2        	s32i	a10, a12, 0x214
20003f56:	fef106        	j	20003b1e <L2_SESearchBlock+0xa2>

20003f59 <L2_SESearchBlock+0x4dd>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:184
    HAL_MultiCoreGetSpinLockWait(SPINLOCKID_SE);
#endif

    if (SE0 == ucSEID)
    {
        rGlbTrfc &= (~MSK_EN_SE0_OTFB); 
20003f59:	dfaf82        	movi	a8, -33
20003f5c:	0020c0        	memw
20003f5f:	992c62        	l32i	a6, a12, 0x264
20003f62:	106680        	and	a6, a6, a8
20003f65:	0020c0        	memw
20003f68:	996c62        	s32i	a6, a12, 0x264
20003f6b:	fec252        	addi	a5, a2, -2
20003f6e:	bf9556        	bnez	a5, 20003b6b <L2_SESearchBlock+0xef>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:295
    l_pSETrigSizeReg->bsTrigger = 0;

    if (FALSE == ptValParam->bsOTFB)
    {
        HAL_SEOtfbDisable(l_ucSEID); 
        rSE_START_ADDR(l_ucSEID) = ptValParam->ulStartAddr - DRAM_START_ADDRESS;
20003f71:	f25d01        	l32r	a0, 200008e8 <_stext+0x1e8>
20003f74:	fefe06        	j	20003b70 <L2_SESearchBlock+0xf4>

20003f77 <L2_SESearchBlock+0x4fb>:
	...

20003f79 <L2_SESearchBlock+0x4fd>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:140
    HAL_MultiCoreGetSpinLockWait(SPINLOCKID_SE);
#endif

    if (SE0 == ucSEID)
    {
        rGlbTrfc |= MSK_EN_SE0_OTFB; 
20003f79:	062c      	movi.n	a6, 32
20003f7b:	0020c0        	memw
20003f7e:	992cb2        	l32i	a11, a12, 0x264
20003f81:	20bb60        	or	a11, a11, a6
20003f84:	0020c0        	memw
20003f87:	996cb2        	s32i	a11, a12, 0x264
20003f8a:	fec292        	addi	a9, a2, -2
20003f8d:	c11956        	bnez	a9, 20003ba2 <L2_SESearchBlock+0x126>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:300
        rSE_START_ADDR(l_ucSEID) = ptValParam->ulStartAddr - DRAM_START_ADDRESS;
    }
    else
    {
        HAL_SEOtfbEnable(l_ucSEID); 
        rSE_START_ADDR(l_ucSEID) = ptValParam->ulStartAddr - OTFB_START_ADDRESS;
20003f90:	f25601        	l32r	a0, 200008e8 <_stext+0x1e8>
20003f93:	ff0446        	j	20003ba8 <L2_SESearchBlock+0x12c>

20003f96 <L2_SESearchBlock+0x51a>:
	...

20003f98 <L2_SESearchBlock+0x51c>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:64
void HAL_SEClockEnable(U8 ucSEID)
{
    HAL_MultiCoreGetSpinLockWait(SPINLOCKID_CLKGATING);
    if (SE0 == ucSEID)
    {
        rGlbClkGating |= MSK_EN_SE0_CLK; 
20003f98:	0020c0        	memw
20003f9b:	852c72        	l32i	a7, a12, 0x214
20003f9e:	207750        	or	a7, a7, a5
20003fa1:	0020c0        	memw
20003fa4:	856c72        	s32i	a7, a12, 0x214
20003fa7:	fedcc6        	j	20003b1e <L2_SESearchBlock+0xa2>

20003faa <L2_SESearchBlock+0x52e>:
	...

20003fac <L2_SESearchBlock+0x530>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:290
    case FREE_ERASE_CNT_MIN:
    case BROKEN_ERASE_CNT_MAX:
    case BROKEN_ERASE_CNT_MIN:
        if (TRUE == ucTLCBlk)
        {
            pSEParamSet->ulXorValueMaskHigh |= 0x1000;
20003fac:	f20e81        	l32r	a8, 200007e4 <_stext+0xe4>
20003faf:	208080        	or	a8, a0, a8
20003fb2:	be89      	s32i.n	a8, a14, 44
20003fb4:	fec546        	j	20003acd <L2_SESearchBlock+0x51>

20003fb7 <L2_SESearchBlock+0x53b>:
	...

20003fb8 <L2_SESearchBlock+0x53c>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:304
        HAL_SEOtfbEnable(l_ucSEID); 
        rSE_START_ADDR(l_ucSEID) = ptValParam->ulStartAddr - OTFB_START_ADDRESS;
    }
    if (FALSE == ptValParam->bsItemSizeDW)
    {
        rSE_SEARCH_LEN_QW(l_ucSEID) = ptValParam->ulItemCnt;
20003fb8:	f24d81        	l32r	a8, 200008ec <_stext+0x1ec>
20003fbb:	ff0346        	j	20003bcc <L2_SESearchBlock+0x150>

20003fbe <L2_SESearchBlock+0x542>:
	...

20003fc0 <L2_SESearchBlock+0x544>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:308
    }
    else
    {
        rSE_SEARCH_LEN_QW(l_ucSEID) = ptValParam->ulItemCnt/2;
20003fc0:	f24b81        	l32r	a8, 200008ec <_stext+0x1ec>
20003fc3:	ffa946        	j	20003e6c <L2_SESearchBlock+0x3f0>

20003fc6 <L2_SESearchBlock+0x54a>:
	...

20003fc8 <L2_SESearchBlock+0x54c>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:325
        rSE_FVALUE_SEARCHED_LOW(l_ucSEID) = ptValParam->ulValToSearchLow;
        rSE_FVALUE_SEARCHED_HIGH(l_ucSEID) = ptValParam->ulValToSearchHigh;

        if ( TRUE == ptValParam->bsXorEn )
        {
            rSE_XOR_MASK_ENABLE(l_ucSEID) |= MSK_FGROUP_XOR_EN;
20003fc8:	f24a01        	l32r	a0, 200008f0 <_stext+0x1f0>
20003fcb:	ff3686        	j	20003ca9 <L2_SESearchBlock+0x22d>

20003fce <L2_SESearchBlock+0x552>:
	...

20003fd0 <L2_SESearchBlock+0x554>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:326
            rSE_FMASK_XOR_FIELD_LOW(l_ucSEID) = ptValParam->ulXorFieldMaskLow;
20003fd0:	f24901        	l32r	a0, 200008f4 <_stext+0x1f4>
20003fd3:	ff3b46        	j	20003cc4 <L2_SESearchBlock+0x248>

20003fd6 <L2_SESearchBlock+0x55a>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:327
            rSE_FMASK_XOR_FIELD_HIGH(l_ucSEID) = ptValParam->ulXorFieldMaskHigh;
20003fd6:	f24801        	l32r	a0, 200008f8 <_stext+0x1f8>
20003fd9:	ff3f06        	j	20003cd9 <L2_SESearchBlock+0x25d>

20003fdc <L2_SESearchBlock+0x560>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:328
            rSE_FMASK_XOR_VALUE_LOW(l_ucSEID) = ptValParam->ulXorValueMaskLow;
20003fdc:	f24801        	l32r	a0, 200008fc <_stext+0x1fc>
20003fdf:	ff42c6        	j	20003cee <L2_SESearchBlock+0x272>

20003fe2 <L2_SESearchBlock+0x566>:
	...

20003fe4 <L2_SESearchBlock+0x568>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:329
            rSE_FMASK_XOR_VALUE_HIGH(l_ucSEID) = ptValParam->ulXorValueMaskHigh;
20003fe4:	f24701        	l32r	a0, 20000900 <_stext+0x200>
20003fe7:	ff4646        	j	20003d04 <L2_SESearchBlock+0x288>

20003fea <L2_SESearchBlock+0x56e>:
	...

20003fec <L2_SESearchBlock+0x570>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:333
        }
        else
        {
            rSE_XOR_MASK_ENABLE(l_ucSEID) &= (~MSK_FGROUP_XOR_EN);
20003fec:	f24101        	l32r	a0, 200008f0 <_stext+0x1f0>
20003fef:	ff4a46        	j	20003d1c <L2_SESearchBlock+0x2a0>

20003ff2 <L2_SESearchBlock+0x576>:
	...

20003ff4 <L2_SESearchBlock+0x578>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:188
    {
        rGlbTrfc &= (~MSK_EN_SE0_OTFB); 
    }
    else if (SE1 == ucSEID)
    {
        rGlbTrfc &= (~MSK_EN_SE1_OTFB); 
20003ff4:	bfafb2        	movi	a11, -65
20003ff7:	0020c0        	memw
20003ffa:	992c92        	l32i	a9, a12, 0x264
20003ffd:	1099b0        	and	a9, a9, a11
20004000:	0020c0        	memw
20004003:	996c92        	s32i	a9, a12, 0x264
20004006:	fed6c6        	j	20003b65 <L2_SESearchBlock+0xe9>

20004009 <L2_SESearchBlock+0x58d>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:144
    {
        rGlbTrfc |= MSK_EN_SE0_OTFB; 
    }
    else if (SE1 == ucSEID)
    {
        rGlbTrfc |= MSK_EN_SE1_OTFB; 
20004009:	084c      	movi.n	a8, 64
2000400b:	0020c0        	memw
2000400e:	992c62        	l32i	a6, a12, 0x264
20004011:	206680        	or	a6, a6, a8
20004014:	0020c0        	memw
20004017:	996c62        	s32i	a6, a12, 0x264
2000401a:	fedf86        	j	20003b9c <L2_SESearchBlock+0x120>

2000401d <L2_SESearchBlock+0x5a1>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:99
void HAL_SEClockDisable(U8 ucSEID)
{
    HAL_MultiCoreGetSpinLockWait(SPINLOCKID_CLKGATING);
    if (SE0 == ucSEID)
    {
        rGlbClkGating &= (~MSK_EN_SE0_CLK);
2000401d:	f1c9b1        	l32r	a11, 20000744 <_stext+0x44>
20004020:	0020c0        	memw
20004023:	852ca2        	l32i	a10, a12, 0x214
20004026:	10aab0        	and	a10, a10, a11
20004029:	0020c0        	memw
2000402c:	856ca2        	s32i	a10, a12, 0x214
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
2000402f:	0020c0        	memw
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:305
        break;
    }

    HAL_SESearchValue(pSEParamSet, SE_1ST_MSK_GROUP, pSEGetResult);

    return;
20004032:	0108      	l32i.n	a0, a1, 0
20004034:	21d8      	l32i.n	a13, a1, 8
20004036:	31e8      	l32i.n	a14, a1, 12
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
20004038:	090c      	movi.n	a9, 0
2000403a:	cc6c92        	s32i	a9, a12, 0x330
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:305
2000403d:	41f8      	l32i.n	a15, a1, 16
2000403f:	11c8      	l32i.n	a12, a1, 4
20004041:	20c112        	addi	a1, a1, 32
20004044:	f00d      	ret.n

20004046 <L2_SESearchBlock+0x5ca>:
	...

20004048 <L3_FMSetPhyPage>:
L3_FMSetPhyPage():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:281
History    : 
    1. 2016.7.28 JasonGuo create function
==============================================================================*/
void L3_FMSetPhyPage(U8 ucTLun, U16 usPhyPage)
{
    l_ptFMIntrMgr[ucTLun].bsPhyPage = usPhyPage;
20004048:	f1b551        	l32r	a5, 2000071c <_stext+0x1c>
2000404b:	212552        	l32i	a5, a5, 132
2000404e:	904220        	addx2	a4, a2, a2
20004051:	a04450        	addx4	a4, a4, a5
20004054:	015432        	s16i	a3, a4, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:282
}
20004057:	f00d      	ret.n

20004059 <L3_FMSetPhyPage+0x11>:
20004059:	000000                                        ...

2000405c <L3_FMSetPhyBlk>:
L3_FMSetPhyBlk():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:265
History    : 
    1. 2016.7.28 JasonGuo create function
==============================================================================*/
void L3_FMSetPhyBlk(U8 ucTLun, U16 usPhyBlk)
{
    l_ptFMIntrMgr[ucTLun].bsPhyBlk = usPhyBlk;
2000405c:	f1b051        	l32r	a5, 2000071c <_stext+0x1c>
2000405f:	212552        	l32i	a5, a5, 132
20004062:	904220        	addx2	a4, a2, a2
20004065:	a04450        	addx4	a4, a4, a5
20004068:	005432        	s16i	a3, a4, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:266
}
2000406b:	f00d      	ret.n

2000406d <L3_FMSetPhyBlk+0x11>:
2000406d:	000000                                        ...

20004070 <L2_BM_AllocateFreeBlock>:
L2_BM_AllocateFreeBlock():
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:865
#endif

}

U16 L2_BM_AllocateFreeBlock(U8 ucSuperPu, U16 AllocateType, U8 ucTLCBlk)
{
20004070:	d0c112        	addi	a1, a1, -48
20004073:	066102        	s32i	a0, a1, 24
20004076:	91e9      	s32i.n	a14, a1, 36
20004078:	71c9      	s32i.n	a12, a1, 28
2000407a:	81d9      	s32i.n	a13, a1, 32
2000407c:	03cd      	mov.n	a12, a3
2000407e:	f1a7d1        	l32r	a13, 2000071c <_stext+0x1c>
20004081:	02ed      	mov.n	a14, a2
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:867
    U8 ucLunInSuperPu = 0;
    PBIT_ENTRY* pPBITItem = pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu];
20004083:	a0d2d0        	addx4	a13, a2, a13
20004086:	51d9      	s32i.n	a13, a1, 20
20004088:	7c2dd2        	l32i	a13, a13, 0x1f0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:520
    20141028    Gavin   add "INLINE" attribute
------------------------------------------------------------------------------*/
INLINE void HAL_InvalidateDCache(void)
{
#ifndef SIM
    xthal_dcache_all_invalidate();   
2000408b:	073345        	call0	2000b3c0 <xthal_dcache_all_invalidate>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:892
    {
        L2_SESearchBlock(FREE_ERASE_CNT_MAX, (U32 *)&(pPBITItem[0]), ucTLCBlk, &SEGetResult);
    }
    else
    {
        L2_SESearchBlock(FREE_ERASE_CNT_MIN, (U32 *)&(pPBITItem[0]), ucTLCBlk, &SEGetResult);
2000408e:	120c      	movi.n	a2, 1
20004090:	0d3d      	mov.n	a3, a13
20004092:	0c4d      	mov.n	a4, a12
20004094:	015d      	mov.n	a5, a1
20004096:	ff9e45        	call0	20003a7c <L2_SESearchBlock>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:895
    }

    if (FALSE == SEGetResult.bsFind)
20004099:	3108      	l32i.n	a0, a1, 12
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:901
    {
        DBG_Printf("Allocate Fail!\n");
        return INVALID_4F;
    }

    Pos = SEGetResult.ulIndex;
2000409b:	0178      	l32i.n	a7, a1, 0
2000409d:	040000        	extui	a0, a0, 0, 1
200040a0:	0d5016        	beqz	a0, 20004179 <L2_BM_AllocateFreeBlock+0x109>
200040a3:	f40070        	extui	a0, a7, 0, 16
200040a6:	4109      	s32i.n	a0, a1, 16
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:902
    if ((TRUE != pPBITItem[Pos].bFree) || (FALSE != pPBITItem[Pos].bBackup) || (FALSE != pPBITItem[Pos].bLock) 
200040a8:	b000d0        	addx8	a0, a0, a13
200040ab:	1008      	l32i.n	a0, a0, 4
200040ad:	0e6007        	bbci	a0, 0, 200040bf <L2_BM_AllocateFreeBlock+0x4f>
200040b0:	0be037        	bbsi	a0, 3, 200040bf <L2_BM_AllocateFreeBlock+0x4f>
200040b3:	08e0b7        	bbsi	a0, 11, 200040bf <L2_BM_AllocateFreeBlock+0x4f>
200040b6:	042c00        	extui	a2, a0, 12, 1
200040b9:	029c27        	bne	a12, a2, 200040bf <L2_BM_AllocateFreeBlock+0x4f>
200040bc:	136017        	bbci	a0, 1, 200040d3 <L2_BM_AllocateFreeBlock+0x63>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:905
        || (ucTLCBlk != pPBITItem[Pos].bTLC) || (FALSE != pPBITItem[Pos].bError))
    {
        DBG_Printf("L2_BM_AllocateFreeBlock:SuperPu %d, ucLunInSuperPu %d,AllocateType %d, ucTLCBlk %d, Index 0x%x\n ",
200040bf:	f21121        	l32r	a2, 20000904 <_stext+0x204>
200040c2:	0e3d      	mov.n	a3, a14
200040c4:	040c      	movi.n	a4, 0
200040c6:	050c      	movi.n	a5, 0
200040c8:	0c6d      	mov.n	a6, a12
200040ca:	06b985        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:907
            ucSuperPu, ucLunInSuperPu, AllocateType, ucTLCBlk, SEGetResult.ulIndex);
        DBG_Getch();
200040cd:	f19201        	l32r	a0, 20000718 <_stext+0x18>
200040d0:	0000c0        	callx0	a0

200040d3 <L2_BM_AllocateFreeBlock+0x63>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:914

    for (j = 0; j < LUN_NUM_PER_SUPERPU; j++)
    {
        VBN = pPBITItem[Pos].VirtualBlockAddr;
        PBN = pVBT[ucSuperPu]->m_VBT[VBN].PhysicalBlockAddr[j];
        pPBIT[ucSuperPu]->m_PBIT_Entry[j][PBN].bFree = FALSE;
200040d3:	ea7c      	movi.n	a10, -2
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:1088

void L2_ResetBlkReadCnt(U8 ucSuperPu, U8 ucLunInSuperPu, U16 usPBN)
{
    U32 ulEraseCnt;

    ulEraseCnt = pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usPBN].EraseCnt;
200040d5:	f19161        	l32r	a6, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:913
    }

    for (j = 0; j < LUN_NUM_PER_SUPERPU; j++)
    {
        VBN = pPBITItem[Pos].VirtualBlockAddr;
        PBN = pVBT[ucSuperPu]->m_VBT[VBN].PhysicalBlockAddr[j];
200040d8:	4178      	l32i.n	a7, a1, 16
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:914
        pPBIT[ucSuperPu]->m_PBIT_Entry[j][PBN].bFree = FALSE;
200040da:	5148      	l32i.n	a4, a1, 20
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:1090
{
    U32 ulEraseCnt;

    ulEraseCnt = pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usPBN].EraseCnt;

    if ((0 <= ulEraseCnt) && (READ_DISTURB_ERASE_CNT_THS_1 > ulEraseCnt))
200040dc:	a00770        	addx4	a0, a7, a7
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:914

    for (j = 0; j < LUN_NUM_PER_SUPERPU; j++)
    {
        VBN = pPBITItem[Pos].VirtualBlockAddr;
        PBN = pVBT[ucSuperPu]->m_VBT[VBN].PhysicalBlockAddr[j];
        pPBIT[ucSuperPu]->m_PBIT_Entry[j][PBN].bFree = FALSE;
200040df:	7c2422        	l32i	a2, a4, 0x1f0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:913
    }

    for (j = 0; j < LUN_NUM_PER_SUPERPU; j++)
    {
        VBN = pPBITItem[Pos].VirtualBlockAddr;
        PBN = pVBT[ucSuperPu]->m_VBT[VBN].PhysicalBlockAddr[j];
200040e2:	b037d0        	addx8	a3, a7, a13
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:1088

void L2_ResetBlkReadCnt(U8 ucSuperPu, U8 ucLunInSuperPu, U16 usPBN)
{
    U32 ulEraseCnt;

    ulEraseCnt = pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usPBN].EraseCnt;
200040e5:	a06e60        	addx4	a6, a14, a6
200040e8:	7c2662        	l32i	a6, a6, 0x1f0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:913
    }

    for (j = 0; j < LUN_NUM_PER_SUPERPU; j++)
    {
        VBN = pPBITItem[Pos].VirtualBlockAddr;
        PBN = pVBT[ucSuperPu]->m_VBT[VBN].PhysicalBlockAddr[j];
200040eb:	001352        	l16ui	a5, a3, 0
200040ee:	9c2442        	l32i	a4, a4, 0x270
200040f1:	1155c0        	slli	a5, a5, 4
200040f4:	445a      	add.n	a4, a4, a5
200040f6:	001442        	l16ui	a4, a4, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:1090
{
    U32 ulEraseCnt;

    ulEraseCnt = pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usPBN].EraseCnt;

    if ((0 <= ulEraseCnt) && (READ_DISTURB_ERASE_CNT_THS_1 > ulEraseCnt))
200040f9:	a00060        	addx4	a0, a0, a6
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:914

    for (j = 0; j < LUN_NUM_PER_SUPERPU; j++)
    {
        VBN = pPBITItem[Pos].VirtualBlockAddr;
        PBN = pVBT[ucSuperPu]->m_VBT[VBN].PhysicalBlockAddr[j];
        pPBIT[ucSuperPu]->m_PBIT_Entry[j][PBN].bFree = FALSE;
200040fc:	b09420        	addx8	a9, a4, a2
200040ff:	1988      	l32i.n	a8, a9, 4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:1088

void L2_ResetBlkReadCnt(U8 ucSuperPu, U8 ucLunInSuperPu, U16 usPBN)
{
    U32 ulEraseCnt;

    ulEraseCnt = pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usPBN].EraseCnt;
20004101:	b07760        	addx8	a7, a7, a6
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:914

    for (j = 0; j < LUN_NUM_PER_SUPERPU; j++)
    {
        VBN = pPBITItem[Pos].VirtualBlockAddr;
        PBN = pVBT[ucSuperPu]->m_VBT[VBN].PhysicalBlockAddr[j];
        pPBIT[ucSuperPu]->m_PBIT_Entry[j][PBN].bFree = FALSE;
20004104:	1088a0        	and	a8, a8, a10
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:915
        pPBIT[ucSuperPu]->m_PBIT_Entry[j][PBN].bAllocated = TRUE;
20004107:	4a0c      	movi.n	a10, 4
20004109:	2088a0        	or	a8, a8, a10
2000410c:	1989      	s32i.n	a8, a9, 4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:1088

void L2_ResetBlkReadCnt(U8 ucSuperPu, U8 ucLunInSuperPu, U16 usPBN)
{
    U32 ulEraseCnt;

    ulEraseCnt = pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usPBN].EraseCnt;
2000410e:	011772        	l16ui	a7, a7, 2
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:1090

    if ((0 <= ulEraseCnt) && (READ_DISTURB_ERASE_CNT_THS_1 > ulEraseCnt))
20004111:	e7a352        	movi	a5, 0x3e7
20004114:	0c3577        	bltu	a5, a7, 20004124 <L2_BM_AllocateFreeBlock+0xb4>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:1092
    {
        pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usPBN].ReadCnt = BLK_READ_CNT_INIT_VALUE_THS_1;
20004117:	11d072        	addmi	a7, a0, 0x1100
2000411a:	f1fb51        	l32r	a5, 20000908 <_stext+0x208>
2000411d:	c759      	s32i.n	a5, a7, 48
2000411f:	000686        	j	2000413d <L2_BM_AllocateFreeBlock+0xcd>

20004122 <L2_BM_AllocateFreeBlock+0xb2>:
	...

20004124 <L2_BM_AllocateFreeBlock+0xb4>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:1094
    }
    else if ((READ_DISTURB_ERASE_CNT_THS_1 <= ulEraseCnt) && (READ_DISTURB_ERASE_CNT_THS_2 > ulEraseCnt))
20004124:	cfa782        	movi	a8, 0x7cf
20004127:	0a3877        	bltu	a8, a7, 20004135 <L2_BM_AllocateFreeBlock+0xc5>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:1096
    {
        pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usPBN].ReadCnt = BLK_READ_CNT_INIT_VALUE_THS_2;
2000412a:	11d0a2        	addmi	a10, a0, 0x1100
2000412d:	f1f791        	l32r	a9, 2000090c <_stext+0x20c>
20004130:	ca99      	s32i.n	a9, a10, 48
20004132:	0001c6        	j	2000413d <L2_BM_AllocateFreeBlock+0xcd>

20004135 <L2_BM_AllocateFreeBlock+0xc5>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:1100
    }
    else
    {
        pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usPBN].ReadCnt = BLK_READ_CNT_INIT_VALUE_THS_3;
20004135:	11d0d2        	addmi	a13, a0, 0x1100
20004138:	f1f6b1        	l32r	a11, 20000910 <_stext+0x210>
2000413b:	cdb9      	s32i.n	a11, a13, 48
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:925
        L2_Set_PBIT_WL_Blk(ucSuperPu, j, PBN, INVALID_8F);
#endif
    }
    pPBIT[ucSuperPu]->m_AllocatedDataBlockCnt[ucPhyBlkType]++;

    return pPBITItem[Pos].VirtualBlockAddr;
2000413d:	81d8      	l32i.n	a13, a1, 32
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:1080

}

void L2_Set_PBIT_WL_Blk(U8 ucSuperPu, U8 ucLunInSuperPu, U16 PBN, U32 Value)
{
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][PBN].CurSerialNum = Value;
2000413f:	00afa2        	movi	a10, 0xffffff00
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:923
        
#ifdef SEL_WL_SRC
        L2_Set_PBIT_WL_Blk(ucSuperPu, j, PBN, INVALID_8F);
#endif
    }
    pPBIT[ucSuperPu]->m_AllocatedDataBlockCnt[ucPhyBlkType]++;
20004142:	7c0b      	addi.n	a7, a12, -1
20004144:	150c      	movi.n	a5, 1
20004146:	000c      	movi.n	a0, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:1080

}

void L2_Set_PBIT_WL_Blk(U8 ucSuperPu, U8 ucLunInSuperPu, U16 PBN, U32 Value)
{
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][PBN].CurSerialNum = Value;
20004148:	a09440        	addx4	a9, a4, a4
2000414b:	a09960        	addx4	a9, a9, a6
2000414e:	11d992        	addmi	a9, a9, 0x1100
20004151:	8988      	l32i.n	a8, a9, 32
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:923
        
#ifdef SEL_WL_SRC
        L2_Set_PBIT_WL_Blk(ucSuperPu, j, PBN, INVALID_8F);
#endif
    }
    pPBIT[ucSuperPu]->m_AllocatedDataBlockCnt[ucPhyBlkType]++;
20004153:	830570        	moveqz	a0, a5, a7
20004156:	a00020        	addx4	a0, a0, a2
20004159:	3ad002        	addmi	a0, a0, 0x3a00
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:1080

}

void L2_Set_PBIT_WL_Blk(U8 ucSuperPu, U8 ucLunInSuperPu, U16 PBN, U32 Value)
{
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][PBN].CurSerialNum = Value;
2000415c:	2088a0        	or	a8, a8, a10
2000415f:	8989      	s32i.n	a8, a9, 32
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:923
        
#ifdef SEL_WL_SRC
        L2_Set_PBIT_WL_Blk(ucSuperPu, j, PBN, INVALID_8F);
#endif
    }
    pPBIT[ucSuperPu]->m_AllocatedDataBlockCnt[ucPhyBlkType]++;
20004161:	7e20e2        	l32i	a14, a0, 0x1f8
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:925

    return pPBITItem[Pos].VirtualBlockAddr;
20004164:	71c8      	l32i.n	a12, a1, 28
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:923
        
#ifdef SEL_WL_SRC
        L2_Set_PBIT_WL_Blk(ucSuperPu, j, PBN, INVALID_8F);
#endif
    }
    pPBIT[ucSuperPu]->m_AllocatedDataBlockCnt[ucPhyBlkType]++;
20004166:	ee1b      	addi.n	a14, a14, 1
20004168:	7e60e2        	s32i	a14, a0, 0x1f8
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:925

    return pPBITItem[Pos].VirtualBlockAddr;
2000416b:	001322        	l16ui	a2, a3, 0
2000416e:	91e8      	l32i.n	a14, a1, 36
20004170:	6108      	l32i.n	a0, a1, 24
20004172:	30c112        	addi	a1, a1, 48
20004175:	f00d      	ret.n

20004177 <L2_BM_AllocateFreeBlock+0x107>:
	...

20004179 <L2_BM_AllocateFreeBlock+0x109>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:897
        L2_SESearchBlock(FREE_ERASE_CNT_MIN, (U32 *)&(pPBITItem[0]), ucTLCBlk, &SEGetResult);
    }

    if (FALSE == SEGetResult.bsFind)
    {
        DBG_Printf("Allocate Fail!\n");
20004179:	f1e621        	l32r	a2, 20000914 <_stext+0x214>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:925
        L2_Set_PBIT_WL_Blk(ucSuperPu, j, PBN, INVALID_8F);
#endif
    }
    pPBIT[ucSuperPu]->m_AllocatedDataBlockCnt[ucPhyBlkType]++;

    return pPBITItem[Pos].VirtualBlockAddr;
2000417c:	0721c2        	l32i	a12, a1, 28
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:897
        L2_SESearchBlock(FREE_ERASE_CNT_MIN, (U32 *)&(pPBITItem[0]), ucTLCBlk, &SEGetResult);
    }

    if (FALSE == SEGetResult.bsFind)
    {
        DBG_Printf("Allocate Fail!\n");
2000417f:	06ae45        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:898
        return INVALID_4F;
20004182:	f17421        	l32r	a2, 20000754 <_stext+0x54>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:925
        L2_Set_PBIT_WL_Blk(ucSuperPu, j, PBN, INVALID_8F);
#endif
    }
    pPBIT[ucSuperPu]->m_AllocatedDataBlockCnt[ucPhyBlkType]++;

    return pPBITItem[Pos].VirtualBlockAddr;
20004185:	0921e2        	l32i	a14, a1, 36
20004188:	0821d2        	l32i	a13, a1, 32
2000418b:	6108      	l32i.n	a0, a1, 24
2000418d:	30c112        	addi	a1, a1, 48
20004190:	f00d      	ret.n

20004192 <L2_BM_AllocateFreeBlock+0x122>:
	...

20004194 <L3_FCMDQSetIntrWptr>:
L3_FCMDQSetIntrWptr():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:337
Usage      : 
History    : 
    1. 2016.7.15 JasonGuo create function
==============================================================================*/
void L3_FCMDQSetIntrWptr(U8 ucTLun, U8 ucWptr, BOOL bBak)
{
20004194:	f16251        	l32r	a5, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:341
    FCMD_INTR_DPTR *ptDptr;

    ptDptr = (FALSE == bBak) ? g_ptFCmdIntrDptr : g_ptFCmdIntrDptrBak;
    ptDptr->atIntrQDptr[ucTLun].ucWptr = ucWptr;
20004197:	1e2562        	l32i	a6, a5, 120
2000419a:	1f2552        	l32i	a5, a5, 124
2000419d:	835640        	moveqz	a5, a6, a4
200041a0:	a05250        	addx4	a5, a2, a5
200041a3:	004532        	s8i	a3, a5, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:343

    return;
200041a6:	f00d      	ret.n

200041a8 <L3_FCMDQGetIntrErrHEntry>:
L3_FCMDQGetIntrErrHEntry():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:602
{
    FCMD_INTR_ERRH *ptErrH;
       
    ptErrH = (FALSE == bBak) ? g_ptFCmdIntrErrH : g_ptFCmdIntrErrHBak;
    
    return &ptErrH->atErrHQ[ucTLun];
200041a8:	f15d41        	l32r	a4, 2000071c <_stext+0x1c>
200041ab:	a03220        	addx4	a3, a2, a2
200041ae:	1d2422        	l32i	a2, a4, 116
200041b1:	1133c0        	slli	a3, a3, 4
200041b4:	223a      	add.n	a2, a2, a3
200041b6:	f00d      	ret.n

200041b8 <L3_SchSetStsBit>:
L3_SchSetStsBit():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:262
void L3_SchSetStsBit(U8 ucTLun, STS_BITMAP_TYPE eStsBmpType)
{
    U8 ucPU = L3_GET_PU(ucTLun);
    U8 ucLunInPU = L3_GET_LUN_IN_PU(ucTLun);

    l_aTLunStsBmp[eStsBmpType][ucLunInPU] |= 1 << ucPU;
200041b8:	1173c0        	slli	a7, a3, 4
200041bb:	f1a351        	l32r	a5, 20000848 <_stext+0x148>
200041be:	401200        	ssl	a2
200041c1:	160c      	movi.n	a6, 1
200041c3:	a16600        	sll	a6, a6
200041c6:	557a      	add.n	a5, a5, a7
200041c8:	0020c0        	memw
200041cb:	7f2542        	l32i	a4, a5, 0x1fc
200041ce:	204460        	or	a4, a4, a6
200041d1:	0020c0        	memw
200041d4:	7f6542        	s32i	a4, a5, 0x1fc
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:264

    return;
200041d7:	f00d      	ret.n

200041d9 <L3_SchSetStsBit+0x21>:
200041d9:	000000                                        ...

200041dc <L3_RstDatTxCtrler>:
L3_RstDatTxCtrler():
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:250
{
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    FCMD_DATA_TX_CTRL *ptDTxCtrl = &ptCtrlEntry->tDTxCtrl;
    HMEM_DPTR *ptHmemDptr;

    ptDTxCtrl->bsBdEngineDone = FALSE;
200041dc:	e57c      	movi.n	a5, -2
200041de:	6248      	l32i.n	a4, a2, 24
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:251
    ptDTxCtrl->bsFstEngineID = INVALID_4F;    
200041e0:	f15d61        	l32r	a6, 20000754 <_stext+0x54>
200041e3:	0a5262        	s16i	a6, a2, 20
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:250
{
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    FCMD_DATA_TX_CTRL *ptDTxCtrl = &ptCtrlEntry->tDTxCtrl;
    HMEM_DPTR *ptHmemDptr;

    ptDTxCtrl->bsBdEngineDone = FALSE;
200041e6:	104450        	and	a4, a4, a5
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:245
Usage      : 
History    : 
    1. 2016.6.23 JasonGuo create function
==============================================================================*/
GLOBAL void L3_RstDatTxCtrler(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
200041e9:	167c      	movi.n	a6, -15
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:253
    HMEM_DPTR *ptHmemDptr;

    ptDTxCtrl->bsBdEngineDone = FALSE;
    ptDTxCtrl->bsFstEngineID = INVALID_4F;    
    ptDTxCtrl->bsSecAddrIndex = 0;
    ptDTxCtrl->bsDmaTotalLen = 0;
200041eb:	f17851        	l32r	a5, 200007cc <_stext+0xcc>
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:252
    FCMD_DATA_TX_CTRL *ptDTxCtrl = &ptCtrlEntry->tDTxCtrl;
    HMEM_DPTR *ptHmemDptr;

    ptDTxCtrl->bsBdEngineDone = FALSE;
    ptDTxCtrl->bsFstEngineID = INVALID_4F;    
    ptDTxCtrl->bsSecAddrIndex = 0;
200041ee:	104460        	and	a4, a4, a6
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:253
    ptDTxCtrl->bsDmaTotalLen = 0;
200041f1:	104450        	and	a4, a4, a5
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:246
History    : 
    1. 2016.6.23 JasonGuo create function
==============================================================================*/
GLOBAL void L3_RstDatTxCtrler(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
200041f4:	0258      	l32i.n	a5, a2, 0
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:253
    HMEM_DPTR *ptHmemDptr;

    ptDTxCtrl->bsBdEngineDone = FALSE;
    ptDTxCtrl->bsFstEngineID = INVALID_4F;    
    ptDTxCtrl->bsSecAddrIndex = 0;
    ptDTxCtrl->bsDmaTotalLen = 0;
200041f6:	6249      	s32i.n	a4, a2, 24
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:255

    if (TRUE == ptReqEntry->tFlashDesc.bsHostRdEn)
200041f8:	4538      	l32i.n	a3, a5, 16
200041fa:	3248      	l32i.n	a4, a2, 12
200041fc:	2c7357        	bbci	a3, 21, 2000422c <L3_RstDatTxCtrler+0x50>
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:258
    {
        ptHmemDptr = &ptReqEntry->tHostDesc.tHostDptr;
        ptHmemDptr->bsPrdOrPrpIndex = ptDTxCtrl->bsPrdOrPrpIdx;
200041ff:	f1c6b1        	l32r	a11, 20000918 <_stext+0x218>
20004202:	8598      	l32i.n	a9, a5, 32
20004204:	55aa40        	extui	a10, a4, 26, 6
20004207:	11aaa0        	slli	a10, a10, 6
2000420a:	1099b0        	and	a9, a9, a11
2000420d:	2099a0        	or	a9, a9, a10
20004210:	8599      	s32i.n	a9, a5, 32
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:259
        ptHmemDptr->bsLastSecRemain = ptDTxCtrl->bsLstSecRemain;
20004212:	4288      	l32i.n	a8, a2, 16
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:260
        ptHmemDptr->bsOffset = ptDTxCtrl->bsOffSet;
20004214:	9578      	l32i.n	a7, a5, 36
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:259

    if (TRUE == ptReqEntry->tFlashDesc.bsHostRdEn)
    {
        ptHmemDptr = &ptReqEntry->tHostDesc.tHostDptr;
        ptHmemDptr->bsPrdOrPrpIndex = ptDTxCtrl->bsPrdOrPrpIdx;
        ptHmemDptr->bsLastSecRemain = ptDTxCtrl->bsLstSecRemain;
20004216:	a0c894        	insbits	a9, a8, 12, 20
20004219:	8599      	s32i.n	a9, a5, 32
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:260
        ptHmemDptr->bsOffset = ptDTxCtrl->bsOffSet;
2000421b:	f17591        	l32r	a9, 200007f0 <_stext+0xf0>
2000421e:	418a80        	srli	a8, a8, 10
20004221:	107790        	and	a7, a7, a9
20004224:	207780        	or	a7, a7, a8
20004227:	9579      	s32i.n	a7, a5, 36
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:267
    else
    {
        ptDTxCtrl->bsLpnBitMapPos = 0;
    }

    return;
20004229:	f00d      	ret.n

2000422b <L3_RstDatTxCtrler+0x4f>:
	...

2000422c <L3_RstDatTxCtrler+0x50>:
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:264
        ptHmemDptr->bsLastSecRemain = ptDTxCtrl->bsLstSecRemain;
        ptHmemDptr->bsOffset = ptDTxCtrl->bsOffSet;
    }
    else
    {
        ptDTxCtrl->bsLpnBitMapPos = 0;
2000422c:	10b460        	and	a11, a4, a6
2000422f:	32b9      	s32i.n	a11, a2, 12
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:267
    }

    return;
20004231:	f00d      	ret.n

20004233 <L3_RstDatTxCtrler+0x57>:
	...

20004234 <L3_NVMeHandleUeccRspMarker>:
L3_NVMeHandleUeccRspMarker():
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:282
Usage      : 
History    : 
    1. 2016.8.12 JasonGuo create function
==============================================================================*/
BOOL L3_NVMeHandleUeccRspMarker(U8 ucPu)
{
20004234:	f0c112        	addi	a1, a1, -16
20004237:	0109      	s32i.n	a0, a1, 0
20004239:	21d9      	s32i.n	a13, a1, 8
2000423b:	11c9      	s32i.n	a12, a1, 4
2000423d:	31e9      	s32i.n	a14, a1, 12
2000423f:	204220        	or	a4, a2, a2
20004242:	f136e1        	l32r	a14, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:283
    while (SMS_UECC_CLEAR != g_apSubMcShareData->tRspMarker.SmsgUeccRspMarker.ulMarkerType);
20004245:	0020c0        	memw
20004248:	2e2e02        	l32i	a0, a14, 184
2000424b:	002002        	l32i	a0, a0, 0
2000424e:	128026        	beqi	a0, 8, 20004264 <L3_NVMeHandleUeccRspMarker+0x30>
20004251:	0a8076        	loop	a0, 2000425f <L3_NVMeHandleUeccRspMarker+0x2b>
20004254:	0020c0        	memw
20004257:	2e2e22        	l32i	a2, a14, 184
2000425a:	0228      	l32i.n	a2, a2, 0
2000425c:	048226        	beqi	a2, 8, 20004264 <L3_NVMeHandleUeccRspMarker+0x30>

2000425f <L3_NVMeHandleUeccRspMarker+0x2b>:
2000425f:	fffb86        	j	20004251 <L3_NVMeHandleUeccRspMarker+0x1d>

20004262 <L3_NVMeHandleUeccRspMarker+0x2e>:
	...

20004264 <L3_NVMeHandleUeccRspMarker+0x30>:
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:285

    if (ucPu != g_apSubMcShareData->tRspMarker.SmsgUeccRspMarker.ulPUID)
20004264:	0020c0        	memw
20004267:	2e2e32        	l32i	a3, a14, 184
2000426a:	1338      	l32i.n	a3, a3, 4
2000426c:	161437        	beq	a4, a3, 20004286 <L3_NVMeHandleUeccRspMarker+0x52>
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:287
    {
        DBG_Printf("Error RspMarker.PUID(%d) != Waiting PUID(%d)\n",
2000426f:	f1ab21        	l32r	a2, 2000091c <_stext+0x21c>
20004272:	0020c0        	memw
20004275:	2e2e32        	l32i	a3, a14, 184
20004278:	1338      	l32i.n	a3, a3, 4
2000427a:	201110        	or	a1, a1, a1
2000427d:	069e45        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:289
            g_apSubMcShareData->tRspMarker.SmsgUeccRspMarker.ulPUID, ucPu);
        DBG_Getch();
20004280:	f12601        	l32r	a0, 20000718 <_stext+0x18>
20004283:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:291
    }
    HAL_MultiCoreGetSpinLockWait(SPINLOCKID_UECC_RSP_MARKER);
20004286:	f13cd1        	l32r	a13, 20000778 <_stext+0x78>
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
    20141028    Gavin   change attribute to "INLINE"
------------------------------------------------------------------------------*/
INLINE U32 HAL_GetMcuId(void)
{
    U32 ulMcuId;
    ulMcuId = XT_RSR_PRID();
20004289:	03ebc0        	rsr.prid	a12
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:149
#ifndef SIM
    U32 ulMcuID;
    U32 ulLockValue;
        
    ulMcuID = HAL_GetMcuId();
    if ((MCU0_ID == ulMcuID) || (MCU1_ID == ulMcuID) || (MCU2_ID == ulMcuID))
2000428c:	051c26        	beqi	a12, 1, 20004295 <L3_NVMeHandleUeccRspMarker+0x61>
2000428f:	022c26        	beqi	a12, 2, 20004295 <L3_NVMeHandleUeccRspMarker+0x61>
20004292:	0a3c66        	bnei	a12, 3, 200042a0 <L3_NVMeHandleUeccRspMarker+0x6c>
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:151
    {
        *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4) = ulMcuID;
20004295:	0020c0        	memw
20004298:	cd6dc2        	s32i	a12, a13, 0x334
2000429b:	0001c6        	j	200042a6 <L3_NVMeHandleUeccRspMarker+0x72>

2000429e <L3_NVMeHandleUeccRspMarker+0x6a>:
	...

200042a0 <L3_NVMeHandleUeccRspMarker+0x6c>:
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:155
    }
    else
    {
        DBG_Getch();
200042a0:	f11e01        	l32r	a0, 20000718 <_stext+0x18>
200042a3:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:158
    }

    ulLockValue = *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4);
200042a6:	0020c0        	memw
200042a9:	cd2d42        	l32i	a4, a13, 0x334
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:187
{
    BOOL bSts = FALSE;
    do
    {
        bSts = HAL_MultiCoreGetSpinLock(ucLockId);
    }while (FALSE == bSts);
200042ac:	d99c47        	bne	a12, a4, 20004289 <L3_NVMeHandleUeccRspMarker+0x55>
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:291
200042af:	050c      	movi.n	a5, 0
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:292
    g_apSubMcShareData->tRspMarker.SmsgUeccRspMarker.ulPUID = 0;
200042b1:	0020c0        	memw
200042b4:	2e2e82        	l32i	a8, a14, 184
200042b7:	1859      	s32i.n	a5, a8, 4
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:293
    g_apSubMcShareData->tRspMarker.SmsgUeccRspMarker.ulMarkerType = SMS_UECC_MARKER_VALID;
200042b9:	0020c0        	memw
200042bc:	2e2e72        	l32i	a7, a14, 184
200042bf:	f67c      	movi.n	a6, -1
200042c1:	0769      	s32i.n	a6, a7, 0
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
History:
    20140917    Tobey  uniform coding style
------------------------------------------------------------------------------*/
void MULTI_CORE_TEXT_ATTR HAL_MultiCoreReleaseSpinLock(U8 ucLockId)
{
    *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4) = 0;
200042c3:	0020c0        	memw
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:296
    HAL_MultiCoreReleaseSpinLock(SPINLOCKID_UECC_RSP_MARKER);

    return TRUE;
200042c6:	120c      	movi.n	a2, 1
200042c8:	11c8      	l32i.n	a12, a1, 4
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
200042ca:	cd6d52        	s32i	a5, a13, 0x334
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:296
200042cd:	31e8      	l32i.n	a14, a1, 12
200042cf:	21d8      	l32i.n	a13, a1, 8
200042d1:	0108      	l32i.n	a0, a1, 0
200042d3:	10c112        	addi	a1, a1, 16
200042d6:	f00d      	ret.n

200042d8 <L3_HostReadRecover>:
L3_HostReadRecover():
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:359
Usage      : 
History    : 
    1. 2016.7.27 JasonGuo create function
==============================================================================*/
void L3_HostReadRecover(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry, BOOL bRcvFail)
{
200042d8:	e0c112        	addi	a1, a1, -32
200042db:	61c9      	s32i.n	a12, a1, 24
200042dd:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:360
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
200042df:	9228      	l32i.n	a2, a2, 36
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:359
Usage      : 
History    : 
    1. 2016.7.27 JasonGuo create function
==============================================================================*/
void L3_HostReadRecover(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry, BOOL bRcvFail)
{
200042e1:	5109      	s32i.n	a0, a1, 20
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:361
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
    ASSERT(NF_ERR_TYPE_UECC == ptErrHEntry->bsErrCode);
200042e3:	0208      	l32i.n	a0, a2, 0
200042e5:	643100        	extui	a3, a0, 1, 7
200042e8:	756366        	bnei	a3, 6, 20004361 <L3_HostReadRecover+0x89>
200042eb:	4129      	s32i.n	a2, a1, 16
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:363
    ASSERT(NF_ERR_TYPE_UECC == ptErrHEntry->bsErrCode || NF_ERR_TYPE_DCRC == ptErrHEntry->bsErrCode);
    ASSERT(TRUE != ptErrHEntry->bsEmptyPg);
200042ed:	73e087        	bbsi	a0, 8, 20004364 <L3_HostReadRecover+0x8c>
200042f0:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:317
    SMSG tSMSG;    
    
    tSMSG.ulMsgCode      = SMSG_SUBSYS_ERROR;   
    tSMSG.ulMsgParam[0]  = SUBSYS_ERROR_UECC;    
    tSMSG.ulMsgParam[1]  = ucCmdTag & 0xFF;  
    tSMSG.ulMsgParam[1] |= ulPUID << 8 & 0xFF00;   
200042f2:	f18b61        	l32r	a6, 20000920 <_stext+0x220>
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:367
    ASSERT(NF_ERR_TYPE_UECC == ptErrHEntry->bsErrCode || NF_ERR_TYPE_DCRC == ptErrHEntry->bsErrCode);
    ASSERT(TRUE != ptErrHEntry->bsEmptyPg);

    #if (defined(FPGA) || defined(ASIC))  
    // L3 report the error to L0 and wait for SMsg Empty, then Redo the fcmd without uecc            
    L3_NvmeReportSMSG(ptCtrlEntry->ptReqEntry->tHostDesc.tHostDptr.bsCmdTag, ptCtrlEntry->ptReqEntry->bsTLun); 
200042f5:	0c48      	l32i.n	a4, a12, 0
200042f7:	050c      	movi.n	a5, 0
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:314
==============================================================================*/
LOCAL void L3_NvmeReportSMSG(U8 ucCmdTag, U8 ulPUID)
{    
    SMSG tSMSG;    
    
    tSMSG.ulMsgCode      = SMSG_SUBSYS_ERROR;   
200042f9:	1159      	s32i.n	a5, a1, 4
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:315
    tSMSG.ulMsgParam[0]  = SUBSYS_ERROR_UECC;    
200042fb:	2159      	s32i.n	a5, a1, 8
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:367
    ASSERT(NF_ERR_TYPE_UECC == ptErrHEntry->bsErrCode || NF_ERR_TYPE_DCRC == ptErrHEntry->bsErrCode);
    ASSERT(TRUE != ptErrHEntry->bsEmptyPg);

    #if (defined(FPGA) || defined(ASIC))  
    // L3 report the error to L0 and wait for SMsg Empty, then Redo the fcmd without uecc            
    L3_NvmeReportSMSG(ptCtrlEntry->ptReqEntry->tHostDesc.tHostDptr.bsCmdTag, ptCtrlEntry->ptReqEntry->bsTLun); 
200042fd:	8458      	l32i.n	a5, a4, 32
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:317
    SMSG tSMSG;    
    
    tSMSG.ulMsgCode      = SMSG_SUBSYS_ERROR;   
    tSMSG.ulMsgParam[0]  = SUBSYS_ERROR_UECC;    
    tSMSG.ulMsgParam[1]  = ucCmdTag & 0xFF;  
    tSMSG.ulMsgParam[1] |= ulPUID << 8 & 0xFF00;   
200042ff:	000442        	l8ui	a4, a4, 0
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:367
    ASSERT(NF_ERR_TYPE_UECC == ptErrHEntry->bsErrCode || NF_ERR_TYPE_DCRC == ptErrHEntry->bsErrCode);
    ASSERT(TRUE != ptErrHEntry->bsEmptyPg);

    #if (defined(FPGA) || defined(ASIC))  
    // L3 report the error to L0 and wait for SMsg Empty, then Redo the fcmd without uecc            
    L3_NvmeReportSMSG(ptCtrlEntry->ptReqEntry->tHostDesc.tHostDptr.bsCmdTag, ptCtrlEntry->ptReqEntry->bsTLun); 
20004302:	545050        	extui	a5, a5, 0, 6
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:317
    SMSG tSMSG;    
    
    tSMSG.ulMsgCode      = SMSG_SUBSYS_ERROR;   
    tSMSG.ulMsgParam[0]  = SUBSYS_ERROR_UECC;    
    tSMSG.ulMsgParam[1]  = ucCmdTag & 0xFF;  
    tSMSG.ulMsgParam[1] |= ulPUID << 8 & 0xFF00;   
20004305:	114480        	slli	a4, a4, 8
20004308:	104460        	and	a4, a4, a6
2000430b:	230544        	insbits	a4, a5, 0, 7
2000430e:	3149      	s32i.n	a4, a1, 12
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:318
    FW_ReportSMSG(&tSMSG);  
20004310:	f18501        	l32r	a0, 20000924 <_stext+0x224>
20004313:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:368
    ASSERT(TRUE != ptErrHEntry->bsEmptyPg);

    #if (defined(FPGA) || defined(ASIC))  
    // L3 report the error to L0 and wait for SMsg Empty, then Redo the fcmd without uecc            
    L3_NvmeReportSMSG(ptCtrlEntry->ptReqEntry->tHostDesc.tHostDptr.bsCmdTag, ptCtrlEntry->ptReqEntry->bsTLun); 
    (void)L3_NVMeHandleUeccRspMarker(ptCtrlEntry->ptReqEntry->bsTLun);
20004316:	0c28      	l32i.n	a2, a12, 0
20004318:	000222        	l8ui	a2, a2, 0
2000431b:	fff185        	call0	20004234 <L3_NVMeHandleUeccRspMarker>
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:373
    #endif
    
    // ignore the error. nvme: redo it without ecc check; sata: update bufferMap directly.          
    ptCtrlEntry->bsBypassEcc = TRUE;
    while (TRUE != L3_ErrHRead(ptCtrlEntry));
2000431e:	0c2d      	mov.n	a2, a12
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:372
    L3_NvmeReportSMSG(ptCtrlEntry->ptReqEntry->tHostDesc.tHostDptr.bsCmdTag, ptCtrlEntry->ptReqEntry->bsTLun); 
    (void)L3_NVMeHandleUeccRspMarker(ptCtrlEntry->ptReqEntry->bsTLun);
    #endif
    
    // ignore the error. nvme: redo it without ecc check; sata: update bufferMap directly.          
    ptCtrlEntry->bsBypassEcc = TRUE;
20004320:	2c38      	l32i.n	a3, a12, 8
20004322:	00a242        	movi	a4, 0x200
20004325:	203340        	or	a3, a3, a4
20004328:	026c32        	s32i	a3, a12, 8
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:373
    while (TRUE != L3_ErrHRead(ptCtrlEntry));
2000432b:	f17f01        	l32r	a0, 20000928 <_stext+0x228>
2000432e:	0000c0        	callx0	a0
20004331:	0a1226        	beqi	a2, 1, 2000433f <L3_HostReadRecover+0x67>

20004334 <L3_HostReadRecover+0x5c>:
20004334:	0c2d      	mov.n	a2, a12
20004336:	f17c01        	l32r	a0, 20000928 <_stext+0x228>
20004339:	0000c0        	callx0	a0
2000433c:	f41266        	bnei	a2, 1, 20004334 <L3_HostReadRecover+0x5c>
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:374
    ASSERT(FALSE == ptErrHEntry->bsErrHold);
2000433f:	4158      	l32i.n	a5, a1, 16
20004341:	002552        	l32i	a5, a5, 0
20004344:	20e597        	bbsi	a5, 9, 20004368 <L3_HostReadRecover+0x90>
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:375
    while (TRUE != L3_IFIsFCmdFinished(ptCtrlEntry));
20004347:	202cc0        	or	a2, a12, a12
2000434a:	00b0c5        	call0	20004e58 <L3_IFIsFCmdFinished>
2000434d:	071226        	beqi	a2, 1, 20004358 <L3_HostReadRecover+0x80>
20004350:	0c2d      	mov.n	a2, a12
20004352:	00b045        	call0	20004e58 <L3_IFIsFCmdFinished>
20004355:	f71266        	bnei	a2, 1, 20004350 <L3_HostReadRecover+0x78>
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:377

    return;
20004358:	61c8      	l32i.n	a12, a1, 24
2000435a:	5108      	l32i.n	a0, a1, 20
2000435c:	20c112        	addi	a1, a1, 32
2000435f:	f00d      	ret.n

20004361 <L3_HostReadRecover+0x89>:
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:361
    1. 2016.7.27 JasonGuo create function
==============================================================================*/
void L3_HostReadRecover(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry, BOOL bRcvFail)
{
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
    ASSERT(NF_ERR_TYPE_UECC == ptErrHEntry->bsErrCode);
20004361:	ffff06        	j	20004361 <L3_HostReadRecover+0x89>

20004364 <L3_HostReadRecover+0x8c>:
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:363
    ASSERT(NF_ERR_TYPE_UECC == ptErrHEntry->bsErrCode || NF_ERR_TYPE_DCRC == ptErrHEntry->bsErrCode);
    ASSERT(TRUE != ptErrHEntry->bsEmptyPg);
20004364:	ffff06        	j	20004364 <L3_HostReadRecover+0x8c>

20004367 <L3_HostReadRecover+0x8f>:
	...

20004368 <L3_HostReadRecover+0x90>:
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:374
    #endif
    
    // ignore the error. nvme: redo it without ecc check; sata: update bufferMap directly.          
    ptCtrlEntry->bsBypassEcc = TRUE;
    while (TRUE != L3_ErrHRead(ptCtrlEntry));
    ASSERT(FALSE == ptErrHEntry->bsErrHold);
20004368:	ffff06        	j	20004368 <L3_HostReadRecover+0x90>

2000436b <L3_HostReadRecover+0x93>:
	...

2000436c <L3_FMSetCmdType>:
L3_FMSetCmdType():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:297
History    : 
    1. 2016.7.28 JasonGuo create function
==============================================================================*/
void L3_FMSetCmdType(U8 ucTLun, U8 ucCmdType)
{
    l_ptFMIntrMgr[ucTLun].bsCmdType = ucCmdType;
2000436c:	f0ec51        	l32r	a5, 2000071c <_stext+0x1c>
2000436f:	212552        	l32i	a5, a5, 132
20004372:	904220        	addx2	a4, a2, a2
20004375:	a04450        	addx4	a4, a4, a5
20004378:	044432        	s8i	a3, a4, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:298
}
2000437b:	f00d      	ret.n

2000437d <L3_FMSetCmdType+0x11>:
2000437d:	000000                                        ...

20004380 <L2_BbtGetPbnBindingTable>:
L2_BbtGetPbnBindingTable():
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2410

    return;
}

GLOBAL U16 L2_BbtGetPbnBindingTable(U8 ucTlun, U16 usPbn, U8 ucPlane)
{
20004380:	f0c112        	addi	a1, a1, -16
20004383:	0149      	s32i.n	a4, a1, 0
20004385:	21c9      	s32i.n	a12, a1, 8
20004387:	31d9      	s32i.n	a13, a1, 12
20004389:	1109      	s32i.n	a0, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2414
    // this function is provided to L3 as a public interface

    // input check
    if(ucTlun >= SUBSYSTEM_LUN_NUM)
2000438b:	f0e401        	l32r	a0, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2410

    return;
}

GLOBAL U16 L2_BbtGetPbnBindingTable(U8 ucTlun, U16 usPbn, U8 ucPlane)
{
2000438e:	02dd      	mov.n	a13, a2
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2414
    // this function is provided to L3 as a public interface

    // input check
    if(ucTlun >= SUBSYSTEM_LUN_NUM)
20004390:	e008      	l32i.n	a0, a0, 56
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2410

    return;
}

GLOBAL U16 L2_BbtGetPbnBindingTable(U8 ucTlun, U16 usPbn, U8 ucPlane)
{
20004392:	03cd      	mov.n	a12, a3
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2414
    // this function is provided to L3 as a public interface

    // input check
    if(ucTlun >= SUBSYSTEM_LUN_NUM)
20004394:	25b207        	bgeu	a2, a0, 200043bd <L2_BbtGetPbnBindingTable+0x3d>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2419
    {
        DBG_Printf("Tlun %d error\n", ucTlun);
        DBG_Getch();
    }
    else if(usPbn >= BBT_BLK_PER_PLN)
20004397:	23a222        	movi	a2, 0x223
2000439a:	333237        	bltu	a2, a3, 200043d1 <L2_BbtGetPbnBindingTable+0x51>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2424
    {
        DBG_Printf("PBN  %d error\n", usPbn);
        DBG_Getch();
    }
    else if(ucPlane >= PLN_PER_LUN)
2000439d:	6444f6        	bgeui	a4, 4, 20004405 <L2_BbtGetPbnBindingTable+0x85>

200043a0 <L2_BbtGetPbnBindingTable+0x20>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2430
    {
        DBG_Printf("plane %d error\n", ucPlane);
        DBG_Getch();
    }

    if(L2_BbtIsPbnBindingTableEnable() == TRUE)
200043a0:	f0e801        	l32r	a0, 20000740 <_stext+0x40>
200043a3:	0020c0        	memw
200043a6:	2048      	l32i.n	a4, a0, 8
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2450
                );
    #endif
    }
    else
    {
        return usPbn;
200043a8:	0c2d      	mov.n	a2, a12
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2430
    {
        DBG_Printf("plane %d error\n", ucPlane);
        DBG_Getch();
    }

    if(L2_BbtIsPbnBindingTableEnable() == TRUE)
200043aa:	744040        	extui	a4, a4, 0, 8
200043ad:	2f1426        	beqi	a4, 1, 200043e0 <L2_BbtGetPbnBindingTable+0x60>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2450
                );
    #endif
    }
    else
    {
        return usPbn;
200043b0:	31d8      	l32i.n	a13, a1, 12
200043b2:	21c8      	l32i.n	a12, a1, 8
200043b4:	1108      	l32i.n	a0, a1, 4
200043b6:	10c112        	addi	a1, a1, 16
200043b9:	f00d      	ret.n

200043bb <L2_BbtGetPbnBindingTable+0x3b>:
	...

200043bd <L2_BbtGetPbnBindingTable+0x3d>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2416
    // this function is provided to L3 as a public interface

    // input check
    if(ucTlun >= SUBSYSTEM_LUN_NUM)
    {
        DBG_Printf("Tlun %d error\n", ucTlun);
200043bd:	f15b21        	l32r	a2, 2000092c <_stext+0x22c>
200043c0:	0d3d      	mov.n	a3, a13
200043c2:	068a05        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2417
        DBG_Getch();
200043c5:	f0d401        	l32r	a0, 20000718 <_stext+0x18>
200043c8:	0000c0        	callx0	a0
200043cb:	fff446        	j	200043a0 <L2_BbtGetPbnBindingTable+0x20>

200043ce <L2_BbtGetPbnBindingTable+0x4e>:
200043ce:	000000                                        ...

200043d1 <L2_BbtGetPbnBindingTable+0x51>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2421
    }
    else if(usPbn >= BBT_BLK_PER_PLN)
    {
        DBG_Printf("PBN  %d error\n", usPbn);
200043d1:	f15721        	l32r	a2, 20000930 <_stext+0x230>
200043d4:	0688c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2422
        DBG_Getch();
200043d7:	f0d001        	l32r	a0, 20000718 <_stext+0x18>
200043da:	0000c0        	callx0	a0
200043dd:	ffefc6        	j	200043a0 <L2_BbtGetPbnBindingTable+0x20>

200043e0 <L2_BbtGetPbnBindingTable+0x60>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2441
                + (usPbn * PLN_PER_LUN * sizeof(U16)) // PBN offset
                + (ucPlane * sizeof(U16)) // plane offset 
                );
        return *pusTargetBindingBlockAddress;
    #else
        return *(U16*)(
200043e0:	0020c0        	memw
200043e3:	0128      	l32i.n	a2, a1, 0
200043e5:	1048      	l32i.n	a4, a0, 4
200043e7:	24a232        	movi	a3, 0x224
200043ea:	d133d0        	mul16s	a3, a3, a13
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2450
                );
    #endif
    }
    else
    {
        return usPbn;
200043ed:	1108      	l32i.n	a0, a1, 4
200043ef:	31d8      	l32i.n	a13, a1, 12
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2441
                + (usPbn * PLN_PER_LUN * sizeof(U16)) // PBN offset
                + (ucPlane * sizeof(U16)) // plane offset 
                );
        return *pusTargetBindingBlockAddress;
    #else
        return *(U16*)(
200043f1:	3c3a      	add.n	a3, a12, a3
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2450
                );
    #endif
    }
    else
    {
        return usPbn;
200043f3:	21c8      	l32i.n	a12, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2441
                + (usPbn * PLN_PER_LUN * sizeof(U16)) // PBN offset
                + (ucPlane * sizeof(U16)) // plane offset 
                );
        return *pusTargetBindingBlockAddress;
    #else
        return *(U16*)(
200043f5:	b03340        	addx8	a3, a3, a4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2450
                );
    #endif
    }
    else
    {
        return usPbn;
200043f8:	10c112        	addi	a1, a1, 16
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2441
                + (usPbn * PLN_PER_LUN * sizeof(U16)) // PBN offset
                + (ucPlane * sizeof(U16)) // plane offset 
                );
        return *pusTargetBindingBlockAddress;
    #else
        return *(U16*)(
200043fb:	902230        	addx2	a2, a2, a3
200043fe:	001222        	l16ui	a2, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2450
                );
    #endif
    }
    else
    {
        return usPbn;
20004401:	f00d      	ret.n

20004403 <L2_BbtGetPbnBindingTable+0x83>:
	...

20004405 <L2_BbtGetPbnBindingTable+0x85>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2426
        DBG_Printf("PBN  %d error\n", usPbn);
        DBG_Getch();
    }
    else if(ucPlane >= PLN_PER_LUN)
    {
        DBG_Printf("plane %d error\n", ucPlane);
20004405:	f14b21        	l32r	a2, 20000934 <_stext+0x234>
20004408:	043d      	mov.n	a3, a4
2000440a:	068585        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:2427
        DBG_Getch();
2000440d:	f0c201        	l32r	a0, 20000718 <_stext+0x18>
20004410:	0000c0        	callx0	a0
20004413:	ffe246        	j	200043a0 <L2_BbtGetPbnBindingTable+0x20>

20004416 <L2_BbtGetPbnBindingTable+0x96>:
	...

20004418 <L3_HostReadEmpty>:
L3_HostReadEmpty():
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:334
Usage      : 
History    : 
    1. 2016.7.27 JasonGuo create function
==============================================================================*/
void L3_HostReadEmpty(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
20004418:	f0c112        	addi	a1, a1, -16
2000441b:	21c9      	s32i.n	a12, a1, 8
2000441d:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:335
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
2000441f:	9228      	l32i.n	a2, a2, 36
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:334
Usage      : 
History    : 
    1. 2016.7.27 JasonGuo create function
==============================================================================*/
void L3_HostReadEmpty(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
20004421:	1109      	s32i.n	a0, a1, 4
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:336
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
    ASSERT(NF_ERR_TYPE_UECC == ptErrHEntry->bsErrCode);
20004423:	0208      	l32i.n	a0, a2, 0
20004425:	643100        	extui	a3, a0, 1, 7
20004428:	496366        	bnei	a3, 6, 20004475 <L3_HostReadEmpty+0x5d>
2000442b:	0129      	s32i.n	a2, a1, 0
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:337
    ASSERT(TRUE == ptErrHEntry->bsEmptyPg);
2000442d:	476087        	bbci	a0, 8, 20004478 <L3_HostReadEmpty+0x60>
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:340

    ptCtrlEntry->bsBypassEcc = TRUE;
    while (TRUE != L3_ErrHRead(ptCtrlEntry));
20004430:	202cc0        	or	a2, a12, a12
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:339
{
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
    ASSERT(NF_ERR_TYPE_UECC == ptErrHEntry->bsErrCode);
    ASSERT(TRUE == ptErrHEntry->bsEmptyPg);

    ptCtrlEntry->bsBypassEcc = TRUE;
20004433:	022c42        	l32i	a4, a12, 8
20004436:	00a252        	movi	a5, 0x200
20004439:	204450        	or	a4, a4, a5
2000443c:	026c42        	s32i	a4, a12, 8
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:340
    while (TRUE != L3_ErrHRead(ptCtrlEntry));
2000443f:	f13a01        	l32r	a0, 20000928 <_stext+0x228>
20004442:	0000c0        	callx0	a0
20004445:	0a1226        	beqi	a2, 1, 20004453 <L3_HostReadEmpty+0x3b>

20004448 <L3_HostReadEmpty+0x30>:
20004448:	0c2d      	mov.n	a2, a12
2000444a:	f13701        	l32r	a0, 20000928 <_stext+0x228>
2000444d:	0000c0        	callx0	a0
20004450:	f41266        	bnei	a2, 1, 20004448 <L3_HostReadEmpty+0x30>
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:341
    ASSERT(FALSE == ptErrHEntry->bsErrHold);
20004453:	0168      	l32i.n	a6, a1, 0
20004455:	002662        	l32i	a6, a6, 0
20004458:	20e697        	bbsi	a6, 9, 2000447c <L3_HostReadEmpty+0x64>
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:342
    while (TRUE != L3_IFIsFCmdFinished(ptCtrlEntry));
2000445b:	202cc0        	or	a2, a12, a12
2000445e:	009f85        	call0	20004e58 <L3_IFIsFCmdFinished>
20004461:	071226        	beqi	a2, 1, 2000446c <L3_HostReadEmpty+0x54>
20004464:	0c2d      	mov.n	a2, a12
20004466:	009f05        	call0	20004e58 <L3_IFIsFCmdFinished>
20004469:	f71266        	bnei	a2, 1, 20004464 <L3_HostReadEmpty+0x4c>
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:344
    
    return;
2000446c:	21c8      	l32i.n	a12, a1, 8
2000446e:	1108      	l32i.n	a0, a1, 4
20004470:	10c112        	addi	a1, a1, 16
20004473:	f00d      	ret.n

20004475 <L3_HostReadEmpty+0x5d>:
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:336
    1. 2016.7.27 JasonGuo create function
==============================================================================*/
void L3_HostReadEmpty(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
    ASSERT(NF_ERR_TYPE_UECC == ptErrHEntry->bsErrCode);
20004475:	ffff06        	j	20004475 <L3_HostReadEmpty+0x5d>

20004478 <L3_HostReadEmpty+0x60>:
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:337
    ASSERT(TRUE == ptErrHEntry->bsEmptyPg);
20004478:	ffff06        	j	20004478 <L3_HostReadEmpty+0x60>

2000447b <L3_HostReadEmpty+0x63>:
	...

2000447c <L3_HostReadEmpty+0x64>:
D:\IM_3D_TLC\firmware\adapter\L3\NVMe/L3_NVMe.c:341

    ptCtrlEntry->bsBypassEcc = TRUE;
    while (TRUE != L3_ErrHRead(ptCtrlEntry));
    ASSERT(FALSE == ptErrHEntry->bsErrHold);
2000447c:	ffff06        	j	2000447c <L3_HostReadEmpty+0x64>

2000447f <L3_HostReadEmpty+0x67>:
	...

20004480 <L3_DataRecovery>:
L3_DataRecovery():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:338
Usage      : 
History    : 
    1. 2016.8.2 JasonGuo create function
==============================================================================*/
void L3_DataRecovery(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
20004480:	f0c112        	addi	a1, a1, -16
20004483:	016102        	s32i	a0, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:339
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
20004486:	092202        	l32i	a0, a2, 36
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:341

    DBG_Printf("DataRecovery Pending...\n");
20004489:	f12b21        	l32r	a2, 20000938 <_stext+0x238>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:339
History    : 
    1. 2016.8.2 JasonGuo create function
==============================================================================*/
void L3_DataRecovery(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
2000448c:	006102        	s32i	a0, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:341

    DBG_Printf("DataRecovery Pending...\n");
2000448f:	067d45        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:343
    
    ptErrHEntry->tUeccHCtrl.bsSubStage = DATA_RECO_FAIL;
20004492:	0138      	l32i.n	a3, a1, 0
20004494:	620c      	movi.n	a2, 6
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:345

    return;
20004496:	1108      	l32i.n	a0, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:343
{
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;

    DBG_Printf("DataRecovery Pending...\n");
    
    ptErrHEntry->tUeccHCtrl.bsSubStage = DATA_RECO_FAIL;
20004498:	054322        	s8i	a2, a3, 5
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:345

    return;
2000449b:	10c112        	addi	a1, a1, 16
2000449e:	f00d      	ret.n

200044a0 <L3_IFIsRecycled>:
L3_IFIsRecycled():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1587
    if (TRUE == L3_IFIsManulRptReq(ptCtrlEntry))
    {
        bNeedRecyle = TRUE;
    }

    return bNeedRecyle;
200044a0:	0248      	l32i.n	a4, a2, 0
200044a2:	130c      	movi.n	a3, 1
200044a4:	0448      	l32i.n	a4, a4, 0
200044a6:	020c      	movi.n	a2, 0
200044a8:	154c40        	extui	a4, a4, 28, 2
200044ab:	440b      	addi.n	a4, a4, -1
200044ad:	832340        	moveqz	a2, a3, a4
200044b0:	f00d      	ret.n

200044b2 <L3_IFIsRecycled+0x12>:
	...

200044b4 <L3_SchGetStsBit>:
L3_SchGetStsBit():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:243
BOOL L3_SchGetStsBit(U8 ucTLun, STS_BITMAP_TYPE eStsBmpType)
{
    U8 ucPU = L3_GET_PU(ucTLun);
    U8 ucLunInPU = L3_GET_LUN_IN_PU(ucTLun);

    return (0==(l_aTLunStsBmp[eStsBmpType][ucLunInPU] & (1<<ucPU))) ? 0 : 1;
200044b4:	1163c0        	slli	a6, a3, 4
200044b7:	401200        	ssl	a2
200044ba:	f0e351        	l32r	a5, 20000848 <_stext+0x148>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:239
Usage      : 
History    : 
    1. 2016.7.15 JasonGuo create function
==============================================================================*/
BOOL L3_SchGetStsBit(U8 ucTLun, STS_BITMAP_TYPE eStsBmpType)
{
200044bd:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:243
    U8 ucPU = L3_GET_PU(ucTLun);
    U8 ucLunInPU = L3_GET_LUN_IN_PU(ucTLun);

    return (0==(l_aTLunStsBmp[eStsBmpType][ucLunInPU] & (1<<ucPU))) ? 0 : 1;
200044bf:	556a      	add.n	a5, a5, a6
200044c1:	a16200        	sll	a6, a2
200044c4:	0020c0        	memw
200044c7:	7f2552        	l32i	a5, a5, 0x1fc
200044ca:	040c      	movi.n	a4, 0
200044cc:	105560        	and	a5, a5, a6
200044cf:	832450        	moveqz	a2, a4, a5
200044d2:	f00d      	ret.n

200044d4 <L3_SchUpdateStsBmp>:
L3_SchUpdateStsBmp():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:188

    return;
}
#else
void SWITCH_CASE_TXT L3_SchUpdateStsBmp(U8 ucLunInPU, STS_BITMAP_TYPE eStsBMType)
{
200044d4:	f0c112        	addi	a1, a1, -16
200044d7:	0261d2        	s32i	a13, a1, 8
200044da:	0161c2        	s32i	a12, a1, 4
200044dd:	006102        	s32i	a0, a1, 0
200044e0:	02cd      	mov.n	a12, a2
200044e2:	f08e01        	l32r	a0, 2000071c <_stext+0x1c>
200044e5:	03dd      	mov.n	a13, a3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:192
    U8 ucPU, ucTLun;
    U32 ulLunStsBitmap;
        
    switch (eStsBMType)
200044e7:	05b316        	beqz	a3, 20004546 <L3_SchUpdateStsBmp+0x72>
200044ea:	fac322        	addi	a2, a3, -6
200044ed:	0ac216        	beqz	a2, 2000459d <L3_SchUpdateStsBmp+0xc9>
200044f0:	f9c332        	addi	a3, a3, -7
200044f3:	0cd316        	beqz	a3, 200045c4 <L3_SchUpdateStsBmp+0xf0>
200044f6:	278d26        	beqi	a13, 8, 20004521 <L3_SchUpdateStsBmp+0x4d>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:216
            ulLunStsBitmap = HAL_NfcGetLLunSwBitMap(ucLunInPU, LOGIC_LUN_BITMAP_EMPTY);
            break;        
        }        
        default:    
        {            
            DBG_Printf("Sts Bitmap Type %d Error.\n", eStsBMType);           
200044f9:	f11021        	l32r	a2, 2000093c <_stext+0x23c>
200044fc:	0d3d      	mov.n	a3, a13
200044fe:	067645        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:217
            DBG_Getch();       
20004501:	f08501        	l32r	a0, 20000718 <_stext+0x18>
20004504:	0000c0        	callx0	a0

20004507 <L3_SchUpdateStsBmp+0x33>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:221
        }    
    }   

    l_aTLunStsBmp[eStsBMType][ucLunInPU] = ulLunStsBitmap;
20004507:	f0d051        	l32r	a5, 20000848 <_stext+0x148>
2000450a:	a04dc0        	addx4	a4, a13, a12
2000450d:	a04450        	addx4	a4, a4, a5
20004510:	0020c0        	memw
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:223
    
    return;
20004513:	11c8      	l32i.n	a12, a1, 4
20004515:	21d8      	l32i.n	a13, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:221
            DBG_Printf("Sts Bitmap Type %d Error.\n", eStsBMType);           
            DBG_Getch();       
        }    
    }   

    l_aTLunStsBmp[eStsBMType][ucLunInPU] = ulLunStsBitmap;
20004517:	7f6402        	s32i	a0, a4, 0x1fc
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:223
    
    return;
2000451a:	0108      	l32i.n	a0, a1, 0
2000451c:	10c112        	addi	a1, a1, 16
2000451f:	f00d      	ret.n

20004521 <L3_SchUpdateStsBmp+0x4d>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:929
    
    switch (ucBitMapType)
    {
        case LOGIC_LUN_BITMAP_ERROR:
        {
            ulBitMap = pNfcLLunSwBitmap->aErrorBitmap[ucLunInPU];
20004521:	4a2062        	l32i	a6, a0, 0x128
20004524:	a06c60        	addx4	a6, a12, a6
20004527:	0020c0        	memw
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:221
            DBG_Printf("Sts Bitmap Type %d Error.\n", eStsBMType);           
            DBG_Getch();       
        }    
    }   

    l_aTLunStsBmp[eStsBMType][ucLunInPU] = ulLunStsBitmap;
2000452a:	f0c781        	l32r	a8, 20000848 <_stext+0x148>
2000452d:	a07dc0        	addx4	a7, a13, a12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:929
20004530:	c668      	l32i.n	a6, a6, 48
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:221
20004532:	a07780        	addx4	a7, a7, a8
20004535:	0020c0        	memw
20004538:	7f6762        	s32i	a6, a7, 0x1fc
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:223
    
    return;
2000453b:	11c8      	l32i.n	a12, a1, 4
2000453d:	21d8      	l32i.n	a13, a1, 8
2000453f:	0108      	l32i.n	a0, a1, 0
20004541:	10c112        	addi	a1, a1, 16
20004544:	f00d      	ret.n

20004546 <L3_SchUpdateStsBmp+0x72>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:99
LOCAL U32 L3_SchGetPopReqStsBmp(U8 ucLunInPU)
{
    U8 ucPU, ucTLun, ucPriIdx, ucRptr;
    U32 ulPopReqBmp = 0;
        
    for (ucPU = 0; ucPU < SUBSYSTEM_PU_NUM; ucPU++)
20004546:	e028      	l32i.n	a2, a0, 56
20004548:	060c      	movi.n	a6, 0
2000454a:	084216        	beqz	a2, 200045d2 <L3_SchUpdateStsBmp+0xfe>
2000454d:	102032        	l32i	a3, a0, 64
20004550:	f058      	l32i.n	a5, a0, 60
20004552:	170c      	movi.n	a7, 1
20004554:	000c      	movi.n	a0, 0
20004556:	1d9276        	loopnez	a2, 20004577 <L3_SchUpdateStsBmp+0xa3>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:104
    {                
        ucTLun = L3_GET_TLUN(ucPU, ucLunInPU);
        for (ucPriIdx = 0; ucPriIdx < FCMD_REQ_PRI_NUM; ucPriIdx++)
        {
            ucRptr = L3_FCMDQGetReqRptr(ucTLun, ucPriIdx);
20004559:	9c0a      	add.n	a9, a12, a0
2000455b:	749090        	extui	a9, a9, 0, 8
2000455e:	908930        	addx2	a8, a9, a3
20004561:	0020c0        	memw
20004564:	010882        	l8ui	a8, a8, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:105
            if (FCMD_REQ_STS_PUSH == L2_FCMDQGetReqSts(ucTLun, ucPriIdx, ucRptr))
20004567:	a09950        	addx4	a9, a9, a5
2000456a:	889a      	add.n	a8, a8, a9
2000456c:	000882        	l8ui	a8, a8, 0
2000456f:	1e2826        	beqi	a8, 2, 20004591 <L3_SchUpdateStsBmp+0xbd>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:99
LOCAL U32 L3_SchGetPopReqStsBmp(U8 ucLunInPU)
{
    U8 ucPU, ucTLun, ucPriIdx, ucRptr;
    U32 ulPopReqBmp = 0;
        
    for (ucPU = 0; ucPU < SUBSYSTEM_PU_NUM; ucPU++)
20004572:	001b      	addi.n	a0, a0, 1
20004574:	740000        	extui	a0, a0, 0, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:221
            DBG_Printf("Sts Bitmap Type %d Error.\n", eStsBMType);           
            DBG_Getch();       
        }    
    }   

    l_aTLunStsBmp[eStsBMType][ucLunInPU] = ulLunStsBitmap;
20004577:	f0b431        	l32r	a3, 20000848 <_stext+0x148>
2000457a:	a02dc0        	addx4	a2, a13, a12
2000457d:	a02230        	addx4	a2, a2, a3
20004580:	0020c0        	memw
20004583:	7f6262        	s32i	a6, a2, 0x1fc
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:223
    
    return;
20004586:	11c8      	l32i.n	a12, a1, 4
20004588:	21d8      	l32i.n	a13, a1, 8
2000458a:	0108      	l32i.n	a0, a1, 0
2000458c:	10c112        	addi	a1, a1, 16
2000458f:	f00d      	ret.n

20004591 <L3_SchUpdateStsBmp+0xbd>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:107
        for (ucPriIdx = 0; ucPriIdx < FCMD_REQ_PRI_NUM; ucPriIdx++)
        {
            ucRptr = L3_FCMDQGetReqRptr(ucTLun, ucPriIdx);
            if (FCMD_REQ_STS_PUSH == L2_FCMDQGetReqSts(ucTLun, ucPriIdx, ucRptr))
            {                    
                ulPopReqBmp |= 1 << ucPU;
20004591:	401000        	ssl	a0
20004594:	a14700        	sll	a4, a7
20004597:	206640        	or	a6, a6, a4
2000459a:	fff506        	j	20004572 <L3_SchUpdateStsBmp+0x9e>

2000459d <L3_SchUpdateStsBmp+0xc9>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:939
            ulBitMap = pNfcLLunSwBitmap->aIdleBitmap[ucLunInPU];
        }break;

        case LOGIC_LUN_BITMAP_NOTFULL:
        {
            ulBitMap = pNfcLLunSwBitmap->aNotFullBitmap[ucLunInPU];
2000459d:	4a2002        	l32i	a0, a0, 0x128
200045a0:	a00c00        	addx4	a0, a12, a0
200045a3:	0020c0        	memw
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:221
            DBG_Printf("Sts Bitmap Type %d Error.\n", eStsBMType);           
            DBG_Getch();       
        }    
    }   

    l_aTLunStsBmp[eStsBMType][ucLunInPU] = ulLunStsBitmap;
200045a6:	f0a851        	l32r	a5, 20000848 <_stext+0x148>
200045a9:	a043c0        	addx4	a4, a3, a12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:939
200045ac:	4008      	l32i.n	a0, a0, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:221
200045ae:	a04450        	addx4	a4, a4, a5
200045b1:	0020c0        	memw
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:223
    
    return;
200045b4:	11c8      	l32i.n	a12, a1, 4
200045b6:	21d8      	l32i.n	a13, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:221
            DBG_Printf("Sts Bitmap Type %d Error.\n", eStsBMType);           
            DBG_Getch();       
        }    
    }   

    l_aTLunStsBmp[eStsBMType][ucLunInPU] = ulLunStsBitmap;
200045b8:	7f6402        	s32i	a0, a4, 0x1fc
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:223
    
    return;
200045bb:	0108      	l32i.n	a0, a1, 0
200045bd:	10c112        	addi	a1, a1, 16
200045c0:	f00d      	ret.n

200045c2 <L3_SchUpdateStsBmp+0xee>:
	...

200045c4 <L3_SchUpdateStsBmp+0xf0>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:944
        }break;

        case LOGIC_LUN_BITMAP_EMPTY:
        {
            ulBitMap = pNfcLLunSwBitmap->aEmptyBitmap[ucLunInPU];
200045c4:	4a2002        	l32i	a0, a0, 0x128
200045c7:	a00c00        	addx4	a0, a12, a0
200045ca:	0020c0        	memw
200045cd:	0008      	l32i.n	a0, a0, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:212
            break;        
        }        
        case STS_BMP_NFC_EMPTY: 
        {           
            ulLunStsBitmap = HAL_NfcGetLLunSwBitMap(ucLunInPU, LOGIC_LUN_BITMAP_EMPTY);
            break;        
200045cf:	ffcd06        	j	20004507 <L3_SchUpdateStsBmp+0x33>

200045d2 <L3_SchUpdateStsBmp+0xfe>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:99
LOCAL U32 L3_SchGetPopReqStsBmp(U8 ucLunInPU)
{
    U8 ucPU, ucTLun, ucPriIdx, ucRptr;
    U32 ulPopReqBmp = 0;
        
    for (ucPU = 0; ucPU < SUBSYSTEM_PU_NUM; ucPU++)
200045d2:	060c      	movi.n	a6, 0
200045d4:	ffe7c6        	j	20004577 <L3_SchUpdateStsBmp+0xa3>

200045d7 <L3_SchUpdateStsBmp+0x103>:
	...

200045d8 <HAL_NfcGetPhyPU>:
HAL_NfcGetPhyPU():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:489
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
    20151109    abby    change CE to physical PU
------------------------------------------------------------------------------*/
U8 HAL_NfcGetPhyPU(U8 ucPU)
{
    return l_aPhyPUMap[ucPU];
200045d8:	f05331        	l32r	a3, 20000724 <_stext+0x24>
200045db:	223a      	add.n	a2, a2, a3
200045dd:	800222        	l8ui	a2, a2, 128
200045e0:	f00d      	ret.n

200045e2 <HAL_NfcGetPhyPU+0xa>:
	...

200045e4 <L3_FCMDQGetIntrEptr>:
L3_FCMDQGetIntrEptr():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:469
Usage      : 
History    : 
    1. 2016.7.15 JasonGuo create function
==============================================================================*/
U8 L3_FCMDQGetIntrEptr(U8 ucTLun, BOOL bBak)
{
200045e4:	f04e41        	l32r	a4, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:474
    FCMD_INTR_DPTR *ptDptr;

    ptDptr = (FALSE == bBak) ? g_ptFCmdIntrDptr : g_ptFCmdIntrDptrBak;
    
    return ptDptr->atIntrQDptr[ucTLun].ucEptr;
200045e7:	1e2452        	l32i	a5, a4, 120
200045ea:	1f2442        	l32i	a4, a4, 124
200045ed:	834530        	moveqz	a4, a5, a3
200045f0:	a02240        	addx4	a2, a2, a4
200045f3:	030222        	l8ui	a2, a2, 3
200045f6:	f00d      	ret.n

200045f8 <L3_FCMDQAllocIntrErrHEntry>:
L3_FCMDQAllocIntrErrHEntry():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:574
Usage      : 
History    : 
    1. 2016.8.11 JasonGuo create function
==============================================================================*/
FCMD_INTR_ERRH_ENTRY *L3_FCMDQAllocIntrErrHEntry(U8 ucTLun, BOOL bBak)
{
200045f8:	430c      	movi.n	a3, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:581
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry;

    ptErrH = (FALSE == bBak) ? g_ptFCmdIntrErrH : g_ptFCmdIntrErrHBak;

    ptErrHEntry = &ptErrH->atErrHQ[ucTLun];
    COM_MemZero((U32*)ptErrHEntry, sizeof(FCMD_INTR_ERRH_ENTRY)>>2);
200045fa:	f04851        	l32r	a5, 2000071c <_stext+0x1c>
200045fd:	a06220        	addx4	a6, a2, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:574
Usage      : 
History    : 
    1. 2016.8.11 JasonGuo create function
==============================================================================*/
FCMD_INTR_ERRH_ENTRY *L3_FCMDQAllocIntrErrHEntry(U8 ucTLun, BOOL bBak)
{
20004600:	f0c112        	addi	a1, a1, -16
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:63
****************************************************************************/
void COM_MemZero(U32* TargetAddr,U32 LengthDW)
{
    U32 i;

    for (i = 0 ; i < LengthDW; i++)
20004603:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:574
20004605:	0109      	s32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:581
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry;

    ptErrH = (FALSE == bBak) ? g_ptFCmdIntrErrH : g_ptFCmdIntrErrHBak;

    ptErrHEntry = &ptErrH->atErrHQ[ucTLun];
    COM_MemZero((U32*)ptErrHEntry, sizeof(FCMD_INTR_ERRH_ENTRY)>>2);
20004607:	1c2552        	l32i	a5, a5, 112
2000460a:	1166c0        	slli	a6, a6, 4
2000460d:	556a      	add.n	a5, a5, a6
2000460f:	050d      	mov.n	a0, a5
20004611:	03a376        	loopgtz	a3, 20004618 <L3_FCMDQAllocIntrErrHEntry+0x20>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:65
    {
        *TargetAddr++ = 0;
20004614:	0029      	s32i.n	a2, a0, 0
20004616:	004b      	addi.n	a0, a0, 4

20004618 <L3_FCMDQAllocIntrErrHEntry+0x20>:
20004618:	230c      	movi.n	a3, 2
2000461a:	12a376        	loopgtz	a3, 20004630 <L3_FCMDQAllocIntrErrHEntry+0x38>
2000461d:	0029      	s32i.n	a2, a0, 0
2000461f:	1029      	s32i.n	a2, a0, 4
20004621:	2029      	s32i.n	a2, a0, 8
20004623:	3029      	s32i.n	a2, a0, 12
20004625:	4029      	s32i.n	a2, a0, 16
20004627:	5029      	s32i.n	a2, a0, 20
20004629:	6029      	s32i.n	a2, a0, 24
2000462b:	7029      	s32i.n	a2, a0, 28
2000462d:	20c002        	addi	a0, a0, 32
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:583

    return ptErrHEntry;
20004630:	052d      	mov.n	a2, a5
20004632:	0108      	l32i.n	a0, a1, 0
20004634:	10c112        	addi	a1, a1, 16
20004637:	f00d      	ret.n

20004639 <L3_FCMDQAllocIntrErrHEntry+0x41>:
20004639:	000000                                        ...

2000463c <L3_FCMDQSetIntrEptr>:
L3_FCMDQSetIntrEptr():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:492
==============================================================================*/
void L3_FCMDQSetIntrEptr(U8 ucTLun, U8 ucEptr, BOOL bBak)
{
    FCMD_INTR_DPTR *ptDptr;

    ASSERT(INVALID_DPTR == ucEptr || NFCQ_DEPTH > ucEptr);
2000463c:	ffa052        	movi	a5, 255
2000463f:	051357        	beq	a3, a5, 20004648 <L3_FCMDQSetIntrEptr+0xc>
20004642:	0243b6        	bltui	a3, 4, 20004648 <L3_FCMDQSetIntrEptr+0xc>

20004645 <L3_FCMDQSetIntrEptr+0x9>:
20004645:	ffff06        	j	20004645 <L3_FCMDQSetIntrEptr+0x9>

20004648 <L3_FCMDQSetIntrEptr+0xc>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:497

    ptDptr = (FALSE == bBak) ? g_ptFCmdIntrDptr : g_ptFCmdIntrDptrBak;
    ptDptr->atIntrQDptr[ucTLun].ucEptr = ucEptr;

    if (NFCQ_DEPTH > ucEptr)
20004648:	f07e71        	l32r	a7, 20000840 <_stext+0x140>
2000464b:	f67c      	movi.n	a6, -1
2000464d:	401200        	ssl	a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:492
==============================================================================*/
void L3_FCMDQSetIntrEptr(U8 ucTLun, U8 ucEptr, BOOL bBak)
{
    FCMD_INTR_DPTR *ptDptr;

    ASSERT(INVALID_DPTR == ucEptr || NFCQ_DEPTH > ucEptr);
20004650:	f03381        	l32r	a8, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:497

    ptDptr = (FALSE == bBak) ? g_ptFCmdIntrDptr : g_ptFCmdIntrDptrBak;
    ptDptr->atIntrQDptr[ucTLun].ucEptr = ucEptr;

    if (NFCQ_DEPTH > ucEptr)
20004653:	190c      	movi.n	a9, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:495
    FCMD_INTR_DPTR *ptDptr;

    ASSERT(INVALID_DPTR == ucEptr || NFCQ_DEPTH > ucEptr);

    ptDptr = (FALSE == bBak) ? g_ptFCmdIntrDptr : g_ptFCmdIntrDptrBak;
    ptDptr->atIntrQDptr[ucTLun].ucEptr = ucEptr;
20004655:	1e28a2        	l32i	a10, a8, 120
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:497

    if (NFCQ_DEPTH > ucEptr)
20004658:	a19900        	sll	a9, a9
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:495
    FCMD_INTR_DPTR *ptDptr;

    ASSERT(INVALID_DPTR == ucEptr || NFCQ_DEPTH > ucEptr);

    ptDptr = (FALSE == bBak) ? g_ptFCmdIntrDptr : g_ptFCmdIntrDptrBak;
    ptDptr->atIntrQDptr[ucTLun].ucEptr = ucEptr;
2000465b:	1f2882        	l32i	a8, a8, 124
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:497

    if (NFCQ_DEPTH > ucEptr)
2000465e:	306960        	xor	a6, a9, a6
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:495
    FCMD_INTR_DPTR *ptDptr;

    ASSERT(INVALID_DPTR == ucEptr || NFCQ_DEPTH > ucEptr);

    ptDptr = (FALSE == bBak) ? g_ptFCmdIntrDptr : g_ptFCmdIntrDptrBak;
    ptDptr->atIntrQDptr[ucTLun].ucEptr = ucEptr;
20004661:	838a40        	moveqz	a8, a10, a4
20004664:	a08280        	addx4	a8, a2, a8
20004667:	034832        	s8i	a3, a8, 3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:497

    if (NFCQ_DEPTH > ucEptr)
2000466a:	4243f6        	bgeui	a3, 4, 200046b0 <L3_FCMDQSetIntrEptr+0x74>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:262
void L3_SchSetStsBit(U8 ucTLun, STS_BITMAP_TYPE eStsBmpType)
{
    U8 ucPU = L3_GET_PU(ucTLun);
    U8 ucLunInPU = L3_GET_LUN_IN_PU(ucTLun);

    l_aTLunStsBmp[eStsBmpType][ucLunInPU] |= 1 << ucPU;
2000466d:	0020c0        	memw
20004670:	7f2742        	l32i	a4, a7, 0x1fc
20004673:	204490        	or	a4, a4, a9
20004676:	0020c0        	memw
20004679:	7f6742        	s32i	a4, a7, 0x1fc
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:409
void L3_SchClrArbBit(U8 ucTLun, ARB_BITMAP_TYPE eArbBmpType)
{
    U8 ucPU = L3_GET_PU(ucTLun);
    U8 ucLunInPU = L3_GET_LUN_IN_PU(ucTLun);

    l_aTLunArbBmp[eArbBmpType][ucLunInPU] &= ~(1 << ucPU);
2000467c:	70c7b2        	addi	a11, a7, 112
2000467f:	0020c0        	memw
20004682:	7f2b32        	l32i	a3, a11, 0x1fc
20004685:	103360        	and	a3, a3, a6
20004688:	0020c0        	memw
2000468b:	7f6b32        	s32i	a3, a11, 0x1fc
2000468e:	0020c0        	memw
20004691:	832b22        	l32i	a2, a11, 0x20c
20004694:	102260        	and	a2, a2, a6
20004697:	0020c0        	memw
2000469a:	836b22        	s32i	a2, a11, 0x20c
2000469d:	0020c0        	memw
200046a0:	872ba2        	l32i	a10, a11, 0x21c
200046a3:	10aa60        	and	a10, a10, a6
200046a6:	0020c0        	memw
200046a9:	876ba2        	s32i	a10, a11, 0x21c
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:510
    else
    {
        L3_SchClrStsBit(ucTLun, STS_BMP_ERRH);
    }

    return;
200046ac:	f00d      	ret.n

200046ae <L3_FCMDQSetIntrEptr+0x72>:
	...

200046b0 <L3_FCMDQSetIntrEptr+0x74>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:283
void L3_SchClrStsBit(U8 ucTLun, STS_BITMAP_TYPE eStsBmpType)
{
    U8 ucPU = L3_GET_PU(ucTLun);
    U8 ucLunInPU = L3_GET_LUN_IN_PU(ucTLun);

    l_aTLunStsBmp[eStsBmpType][ucLunInPU] &= ~(1 << ucPU);
200046b0:	0020c0        	memw
200046b3:	7f2752        	l32i	a5, a7, 0x1fc
200046b6:	105560        	and	a5, a5, a6
200046b9:	0020c0        	memw
200046bc:	7f6752        	s32i	a5, a7, 0x1fc
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:510
200046bf:	f00d      	ret.n

200046c1 <L3_FCMDQSetIntrEptr+0x85>:
200046c1:	000000                                        ...

200046c4 <HAL_NfcGetNfcqEntryAddr_RP>:
HAL_NfcGetNfcqEntryAddr_RP():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:765

    return (NFCQ_ENTRY *)(&g_pNfcq->aNfcqEntry[ucPU][ucLun][ucLevel]);
}

NFCQ_ENTRY * HAL_NfcGetNfcqEntryAddr_RP(U8 ucPU, U8 ucLun)
{
200046c4:	f01851        	l32r	a5, 20000724 <_stext+0x24>
200046c7:	f01541        	l32r	a4, 2000071c <_stext+0x1c>
200046ca:	525a      	add.n	a5, a2, a5
200046cc:	800552        	l8ui	a5, a5, 128
200046cf:	3e2432        	l32i	a3, a4, 248
200046d2:	1155c0        	slli	a5, a5, 4
200046d5:	335a      	add.n	a3, a3, a5
200046d7:	0020c0        	memw
200046da:	000332        	l8ui	a3, a3, 0
200046dd:	143430        	extui	a3, a3, 4, 2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:779
    {
        ucLevel = (NFCQ_DEPTH + ucLevel - 1) % NFCQ_DEPTH;
    }
    #endif

    return (NFCQ_ENTRY *)(&g_pNfcq->aNfcqEntry[ucPU][ucLun][ucLevel]);
200046e0:	b03230        	addx8	a3, a2, a3
200046e3:	3d2422        	l32i	a2, a4, 244
200046e6:	1133a0        	slli	a3, a3, 6
200046e9:	223a      	add.n	a2, a2, a3
200046eb:	f00d      	ret.n

200046ed <HAL_NfcGetNfcqEntryAddr_RP+0x29>:
200046ed:	000000                                        ...

200046f0 <HAL_NfcGetErrHold>:
HAL_NfcGetErrHold():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:634
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetErrHold(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
    return (BOOL)g_pNfcCmdSts->aNfcqCmdStsReg[ucPhyPU][ucLun].bsErrh;
200046f0:	f00d41        	l32r	a4, 20000724 <_stext+0x24>
200046f3:	224a      	add.n	a2, a2, a4
200046f5:	f00941        	l32r	a4, 2000071c <_stext+0x1c>
200046f8:	800222        	l8ui	a2, a2, 128
200046fb:	3e2442        	l32i	a4, a4, 248
200046fe:	a02230        	addx4	a2, a2, a3
20004701:	a02240        	addx4	a2, a2, a4
20004704:	0020c0        	memw
20004707:	000222        	l8ui	a2, a2, 0
2000470a:	042120        	extui	a2, a2, 1, 1
2000470d:	f00d      	ret.n

2000470f <HAL_NfcGetErrHold+0x1f>:
	...

20004710 <L3_XorMapFind..MJ_1482204275>:
L3_XorMapFind():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:70
    l_aXorMapTable[ulValue] = ulKey;
}

LOCAL BOOL L3_XorMapFind(U32 ulKey, U32 *pValue)
{
    ASSERT(ulKey < (U32)BIT(l_kXorStripeIdBits));
20004710:	f02751        	l32r	a5, 200007ac <_stext+0xac>
20004713:	a80552        	l8ui	a5, a5, 168
20004716:	140c      	movi.n	a4, 1
20004718:	401500        	ssl	a5
2000471b:	a14400        	sll	a4, a4
2000471e:	1ab247        	bgeu	a2, a4, 2000473c <L3_XorMapFind..MJ_1482204275+0x2c>
20004721:	b39c      	beqz.n	a3, 20004740 <L3_XorMapFind..MJ_1482204275+0x30>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:74
    ASSERT(pValue != NULL);

    U32 i = 0;
    for (i = 0; i < XORE_CNT; ++i)
20004723:	070c      	movi.n	a7, 0
20004725:	f02261        	l32r	a6, 200007b0 <_stext+0xb0>
20004728:	680c      	movi.n	a8, 6
2000472a:	09a876        	loopgtz	a8, 20004737 <L3_XorMapFind..MJ_1482204275+0x27>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:76
    {
        if (l_aXorMapTable[i] == ulKey)
2000472d:	800692        	l8ui	a9, a6, 128
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:74
{
    ASSERT(ulKey < (U32)BIT(l_kXorStripeIdBits));
    ASSERT(pValue != NULL);

    U32 i = 0;
    for (i = 0; i < XORE_CNT; ++i)
20004730:	661b      	addi.n	a6, a6, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:76
    {
        if (l_aXorMapTable[i] == ulKey)
20004732:	0e1927        	beq	a9, a2, 20004744 <L3_XorMapFind..MJ_1482204275+0x34>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:74
{
    ASSERT(ulKey < (U32)BIT(l_kXorStripeIdBits));
    ASSERT(pValue != NULL);

    U32 i = 0;
    for (i = 0; i < XORE_CNT; ++i)
20004735:	771b      	addi.n	a7, a7, 1

20004737 <L3_XorMapFind..MJ_1482204275+0x27>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:83
            *pValue = i;
            return TRUE;
        }
    }

    return FALSE;
20004737:	020c      	movi.n	a2, 0
20004739:	f00d      	ret.n

2000473b <L3_XorMapFind..MJ_1482204275+0x2b>:
	...

2000473c <L3_XorMapFind..MJ_1482204275+0x2c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:70
    l_aXorMapTable[ulValue] = ulKey;
}

LOCAL BOOL L3_XorMapFind(U32 ulKey, U32 *pValue)
{
    ASSERT(ulKey < (U32)BIT(l_kXorStripeIdBits));
2000473c:	ffff06        	j	2000473c <L3_XorMapFind..MJ_1482204275+0x2c>

2000473f <L3_XorMapFind..MJ_1482204275+0x2f>:
	...

20004740 <L3_XorMapFind..MJ_1482204275+0x30>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:71
    ASSERT(pValue != NULL);
20004740:	ffff06        	j	20004740 <L3_XorMapFind..MJ_1482204275+0x30>

20004743 <L3_XorMapFind..MJ_1482204275+0x33>:
	...

20004744 <L3_XorMapFind..MJ_1482204275+0x34>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:78
    U32 i = 0;
    for (i = 0; i < XORE_CNT; ++i)
    {
        if (l_aXorMapTable[i] == ulKey)
        {
            *pValue = i;
20004744:	0379      	s32i.n	a7, a3, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:79
            return TRUE;
20004746:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:83
        }
    }

    return FALSE;
20004748:	f00d      	ret.n

2000474a <L3_XorMapFind..MJ_1482204275+0x3a>:
	...

2000474c <XOR_PartialOperateRevise>:
XOR_PartialOperateRevise():
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:39

// IMPLEMENTATION OF LOCAL FUNCTION THAT HOLD UP INTERFACES

U32 XOR_PartialOperateRevise(U32 ulXoreId, U32 *pStartCodeWord, U32 ulCodeWordCnt)
{
    U32 ulCWCntOfXorPage = XOR_CWCNT_BY_PAGESIZE_INDEX(l_aXorE[ulXoreId].pConfigReg->bsPageSize);
2000474c:	f00781        	l32r	a8, 20000768 <_stext+0x68>
2000474f:	1192c0        	slli	a9, a2, 4
20004752:	889a      	add.n	a8, a8, a9
20004754:	7f2882        	l32i	a8, a8, 0x1fc
20004757:	0020c0        	memw
2000475a:	8a0c      	movi.n	a10, 8
2000475c:	08b8      	l32i.n	a11, a8, 0
2000475e:	090c      	movi.n	a9, 0
20004760:	24b0b0        	extui	a11, a11, 0, 3
20004763:	839ab0        	moveqz	a9, a10, a11
20004766:	0020c0        	memw
20004769:	0888      	l32i.n	a8, a8, 0
2000476b:	248080        	extui	a8, a8, 0, 3
2000476e:	1188c0        	slli	a8, a8, 4
20004771:	889a      	add.n	a8, a8, a9
20004773:	2388e0        	sext	a8, a8, 21
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:41

    ASSERT(ulXoreId < XORE_CNT);
20004776:	2862f6        	bgeui	a2, 6, 200047a2 <XOR_PartialOperateRevise+0x56>
20004779:	83ac      	beqz.n	a3, 200047a5 <XOR_PartialOperateRevise+0x59>
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:43
    ASSERT(pStartCodeWord != NULL);
    ASSERT(*pStartCodeWord < ulCWCntOfXorPage);
2000477b:	0368      	l32i.n	a6, a3, 0
2000477d:	27b687        	bgeu	a6, a8, 200047a8 <XOR_PartialOperateRevise+0x5c>
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:44
    ASSERT((ulCodeWordCnt > 0) && (ulCodeWordCnt <= ulCWCntOfXorPage));
20004780:	28b8b6        	bltui	a8, 16, 200047ac <XOR_PartialOperateRevise+0x60>
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:45
    ASSERT((*pStartCodeWord + ulCodeWordCnt) <= ulCWCntOfXorPage);
20004783:	10c6a2        	addi	a10, a6, 16
20004786:	2638a7        	bltu	a8, a10, 200047b0 <XOR_PartialOperateRevise+0x64>
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:52
    U32 i = 0;
    U32 ulRevisedCWCntIndex = 0;
    U32 ulRevisedCWCnt = 0;

    // Revise ulCodeWordCnt to hardware valid value.
    for (i = 0; i < (sizeof(l_aCodeWordCntValueSets) / sizeof(*l_aCodeWordCntValueSets)); ++i)
20004789:	f06d51        	l32r	a5, 20000940 <_stext+0x240>
2000478c:	020c      	movi.n	a2, 0
2000478e:	08a0b2        	movi	a11, 8
20004791:	09ab76        	loopgtz	a11, 2000479e <XOR_PartialOperateRevise+0x52>
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:54
    {
        if (l_aCodeWordCntValueSets[i] >= ulCodeWordCnt)
20004794:	800572        	l8ui	a7, a5, 128
20004797:	19b7f6        	bgeui	a7, 16, 200047b4 <XOR_PartialOperateRevise+0x68>
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:52
    U32 i = 0;
    U32 ulRevisedCWCntIndex = 0;
    U32 ulRevisedCWCnt = 0;

    // Revise ulCodeWordCnt to hardware valid value.
    for (i = 0; i < (sizeof(l_aCodeWordCntValueSets) / sizeof(*l_aCodeWordCntValueSets)); ++i)
2000479a:	221b      	addi.n	a2, a2, 1
2000479c:	551b      	addi.n	a5, a5, 1

2000479e <XOR_PartialOperateRevise+0x52>:
2000479e:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:68
    if ((*pStartCodeWord + ulRevisedCWCnt) > ulCWCntOfXorPage)
    {
        *pStartCodeWord = ulCWCntOfXorPage - ulRevisedCWCnt;
    }

    return ulRevisedCWCntIndex;
200047a0:	f00d      	ret.n

200047a2 <XOR_PartialOperateRevise+0x56>:
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:41

U32 XOR_PartialOperateRevise(U32 ulXoreId, U32 *pStartCodeWord, U32 ulCodeWordCnt)
{
    U32 ulCWCntOfXorPage = XOR_CWCNT_BY_PAGESIZE_INDEX(l_aXorE[ulXoreId].pConfigReg->bsPageSize);

    ASSERT(ulXoreId < XORE_CNT);
200047a2:	ffff06        	j	200047a2 <XOR_PartialOperateRevise+0x56>

200047a5 <XOR_PartialOperateRevise+0x59>:
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:42
    ASSERT(pStartCodeWord != NULL);
200047a5:	ffff06        	j	200047a5 <XOR_PartialOperateRevise+0x59>

200047a8 <XOR_PartialOperateRevise+0x5c>:
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:43
    ASSERT(*pStartCodeWord < ulCWCntOfXorPage);
200047a8:	ffff06        	j	200047a8 <XOR_PartialOperateRevise+0x5c>

200047ab <XOR_PartialOperateRevise+0x5f>:
	...

200047ac <XOR_PartialOperateRevise+0x60>:
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:44
    ASSERT((ulCodeWordCnt > 0) && (ulCodeWordCnt <= ulCWCntOfXorPage));
200047ac:	ffff06        	j	200047ac <XOR_PartialOperateRevise+0x60>

200047af <XOR_PartialOperateRevise+0x63>:
	...

200047b0 <XOR_PartialOperateRevise+0x64>:
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:45
    ASSERT((*pStartCodeWord + ulCodeWordCnt) <= ulCWCntOfXorPage);
200047b0:	ffff06        	j	200047b0 <XOR_PartialOperateRevise+0x64>

200047b3 <XOR_PartialOperateRevise+0x67>:
	...

200047b4 <XOR_PartialOperateRevise+0x68>:
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:63
            break;
        }
    }

    // Revise StartCodeWord according to the revised ulCodeWordCnt.
    if ((*pStartCodeWord + ulRevisedCWCnt) > ulCWCntOfXorPage)
200047b4:	467a      	add.n	a4, a6, a7
200047b6:	023847        	bltu	a8, a4, 200047bc <XOR_PartialOperateRevise+0x70>
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:68
    {
        *pStartCodeWord = ulCWCntOfXorPage - ulRevisedCWCnt;
    }

    return ulRevisedCWCntIndex;
200047b9:	f00d      	ret.n

200047bb <XOR_PartialOperateRevise+0x6f>:
	...

200047bc <XOR_PartialOperateRevise+0x70>:
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:65
    }

    // Revise StartCodeWord according to the revised ulCodeWordCnt.
    if ((*pStartCodeWord + ulRevisedCWCnt) > ulCWCntOfXorPage)
    {
        *pStartCodeWord = ulCWCntOfXorPage - ulRevisedCWCnt;
200047bc:	c05870        	sub	a5, a8, a7
200047bf:	0359      	s32i.n	a5, a3, 0
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:68
    }

    return ulRevisedCWCntIndex;
200047c1:	f00d      	ret.n

200047c3 <XOR_PartialOperateRevise+0x77>:
	...

200047c4 <HAL_XoreLoadStoreModeConfig>:
HAL_XoreLoadStoreModeConfig():
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:340
}

void HAL_XoreLoadStoreModeConfig(U32 ulXoreId, XOR_TARGET eTarget, U32 ulXorPageDramAddr,
    U32 ulRedunDramAddr, U32 ulRedunLength, BOOL bDramCrcEn)
{
    ASSERT(ulXoreId < XORE_CNT);
200047c4:	0462b6        	bltui	a2, 6, 200047cc <HAL_XoreLoadStoreModeConfig+0x8>

200047c7 <HAL_XoreLoadStoreModeConfig+0x3>:
200047c7:	ffff06        	j	200047c7 <HAL_XoreLoadStoreModeConfig+0x3>

200047ca <HAL_XoreLoadStoreModeConfig+0x6>:
	...

200047cc <HAL_XoreLoadStoreModeConfig+0x8>:
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:347
    ASSERT((ulRedunLength <= MAX_REDUN_PER_GENERAL_XORE) && (ulRedunLength % 8 == 0));
    ASSERT((bDramCrcEn == TRUE) || (bDramCrcEn == FALSE));

    volatile XORE_CFG_REG   *pConfigReg = l_aXorE[ulXoreId].pConfigReg;

    pConfigReg->bsMode = XOR_LOADSTORE_MODE;
200047cc:	cfafb2        	movi	a11, -49
200047cf:	092c      	movi.n	a9, 32
200047d1:	1172c0        	slli	a7, a2, 4
200047d4:	efe561        	l32r	a6, 20000768 <_stext+0x68>
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:343
    U32 ulRedunDramAddr, U32 ulRedunLength, BOOL bDramCrcEn)
{
    ASSERT(ulXoreId < XORE_CNT);
    ASSERT((eTarget >= 0) && (eTarget < XOR_TARGET_ASSERT));
    ASSERT((ulRedunLength <= MAX_REDUN_PER_GENERAL_XORE) && (ulRedunLength % 8 == 0));
    ASSERT((bDramCrcEn == TRUE) || (bDramCrcEn == FALSE));
200047d7:	eff1a1        	l32r	a10, 2000079c <_stext+0x9c>
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:347

    volatile XORE_CFG_REG   *pConfigReg = l_aXorE[ulXoreId].pConfigReg;

    pConfigReg->bsMode = XOR_LOADSTORE_MODE;
200047da:	667a      	add.n	a6, a6, a7
200047dc:	7f2662        	l32i	a6, a6, 0x1fc
200047df:	0020c0        	memw
200047e2:	0688      	l32i.n	a8, a6, 0
200047e4:	1088b0        	and	a8, a8, a11
200047e7:	208890        	or	a8, a8, a9
200047ea:	0020c0        	memw
200047ed:	0689      	s32i.n	a8, a6, 0
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:348
    pConfigReg->bsTarget = eTarget;
200047ef:	777c      	movi.n	a7, -9
200047f1:	0020c0        	memw
200047f4:	0658      	l32i.n	a5, a6, 0
200047f6:	105570        	and	a5, a5, a7
200047f9:	0020c0        	memw
200047fc:	0659      	s32i.n	a5, a6, 0
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:357
        pConfigReg->aSrcDramAddrBp[0].ulPage = ulXorPageDramAddr - DRAM_START_ADDRESS;
        pConfigReg->aSrcDramAddrBp[0].ulRedundant = ulRedunDramAddr - DRAM_START_ADDRESS;
    } 
    else
    {
        pConfigReg->tDestDramAddr.ulPage = ulXorPageDramAddr - DRAM_START_ADDRESS;
200047fe:	b3aa      	add.n	a11, a3, a10
20004800:	0020c0        	memw
20004803:	a6b9      	s32i.n	a11, a6, 40
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:358
        pConfigReg->tDestDramAddr.ulRedundant = ulRedunDramAddr - DRAM_START_ADDRESS;
20004805:	a4aa      	add.n	a10, a4, a10
20004807:	0020c0        	memw
2000480a:	b6a9      	s32i.n	a10, a6, 44
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:361
    }

    pConfigReg->bsRedunLengthBpLs = ulRedunLength >> 3;
2000480c:	7fa892        	movi	a9, 0xfffff87f
2000480f:	00a482        	movi	a8, 0x400
20004812:	0020c0        	memw
20004815:	0678      	l32i.n	a7, a6, 0
20004817:	107790        	and	a7, a7, a9
2000481a:	207780        	or	a7, a7, a8
2000481d:	0020c0        	memw
20004820:	0679      	s32i.n	a7, a6, 0
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:362
    pConfigReg->bsDramCrcEnBpLs = bDramCrcEn;
20004822:	bfaf52        	movi	a5, -65
20004825:	0020c0        	memw
20004828:	06b8      	l32i.n	a11, a6, 0
2000482a:	10bb50        	and	a11, a11, a5
2000482d:	0020c0        	memw
20004830:	06b9      	s32i.n	a11, a6, 0
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:364
    // Set bufferId nonzero value, only when we want to regard one XOR engine as two or more.
    pConfigReg->bsBufferIdBpLs = 0;
20004832:	f044a1        	l32r	a10, 20000944 <_stext+0x244>
20004835:	0020c0        	memw
20004838:	0698      	l32i.n	a9, a6, 0
2000483a:	1099a0        	and	a9, a9, a10
2000483d:	0020c0        	memw
20004840:	0699      	s32i.n	a9, a6, 0
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:365
    pConfigReg->bsEnBpLs = TRUE;
20004842:	efe181        	l32r	a8, 200007c8 <_stext+0xc8>
20004845:	f04071        	l32r	a7, 20000948 <_stext+0x248>
20004848:	0020c0        	memw
2000484b:	0658      	l32i.n	a5, a6, 0
2000484d:	105580        	and	a5, a5, a8
20004850:	205570        	or	a5, a5, a7
20004853:	0020c0        	memw
20004856:	0659      	s32i.n	a5, a6, 0
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:367

    return;
20004858:	f00d      	ret.n

2000485a <HAL_XoreLoadStoreModeConfig+0x96>:
	...

2000485c <L3_GetTlcXorCopyBackRedunAddr..PJ_1482204275>:
L3_GetTlcXorCopyBackRedunAddr():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:206
    return ((ptReqEntry->atBufDesc[ulPageIndex].bsBufID << BUF_SIZE_BITS) + DRAM_START_ADDRESS +
            (LOGIC_PIPE_PG_SZ - LOGIC_PG_SZ));
}

LOCAL U32 L3_GetTlcXorCopyBackRedunAddr(const FCMD_REQ_ENTRY *ptReqEntry, U32 ulPageIndex)
{
2000485c:	d2ac      	beqz.n	a2, 2000488d <L3_GetTlcXorCopyBackRedunAddr..PJ_1482204275+0x31>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:208
    ASSERT(ptReqEntry != NULL);
    ASSERT(ulPageIndex < 3);
2000485e:	2e33f6        	bgeui	a3, 3, 20004890 <L3_GetTlcXorCopyBackRedunAddr..PJ_1482204275+0x34>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:209
    ASSERT(FCMD_REQ_SUBTYPE_NORMAL == ptReqEntry->bsReqSubType);
20004861:	0258      	l32i.n	a5, a2, 0
20004863:	254550        	extui	a4, a5, 21, 3
20004866:	2a1466        	bnei	a4, 1, 20004894 <L3_GetTlcXorCopyBackRedunAddr..PJ_1482204275+0x38>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:212

    U32 ulRedunBaseAddr = RED_ABSOLUTE_ADDR(MCU1_ID, ptReqEntry->bsTLun, ptReqEntry->bsReqPtr);
    return ulRedunBaseAddr + ((ulPageIndex + 1) * RED_SW_SZ_DW * sizeof(U32) - RED_SZ);
20004869:	f54050        	extui	a4, a5, 16, 16
2000486c:	000262        	l8ui	a6, a2, 0
2000486f:	efab21        	l32r	a2, 2000071c <_stext+0x1c>
20004872:	1166e0        	slli	a6, a6, 2
20004875:	010464        	insbits	a6, a4, 0, 1
20004878:	162222        	l32i	a2, a2, 88
2000487b:	114380        	slli	a4, a3, 8
2000487e:	116670        	slli	a6, a6, 9
20004881:	226a      	add.n	a2, a2, a6
20004883:	224a      	add.n	a2, a2, a4
20004885:	01d222        	addmi	a2, a2, 0x100
20004888:	c0c222        	addi	a2, a2, -64
2000488b:	f00d      	ret.n

2000488d <L3_GetTlcXorCopyBackRedunAddr..PJ_1482204275+0x31>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:207
            (LOGIC_PIPE_PG_SZ - LOGIC_PG_SZ));
}

LOCAL U32 L3_GetTlcXorCopyBackRedunAddr(const FCMD_REQ_ENTRY *ptReqEntry, U32 ulPageIndex)
{
    ASSERT(ptReqEntry != NULL);
2000488d:	ffff06        	j	2000488d <L3_GetTlcXorCopyBackRedunAddr..PJ_1482204275+0x31>

20004890 <L3_GetTlcXorCopyBackRedunAddr..PJ_1482204275+0x34>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:208
    ASSERT(ulPageIndex < 3);
20004890:	ffff06        	j	20004890 <L3_GetTlcXorCopyBackRedunAddr..PJ_1482204275+0x34>

20004893 <L3_GetTlcXorCopyBackRedunAddr..PJ_1482204275+0x37>:
	...

20004894 <L3_GetTlcXorCopyBackRedunAddr..PJ_1482204275+0x38>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:209
    ASSERT(FCMD_REQ_SUBTYPE_NORMAL == ptReqEntry->bsReqSubType);
20004894:	ffff06        	j	20004894 <L3_GetTlcXorCopyBackRedunAddr..PJ_1482204275+0x38>

20004897 <L3_GetTlcXorCopyBackRedunAddr..PJ_1482204275+0x3b>:
	...

20004898 <HAL_XorePartialOperate>:
HAL_XorePartialOperate():
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:234
    return;
}

void HAL_XorePartialOperate(U32 ulXoreId, U32 ulStartCodeWord, U32 ulCodeWordCnt)
{
    U32 ulCWCntOfXorPage = XOR_CWCNT_BY_PAGESIZE_INDEX(l_aXorE[ulXoreId].pConfigReg->bsPageSize);
20004898:	1182c0        	slli	a8, a2, 4
2000489b:	efb361        	l32r	a6, 20000768 <_stext+0x68>
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:233

    return;
}

void HAL_XorePartialOperate(U32 ulXoreId, U32 ulStartCodeWord, U32 ulCodeWordCnt)
{
2000489e:	f0c112        	addi	a1, a1, -16
200048a1:	2109      	s32i.n	a0, a1, 8
200048a3:	070c      	movi.n	a7, 0
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:234
    U32 ulCWCntOfXorPage = XOR_CWCNT_BY_PAGESIZE_INDEX(l_aXorE[ulXoreId].pConfigReg->bsPageSize);
200048a5:	668a      	add.n	a6, a6, a8
200048a7:	7f2652        	l32i	a5, a6, 0x1fc
200048aa:	0020c0        	memw
200048ad:	890c      	movi.n	a9, 8
200048af:	05a8      	l32i.n	a10, a5, 0
200048b1:	080c      	movi.n	a8, 0
200048b3:	24a0a0        	extui	a10, a10, 0, 3
200048b6:	8389a0        	moveqz	a8, a9, a10
200048b9:	0020c0        	memw
200048bc:	0558      	l32i.n	a5, a5, 0
200048be:	245050        	extui	a5, a5, 0, 3
200048c1:	1155c0        	slli	a5, a5, 4
200048c4:	558a      	add.n	a5, a5, a8
200048c6:	2355e0        	sext	a5, a5, 21
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:236

    ASSERT(ulXoreId < XORE_CNT);
200048c9:	3762f6        	bgeui	a2, 6, 20004904 <HAL_XorePartialOperate+0x6c>
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:237
    ASSERT(ulStartCodeWord < ulCWCntOfXorPage);
200048cc:	85bc      	beqz.n	a5, 20004908 <HAL_XorePartialOperate+0x70>
200048ce:	1169      	s32i.n	a6, a1, 4
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:238
    ASSERT((ulCodeWordCnt > 0) && (ulCodeWordCnt <= ulCWCntOfXorPage));
200048d0:	38b5b6        	bltui	a5, 16, 2000490c <HAL_XorePartialOperate+0x74>
200048d3:	0179      	s32i.n	a7, a1, 0
200048d5:	013d      	mov.n	a3, a1
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:241
    ASSERT((ulStartCodeWord + ulCodeWordCnt) <= ulCWCntOfXorPage);

    U32 ulCodeWordCntHw = XOR_PartialOperateRevise(ulXoreId, &ulStartCodeWord, ulCodeWordCnt);
200048d7:	ffe745        	call0	2000474c <XOR_PartialOperateRevise>
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:243

    l_aXorE[ulXoreId].pConfigReg->bsStartCw = ulStartCodeWord;
200048da:	11a8      	l32i.n	a10, a1, 4
200048dc:	7f2aa2        	l32i	a10, a10, 0x1fc
200048df:	0020c0        	memw
200048e2:	0108      	l32i.n	a0, a1, 0
200048e4:	0ab8      	l32i.n	a11, a10, 0
200048e6:	d130b4        	insbits	a11, a0, 19, 25
200048e9:	0020c0        	memw
200048ec:	0ab9      	s32i.n	a11, a10, 0
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:244
    l_aXorE[ulXoreId].pConfigReg->bsCodeWordCnt = ulCodeWordCntHw;
200048ee:	0020c0        	memw
200048f1:	ca98      	l32i.n	a9, a10, 48
200048f3:	438294        	insbits	a9, a2, 8, 11
200048f6:	0020c0        	memw
200048f9:	ca99      	s32i.n	a9, a10, 48
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:246

    return;
200048fb:	2108      	l32i.n	a0, a1, 8
200048fd:	10c112        	addi	a1, a1, 16
20004900:	f00d      	ret.n

20004902 <HAL_XorePartialOperate+0x6a>:
	...

20004904 <HAL_XorePartialOperate+0x6c>:
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:236

void HAL_XorePartialOperate(U32 ulXoreId, U32 ulStartCodeWord, U32 ulCodeWordCnt)
{
    U32 ulCWCntOfXorPage = XOR_CWCNT_BY_PAGESIZE_INDEX(l_aXorE[ulXoreId].pConfigReg->bsPageSize);

    ASSERT(ulXoreId < XORE_CNT);
20004904:	ffff06        	j	20004904 <HAL_XorePartialOperate+0x6c>

20004907 <HAL_XorePartialOperate+0x6f>:
	...

20004908 <HAL_XorePartialOperate+0x70>:
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:237
    ASSERT(ulStartCodeWord < ulCWCntOfXorPage);
20004908:	ffff06        	j	20004908 <HAL_XorePartialOperate+0x70>

2000490b <HAL_XorePartialOperate+0x73>:
	...

2000490c <HAL_XorePartialOperate+0x74>:
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:238
    ASSERT((ulCodeWordCnt > 0) && (ulCodeWordCnt <= ulCWCntOfXorPage));
2000490c:	ffff06        	j	2000490c <HAL_XorePartialOperate+0x74>

2000490f <HAL_XorePartialOperate+0x77>:
	...

20004910 <HAL_XoreSetXorPageSize>:
HAL_XoreSetXorPageSize():
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:416
    return (l_aXorE[ulXoreId].pConfigReg->bsParityOtfbOffset + OTFB_XOR_PARITY_BASE);
}

void HAL_XoreSetXorPageSize(U32 ulXoreId, U32 ulXorPageSize)
{
    ASSERT(ulXoreId < XORE_CNT);
20004910:	0462b6        	bltui	a2, 6, 20004918 <HAL_XoreSetXorPageSize+0x8>

20004913 <HAL_XoreSetXorPageSize+0x3>:
20004913:	ffff06        	j	20004913 <HAL_XoreSetXorPageSize+0x3>

20004916 <HAL_XoreSetXorPageSize+0x6>:
	...

20004918 <HAL_XoreSetXorPageSize+0x8>:
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:421
    ASSERT((ulXorPageSize == (8 * KB_SIZE)) || (ulXorPageSize == (16 * KB_SIZE)) ||
        (ulXorPageSize == (32 * KB_SIZE)) || (ulXorPageSize == (48 * KB_SIZE)) ||
        (ulXorPageSize == (64 * KB_SIZE)));

    l_aXorE[ulXoreId].pConfigReg->bsPageSize = ulXorPageSize >> 14;
20004918:	1152c0        	slli	a5, a2, 4
2000491b:	ef9341        	l32r	a4, 20000768 <_stext+0x68>
2000491e:	867c      	movi.n	a6, -8
20004920:	445a      	add.n	a4, a4, a5
20004922:	150c      	movi.n	a5, 1
20004924:	7f2442        	l32i	a4, a4, 0x1fc
20004927:	0020c0        	memw
2000492a:	0438      	l32i.n	a3, a4, 0
2000492c:	103360        	and	a3, a3, a6
2000492f:	203350        	or	a3, a3, a5
20004932:	0020c0        	memw
20004935:	0439      	s32i.n	a3, a4, 0
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:423

    return;
20004937:	f00d      	ret.n

20004939 <HAL_XoreSetXorPageSize+0x29>:
20004939:	000000                                        ...

2000493c <L3_IFSendNormalFCmd>:
L3_IFSendNormalFCmd():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1650
Usage      : 
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
BOOL L3_IFSendNormalFCmd(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
2000493c:	d0c112        	addi	a1, a1, -48
2000493f:	a1c9      	s32i.n	a12, a1, 40
20004941:	9109      	s32i.n	a0, a1, 36
20004943:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1657

    #ifdef SIM
    L3_DbgFCmdCntAdd(ptCtrlEntry);
    #endif

    bResult = L3_IFAllocResource(ptCtrlEntry);
20004945:	fea785        	call0	200033c0 <L3_IFAllocResource..BF_1482204275>
20004948:	8129      	s32i.n	a2, a1, 32
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1658
    if (TRUE == bResult)
2000494a:	081226        	beqi	a2, 1, 20004956 <L3_IFSendNormalFCmd+0x1a>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1671
        L3_IFUpdtFlashMonitor(ptCtrlEntry);

        L3_IFTriggerNFC(ptCtrlEntry);
    }
    
    return bResult;    
2000494d:	a1c8      	l32i.n	a12, a1, 40
2000494f:	9108      	l32i.n	a0, a1, 36
20004951:	30c112        	addi	a1, a1, 48
20004954:	f00d      	ret.n

20004956 <L3_IFSendNormalFCmd+0x1a>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1660
    #endif

    bResult = L3_IFAllocResource(ptCtrlEntry);
    if (TRUE == bResult)
    {
        L3_IFAdaptFCmd(ptCtrlEntry);
20004956:	0c2d      	mov.n	a2, a12
20004958:	fe7c85        	call0	20003124 <L3_IFAdaptFCmd..HF_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1662

        L3_IFConfigNFCQ(ptCtrlEntry);
2000495b:	0c2d      	mov.n	a2, a12
2000495d:	fe5645        	call0	20002ec4 <L3_IFConfigNFCQ..FG_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1664

        L3_IFUpdtIntrCtrl(ptCtrlEntry);
20004960:	0c2d      	mov.n	a2, a12
20004962:	fe4e45        	call0	20002e48 <L3_IFUpdtIntrCtrl..HG_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1627
LOCAL void L3_IFUpdtFlashMonitor(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U8 ucTLun;
    FCMD_REQ_ENTRY *ptReqEntry;

    ptReqEntry = ptCtrlEntry->ptReqEntry;
20004965:	0c38      	l32i.n	a3, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1666

        L3_IFConfigNFCQ(ptCtrlEntry);

        L3_IFUpdtIntrCtrl(ptCtrlEntry);

        L3_IFUpdtFlashMonitor(ptCtrlEntry);
20004967:	ef6d61        	l32r	a6, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1630
    FCMD_REQ_ENTRY *ptReqEntry;

    ptReqEntry = ptCtrlEntry->ptReqEntry;
    ucTLun = ptReqEntry->bsTLun;
    
    L3_FMUpdtUsrOpCnt(ucTLun, ptReqEntry->bsReqType);
2000496a:	0348      	l32i.n	a4, a3, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1628
{
    U8 ucTLun;
    FCMD_REQ_ENTRY *ptReqEntry;

    ptReqEntry = ptCtrlEntry->ptReqEntry;
    ucTLun = ptReqEntry->bsTLun;
2000496c:	000302        	l8ui	a0, a3, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1630
    
    L3_FMUpdtUsrOpCnt(ucTLun, ptReqEntry->bsReqType);
2000496f:	254240        	extui	a4, a4, 18, 3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:439
History    : 
    1. 2016.7.28 JasonGuo create function
==============================================================================*/
void SWITCH_CASE_TXT L3_FMUpdtUsrOpCnt(U8 ucTLun, U8 ucFCmdType)
{
    switch (ucFCmdType)
20004972:	105416        	beqz	a4, 20004a7b <L3_IFSendNormalFCmd+0x13f>
20004975:	540b      	addi.n	a5, a4, -1
20004977:	112516        	beqz	a5, 20004a8d <L3_IFSendNormalFCmd+0x151>
2000497a:	fec472        	addi	a7, a4, -2
2000497d:	11f716        	beqz	a7, 20004aa0 <L3_IFSendNormalFCmd+0x164>
20004980:	b139      	s32i.n	a3, a1, 44
20004982:	076102        	s32i	a0, a1, 28
20004985:	157426        	beqi	a4, 7, 2000499e <L3_IFSendNormalFCmd+0x62>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:462
        {
            break;
        }
        default:
        {
            DBG_Printf("TLun%d FCmdType%d Error.\n", ucTLun, ucFCmdType);
20004988:	eff121        	l32r	a2, 2000094c <_stext+0x24c>
2000498b:	003d      	mov.n	a3, a0
2000498d:	062d45        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:463
            DBG_Getch();
20004990:	ef6201        	l32r	a0, 20000718 <_stext+0x18>
20004993:	0000c0        	callx0	a0
20004996:	7108      	l32i.n	a0, a1, 28
20004998:	0b2132        	l32i	a3, a1, 44
2000499b:	ef6061        	l32r	a6, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1533
LOCAL void L3_IFTriggerNFC(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U8 ucTLun, ucCmdType, ucXoreId;
    BOOL bIsXorParityWrEn = FALSE;
    FLASH_ADDR tFlashAddr;
    BOOL bSLCMode = (FCMD_REQ_SLC_BLK == ptCtrlEntry->ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
2000499e:	1a0c      	movi.n	a10, 1
200049a0:	090c      	movi.n	a9, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:265
History    : 
    1. 2016.7.28 JasonGuo create function
==============================================================================*/
void L3_FMSetPhyBlk(U8 ucTLun, U16 usPhyBlk)
{
    l_ptFMIntrMgr[ucTLun].bsPhyBlk = usPhyBlk;
200049a2:	905000        	addx2	a5, a0, a0
200049a5:	3388      	l32i.n	a8, a3, 12
200049a7:	212672        	l32i	a7, a6, 132
200049aa:	948a80        	extui	a8, a8, 10, 10
200049ad:	a05570        	addx4	a5, a5, a7
200049b0:	005582        	s16i	a8, a5, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:281
History    : 
    1. 2016.7.28 JasonGuo create function
==============================================================================*/
void L3_FMSetPhyPage(U8 ucTLun, U16 usPhyPage)
{
    l_ptFMIntrMgr[ucTLun].bsPhyPage = usPhyPage;
200049b3:	021c72        	l16ui	a7, a12, 4
200049b6:	015572        	s16i	a7, a5, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:297
History    : 
    1. 2016.7.28 JasonGuo create function
==============================================================================*/
void L3_FMSetCmdType(U8 ucTLun, U8 ucCmdType)
{
    l_ptFMIntrMgr[ucTLun].bsCmdType = ucCmdType;
200049b9:	060c42        	l8ui	a4, a12, 6
200049bc:	044542        	s8i	a4, a5, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1533
200049bf:	0c88      	l32i.n	a8, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1536
    
    ucTLun = ptCtrlEntry->ptReqEntry->bsTLun;
    ucCmdType = ptCtrlEntry->bsCmdType;
200049c1:	060c22        	l8ui	a2, a12, 6
200049c4:	5129      	s32i.n	a2, a1, 20
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1533
LOCAL void L3_IFTriggerNFC(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U8 ucTLun, ucCmdType, ucXoreId;
    BOOL bIsXorParityWrEn = FALSE;
    FLASH_ADDR tFlashAddr;
    BOOL bSLCMode = (FCMD_REQ_SLC_BLK == ptCtrlEntry->ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
200049c6:	6189      	s32i.n	a8, a1, 24
200049c8:	48b8      	l32i.n	a11, a8, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1537
    
    ucTLun = ptCtrlEntry->ptReqEntry->bsTLun;
    ucCmdType = ptCtrlEntry->bsCmdType;
    ucXoreId = ptCtrlEntry->bsXoreId;
200049ca:	2cc8      	l32i.n	a12, a12, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1533
LOCAL void L3_IFTriggerNFC(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U8 ucTLun, ucCmdType, ucXoreId;
    BOOL bIsXorParityWrEn = FALSE;
    FLASH_ADDR tFlashAddr;
    BOOL bSLCMode = (FCMD_REQ_SLC_BLK == ptCtrlEntry->ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
200049cc:	15b0b0        	extui	a11, a11, 16, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1537
    
    ucTLun = ptCtrlEntry->ptReqEntry->bsTLun;
    ucCmdType = ptCtrlEntry->bsCmdType;
    ucXoreId = ptCtrlEntry->bsXoreId;
200049cf:	41c5c0        	srli	a12, a12, 5
200049d2:	31c9      	s32i.n	a12, a1, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1533
LOCAL void L3_IFTriggerNFC(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U8 ucTLun, ucCmdType, ucXoreId;
    BOOL bIsXorParityWrEn = FALSE;
    FLASH_ADDR tFlashAddr;
    BOOL bSLCMode = (FCMD_REQ_SLC_BLK == ptCtrlEntry->ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
200049d4:	839ab0        	moveqz	a9, a10, a11
200049d7:	4199      	s32i.n	a9, a1, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1535
    
    ucTLun = ptCtrlEntry->ptReqEntry->bsTLun;
200049d9:	0008c2        	l8ui	a12, a8, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:126

// Use this to detect some special commands, such as the command containing XOR data of SLC write,
// the 1st program stage of the command containing XOR data of TLC write.
BOOL L3_IsDataDisperse(const FCMD_REQ_ENTRY *ptReqEntry)
{
    ASSERT(ptReqEntry != NULL);
200049dc:	098816        	beqz	a8, 20004a78 <L3_IFSendNormalFCmd+0x13c>
200049df:	082d      	mov.n	a2, a8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:128

    if ((TRUE == L3_IsNeedDoXor(ptReqEntry)) && (TRUE == ptReqEntry->bsContainXorData))
200049e1:	fe3f45        	call0	20002dd8 <L3_IsNeedDoXor>
200049e4:	ffc282        	addi	a8, a2, -1
200049e7:	0c7816        	beqz	a8, 20004ab2 <L3_IFSendNormalFCmd+0x176>
200049ea:	040c      	movi.n	a4, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
    20151028     abby    add parameter ucLun
------------------------------------------------------------------------------*/
U8 HAL_NfcGetWP(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
200049ec:	ef4c51        	l32r	a5, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1541
    ucCmdType = ptCtrlEntry->bsCmdType;
    ucXoreId = ptCtrlEntry->bsXoreId;
    bIsXorParityWrEn = (TRUE == L3_IsDataDisperse(ptCtrlEntry->ptReqEntry)) ? TRUE : FALSE;
    tFlashAddr.ucPU = L3_GET_PU(ucTLun);
    tFlashAddr.ucLun = L3_GET_LUN_IN_PU(ucTLun);
    tFlashAddr.bsSLCMode = bSLCMode;
200049ef:	4188      	l32i.n	a8, a1, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:931
    20151028    abby    modify to meet VT3533
------------------------------------------------------------------------------*/
LOCAL void HAL_NfcSetTriggerReg(FLASH_ADDR *pFlashAddr, U8 ucReqType, BOOL bIsXorParityWriteCmd, U8 ucXorId)
{
    U8 ucPhyPU, ucLun, ucWp;
    NFC_TRIGGER_REG tNfcTriggerReg = {0};
200049f1:	efd791        	l32r	a9, 20000950 <_stext+0x250>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1539
    
    ucTLun = ptCtrlEntry->ptReqEntry->bsTLun;
    ucCmdType = ptCtrlEntry->bsCmdType;
    ucXoreId = ptCtrlEntry->bsXoreId;
    bIsXorParityWrEn = (TRUE == L3_IsDataDisperse(ptCtrlEntry->ptReqEntry)) ? TRUE : FALSE;
    tFlashAddr.ucPU = L3_GET_PU(ucTLun);
200049f4:	0041c2        	s8i	a12, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1540
    tFlashAddr.ucLun = L3_GET_LUN_IN_PU(ucTLun);
200049f7:	0a0c      	movi.n	a10, 0
200049f9:	0141a2        	s8i	a10, a1, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1541
    tFlashAddr.bsSLCMode = bSLCMode;
200049fc:	0178      	l32i.n	a7, a1, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:931
200049fe:	a18b      	addi.n	a10, a1, 8
20004a00:	000992        	l8ui	a9, a9, 0
20004a03:	004a92        	s8i	a9, a10, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1541
20004a06:	b04874        	insbits	a7, a8, 20, 20
20004a09:	746870        	extui	a6, a7, 8, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
    20151028     abby    add parameter ucLun
------------------------------------------------------------------------------*/
U8 HAL_NfcGetWP(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20004a0c:	ef4681        	l32r	a8, 20000724 <_stext+0x24>
20004a0f:	747070        	extui	a7, a7, 0, 8
20004a12:	778a      	add.n	a7, a7, a8
20004a14:	800772        	l8ui	a7, a7, 128
20004a17:	3e2552        	l32i	a5, a5, 248
20004a1a:	a03760        	addx4	a3, a7, a6
20004a1d:	a03350        	addx4	a3, a3, a5
20004a20:	0020c0        	memw
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:944
#if (defined(XTMP) || defined(SIM))
    NfcM_ISetCmdCode(ucPhyPU, ucLun, ucWp, ucReqType);
    NfcM_ISetCmdMode(ucPhyPU, ucLun, ucWp, bsSLCMode);
#endif

    tNfcTriggerReg.bsCmdType = g_aPrcqTable[ucReqType].bsTrigType;
20004a23:	ef8091        	l32r	a9, 20000824 <_stext+0x124>
20004a26:	5188      	l32i.n	a8, a1, 20
20004a28:	fca022        	movi	a2, 252
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
    20151028     abby    add parameter ucLun
------------------------------------------------------------------------------*/
U8 HAL_NfcGetWP(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20004a2b:	000332        	l8ui	a3, a3, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:944
#if (defined(XTMP) || defined(SIM))
    NfcM_ISetCmdCode(ucPhyPU, ucLun, ucWp, ucReqType);
    NfcM_ISetCmdMode(ucPhyPU, ucLun, ucWp, bsSLCMode);
#endif

    tNfcTriggerReg.bsCmdType = g_aPrcqTable[ucReqType].bsTrigType;
20004a2e:	080102        	l8ui	a0, a1, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
    20151028     abby    add parameter ucLun
------------------------------------------------------------------------------*/
U8 HAL_NfcGetWP(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20004a31:	413630        	srli	a3, a3, 6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:944
#if (defined(XTMP) || defined(SIM))
    NfcM_ISetCmdCode(ucPhyPU, ucLun, ucWp, ucReqType);
    NfcM_ISetCmdMode(ucPhyPU, ucLun, ucWp, bsSLCMode);
#endif

    tNfcTriggerReg.bsCmdType = g_aPrcqTable[ucReqType].bsTrigType;
20004a34:	100020        	and	a0, a0, a2
20004a37:	a08890        	addx4	a8, a8, a9
20004a3a:	4888      	l32i.n	a8, a8, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:951
    
    /* CE_SEL = 1 only when CE decode enable & Logic LUN = 2/3 & LUN_PER_CE = 2 */
    tNfcTriggerReg.bsCESel = (0 == NFC_CE_PER_PU_BITS) ? 0 : ucLun / LUN_PER_CE;

    /* For write command, 1-stand for write XOR parity  */ 
    if ((NFC_WRITE_CMD == tNfcTriggerReg.bsCmdType) &&(FALSE != bIsXorParityWriteCmd))
20004a3c:	f3a022        	movi	a2, 243
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:944
#if (defined(XTMP) || defined(SIM))
    NfcM_ISetCmdCode(ucPhyPU, ucLun, ucWp, ucReqType);
    NfcM_ISetCmdMode(ucPhyPU, ucLun, ucWp, bsSLCMode);
#endif

    tNfcTriggerReg.bsCmdType = g_aPrcqTable[ucReqType].bsTrigType;
20004a3f:	415980        	srli	a5, a8, 9
20004a42:	010504        	insbits	a0, a5, 0, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:951
    
    /* CE_SEL = 1 only when CE decode enable & Logic LUN = 2/3 & LUN_PER_CE = 2 */
    tNfcTriggerReg.bsCESel = (0 == NFC_CE_PER_PU_BITS) ? 0 : ucLun / LUN_PER_CE;

    /* For write command, 1-stand for write XOR parity  */ 
    if ((NFC_WRITE_CMD == tNfcTriggerReg.bsCmdType) &&(FALSE != bIsXorParityWriteCmd))
20004a45:	100020        	and	a0, a0, a2
20004a48:	149000        	extui	a9, a0, 0, 2
20004a4b:	072916        	beqz	a9, 20004ac1 <L3_IFSendNormalFCmd+0x185>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:970
    else  
    {
        tNfcTriggerReg.bsExtCmd = g_aPrcqTable[ucReqType].bsIsPioCmd;
    }

    *(volatile U8*)&g_pNfcTrigger->aNfcTriggerReg[ucPhyPU][ucLun][ucWp] = *(U8*)&tNfcTriggerReg;
20004a4e:	c76a      	add.n	a12, a7, a6
20004a50:	ef3321        	l32r	a2, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:967
    }
#endif
    /* For Normal or PIO cmd: 0-Normal; 1-PIO  */
    else  
    {
        tNfcTriggerReg.bsExtCmd = g_aPrcqTable[ucReqType].bsIsPioCmd;
20004a53:	efa0b2        	movi	a11, 239
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:970
    }

    *(volatile U8*)&g_pNfcTrigger->aNfcTriggerReg[ucPhyPU][ucLun][ucWp] = *(U8*)&tNfcTriggerReg;
20004a56:	422222        	l32i	a2, a2, 0x108
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:967
    }
#endif
    /* For Normal or PIO cmd: 0-Normal; 1-PIO  */
    else  
    {
        tNfcTriggerReg.bsExtCmd = g_aPrcqTable[ucReqType].bsIsPioCmd;
20004a59:	10b0b0        	and	a11, a0, a11
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:970
    }

    *(volatile U8*)&g_pNfcTrigger->aNfcTriggerReg[ucPhyPU][ucLun][ucWp] = *(U8*)&tNfcTriggerReg;
20004a5c:	b0cc20        	addx8	a12, a12, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:967
    }
#endif
    /* For Normal or PIO cmd: 0-Normal; 1-PIO  */
    else  
    {
        tNfcTriggerReg.bsExtCmd = g_aPrcqTable[ucReqType].bsIsPioCmd;
20004a5f:	412880        	srli	a2, a8, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:970
    }

    *(volatile U8*)&g_pNfcTrigger->aNfcTriggerReg[ucPhyPU][ucLun][ucWp] = *(U8*)&tNfcTriggerReg;
20004a62:	c3ca      	add.n	a12, a3, a12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:967
    }
#endif
    /* For Normal or PIO cmd: 0-Normal; 1-PIO  */
    else  
    {
        tNfcTriggerReg.bsExtCmd = g_aPrcqTable[ucReqType].bsIsPioCmd;
20004a64:	2042b4        	insbits	a11, a2, 4, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:970
    }

    *(volatile U8*)&g_pNfcTrigger->aNfcTriggerReg[ucPhyPU][ucLun][ucWp] = *(U8*)&tNfcTriggerReg;
20004a67:	0020c0        	memw
20004a6a:	004cb2        	s8i	a11, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1671
        L3_IFUpdtFlashMonitor(ptCtrlEntry);

        L3_IFTriggerNFC(ptCtrlEntry);
    }
    
    return bResult;    
20004a6d:	8128      	l32i.n	a2, a1, 32
20004a6f:	a1c8      	l32i.n	a12, a1, 40
20004a71:	9108      	l32i.n	a0, a1, 36
20004a73:	30c112        	addi	a1, a1, 48
20004a76:	f00d      	ret.n

20004a78 <L3_IFSendNormalFCmd+0x13c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:126

// Use this to detect some special commands, such as the command containing XOR data of SLC write,
// the 1st program stage of the command containing XOR data of TLC write.
BOOL L3_IsDataDisperse(const FCMD_REQ_ENTRY *ptReqEntry)
{
    ASSERT(ptReqEntry != NULL);
20004a78:	ffff06        	j	20004a78 <L3_IFSendNormalFCmd+0x13c>

20004a7b <L3_IFSendNormalFCmd+0x13f>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:448
            g_ptFMUserMgr[ucTLun].ulReadTime++;
            break;
        }
        case FCMD_REQ_TYPE_WRITE:
        {
            g_ptFMUserMgr[ucTLun].ulPrgTime++;
20004a7b:	172672        	l32i	a7, a6, 92
20004a7e:	a05000        	addx4	a5, a0, a0
20004a81:	a05570        	addx4	a5, a5, a7
20004a84:	3548      	l32i.n	a4, a5, 12
20004a86:	441b      	addi.n	a4, a4, 1
20004a88:	3549      	s32i.n	a4, a5, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:449
            break;
20004a8a:	ffc406        	j	2000499e <L3_IFSendNormalFCmd+0x62>

20004a8d <L3_IFSendNormalFCmd+0x151>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:443
{
    switch (ucFCmdType)
    {
        case FCMD_REQ_TYPE_READ:
        {
            g_ptFMUserMgr[ucTLun].ulReadTime++;
20004a8d:	1726a2        	l32i	a10, a6, 92
20004a90:	a09000        	addx4	a9, a0, a0
20004a93:	a099a0        	addx4	a9, a9, a10
20004a96:	4988      	l32i.n	a8, a9, 16
20004a98:	881b      	addi.n	a8, a8, 1
20004a9a:	4989      	s32i.n	a8, a9, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:444
            break;
20004a9c:	ffbf86        	j	2000499e <L3_IFSendNormalFCmd+0x62>

20004a9f <L3_IFSendNormalFCmd+0x163>:
	...

20004aa0 <L3_IFSendNormalFCmd+0x164>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:453
            g_ptFMUserMgr[ucTLun].ulPrgTime++;
            break;
        }
        case FCMD_REQ_TYPE_ERASE:
        {
            g_ptFMUserMgr[ucTLun].ulErsTime++;
20004aa0:	172642        	l32i	a4, a6, 92
20004aa3:	a02000        	addx4	a2, a0, a0
20004aa6:	a02240        	addx4	a2, a2, a4
20004aa9:	22b8      	l32i.n	a11, a2, 8
20004aab:	bb1b      	addi.n	a11, a11, 1
20004aad:	22b9      	s32i.n	a11, a2, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:454
            break;
20004aaf:	ffbac6        	j	2000499e <L3_IFSendNormalFCmd+0x62>

20004ab2 <L3_IFSendNormalFCmd+0x176>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:128

    if ((TRUE == L3_IsNeedDoXor(ptReqEntry)) && (TRUE == ptReqEntry->bsContainXorData))
20004ab2:	6158      	l32i.n	a5, a1, 24
20004ab4:	0558      	l32i.n	a5, a5, 0
20004ab6:	045d50        	extui	a5, a5, 13, 1
20004ab9:	f2d516        	beqz	a5, 200049ea <L3_IFSendNormalFCmd+0xae>
20004abc:	140c      	movi.n	a4, 1
20004abe:	ffca86        	j	200049ec <L3_IFSendNormalFCmd+0xb0>

20004ac1 <L3_IFSendNormalFCmd+0x185>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:951
    
    /* CE_SEL = 1 only when CE decode enable & Logic LUN = 2/3 & LUN_PER_CE = 2 */
    tNfcTriggerReg.bsCESel = (0 == NFC_CE_PER_PU_BITS) ? 0 : ucLun / LUN_PER_CE;

    /* For write command, 1-stand for write XOR parity  */ 
    if ((NFC_WRITE_CMD == tNfcTriggerReg.bsCmdType) &&(FALSE != bIsXorParityWriteCmd))
20004ac1:	891466        	bnei	a4, 1, 20004a4e <L3_IFSendNormalFCmd+0x112>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:970
    else  
    {
        tNfcTriggerReg.bsExtCmd = g_aPrcqTable[ucReqType].bsIsPioCmd;
    }

    *(volatile U8*)&g_pNfcTrigger->aNfcTriggerReg[ucPhyPU][ucLun][ucWp] = *(U8*)&tNfcTriggerReg;
20004ac4:	976a      	add.n	a9, a7, a6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:954

    /* For write command, 1-stand for write XOR parity  */ 
    if ((NFC_WRITE_CMD == tNfcTriggerReg.bsCmdType) &&(FALSE != bIsXorParityWriteCmd))
    {
        tNfcTriggerReg.bsExtCmd = TRUE;
        tNfcTriggerReg.bsExtCmdSel = ucXorId;
20004ac6:	31b8      	l32i.n	a11, a1, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:970
    else  
    {
        tNfcTriggerReg.bsExtCmd = g_aPrcqTable[ucReqType].bsIsPioCmd;
    }

    *(volatile U8*)&g_pNfcTrigger->aNfcTriggerReg[ucPhyPU][ucLun][ucWp] = *(U8*)&tNfcTriggerReg;
20004ac8:	ef15a1        	l32r	a10, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:954

    /* For write command, 1-stand for write XOR parity  */ 
    if ((NFC_WRITE_CMD == tNfcTriggerReg.bsCmdType) &&(FALSE != bIsXorParityWriteCmd))
    {
        tNfcTriggerReg.bsExtCmd = TRUE;
        tNfcTriggerReg.bsExtCmdSel = ucXorId;
20004acb:	348000        	extui	a8, a0, 0, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:970
    else  
    {
        tNfcTriggerReg.bsExtCmd = g_aPrcqTable[ucReqType].bsIsPioCmd;
    }

    *(volatile U8*)&g_pNfcTrigger->aNfcTriggerReg[ucPhyPU][ucLun][ucWp] = *(U8*)&tNfcTriggerReg;
20004ace:	422aa2        	l32i	a10, a10, 0x108
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:954

    /* For write command, 1-stand for write XOR parity  */ 
    if ((NFC_WRITE_CMD == tNfcTriggerReg.bsCmdType) &&(FALSE != bIsXorParityWriteCmd))
    {
        tNfcTriggerReg.bsExtCmd = TRUE;
        tNfcTriggerReg.bsExtCmdSel = ucXorId;
20004ad1:	235b84        	insbits	a8, a11, 5, 7
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:970
    else  
    {
        tNfcTriggerReg.bsExtCmd = g_aPrcqTable[ucReqType].bsIsPioCmd;
    }

    *(volatile U8*)&g_pNfcTrigger->aNfcTriggerReg[ucPhyPU][ucLun][ucWp] = *(U8*)&tNfcTriggerReg;
20004ad4:	b099a0        	addx8	a9, a9, a10
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:954

    /* For write command, 1-stand for write XOR parity  */ 
    if ((NFC_WRITE_CMD == tNfcTriggerReg.bsCmdType) &&(FALSE != bIsXorParityWriteCmd))
    {
        tNfcTriggerReg.bsExtCmd = TRUE;
        tNfcTriggerReg.bsExtCmdSel = ucXorId;
20004ad7:	0a1c      	movi.n	a10, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:970
    else  
    {
        tNfcTriggerReg.bsExtCmd = g_aPrcqTable[ucReqType].bsIsPioCmd;
    }

    *(volatile U8*)&g_pNfcTrigger->aNfcTriggerReg[ucPhyPU][ucLun][ucWp] = *(U8*)&tNfcTriggerReg;
20004ad9:	939a      	add.n	a9, a3, a9
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:954

    /* For write command, 1-stand for write XOR parity  */ 
    if ((NFC_WRITE_CMD == tNfcTriggerReg.bsCmdType) &&(FALSE != bIsXorParityWriteCmd))
    {
        tNfcTriggerReg.bsExtCmd = TRUE;
        tNfcTriggerReg.bsExtCmdSel = ucXorId;
20004adb:	2088a0        	or	a8, a8, a10
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:970
    else  
    {
        tNfcTriggerReg.bsExtCmd = g_aPrcqTable[ucReqType].bsIsPioCmd;
    }

    *(volatile U8*)&g_pNfcTrigger->aNfcTriggerReg[ucPhyPU][ucLun][ucWp] = *(U8*)&tNfcTriggerReg;
20004ade:	0020c0        	memw
20004ae1:	004982        	s8i	a8, a9, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1671
20004ae4:	8128      	l32i.n	a2, a1, 32
20004ae6:	a1c8      	l32i.n	a12, a1, 40
20004ae8:	9108      	l32i.n	a0, a1, 36
20004aea:	30c112        	addi	a1, a1, 48
20004aed:	f00d      	ret.n

20004aef <L3_IFSendNormalFCmd+0x1b3>:
	...

20004af0 <L3_XorMapErase..NJ_1482204275>:
L3_XorMapErase():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:88
    return FALSE;
}

LOCAL void L3_XorMapErase(U32 ulKey)
{
    ASSERT(ulKey < (U32)BIT(l_kXorStripeIdBits));
20004af0:	ef2f31        	l32r	a3, 200007ac <_stext+0xac>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:87

    return FALSE;
}

LOCAL void L3_XorMapErase(U32 ulKey)
{
20004af3:	f0c112        	addi	a1, a1, -16
20004af6:	2109      	s32i.n	a0, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:88
    ASSERT(ulKey < (U32)BIT(l_kXorStripeIdBits));
20004af8:	a80332        	l8ui	a3, a3, 168
20004afb:	100c      	movi.n	a0, 1
20004afd:	401300        	ssl	a3
20004b00:	a10000        	sll	a0, a0
20004b03:	1109      	s32i.n	a0, a1, 4
20004b05:	1fb207        	bgeu	a2, a0, 20004b28 <L3_XorMapErase..NJ_1482204275+0x38>
20004b08:	013d      	mov.n	a3, a1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:90

    U32 ulValue = 0;
20004b0a:	040c      	movi.n	a4, 0
20004b0c:	0149      	s32i.n	a4, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:91
    BOOL bResult = L3_XorMapFind(ulKey, &ulValue);
20004b0e:	ffc005        	call0	20004710 <L3_XorMapFind..MJ_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:92
    ASSERT(bResult == TRUE);
20004b11:	171266        	bnei	a2, 1, 20004b2c <L3_XorMapErase..NJ_1482204275+0x3c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:94

    l_aXorMapTable[ulValue] = BIT(l_kXorStripeIdBits);
20004b14:	ef2771        	l32r	a7, 200007b0 <_stext+0xb0>
20004b17:	1158      	l32i.n	a5, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:95
    return;
20004b19:	2108      	l32i.n	a0, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:94

    U32 ulValue = 0;
    BOOL bResult = L3_XorMapFind(ulKey, &ulValue);
    ASSERT(bResult == TRUE);

    l_aXorMapTable[ulValue] = BIT(l_kXorStripeIdBits);
20004b1b:	0168      	l32i.n	a6, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:95
    return;
20004b1d:	10c112        	addi	a1, a1, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:94

    U32 ulValue = 0;
    BOOL bResult = L3_XorMapFind(ulKey, &ulValue);
    ASSERT(bResult == TRUE);

    l_aXorMapTable[ulValue] = BIT(l_kXorStripeIdBits);
20004b20:	667a      	add.n	a6, a6, a7
20004b22:	804652        	s8i	a5, a6, 128
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:95
    return;
20004b25:	f00d      	ret.n

20004b27 <L3_XorMapErase..NJ_1482204275+0x37>:
	...

20004b28 <L3_XorMapErase..NJ_1482204275+0x38>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:88
    return FALSE;
}

LOCAL void L3_XorMapErase(U32 ulKey)
{
    ASSERT(ulKey < (U32)BIT(l_kXorStripeIdBits));
20004b28:	ffff06        	j	20004b28 <L3_XorMapErase..NJ_1482204275+0x38>

20004b2b <L3_XorMapErase..NJ_1482204275+0x3b>:
	...

20004b2c <L3_XorMapErase..NJ_1482204275+0x3c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:92

    U32 ulValue = 0;
    BOOL bResult = L3_XorMapFind(ulKey, &ulValue);
    ASSERT(bResult == TRUE);
20004b2c:	ffff06        	j	20004b2c <L3_XorMapErase..NJ_1482204275+0x3c>

20004b2f <L3_XorMapErase..NJ_1482204275+0x3f>:
	...

20004b30 <HAL_ReleaseXore>:
HAL_ReleaseXore():
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:222
    return bRequestResult;
}

void HAL_ReleaseXore(U32 ulXoreId)
{
    ASSERT(ulXoreId < XORE_CNT);
20004b30:	3062f6        	bgeui	a2, 6, 20004b64 <HAL_ReleaseXore+0x34>
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:223
    ASSERT((l_aXorE[ulXoreId].pConfigReg->bsValid == FALSE) ||
20004b33:	ef0d41        	l32r	a4, 20000768 <_stext+0x68>
20004b36:	1122c0        	slli	a2, a2, 4
20004b39:	242a      	add.n	a2, a4, a2
20004b3b:	7f2242        	l32i	a4, a2, 0x1fc
20004b3e:	0020c0        	memw
20004b41:	0438      	l32i.n	a3, a4, 0
20004b43:	0573f7        	bbci	a3, 31, 20004b4c <HAL_ReleaseXore+0x1c>
20004b46:	822232        	l32i	a3, a2, 0x208
20004b49:	1b1366        	bnei	a3, 1, 20004b68 <HAL_ReleaseXore+0x38>
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:226
        (l_aXorE[ulXoreId].bIsParityNeedStore == TRUE));

    l_aXorE[ulXoreId].pConfigReg->bsValid = TRUE;
20004b4c:	ef0561        	l32r	a6, 20000760 <_stext+0x60>
20004b4f:	0020c0        	memw
20004b52:	0478      	l32i.n	a7, a4, 0
20004b54:	e20764        	insbits	a6, a7, 0, 30
20004b57:	0020c0        	memw
20004b5a:	0469      	s32i.n	a6, a4, 0
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:227
    l_aXorE[ulXoreId].bIsParityNeedStore = FALSE;
20004b5c:	050c      	movi.n	a5, 0
20004b5e:	826252        	s32i	a5, a2, 0x208
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:229

    return;
20004b61:	f00d      	ret.n

20004b63 <HAL_ReleaseXore+0x33>:
	...

20004b64 <HAL_ReleaseXore+0x34>:
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:222
    return bRequestResult;
}

void HAL_ReleaseXore(U32 ulXoreId)
{
    ASSERT(ulXoreId < XORE_CNT);
20004b64:	ffff06        	j	20004b64 <HAL_ReleaseXore+0x34>

20004b67 <HAL_ReleaseXore+0x37>:
	...

20004b68 <HAL_ReleaseXore+0x38>:
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:223
    ASSERT((l_aXorE[ulXoreId].pConfigReg->bsValid == FALSE) ||
20004b68:	ffff06        	j	20004b68 <HAL_ReleaseXore+0x38>

20004b6b <HAL_ReleaseXore+0x3b>:
	...

20004b6c <L3_TlcXorCopyBackToDram..AK_1482204275>:
L3_TlcXorCopyBackToDram():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:216
    U32 ulRedunBaseAddr = RED_ABSOLUTE_ADDR(MCU1_ID, ptReqEntry->bsTLun, ptReqEntry->bsReqPtr);
    return ulRedunBaseAddr + ((ulPageIndex + 1) * RED_SW_SZ_DW * sizeof(U32) - RED_SZ);
}

LOCAL void L3_TlcXorCopyBackToDram(const FCMD_REQ_ENTRY *ptReqEntry, U32 ulXoreId)
{
20004b6c:	c0c112        	addi	a1, a1, -64
20004b6f:	9109      	s32i.n	a0, a1, 36
20004b71:	a1c9      	s32i.n	a12, a1, 40
20004b73:	b1d9      	s32i.n	a13, a1, 44
20004b75:	02cd      	mov.n	a12, a2
20004b77:	03dd      	mov.n	a13, a3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:217
    ASSERT(ptReqEntry != NULL);
20004b79:	130216        	beqz	a2, 20004cad <L3_TlcXorCopyBackToDram..AK_1482204275+0x141>
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:428
    return;
}

U32 HAL_XoreGetParityPageOffset(U32 ulXoreId)
{
    ASSERT(ulXoreId < XORE_CNT);
20004b7c:	0263b6        	bltui	a3, 6, 20004b82 <L3_TlcXorCopyBackToDram..AK_1482204275+0x16>
20004b7f:	004b46        	j	20004cb0 <L3_TlcXorCopyBackToDram..AK_1482204275+0x144>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:221

    U32 i = 0;
    XOR_SATUS eResult = XOR_IDLE;
    U32 ulParityPageDataOffset = HAL_XoreGetParityPageOffset(ulXoreId);
20004b82:	1103c0        	slli	a0, a3, 4
20004b85:	eef821        	l32r	a2, 20000768 <_stext+0x68>
20004b88:	7109      	s32i.n	a0, a1, 28
20004b8a:	002a      	add.n	a0, a0, a2
20004b8c:	8109      	s32i.n	a0, a1, 32
20004b8e:	ef1e31        	l32r	a3, 20000808 <_stext+0x108>
20004b91:	7f2002        	l32i	a0, a0, 0x1fc
20004b94:	0020c0        	memw
20004b97:	e028      	l32i.n	a2, a0, 56
20004b99:	102230        	and	a2, a2, a3
20004b9c:	4129      	s32i.n	a2, a1, 16
20004b9e:	1129      	s32i.n	a2, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:222
    U32 ulParityPageRedunOffset = HAL_XoreGetParityRedunOffset(ulXoreId);
20004ba0:	eef321        	l32r	a2, 2000076c <_stext+0x6c>
20004ba3:	0020c0        	memw
20004ba6:	e008      	l32i.n	a0, a0, 56
20004ba8:	100020        	and	a0, a0, a2
20004bab:	0d2d      	mov.n	a2, a13
20004bad:	c50300        	extui	a0, a0, 19, 13
20004bb0:	5109      	s32i.n	a0, a1, 20
20004bb2:	006102        	s32i	a0, a1, 0
20004bb5:	ffd585        	call0	20004910 <HAL_XoreSetXorPageSize>
20004bb8:	0d2d      	mov.n	a2, a13
20004bba:	ffcdc5        	call0	20004898 <HAL_XorePartialOperate>
20004bbd:	0108      	l32i.n	a0, a1, 0
20004bbf:	1128      	l32i.n	a2, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:230
    U32 ulOldParityRedunOffset = ulParityPageRedunOffset;

    HAL_XoreSetXorPageSize(ulXoreId, PHYPG_SZ);
    HAL_XorePartialOperate(ulXoreId, 0, PHYPG_SZ / CW_INFO_SZ);

    for (i = 0; i < 3; ++i)
20004bc1:	0c5d      	mov.n	a5, a12
20004bc3:	ef1471        	l32r	a7, 20000814 <_stext+0x114>
20004bc6:	7168      	l32i.n	a6, a1, 28
20004bc8:	030c      	movi.n	a3, 0
20004bca:	867a      	add.n	a8, a6, a7
20004bcc:	fcc772        	addi	a7, a7, -4
20004bcf:	667a      	add.n	a6, a6, a7

20004bd1 <L3_TlcXorCopyBackToDram..AK_1482204275+0x65>:
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:437

void HAL_XoreSetParityPageOffset(U32 ulXoreId, U32 ulParityOtfbOffset)
{
    ASSERT(ulXoreId < XORE_CNT);

    l_aXorE[ulXoreId].pConfigReg->bsParityOtfbOffset = ulParityOtfbOffset;
20004bd1:	8178      	l32i.n	a7, a1, 32
20004bd3:	7f2772        	l32i	a7, a7, 0x1fc
20004bd6:	0020c0        	memw
20004bd9:	e748      	l32i.n	a4, a7, 56
20004bdb:	820244        	insbits	a4, a2, 0, 18
20004bde:	0020c0        	memw
20004be1:	e749      	s32i.n	a4, a7, 56
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:453

void HAL_XoreSetParityRedunOffset(U32 ulXoreId, U32 ulRedunOtfbOffset)
{
    ASSERT(ulXoreId < XORE_CNT);

    l_aXorE[ulXoreId].pConfigReg->bsRedunOtfbOffset = ulRedunOtfbOffset;
20004be3:	0020c0        	memw
20004be6:	e748      	l32i.n	a4, a7, 56
20004be8:	f03044        	insbits	a4, a0, 19, 28
20004beb:	0020c0        	memw
20004bee:	e749      	s32i.n	a4, a7, 56
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:198
}

LOCAL U32 L3_GetTlcXorCopyBackDataAddr(const FCMD_REQ_ENTRY *ptReqEntry, U32 ulPageIndex)
{
    ASSERT(ptReqEntry != NULL);
    ASSERT(ulPageIndex < 3);
20004bf0:	0233b6        	bltui	a3, 3, 20004bf6 <L3_TlcXorCopyBackToDram..AK_1482204275+0x8a>
20004bf3:	002f46        	j	20004cb4 <L3_TlcXorCopyBackToDram..AK_1482204275+0x148>
20004bf6:	c189      	s32i.n	a8, a1, 48
20004bf8:	d169      	s32i.n	a6, a1, 52
20004bfa:	3159      	s32i.n	a5, a1, 12
20004bfc:	2139      	s32i.n	a3, a1, 8
20004bfe:	1129      	s32i.n	a2, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:199
    ASSERT(FCMD_REQ_SUBTYPE_NORMAL == ptReqEntry->bsReqSubType);
20004c00:	0c48      	l32i.n	a4, a12, 0
20004c02:	0109      	s32i.n	a0, a1, 0
20004c04:	254540        	extui	a4, a4, 21, 3
20004c07:	440b      	addi.n	a4, a4, -1
20004c09:	0ab456        	bnez	a4, 20004cb8 <L3_TlcXorCopyBackToDram..AK_1482204275+0x14c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:236
    {
        HAL_XoreSetParityPageOffset(ulXoreId, ulParityPageDataOffset);
        HAL_XoreSetParityRedunOffset(ulXoreId, ulParityPageRedunOffset);

        U32 ulParityPageDataAddr = L3_GetTlcXorCopyBackDataAddr(ptReqEntry, i);
        U32 ulParityPageRedunAddr = L3_GetTlcXorCopyBackRedunAddr(ptReqEntry, i);
20004c0c:	0c2d      	mov.n	a2, a12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:235
    for (i = 0; i < 3; ++i)
    {
        HAL_XoreSetParityPageOffset(ulXoreId, ulParityPageDataOffset);
        HAL_XoreSetParityRedunOffset(ulXoreId, ulParityPageRedunOffset);

        U32 ulParityPageDataAddr = L3_GetTlcXorCopyBackDataAddr(ptReqEntry, i);
20004c0e:	0a1552        	l16ui	a5, a5, 20
20004c11:	ef5061        	l32r	a6, 20000954 <_stext+0x254>
20004c14:	115500        	slli	a5, a5, 16
20004c17:	556a      	add.n	a5, a5, a6
20004c19:	6159      	s32i.n	a5, a1, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:236
        U32 ulParityPageRedunAddr = L3_GetTlcXorCopyBackRedunAddr(ptReqEntry, i);
20004c1b:	ffc405        	call0	2000485c <L3_GetTlcXorCopyBackRedunAddr..PJ_1482204275>
20004c1e:	024d      	mov.n	a4, a2
20004c20:	6138      	l32i.n	a3, a1, 24
20004c22:	202dd0        	or	a2, a13, a13
20004c25:	ffb9c5        	call0	200047c4 <HAL_XoreLoadStoreModeConfig>
20004c28:	3158      	l32i.n	a5, a1, 12
20004c2a:	2138      	l32i.n	a3, a1, 8
20004c2c:	1128      	l32i.n	a2, a1, 4
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:374

void HAL_XoreTrigger(U32 ulXoreId)
{
    ASSERT(ulXoreId < XORE_CNT);

    l_aXorE[ulXoreId].pControlReg->bsStop = FALSE;
20004c2e:	c188      	l32i.n	a8, a1, 48
20004c30:	0108      	l32i.n	a0, a1, 0
20004c32:	7f2872        	l32i	a7, a8, 0x1fc
20004c35:	0020c0        	memw
20004c38:	040792        	l8ui	a9, a7, 4
20004c3b:	fda0a2        	movi	a10, 253
20004c3e:	1099a0        	and	a9, a9, a10
20004c41:	0020c0        	memw
20004c44:	044792        	s8i	a9, a7, 4
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:375
    l_aXorE[ulXoreId].pControlReg->bsTrigger = TRUE;
20004c47:	0020c0        	memw
20004c4a:	fea0b2        	movi	a11, 254
20004c4d:	040762        	l8ui	a6, a7, 4
20004c50:	190c      	movi.n	a9, 1
20004c52:	1066b0        	and	a6, a6, a11
20004c55:	206690        	or	a6, a6, a9
20004c58:	0020c0        	memw
20004c5b:	044762        	s8i	a6, a7, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:244
                                    ulParityPageRedunAddr, RED_SZ, FALSE);
        PRINT_DEBUG("L3_TlcXorCopyBackToDram: Step %d, OTFB Page Offset:0x%x,"
                    "OTFB Redun Offset:0x%x, DRAM Page Addr:0x%x, DRAM Redun Addr:0x%x.\n", i,
                    ulParityPageDataOffset, ulParityPageRedunOffset, ulParityPageDataAddr,
                    ulParityPageRedunAddr);
        HAL_XoreTrigger(ulXoreId);
20004c5e:	0d2162        	l32i	a6, a1, 52
20004c61:	7f2672        	l32i	a7, a6, 0x1fc
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:248

        do
        {
            eResult = HAL_XoreGetStatus(ulXoreId);
20004c64:	0020c0        	memw
20004c67:	1748      	l32i.n	a4, a7, 4
20004c69:	744440        	extui	a4, a4, 4, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:249
        } while (eResult != XOR_FINISH);
20004c6c:	f44466        	bnei	a4, 4, 20004c64 <L3_TlcXorCopyBackToDram..AK_1482204275+0xf8>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:251

        ulParityPageDataOffset += PHYPG_SZ;
20004c6f:	40d222        	addmi	a2, a2, 0x4000
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:252
        ulParityPageRedunOffset += RED_SZ;
20004c72:	40c002        	addi	a0, a0, 64
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:230
    U32 ulOldParityRedunOffset = ulParityPageRedunOffset;

    HAL_XoreSetXorPageSize(ulXoreId, PHYPG_SZ);
    HAL_XorePartialOperate(ulXoreId, 0, PHYPG_SZ / CW_INFO_SZ);

    for (i = 0; i < 3; ++i)
20004c75:	554b      	addi.n	a5, a5, 4
20004c77:	331b      	addi.n	a3, a3, 1
20004c79:	fdc372        	addi	a7, a3, -3
20004c7c:	f51756        	bnez	a7, 20004bd1 <L3_TlcXorCopyBackToDram..AK_1482204275+0x65>
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:437

void HAL_XoreSetParityPageOffset(U32 ulXoreId, U32 ulParityOtfbOffset)
{
    ASSERT(ulXoreId < XORE_CNT);

    l_aXorE[ulXoreId].pConfigReg->bsParityOtfbOffset = ulParityOtfbOffset;
20004c7f:	8198      	l32i.n	a9, a1, 32
20004c81:	7f2992        	l32i	a9, a9, 0x1fc
20004c84:	0020c0        	memw
20004c87:	41c8      	l32i.n	a12, a1, 16
20004c89:	e9b8      	l32i.n	a11, a9, 56
20004c8b:	820cb4        	insbits	a11, a12, 0, 18
20004c8e:	0020c0        	memw
20004c91:	e9b9      	s32i.n	a11, a9, 56
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:453

void HAL_XoreSetParityRedunOffset(U32 ulXoreId, U32 ulRedunOtfbOffset)
{
    ASSERT(ulXoreId < XORE_CNT);

    l_aXorE[ulXoreId].pConfigReg->bsRedunOtfbOffset = ulRedunOtfbOffset;
20004c93:	0020c0        	memw
20004c96:	51a8      	l32i.n	a10, a1, 20
20004c98:	e988      	l32i.n	a8, a9, 56
20004c9a:	f03a84        	insbits	a8, a10, 19, 28
20004c9d:	0020c0        	memw
20004ca0:	e989      	s32i.n	a8, a9, 56
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:257
        ulParityPageRedunOffset += RED_SZ;
    }

    HAL_XoreSetParityPageOffset(ulXoreId, ulOldParityPageOffset);
    HAL_XoreSetParityRedunOffset(ulXoreId, ulOldParityRedunOffset);
    return;
20004ca2:	a1c8      	l32i.n	a12, a1, 40
20004ca4:	b1d8      	l32i.n	a13, a1, 44
20004ca6:	9108      	l32i.n	a0, a1, 36
20004ca8:	40c112        	addi	a1, a1, 64
20004cab:	f00d      	ret.n

20004cad <L3_TlcXorCopyBackToDram..AK_1482204275+0x141>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:217
    return ulRedunBaseAddr + ((ulPageIndex + 1) * RED_SW_SZ_DW * sizeof(U32) - RED_SZ);
}

LOCAL void L3_TlcXorCopyBackToDram(const FCMD_REQ_ENTRY *ptReqEntry, U32 ulXoreId)
{
    ASSERT(ptReqEntry != NULL);
20004cad:	ffff06        	j	20004cad <L3_TlcXorCopyBackToDram..AK_1482204275+0x141>

20004cb0 <L3_TlcXorCopyBackToDram..AK_1482204275+0x144>:
D:\IM_3D_TLC\firmware\HAL\XOR/HAL_XOR.c:428
    return;
}

U32 HAL_XoreGetParityPageOffset(U32 ulXoreId)
{
    ASSERT(ulXoreId < XORE_CNT);
20004cb0:	ffff06        	j	20004cb0 <L3_TlcXorCopyBackToDram..AK_1482204275+0x144>

20004cb3 <L3_TlcXorCopyBackToDram..AK_1482204275+0x147>:
	...

20004cb4 <L3_TlcXorCopyBackToDram..AK_1482204275+0x148>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:198
}

LOCAL U32 L3_GetTlcXorCopyBackDataAddr(const FCMD_REQ_ENTRY *ptReqEntry, U32 ulPageIndex)
{
    ASSERT(ptReqEntry != NULL);
    ASSERT(ulPageIndex < 3);
20004cb4:	ffff06        	j	20004cb4 <L3_TlcXorCopyBackToDram..AK_1482204275+0x148>

20004cb7 <L3_TlcXorCopyBackToDram..AK_1482204275+0x14b>:
	...

20004cb8 <L3_TlcXorCopyBackToDram..AK_1482204275+0x14c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:199
    ASSERT(FCMD_REQ_SUBTYPE_NORMAL == ptReqEntry->bsReqSubType);
20004cb8:	ffff06        	j	20004cb8 <L3_TlcXorCopyBackToDram..AK_1482204275+0x14c>

20004cbb <L3_TlcXorCopyBackToDram..AK_1482204275+0x14f>:
	...

20004cbc <L3_FCMDQSetIntrRptr>:
L3_FCMDQSetIntrRptr():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:377
Usage      : 
History    : 
    1. 2016.7.15 JasonGuo create function
==============================================================================*/
void L3_FCMDQSetIntrRptr(U8 ucTLun, U8 ucRptr, BOOL bBak)
{
20004cbc:	ffa082        	movi	a8, 255
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:380
    FCMD_INTR_DPTR *ptDptr;

    ASSERT(INVALID_DPTR == ucRptr || NFCQ_DEPTH > ucRptr);
20004cbf:	051387        	beq	a3, a8, 20004cc8 <L3_FCMDQSetIntrRptr+0xc>
20004cc2:	0243b6        	bltui	a3, 4, 20004cc8 <L3_FCMDQSetIntrRptr+0xc>

20004cc5 <L3_FCMDQSetIntrRptr+0x9>:
20004cc5:	ffff06        	j	20004cc5 <L3_FCMDQSetIntrRptr+0x9>

20004cc8 <L3_FCMDQSetIntrRptr+0xc>:
20004cc8:	ee9551        	l32r	a5, 2000071c <_stext+0x1c>
20004ccb:	f03d      	nop.n
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:385

    ptDptr = (FALSE == bBak) ? g_ptFCmdIntrDptr : g_ptFCmdIntrDptrBak;

    //FIRMWARE_LogInfo("TLun#%d IntrRptr#0x%x 0x%x\n", ucTLun, ptDptr->atIntrQDptr[ucTLun].ucRptr, ucRptr);
    ASSERT(INVALID_DPTR == ucRptr || INVALID_DPTR == ptDptr->atIntrQDptr[ucTLun].ucRptr || ucRptr == ptDptr->atIntrQDptr[ucTLun].ucRptr);
20004ccd:	1e2562        	l32i	a6, a5, 120
20004cd0:	1f2552        	l32i	a5, a5, 124
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:388
    ptDptr->atIntrQDptr[ucTLun].ucRptr = ucRptr;

    if (NFCQ_DEPTH > ucRptr)
20004cd3:	401200        	ssl	a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:385
    ASSERT(INVALID_DPTR == ucRptr || NFCQ_DEPTH > ucRptr);

    ptDptr = (FALSE == bBak) ? g_ptFCmdIntrDptr : g_ptFCmdIntrDptrBak;

    //FIRMWARE_LogInfo("TLun#%d IntrRptr#0x%x 0x%x\n", ucTLun, ptDptr->atIntrQDptr[ucTLun].ucRptr, ucRptr);
    ASSERT(INVALID_DPTR == ucRptr || INVALID_DPTR == ptDptr->atIntrQDptr[ucTLun].ucRptr || ucRptr == ptDptr->atIntrQDptr[ucTLun].ucRptr);
20004cd6:	835640        	moveqz	a5, a6, a4
20004cd9:	a04250        	addx4	a4, a2, a5
20004cdc:	0c1387        	beq	a3, a8, 20004cec <L3_FCMDQSetIntrRptr+0x30>
20004cdf:	010472        	l8ui	a7, a4, 1
20004ce2:	061787        	beq	a7, a8, 20004cec <L3_FCMDQSetIntrRptr+0x30>
20004ce5:	031377        	beq	a3, a7, 20004cec <L3_FCMDQSetIntrRptr+0x30>

20004ce8 <L3_FCMDQSetIntrRptr+0x2c>:
20004ce8:	ffff06        	j	20004ce8 <L3_FCMDQSetIntrRptr+0x2c>

20004ceb <L3_FCMDQSetIntrRptr+0x2f>:
	...

20004cec <L3_FCMDQSetIntrRptr+0x30>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:388
    ptDptr->atIntrQDptr[ucTLun].ucRptr = ucRptr;

    if (NFCQ_DEPTH > ucRptr)
20004cec:	f27c      	movi.n	a2, -1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:386

    ptDptr = (FALSE == bBak) ? g_ptFCmdIntrDptr : g_ptFCmdIntrDptrBak;

    //FIRMWARE_LogInfo("TLun#%d IntrRptr#0x%x 0x%x\n", ucTLun, ptDptr->atIntrQDptr[ucTLun].ucRptr, ucRptr);
    ASSERT(INVALID_DPTR == ucRptr || INVALID_DPTR == ptDptr->atIntrQDptr[ucTLun].ucRptr || ucRptr == ptDptr->atIntrQDptr[ucTLun].ucRptr);
    ptDptr->atIntrQDptr[ucTLun].ucRptr = ucRptr;
20004cee:	014432        	s8i	a3, a4, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:388

    if (NFCQ_DEPTH > ucRptr)
20004cf1:	160c      	movi.n	a6, 1
20004cf3:	eec941        	l32r	a4, 20000818 <_stext+0x118>
20004cf6:	a16600        	sll	a6, a6
20004cf9:	302620        	xor	a2, a6, a2
20004cfc:	2443f6        	bgeui	a3, 4, 20004d24 <L3_FCMDQSetIntrRptr+0x68>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:262
void L3_SchSetStsBit(U8 ucTLun, STS_BITMAP_TYPE eStsBmpType)
{
    U8 ucPU = L3_GET_PU(ucTLun);
    U8 ucLunInPU = L3_GET_LUN_IN_PU(ucTLun);

    l_aTLunStsBmp[eStsBmpType][ucLunInPU] |= 1 << ucPU;
20004cff:	0020c0        	memw
20004d02:	7f2482        	l32i	a8, a4, 0x1fc
20004d05:	208860        	or	a8, a8, a6
20004d08:	0020c0        	memw
20004d0b:	7f6482        	s32i	a8, a4, 0x1fc
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:409
void L3_SchClrArbBit(U8 ucTLun, ARB_BITMAP_TYPE eArbBmpType)
{
    U8 ucPU = L3_GET_PU(ucTLun);
    U8 ucLunInPU = L3_GET_LUN_IN_PU(ucTLun);

    l_aTLunArbBmp[eArbBmpType][ucLunInPU] &= ~(1 << ucPU);
20004d0e:	eec381        	l32r	a8, 2000081c <_stext+0x11c>
20004d11:	0020c0        	memw
20004d14:	7f2872        	l32i	a7, a8, 0x1fc
20004d17:	107720        	and	a7, a7, a2
20004d1a:	0020c0        	memw
20004d1d:	7f6872        	s32i	a7, a8, 0x1fc
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:399
    else
    {
        L3_SchClrStsBit(ucTLun, STS_BMP_RECYCLE);
    }
    
    return;
20004d20:	f00d      	ret.n

20004d22 <L3_FCMDQSetIntrRptr+0x66>:
	...

20004d24 <L3_FCMDQSetIntrRptr+0x68>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:283
void L3_SchClrStsBit(U8 ucTLun, STS_BITMAP_TYPE eStsBmpType)
{
    U8 ucPU = L3_GET_PU(ucTLun);
    U8 ucLunInPU = L3_GET_LUN_IN_PU(ucTLun);

    l_aTLunStsBmp[eStsBmpType][ucLunInPU] &= ~(1 << ucPU);
20004d24:	0020c0        	memw
20004d27:	7f2492        	l32i	a9, a4, 0x1fc
20004d2a:	109920        	and	a9, a9, a2
20004d2d:	0020c0        	memw
20004d30:	7f6492        	s32i	a9, a4, 0x1fc
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:399
20004d33:	f00d      	ret.n

20004d35 <L3_FCMDQSetIntrRptr+0x79>:
20004d35:	000000                                        ...

20004d38 <L3_IFUpdtReqStatus>:
L3_IFUpdtReqStatus():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1778
Usage      : 
History    : 
    1. 2016.8.5 JasonGuo create function
==============================================================================*/
void L3_IFUpdtReqStatus(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
20004d38:	380c      	movi.n	a8, 3
20004d3a:	090c      	movi.n	a9, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1780
    U8 ucTLun, ucPri, ucReqPtr, ucStatus;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
20004d3c:	0278      	l32i.n	a7, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1781
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
20004d3e:	9248      	l32i.n	a4, a2, 36
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1786

    ucTLun = ptReqEntry->bsTLun;

    // Report the request status to the caller
    if (0 != ptReqEntry->ulReqStsAddr)
20004d40:	1758      	l32i.n	a5, a7, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1783
{
    U8 ucTLun, ucPri, ucReqPtr, ucStatus;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;

    ucTLun = ptReqEntry->bsTLun;
20004d42:	000762        	l8ui	a6, a7, 0
20004d45:	007516        	beqz	a5, 20004d50 <L3_IFUpdtReqStatus+0x18>
20004d48:	d4ec      	bnez.n	a4, 20004d79 <L3_IFUpdtReqStatus+0x41>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1788

    // Report the request status to the caller
    if (0 != ptReqEntry->ulReqStsAddr)
    {
        if (NULL == ptErrHEntry)
20004d4a:	204990        	or	a4, a9, a9

20004d4d <L3_IFUpdtReqStatus+0x15>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1819
            else
            {
                ucStatus = SUBSYSTEM_STATUS_FAIL;
            }
        }
        *(U8 *)ptReqEntry->ulReqStsAddr = ucStatus;
20004d4d:	004542        	s8i	a4, a5, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1845
        L3_DbgFCmdPrint(ptCtrlEntry, "Null_Recycle");
        L3_DbgFCmdNullChk(HAL_NfcGetPhyPU(ucTLun) + L3_GET_LUN_IN_PU(ucTLun));
    }    
    #endif

    if (FALSE == ptCtrlEntry->bsIntrReq)
20004d50:	2238      	l32i.n	a3, a2, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1850
    {
        // Release the FCMDQ Level      
        ucPri = ptReqEntry->bsFCmdPri;
        ucReqPtr = ptReqEntry->bsReqPtr;
        ASSERT(FCMD_REQ_STS_POP == L2_FCMDQGetReqSts(ucTLun, ucPri, ucReqPtr));
20004d52:	ee7281        	l32r	a8, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1845
        L3_DbgFCmdPrint(ptCtrlEntry, "Null_Recycle");
        L3_DbgFCmdNullChk(HAL_NfcGetPhyPU(ucTLun) + L3_GET_LUN_IN_PU(ucTLun));
    }    
    #endif

    if (FALSE == ptCtrlEntry->bsIntrReq)
20004d55:	41e3b7        	bbsi	a3, 11, 20004d9a <L3_IFUpdtReqStatus+0x62>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1848
    {
        // Release the FCMDQ Level      
        ucPri = ptReqEntry->bsFCmdPri;
20004d58:	0748      	l32i.n	a4, a7, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1850
        ucReqPtr = ptReqEntry->bsReqPtr;
        ASSERT(FCMD_REQ_STS_POP == L2_FCMDQGetReqSts(ucTLun, ucPri, ucReqPtr));
20004d5a:	f888      	l32i.n	a8, a8, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1848
    #endif

    if (FALSE == ptCtrlEntry->bsIntrReq)
    {
        // Release the FCMDQ Level      
        ucPri = ptReqEntry->bsFCmdPri;
20004d5c:	045f40        	extui	a5, a4, 15, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1849
        ucReqPtr = ptReqEntry->bsReqPtr;
20004d5f:	154040        	extui	a4, a4, 16, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1850
        ASSERT(FCMD_REQ_STS_POP == L2_FCMDQGetReqSts(ucTLun, ucPri, ucReqPtr));
20004d62:	556a      	add.n	a5, a5, a6
20004d64:	a05580        	addx4	a5, a5, a8
20004d67:	804450        	add	a4, a4, a5
20004d6a:	000452        	l8ui	a5, a4, 0
20004d6d:	033526        	beqi	a5, 3, 20004d74 <L3_IFUpdtReqStatus+0x3c>
20004d70:	ffff06        	j	20004d70 <L3_IFUpdtReqStatus+0x38>

20004d73 <L3_IFUpdtReqStatus+0x3b>:
	...

20004d74 <L3_IFUpdtReqStatus+0x3c>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_FCMDQ.c:216
History    : 
    1. 2016.7.14 JasonGuo create function
==============================================================================*/
void L2_FCMDQSetReqSts(U8 ucTLun, FCMD_REQ_PRI eFCmdPri, U8 ucLevel, FCMD_REQ_STS eReqSts)
{
    g_ptFCmdReqSts->atReqStsQ[ucTLun][eFCmdPri].aReqStatus[ucLevel] = eReqSts;
20004d74:	004492        	s8i	a9, a4, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1854
        L2_FCMDQSetReqSts(ucTLun, ucPri, ucReqPtr, FCMD_REQ_STS_INIT);        
    }
    
    return;
20004d77:	f00d      	ret.n

20004d79 <L3_IFUpdtReqStatus+0x41>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1792
    {
        if (NULL == ptErrHEntry)
        {
            ucStatus = SUBSYSTEM_STATUS_SUCCESS;
        }
        else if (FALSE == ptErrHEntry->bsErrRpt)
20004d79:	04a8      	l32i.n	a10, a4, 0
20004d7b:	0dea07        	bbsi	a10, 0, 20004d8c <L3_IFUpdtReqStatus+0x54>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1794
        {
            if (FALSE == ptErrHEntry->tUeccHCtrl.tRetry.bsEnable)
20004d7e:	2488      	l32i.n	a8, a4, 8
20004d80:	640c      	movi.n	a4, 6
20004d82:	048080        	extui	a8, a8, 0, 1
20004d85:	834980        	moveqz	a4, a9, a8
20004d88:	fff046        	j	20004d4d <L3_IFUpdtReqStatus+0x15>

20004d8b <L3_IFUpdtReqStatus+0x53>:
	...

20004d8c <L3_IFUpdtReqStatus+0x54>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1805
                ucStatus = SUBSYSTEM_STATUS_RETRY_SUCCESS;
            }
        }
        else
        {
            if (TRUE == ptErrHEntry->bsEmptyPg)
20004d8c:	6441a0        	extui	a4, a10, 1, 7
20004d8f:	096a87        	bbci	a10, 8, 20004d9c <L3_IFUpdtReqStatus+0x64>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1807
            {
                ASSERT(NF_ERR_TYPE_UECC == ptErrHEntry->bsErrCode);
20004d92:	136466        	bnei	a4, 6, 20004da9 <L3_IFUpdtReqStatus+0x71>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1808
                ucStatus = SUBSYSTEM_STATUS_EMPTY_PG;
20004d95:	440c      	movi.n	a4, 4
20004d97:	ffec86        	j	20004d4d <L3_IFUpdtReqStatus+0x15>

20004d9a <L3_IFUpdtReqStatus+0x62>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1854
        ucReqPtr = ptReqEntry->bsReqPtr;
        ASSERT(FCMD_REQ_STS_POP == L2_FCMDQGetReqSts(ucTLun, ucPri, ucReqPtr));
        L2_FCMDQSetReqSts(ucTLun, ucPri, ucReqPtr, FCMD_REQ_STS_INIT);        
    }
    
    return;
20004d9a:	f00d      	ret.n

20004d9c <L3_IFUpdtReqStatus+0x64>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1810
            if (TRUE == ptErrHEntry->bsEmptyPg)
            {
                ASSERT(NF_ERR_TYPE_UECC == ptErrHEntry->bsErrCode);
                ucStatus = SUBSYSTEM_STATUS_EMPTY_PG;
            }
            else if (NF_ERR_TYPE_RECC == ptErrHEntry->bsErrCode)
20004d9c:	f7c4b2        	addi	a11, a4, -9
20004d9f:	5a0c      	movi.n	a10, 5
20004da1:	084d      	mov.n	a4, a8
20004da3:	834ab0        	moveqz	a4, a10, a11
20004da6:	ffe8c6        	j	20004d4d <L3_IFUpdtReqStatus+0x15>

20004da9 <L3_IFUpdtReqStatus+0x71>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1807
        }
        else
        {
            if (TRUE == ptErrHEntry->bsEmptyPg)
            {
                ASSERT(NF_ERR_TYPE_UECC == ptErrHEntry->bsErrCode);
20004da9:	ffff06        	j	20004da9 <L3_IFUpdtReqStatus+0x71>

20004dac <L3_XoreRelease>:
L3_XoreRelease():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:261
    HAL_XoreSetParityRedunOffset(ulXoreId, ulOldParityRedunOffset);
    return;
}

BOOL L3_XoreRelease(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
20004dac:	f0c112        	addi	a1, a1, -16
20004daf:	11c9      	s32i.n	a12, a1, 4
20004db1:	0109      	s32i.n	a0, a1, 0
20004db3:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:262
    ASSERT(ptCtrlEntry != NULL);
20004db5:	048216        	beqz	a2, 20004e01 <L3_XoreRelease+0x55>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:263
    ASSERT(ptCtrlEntry->ptReqEntry != NULL);
20004db8:	0228      	l32i.n	a2, a2, 0
20004dba:	04a216        	beqz	a2, 20004e08 <L3_XoreRelease+0x5c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:266

    BOOL bXoreReleaseFinish = FALSE;
    FCMD_REQ_BLK_MOD eBlockMode = ptCtrlEntry->ptReqEntry->tFlashDesc.bsBlkMod;
20004dbd:	042202        	l32i	a0, a2, 16
20004dc0:	150000        	extui	a0, a0, 16, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:267
    ASSERT((eBlockMode == FCMD_REQ_SLC_BLK) || (eBlockMode == FCMD_REQ_MLC_BLK) ||
20004dc3:	045016        	beqz	a0, 20004e0c <L3_XoreRelease+0x60>
20004dc6:	421026        	beqi	a0, 1, 20004e0c <L3_XoreRelease+0x60>
20004dc9:	372066        	bnei	a0, 2, 20004e04 <L3_XoreRelease+0x58>

20004dcc <L3_XoreRelease+0x20>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:272
           (eBlockMode == FCMD_REQ_TLC_BLK));

    if (eBlockMode == FCMD_REQ_TLC_BLK)
    {
        ASSERT(ptCtrlEntry->bsMultiStep > 0);
20004dcc:	1c48      	l32i.n	a4, a12, 4
20004dce:	150a40        	extui	a0, a4, 26, 2
20004dd1:	5810a6        	blti	a0, 1, 20004e2d <L3_XoreRelease+0x81>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:274

        if (--(ptCtrlEntry->bsMultiStep) == 0)
20004dd4:	500b      	addi.n	a5, a0, -1
20004dd6:	d3a544        	insbits	a4, a5, 26, 27
20004dd9:	1c49      	s32i.n	a4, a12, 4
20004ddb:	153a40        	extui	a3, a4, 26, 2
20004dde:	04e316        	beqz	a3, 20004e30 <L3_XoreRelease+0x84>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:295
            ptCtrlEntry->tDTxCtrl.bsBdEngineDone = FALSE;
            ptCtrlEntry->tDTxCtrl.bsFstEngineID = INVALID_4F;
            #ifdef SIM
            L3_DbgFCmdCntDec(ptCtrlEntry);
            #endif
            L3_IFSendNormalFCmd(ptCtrlEntry);
20004de1:	0c2d      	mov.n	a2, a12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:290
        }
        else
        {
            PRINT_DEBUG("L3_XoreRelease: The Data Dispersed TLC XOR Command, Multi Step:%d\n",
                        ptCtrlEntry->bsMultiStep);
            ptCtrlEntry->tDTxCtrl.bsBdEngineDone = FALSE;
20004de3:	e87c      	movi.n	a8, -2
20004de5:	6c78      	l32i.n	a7, a12, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:291
            ptCtrlEntry->tDTxCtrl.bsFstEngineID = INVALID_4F;
20004de7:	ee5b61        	l32r	a6, 20000754 <_stext+0x54>
20004dea:	0a5c62        	s16i	a6, a12, 20
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:290
        }
        else
        {
            PRINT_DEBUG("L3_XoreRelease: The Data Dispersed TLC XOR Command, Multi Step:%d\n",
                        ptCtrlEntry->bsMultiStep);
            ptCtrlEntry->tDTxCtrl.bsBdEngineDone = FALSE;
20004ded:	107780        	and	a7, a7, a8
20004df0:	6c79      	s32i.n	a7, a12, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:308
        bXoreReleaseFinish = TRUE;
        PRINT_DEBUG("L3_XoreRelease: The Data Dispersed SLC XOR Command Finished! XOR engine %d is "
                    "released!\n", ptCtrlEntry->bsXoreId);
    }

    return bXoreReleaseFinish;
20004df2:	0121c2        	l32i	a12, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:295
            ptCtrlEntry->tDTxCtrl.bsBdEngineDone = FALSE;
            ptCtrlEntry->tDTxCtrl.bsFstEngineID = INVALID_4F;
            #ifdef SIM
            L3_DbgFCmdCntDec(ptCtrlEntry);
            #endif
            L3_IFSendNormalFCmd(ptCtrlEntry);
20004df5:	ffb445        	call0	2000493c <L3_IFSendNormalFCmd>
20004df8:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:308
        bXoreReleaseFinish = TRUE;
        PRINT_DEBUG("L3_XoreRelease: The Data Dispersed SLC XOR Command Finished! XOR engine %d is "
                    "released!\n", ptCtrlEntry->bsXoreId);
    }

    return bXoreReleaseFinish;
20004dfa:	0108      	l32i.n	a0, a1, 0
20004dfc:	10c112        	addi	a1, a1, 16
20004dff:	f00d      	ret.n

20004e01 <L3_XoreRelease+0x55>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:262
    return;
}

BOOL L3_XoreRelease(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    ASSERT(ptCtrlEntry != NULL);
20004e01:	ffff06        	j	20004e01 <L3_XoreRelease+0x55>

20004e04 <L3_XoreRelease+0x58>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:267
    ASSERT(ptCtrlEntry->ptReqEntry != NULL);

    BOOL bXoreReleaseFinish = FALSE;
    FCMD_REQ_BLK_MOD eBlockMode = ptCtrlEntry->ptReqEntry->tFlashDesc.bsBlkMod;
    ASSERT((eBlockMode == FCMD_REQ_SLC_BLK) || (eBlockMode == FCMD_REQ_MLC_BLK) ||
20004e04:	ffff06        	j	20004e04 <L3_XoreRelease+0x58>

20004e07 <L3_XoreRelease+0x5b>:
	...

20004e08 <L3_XoreRelease+0x5c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:263
}

BOOL L3_XoreRelease(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    ASSERT(ptCtrlEntry != NULL);
    ASSERT(ptCtrlEntry->ptReqEntry != NULL);
20004e08:	ffff06        	j	20004e08 <L3_XoreRelease+0x5c>

20004e0b <L3_XoreRelease+0x5f>:
	...

20004e0c <L3_XoreRelease+0x60>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:270
    BOOL bXoreReleaseFinish = FALSE;
    FCMD_REQ_BLK_MOD eBlockMode = ptCtrlEntry->ptReqEntry->tFlashDesc.bsBlkMod;
    ASSERT((eBlockMode == FCMD_REQ_SLC_BLK) || (eBlockMode == FCMD_REQ_MLC_BLK) ||
           (eBlockMode == FCMD_REQ_TLC_BLK));

    if (eBlockMode == FCMD_REQ_TLC_BLK)
20004e0c:	bc2026        	beqi	a0, 2, 20004dcc <L3_XoreRelease+0x20>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:301
        }
    }
    else
    {
        // The SLC or MLC needn't to do the copy back action, so release the XOR engine directly.
        HAL_ReleaseXore(ptCtrlEntry->bsXoreId);
20004e0f:	080c22        	l8ui	a2, a12, 8
20004e12:	412520        	srli	a2, a2, 5
20004e15:	ffd185        	call0	20004b30 <HAL_ReleaseXore>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:302
        L3_XorMapErase(ptCtrlEntry->ptReqEntry->bsXorStripeId);
20004e18:	0c28      	l32i.n	a2, a12, 0
20004e1a:	0228      	l32i.n	a2, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:308
        bXoreReleaseFinish = TRUE;
        PRINT_DEBUG("L3_XoreRelease: The Data Dispersed SLC XOR Command Finished! XOR engine %d is "
                    "released!\n", ptCtrlEntry->bsXoreId);
    }

    return bXoreReleaseFinish;
20004e1c:	11c8      	l32i.n	a12, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:302
    }
    else
    {
        // The SLC or MLC needn't to do the copy back action, so release the XOR engine directly.
        HAL_ReleaseXore(ptCtrlEntry->bsXoreId);
        L3_XorMapErase(ptCtrlEntry->ptReqEntry->bsXorStripeId);
20004e1e:	352820        	extui	a2, a2, 24, 4
20004e21:	ffccc5        	call0	20004af0 <L3_XorMapErase..NJ_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:303
        bXoreReleaseFinish = TRUE;
20004e24:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:308
        PRINT_DEBUG("L3_XoreRelease: The Data Dispersed SLC XOR Command Finished! XOR engine %d is "
                    "released!\n", ptCtrlEntry->bsXoreId);
    }

    return bXoreReleaseFinish;
20004e26:	0108      	l32i.n	a0, a1, 0
20004e28:	10c112        	addi	a1, a1, 16
20004e2b:	f00d      	ret.n

20004e2d <L3_XoreRelease+0x81>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:272
    ASSERT((eBlockMode == FCMD_REQ_SLC_BLK) || (eBlockMode == FCMD_REQ_MLC_BLK) ||
           (eBlockMode == FCMD_REQ_TLC_BLK));

    if (eBlockMode == FCMD_REQ_TLC_BLK)
    {
        ASSERT(ptCtrlEntry->bsMultiStep > 0);
20004e2d:	ffff06        	j	20004e2d <L3_XoreRelease+0x81>

20004e30 <L3_XoreRelease+0x84>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:278

        if (--(ptCtrlEntry->bsMultiStep) == 0)
        {
            // The TLC write command that contains XOR data is finished. Firstly, we need to copy
            // XOR data back to DRAM, and then release the XOR engine.
            L3_TlcXorCopyBackToDram(ptCtrlEntry->ptReqEntry, ptCtrlEntry->bsXoreId);
20004e30:	080c32        	l8ui	a3, a12, 8
20004e33:	413530        	srli	a3, a3, 5
20004e36:	ffd345        	call0	20004b6c <L3_TlcXorCopyBackToDram..AK_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:280

            HAL_ReleaseXore(ptCtrlEntry->bsXoreId);
20004e39:	080c22        	l8ui	a2, a12, 8
20004e3c:	412520        	srli	a2, a2, 5
20004e3f:	ffcf05        	call0	20004b30 <HAL_ReleaseXore>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:281
            L3_XorMapErase(ptCtrlEntry->ptReqEntry->bsXorStripeId);
20004e42:	0c28      	l32i.n	a2, a12, 0
20004e44:	0228      	l32i.n	a2, a2, 0
20004e46:	352820        	extui	a2, a2, 24, 4
20004e49:	ffca45        	call0	20004af0 <L3_XorMapErase..NJ_1482204275>
20004e4c:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:308
        bXoreReleaseFinish = TRUE;
        PRINT_DEBUG("L3_XoreRelease: The Data Dispersed SLC XOR Command Finished! XOR engine %d is "
                    "released!\n", ptCtrlEntry->bsXoreId);
    }

    return bXoreReleaseFinish;
20004e4e:	11c8      	l32i.n	a12, a1, 4
20004e50:	0108      	l32i.n	a0, a1, 0
20004e52:	10c112        	addi	a1, a1, 16
20004e55:	f00d      	ret.n

20004e57 <L3_XoreRelease+0xab>:
	...

20004e58 <L3_IFIsFCmdFinished>:
L3_IFIsFCmdFinished():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1720
Usage      : 
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
BOOL L3_IFIsFCmdFinished(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
20004e58:	ee3151        	l32r	a5, 2000071c <_stext+0x1c>
20004e5b:	f0c112        	addi	a1, a1, -16
20004e5e:	ee3141        	l32r	a4, 20000724 <_stext+0x24>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1724
    BOOL bFinish;
    U8 ucTLun;

    ucTLun = ptCtrlEntry->ptReqEntry->bsTLun;
20004e61:	0238      	l32i.n	a3, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1720
Usage      : 
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
BOOL L3_IFIsFCmdFinished(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
20004e63:	0109      	s32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1724
    BOOL bFinish;
    U8 ucTLun;

    ucTLun = ptCtrlEntry->ptReqEntry->bsTLun;
20004e65:	1208      	l32i.n	a0, a2, 4
20004e67:	000322        	l8ui	a2, a3, 0
20004e6a:	150e00        	extui	a0, a0, 30, 2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:687
    U8 ucPhyPU;
    BOOL bFinishFlag = FALSE;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);

    if (0 == ucLevel)
20004e6d:	70bc      	beqz.n	a0, 20004ea8 <L3_IFIsFCmdFinished+0x50>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:691
    {
        bFinishFlag = (BOOL)g_pNfcCmdSts->aNfcqCmdStsReg[ucPhyPU][ucLun].bsFsLv0;
    }
    else if (1 == ucLevel)
20004e6f:	521026        	beqi	a0, 1, 20004ec5 <L3_IFIsFCmdFinished+0x6d>
20004e72:	fec062        	addi	a6, a0, -2
20004e75:	069616        	beqz	a6, 20004ee2 <L3_IFIsFCmdFinished+0x8a>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:699
    }
    else if (2 == ucLevel)
    {
        bFinishFlag = (BOOL)g_pNfcCmdSts->aNfcqCmdStsReg[ucPhyPU][ucLun].bsFsLv2;
    }
    else if(3 == ucLevel)
20004e78:	1c3066        	bnei	a0, 3, 20004e98 <L3_IFIsFCmdFinished+0x40>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:701
    {
        bFinishFlag = (BOOL)g_pNfcCmdSts->aNfcqCmdStsReg[ucPhyPU][ucLun].bsFsLv3;
20004e7b:	324a      	add.n	a3, a2, a4
20004e7d:	800332        	l8ui	a3, a3, 128
20004e80:	3e2522        	l32i	a2, a5, 248
20004e83:	1133c0        	slli	a3, a3, 4
20004e86:	223a      	add.n	a2, a2, a3
20004e88:	0020c0        	memw
20004e8b:	030222        	l8ui	a2, a2, 3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1727
    bFinish = HAL_NfcGetFinish(L3_GET_PU(ucTLun), L3_GET_LUN_IN_PU(ucTLun), ptCtrlEntry->bsNfcqPtr);

    return bFinish;
20004e8e:	0108      	l32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:701
20004e90:	412720        	srli	a2, a2, 7
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1727
20004e93:	10c112        	addi	a1, a1, 16
20004e96:	f00d      	ret.n

20004e98 <L3_IFIsFCmdFinished+0x40>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:705
    }
    else
    {
        DBG_Getch();
20004e98:	ee2001        	l32r	a0, 20000718 <_stext+0x18>
20004e9b:	0000c0        	callx0	a0
20004e9e:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1727
20004ea0:	0108      	l32i.n	a0, a1, 0
20004ea2:	10c112        	addi	a1, a1, 16
20004ea5:	f00d      	ret.n

20004ea7 <L3_IFIsFCmdFinished+0x4f>:
	...

20004ea8 <L3_IFIsFCmdFinished+0x50>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:689

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);

    if (0 == ucLevel)
    {
        bFinishFlag = (BOOL)g_pNfcCmdSts->aNfcqCmdStsReg[ucPhyPU][ucLun].bsFsLv0;
20004ea8:	324a      	add.n	a3, a2, a4
20004eaa:	800332        	l8ui	a3, a3, 128
20004ead:	3e2522        	l32i	a2, a5, 248
20004eb0:	1133c0        	slli	a3, a3, 4
20004eb3:	223a      	add.n	a2, a2, a3
20004eb5:	0020c0        	memw
20004eb8:	020222        	l8ui	a2, a2, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1727
20004ebb:	0108      	l32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:689
20004ebd:	042320        	extui	a2, a2, 3, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1727
20004ec0:	10c112        	addi	a1, a1, 16
20004ec3:	f00d      	ret.n

20004ec5 <L3_IFIsFCmdFinished+0x6d>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:693
    }
    else if (1 == ucLevel)
    {
        bFinishFlag = (BOOL)g_pNfcCmdSts->aNfcqCmdStsReg[ucPhyPU][ucLun].bsFsLv1;
20004ec5:	324a      	add.n	a3, a2, a4
20004ec7:	800332        	l8ui	a3, a3, 128
20004eca:	3e2522        	l32i	a2, a5, 248
20004ecd:	1133c0        	slli	a3, a3, 4
20004ed0:	223a      	add.n	a2, a2, a3
20004ed2:	0020c0        	memw
20004ed5:	020222        	l8ui	a2, a2, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1727
20004ed8:	0108      	l32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:693
20004eda:	412720        	srli	a2, a2, 7
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1727
20004edd:	10c112        	addi	a1, a1, 16
20004ee0:	f00d      	ret.n

20004ee2 <L3_IFIsFCmdFinished+0x8a>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:697
    }
    else if (2 == ucLevel)
    {
        bFinishFlag = (BOOL)g_pNfcCmdSts->aNfcqCmdStsReg[ucPhyPU][ucLun].bsFsLv2;
20004ee2:	324a      	add.n	a3, a2, a4
20004ee4:	800332        	l8ui	a3, a3, 128
20004ee7:	3e2522        	l32i	a2, a5, 248
20004eea:	1133c0        	slli	a3, a3, 4
20004eed:	223a      	add.n	a2, a2, a3
20004eef:	0020c0        	memw
20004ef2:	030222        	l8ui	a2, a2, 3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1727
20004ef5:	0108      	l32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:697
20004ef7:	042320        	extui	a2, a2, 3, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1727
20004efa:	10c112        	addi	a1, a1, 16
20004efd:	f00d      	ret.n

20004eff <L3_IFIsFCmdFinished+0xa7>:
	...

20004f00 <L3_FCMDQGetIntrRptr>:
L3_FCMDQGetIntrRptr():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:362
{
    FCMD_INTR_DPTR *ptDptr;

    ptDptr = (FALSE == bBak) ? g_ptFCmdIntrDptr : g_ptFCmdIntrDptrBak;

    return ptDptr->atIntrQDptr[ucTLun].ucRptr;
20004f00:	ee0731        	l32r	a3, 2000071c <_stext+0x1c>
20004f03:	1e2332        	l32i	a3, a3, 120
20004f06:	a02230        	addx4	a2, a2, a3
20004f09:	010222        	l8ui	a2, a2, 1
20004f0c:	f00d      	ret.n

20004f0e <L3_FCMDQGetIntrRptr+0xe>:
	...

20004f10 <L3_FCMDQSetIntrPptr>:
L3_FCMDQSetIntrPptr():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:436
==============================================================================*/
void L3_FCMDQSetIntrPptr(U8 ucTLun, U8 ucPptr, BOOL bBak)
{
    FCMD_INTR_DPTR *ptDptr;

    ASSERT(INVALID_DPTR == ucPptr || NFCQ_DEPTH > ucPptr);
20004f10:	ffa052        	movi	a5, 255
20004f13:	051357        	beq	a3, a5, 20004f1c <L3_FCMDQSetIntrPptr+0xc>
20004f16:	0243b6        	bltui	a3, 4, 20004f1c <L3_FCMDQSetIntrPptr+0xc>

20004f19 <L3_FCMDQSetIntrPptr+0x9>:
20004f19:	ffff06        	j	20004f19 <L3_FCMDQSetIntrPptr+0x9>

20004f1c <L3_FCMDQSetIntrPptr+0xc>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:443
    ptDptr = (FALSE == bBak) ? g_ptFCmdIntrDptr : g_ptFCmdIntrDptrBak;

    //FIRMWARE_LogInfo("TLun#%d IntrPptr#0x%x 0x%x\n", ucTLun, ptDptr->atIntrQDptr[ucTLun].ucPptr, ucPptr);
    ptDptr->atIntrQDptr[ucTLun].ucPptr = ucPptr;

    if (NFCQ_DEPTH > ucPptr)
20004f1c:	ee8f71        	l32r	a7, 20000958 <_stext+0x258>
20004f1f:	f67c      	movi.n	a6, -1
20004f21:	401200        	ssl	a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:436
==============================================================================*/
void L3_FCMDQSetIntrPptr(U8 ucTLun, U8 ucPptr, BOOL bBak)
{
    FCMD_INTR_DPTR *ptDptr;

    ASSERT(INVALID_DPTR == ucPptr || NFCQ_DEPTH > ucPptr);
20004f24:	edfe81        	l32r	a8, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:443
    ptDptr = (FALSE == bBak) ? g_ptFCmdIntrDptr : g_ptFCmdIntrDptrBak;

    //FIRMWARE_LogInfo("TLun#%d IntrPptr#0x%x 0x%x\n", ucTLun, ptDptr->atIntrQDptr[ucTLun].ucPptr, ucPptr);
    ptDptr->atIntrQDptr[ucTLun].ucPptr = ucPptr;

    if (NFCQ_DEPTH > ucPptr)
20004f27:	190c      	movi.n	a9, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:441
    ASSERT(INVALID_DPTR == ucPptr || NFCQ_DEPTH > ucPptr);

    ptDptr = (FALSE == bBak) ? g_ptFCmdIntrDptr : g_ptFCmdIntrDptrBak;

    //FIRMWARE_LogInfo("TLun#%d IntrPptr#0x%x 0x%x\n", ucTLun, ptDptr->atIntrQDptr[ucTLun].ucPptr, ucPptr);
    ptDptr->atIntrQDptr[ucTLun].ucPptr = ucPptr;
20004f29:	1e28a2        	l32i	a10, a8, 120
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:443

    if (NFCQ_DEPTH > ucPptr)
20004f2c:	a19900        	sll	a9, a9
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:441
    ASSERT(INVALID_DPTR == ucPptr || NFCQ_DEPTH > ucPptr);

    ptDptr = (FALSE == bBak) ? g_ptFCmdIntrDptr : g_ptFCmdIntrDptrBak;

    //FIRMWARE_LogInfo("TLun#%d IntrPptr#0x%x 0x%x\n", ucTLun, ptDptr->atIntrQDptr[ucTLun].ucPptr, ucPptr);
    ptDptr->atIntrQDptr[ucTLun].ucPptr = ucPptr;
20004f2f:	1f2882        	l32i	a8, a8, 124
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:443

    if (NFCQ_DEPTH > ucPptr)
20004f32:	306960        	xor	a6, a9, a6
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:441
    ASSERT(INVALID_DPTR == ucPptr || NFCQ_DEPTH > ucPptr);

    ptDptr = (FALSE == bBak) ? g_ptFCmdIntrDptr : g_ptFCmdIntrDptrBak;

    //FIRMWARE_LogInfo("TLun#%d IntrPptr#0x%x 0x%x\n", ucTLun, ptDptr->atIntrQDptr[ucTLun].ucPptr, ucPptr);
    ptDptr->atIntrQDptr[ucTLun].ucPptr = ucPptr;
20004f35:	838a40        	moveqz	a8, a10, a4
20004f38:	a08280        	addx4	a8, a2, a8
20004f3b:	024832        	s8i	a3, a8, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:443

    if (NFCQ_DEPTH > ucPptr)
20004f3e:	3243f6        	bgeui	a3, 4, 20004f74 <L3_FCMDQSetIntrPptr+0x64>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:262
void L3_SchSetStsBit(U8 ucTLun, STS_BITMAP_TYPE eStsBmpType)
{
    U8 ucPU = L3_GET_PU(ucTLun);
    U8 ucLunInPU = L3_GET_LUN_IN_PU(ucTLun);

    l_aTLunStsBmp[eStsBmpType][ucLunInPU] |= 1 << ucPU;
20004f41:	0020c0        	memw
20004f44:	7f2732        	l32i	a3, a7, 0x1fc
20004f47:	203390        	or	a3, a3, a9
20004f4a:	0020c0        	memw
20004f4d:	7f6732        	s32i	a3, a7, 0x1fc
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:409
void L3_SchClrArbBit(U8 ucTLun, ARB_BITMAP_TYPE eArbBmpType)
{
    U8 ucPU = L3_GET_PU(ucTLun);
    U8 ucLunInPU = L3_GET_LUN_IN_PU(ucTLun);

    l_aTLunArbBmp[eArbBmpType][ucLunInPU] &= ~(1 << ucPU);
20004f50:	ee33b1        	l32r	a11, 2000081c <_stext+0x11c>
20004f53:	0020c0        	memw
20004f56:	7f2b22        	l32i	a2, a11, 0x1fc
20004f59:	102260        	and	a2, a2, a6
20004f5c:	0020c0        	memw
20004f5f:	7f6b22        	s32i	a2, a11, 0x1fc
20004f62:	0020c0        	memw
20004f65:	872ba2        	l32i	a10, a11, 0x21c
20004f68:	10aa60        	and	a10, a10, a6
20004f6b:	0020c0        	memw
20004f6e:	876ba2        	s32i	a10, a11, 0x21c
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:455
    else
    {
        L3_SchClrStsBit(ucTLun, STS_BMP_PEND);
    }

    return;
20004f71:	f00d      	ret.n

20004f73 <L3_FCMDQSetIntrPptr+0x63>:
	...

20004f74 <L3_FCMDQSetIntrPptr+0x64>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:283
void L3_SchClrStsBit(U8 ucTLun, STS_BITMAP_TYPE eStsBmpType)
{
    U8 ucPU = L3_GET_PU(ucTLun);
    U8 ucLunInPU = L3_GET_LUN_IN_PU(ucTLun);

    l_aTLunStsBmp[eStsBmpType][ucLunInPU] &= ~(1 << ucPU);
20004f74:	0020c0        	memw
20004f77:	7f2742        	l32i	a4, a7, 0x1fc
20004f7a:	104460        	and	a4, a4, a6
20004f7d:	0020c0        	memw
20004f80:	7f6742        	s32i	a4, a7, 0x1fc
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:455
20004f83:	f00d      	ret.n

20004f85 <L3_FCMDQSetIntrPptr+0x75>:
20004f85:	000000                                        ...

20004f88 <L3_FCMDQGetIntrWptr>:
L3_FCMDQGetIntrWptr():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:317
Usage      : 
History    : 
    1. 2016.7.15 JasonGuo create function
==============================================================================*/
U8 L3_FCMDQGetIntrWptr(U8 ucTLun, BOOL bBak)
{
20004f88:	ede541        	l32r	a4, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:322
    FCMD_INTR_DPTR *ptDptr;

    ptDptr = (FALSE == bBak) ? g_ptFCmdIntrDptr : g_ptFCmdIntrDptrBak;
    
    return ptDptr->atIntrQDptr[ucTLun].ucWptr;
20004f8b:	1e2452        	l32i	a5, a4, 120
20004f8e:	1f2442        	l32i	a4, a4, 124
20004f91:	834530        	moveqz	a4, a5, a3
20004f94:	a02240        	addx4	a2, a2, a4
20004f97:	000222        	l8ui	a2, a2, 0
20004f9a:	f00d      	ret.n

20004f9c <L3_FCMDQGetIntrCtrlEntry>:
L3_FCMDQGetIntrCtrlEntry():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:555
==============================================================================*/
FCMD_INTR_CTRL_ENTRY *L3_FCMDQGetIntrCtrlEntry(U8 ucTLun, U8 ucLevel, BOOL bBak)
{
    FCMD_INTR_CTRL *ptCtrl;
    
    ASSERT(ucLevel < NFCQ_DEPTH);
20004f9c:	0443b6        	bltui	a3, 4, 20004fa4 <L3_FCMDQGetIntrCtrlEntry+0x8>

20004f9f <L3_FCMDQGetIntrCtrlEntry+0x3>:
20004f9f:	ffff06        	j	20004f9f <L3_FCMDQGetIntrCtrlEntry+0x3>

20004fa2 <L3_FCMDQGetIntrCtrlEntry+0x6>:
	...

20004fa4 <L3_FCMDQGetIntrCtrlEntry+0x8>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:557

    ptCtrl = (FALSE==bBak) ? g_ptFCmdIntrCtrl : g_ptFCmdIntrCtrlBak;
20004fa4:	edde61        	l32r	a6, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:559
    
    return &ptCtrl->atCtrlQ[ucTLun].atCtrl[ucLevel];    
20004fa7:	a02220        	addx4	a2, a2, a2
20004faa:	1a2652        	l32i	a5, a6, 104
20004fad:	1b2662        	l32i	a6, a6, 108
20004fb0:	1122b0        	slli	a2, a2, 5
20004fb3:	836540        	moveqz	a6, a5, a4
20004fb6:	262a      	add.n	a2, a6, a2
20004fb8:	a05330        	addx4	a5, a3, a3
20004fbb:	b02520        	addx8	a2, a5, a2
20004fbe:	f00d      	ret.n

20004fc0 <L3_FCMDQGetIntrPptr>:
L3_FCMDQGetIntrPptr():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:413
Usage      : 
History    : 
    1. 2016.7.15 JasonGuo create function
==============================================================================*/
U8 L3_FCMDQGetIntrPptr(U8 ucTLun, BOOL bBak)
{
20004fc0:	edd741        	l32r	a4, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:418
    FCMD_INTR_DPTR *ptDptr;

    ptDptr = (FALSE == bBak) ? g_ptFCmdIntrDptr : g_ptFCmdIntrDptrBak;
    
    return ptDptr->atIntrQDptr[ucTLun].ucPptr;
20004fc3:	1e2452        	l32i	a5, a4, 120
20004fc6:	1f2442        	l32i	a4, a4, 124
20004fc9:	834530        	moveqz	a4, a5, a3
20004fcc:	a02240        	addx4	a2, a2, a4
20004fcf:	020222        	l8ui	a2, a2, 2
20004fd2:	f00d      	ret.n

20004fd4 <L3_IFSendFCmd>:
L3_IFSendFCmd():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1688
Usage      : 
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
BOOL L3_IFSendFCmd(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
20004fd4:	edd291        	l32r	a9, 2000071c <_stext+0x1c>
20004fd7:	01a032        	movi	a3, 1
20004fda:	c0c112        	addi	a1, a1, -64
20004fdd:	096102        	s32i	a0, a1, 36
20004fe0:	0a61c2        	s32i	a12, a1, 40
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:205
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
BOOL L3_IFIsSpecailFCmd(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    BOOL bIsSpecailFCmd;
    U8 ucReqType = ptCtrlEntry->ptReqEntry->bsReqType;
20004fe3:	0278      	l32i.n	a7, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1688
Usage      : 
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
BOOL L3_IFSendFCmd(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
20004fe5:	c1e9      	s32i.n	a14, a1, 48
20004fe7:	b1d9      	s32i.n	a13, a1, 44
20004fe9:	edcee1        	l32r	a14, 20000724 <_stext+0x24>
20004fec:	02dd      	mov.n	a13, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:205
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
BOOL L3_IFIsSpecailFCmd(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    BOOL bIsSpecailFCmd;
    U8 ucReqType = ptCtrlEntry->ptReqEntry->bsReqType;
20004fee:	0728      	l32i.n	a2, a7, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1688
Usage      : 
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
BOOL L3_IFSendFCmd(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
20004ff0:	0c0c      	movi.n	a12, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:207
BOOL L3_IFIsSpecailFCmd(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    BOOL bIsSpecailFCmd;
    U8 ucReqType = ptCtrlEntry->ptReqEntry->bsReqType;

    if (FCMD_REQ_TYPE_CHK_IDLE == ucReqType || FCMD_REQ_TYPE_SELF_TEST == ucReqType)
20004ff2:	250220        	extui	a0, a2, 18, 3
20004ff5:	443026        	beqi	a0, 3, 2000503d <L3_IFSendFCmd+0x69>
20004ff8:	254066        	bnei	a0, 4, 20005021 <L3_IFSendFCmd+0x4d>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:237

    #ifdef SIM
    L3_DbgFCmdCntAdd(ptCtrlEntry);
    #endif

    switch (ucReqType)
20004ffb:	3e3026        	beqi	a0, 3, 2000503d <L3_IFSendFCmd+0x69>
20004ffe:	fcc042        	addi	a4, a0, -4
20005001:	0df416        	beqz	a4, 200050e4 <L3_IFSendFCmd+0x110>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:251
            L3_IFHandleSelfTest(ptCtrlEntry);
            break;
        }
        default:
        {
            DBG_Printf("L3_Specail:0x%x\n", (U32)ptCtrlEntry);
20005004:	edea21        	l32r	a2, 200007ac <_stext+0xac>
20005007:	0d3d      	mov.n	a3, a13
20005009:	05c585        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1706
        #ifdef SIM
        L3_DbgFCmdPrint(ptCtrlEntry, (TRUE == bResult) ? "Normal_Success" : "Normal_Fail");
        #endif
    }
    
    return bResult;
2000500c:	a1c8      	l32i.n	a12, a1, 40
2000500e:	b1d8      	l32i.n	a13, a1, 44
20005010:	c1e8      	l32i.n	a14, a1, 48
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:252
            break;
        }
        default:
        {
            DBG_Printf("L3_Specail:0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
20005012:	edc101        	l32r	a0, 20000718 <_stext+0x18>
20005015:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1693
{
    BOOL bResult = TRUE;

    if (TRUE == L3_IFIsSpecailFCmd(ptCtrlEntry))
    {
        L3_IFSendSpecailFCmd(ptCtrlEntry);
20005018:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1706
        #ifdef SIM
        L3_DbgFCmdPrint(ptCtrlEntry, (TRUE == bResult) ? "Normal_Success" : "Normal_Fail");
        #endif
    }
    
    return bResult;
2000501a:	9108      	l32i.n	a0, a1, 36
2000501c:	40c112        	addi	a1, a1, 64
2000501f:	f00d      	ret.n

20005021 <L3_IFSendFCmd+0x4d>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1657

    #ifdef SIM
    L3_DbgFCmdCntAdd(ptCtrlEntry);
    #endif

    bResult = L3_IFAllocResource(ptCtrlEntry);
20005021:	202dd0        	or	a2, a13, a13
20005024:	fe3985        	call0	200033c0 <L3_IFAllocResource..BF_1482204275>
20005027:	086122        	s32i	a2, a1, 32
2000502a:	ffc252        	addi	a5, a2, -1
2000502d:	0d5516        	beqz	a5, 20005106 <L3_IFSendFCmd+0x132>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1706
        #ifdef SIM
        L3_DbgFCmdPrint(ptCtrlEntry, (TRUE == bResult) ? "Normal_Success" : "Normal_Fail");
        #endif
    }
    
    return bResult;
20005030:	a1c8      	l32i.n	a12, a1, 40
20005032:	b1d8      	l32i.n	a13, a1, 44
20005034:	c1e8      	l32i.n	a14, a1, 48
20005036:	9108      	l32i.n	a0, a1, 36
20005038:	40c112        	addi	a1, a1, 64
2000503b:	f00d      	ret.n

2000503d <L3_IFSendFCmd+0x69>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:135
==============================================================================*/
LOCAL void L3_IFHandleChkIdle(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    U8 ucTLun = ptReqEntry->bsTLun;
    U8 ucReqPtr = ptReqEntry->bsReqPtr;
2000503d:	15a020        	extui	a10, a2, 16, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:136
    FCMD_REQ_PRI eFCmdPri = ptReqEntry->bsFCmdPri;
20005040:	04df20        	extui	a13, a2, 15, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:134
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
LOCAL void L3_IFHandleChkIdle(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    U8 ucTLun = ptReqEntry->bsTLun;
20005043:	0007b2        	l8ui	a11, a7, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:95
==============================================================================*/
BOOL L3_IFIsAllFCmdIntrQEmpty(void)
{
    U8 ucTLun;

    for (ucTLun = 0; ucTLun < SUBSYSTEM_LUN_NUM; ucTLun++)
20005046:	edfe01        	l32r	a0, 20000840 <_stext+0x140>
20005049:	3e2982        	l32i	a8, a9, 248
2000504c:	e968      	l32i.n	a6, a9, 56
2000504e:	00a042        	movi	a4, 0
20005051:	649676        	loopnez	a6, 200050b9 <L3_IFSendFCmd+0xe5>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:608
    20151029    abby    add ucLun para
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetEmpty(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20005054:	742040        	extui	a2, a4, 0, 8
20005057:	52ea      	add.n	a5, a2, a14
20005059:	800552        	l8ui	a5, a5, 128
2000505c:	1155c0        	slli	a5, a5, 4
2000505f:	585a      	add.n	a5, a8, a5
20005061:	0020c0        	memw
20005064:	000552        	l8ui	a5, a5, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:243
BOOL L3_SchGetStsBit(U8 ucTLun, STS_BITMAP_TYPE eStsBmpType)
{
    U8 ucPU = L3_GET_PU(ucTLun);
    U8 ucLunInPU = L3_GET_LUN_IN_PU(ucTLun);

    return (0==(l_aTLunStsBmp[eStsBmpType][ucLunInPU] & (1<<ucPU))) ? 0 : 1;
20005067:	036d      	mov.n	a6, a3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:67
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
LOCAL BOOL L3_IFIsFCmdIntrQEmpty(U8 ucTLun)
{
    if ((TRUE == HAL_NfcGetEmpty(L3_GET_PU(ucTLun), L3_GET_LUN_IN_PU(ucTLun)))
20005069:	506527        	bbci	a5, 2, 200050bd <L3_IFSendFCmd+0xe9>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:243
2000506c:	401200        	ssl	a2
2000506f:	a12300        	sll	a2, a3
20005072:	0020c0        	memw
20005075:	7f2052        	l32i	a5, a0, 0x1fc
20005078:	105520        	and	a5, a5, a2
2000507b:	836c50        	moveqz	a6, a12, a5
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:67
2000507e:	3b1626        	beqi	a6, 1, 200050bd <L3_IFSendFCmd+0xe9>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:243
20005081:	036d      	mov.n	a6, a3
20005083:	0020c0        	memw
20005086:	772052        	l32i	a5, a0, 0x1dc
20005089:	105520        	and	a5, a5, a2
2000508c:	836c50        	moveqz	a6, a12, a5
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:67
2000508f:	2a1626        	beqi	a6, 1, 200050bd <L3_IFSendFCmd+0xe9>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:243
20005092:	036d      	mov.n	a6, a3
20005094:	0020c0        	memw
20005097:	7b2052        	l32i	a5, a0, 0x1ec
2000509a:	105520        	and	a5, a5, a2
2000509d:	836c50        	moveqz	a6, a12, a5
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:67
200050a0:	191626        	beqi	a6, 1, 200050bd <L3_IFSendFCmd+0xe9>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:243
200050a3:	036d      	mov.n	a6, a3
200050a5:	0020c0        	memw
200050a8:	832052        	l32i	a5, a0, 0x20c
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:95
==============================================================================*/
BOOL L3_IFIsAllFCmdIntrQEmpty(void)
{
    U8 ucTLun;

    for (ucTLun = 0; ucTLun < SUBSYSTEM_LUN_NUM; ucTLun++)
200050ab:	441b      	addi.n	a4, a4, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:243
200050ad:	105520        	and	a5, a5, a2
200050b0:	836c50        	moveqz	a6, a12, a5
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:67
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
LOCAL BOOL L3_IFIsFCmdIntrQEmpty(U8 ucTLun)
{
    if ((TRUE == HAL_NfcGetEmpty(L3_GET_PU(ucTLun), L3_GET_LUN_IN_PU(ucTLun)))
200050b3:	061626        	beqi	a6, 1, 200050bd <L3_IFSendFCmd+0xe9>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:95
==============================================================================*/
BOOL L3_IFIsAllFCmdIntrQEmpty(void)
{
    U8 ucTLun;

    for (ucTLun = 0; ucTLun < SUBSYSTEM_LUN_NUM; ucTLun++)
200050b6:	744040        	extui	a4, a4, 0, 8

200050b9 <L3_IFSendFCmd+0xe5>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:140
    U8 ucReqPtr = ptReqEntry->bsReqPtr;
    FCMD_REQ_PRI eFCmdPri = ptReqEntry->bsFCmdPri;
    
    if (TRUE == L3_IFIsIdleDone())
    {
        *(BOOL*)ptReqEntry->ulReqStsAddr = TRUE;
200050b9:	1758      	l32i.n	a5, a7, 4
200050bb:	0539      	s32i.n	a3, a5, 0

200050bd <L3_IFSendFCmd+0xe9>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:143
    }

    ASSERT(FCMD_REQ_STS_POP == L2_FCMDQGetReqSts(ucTLun, eFCmdPri, ucReqPtr));
200050bd:	f928      	l32i.n	a2, a9, 60
200050bf:	0bda      	add.n	a0, a11, a13
200050c1:	a00020        	addx4	a0, a0, a2
200050c4:	0a0a      	add.n	a0, a10, a0
200050c6:	000062        	l8ui	a6, a0, 0
200050c9:	033626        	beqi	a6, 3, 200050d0 <L3_IFSendFCmd+0xfc>
200050cc:	ffff06        	j	200050cc <L3_IFSendFCmd+0xf8>

200050cf <L3_IFSendFCmd+0xfb>:
	...

200050d0 <L3_IFSendFCmd+0xfc>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1693
{
    BOOL bResult = TRUE;

    if (TRUE == L3_IFIsSpecailFCmd(ptCtrlEntry))
    {
        L3_IFSendSpecailFCmd(ptCtrlEntry);
200050d0:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1706
        #ifdef SIM
        L3_DbgFCmdPrint(ptCtrlEntry, (TRUE == bResult) ? "Normal_Success" : "Normal_Fail");
        #endif
    }
    
    return bResult;
200050d2:	b1d8      	l32i.n	a13, a1, 44
D:\IM_3D_TLC\firmware\algorithm\L2/L2_FCMDQ.c:216
200050d4:	0040c2        	s8i	a12, a0, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1706
200050d7:	c1e8      	l32i.n	a14, a1, 48
200050d9:	a1c8      	l32i.n	a12, a1, 40
200050db:	9108      	l32i.n	a0, a1, 36
200050dd:	40c112        	addi	a1, a1, 64
200050e0:	f00d      	ret.n

200050e2 <L3_IFSendFCmd+0x10e>:
	...

200050e4 <L3_IFSendFCmd+0x110>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:178
==============================================================================*/
LOCAL void L3_IFHandleSelfTest(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    U8 ucTLun = ptReqEntry->bsTLun;
    U8 ucReqPtr = ptReqEntry->bsReqPtr;
200050e4:	150020        	extui	a0, a2, 16, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:186
    if (TRUE == L3_IFIsSelfTestDone())
    {
        *(BOOL*)ptReqEntry->ulReqStsAddr = TRUE;
    }
    
    ASSERT(FCMD_REQ_STS_POP == L2_FCMDQGetReqSts(ucTLun, eFCmdPri, ucReqPtr));
200050e7:	f958      	l32i.n	a5, a9, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:179
LOCAL void L3_IFHandleSelfTest(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    U8 ucTLun = ptReqEntry->bsTLun;
    U8 ucReqPtr = ptReqEntry->bsReqPtr;
    FCMD_REQ_PRI eFCmdPri = ptReqEntry->bsFCmdPri;
200050e9:	046f20        	extui	a6, a2, 15, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:183

    if (TRUE == L3_IFIsSelfTestDone())
    {
        *(BOOL*)ptReqEntry->ulReqStsAddr = TRUE;
200050ec:	1788      	l32i.n	a8, a7, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:177
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
LOCAL void L3_IFHandleSelfTest(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    U8 ucTLun = ptReqEntry->bsTLun;
200050ee:	000742        	l8ui	a4, a7, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:183
    U8 ucReqPtr = ptReqEntry->bsReqPtr;
    FCMD_REQ_PRI eFCmdPri = ptReqEntry->bsFCmdPri;

    if (TRUE == L3_IFIsSelfTestDone())
    {
        *(BOOL*)ptReqEntry->ulReqStsAddr = TRUE;
200050f1:	0839      	s32i.n	a3, a8, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:186
    }
    
    ASSERT(FCMD_REQ_STS_POP == L2_FCMDQGetReqSts(ucTLun, eFCmdPri, ucReqPtr));
200050f3:	446a      	add.n	a4, a4, a6
200050f5:	a04450        	addx4	a4, a4, a5
200050f8:	004a      	add.n	a0, a0, a4
200050fa:	000042        	l8ui	a4, a0, 0
200050fd:	cf3426        	beqi	a4, 3, 200050d0 <L3_IFSendFCmd+0xfc>
20005100:	ffff06        	j	20005100 <L3_IFSendFCmd+0x12c>

20005103 <L3_IFSendFCmd+0x12f>:
20005103:	000000                                        ...

20005106 <L3_IFSendFCmd+0x132>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1660
    #endif

    bResult = L3_IFAllocResource(ptCtrlEntry);
    if (TRUE == bResult)
    {
        L3_IFAdaptFCmd(ptCtrlEntry);
20005106:	0d2d      	mov.n	a2, a13
20005108:	fe0185        	call0	20003124 <L3_IFAdaptFCmd..HF_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1662

        L3_IFConfigNFCQ(ptCtrlEntry);
2000510b:	0d2d      	mov.n	a2, a13
2000510d:	fddb45        	call0	20002ec4 <L3_IFConfigNFCQ..FG_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1664

        L3_IFUpdtIntrCtrl(ptCtrlEntry);
20005110:	0d2d      	mov.n	a2, a13
20005112:	fdd345        	call0	20002e48 <L3_IFUpdtIntrCtrl..HG_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1627
LOCAL void L3_IFUpdtFlashMonitor(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U8 ucTLun;
    FCMD_REQ_ENTRY *ptReqEntry;

    ptReqEntry = ptCtrlEntry->ptReqEntry;
20005115:	0d38      	l32i.n	a3, a13, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1630
    ucTLun = ptReqEntry->bsTLun;
    
    L3_FMUpdtUsrOpCnt(ucTLun, ptReqEntry->bsReqType);
20005117:	0348      	l32i.n	a4, a3, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1628
{
    U8 ucTLun;
    FCMD_REQ_ENTRY *ptReqEntry;

    ptReqEntry = ptCtrlEntry->ptReqEntry;
    ucTLun = ptReqEntry->bsTLun;
20005119:	000302        	l8ui	a0, a3, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1630
    
    L3_FMUpdtUsrOpCnt(ucTLun, ptReqEntry->bsReqType);
2000511c:	254240        	extui	a4, a4, 18, 3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:439
History    : 
    1. 2016.7.28 JasonGuo create function
==============================================================================*/
void SWITCH_CASE_TXT L3_FMUpdtUsrOpCnt(U8 ucTLun, U8 ucFCmdType)
{
    switch (ucFCmdType)
2000511f:	105416        	beqz	a4, 20005228 <L3_IFSendFCmd+0x254>
20005122:	540b      	addi.n	a5, a4, -1
20005124:	115516        	beqz	a5, 2000523d <L3_IFSendFCmd+0x269>
20005127:	fec462        	addi	a6, a4, -2
2000512a:	126616        	beqz	a6, 20005254 <L3_IFSendFCmd+0x280>
2000512d:	d139      	s32i.n	a3, a1, 52
2000512f:	7109      	s32i.n	a0, a1, 28
20005131:	117426        	beqi	a4, 7, 20005146 <L3_IFSendFCmd+0x172>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:462
        {
            break;
        }
        default:
        {
            DBG_Printf("TLun%d FCmdType%d Error.\n", ucTLun, ucFCmdType);
20005134:	ee0621        	l32r	a2, 2000094c <_stext+0x24c>
20005137:	003d      	mov.n	a3, a0
20005139:	05b285        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:463
            DBG_Getch();
2000513c:	ed7701        	l32r	a0, 20000718 <_stext+0x18>
2000513f:	0000c0        	callx0	a0
20005142:	7108      	l32i.n	a0, a1, 28
20005144:	d138      	l32i.n	a3, a1, 52
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1533
LOCAL void L3_IFTriggerNFC(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U8 ucTLun, ucCmdType, ucXoreId;
    BOOL bIsXorParityWrEn = FALSE;
    FLASH_ADDR tFlashAddr;
    BOOL bSLCMode = (FCMD_REQ_SLC_BLK == ptCtrlEntry->ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
20005146:	190c      	movi.n	a9, 1
20005148:	080c      	movi.n	a8, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:265
History    : 
    1. 2016.7.28 JasonGuo create function
==============================================================================*/
void L3_FMSetPhyBlk(U8 ucTLun, U16 usPhyBlk)
{
    l_ptFMIntrMgr[ucTLun].bsPhyBlk = usPhyBlk;
2000514a:	905000        	addx2	a5, a0, a0
2000514d:	ed7361        	l32r	a6, 2000071c <_stext+0x1c>
20005150:	3378      	l32i.n	a7, a3, 12
20005152:	212662        	l32i	a6, a6, 132
20005155:	947a70        	extui	a7, a7, 10, 10
20005158:	a05560        	addx4	a5, a5, a6
2000515b:	005572        	s16i	a7, a5, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:281
History    : 
    1. 2016.7.28 JasonGuo create function
==============================================================================*/
void L3_FMSetPhyPage(U8 ucTLun, U16 usPhyPage)
{
    l_ptFMIntrMgr[ucTLun].bsPhyPage = usPhyPage;
2000515e:	021d62        	l16ui	a6, a13, 4
20005161:	015562        	s16i	a6, a5, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:297
History    : 
    1. 2016.7.28 JasonGuo create function
==============================================================================*/
void L3_FMSetCmdType(U8 ucTLun, U8 ucCmdType)
{
    l_ptFMIntrMgr[ucTLun].bsCmdType = ucCmdType;
20005164:	060d42        	l8ui	a4, a13, 6
20005167:	044542        	s8i	a4, a5, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1537
    
    ucTLun = ptCtrlEntry->ptReqEntry->bsTLun;
    ucCmdType = ptCtrlEntry->bsCmdType;
    ucXoreId = ptCtrlEntry->bsXoreId;
2000516a:	2db8      	l32i.n	a11, a13, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1533
LOCAL void L3_IFTriggerNFC(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U8 ucTLun, ucCmdType, ucXoreId;
    BOOL bIsXorParityWrEn = FALSE;
    FLASH_ADDR tFlashAddr;
    BOOL bSLCMode = (FCMD_REQ_SLC_BLK == ptCtrlEntry->ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
2000516c:	0d78      	l32i.n	a7, a13, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1536
    
    ucTLun = ptCtrlEntry->ptReqEntry->bsTLun;
    ucCmdType = ptCtrlEntry->bsCmdType;
2000516e:	060d22        	l8ui	a2, a13, 6
20005171:	5129      	s32i.n	a2, a1, 20
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1533
LOCAL void L3_IFTriggerNFC(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U8 ucTLun, ucCmdType, ucXoreId;
    BOOL bIsXorParityWrEn = FALSE;
    FLASH_ADDR tFlashAddr;
    BOOL bSLCMode = (FCMD_REQ_SLC_BLK == ptCtrlEntry->ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
20005173:	6179      	s32i.n	a7, a1, 24
20005175:	47a8      	l32i.n	a10, a7, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1537
    
    ucTLun = ptCtrlEntry->ptReqEntry->bsTLun;
    ucCmdType = ptCtrlEntry->bsCmdType;
    ucXoreId = ptCtrlEntry->bsXoreId;
20005177:	41b5b0        	srli	a11, a11, 5
2000517a:	31b9      	s32i.n	a11, a1, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1535
    U8 ucTLun, ucCmdType, ucXoreId;
    BOOL bIsXorParityWrEn = FALSE;
    FLASH_ADDR tFlashAddr;
    BOOL bSLCMode = (FCMD_REQ_SLC_BLK == ptCtrlEntry->ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
    
    ucTLun = ptCtrlEntry->ptReqEntry->bsTLun;
2000517c:	0007d2        	l8ui	a13, a7, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1533
LOCAL void L3_IFTriggerNFC(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U8 ucTLun, ucCmdType, ucXoreId;
    BOOL bIsXorParityWrEn = FALSE;
    FLASH_ADDR tFlashAddr;
    BOOL bSLCMode = (FCMD_REQ_SLC_BLK == ptCtrlEntry->ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
2000517f:	15a0a0        	extui	a10, a10, 16, 2
20005182:	8389a0        	moveqz	a8, a9, a10
20005185:	4189      	s32i.n	a8, a1, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:126

// Use this to detect some special commands, such as the command containing XOR data of SLC write,
// the 1st program stage of the command containing XOR data of TLC write.
BOOL L3_IsDataDisperse(const FCMD_REQ_ENTRY *ptReqEntry)
{
    ASSERT(ptReqEntry != NULL);
20005187:	099716        	beqz	a7, 20005224 <L3_IFSendFCmd+0x250>
2000518a:	202770        	or	a2, a7, a7
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:128

    if ((TRUE == L3_IsNeedDoXor(ptReqEntry)) && (TRUE == ptReqEntry->bsContainXorData))
2000518d:	fdc485        	call0	20002dd8 <L3_IsNeedDoXor>
20005190:	ffc272        	addi	a7, a2, -1
20005193:	0d2716        	beqz	a7, 20005269 <L3_IFSendFCmd+0x295>
20005196:	000c      	movi.n	a0, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1541
    ucCmdType = ptCtrlEntry->bsCmdType;
    ucXoreId = ptCtrlEntry->bsXoreId;
    bIsXorParityWrEn = (TRUE == L3_IsDataDisperse(ptCtrlEntry->ptReqEntry)) ? TRUE : FALSE;
    tFlashAddr.ucPU = L3_GET_PU(ucTLun);
    tFlashAddr.ucLun = L3_GET_LUN_IN_PU(ucTLun);
    tFlashAddr.bsSLCMode = bSLCMode;
20005198:	4188      	l32i.n	a8, a1, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:931
    20151028    abby    modify to meet VT3533
------------------------------------------------------------------------------*/
LOCAL void HAL_NfcSetTriggerReg(FLASH_ADDR *pFlashAddr, U8 ucReqType, BOOL bIsXorParityWriteCmd, U8 ucXorId)
{
    U8 ucPhyPU, ucLun, ucWp;
    NFC_TRIGGER_REG tNfcTriggerReg = {0};
2000519a:	a18b      	addi.n	a10, a1, 8
2000519c:	eded91        	l32r	a9, 20000950 <_stext+0x250>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1539
    
    ucTLun = ptCtrlEntry->ptReqEntry->bsTLun;
    ucCmdType = ptCtrlEntry->bsCmdType;
    ucXoreId = ptCtrlEntry->bsXoreId;
    bIsXorParityWrEn = (TRUE == L3_IsDataDisperse(ptCtrlEntry->ptReqEntry)) ? TRUE : FALSE;
    tFlashAddr.ucPU = L3_GET_PU(ucTLun);
2000519f:	0041d2        	s8i	a13, a1, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
    20151028     abby    add parameter ucLun
------------------------------------------------------------------------------*/
U8 HAL_NfcGetWP(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
200051a2:	ed5e51        	l32r	a5, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1540
    tFlashAddr.ucLun = L3_GET_LUN_IN_PU(ucTLun);
200051a5:	0141c2        	s8i	a12, a1, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
200051a8:	3e2552        	l32i	a5, a5, 248
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1541
    tFlashAddr.bsSLCMode = bSLCMode;
200051ab:	0168      	l32i.n	a6, a1, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:931
    20151028    abby    modify to meet VT3533
------------------------------------------------------------------------------*/
LOCAL void HAL_NfcSetTriggerReg(FLASH_ADDR *pFlashAddr, U8 ucReqType, BOOL bIsXorParityWriteCmd, U8 ucXorId)
{
    U8 ucPhyPU, ucLun, ucWp;
    NFC_TRIGGER_REG tNfcTriggerReg = {0};
200051ad:	000992        	l8ui	a9, a9, 0
200051b0:	004a92        	s8i	a9, a10, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1541
200051b3:	b04864        	insbits	a6, a8, 20, 20
200051b6:	747060        	extui	a7, a6, 0, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
    20151028     abby    add parameter ucLun
------------------------------------------------------------------------------*/
U8 HAL_NfcGetWP(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
200051b9:	77ea      	add.n	a7, a7, a14
200051bb:	800772        	l8ui	a7, a7, 128
200051be:	746860        	extui	a6, a6, 8, 8
200051c1:	a04760        	addx4	a4, a7, a6
200051c4:	a04450        	addx4	a4, a4, a5
200051c7:	0020c0        	memw
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:944
#if (defined(XTMP) || defined(SIM))
    NfcM_ISetCmdCode(ucPhyPU, ucLun, ucWp, ucReqType);
    NfcM_ISetCmdMode(ucPhyPU, ucLun, ucWp, bsSLCMode);
#endif

    tNfcTriggerReg.bsCmdType = g_aPrcqTable[ucReqType].bsTrigType;
200051ca:	ed9691        	l32r	a9, 20000824 <_stext+0x124>
200051cd:	5188      	l32i.n	a8, a1, 20
200051cf:	fca052        	movi	a5, 252
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
    20151028     abby    add parameter ucLun
------------------------------------------------------------------------------*/
U8 HAL_NfcGetWP(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
200051d2:	000442        	l8ui	a4, a4, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:944
#if (defined(XTMP) || defined(SIM))
    NfcM_ISetCmdCode(ucPhyPU, ucLun, ucWp, ucReqType);
    NfcM_ISetCmdMode(ucPhyPU, ucLun, ucWp, bsSLCMode);
#endif

    tNfcTriggerReg.bsCmdType = g_aPrcqTable[ucReqType].bsTrigType;
200051d5:	080132        	l8ui	a3, a1, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
    20151028     abby    add parameter ucLun
------------------------------------------------------------------------------*/
U8 HAL_NfcGetWP(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
200051d8:	414640        	srli	a4, a4, 6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:944
#if (defined(XTMP) || defined(SIM))
    NfcM_ISetCmdCode(ucPhyPU, ucLun, ucWp, ucReqType);
    NfcM_ISetCmdMode(ucPhyPU, ucLun, ucWp, bsSLCMode);
#endif

    tNfcTriggerReg.bsCmdType = g_aPrcqTable[ucReqType].bsTrigType;
200051db:	103350        	and	a3, a3, a5
200051de:	a08890        	addx4	a8, a8, a9
200051e1:	4888      	l32i.n	a8, a8, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:951
    
    /* CE_SEL = 1 only when CE decode enable & Logic LUN = 2/3 & LUN_PER_CE = 2 */
    tNfcTriggerReg.bsCESel = (0 == NFC_CE_PER_PU_BITS) ? 0 : ucLun / LUN_PER_CE;

    /* For write command, 1-stand for write XOR parity  */ 
    if ((NFC_WRITE_CMD == tNfcTriggerReg.bsCmdType) &&(FALSE != bIsXorParityWriteCmd))
200051e3:	f3a052        	movi	a5, 243
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:944
#if (defined(XTMP) || defined(SIM))
    NfcM_ISetCmdCode(ucPhyPU, ucLun, ucWp, ucReqType);
    NfcM_ISetCmdMode(ucPhyPU, ucLun, ucWp, bsSLCMode);
#endif

    tNfcTriggerReg.bsCmdType = g_aPrcqTable[ucReqType].bsTrigType;
200051e6:	419980        	srli	a9, a8, 9
200051e9:	010934        	insbits	a3, a9, 0, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:951
    
    /* CE_SEL = 1 only when CE decode enable & Logic LUN = 2/3 & LUN_PER_CE = 2 */
    tNfcTriggerReg.bsCESel = (0 == NFC_CE_PER_PU_BITS) ? 0 : ucLun / LUN_PER_CE;

    /* For write command, 1-stand for write XOR parity  */ 
    if ((NFC_WRITE_CMD == tNfcTriggerReg.bsCmdType) &&(FALSE != bIsXorParityWriteCmd))
200051ec:	103350        	and	a3, a3, a5
200051ef:	149030        	extui	a9, a3, 0, 2
200051f2:	082916        	beqz	a9, 20005278 <L3_IFSendFCmd+0x2a4>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:967
    }
#endif
    /* For Normal or PIO cmd: 0-Normal; 1-PIO  */
    else  
    {
        tNfcTriggerReg.bsExtCmd = g_aPrcqTable[ucReqType].bsIsPioCmd;
200051f5:	efa002        	movi	a0, 239
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:970
    }

    *(volatile U8*)&g_pNfcTrigger->aNfcTriggerReg[ucPhyPU][ucLun][ucWp] = *(U8*)&tNfcTriggerReg;
200051f8:	276a      	add.n	a2, a7, a6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:967
    }
#endif
    /* For Normal or PIO cmd: 0-Normal; 1-PIO  */
    else  
    {
        tNfcTriggerReg.bsExtCmd = g_aPrcqTable[ucReqType].bsIsPioCmd;
200051fa:	100300        	and	a0, a3, a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:970
    }

    *(volatile U8*)&g_pNfcTrigger->aNfcTriggerReg[ucPhyPU][ucLun][ucWp] = *(U8*)&tNfcTriggerReg;
200051fd:	ed4731        	l32r	a3, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:967
    }
#endif
    /* For Normal or PIO cmd: 0-Normal; 1-PIO  */
    else  
    {
        tNfcTriggerReg.bsExtCmd = g_aPrcqTable[ucReqType].bsIsPioCmd;
20005200:	41a880        	srli	a10, a8, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:970
    }

    *(volatile U8*)&g_pNfcTrigger->aNfcTriggerReg[ucPhyPU][ucLun][ucWp] = *(U8*)&tNfcTriggerReg;
20005203:	422332        	l32i	a3, a3, 0x108
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:967
    }
#endif
    /* For Normal or PIO cmd: 0-Normal; 1-PIO  */
    else  
    {
        tNfcTriggerReg.bsExtCmd = g_aPrcqTable[ucReqType].bsIsPioCmd;
20005206:	204a04        	insbits	a0, a10, 4, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:970
    }

    *(volatile U8*)&g_pNfcTrigger->aNfcTriggerReg[ucPhyPU][ucLun][ucWp] = *(U8*)&tNfcTriggerReg;
20005209:	b02230        	addx8	a2, a2, a3
2000520c:	242a      	add.n	a2, a4, a2
2000520e:	0020c0        	memw
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1706
        #ifdef SIM
        L3_DbgFCmdPrint(ptCtrlEntry, (TRUE == bResult) ? "Normal_Success" : "Normal_Fail");
        #endif
    }
    
    return bResult;
20005211:	a1c8      	l32i.n	a12, a1, 40
20005213:	b1d8      	l32i.n	a13, a1, 44
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:970
20005215:	004202        	s8i	a0, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1706
20005218:	c1e8      	l32i.n	a14, a1, 48
2000521a:	8128      	l32i.n	a2, a1, 32
2000521c:	9108      	l32i.n	a0, a1, 36
2000521e:	40c112        	addi	a1, a1, 64
20005221:	f00d      	ret.n

20005223 <L3_IFSendFCmd+0x24f>:
	...

20005224 <L3_IFSendFCmd+0x250>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:126

// Use this to detect some special commands, such as the command containing XOR data of SLC write,
// the 1st program stage of the command containing XOR data of TLC write.
BOOL L3_IsDataDisperse(const FCMD_REQ_ENTRY *ptReqEntry)
{
    ASSERT(ptReqEntry != NULL);
20005224:	ffff06        	j	20005224 <L3_IFSendFCmd+0x250>

20005227 <L3_IFSendFCmd+0x253>:
	...

20005228 <L3_IFSendFCmd+0x254>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:448
            g_ptFMUserMgr[ucTLun].ulReadTime++;
            break;
        }
        case FCMD_REQ_TYPE_WRITE:
        {
            g_ptFMUserMgr[ucTLun].ulPrgTime++;
20005228:	ed3d61        	l32r	a6, 2000071c <_stext+0x1c>
2000522b:	172662        	l32i	a6, a6, 92
2000522e:	a05000        	addx4	a5, a0, a0
20005231:	a05560        	addx4	a5, a5, a6
20005234:	3548      	l32i.n	a4, a5, 12
20005236:	441b      	addi.n	a4, a4, 1
20005238:	3549      	s32i.n	a4, a5, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:449
            break;
2000523a:	ffc206        	j	20005146 <L3_IFSendFCmd+0x172>

2000523d <L3_IFSendFCmd+0x269>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:443
{
    switch (ucFCmdType)
    {
        case FCMD_REQ_TYPE_READ:
        {
            g_ptFMUserMgr[ucTLun].ulReadTime++;
2000523d:	ed3791        	l32r	a9, 2000071c <_stext+0x1c>
20005240:	172992        	l32i	a9, a9, 92
20005243:	a08000        	addx4	a8, a0, a0
20005246:	a08890        	addx4	a8, a8, a9
20005249:	4878      	l32i.n	a7, a8, 16
2000524b:	771b      	addi.n	a7, a7, 1
2000524d:	4879      	s32i.n	a7, a8, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:444
            break;
2000524f:	ffbcc6        	j	20005146 <L3_IFSendFCmd+0x172>

20005252 <L3_IFSendFCmd+0x27e>:
	...

20005254 <L3_IFSendFCmd+0x280>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:453
            g_ptFMUserMgr[ucTLun].ulPrgTime++;
            break;
        }
        case FCMD_REQ_TYPE_ERASE:
        {
            g_ptFMUserMgr[ucTLun].ulErsTime++;
20005254:	ed3221        	l32r	a2, 2000071c <_stext+0x1c>
20005257:	172222        	l32i	a2, a2, 92
2000525a:	a0b000        	addx4	a11, a0, a0
2000525d:	a0bb20        	addx4	a11, a11, a2
20005260:	2ba8      	l32i.n	a10, a11, 8
20005262:	aa1b      	addi.n	a10, a10, 1
20005264:	2ba9      	s32i.n	a10, a11, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:454
            break;
20005266:	ffb706        	j	20005146 <L3_IFSendFCmd+0x172>

20005269 <L3_IFSendFCmd+0x295>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:128

    if ((TRUE == L3_IsNeedDoXor(ptReqEntry)) && (TRUE == ptReqEntry->bsContainXorData))
20005269:	6138      	l32i.n	a3, a1, 24
2000526b:	0338      	l32i.n	a3, a3, 0
2000526d:	043d30        	extui	a3, a3, 13, 1
20005270:	f22316        	beqz	a3, 20005196 <L3_IFSendFCmd+0x1c2>
20005273:	100c      	movi.n	a0, 1
20005275:	ffc7c6        	j	20005198 <L3_IFSendFCmd+0x1c4>

20005278 <L3_IFSendFCmd+0x2a4>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:951
    
    /* CE_SEL = 1 only when CE decode enable & Logic LUN = 2/3 & LUN_PER_CE = 2 */
    tNfcTriggerReg.bsCESel = (0 == NFC_CE_PER_PU_BITS) ? 0 : ucLun / LUN_PER_CE;

    /* For write command, 1-stand for write XOR parity  */ 
    if ((NFC_WRITE_CMD == tNfcTriggerReg.bsCmdType) &&(FALSE != bIsXorParityWriteCmd))
20005278:	021026        	beqi	a0, 1, 2000527e <L3_IFSendFCmd+0x2aa>
2000527b:	ffdd86        	j	200051f5 <L3_IFSendFCmd+0x221>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:954
    {
        tNfcTriggerReg.bsExtCmd = TRUE;
        tNfcTriggerReg.bsExtCmdSel = ucXorId;
2000527e:	021c      	movi.n	a2, 16
20005280:	340030        	extui	a0, a3, 0, 4
20005283:	3158      	l32i.n	a5, a1, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:970
    else  
    {
        tNfcTriggerReg.bsExtCmd = g_aPrcqTable[ucReqType].bsIsPioCmd;
    }

    *(volatile U8*)&g_pNfcTrigger->aNfcTriggerReg[ucPhyPU][ucLun][ucWp] = *(U8*)&tNfcTriggerReg;
20005285:	ed2531        	l32r	a3, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:954

    /* For write command, 1-stand for write XOR parity  */ 
    if ((NFC_WRITE_CMD == tNfcTriggerReg.bsCmdType) &&(FALSE != bIsXorParityWriteCmd))
    {
        tNfcTriggerReg.bsExtCmd = TRUE;
        tNfcTriggerReg.bsExtCmdSel = ucXorId;
20005288:	235504        	insbits	a0, a5, 5, 7
2000528b:	200020        	or	a0, a0, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:970
    else  
    {
        tNfcTriggerReg.bsExtCmd = g_aPrcqTable[ucReqType].bsIsPioCmd;
    }

    *(volatile U8*)&g_pNfcTrigger->aNfcTriggerReg[ucPhyPU][ucLun][ucWp] = *(U8*)&tNfcTriggerReg;
2000528e:	422332        	l32i	a3, a3, 0x108
20005291:	276a      	add.n	a2, a7, a6
20005293:	b02230        	addx8	a2, a2, a3
20005296:	242a      	add.n	a2, a4, a2
20005298:	0020c0        	memw
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1706
2000529b:	a1c8      	l32i.n	a12, a1, 40
2000529d:	b1d8      	l32i.n	a13, a1, 44
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:970
2000529f:	004202        	s8i	a0, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1706
200052a2:	c1e8      	l32i.n	a14, a1, 48
200052a4:	8128      	l32i.n	a2, a1, 32
200052a6:	9108      	l32i.n	a0, a1, 36
200052a8:	40c112        	addi	a1, a1, 64
200052ab:	f00d      	ret.n

200052ad <L3_IFSendFCmd+0x2d9>:
200052ad:	000000                                        ...

200052b0 <L3_FCMDQAllocIntrEntry>:
L3_FCMDQAllocIntrEntry():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:524
Usage      : 
History    : 
    1. 2016.7.15 JasonGuo create function
==============================================================================*/
FCMD_INTR_CTRL_ENTRY *L3_FCMDQAllocIntrEntry(U8 ucTLun)
{
200052b0:	ed1b41        	l32r	a4, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:530
    U8 ucWptr;
    FCMD_INTR_CTRL_ENTRY *ptCtrlEntry;
    
    ucWptr = L3_FCMDQGetIntrWptr(ucTLun, FALSE);
    ptCtrlEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucWptr, FALSE);
    COM_MemZero((U32*)ptCtrlEntry, sizeof(FCMD_INTR_CTRL_ENTRY)>>2);
200052b3:	a09220        	addx4	a9, a2, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:524
Usage      : 
History    : 
    1. 2016.7.15 JasonGuo create function
==============================================================================*/
FCMD_INTR_CTRL_ENTRY *L3_FCMDQAllocIntrEntry(U8 ucTLun)
{
200052b6:	1e2472        	l32i	a7, a4, 120
200052b9:	f0c112        	addi	a1, a1, -16
200052bc:	a07270        	addx4	a7, a2, a7
200052bf:	000762        	l8ui	a6, a7, 0
200052c2:	0109      	s32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:555
==============================================================================*/
FCMD_INTR_CTRL_ENTRY *L3_FCMDQGetIntrCtrlEntry(U8 ucTLun, U8 ucLevel, BOOL bBak)
{
    FCMD_INTR_CTRL *ptCtrl;
    
    ASSERT(ucLevel < NFCQ_DEPTH);
200052c4:	4c46f6        	bgeui	a6, 4, 20005314 <L3_FCMDQAllocIntrEntry+0x64>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:63
****************************************************************************/
void COM_MemZero(U32* TargetAddr,U32 LengthDW)
{
    U32 i;

    for (i = 0 ; i < LengthDW; i++)
200052c7:	020c      	movi.n	a2, 0
200052c9:	230c      	movi.n	a3, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:530
    U8 ucWptr;
    FCMD_INTR_CTRL_ENTRY *ptCtrlEntry;
    
    ucWptr = L3_FCMDQGetIntrWptr(ucTLun, FALSE);
    ptCtrlEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucWptr, FALSE);
    COM_MemZero((U32*)ptCtrlEntry, sizeof(FCMD_INTR_CTRL_ENTRY)>>2);
200052cb:	a05660        	addx4	a5, a6, a6
200052ce:	1a2482        	l32i	a8, a4, 104
200052d1:	1199b0        	slli	a9, a9, 5
200052d4:	889a      	add.n	a8, a8, a9
200052d6:	b05580        	addx8	a5, a5, a8
200052d9:	050d      	mov.n	a0, a5
200052db:	280c      	movi.n	a8, 2
200052dd:	03a876        	loopgtz	a8, 200052e4 <L3_FCMDQAllocIntrEntry+0x34>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:65
    {
        *TargetAddr++ = 0;
200052e0:	0029      	s32i.n	a2, a0, 0
200052e2:	004b      	addi.n	a0, a0, 4

200052e4 <L3_FCMDQAllocIntrEntry+0x34>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:341
void L3_FCMDQSetIntrWptr(U8 ucTLun, U8 ucWptr, BOOL bBak)
{
    FCMD_INTR_DPTR *ptDptr;

    ptDptr = (FALSE == bBak) ? g_ptFCmdIntrDptr : g_ptFCmdIntrDptrBak;
    ptDptr->atIntrQDptr[ucTLun].ucWptr = ucWptr;
200052e4:	4b0c      	movi.n	a11, 4
200052e6:	01c6a2        	addi	a10, a6, 1
200052e9:	0aa376        	loopgtz	a3, 200052f7 <L3_FCMDQAllocIntrEntry+0x47>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:65
200052ec:	0029      	s32i.n	a2, a0, 0
200052ee:	1029      	s32i.n	a2, a0, 4
200052f0:	2029      	s32i.n	a2, a0, 8
200052f2:	3029      	s32i.n	a2, a0, 12
200052f4:	10c002        	addi	a0, a0, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:341
200052f7:	f2aab0        	rems	a10, a10, a11
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:533
    ucWptr = L3_FCMDQGetIntrWptr(ucTLun, FALSE);
    ptCtrlEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucWptr, FALSE);
    COM_MemZero((U32*)ptCtrlEntry, sizeof(FCMD_INTR_CTRL_ENTRY)>>2);

    ptCtrlEntry->bsCtrlPtr = ucWptr;
    ptCtrlEntry->tDTxCtrl.bsFstEngineID = INVALID_4F;
200052fa:	ed1601        	l32r	a0, 20000754 <_stext+0x54>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:532
    
    ucWptr = L3_FCMDQGetIntrWptr(ucTLun, FALSE);
    ptCtrlEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucWptr, FALSE);
    COM_MemZero((U32*)ptCtrlEntry, sizeof(FCMD_INTR_CTRL_ENTRY)>>2);

    ptCtrlEntry->bsCtrlPtr = ucWptr;
200052fd:	1528      	l32i.n	a2, a5, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:533
    ptCtrlEntry->tDTxCtrl.bsFstEngineID = INVALID_4F;
200052ff:	0a5502        	s16i	a0, a5, 20
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:537
    
    L3_FCMDQSetIntrWptr(ucTLun, (ucWptr+1)%NFCQ_DEPTH, FALSE);

    return ptCtrlEntry;
20005302:	0108      	l32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:532
    
    ucWptr = L3_FCMDQGetIntrWptr(ucTLun, FALSE);
    ptCtrlEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucWptr, FALSE);
    COM_MemZero((U32*)ptCtrlEntry, sizeof(FCMD_INTR_CTRL_ENTRY)>>2);

    ptCtrlEntry->bsCtrlPtr = ucWptr;
20005304:	f1c624        	insbits	a2, a6, 28, 29
20005307:	1529      	s32i.n	a2, a5, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:537
    ptCtrlEntry->tDTxCtrl.bsFstEngineID = INVALID_4F;
    
    L3_FCMDQSetIntrWptr(ucTLun, (ucWptr+1)%NFCQ_DEPTH, FALSE);

    return ptCtrlEntry;
20005309:	10c112        	addi	a1, a1, 16
2000530c:	052d      	mov.n	a2, a5
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:341
void L3_FCMDQSetIntrWptr(U8 ucTLun, U8 ucWptr, BOOL bBak)
{
    FCMD_INTR_DPTR *ptDptr;

    ptDptr = (FALSE == bBak) ? g_ptFCmdIntrDptr : g_ptFCmdIntrDptrBak;
    ptDptr->atIntrQDptr[ucTLun].ucWptr = ucWptr;
2000530e:	0047a2        	s8i	a10, a7, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:537
    ptCtrlEntry->bsCtrlPtr = ucWptr;
    ptCtrlEntry->tDTxCtrl.bsFstEngineID = INVALID_4F;
    
    L3_FCMDQSetIntrWptr(ucTLun, (ucWptr+1)%NFCQ_DEPTH, FALSE);

    return ptCtrlEntry;
20005311:	f00d      	ret.n

20005313 <L3_FCMDQAllocIntrEntry+0x63>:
	...

20005314 <L3_FCMDQAllocIntrEntry+0x64>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:555
==============================================================================*/
FCMD_INTR_CTRL_ENTRY *L3_FCMDQGetIntrCtrlEntry(U8 ucTLun, U8 ucLevel, BOOL bBak)
{
    FCMD_INTR_CTRL *ptCtrl;
    
    ASSERT(ucLevel < NFCQ_DEPTH);
20005314:	ffff06        	j	20005314 <L3_FCMDQAllocIntrEntry+0x64>

20005317 <L3_FCMDQAllocIntrEntry+0x67>:
	...

20005318 <L3_IFPopFCmdQ>:
L3_IFPopFCmdQ():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1883
Usage      : 
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
void L3_IFPopFCmdQ(U8 ucTLun)
{
20005318:	ed0181        	l32r	a8, 2000071c <_stext+0x1c>
2000531b:	f0c112        	addi	a1, a1, -16
2000531e:	0109      	s32i.n	a0, a1, 0
20005320:	102802        	l32i	a0, a8, 64
20005323:	900200        	addx2	a0, a2, a0
20005326:	0020c0        	memw
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:625
    FCMD_REQ_PRI eFCmdPri;

    // now, default to pop the high priorty queue firstly. 
    for (cArbReqPri = FCMD_REQ_PRI_NUM-1; cArbReqPri >= 0; cArbReqPri--)
    {
        if (FCMD_REQ_STS_PUSH == L2_FCMDQGetReqSts(ucTLun, cArbReqPri, L3_FCMDQGetReqRptr(ucTLun, cArbReqPri)))
20005329:	f848      	l32i.n	a4, a8, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1883
2000532b:	010032        	l8ui	a3, a0, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:625
2000532e:	a04240        	addx4	a4, a2, a4
20005331:	334a      	add.n	a3, a3, a4
20005333:	000332        	l8ui	a3, a3, 0
20005336:	1152e0        	slli	a5, a2, 2
20005339:	fec332        	addi	a3, a3, -2
2000533c:	09d356        	bnez	a3, 200053dd <L3_IFPopFCmdQ+0xc5>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1888
    FCMD_REQ_PRI eFCmdPri;
    FCMD_REQ_ENTRY *ptReqEntry;
    FCMD_INTR_CTRL_ENTRY *ptCtrlEntry;

    eFCmdPri = L3_FCMDQArbReqPri(ucTLun);
2000533f:	390c      	movi.n	a9, 3
20005341:	0020c0        	memw
20005344:	010062        	l8ui	a6, a0, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:288
    U8 ucRptr;
    FCMD_REQ_ENTRY *ptReqEntry;
    
    ucRptr = L3_FCMDQGetReqRptr(ucTLun, eFCmdPri);
    ptReqEntry = L2_FCMDQGetReqEntry(ucTLun, eFCmdPri, ucRptr);
    ASSERT(ucRptr == ptReqEntry->bsReqPtr);
20005347:	d8a8      	l32i.n	a10, a8, 52
20005349:	90b220        	addx2	a11, a2, a2
2000534c:	11bba0        	slli	a11, a11, 6
2000534f:	aaba      	add.n	a10, a10, a11
20005351:	907660        	addx2	a7, a6, a6
20005354:	1177c0        	slli	a7, a7, 4
20005357:	77aa      	add.n	a7, a7, a10
20005359:	0738      	l32i.n	a3, a7, 0
2000535b:	153030        	extui	a3, a3, 16, 2
2000535e:	c03630        	sub	a3, a6, a3
20005361:	07b356        	bnez	a3, 200053e0 <L3_IFPopFCmdQ+0xc8>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:298
        //DBG_Printf("Swith Mode Opeartion.\n");
        return L3_FCMDQAllocTmp2ReqEntry(ucTLun);
    }
#endif

    ASSERT(FCMD_REQ_STS_PUSH == L2_FCMDQGetReqSts(ucTLun, eFCmdPri, ucRptr));
20005364:	464a      	add.n	a4, a6, a4
20005366:	000432        	l8ui	a3, a4, 0
20005369:	fec332        	addi	a3, a3, -2
2000536c:	074356        	bnez	a3, 200053e4 <L3_IFPopFCmdQ+0xcc>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_FCMDQ.c:216
2000536f:	004492        	s8i	a9, a4, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:246
History    : 
    1. 2016.7.14 JasonGuo create function
==============================================================================*/
void L3_FCMDQSetReqRptr(U8 ucTLun, FCMD_REQ_PRI eFCmdPri, U8 ucRptr)
{
    g_ptFCmdReqDptr->atReqQDptr[ucTLun][eFCmdPri].ucRptr = ucRptr;
20005372:	4b0c      	movi.n	a11, 4
20005374:	a61b      	addi.n	a10, a6, 1
20005376:	f2aab0        	rems	a10, a10, a11
20005379:	0020c0        	memw
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:528
FCMD_INTR_CTRL_ENTRY *L3_FCMDQAllocIntrEntry(U8 ucTLun)
{
    U8 ucWptr;
    FCMD_INTR_CTRL_ENTRY *ptCtrlEntry;
    
    ucWptr = L3_FCMDQGetIntrWptr(ucTLun, FALSE);
2000537c:	1e2862        	l32i	a6, a8, 120
2000537f:	665a      	add.n	a6, a6, a5
20005381:	000652        	l8ui	a5, a6, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:246
History    : 
    1. 2016.7.14 JasonGuo create function
==============================================================================*/
void L3_FCMDQSetReqRptr(U8 ucTLun, FCMD_REQ_PRI eFCmdPri, U8 ucRptr)
{
    g_ptFCmdReqDptr->atReqQDptr[ucTLun][eFCmdPri].ucRptr = ucRptr;
20005384:	0140a2        	s8i	a10, a0, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:555
==============================================================================*/
FCMD_INTR_CTRL_ENTRY *L3_FCMDQGetIntrCtrlEntry(U8 ucTLun, U8 ucLevel, BOOL bBak)
{
    FCMD_INTR_CTRL *ptCtrl;
    
    ASSERT(ucLevel < NFCQ_DEPTH);
20005387:	5d45f6        	bgeui	a5, 4, 200053e8 <L3_IFPopFCmdQ+0xd0>
2000538a:	230c      	movi.n	a3, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:530
    U8 ucWptr;
    FCMD_INTR_CTRL_ENTRY *ptCtrlEntry;
    
    ucWptr = L3_FCMDQGetIntrWptr(ucTLun, FALSE);
    ptCtrlEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucWptr, FALSE);
    COM_MemZero((U32*)ptCtrlEntry, sizeof(FCMD_INTR_CTRL_ENTRY)>>2);
2000538c:	a04550        	addx4	a4, a5, a5
2000538f:	a09220        	addx4	a9, a2, a2
20005392:	1a2882        	l32i	a8, a8, 104
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:63
****************************************************************************/
void COM_MemZero(U32* TargetAddr,U32 LengthDW)
{
    U32 i;

    for (i = 0 ; i < LengthDW; i++)
20005395:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:530
20005397:	1199b0        	slli	a9, a9, 5
2000539a:	889a      	add.n	a8, a8, a9
2000539c:	b08480        	addx8	a8, a4, a8
2000539f:	080d      	mov.n	a0, a8
200053a1:	03a376        	loopgtz	a3, 200053a8 <L3_IFPopFCmdQ+0x90>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:65
    {
        *TargetAddr++ = 0;
200053a4:	0029      	s32i.n	a2, a0, 0
200053a6:	004b      	addi.n	a0, a0, 4

200053a8 <L3_IFPopFCmdQ+0x90>:
200053a8:	230c      	movi.n	a3, 2
200053aa:	0aa376        	loopgtz	a3, 200053b8 <L3_IFPopFCmdQ+0xa0>
200053ad:	0029      	s32i.n	a2, a0, 0
200053af:	1029      	s32i.n	a2, a0, 4
200053b1:	2029      	s32i.n	a2, a0, 8
200053b3:	3029      	s32i.n	a2, a0, 12
200053b5:	10c002        	addi	a0, a0, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:341
void L3_FCMDQSetIntrWptr(U8 ucTLun, U8 ucWptr, BOOL bBak)
{
    FCMD_INTR_DPTR *ptDptr;

    ptDptr = (FALSE == bBak) ? g_ptFCmdIntrDptr : g_ptFCmdIntrDptrBak;
    ptDptr->atIntrQDptr[ucTLun].ucWptr = ucWptr;
200053b8:	4b0c      	movi.n	a11, 4
200053ba:	a51b      	addi.n	a10, a5, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:532
    
    ucWptr = L3_FCMDQGetIntrWptr(ucTLun, FALSE);
    ptCtrlEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucWptr, FALSE);
    COM_MemZero((U32*)ptCtrlEntry, sizeof(FCMD_INTR_CTRL_ENTRY)>>2);

    ptCtrlEntry->bsCtrlPtr = ucWptr;
200053bc:	1828      	l32i.n	a2, a8, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:533
    ptCtrlEntry->tDTxCtrl.bsFstEngineID = INVALID_4F;
200053be:	ece501        	l32r	a0, 20000754 <_stext+0x54>
200053c1:	0a5802        	s16i	a0, a8, 20
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:532
    
    ucWptr = L3_FCMDQGetIntrWptr(ucTLun, FALSE);
    ptCtrlEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucWptr, FALSE);
    COM_MemZero((U32*)ptCtrlEntry, sizeof(FCMD_INTR_CTRL_ENTRY)>>2);

    ptCtrlEntry->bsCtrlPtr = ucWptr;
200053c4:	f1c524        	insbits	a2, a5, 28, 29
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:341
void L3_FCMDQSetIntrWptr(U8 ucTLun, U8 ucWptr, BOOL bBak)
{
    FCMD_INTR_DPTR *ptDptr;

    ptDptr = (FALSE == bBak) ? g_ptFCmdIntrDptr : g_ptFCmdIntrDptrBak;
    ptDptr->atIntrQDptr[ucTLun].ucWptr = ucWptr;
200053c7:	f2aab0        	rems	a10, a10, a11
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:532
    
    ucWptr = L3_FCMDQGetIntrWptr(ucTLun, FALSE);
    ptCtrlEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucWptr, FALSE);
    COM_MemZero((U32*)ptCtrlEntry, sizeof(FCMD_INTR_CTRL_ENTRY)>>2);

    ptCtrlEntry->bsCtrlPtr = ucWptr;
200053ca:	1829      	s32i.n	a2, a8, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1894
    ptReqEntry = L3_FCMDQPopReqEntry(ucTLun, eFCmdPri);

    ptCtrlEntry = L3_FCMDQAllocIntrEntry(ucTLun);
    ptCtrlEntry->ptReqEntry = ptReqEntry;

    L3_IFSendFCmd(ptCtrlEntry);
200053cc:	082d      	mov.n	a2, a8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:341
void L3_FCMDQSetIntrWptr(U8 ucTLun, U8 ucWptr, BOOL bBak)
{
    FCMD_INTR_DPTR *ptDptr;

    ptDptr = (FALSE == bBak) ? g_ptFCmdIntrDptr : g_ptFCmdIntrDptrBak;
    ptDptr->atIntrQDptr[ucTLun].ucWptr = ucWptr;
200053ce:	0046a2        	s8i	a10, a6, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1892

    eFCmdPri = L3_FCMDQArbReqPri(ucTLun);
    ptReqEntry = L3_FCMDQPopReqEntry(ucTLun, eFCmdPri);

    ptCtrlEntry = L3_FCMDQAllocIntrEntry(ucTLun);
    ptCtrlEntry->ptReqEntry = ptReqEntry;
200053d1:	0879      	s32i.n	a7, a8, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1894

    L3_IFSendFCmd(ptCtrlEntry);
200053d3:	ffc005        	call0	20004fd4 <L3_IFSendFCmd>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1896

    return;
200053d6:	0108      	l32i.n	a0, a1, 0
200053d8:	10c112        	addi	a1, a1, 16
200053db:	f00d      	ret.n

200053dd <L3_IFPopFCmdQ+0xc5>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:631
        {                    
            eFCmdPri = cArbReqPri;
            break;
        }
    }
    ASSERT(cArbReqPri >= 0);
200053dd:	ffff06        	j	200053dd <L3_IFPopFCmdQ+0xc5>

200053e0 <L3_IFPopFCmdQ+0xc8>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:288
    U8 ucRptr;
    FCMD_REQ_ENTRY *ptReqEntry;
    
    ucRptr = L3_FCMDQGetReqRptr(ucTLun, eFCmdPri);
    ptReqEntry = L2_FCMDQGetReqEntry(ucTLun, eFCmdPri, ucRptr);
    ASSERT(ucRptr == ptReqEntry->bsReqPtr);
200053e0:	ffff06        	j	200053e0 <L3_IFPopFCmdQ+0xc8>

200053e3 <L3_IFPopFCmdQ+0xcb>:
	...

200053e4 <L3_IFPopFCmdQ+0xcc>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:298
        //DBG_Printf("Swith Mode Opeartion.\n");
        return L3_FCMDQAllocTmp2ReqEntry(ucTLun);
    }
#endif

    ASSERT(FCMD_REQ_STS_PUSH == L2_FCMDQGetReqSts(ucTLun, eFCmdPri, ucRptr));
200053e4:	ffff06        	j	200053e4 <L3_IFPopFCmdQ+0xcc>

200053e7 <L3_IFPopFCmdQ+0xcf>:
	...

200053e8 <L3_IFPopFCmdQ+0xd0>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:555
==============================================================================*/
FCMD_INTR_CTRL_ENTRY *L3_FCMDQGetIntrCtrlEntry(U8 ucTLun, U8 ucLevel, BOOL bBak)
{
    FCMD_INTR_CTRL *ptCtrl;
    
    ASSERT(ucLevel < NFCQ_DEPTH);
200053e8:	ffff06        	j	200053e8 <L3_IFPopFCmdQ+0xd0>

200053eb <L3_IFPopFCmdQ+0xd3>:
	...

200053ec <L3_SchSelTLun..AH_1482204275>:
L3_SchSelTLun():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:478
Usage      : 
History    : 
    1. 2016.7.15 JasonGuo create function
==============================================================================*/
LOCAL U8 L3_SchSelTLun(ARB_BITMAP_TYPE eArbBmpType)
{
200053ec:	e0c112        	addi	a1, a1, -32
200053ef:	31d9      	s32i.n	a13, a1, 12
200053f1:	41e9      	s32i.n	a14, a1, 16
200053f3:	1109      	s32i.n	a0, a1, 4
200053f5:	21c9      	s32i.n	a12, a1, 8
200053f7:	ed0901        	l32r	a0, 2000081c <_stext+0x11c>
200053fa:	02cd      	mov.n	a12, a2
200053fc:	ed58e1        	l32r	a14, 2000095c <_stext+0x25c>
200053ff:	020c      	movi.n	a2, 0
20005401:	ecea      	add.n	a14, a12, a14
20005403:	0020c0        	memw
20005406:	800e42        	l8ui	a4, a14, 128
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:451
History    : 
    1. 2016.7.15 JasonGuo create function
==============================================================================*/
LOCAL void L3_SchSelPUAndLun(ARB_BITMAP_TYPE eArbBmpType, U8 *pLunInPU, U8 *pPU)
{
    l_aLunInPU[eArbBmpType] %= NFC_LUN_PER_PU;
20005409:	0020c0        	memw
2000540c:	804e22        	s8i	a2, a14, 128
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:452
    while (l_aLunInPU[eArbBmpType] < NFC_LUN_PER_PU)
2000540f:	0020c0        	memw
20005412:	800e32        	l8ui	a3, a14, 128
20005415:	43cc      	bnez.n	a3, 2000541d <L3_SchSelTLun..AH_1482204275+0x31>
20005417:	113ce0        	slli	a3, a12, 2
2000541a:	002b86        	j	200054cc <L3_SchSelTLun..AH_1482204275+0xe0>

2000541d <L3_SchSelTLun..AH_1482204275+0x31>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:482
LOCAL U8 L3_SchSelTLun(ARB_BITMAP_TYPE eArbBmpType)
{
    U8 ucPU, ucLunInPU, ucTLun;

    L3_SchSelPUAndLun(eArbBmpType, &ucLunInPU, &ucPU);
    if (32 == ucPU)
2000541d:	59cd66        	bnei	a13, 32, 2000547a <L3_SchSelTLun..AH_1482204275+0x8e>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:484
    {
        L3_SchUpdateArbBmp(eArbBmpType);
20005420:	ed0a31        	l32r	a3, 20000848 <_stext+0x148>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:329
    U8 ucLunInPU;
    U32 ulArbBitmap;

    for (ucLunInPU = 0; ucLunInPU < NFC_LUN_PER_PU; ucLunInPU++)
    {
        switch (eArbBMType)
20005423:	133c16        	beqz	a12, 2000555a <L3_SchSelTLun..AH_1482204275+0x16e>
20005426:	4c0b      	addi.n	a4, a12, -1
20005428:	1a9416        	beqz	a4, 200055d5 <L3_SchSelTLun..AH_1482204275+0x1e9>
2000542b:	fecc52        	addi	a5, a12, -2
2000542e:	1e3516        	beqz	a5, 20005615 <L3_SchSelTLun..AH_1482204275+0x229>
20005431:	fdcc62        	addi	a6, a12, -3
20005434:	219616        	beqz	a6, 20005651 <L3_SchSelTLun..AH_1482204275+0x265>
20005437:	fccc72        	addi	a7, a12, -4
2000543a:	0b7716        	beqz	a7, 200054f5 <L3_SchSelTLun..AH_1482204275+0x109>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:382
                ulArbBitmap = l_aTLunStsBmp[STS_BMP_EXTH][ucLunInPU];
                break;
            }
            default:
            {
                DBG_Printf("ArbBitmap Type Error %d.\n", eArbBMType);
2000543d:	ed4821        	l32r	a2, 20000960 <_stext+0x260>
20005440:	0c3d      	mov.n	a3, a12
20005442:	058205        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:383
                DBG_Getch();
20005445:	ecb401        	l32r	a0, 20000718 <_stext+0x18>
20005448:	0000c0        	callx0	a0
2000544b:	ecf401        	l32r	a0, 2000081c <_stext+0x11c>
2000544e:	00a022        	movi	a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:387
            }
        }

        l_aTLunArbBmp[eArbBMType][ucLunInPU] = ulArbBitmap;
20005451:	11acc0        	slli	a10, a12, 4
20005454:	a0aa      	add.n	a10, a0, a10
20005456:	0020c0        	memw
20005459:	7f6a72        	s32i	a7, a10, 0x1fc
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:485

    L3_SchSelPUAndLun(eArbBmpType, &ucLunInPU, &ucPU);
    if (32 == ucPU)
    {
        L3_SchUpdateArbBmp(eArbBmpType);
        L3_SchSelPUAndLun(eArbBmpType, &ucLunInPU, &ucPU);
2000545c:	0020c0        	memw
2000545f:	800e92        	l8ui	a9, a14, 128
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:451
History    : 
    1. 2016.7.15 JasonGuo create function
==============================================================================*/
LOCAL void L3_SchSelPUAndLun(ARB_BITMAP_TYPE eArbBmpType, U8 *pLunInPU, U8 *pPU)
{
    l_aLunInPU[eArbBmpType] %= NFC_LUN_PER_PU;
20005462:	0020c0        	memw
20005465:	804e22        	s8i	a2, a14, 128
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:452
    while (l_aLunInPU[eArbBmpType] < NFC_LUN_PER_PU)
20005468:	0020c0        	memw
2000546b:	800e82        	l8ui	a8, a14, 128
2000546e:	113ce0        	slli	a3, a12, 2
20005471:	08b816        	beqz	a8, 20005500 <L3_SchSelTLun..AH_1482204275+0x114>
20005474:	e0cdb2        	addi	a11, a13, -32
20005477:	0cdb16        	beqz	a11, 20005548 <L3_SchSelTLun..AH_1482204275+0x15c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:409
void L3_SchClrArbBit(U8 ucTLun, ARB_BITMAP_TYPE eArbBmpType)
{
    U8 ucPU = L3_GET_PU(ucTLun);
    U8 ucLunInPU = L3_GET_LUN_IN_PU(ucTLun);

    l_aTLunArbBmp[eArbBmpType][ucLunInPU] &= ~(1 << ucPU);
2000547a:	11ecc0        	slli	a14, a12, 4
2000547d:	000122        	l8ui	a2, a1, 0
20005480:	ee0a      	add.n	a14, a14, a0
20005482:	f07c      	movi.n	a0, -1
20005484:	c022d0        	sub	a2, a2, a13
20005487:	1fc222        	addi	a2, a2, 31
2000548a:	742020        	extui	a2, a2, 0, 8
2000548d:	1d0c      	movi.n	a13, 1
2000548f:	401200        	ssl	a2
20005492:	a1dd00        	sll	a13, a13
20005495:	30dd00        	xor	a13, a13, a0
20005498:	0020c0        	memw
2000549b:	7f2ec2        	l32i	a12, a14, 0x1fc
2000549e:	10ccd0        	and	a12, a12, a13
200054a1:	0020c0        	memw
200054a4:	7f6ec2        	s32i	a12, a14, 0x1fc
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:496
        L3_SchClrArbBit(ucTLun, eArbBmpType);

        return ucTLun;
    }

    return INVALID_2F;
200054a7:	31d8      	l32i.n	a13, a1, 12
200054a9:	21c8      	l32i.n	a12, a1, 8
200054ab:	41e8      	l32i.n	a14, a1, 16
200054ad:	1108      	l32i.n	a0, a1, 4
200054af:	20c112        	addi	a1, a1, 32
200054b2:	f00d      	ret.n

200054b4 <L3_SchSelTLun..AH_1482204275+0xc8>:
	...

200054b5 <L3_SchSelTLun..AH_1482204275+0xc9>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:461
        {
            *pLunInPU = l_aLunInPU[eArbBmpType];
            return;
        }

        l_aLunInPU[eArbBmpType]++;
200054b5:	0020c0        	memw
200054b8:	800e52        	l8ui	a5, a14, 128
200054bb:	551b      	addi.n	a5, a5, 1
200054bd:	0020c0        	memw
200054c0:	804e52        	s8i	a5, a14, 128
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:452
    1. 2016.7.15 JasonGuo create function
==============================================================================*/
LOCAL void L3_SchSelPUAndLun(ARB_BITMAP_TYPE eArbBmpType, U8 *pLunInPU, U8 *pPU)
{
    l_aLunInPU[eArbBmpType] %= NFC_LUN_PER_PU;
    while (l_aLunInPU[eArbBmpType] < NFC_LUN_PER_PU)
200054c3:	0020c0        	memw
200054c6:	800e42        	l8ui	a4, a14, 128
200054c9:	f50456        	bnez	a4, 2000541d <L3_SchSelTLun..AH_1482204275+0x31>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:454
    {
        *pPU = HAL_CLZ(l_aTLunArbBmp[eArbBmpType][l_aLunInPU[eArbBmpType]]);
200054cc:	0020c0        	memw
200054cf:	800e72        	l8ui	a7, a14, 128
200054d2:	773a      	add.n	a7, a7, a3
200054d4:	a07700        	addx4	a7, a7, a0
200054d7:	0020c0        	memw
200054da:	7f2772        	l32i	a7, a7, 0x1fc
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:1028
    20141028    Gavin   add description. the original author is victorzhang
    20141028    Gavin   add "INLINE" attribute
------------------------------------------------------------------------------*/
INLINE U8 HAL_CLZ(U32 ulDw)
{
    return CLZ(ulDw);
200054dd:	018762        	clz	a6, a7
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:454
200054e0:	74d060        	extui	a13, a6, 0, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:455
        if (32 != *pPU)
200054e3:	746060        	extui	a6, a6, 0, 8
200054e6:	cbc626        	beqi	a6, 32, 200054b5 <L3_SchSelTLun..AH_1482204275+0xc9>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:457
        {
            *pLunInPU = l_aLunInPU[eArbBmpType];
200054e9:	0020c0        	memw
200054ec:	800e82        	l8ui	a8, a14, 128
200054ef:	004182        	s8i	a8, a1, 0
200054f2:	ffc9c6        	j	2000541d <L3_SchSelTLun..AH_1482204275+0x31>

200054f5 <L3_SchSelTLun..AH_1482204275+0x109>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:377
                    & (~l_aTLunStsBmp[STS_BMP_LOCK][ucLunInPU]);
                break;
            }
            case ARB_BMP_EXTH:
            {
                ulArbBitmap = l_aTLunStsBmp[STS_BMP_EXTH][ucLunInPU];
200054f5:	0020c0        	memw
200054f8:	8f2372        	l32i	a7, a3, 0x23c
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:378
                break;
200054fb:	ffd486        	j	20005451 <L3_SchSelTLun..AH_1482204275+0x65>

200054fe <L3_SchSelTLun..AH_1482204275+0x112>:
	...

20005500 <L3_SchSelTLun..AH_1482204275+0x114>:
20005500:	000606        	j	2000551c <L3_SchSelTLun..AH_1482204275+0x130>

20005503 <L3_SchSelTLun..AH_1482204275+0x117>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:461
        {
            *pLunInPU = l_aLunInPU[eArbBmpType];
            return;
        }

        l_aLunInPU[eArbBmpType]++;
20005503:	0020c0        	memw
20005506:	800ea2        	l8ui	a10, a14, 128
20005509:	f03d      	nop.n
2000550b:	aa1b      	addi.n	a10, a10, 1
2000550d:	0020c0        	memw
20005510:	804ea2        	s8i	a10, a14, 128
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:452
    1. 2016.7.15 JasonGuo create function
==============================================================================*/
LOCAL void L3_SchSelPUAndLun(ARB_BITMAP_TYPE eArbBmpType, U8 *pLunInPU, U8 *pPU)
{
    l_aLunInPU[eArbBmpType] %= NFC_LUN_PER_PU;
    while (l_aLunInPU[eArbBmpType] < NFC_LUN_PER_PU)
20005513:	0020c0        	memw
20005516:	800e92        	l8ui	a9, a14, 128
20005519:	f57956        	bnez	a9, 20005474 <L3_SchSelTLun..AH_1482204275+0x88>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:454
    {
        *pPU = HAL_CLZ(l_aTLunArbBmp[eArbBmpType][l_aLunInPU[eArbBmpType]]);
2000551c:	0020c0        	memw
2000551f:	800ed2        	l8ui	a13, a14, 128
20005522:	dd3a      	add.n	a13, a13, a3
20005524:	a0dd00        	addx4	a13, a13, a0
20005527:	0020c0        	memw
2000552a:	7f2dd2        	l32i	a13, a13, 0x1fc
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:1028
2000552d:	018db2        	clz	a11, a13
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:454
20005530:	74d0b0        	extui	a13, a11, 0, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:455
        if (32 != *pPU)
20005533:	74b0b0        	extui	a11, a11, 0, 8
20005536:	c9cb26        	beqi	a11, 32, 20005503 <L3_SchSelTLun..AH_1482204275+0x117>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:457
        {
            *pLunInPU = l_aLunInPU[eArbBmpType];
20005539:	0020c0        	memw
2000553c:	e0cd22        	addi	a2, a13, -32
2000553f:	800e32        	l8ui	a3, a14, 128
20005542:	004132        	s8i	a3, a1, 0
20005545:	f31256        	bnez	a2, 2000547a <L3_SchSelTLun..AH_1482204275+0x8e>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:496
        L3_SchClrArbBit(ucTLun, eArbBmpType);

        return ucTLun;
    }

    return INVALID_2F;
20005548:	ffa022        	movi	a2, 255
2000554b:	21c8      	l32i.n	a12, a1, 8
2000554d:	31d8      	l32i.n	a13, a1, 12
2000554f:	41e8      	l32i.n	a14, a1, 16
20005551:	1108      	l32i.n	a0, a1, 4
20005553:	20c112        	addi	a1, a1, 32
20005556:	f00d      	ret.n

20005558 <L3_SchSelTLun..AH_1482204275+0x16c>:
	...

2000555a <L3_SchSelTLun..AH_1482204275+0x16e>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:333
    {
        switch (eArbBMType)
        {
            case ARB_BMP_POPREQ:
            {
                L3_SchUpdateStsBmp(ucLunInPU, STS_BMP_POPREQ);
2000555a:	020c      	movi.n	a2, 0
2000555c:	00a032        	movi	a3, 0
2000555f:	fef745        	call0	200044d4 <L3_SchUpdateStsBmp>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:334
                L3_SchUpdateStsBmp(ucLunInPU, STS_BMP_NFC_UNFULL);
20005562:	020c      	movi.n	a2, 0
20005564:	630c      	movi.n	a3, 6
20005566:	fef6c5        	call0	200044d4 <L3_SchUpdateStsBmp>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:335
                L3_SchUpdateStsBmp(ucLunInPU, STS_BMP_NFC_ERROR);
20005569:	020c      	movi.n	a2, 0
2000556b:	830c      	movi.n	a3, 8
2000556d:	fef645        	call0	200044d4 <L3_SchUpdateStsBmp>
20005570:	020c      	movi.n	a2, 0
20005572:	ecaa01        	l32r	a0, 2000081c <_stext+0x11c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:337
                
                ulArbBitmap = l_aTLunStsBmp[STS_BMP_POPREQ][ucLunInPU]
20005575:	0020c0        	memw
20005578:	ecb471        	l32r	a7, 20000848 <_stext+0x148>
2000557b:	9f2792        	l32i	a9, a7, 0x27c
2000557e:	f37c      	movi.n	a3, -1
20005580:	309930        	xor	a9, a9, a3
20005583:	0020c0        	memw
20005586:	972782        	l32i	a8, a7, 0x25c
20005589:	108890        	and	a8, a8, a9
2000558c:	0020c0        	memw
2000558f:	9327a2        	l32i	a10, a7, 0x24c
20005592:	30aa30        	xor	a10, a10, a3
20005595:	0020c0        	memw
20005598:	8f2792        	l32i	a9, a7, 0x23c
2000559b:	309930        	xor	a9, a9, a3
2000559e:	1099a0        	and	a9, a9, a10
200055a1:	0020c0        	memw
200055a4:	8b27b2        	l32i	a11, a7, 0x22c
200055a7:	30bb30        	xor	a11, a11, a3
200055aa:	0020c0        	memw
200055ad:	8727a2        	l32i	a10, a7, 0x21c
200055b0:	30aa30        	xor	a10, a10, a3
200055b3:	10aab0        	and	a10, a10, a11
200055b6:	0020c0        	memw
200055b9:	8327b2        	l32i	a11, a7, 0x20c
200055bc:	30bb30        	xor	a11, a11, a3
200055bf:	0020c0        	memw
200055c2:	7f2772        	l32i	a7, a7, 0x1fc
200055c5:	1077b0        	and	a7, a7, a11
200055c8:	1077a0        	and	a7, a7, a10
200055cb:	107790        	and	a7, a7, a9
200055ce:	107780        	and	a7, a7, a8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:345
                    & (~l_aTLunStsBmp[STS_BMP_ERRH][ucLunInPU])
                    & (~l_aTLunStsBmp[STS_BMP_EXTH][ucLunInPU])
                    & (~l_aTLunStsBmp[STS_BMP_LOCK][ucLunInPU])
                    & ( l_aTLunStsBmp[STS_BMP_NFC_UNFULL][ucLunInPU])
                    & (~l_aTLunStsBmp[STS_BMP_NFC_ERROR][ucLunInPU]);
                break;
200055d1:	ff9f06        	j	20005451 <L3_SchSelTLun..AH_1482204275+0x65>

200055d4 <L3_SchSelTLun..AH_1482204275+0x1e8>:
	...

200055d5 <L3_SchSelTLun..AH_1482204275+0x1e9>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:367
                    & (~l_aTLunStsBmp[STS_BMP_LOCK][ucLunInPU]);
                break;
            }
            case ARB_BMP_PEND:
            {
                L3_SchUpdateStsBmp(ucLunInPU, STS_BMP_NFC_ERROR);
200055d5:	020c      	movi.n	a2, 0
200055d7:	830c      	movi.n	a3, 8
200055d9:	feef85        	call0	200044d4 <L3_SchUpdateStsBmp>
200055dc:	020c      	movi.n	a2, 0
200055de:	ec8f01        	l32r	a0, 2000081c <_stext+0x11c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:369
            
                ulArbBitmap = l_aTLunStsBmp[STS_BMP_PEND][ucLunInPU]
200055e1:	0020c0        	memw
200055e4:	ec9971        	l32r	a7, 20000848 <_stext+0x148>
200055e7:	932792        	l32i	a9, a7, 0x24c
200055ea:	fa7c      	movi.n	a10, -1
200055ec:	3099a0        	xor	a9, a9, a10
200055ef:	0020c0        	memw
200055f2:	8b2782        	l32i	a8, a7, 0x22c
200055f5:	3088a0        	xor	a8, a8, a10
200055f8:	108890        	and	a8, a8, a9
200055fb:	0020c0        	memw
200055fe:	9f2792        	l32i	a9, a7, 0x27c
20005601:	3099a0        	xor	a9, a9, a10
20005604:	0020c0        	memw
20005607:	832772        	l32i	a7, a7, 0x20c
2000560a:	107790        	and	a7, a7, a9
2000560d:	107780        	and	a7, a7, a8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:373
                    & (~l_aTLunStsBmp[STS_BMP_NFC_ERROR][ucLunInPU])
                    & (~l_aTLunStsBmp[STS_BMP_ERRH][ucLunInPU])
                    & (~l_aTLunStsBmp[STS_BMP_LOCK][ucLunInPU]);
                break;
20005610:	ff8f46        	j	20005451 <L3_SchSelTLun..AH_1482204275+0x65>

20005613 <L3_SchSelTLun..AH_1482204275+0x227>:
	...

20005615 <L3_SchSelTLun..AH_1482204275+0x229>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:349
                    & (~l_aTLunStsBmp[STS_BMP_NFC_ERROR][ucLunInPU]);
                break;
            }
            case ARB_BMP_RECYCLE:
            {
                L3_SchUpdateStsBmp(ucLunInPU, STS_BMP_NFC_EMPTY);
20005615:	020c      	movi.n	a2, 0
20005617:	730c      	movi.n	a3, 7
20005619:	feeb85        	call0	200044d4 <L3_SchUpdateStsBmp>
2000561c:	020c      	movi.n	a2, 0
2000561e:	ec7f01        	l32r	a0, 2000081c <_stext+0x11c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:351
                
                ulArbBitmap = l_aTLunStsBmp[STS_BMP_NFC_EMPTY][ucLunInPU]
20005621:	0020c0        	memw
20005624:	ec8971        	l32r	a7, 20000848 <_stext+0x148>
20005627:	832792        	l32i	a9, a7, 0x20c
2000562a:	fa7c      	movi.n	a10, -1
2000562c:	3099a0        	xor	a9, a9, a10
2000562f:	0020c0        	memw
20005632:	8b2782        	l32i	a8, a7, 0x22c
20005635:	3088a0        	xor	a8, a8, a10
20005638:	108890        	and	a8, a8, a9
2000563b:	0020c0        	memw
2000563e:	872792        	l32i	a9, a7, 0x21c
20005641:	0020c0        	memw
20005644:	9b2772        	l32i	a7, a7, 0x26c
20005647:	107790        	and	a7, a7, a9
2000564a:	107780        	and	a7, a7, a8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:355
                    & ( l_aTLunStsBmp[STS_BMP_RECYCLE][ucLunInPU])
                    & (~l_aTLunStsBmp[STS_BMP_ERRH][ucLunInPU])
                    & (~l_aTLunStsBmp[STS_BMP_PEND][ucLunInPU]);
                break;
2000564d:	ff8006        	j	20005451 <L3_SchSelTLun..AH_1482204275+0x65>

20005650 <L3_SchSelTLun..AH_1482204275+0x264>:
	...

20005651 <L3_SchSelTLun..AH_1482204275+0x265>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:359
            }
            case ARB_BMP_ERRH:
            {
                L3_SchUpdateStsBmp(ucLunInPU, STS_BMP_NFC_ERROR);
20005651:	020c      	movi.n	a2, 0
20005653:	830c      	movi.n	a3, 8
20005655:	fee7c5        	call0	200044d4 <L3_SchUpdateStsBmp>
20005658:	020c      	movi.n	a2, 0
2000565a:	ec7001        	l32r	a0, 2000081c <_stext+0x11c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:361

                ulArbBitmap = (l_aTLunStsBmp[STS_BMP_NFC_ERROR][ucLunInPU] | l_aTLunStsBmp[STS_BMP_ERRH][ucLunInPU])
2000565d:	0020c0        	memw
20005660:	ec7a71        	l32r	a7, 20000848 <_stext+0x148>
20005663:	932782        	l32i	a8, a7, 0x24c
20005666:	f97c      	movi.n	a9, -1
20005668:	308890        	xor	a8, a8, a9
2000566b:	0020c0        	memw
2000566e:	8b2792        	l32i	a9, a7, 0x22c
20005671:	0020c0        	memw
20005674:	9f2772        	l32i	a7, a7, 0x27c
20005677:	207790        	or	a7, a7, a9
2000567a:	107780        	and	a7, a7, a8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:363
                    & (~l_aTLunStsBmp[STS_BMP_LOCK][ucLunInPU]);
                break;
2000567d:	ff7406        	j	20005451 <L3_SchSelTLun..AH_1482204275+0x65>

20005680 <L3_SchEventHandler..BH_1482204275>:
L3_SchEventHandler():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:510
Usage      :
History    :
1. 2014.12.10 JasonGuo create function
==============================================================================*/
LOCAL U32 L3_SchEventHandler(void)
{
20005680:	f0c112        	addi	a1, a1, -16
20005683:	0109      	s32i.n	a0, a1, 0
20005685:	ec2e01        	l32r	a0, 20000740 <_stext+0x40>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Event.c:161
****************************************************************************/
U32 CommCheckEvent(U8 EventOwner,COMMON_EVENT* EVENT)
{
    EVENT->Event = ModuleEvent[EventOwner].Event;

    if (0 == EVENT->Event)
20005688:	6048      	l32i.n	a4, a0, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:523
    if (COMM_EVENT_STATUS_SUCCESS_NOEVENT == ulResult)
    {
        return COMM_EVENT_STATUS_SUCCESS_NOEVENT;
    }

    if (TRUE == L3_Event.EventFAEDbg)
2000568a:	170c      	movi.n	a7, 1
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Event.c:161
2000568c:	075416        	beqz	a4, 20005705 <L3_SchEventHandler..BH_1482204275+0x85>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:523
2000568f:	29e4c7        	bbsi	a4, 12, 200056bc <L3_SchEventHandler..BH_1482204275+0x3c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:527
    {
        return COMM_EVENT_STATUS_BLOCKING;
    }
    else if (TRUE == L3_Event.EventDbg)
20005692:	42e487        	bbsi	a4, 8, 200056d8 <L3_SchEventHandler..BH_1482204275+0x58>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:537
        {
            CommClearEvent(COMM_EVENT_OWNER_L3, COMM_EVENT_OFFSET_DBG);
            Ret = COMM_EVENT_STATUS_SUCCESS_NOEVENT;
        }
    }
    else if (TRUE == L3_Event.EventInit)
20005695:	0f6407        	bbci	a4, 0, 200056a8 <L3_SchEventHandler..BH_1482204275+0x28>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Event.c:139
    U32 EventEN;

    EventEN = ( 1 << EventID );

    /* Clears the event. */
    ModuleEvent[EventOwner].Event &= ~EventEN;
20005698:	e27c      	movi.n	a2, -2
2000569a:	102420        	and	a2, a4, a2
2000569d:	6029      	s32i.n	a2, a0, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:540
    {
        CommGetEventParameter(COMM_EVENT_OWNER_L3, &pParameter);
        CommClearEvent(COMM_EVENT_OWNER_L3, COMM_EVENT_OFFSET_INIT);
2000569f:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:595
    else
    {
        ;
    }

    return Ret;
200056a1:	0108      	l32i.n	a0, a1, 0
200056a3:	10c112        	addi	a1, a1, 16
200056a6:	f00d      	ret.n

200056a8 <L3_SchEventHandler..BH_1482204275+0x28>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:543
    {
        CommGetEventParameter(COMM_EVENT_OWNER_L3, &pParameter);
        CommClearEvent(COMM_EVENT_OWNER_L3, COMM_EVENT_OFFSET_INIT);
        Ret = COMM_EVENT_STATUS_SUCCESS_NOEVENT;
    }
    else if (TRUE == L3_Event.EventErrorHandling)
200056a8:	196447        	bbci	a4, 4, 200056c5 <L3_SchEventHandler..BH_1482204275+0x45>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:547
    {
        //L3_ErrorHandlingUnlockPU();
        //clear event,error handle finished!
        CommClearEvent(COMM_EVENT_OWNER_L3, COMM_EVENT_OFFSET_ERR);
200056ab:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Event.c:139
200056ad:	f36c      	movi.n	a3, -17
200056af:	103430        	and	a3, a4, a3
200056b2:	6039      	s32i.n	a3, a0, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:595
    else
    {
        ;
    }

    return Ret;
200056b4:	0108      	l32i.n	a0, a1, 0
200056b6:	10c112        	addi	a1, a1, 16
200056b9:	f00d      	ret.n

200056bb <L3_SchEventHandler..BH_1482204275+0x3b>:
	...

200056bc <L3_SchEventHandler..BH_1482204275+0x3c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:525
        return COMM_EVENT_STATUS_SUCCESS_NOEVENT;
    }

    if (TRUE == L3_Event.EventFAEDbg)
    {
        return COMM_EVENT_STATUS_BLOCKING;
200056bc:	320c      	movi.n	a2, 3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:595
    else
    {
        ;
    }

    return Ret;
200056be:	0108      	l32i.n	a0, a1, 0
200056c0:	10c112        	addi	a1, a1, 16
200056c3:	f00d      	ret.n

200056c5 <L3_SchEventHandler..BH_1482204275+0x45>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:550
        //L3_ErrorHandlingUnlockPU();
        //clear event,error handle finished!
        CommClearEvent(COMM_EVENT_OWNER_L3, COMM_EVENT_OFFSET_ERR);
        Ret = COMM_EVENT_STATUS_SUCCESS_NOEVENT;
    }
    else if (TRUE == L3_Event.EventLLF)
200056c5:	306417        	bbci	a4, 1, 200056f9 <L3_SchEventHandler..BH_1482204275+0x79>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:554
    {
        //get parameter from comm event
        CommGetEventParameter(COMM_EVENT_OWNER_L3, &pParameter);
        CommClearEvent(COMM_EVENT_OWNER_L3, COMM_EVENT_OFFSET_LLF);
200056c8:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Event.c:139
200056ca:	d57c      	movi.n	a5, -3
200056cc:	105450        	and	a5, a4, a5
200056cf:	6059      	s32i.n	a5, a0, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:595
    else
    {
        ;
    }

    return Ret;
200056d1:	0108      	l32i.n	a0, a1, 0
200056d3:	10c112        	addi	a1, a1, 16
200056d6:	f00d      	ret.n

200056d8 <L3_SchEventHandler..BH_1482204275+0x58>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:529
    {
        return COMM_EVENT_STATUS_BLOCKING;
    }
    else if (TRUE == L3_Event.EventDbg)
    {
        DBG_Printf("Not Support Debug Event.\n");
200056d8:	eca321        	l32r	a2, 20000964 <_stext+0x264>
200056db:	055885        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:533
        ulResult = SUCCESS;
        if (SUCCESS == ulResult)
        {
            CommClearEvent(COMM_EVENT_OWNER_L3, COMM_EVENT_OFFSET_DBG);
200056de:	00a022        	movi	a2, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Event.c:139
200056e1:	ffae82        	movi	a8, 0xfffffeff
200056e4:	ec1771        	l32r	a7, 20000740 <_stext+0x40>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:595
    else
    {
        ;
    }

    return Ret;
200056e7:	002102        	l32i	a0, a1, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Event.c:139
200056ea:	062762        	l32i	a6, a7, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:595
200056ed:	10c112        	addi	a1, a1, 16
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Event.c:139
200056f0:	106680        	and	a6, a6, a8
200056f3:	6769      	s32i.n	a6, a7, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:595
200056f5:	f00d      	ret.n

200056f7 <L3_SchEventHandler..BH_1482204275+0x77>:
	...

200056f9 <L3_SchEventHandler..BH_1482204275+0x79>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:557
        //get parameter from comm event
        CommGetEventParameter(COMM_EVENT_OWNER_L3, &pParameter);
        CommClearEvent(COMM_EVENT_OWNER_L3, COMM_EVENT_OFFSET_LLF);
        Ret = COMM_EVENT_STATUS_SUCCESS_NOEVENT;
    }
    else if (TRUE == L3_Event.EventReset)
200056f9:	146437        	bbci	a4, 3, 20005711 <L3_SchEventHandler..BH_1482204275+0x91>
200056fc:	320c      	movi.n	a2, 3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:595
    else
    {
        ;
    }

    return Ret;
200056fe:	0108      	l32i.n	a0, a1, 0
20005700:	10c112        	addi	a1, a1, 16
20005703:	f00d      	ret.n

20005705 <L3_SchEventHandler..BH_1482204275+0x85>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:520
    Ret = COMM_EVENT_STATUS_BLOCKING;

    ulResult = CommCheckEvent(COMM_EVENT_OWNER_L3, &L3_Event);
    if (COMM_EVENT_STATUS_SUCCESS_NOEVENT == ulResult)
    {
        return COMM_EVENT_STATUS_SUCCESS_NOEVENT;
20005705:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:595
    else
    {
        ;
    }

    return Ret;
20005707:	0108      	l32i.n	a0, a1, 0
20005709:	10c112        	addi	a1, a1, 16
2000570c:	f00d      	ret.n

2000570e <L3_SchEventHandler..BH_1482204275+0x8e>:
2000570e:	000000                                        ...

20005711 <L3_SchEventHandler..BH_1482204275+0x91>:
20005711:	049240        	extui	a9, a4, 2, 1
20005714:	089916        	beqz	a9, 200057a1 <L3_SchEventHandler..BH_1482204275+0x121>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:95
==============================================================================*/
BOOL L3_IFIsAllFCmdIntrQEmpty(void)
{
    U8 ucTLun;

    for (ucTLun = 0; ucTLun < SUBSYSTEM_LUN_NUM; ucTLun++)
20005717:	ec03b1        	l32r	a11, 20000724 <_stext+0x24>
2000571a:	060c      	movi.n	a6, 0
2000571c:	080c      	movi.n	a8, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:563
    {
        ; // pending
    }
    else if (TRUE == L3_Event.EventShutDown)
    {
        if (FALSE == L3_IFIsAllFCmdIntrQEmpty())
2000571e:	ebffa1        	l32r	a10, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:95
20005721:	ec4721        	l32r	a2, 20000840 <_stext+0x140>
20005724:	ea38      	l32i.n	a3, a10, 56
20005726:	3e2aa2        	l32i	a10, a10, 248
20005729:	649376        	loopnez	a3, 20005791 <L3_SchEventHandler..BH_1482204275+0x111>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:608
    20151029    abby    add ucLun para
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetEmpty(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
2000572c:	745080        	extui	a5, a8, 0, 8
2000572f:	35ba      	add.n	a3, a5, a11
20005731:	800332        	l8ui	a3, a3, 128
20005734:	1133c0        	slli	a3, a3, 4
20005737:	3a3a      	add.n	a3, a10, a3
20005739:	0020c0        	memw
2000573c:	000332        	l8ui	a3, a3, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:243
BOOL L3_SchGetStsBit(U8 ucTLun, STS_BITMAP_TYPE eStsBmpType)
{
    U8 ucPU = L3_GET_PU(ucTLun);
    U8 ucLunInPU = L3_GET_LUN_IN_PU(ucTLun);

    return (0==(l_aTLunStsBmp[eStsBmpType][ucLunInPU] & (1<<ucPU))) ? 0 : 1;
2000573f:	079d      	mov.n	a9, a7
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:67
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
LOCAL BOOL L3_IFIsFCmdIntrQEmpty(U8 ucTLun)
{
    if ((TRUE == HAL_NfcGetEmpty(L3_GET_PU(ucTLun), L3_GET_LUN_IN_PU(ucTLun)))
20005741:	706327        	bbci	a3, 2, 200057b5 <L3_SchEventHandler..BH_1482204275+0x135>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:243
20005744:	401500        	ssl	a5
20005747:	a15700        	sll	a5, a7
2000574a:	0020c0        	memw
2000574d:	7f2232        	l32i	a3, a2, 0x1fc
20005750:	103350        	and	a3, a3, a5
20005753:	839630        	moveqz	a9, a6, a3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:67
20005756:	5b1926        	beqi	a9, 1, 200057b5 <L3_SchEventHandler..BH_1482204275+0x135>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:243
20005759:	079d      	mov.n	a9, a7
2000575b:	0020c0        	memw
2000575e:	772232        	l32i	a3, a2, 0x1dc
20005761:	103350        	and	a3, a3, a5
20005764:	839630        	moveqz	a9, a6, a3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:67
20005767:	4a1926        	beqi	a9, 1, 200057b5 <L3_SchEventHandler..BH_1482204275+0x135>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:243
2000576a:	079d      	mov.n	a9, a7
2000576c:	0020c0        	memw
2000576f:	7b2232        	l32i	a3, a2, 0x1ec
20005772:	103350        	and	a3, a3, a5
20005775:	839630        	moveqz	a9, a6, a3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:67
20005778:	391926        	beqi	a9, 1, 200057b5 <L3_SchEventHandler..BH_1482204275+0x135>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:243
2000577b:	079d      	mov.n	a9, a7
2000577d:	0020c0        	memw
20005780:	832232        	l32i	a3, a2, 0x20c
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:95
==============================================================================*/
BOOL L3_IFIsAllFCmdIntrQEmpty(void)
{
    U8 ucTLun;

    for (ucTLun = 0; ucTLun < SUBSYSTEM_LUN_NUM; ucTLun++)
20005783:	881b      	addi.n	a8, a8, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:243
20005785:	103350        	and	a3, a3, a5
20005788:	839630        	moveqz	a9, a6, a3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:67
History    : 
    1. 2016.7.18 JasonGuo create function
==============================================================================*/
LOCAL BOOL L3_IFIsFCmdIntrQEmpty(U8 ucTLun)
{
    if ((TRUE == HAL_NfcGetEmpty(L3_GET_PU(ucTLun), L3_GET_LUN_IN_PU(ucTLun)))
2000578b:	261926        	beqi	a9, 1, 200057b5 <L3_SchEventHandler..BH_1482204275+0x135>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:95
==============================================================================*/
BOOL L3_IFIsAllFCmdIntrQEmpty(void)
{
    U8 ucTLun;

    for (ucTLun = 0; ucTLun < SUBSYSTEM_LUN_NUM; ucTLun++)
2000578e:	748080        	extui	a8, a8, 0, 8

20005791 <L3_SchEventHandler..BH_1482204275+0x111>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:570
            Ret = COMM_EVENT_STATUS_GET_EVENTPEND;
        }
        else
        {
            CommClearEvent(COMM_EVENT_OWNER_L3, COMM_EVENT_OFFSET_SHUTDOWN);
            Ret = COMM_EVENT_STATUS_SUCCESS_NOEVENT;
20005791:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Event.c:139
20005793:	b97c      	movi.n	a9, -5
20005795:	109490        	and	a9, a4, a9
20005798:	6099      	s32i.n	a9, a0, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:595
    else
    {
        ;
    }

    return Ret;
2000579a:	0108      	l32i.n	a0, a1, 0
2000579c:	10c112        	addi	a1, a1, 16
2000579f:	f00d      	ret.n

200057a1 <L3_SchEventHandler..BH_1482204275+0x121>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:573
        {
            CommClearEvent(COMM_EVENT_OWNER_L3, COMM_EVENT_OFFSET_SHUTDOWN);
            Ret = COMM_EVENT_STATUS_SUCCESS_NOEVENT;
        }
    }
    else if (TRUE == L3_Event.EventBoot)
200057a1:	1b6457        	bbci	a4, 5, 200057c0 <L3_SchEventHandler..BH_1482204275+0x140>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:576
    {
        CommGetEventParameter(COMM_EVENT_OWNER_L3, &pParameter);
        CommClearEvent(COMM_EVENT_OWNER_L3, COMM_EVENT_OFFSET_BOOT);
200057a4:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Event.c:139
200057a6:	dfafa2        	movi	a10, -33
200057a9:	10a4a0        	and	a10, a4, a10
200057ac:	60a9      	s32i.n	a10, a0, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:595
    else
    {
        ;
    }

    return Ret;
200057ae:	0108      	l32i.n	a0, a1, 0
200057b0:	10c112        	addi	a1, a1, 16
200057b3:	f00d      	ret.n

200057b5 <L3_SchEventHandler..BH_1482204275+0x135>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:565
    }
    else if (TRUE == L3_Event.EventShutDown)
    {
        if (FALSE == L3_IFIsAllFCmdIntrQEmpty())
        {
            Ret = COMM_EVENT_STATUS_GET_EVENTPEND;
200057b5:	220c      	movi.n	a2, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:595
    else
    {
        ;
    }

    return Ret;
200057b7:	0108      	l32i.n	a0, a1, 0
200057b9:	10c112        	addi	a1, a1, 16
200057bc:	f00d      	ret.n

200057be <L3_SchEventHandler..BH_1482204275+0x13e>:
	...

200057c0 <L3_SchEventHandler..BH_1482204275+0x140>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:579
    {
        CommGetEventParameter(COMM_EVENT_OWNER_L3, &pParameter);
        CommClearEvent(COMM_EVENT_OWNER_L3, COMM_EVENT_OFFSET_BOOT);
        Ret = COMM_EVENT_STATUS_SUCCESS_NOEVENT;
    }
    else if (TRUE == L3_Event.EventRebuild)
200057c0:	106467        	bbci	a4, 6, 200057d4 <L3_SchEventHandler..BH_1482204275+0x154>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:582
    {
        CommGetEventParameter(COMM_EVENT_OWNER_L3, &pParameter);
        CommClearEvent(COMM_EVENT_OWNER_L3, COMM_EVENT_OFFSET_REBUILD);
200057c3:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Event.c:139
200057c5:	bfafb2        	movi	a11, -65
200057c8:	10b4b0        	and	a11, a4, a11
200057cb:	60b9      	s32i.n	a11, a0, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:595
    else
    {
        ;
    }

    return Ret;
200057cd:	0108      	l32i.n	a0, a1, 0
200057cf:	10c112        	addi	a1, a1, 16
200057d2:	f00d      	ret.n

200057d4 <L3_SchEventHandler..BH_1482204275+0x154>:
200057d4:	040a40        	extui	a0, a4, 10, 1
200057d7:	f21016        	beqz	a0, 200056fc <L3_SchEventHandler..BH_1482204275+0x7c>
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
    20141028    Gavin   change attribute to "INLINE"
------------------------------------------------------------------------------*/
INLINE U32 HAL_GetMcuId(void)
{
    U32 ulMcuId;
    ulMcuId = XT_RSR_PRID();
200057da:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:587
        CommClearEvent(COMM_EVENT_OWNER_L3, COMM_EVENT_OFFSET_REBUILD);
        Ret = COMM_EVENT_STATUS_SUCCESS_NOEVENT;
    }
    else if (TRUE == L3_Event.EventIdle)
    {
        DBG_Printf("MCU#%d L3_EventHandler.\n", HAL_GetMcuId());
200057dd:	ec6221        	l32r	a2, 20000968 <_stext+0x268>
200057e0:	054805        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:588
        DBG_Getch();
200057e3:	ebcd01        	l32r	a0, 20000718 <_stext+0x18>
200057e6:	0000c0        	callx0	a0
200057e9:	ffc3c6        	j	200056fc <L3_SchEventHandler..BH_1482204275+0x7c>

200057ec <TEST_NfcCheck1PlnData..PAB_1482204275>:
TEST_NfcCheck1PlnData():
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:920

Description   : one read buff size = PHYPG_SZ * PLN_PER_LUN 
Reference     :
****************************************************************************/
LOCAL void TEST_NfcCheck1PlnData(FLASH_ADDR *pFlashAddr, U8 ucSecStart, U16 usSecEnd, U16 usRdBufId, U8 ucInterPgCnt)
{
200057ec:	ebccb1        	l32r	a11, 2000071c <_stext+0x1c>
200057ef:	c0c112        	addi	a1, a1, -64
200057f2:	51f9      	s32i.n	a15, a1, 20
200057f4:	41e9      	s32i.n	a14, a1, 16
200057f6:	31d9      	s32i.n	a13, a1, 12
200057f8:	21c9      	s32i.n	a12, a1, 8
200057fa:	1109      	s32i.n	a0, a1, 4
200057fc:	ec0c      	movi.n	a12, 14
200057fe:	001c      	movi.n	a0, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:721
LOCAL U16 TEST_NfcGetWrBufId(FLASH_ADDR* pFlashAddr)
{
    U16 usWrBufId;

    //usWrBufId = START_WBUF_ID + ucPageInWl * TEST_GET_ADDR_OFF(pFlashAddr->ucPU, pFlashAddr->ucLun, pFlashAddr->usPage);
    usWrBufId = START_WBUF_ID;
20005800:	0ba8      	l32i.n	a10, a11, 0
20005802:	ebe6d1        	l32r	a13, 2000079c <_stext+0x9c>
20005805:	0aa8      	l32i.n	a10, a10, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:920

Description   : one read buff size = PHYPG_SZ * PLN_PER_LUN 
Reference     :
****************************************************************************/
LOCAL void TEST_NfcCheck1PlnData(FLASH_ADDR *pFlashAddr, U8 ucSecStart, U16 usSecEnd, U16 usRdBufId, U8 ucInterPgCnt)
{
20005807:	02ed      	mov.n	a14, a2
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:721
LOCAL U16 TEST_NfcGetWrBufId(FLASH_ADDR* pFlashAddr)
{
    U16 usWrBufId;

    //usWrBufId = START_WBUF_ID + ucPageInWl * TEST_GET_ADDR_OFF(pFlashAddr->ucPU, pFlashAddr->ucLun, pFlashAddr->usPage);
    usWrBufId = START_WBUF_ID;
20005809:	aada      	add.n	a10, a10, a13
2000580b:	f5a0a0        	extui	a10, a10, 16, 16
2000580e:	11aaf0        	slli	a10, a10, 1
20005811:	f4a0a0        	extui	a10, a10, 0, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:936
#else
    ulDwNum = SEC_SZ_DW;
#endif
    
    usWrBufId  = TEST_NfcGetWrBufId(pFlashAddr);
    ulSecPerPg = g_bSinglePln ? SEC_PER_PHYPG : SEC_PER_PIPE_PG;
20005814:	0020c0        	memw
20005817:	092c      	movi.n	a9, 32
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:938

    if (g_bRawDataRead)
20005819:	6d2b82        	l32i	a8, a11, 0x1b4
2000581c:	0278      	l32i.n	a7, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:936
#else
    ulDwNum = SEC_SZ_DW;
#endif
    
    usWrBufId  = TEST_NfcGetWrBufId(pFlashAddr);
    ulSecPerPg = g_bSinglePln ? SEC_PER_PHYPG : SEC_PER_PIPE_PG;
2000581e:	5d2bb2        	l32i	a11, a11, 0x174
20005821:	80a022        	movi	a2, 128
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:938

    if (g_bRawDataRead)
20005824:	357070        	extui	a7, a7, 16, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:936
#else
    ulDwNum = SEC_SZ_DW;
#endif
    
    usWrBufId  = TEST_NfcGetWrBufId(pFlashAddr);
    ulSecPerPg = g_bSinglePln ? SEC_PER_PHYPG : SEC_PER_PIPE_PG;
20005827:	9329b0        	movnez	a2, a9, a11
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:938

    if (g_bRawDataRead)
2000582a:	11f816        	beqz	a8, 2000594d <TEST_NfcCheck1PlnData..PAB_1482204275+0x161>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:940
    {
        ulSecInBuf = SEC_PER_PHYPG * pFlashAddr->bsPln * 2;
2000582d:	1177a0        	slli	a7, a7, 6
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:941
        ulPgSzBits = g_bSinglePln ? PHYPG_SZ_BITS : LOGIC_PIPE_PG_SZ_BITS;
20005830:	0020c0        	memw
20005833:	ebbab1        	l32r	a11, 2000071c <_stext+0x1c>
20005836:	5d2bb2        	l32i	a11, a11, 0x174
20005839:	930cb0        	movnez	a0, a12, a11

2000583c <TEST_NfcCheck1PlnData..PAB_1482204275+0x50>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:953
   
    ulWDramAddr = (HAL_NfcGetDmaAddr(usWrBufId, 0, ulPgSzBits) << 1) + TEST_START_ADDRESS;
    ulRDramAddr = (HAL_NfcGetDmaAddr(usRdBufId, ulSecInBuf, ulPgSzBits) << 1) + TEST_START_ADDRESS;
    //DBG_Printf("Check data:RDramBaseAddr0x%x ulSecInBuf%d ucInterPgCnt%d\n",ulRDramAddr,ulSecInBuf,ucInterPgCnt);
    
    for (usSec = ucSecStart; usSec <= usSecEnd; usSec++)
2000583c:	a139      	s32i.n	a3, a1, 40
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:950
        ulSecInBuf = SEC_PER_PHYPG * pFlashAddr->bsPln;
        ulPgSzBits = g_bSinglePln ? LOGIC_PG_SZ_BITS : LOGIC_PIPE_PG_SZ_BITS;
    }
   
    ulWDramAddr = (HAL_NfcGetDmaAddr(usWrBufId, 0, ulPgSzBits) << 1) + TEST_START_ADDRESS;
    ulRDramAddr = (HAL_NfcGetDmaAddr(usRdBufId, ulSecInBuf, ulPgSzBits) << 1) + TEST_START_ADDRESS;
2000583e:	eb7c      	movi.n	a11, -2
20005840:	11f770        	slli	a15, a7, 9
20005843:	401000        	ssl	a0
20005846:	ec4071        	l32r	a7, 20000948 <_stext+0x248>
20005849:	a1d500        	sll	a13, a5
2000584c:	ddfa      	add.n	a13, a13, a15
2000584e:	10ddb0        	and	a13, a13, a11
20005851:	dd7a      	add.n	a13, a13, a7
20005853:	81d9      	s32i.n	a13, a1, 32
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:953
    //DBG_Printf("Check data:RDramBaseAddr0x%x ulSecInBuf%d ucInterPgCnt%d\n",ulRDramAddr,ulSecInBuf,ucInterPgCnt);
    
    for (usSec = ucSecStart; usSec <= usSecEnd; usSec++)
20005855:	02b437        	bgeu	a4, a3, 2000585b <TEST_NfcCheck1PlnData..PAB_1482204275+0x6f>
20005858:	003846        	j	2000593d <TEST_NfcCheck1PlnData..PAB_1482204275+0x151>
2000585b:	000c      	movi.n	a0, 0
2000585d:	a13a00        	sll	a3, a10
20005860:	825260        	mull	a5, a2, a6
20005863:	6159      	s32i.n	a5, a1, 24
20005865:	1033b0        	and	a3, a3, a11
20005868:	0109      	s32i.n	a0, a1, 0
2000586a:	241b      	addi.n	a2, a4, 1
2000586c:	000c      	movi.n	a0, 0
2000586e:	7129      	s32i.n	a2, a1, 28
20005870:	337a      	add.n	a3, a3, a7
20005872:	9139      	s32i.n	a3, a1, 36
20005874:	020c      	movi.n	a2, 0
20005876:	000406        	j	2000588a <TEST_NfcCheck1PlnData..PAB_1482204275+0x9e>

20005879 <TEST_NfcCheck1PlnData..PAB_1482204275+0x8d>:
20005879:	a168      	l32i.n	a6, a1, 40
2000587b:	7178      	l32i.n	a7, a1, 28
2000587d:	861b      	addi.n	a8, a6, 1
2000587f:	f46080        	extui	a6, a8, 0, 16
20005882:	a169      	s32i.n	a6, a1, 40
20005884:	029677        	bne	a6, a7, 2000588a <TEST_NfcCheck1PlnData..PAB_1482204275+0x9e>
20005887:	0025c6        	j	20005922 <TEST_NfcCheck1PlnData..PAB_1482204275+0x136>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:960
        if ((0 == usSec % 2)&&(usSec != 0) && g_bRawDataRead)
        {
            ulRDramAddr = ulRDramAddr + CW_INFO_SZ;
            //DBG_Printf("Sec Num:%d ulRDramAddr:0x%x\n",usSec,ulRDramAddr);
        }
        for (ulDwIndex = 0; ulDwIndex < ulDwNum; ulDwIndex++)
2000588a:	6148      	l32i.n	a4, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:955
    ulRDramAddr = (HAL_NfcGetDmaAddr(usRdBufId, ulSecInBuf, ulPgSzBits) << 1) + TEST_START_ADDRESS;
    //DBG_Printf("Check data:RDramBaseAddr0x%x ulSecInBuf%d ucInterPgCnt%d\n",ulRDramAddr,ulSecInBuf,ucInterPgCnt);
    
    for (usSec = ucSecStart; usSec <= usSecEnd; usSec++)
    {
        if ((0 == usSec % 2)&&(usSec != 0) && g_bRawDataRead)
2000588c:	a198      	l32i.n	a9, a1, 40
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:960
        {
            ulRDramAddr = ulRDramAddr + CW_INFO_SZ;
            //DBG_Printf("Sec Num:%d ulRDramAddr:0x%x\n",usSec,ulRDramAddr);
        }
        for (ulDwIndex = 0; ulDwIndex < ulDwNum; ulDwIndex++)
2000588e:	a138      	l32i.n	a3, a1, 40
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:955
    ulRDramAddr = (HAL_NfcGetDmaAddr(usRdBufId, ulSecInBuf, ulPgSzBits) << 1) + TEST_START_ADDRESS;
    //DBG_Printf("Check data:RDramBaseAddr0x%x ulSecInBuf%d ucInterPgCnt%d\n",ulRDramAddr,ulSecInBuf,ucInterPgCnt);
    
    for (usSec = ucSecStart; usSec <= usSecEnd; usSec++)
    {
        if ((0 == usSec % 2)&&(usSec != 0) && g_bRawDataRead)
20005890:	11e907        	bbsi	a9, 0, 200058a5 <TEST_NfcCheck1PlnData..PAB_1482204275+0xb9>
20005893:	e98c      	beqz.n	a9, 200058a5 <TEST_NfcCheck1PlnData..PAB_1482204275+0xb9>
20005895:	eba1d1        	l32r	a13, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:957
        {
            ulRDramAddr = ulRDramAddr + CW_INFO_SZ;
20005898:	81b8      	l32i.n	a11, a1, 32
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:955
    ulRDramAddr = (HAL_NfcGetDmaAddr(usRdBufId, ulSecInBuf, ulPgSzBits) << 1) + TEST_START_ADDRESS;
    //DBG_Printf("Check data:RDramBaseAddr0x%x ulSecInBuf%d ucInterPgCnt%d\n",ulRDramAddr,ulSecInBuf,ucInterPgCnt);
    
    for (usSec = ucSecStart; usSec <= usSecEnd; usSec++)
    {
        if ((0 == usSec % 2)&&(usSec != 0) && g_bRawDataRead)
2000589a:	6d2dd2        	l32i	a13, a13, 0x1b4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:957
        {
            ulRDramAddr = ulRDramAddr + CW_INFO_SZ;
2000589d:	04dbc2        	addmi	a12, a11, 0x400
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:955
    ulRDramAddr = (HAL_NfcGetDmaAddr(usRdBufId, ulSecInBuf, ulPgSzBits) << 1) + TEST_START_ADDRESS;
    //DBG_Printf("Check data:RDramBaseAddr0x%x ulSecInBuf%d ucInterPgCnt%d\n",ulRDramAddr,ulSecInBuf,ucInterPgCnt);
    
    for (usSec = ucSecStart; usSec <= usSecEnd; usSec++)
    {
        if ((0 == usSec % 2)&&(usSec != 0) && g_bRawDataRead)
200058a0:	93bcd0        	movnez	a11, a12, a13
200058a3:	81b9      	s32i.n	a11, a1, 32
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:960
        {
            ulRDramAddr = ulRDramAddr + CW_INFO_SZ;
            //DBG_Printf("Sec Num:%d ulRDramAddr:0x%x\n",usSec,ulRDramAddr);
        }
        for (ulDwIndex = 0; ulDwIndex < ulDwNum; ulDwIndex++)
200058a5:	11d370        	slli	a13, a3, 9
200058a8:	81c8      	l32i.n	a12, a1, 32
200058aa:	334a      	add.n	a3, a3, a4
200058ac:	ccda      	add.n	a12, a12, a13
200058ae:	b139      	s32i.n	a3, a1, 44
200058b0:	0d0c      	movi.n	a13, 0
200058b2:	02dcf2        	addmi	a15, a12, 0x200
200058b5:	c1f9      	s32i.n	a15, a1, 48
200058b7:	000286        	j	200058c5 <TEST_NfcCheck1PlnData..PAB_1482204275+0xd9>

200058ba <TEST_NfcCheck1PlnData..PAB_1482204275+0xce>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:986
                bsErr = TRUE;
                DBG_Getch();
            }
            else
            {
                *(U32*)(ulRDramAddr + (usSec<<SEC_SZ_BITS) + ulDwIndex * 4) = 0x0;
200058ba:	0c09      	s32i.n	a0, a12, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:960
        if ((0 == usSec % 2)&&(usSec != 0) && g_bRawDataRead)
        {
            ulRDramAddr = ulRDramAddr + CW_INFO_SZ;
            //DBG_Printf("Sec Num:%d ulRDramAddr:0x%x\n",usSec,ulRDramAddr);
        }
        for (ulDwIndex = 0; ulDwIndex < ulDwNum; ulDwIndex++)
200058bc:	dd1b      	addi.n	a13, a13, 1
200058be:	c1f8      	l32i.n	a15, a1, 48
200058c0:	cc4b      	addi.n	a12, a12, 4
200058c2:	b31cf7        	beq	a12, a15, 20005879 <TEST_NfcCheck1PlnData..PAB_1482204275+0x8d>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:962
        {
            ulWrData = TEST_NfcCalcuData(((pFlashAddr->ucLun << 6) + pFlashAddr->ucPU)
200058c5:	031e62        	l16ui	a6, a14, 6
200058c8:	010e42        	l8ui	a4, a14, 1
200058cb:	000e32        	l8ui	a3, a14, 0
200058ce:	1154a0        	slli	a5, a4, 6
200058d1:	805350        	add	a5, a3, a5
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:972
            {
                ulWrData = 0;
            }
        #endif
        
            ulRdData = *(volatile U32*)(ulRDramAddr + (usSec << SEC_SZ_BITS) + ulDwIndex * 4);
200058d4:	0020c0        	memw
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:973
            if( ulWrData != ulRdData )
200058d7:	0b21f2        	l32i	a15, a1, 44
200058da:	115580        	slli	a5, a5, 8
200058dd:	205650        	or	a5, a6, a5
200058e0:	115580        	slli	a5, a5, 8
200058e3:	20ff50        	or	a15, a15, a5
200058e6:	11ff80        	slli	a15, a15, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:972
            {
                ulWrData = 0;
            }
        #endif
        
            ulRdData = *(volatile U32*)(ulRDramAddr + (usSec << SEC_SZ_BITS) + ulDwIndex * 4);
200058e9:	0c58      	l32i.n	a5, a12, 0
200058eb:	d159      	s32i.n	a5, a1, 52
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:973
            if( ulWrData != ulRdData )
200058ed:	fdfa      	add.n	a15, a13, a15
200058ef:	c71f57        	beq	a15, a5, 200058ba <TEST_NfcCheck1PlnData..PAB_1482204275+0xce>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:976
            {
            #if 1
                DBG_Printf("PU %d LUN%d Block %d Page %d Data Miss-compare!\n",pFlashAddr->ucPU,pFlashAddr->ucLun,pFlashAddr->usBlock,pFlashAddr->usPage);
200058f2:	ec1e21        	l32r	a2, 2000096c <_stext+0x26c>
200058f5:	021e52        	l16ui	a5, a14, 4
200058f8:	053685        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:977
                DBG_Printf("Rdaddr:0x%x WtBuffStartAddr:0x%x ulsec:0x%x Rdata:0x%x Wdata:0x%x\n"
200058fb:	ec1d21        	l32r	a2, 20000970 <_stext+0x270>
200058fe:	0c3d      	mov.n	a3, a12
20005900:	9148      	l32i.n	a4, a1, 36
20005902:	a158      	l32i.n	a5, a1, 40
20005904:	0f7d      	mov.n	a7, a15
20005906:	d168      	l32i.n	a6, a1, 52
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:980
                ,ulRDramAddr + (usSec<<SEC_SZ_BITS)+ ulDwIndex*4,ulWDramAddr,usSec,ulRdData,ulWrData);
            #endif
                ulDwErrCount++;
20005908:	0021f2        	l32i	a15, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:977
            ulRdData = *(volatile U32*)(ulRDramAddr + (usSec << SEC_SZ_BITS) + ulDwIndex * 4);
            if( ulWrData != ulRdData )
            {
            #if 1
                DBG_Printf("PU %d LUN%d Block %d Page %d Data Miss-compare!\n",pFlashAddr->ucPU,pFlashAddr->ucLun,pFlashAddr->usBlock,pFlashAddr->usPage);
                DBG_Printf("Rdaddr:0x%x WtBuffStartAddr:0x%x ulsec:0x%x Rdata:0x%x Wdata:0x%x\n"
2000590b:	053585        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:980
                ,ulRDramAddr + (usSec<<SEC_SZ_BITS)+ ulDwIndex*4,ulWDramAddr,usSec,ulRdData,ulWrData);
            #endif
                ulDwErrCount++;
2000590e:	ff1b      	addi.n	a15, a15, 1
20005910:	01f9      	s32i.n	a15, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:982
                bsErr = TRUE;
                DBG_Getch();
20005912:	eb8101        	l32r	a0, 20000718 <_stext+0x18>
20005915:	0000c0        	callx0	a0
20005918:	000c      	movi.n	a0, 0
2000591a:	120c      	movi.n	a2, 1
2000591c:	ffe706        	j	200058bc <TEST_NfcCheck1PlnData..PAB_1482204275+0xd0>

2000591f <TEST_NfcCheck1PlnData..PAB_1482204275+0x133>:
2000591f:	000000                                        ...

20005922 <TEST_NfcCheck1PlnData..PAB_1482204275+0x136>:
20005922:	017216        	beqz	a2, 2000593d <TEST_NfcCheck1PlnData..PAB_1482204275+0x151>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:992
            }
        }
    }
    if (bsErr)
    {
        DBG_Printf("PU %d Block %d Page %d Error DW Count %d\n",pFlashAddr->ucPU,pFlashAddr->usBlock,pFlashAddr->usPage,ulDwErrCount);
20005925:	000e32        	l8ui	a3, a14, 0
20005928:	021e42        	l16ui	a4, a14, 4
2000592b:	031e52        	l16ui	a5, a14, 6
2000592e:	ec1121        	l32r	a2, 20000974 <_stext+0x274>
20005931:	002162        	l32i	a6, a1, 0
20005934:	0532c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:993
        DBG_Getch();
20005937:	eb7801        	l32r	a0, 20000718 <_stext+0x18>
2000593a:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:995
    }
    return;
2000593d:	0221c2        	l32i	a12, a1, 8
20005940:	31d8      	l32i.n	a13, a1, 12
20005942:	41e8      	l32i.n	a14, a1, 16
20005944:	51f8      	l32i.n	a15, a1, 20
20005946:	1108      	l32i.n	a0, a1, 4
20005948:	40c112        	addi	a1, a1, 64
2000594b:	f00d      	ret.n

2000594d <TEST_NfcCheck1PlnData..PAB_1482204275+0x161>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:945
        ulSecInBuf = SEC_PER_PHYPG * pFlashAddr->bsPln * 2;
        ulPgSzBits = g_bSinglePln ? PHYPG_SZ_BITS : LOGIC_PIPE_PG_SZ_BITS;
    }
    else
    {
        ulSecInBuf = SEC_PER_PHYPG * pFlashAddr->bsPln;
2000594d:	1177b0        	slli	a7, a7, 5
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:946
        ulPgSzBits = g_bSinglePln ? LOGIC_PG_SZ_BITS : LOGIC_PIPE_PG_SZ_BITS;
20005950:	0020c0        	memw
20005953:	eb7281        	l32r	a8, 2000071c <_stext+0x1c>
20005956:	5d2882        	l32i	a8, a8, 0x174
20005959:	930c80        	movnez	a0, a12, a8
2000595c:	ffb706        	j	2000583c <TEST_NfcCheck1PlnData..PAB_1482204275+0x50>

2000595f <TEST_NfcCheck1PlnData..PAB_1482204275+0x173>:
	...

20005960 <HAL_DecFifoTrigNfc>:
HAL_DecFifoTrigNfc():
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:311
    //if (TRUE == HAL_DecFifoIsFull())
    //{
        //return NFC_STATUS_FAIL;
    //}
    
    pNFCQEntry->bsDecFifoEn = TRUE;
20005960:	450c      	movi.n	a5, 4
20005962:	5248      	l32i.n	a4, a2, 20
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:313
    pNFCQEntry->bsDecFifoIdxLsb = ucDecFifoIndex & 0x1;  //bit 0
    pNFCQEntry->bsDecFifoIdx7to1b = (ucDecFifoIndex & 0xFE) >> 1;  //bit 0
20005964:	6268      	l32i.n	a6, a2, 24
20005966:	217130        	srai	a7, a3, 1
20005969:	f39764        	insbits	a6, a7, 25, 31
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:311
    //if (TRUE == HAL_DecFifoIsFull())
    //{
        //return NFC_STATUS_FAIL;
    //}
    
    pNFCQEntry->bsDecFifoEn = TRUE;
2000596c:	204450        	or	a4, a4, a5
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:312
    pNFCQEntry->bsDecFifoIdxLsb = ucDecFifoIndex & 0x1;  //bit 0
2000596f:	000344        	insbits	a4, a3, 0, 0
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:313
    pNFCQEntry->bsDecFifoIdx7to1b = (ucDecFifoIndex & 0xFE) >> 1;  //bit 0
20005972:	6269      	s32i.n	a6, a2, 24
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:312
    //{
        //return NFC_STATUS_FAIL;
    //}
    
    pNFCQEntry->bsDecFifoEn = TRUE;
    pNFCQEntry->bsDecFifoIdxLsb = ucDecFifoIndex & 0x1;  //bit 0
20005974:	5249      	s32i.n	a4, a2, 20
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:315
    pNFCQEntry->bsDecFifoIdx7to1b = (ucDecFifoIndex & 0xFE) >> 1;  //bit 0

    return NFC_STATUS_SUCCESS;
20005976:	120c      	movi.n	a2, 1
20005978:	f00d      	ret.n

2000597a <HAL_DecFifoTrigNfc+0x1a>:
	...

2000597c <TEST_NfcPageRetry..BCB_1482204275>:
TEST_NfcPageRetry():
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1761
    Need handle FullPageRead, SinglePageRead, PageReadByteMode.
History:
    20150121 tobey move form HAL_FlashDriverExt.c
------------------------------------------------------------------------------*/
LOCAL U8 TEST_NfcPageRetry(FLASH_ADDR *pFlashAddr, NFC_READ_REQ_DES *pRdReq)
{
2000597c:	d0c112        	addi	a1, a1, -48
2000597f:	71f9      	s32i.n	a15, a1, 28
20005981:	a129      	s32i.n	a2, a1, 40
20005983:	9139      	s32i.n	a3, a1, 36
20005985:	3109      	s32i.n	a0, a1, 12
20005987:	61e9      	s32i.n	a14, a1, 24
20005989:	41c9      	s32i.n	a12, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1765
    U8  ucPU, ucLun;
    U8  ucRetryTime,ucErrCode, ucParaNum;
    U32 ulCmdStatus, ulIndex;
    RETRY_TABLE tRetryPara = {0};
2000598b:	ebfbe1        	l32r	a14, 20000978 <_stext+0x278>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1761
    Need handle FullPageRead, SinglePageRead, PageReadByteMode.
History:
    20150121 tobey move form HAL_FlashDriverExt.c
------------------------------------------------------------------------------*/
LOCAL U8 TEST_NfcPageRetry(FLASH_ADDR *pFlashAddr, NFC_READ_REQ_DES *pRdReq)
{
2000598e:	51d9      	s32i.n	a13, a1, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1765
    U8  ucPU, ucLun;
    U8  ucRetryTime,ucErrCode, ucParaNum;
    U32 ulCmdStatus, ulIndex;
    RETRY_TABLE tRetryPara = {0};
20005990:	0ee8      	l32i.n	a14, a14, 0
20005992:	01e9      	s32i.n	a14, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1768
    BOOL bTlcMode = FALSE;

    ucPU  = pFlashAddr->ucPU;
20005994:	0002e2        	l8ui	a14, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1770
    ucLun = pFlashAddr->ucLun;
    bTlcMode = pRdReq->bsTlcMode;
20005997:	23d8      	l32i.n	a13, a3, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1769
    U32 ulCmdStatus, ulIndex;
    RETRY_TABLE tRetryPara = {0};
    BOOL bTlcMode = FALSE;

    ucPU  = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
20005999:	0102c2        	l8ui	a12, a2, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1770
    bTlcMode = pRdReq->bsTlcMode;
2000599c:	04d6d0        	extui	a13, a13, 6, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1777
    // reset CQ
    //HAL_NfcResetCmdQue(ucPU, ucLun);
    //HAL_NfcClearINTSts(ucPU, ucLun);

    // Step1. pre-condition: enter to shift read mode.
    HAL_FlashRetryPreConditon(pFlashAddr);
2000599f:	ebfa01        	l32r	a0, 20000988 <_stext+0x288>
200059a2:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1778
    ulCmdStatus = HAL_NfcWaitStatus(ucPU, ucLun);
200059a5:	eb5ff1        	l32r	a15, 20000724 <_stext+0x24>
200059a8:	eb5d71        	l32r	a7, 2000071c <_stext+0x1c>
200059ab:	fefa      	add.n	a15, a14, a15
200059ad:	800f62        	l8ui	a6, a15, 128
200059b0:	3e2772        	l32i	a7, a7, 248
200059b3:	a066c0        	addx4	a6, a6, a12
200059b6:	a06670        	addx4	a6, a6, a7
200059b9:	0020c0        	memw
200059bc:	000602        	l8ui	a0, a6, 0
200059bf:	0020f0        	nop
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
200059c2:	10e007        	bbsi	a0, 0, 200059d6 <TEST_NfcPageRetry..BCB_1482204275+0x5a>
200059c5:	088076        	loop	a0, 200059d1 <TEST_NfcPageRetry..BCB_1482204275+0x55>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
200059c8:	0020c0        	memw
200059cb:	000602        	l8ui	a0, a6, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
200059ce:	04e007        	bbsi	a0, 0, 200059d6 <TEST_NfcPageRetry..BCB_1482204275+0x5a>

200059d1 <TEST_NfcPageRetry..BCB_1482204275+0x55>:
200059d1:	fffc06        	j	200059c5 <TEST_NfcPageRetry..BCB_1482204275+0x49>

200059d4 <TEST_NfcPageRetry..BCB_1482204275+0x58>:
	...

200059d6 <TEST_NfcPageRetry..BCB_1482204275+0x5a>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1106
    {
        ;
    }

    if (TRUE == HAL_NfcGetErrHold(ucPU, ucLun))
200059d6:	0e2d      	mov.n	a2, a14
200059d8:	203cc0        	or	a3, a12, a12
200059db:	fed145        	call0	200046f0 <HAL_NfcGetErrHold>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1781

    ucRetryTime = 0;
    while (NFC_STATUS_SUCCESS == HAL_FlashRetryCheck(ucRetryTime, bTlcMode))
200059de:	020c      	movi.n	a2, 0
200059e0:	0d3d      	mov.n	a3, a13
200059e2:	ebea01        	l32r	a0, 2000098c <_stext+0x28c>
200059e5:	0000c0        	callx0	a0
200059e8:	681226        	beqi	a2, 1, 20005a54 <TEST_NfcPageRetry..BCB_1482204275+0xd8>
200059eb:	020c      	movi.n	a2, 0
200059ed:	2139      	s32i.n	a3, a1, 8
200059ef:	8129      	s32i.n	a2, a1, 32
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1836
            break;
        }
    }

    // Step5. terminate retry: enter to normal mode
    HAL_FlashRetryTerminate(ucPU, ucLun, bTlcMode);
200059f1:	0e2d      	mov.n	a2, a14
200059f3:	0c3d      	mov.n	a3, a12
200059f5:	0d4d      	mov.n	a4, a13
200059f7:	ebe601        	l32r	a0, 20000990 <_stext+0x290>
200059fa:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
200059fd:	eb4771        	l32r	a7, 2000071c <_stext+0x1c>
20005a00:	800f62        	l8ui	a6, a15, 128
20005a03:	3e2772        	l32i	a7, a7, 248
20005a06:	a066c0        	addx4	a6, a6, a12
20005a09:	a06670        	addx4	a6, a6, a7
20005a0c:	0020c0        	memw
20005a0f:	000642        	l8ui	a4, a6, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
20005a12:	10e407        	bbsi	a4, 0, 20005a26 <TEST_NfcPageRetry..BCB_1482204275+0xaa>
20005a15:	088076        	loop	a0, 20005a21 <TEST_NfcPageRetry..BCB_1482204275+0xa5>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20005a18:	0020c0        	memw
20005a1b:	000682        	l8ui	a8, a6, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
20005a1e:	04e807        	bbsi	a8, 0, 20005a26 <TEST_NfcPageRetry..BCB_1482204275+0xaa>

20005a21 <TEST_NfcPageRetry..BCB_1482204275+0xa5>:
20005a21:	fffc06        	j	20005a15 <TEST_NfcPageRetry..BCB_1482204275+0x99>

20005a24 <TEST_NfcPageRetry..BCB_1482204275+0xa8>:
	...

20005a26 <TEST_NfcPageRetry..BCB_1482204275+0xaa>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1106
    {
        ;
    }

    if (TRUE == HAL_NfcGetErrHold(ucPU, ucLun))
20005a26:	0e2d      	mov.n	a2, a14
20005a28:	0c3d      	mov.n	a3, a12
20005a2a:	fecc45        	call0	200046f0 <HAL_NfcGetErrHold>
20005a2d:	920b      	addi.n	a9, a2, -1
20005a2f:	196916        	beqz	a9, 20005bc9 <TEST_NfcPageRetry..BCB_1482204275+0x24d>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1843
    if (NFC_STATUS_SUCCESS != ulCmdStatus)
    {
        DBG_Printf(" PU %d ReadRetry Terminate wrong!\n", ucPU);
    }

    if(NFC_STATUS_FAIL == HAL_FlashRetryCheck(ucRetryTime, bTlcMode))
20005a32:	0d3d      	mov.n	a3, a13
20005a34:	8128      	l32i.n	a2, a1, 32
20005a36:	ebd501        	l32r	a0, 2000098c <_stext+0x28c>
20005a39:	0000c0        	callx0	a0
20005a3c:	194216        	beqz	a2, 20005bd4 <TEST_NfcPageRetry..BCB_1482204275+0x258>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1852
    else
    {
        //DBG_Printf("Pu %d LUN %d BLK%d PG%d Read Retry OK!\n",ucPU,ucLun,pFlashAddr->usBlock,pFlashAddr->usPage);
    }

    return ucErrCode;
20005a3f:	41c8      	l32i.n	a12, a1, 16
20005a41:	51d8      	l32i.n	a13, a1, 20
20005a43:	61e8      	l32i.n	a14, a1, 24
20005a45:	71f8      	l32i.n	a15, a1, 28
20005a47:	2108      	l32i.n	a0, a1, 8
20005a49:	31a8      	l32i.n	a10, a1, 12
20005a4b:	002d      	mov.n	a2, a0
20005a4d:	0a0d      	mov.n	a0, a10
20005a4f:	30c112        	addi	a1, a1, 48
20005a52:	f00d      	ret.n

20005a54 <TEST_NfcPageRetry..BCB_1482204275+0xd8>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1781
    // Step1. pre-condition: enter to shift read mode.
    HAL_FlashRetryPreConditon(pFlashAddr);
    ulCmdStatus = HAL_NfcWaitStatus(ucPU, ucLun);

    ucRetryTime = 0;
    while (NFC_STATUS_SUCCESS == HAL_FlashRetryCheck(ucRetryTime, bTlcMode))
20005a54:	0b0c      	movi.n	a11, 0
20005a56:	81b9      	s32i.n	a11, a1, 32
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1784
    {
        // Step2. set-parameters: adj voltage.
        ulIndex = HAL_FlashSelRetryPara(bTlcMode);
20005a58:	0d2d      	mov.n	a2, a13
20005a5a:	ebce01        	l32r	a0, 20000994 <_stext+0x294>
20005a5d:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1785
        tRetryPara = HAL_FlashGetRetryParaTab(ulIndex);
20005a60:	ebce01        	l32r	a0, 20000998 <_stext+0x298>
20005a63:	0000c0        	callx0	a0
20005a66:	013d      	mov.n	a3, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1788
        ucParaNum = (FALSE == bTlcMode) ? HAL_FLASH_RETRY_PARA_MAX : HAL_TLC_FLASH_RETRY_PARA_MAX;

        HAL_FlashRetrySendParam(pFlashAddr, &tRetryPara, bTlcMode, ucParaNum);
20005a68:	0d4d      	mov.n	a4, a13
20005a6a:	150c      	movi.n	a5, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1785
    ucRetryTime = 0;
    while (NFC_STATUS_SUCCESS == HAL_FlashRetryCheck(ucRetryTime, bTlcMode))
    {
        // Step2. set-parameters: adj voltage.
        ulIndex = HAL_FlashSelRetryPara(bTlcMode);
        tRetryPara = HAL_FlashGetRetryParaTab(ulIndex);
20005a6c:	1129      	s32i.n	a2, a1, 4
20005a6e:	014b      	addi.n	a0, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1788
        ucParaNum = (FALSE == bTlcMode) ? HAL_FLASH_RETRY_PARA_MAX : HAL_TLC_FLASH_RETRY_PARA_MAX;

        HAL_FlashRetrySendParam(pFlashAddr, &tRetryPara, bTlcMode, ucParaNum);
20005a70:	a128      	l32i.n	a2, a1, 40
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1785
    ucRetryTime = 0;
    while (NFC_STATUS_SUCCESS == HAL_FlashRetryCheck(ucRetryTime, bTlcMode))
    {
        // Step2. set-parameters: adj voltage.
        ulIndex = HAL_FlashSelRetryPara(bTlcMode);
        tRetryPara = HAL_FlashGetRetryParaTab(ulIndex);
20005a72:	0008      	l32i.n	a0, a0, 0
20005a74:	006102        	s32i	a0, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1788
        ucParaNum = (FALSE == bTlcMode) ? HAL_FLASH_RETRY_PARA_MAX : HAL_TLC_FLASH_RETRY_PARA_MAX;

        HAL_FlashRetrySendParam(pFlashAddr, &tRetryPara, bTlcMode, ucParaNum);
20005a77:	ebc901        	l32r	a0, 2000099c <_stext+0x29c>
20005a7a:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20005a7d:	eb2771        	l32r	a7, 2000071c <_stext+0x1c>
20005a80:	800f62        	l8ui	a6, a15, 128
20005a83:	3e2772        	l32i	a7, a7, 248
20005a86:	a066c0        	addx4	a6, a6, a12
20005a89:	a06670        	addx4	a6, a6, a7
20005a8c:	0020c0        	memw
20005a8f:	000622        	l8ui	a2, a6, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
20005a92:	10e207        	bbsi	a2, 0, 20005aa6 <TEST_NfcPageRetry..BCB_1482204275+0x12a>
20005a95:	088076        	loop	a0, 20005aa1 <TEST_NfcPageRetry..BCB_1482204275+0x125>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20005a98:	0020c0        	memw
20005a9b:	000682        	l8ui	a8, a6, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
20005a9e:	04e807        	bbsi	a8, 0, 20005aa6 <TEST_NfcPageRetry..BCB_1482204275+0x12a>

20005aa1 <TEST_NfcPageRetry..BCB_1482204275+0x125>:
20005aa1:	fffc06        	j	20005a95 <TEST_NfcPageRetry..BCB_1482204275+0x119>

20005aa4 <TEST_NfcPageRetry..BCB_1482204275+0x128>:
	...

20005aa6 <TEST_NfcPageRetry..BCB_1482204275+0x12a>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1106
    {
        ;
    }

    if (TRUE == HAL_NfcGetErrHold(ucPU, ucLun))
20005aa6:	0e2d      	mov.n	a2, a14
20005aa8:	203cc0        	or	a3, a12, a12
20005aab:	fec445        	call0	200046f0 <HAL_NfcGetErrHold>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1792
        ulCmdStatus = HAL_NfcWaitStatus(ucPU, ucLun);

        // Step3. read-retry-enable:
        HAL_FlashRetryEn(pFlashAddr, TRUE);
20005aae:	a128      	l32i.n	a2, a1, 40
20005ab0:	01a032        	movi	a3, 1
20005ab3:	ebbb01        	l32r	a0, 200009a0 <_stext+0x2a0>
20005ab6:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20005ab9:	eb1871        	l32r	a7, 2000071c <_stext+0x1c>
20005abc:	800f62        	l8ui	a6, a15, 128
20005abf:	3e2772        	l32i	a7, a7, 248
20005ac2:	a066c0        	addx4	a6, a6, a12
20005ac5:	a06670        	addx4	a6, a6, a7
20005ac8:	0020c0        	memw
20005acb:	000692        	l8ui	a9, a6, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
20005ace:	0ee907        	bbsi	a9, 0, 20005ae0 <TEST_NfcPageRetry..BCB_1482204275+0x164>
20005ad1:	088076        	loop	a0, 20005add <TEST_NfcPageRetry..BCB_1482204275+0x161>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20005ad4:	0020c0        	memw
20005ad7:	000682        	l8ui	a8, a6, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
20005ada:	02e807        	bbsi	a8, 0, 20005ae0 <TEST_NfcPageRetry..BCB_1482204275+0x164>

20005add <TEST_NfcPageRetry..BCB_1482204275+0x161>:
20005add:	fffc06        	j	20005ad1 <TEST_NfcPageRetry..BCB_1482204275+0x155>

20005ae0 <TEST_NfcPageRetry..BCB_1482204275+0x164>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1106
    {
        ;
    }

    if (TRUE == HAL_NfcGetErrHold(ucPU, ucLun))
20005ae0:	0e2d      	mov.n	a2, a14
20005ae2:	203cc0        	or	a3, a12, a12
20005ae5:	fec085        	call0	200046f0 <HAL_NfcGetErrHold>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetFull(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20005ae8:	eb0d71        	l32r	a7, 2000071c <_stext+0x1c>
20005aeb:	800f62        	l8ui	a6, a15, 128
20005aee:	3e2772        	l32i	a7, a7, 248
20005af1:	a066c0        	addx4	a6, a6, a12
20005af4:	a06670        	addx4	a6, a6, a7
20005af7:	0020c0        	memw
20005afa:	000692        	l8ui	a9, a6, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1796
        ulCmdStatus = HAL_NfcWaitStatus(ucPU, ucLun);

        // Step4. redo read:
        while(TRUE == HAL_NfcGetFull(ucPU, ucLun))
20005afd:	106937        	bbci	a9, 3, 20005b11 <TEST_NfcPageRetry..BCB_1482204275+0x195>
20005b00:	f03d      	nop.n
20005b02:	088076        	loop	a0, 20005b0e <TEST_NfcPageRetry..BCB_1482204275+0x192>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
20005b05:	0020c0        	memw
20005b08:	000682        	l8ui	a8, a6, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1796
20005b0b:	026837        	bbci	a8, 3, 20005b11 <TEST_NfcPageRetry..BCB_1482204275+0x195>

20005b0e <TEST_NfcPageRetry..BCB_1482204275+0x192>:
20005b0e:	fffb86        	j	20005b00 <TEST_NfcPageRetry..BCB_1482204275+0x184>

20005b11 <TEST_NfcPageRetry..BCB_1482204275+0x195>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1800
        {
            ;
        }
        if (g_bSinglePln)
20005b11:	0020c0        	memw
20005b14:	eb0291        	l32r	a9, 2000071c <_stext+0x1c>
20005b17:	0020f0        	nop
20005b1a:	5d2992        	l32i	a9, a9, 0x174
20005b1d:	0020f0        	nop
20005b20:	0d6916        	beqz	a9, 20005bfa <TEST_NfcPageRetry..BCB_1482204275+0x27e>
20005b23:	a128      	l32i.n	a2, a1, 40
20005b25:	9138      	l32i.n	a3, a1, 36
20005b27:	eb9f01        	l32r	a0, 200009a4 <_stext+0x2a4>
20005b2a:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20005b2d:	eafb71        	l32r	a7, 2000071c <_stext+0x1c>
20005b30:	800f62        	l8ui	a6, a15, 128
20005b33:	3e2772        	l32i	a7, a7, 248
20005b36:	a066c0        	addx4	a6, a6, a12
20005b39:	a06670        	addx4	a6, a6, a7
20005b3c:	0020c0        	memw
20005b3f:	0006a2        	l8ui	a10, a6, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
20005b42:	10ea07        	bbsi	a10, 0, 20005b56 <TEST_NfcPageRetry..BCB_1482204275+0x1da>
20005b45:	088076        	loop	a0, 20005b51 <TEST_NfcPageRetry..BCB_1482204275+0x1d5>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20005b48:	0020c0        	memw
20005b4b:	000682        	l8ui	a8, a6, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
20005b4e:	04e807        	bbsi	a8, 0, 20005b56 <TEST_NfcPageRetry..BCB_1482204275+0x1da>

20005b51 <TEST_NfcPageRetry..BCB_1482204275+0x1d5>:
20005b51:	fffc06        	j	20005b45 <TEST_NfcPageRetry..BCB_1482204275+0x1c9>

20005b54 <TEST_NfcPageRetry..BCB_1482204275+0x1d8>:
	...

20005b56 <TEST_NfcPageRetry..BCB_1482204275+0x1da>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1106
    {
        ;
    }

    if (TRUE == HAL_NfcGetErrHold(ucPU, ucLun))
20005b56:	202ee0        	or	a2, a14, a14
20005b59:	203cc0        	or	a3, a12, a12
20005b5c:	feb905        	call0	200046f0 <HAL_NfcGetErrHold>
20005b5f:	461266        	bnei	a2, 1, 20005ba9 <TEST_NfcPageRetry..BCB_1482204275+0x22d>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1811
            HAL_NfcPageRead(pFlashAddr, pRdReq);
        }
        ulCmdStatus = HAL_NfcWaitStatus(ucPU, ucLun);
        if (NFC_STATUS_SUCCESS != ulCmdStatus)
        {
            ucErrCode = HAL_NfcGetErrCode(ucPU, ucLun);
20005b62:	0e2d      	mov.n	a2, a14
20005b64:	0c3d      	mov.n	a3, a12
20005b66:	00c1c5        	call0	20006784 <HAL_NfcGetErrCode>
20005b69:	2129      	s32i.n	a2, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1812
            if ( NF_ERR_TYPE_UECC != ucErrCode )
20005b6b:	0d6226        	beqi	a2, 6, 20005b7c <TEST_NfcPageRetry..BCB_1482204275+0x200>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1814
            {
                DBG_Printf("PU %d ReadRetry-ErrCode Changed To %d.\n", ucPU,ucErrCode);
20005b6e:	eb8321        	l32r	a2, 2000097c <_stext+0x27c>
20005b71:	0e3d      	mov.n	a3, a14
20005b73:	2148      	l32i.n	a4, a1, 8
20005b75:	050ec5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1815
                ucErrCode = NF_ERR_TYPE_UECC;
20005b78:	690c      	movi.n	a9, 6
20005b7a:	2199      	s32i.n	a9, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1818
            }

            HAL_NfcResetCmdQue(ucPU, ucLun);
20005b7c:	0e2d      	mov.n	a2, a14
20005b7e:	0c3d      	mov.n	a3, a12
20005b80:	eb8a01        	l32r	a0, 200009a8 <_stext+0x2a8>
20005b83:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1819
            HAL_NfcClearINTSts(ucPU, ucLun);
20005b86:	0e2d      	mov.n	a2, a14
20005b88:	0c3d      	mov.n	a3, a12
20005b8a:	eb8801        	l32r	a0, 200009ac <_stext+0x2ac>
20005b8d:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1821

            ucRetryTime++;
20005b90:	8128      	l32i.n	a2, a1, 32
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1781
    // Step1. pre-condition: enter to shift read mode.
    HAL_FlashRetryPreConditon(pFlashAddr);
    ulCmdStatus = HAL_NfcWaitStatus(ucPU, ucLun);

    ucRetryTime = 0;
    while (NFC_STATUS_SUCCESS == HAL_FlashRetryCheck(ucRetryTime, bTlcMode))
20005b92:	0d3d      	mov.n	a3, a13
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1821
            }

            HAL_NfcResetCmdQue(ucPU, ucLun);
            HAL_NfcClearINTSts(ucPU, ucLun);

            ucRetryTime++;
20005b94:	a21b      	addi.n	a10, a2, 1
20005b96:	7420a0        	extui	a2, a10, 0, 8
20005b99:	8129      	s32i.n	a2, a1, 32
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1781
    // Step1. pre-condition: enter to shift read mode.
    HAL_FlashRetryPreConditon(pFlashAddr);
    ulCmdStatus = HAL_NfcWaitStatus(ucPU, ucLun);

    ucRetryTime = 0;
    while (NFC_STATUS_SUCCESS == HAL_FlashRetryCheck(ucRetryTime, bTlcMode))
20005b9b:	eb7c01        	l32r	a0, 2000098c <_stext+0x28c>
20005b9e:	0000c0        	callx0	a0
20005ba1:	b20b      	addi.n	a11, a2, -1
20005ba3:	eb1b16        	beqz	a11, 20005a58 <TEST_NfcPageRetry..BCB_1482204275+0xdc>
20005ba6:	ff91c6        	j	200059f1 <TEST_NfcPageRetry..BCB_1482204275+0x75>

20005ba9 <TEST_NfcPageRetry..BCB_1482204275+0x22d>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1828
              //        ,pFlashAddr->usBlock,pFlashAddr->usPage,ucErrCode,ucRetryTime);
        }
        else
        {
            /* Data check */
            TEST_NfcCheckRed(pFlashAddr, pRdReq->ppNfcRed, pRdReq->bsSecStart, pRdReq->bsSecLen, pRdReq->bsTlcPgType);
20005ba9:	092152        	l32i	a5, a1, 36
20005bac:	0a2122        	l32i	a2, a1, 40
20005baf:	052532        	l32i	a3, a5, 20
20005bb2:	2568      	l32i.n	a6, a5, 8
20005bb4:	000542        	l8ui	a4, a5, 0
20005bb7:	146460        	extui	a6, a6, 4, 2
20005bba:	010552        	l8ui	a5, a5, 1
20005bbd:	001645        	call0	20005d24 <TEST_NfcCheckRed..EBB_1482204275>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1830
            TEST_NfcCheckData(pFlashAddr, pRdReq->bsSecStart, pRdReq->bsSecLen, pRdReq->bsRdBuffId,  pRdReq->bsTlcPgType);
            ucErrCode = NF_SUCCESS;
20005bc0:	060c      	movi.n	a6, 0
20005bc2:	2169      	s32i.n	a6, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1831
            break;
20005bc4:	ff8a46        	j	200059f1 <TEST_NfcPageRetry..BCB_1482204275+0x75>

20005bc7 <TEST_NfcPageRetry..BCB_1482204275+0x24b>:
	...

20005bc9 <TEST_NfcPageRetry..BCB_1482204275+0x24d>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1840
    // Step5. terminate retry: enter to normal mode
    HAL_FlashRetryTerminate(ucPU, ucLun, bTlcMode);
    ulCmdStatus = HAL_NfcWaitStatus(ucPU, ucLun);
    if (NFC_STATUS_SUCCESS != ulCmdStatus)
    {
        DBG_Printf(" PU %d ReadRetry Terminate wrong!\n", ucPU);
20005bc9:	eb6d21        	l32r	a2, 20000980 <_stext+0x280>
20005bcc:	0e3d      	mov.n	a3, a14
20005bce:	050945        	call0	2000ac64 <dbg_printf>
20005bd1:	ff9746        	j	20005a32 <TEST_NfcPageRetry..BCB_1482204275+0xb6>

20005bd4 <TEST_NfcPageRetry..BCB_1482204275+0x258>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1845
    }

    if(NFC_STATUS_FAIL == HAL_FlashRetryCheck(ucRetryTime, bTlcMode))
    {
        DBG_Printf("Pu %d LUN %d BLK%d PG%d Read Retry Fail!\n",ucPU,ucLun,pFlashAddr->usBlock,pFlashAddr->usPage);
20005bd4:	204cc0        	or	a4, a12, a12
20005bd7:	203ee0        	or	a3, a14, a14
20005bda:	0a2162        	l32i	a6, a1, 40
20005bdd:	eb6921        	l32r	a2, 20000984 <_stext+0x284>
20005be0:	021652        	l16ui	a5, a6, 4
20005be3:	031662        	l16ui	a6, a6, 6
20005be6:	0507c5        	call0	2000ac64 <dbg_printf>
20005be9:	2128      	l32i.n	a2, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1852
    else
    {
        //DBG_Printf("Pu %d LUN %d BLK%d PG%d Read Retry OK!\n",ucPU,ucLun,pFlashAddr->usBlock,pFlashAddr->usPage);
    }

    return ucErrCode;
20005beb:	41c8      	l32i.n	a12, a1, 16
20005bed:	51d8      	l32i.n	a13, a1, 20
20005bef:	61e8      	l32i.n	a14, a1, 24
20005bf1:	71f8      	l32i.n	a15, a1, 28
20005bf3:	3108      	l32i.n	a0, a1, 12
20005bf5:	30c112        	addi	a1, a1, 48
20005bf8:	f00d      	ret.n

20005bfa <TEST_NfcPageRetry..BCB_1482204275+0x27e>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1806
        {
            HAL_NfcSinglePlnRead(pFlashAddr, pRdReq, FALSE);
        }
        else
        {
            HAL_NfcPageRead(pFlashAddr, pRdReq);
20005bfa:	a128      	l32i.n	a2, a1, 40
20005bfc:	9138      	l32i.n	a3, a1, 36
20005bfe:	eb6c01        	l32r	a0, 200009b0 <_stext+0x2b0>
20005c01:	0000c0        	callx0	a0
20005c04:	ffc946        	j	20005b2d <TEST_NfcPageRetry..BCB_1482204275+0x1b1>

20005c07 <TEST_NfcPageRetry..BCB_1482204275+0x28b>:
	...

20005c08 <TEST_NfcRdStsAndDataChk>:
TEST_NfcRdStsAndDataChk():
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1455
Reference     :
History       :
    20160808    abby    create
****************************************************************************/
BOOL TEST_NfcRdStsAndDataChk(FLASH_ADDR *pFlashAddr, NFC_READ_REQ_DES *pRdReq, READ_REQ_TYPE ReadType)
{
20005c08:	025d      	mov.n	a5, a2
20005c0a:	e0c112        	addi	a1, a1, -32
20005c0d:	71d9      	s32i.n	a13, a1, 28
20005c0f:	61c9      	s32i.n	a12, a1, 24
20005c11:	eac2c1        	l32r	a12, 2000071c <_stext+0x1c>
20005c14:	5109      	s32i.n	a0, a1, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1457
    /* SSU & Cache status check */
    if (g_bSsuEn)
20005c16:	6a2c02        	l32i	a0, a12, 0x1a8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1455
Reference     :
History       :
    20160808    abby    create
****************************************************************************/
BOOL TEST_NfcRdStsAndDataChk(FLASH_ADDR *pFlashAddr, NFC_READ_REQ_DES *pRdReq, READ_REQ_TYPE ReadType)
{
20005c19:	03dd      	mov.n	a13, a3
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1457
    /* SSU & Cache status check */
    if (g_bSsuEn)
20005c1b:	099016        	beqz	a0, 20005cb8 <TEST_NfcRdStsAndDataChk+0xb0>
20005c1e:	4129      	s32i.n	a2, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1460
    {
        /* When UECC happen, SSU will not be updated  */
        while (FALSE == HAL_NfcGetIdle(pFlashAddr->ucPU, pFlashAddr->ucLun))
20005c20:	eac161        	l32r	a6, 20000724 <_stext+0x24>
20005c23:	000222        	l8ui	a2, a2, 0
20005c26:	010532        	l8ui	a3, a5, 1
20005c29:	806260        	add	a6, a2, a6
20005c2c:	800662        	l8ui	a6, a6, 128
20005c2f:	3e2c72        	l32i	a7, a12, 248
20005c32:	a06630        	addx4	a6, a6, a3
20005c35:	a06670        	addx4	a6, a6, a7
20005c38:	0020c0        	memw
20005c3b:	000642        	l8ui	a4, a6, 0
20005c3e:	0ee407        	bbsi	a4, 0, 20005c50 <TEST_NfcRdStsAndDataChk+0x48>
20005c41:	088076        	loop	a0, 20005c4d <TEST_NfcRdStsAndDataChk+0x45>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20005c44:	0020c0        	memw
20005c47:	000672        	l8ui	a7, a6, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1460
20005c4a:	02e707        	bbsi	a7, 0, 20005c50 <TEST_NfcRdStsAndDataChk+0x48>

20005c4d <TEST_NfcRdStsAndDataChk+0x45>:
20005c4d:	fffc06        	j	20005c41 <TEST_NfcRdStsAndDataChk+0x39>

20005c50 <TEST_NfcRdStsAndDataChk+0x48>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1464
        {
            ;
        }
        if (NF_ERR_TYPE_UECC == HAL_NfcGetErrCode(pFlashAddr->ucPU, pFlashAddr->ucLun))
20005c50:	00b305        	call0	20006784 <HAL_NfcGetErrCode>
20005c53:	fac282        	addi	a8, a2, -6
20005c56:	0a3816        	beqz	a8, 20005cfd <TEST_NfcRdStsAndDataChk+0xf5>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:582
    else
    {
        ulBaseAddr = g_ulSsuInOtfbBase;
    }

    ucValue = *((volatile U8 *)(ulBaseAddr + usSsuAddr));
20005c59:	6b2c52        	l32i	a5, a12, 0x1ac
20005c5c:	612c42        	l32i	a4, a12, 0x184
20005c5f:	602c22        	l32i	a2, a12, 0x180
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1470
        {
            DBG_Printf("PU %d Block %d Page %d read UECC!\n",pFlashAddr->ucPU,pFlashAddr->usBlock,pFlashAddr->usPage);
            return FAIL;
        }
        
        TEST_WaitSSU(pFlashAddr, pRdReq->bsSsu0Addr);
20005c62:	061d32        	l16ui	a3, a13, 12
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:582
    else
    {
        ulBaseAddr = g_ulSsuInOtfbBase;
    }

    ucValue = *((volatile U8 *)(ulBaseAddr + usSsuAddr));
20005c65:	932450        	movnez	a2, a4, a5
20005c68:	232a      	add.n	a2, a3, a2
20005c6a:	0020c0        	memw
20005c6d:	000292        	l8ui	a9, a2, 0
20005c70:	e98c      	beqz.n	a9, 20005c82 <TEST_NfcRdStsAndDataChk+0x7a>
20005c72:	078076        	loop	a0, 20005c7d <TEST_NfcRdStsAndDataChk+0x75>
20005c75:	0020c0        	memw
20005c78:	000262        	l8ui	a6, a2, 0
20005c7b:	368c      	beqz.n	a6, 20005c82 <TEST_NfcRdStsAndDataChk+0x7a>

20005c7d <TEST_NfcRdStsAndDataChk+0x75>:
20005c7d:	fffc46        	j	20005c72 <TEST_NfcRdStsAndDataChk+0x6a>

20005c80 <TEST_NfcRdStsAndDataChk+0x78>:
	...

20005c82 <TEST_NfcRdStsAndDataChk+0x7a>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:607
    else
    {
        ulBaseAddr = g_ulSsuInOtfbBase;
    }

    *((volatile U8 *)(ulBaseAddr + usSsuAddr)) = ucValue;
20005c82:	365c      	movi.n	a6, 83
20005c84:	0020c0        	memw
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:634
    else
    {
        ulBaseAddr = g_ulSsu1OtfbBase;
    }

    ucValue = *((volatile U8 *)(ulBaseAddr + usSsuAddr));
20005c87:	6c2c52        	l32i	a5, a12, 0x1b0
20005c8a:	632c42        	l32i	a4, a12, 0x18c
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:607
    else
    {
        ulBaseAddr = g_ulSsuInOtfbBase;
    }

    *((volatile U8 *)(ulBaseAddr + usSsuAddr)) = ucValue;
20005c8d:	004262        	s8i	a6, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:634
    else
    {
        ulBaseAddr = g_ulSsu1OtfbBase;
    }

    ucValue = *((volatile U8 *)(ulBaseAddr + usSsuAddr));
20005c90:	622c22        	l32i	a2, a12, 0x188
20005c93:	932450        	movnez	a2, a4, a5
20005c96:	802320        	add	a2, a3, a2
20005c99:	0020c0        	memw
20005c9c:	000272        	l8ui	a7, a2, 0
20005c9f:	d78c      	beqz.n	a7, 20005cb0 <TEST_NfcRdStsAndDataChk+0xa8>
20005ca1:	078076        	loop	a0, 20005cac <TEST_NfcRdStsAndDataChk+0xa4>
20005ca4:	0020c0        	memw
20005ca7:	000272        	l8ui	a7, a2, 0
20005caa:	278c      	beqz.n	a7, 20005cb0 <TEST_NfcRdStsAndDataChk+0xa8>

20005cac <TEST_NfcRdStsAndDataChk+0xa4>:
20005cac:	fffc46        	j	20005ca1 <TEST_NfcRdStsAndDataChk+0x99>

20005caf <TEST_NfcRdStsAndDataChk+0xa7>:
	...

20005cb0 <TEST_NfcRdStsAndDataChk+0xa8>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:660
    else
    {
        ulBaseAddr = g_ulSsu1OtfbBase;
    }

    *((volatile U8 *)(ulBaseAddr + usSsuAddr)) = ucValue;
20005cb0:	585c      	movi.n	a8, 85
20005cb2:	0020c0        	memw
20005cb5:	004282        	s8i	a8, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1472
            return FAIL;
        }
        
        TEST_WaitSSU(pFlashAddr, pRdReq->bsSsu0Addr);
    }
    if (g_bCacheStsEn)
20005cb8:	6e2c92        	l32i	a9, a12, 0x1b8
20005cbb:	19bc      	beqz.n	a9, 20005cf0 <TEST_NfcRdStsAndDataChk+0xe8>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:700
Purpose   : wait HW flip Cache Status and FW clear it after
Reference :
****************************************************************************/
LOCAL BOOL TEST_WaitCacheStatus(FLASH_ADDR *pFlashAddr, U16 usAddrOffset)
{
    while (0 != TEST_GetCacheStatus(usAddrOffset))
20005cbd:	642c32        	l32i	a3, a12, 0x190
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1474
        
        TEST_WaitSSU(pFlashAddr, pRdReq->bsSsu0Addr);
    }
    if (g_bCacheStsEn)
    {
        TEST_WaitCacheStatus(pFlashAddr, pRdReq->bsSsu0Addr);
20005cc0:	061d22        	l16ui	a2, a13, 12
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:700
Purpose   : wait HW flip Cache Status and FW clear it after
Reference :
****************************************************************************/
LOCAL BOOL TEST_WaitCacheStatus(FLASH_ADDR *pFlashAddr, U16 usAddrOffset)
{
    while (0 != TEST_GetCacheStatus(usAddrOffset))
20005cc3:	223a      	add.n	a2, a2, a3
20005cc5:	0020c0        	memw
20005cc8:	0002a2        	l8ui	a10, a2, 0
20005ccb:	ca8c      	beqz.n	a10, 20005cdb <TEST_NfcRdStsAndDataChk+0xd3>
20005ccd:	078076        	loop	a0, 20005cd8 <TEST_NfcRdStsAndDataChk+0xd0>
20005cd0:	0020c0        	memw
20005cd3:	000242        	l8ui	a4, a2, 0
20005cd6:	148c      	beqz.n	a4, 20005cdb <TEST_NfcRdStsAndDataChk+0xd3>

20005cd8 <TEST_NfcRdStsAndDataChk+0xd0>:
20005cd8:	fffc46        	j	20005ccd <TEST_NfcRdStsAndDataChk+0xc5>

20005cdb <TEST_NfcRdStsAndDataChk+0xd3>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:555
Reference :
****************************************************************************/
LOCAL void TEST_SetCacheStatus(U32 ulCacheAddr, U8 ucValue)
{

   *((volatile U8*)(g_ulCacheStatusAddr + ulCacheAddr)) = ucValue;
20005cdb:	855c      	movi.n	a5, 88
20005cdd:	0020c0        	memw
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1478
    {
        TEST_WaitCacheStatus(pFlashAddr, pRdReq->bsSsu0Addr);
    }

#ifndef DATA_CHK
    return SUCCESS;      //high pressure read, do not check data
20005ce0:	5108      	l32i.n	a0, a1, 20
20005ce2:	61c8      	l32i.n	a12, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:555
Reference :
****************************************************************************/
LOCAL void TEST_SetCacheStatus(U32 ulCacheAddr, U8 ucValue)
{

   *((volatile U8*)(g_ulCacheStatusAddr + ulCacheAddr)) = ucValue;
20005ce4:	004252        	s8i	a5, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1478
    {
        TEST_WaitCacheStatus(pFlashAddr, pRdReq->bsSsu0Addr);
    }

#ifndef DATA_CHK
    return SUCCESS;      //high pressure read, do not check data
20005ce7:	71d8      	l32i.n	a13, a1, 28
20005ce9:	120c      	movi.n	a2, 1
20005ceb:	20c112        	addi	a1, a1, 32
20005cee:	f00d      	ret.n

20005cf0 <TEST_NfcRdStsAndDataChk+0xe8>:
20005cf0:	120c      	movi.n	a2, 1
20005cf2:	61c8      	l32i.n	a12, a1, 24
20005cf4:	71d8      	l32i.n	a13, a1, 28
20005cf6:	5108      	l32i.n	a0, a1, 20
20005cf8:	20c112        	addi	a1, a1, 32
20005cfb:	f00d      	ret.n

20005cfd <TEST_NfcRdStsAndDataChk+0xf5>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1466
        {
            ;
        }
        if (NF_ERR_TYPE_UECC == HAL_NfcGetErrCode(pFlashAddr->ucPU, pFlashAddr->ucLun))
        {
            DBG_Printf("PU %d Block %d Page %d read UECC!\n",pFlashAddr->ucPU,pFlashAddr->usBlock,pFlashAddr->usPage);
20005cfd:	042152        	l32i	a5, a1, 16
20005d00:	eb2d21        	l32r	a2, 200009b4 <_stext+0x2b4>
20005d03:	000532        	l8ui	a3, a5, 0
20005d06:	021542        	l16ui	a4, a5, 4
20005d09:	031552        	l16ui	a5, a5, 6
20005d0c:	04f545        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1467
            return FAIL;
20005d0f:	00a022        	movi	a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1478
    {
        TEST_WaitCacheStatus(pFlashAddr, pRdReq->bsSsu0Addr);
    }

#ifndef DATA_CHK
    return SUCCESS;      //high pressure read, do not check data
20005d12:	0621c2        	l32i	a12, a1, 24
20005d15:	71d8      	l32i.n	a13, a1, 28
20005d17:	5108      	l32i.n	a0, a1, 20
20005d19:	20c112        	addi	a1, a1, 32
20005d1c:	f00d      	ret.n

20005d1e <TEST_NfcRdStsAndDataChk+0x116>:
	...

20005d20 <TEST_NfcCheckData..ABB_1482204275>:
TEST_NfcCheckData():
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1013
Reference     :
****************************************************************************/
LOCAL void TEST_NfcCheckData(FLASH_ADDR *pFlashAddr, U8 ucSecStart, U16 usSecLen, U16 usRdBufId, U8 ucInterPgCnt)
{
#ifndef DATA_CHK
    return;
20005d20:	f00d      	ret.n

20005d22 <TEST_NfcCheckData..ABB_1482204275+0x2>:
	...

20005d24 <TEST_NfcCheckRed..EBB_1482204275>:
TEST_NfcCheckRed():
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1190
Reference     :
****************************************************************************/
LOCAL void TEST_NfcCheckRed(FLASH_ADDR *pFlashAddr,NFC_RED **pRed, U16 usSecStart, U16 usSecLen, U8 ucPageType)
{
#ifndef DATA_CHK
    return;
20005d24:	f00d      	ret.n

20005d26 <TEST_NfcCheckRed..EBB_1482204275+0x2>:
	...

20005d28 <HAL_SgqBuildEntry>:
HAL_SgqBuildEntry():
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:483
    20140915   Victor Zhang  Create    
    20151028    abby         add para ucLun
========================================================================*/

BOOL HAL_SgqBuildEntry(U8 ucHID, U16 usFirstHsgId, U8 ucPU, U8 ucLun, BOOL bWriteEn)
{
20005d28:	209330        	or	a9, a3, a3
20005d2b:	ea7e71        	l32r	a7, 20000724 <_stext+0x24>
20005d2e:	208660        	or	a8, a6, a6
20005d31:	f0c112        	addi	a1, a1, -16
20005d34:	006102        	s32i	a0, a1, 0
20005d37:	ea7961        	l32r	a6, 2000071c <_stext+0x1c>
20005d3a:	747a      	add.n	a7, a4, a7
20005d3c:	800772        	l8ui	a7, a7, 128
20005d3f:	3e2632        	l32i	a3, a6, 248
20005d42:	a00750        	addx4	a0, a7, a5
20005d45:	a00030        	addx4	a0, a0, a3
20005d48:	0020c0        	memw
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:497
    COM_MemZero((U32 *)pSgqEntry, sizeof(SGE_ENTRY)/sizeof(U32));
    pSgqEntry->bsHID = ucHID;
    pSgqEntry->bsHsgPtr = usFirstHsgId;
    pSgqEntry->bsWriteEn = bWriteEn;

    HAL_HwDebugTrace(ucHID, (TRUE == bWriteEn) ? RCD_SGQ_W : RCD_SGQ_R, pSgqEntry
20005d4b:	4b2662        	l32i	a6, a6, 0x12c
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:65
20005d4e:	030c      	movi.n	a3, 0
20005d50:	ea76a1        	l32r	a10, 20000728 <_stext+0x28>
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:483
    20140915   Victor Zhang  Create    
    20151028    abby         add para ucLun
========================================================================*/

BOOL HAL_SgqBuildEntry(U8 ucHID, U16 usFirstHsgId, U8 ucPU, U8 ucLun, BOOL bWriteEn)
{
20005d53:	000002        	l8ui	a0, a0, 0
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:65
20005d56:	90b750        	addx2	a11, a7, a5
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:483
20005d59:	410600        	srli	a0, a0, 6
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:497
    COM_MemZero((U32 *)pSgqEntry, sizeof(SGE_ENTRY)/sizeof(U32));
    pSgqEntry->bsHID = ucHID;
    pSgqEntry->bsHsgPtr = usFirstHsgId;
    pSgqEntry->bsWriteEn = bWriteEn;

    HAL_HwDebugTrace(ucHID, (TRUE == bWriteEn) ? RCD_SGQ_W : RCD_SGQ_R, pSgqEntry
20005d5c:	907700        	addx2	a7, a7, a0
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:65
20005d5f:	a0bb00        	addx4	a11, a11, a0
20005d62:	11bbe0        	slli	a11, a11, 2
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:493
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
    ucWp = HAL_NfcGetWP(ucPU, ucLun);

    pSgqEntry = HAL_GetSgqEntry(ucPhyPU,ucLun,ucWp);
    COM_MemZero((U32 *)pSgqEntry, sizeof(SGE_ENTRY)/sizeof(U32));
    pSgqEntry->bsHID = ucHID;
20005d65:	ea7101        	l32r	a0, 2000072c <_stext+0x2c>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:65
20005d68:	abaa      	add.n	a10, a11, a10
20005d6a:	74daa2        	addmi	a10, a10, 0x7400
20005d6d:	0a39      	s32i.n	a3, a10, 0
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:493
20005d6f:	0b0a      	add.n	a0, a11, a0
20005d71:	7f2032        	l32i	a3, a0, 0x1fc
20005d74:	01a260        	slli	a10, a2, 26
20005d77:	c103a4        	insbits	a10, a3, 0, 25
20005d7a:	7f60a2        	s32i	a10, a0, 0x1fc
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:494
    pSgqEntry->bsHsgPtr = usFirstHsgId;
20005d7d:	d109a4        	insbits	a10, a9, 16, 25
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:497
    pSgqEntry->bsWriteEn = bWriteEn;

    HAL_HwDebugTrace(ucHID, (TRUE == bWriteEn) ? RCD_SGQ_W : RCD_SGQ_R, pSgqEntry
20005d80:	430c      	movi.n	a3, 4
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:494
    ucWp = HAL_NfcGetWP(ucPU, ucLun);

    pSgqEntry = HAL_GetSgqEntry(ucPhyPU,ucLun,ucWp);
    COM_MemZero((U32 *)pSgqEntry, sizeof(SGE_ENTRY)/sizeof(U32));
    pSgqEntry->bsHID = ucHID;
    pSgqEntry->bsHsgPtr = usFirstHsgId;
20005d82:	7f60a2        	s32i	a10, a0, 0x1fc
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:495
    pSgqEntry->bsWriteEn = bWriteEn;
20005d85:	4198a4        	insbits	a10, a8, 9, 9
20005d88:	7f60a2        	s32i	a10, a0, 0x1fc
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:497

    HAL_HwDebugTrace(ucHID, (TRUE == bWriteEn) ? RCD_SGQ_W : RCD_SGQ_R, pSgqEntry
20005d8b:	080b      	addi.n	a0, a8, -1
20005d8d:	5a0c      	movi.n	a10, 5
20005d8f:	833a00        	moveqz	a3, a10, a0
20005d92:	ea6701        	l32r	a0, 20000730 <_stext+0x30>
20005d95:	f45070        	extui	a5, a7, 0, 16
20005d98:	4b0a      	add.n	a4, a11, a0
20005d9a:	fb0045        	call0	20000da0 <HAL_HwDebugTrace>
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:500
                   ,(ucPhyPU << 1) + ucWp, g_pNfcqForHalDebug);
    
    return TRUE;
20005d9d:	120c      	movi.n	a2, 1
20005d9f:	0108      	l32i.n	a0, a1, 0
20005da1:	10c112        	addi	a1, a1, 16
20005da4:	f00d      	ret.n

20005da6 <HAL_SgqBuildEntry+0x7e>:
	...

20005da8 <HAL_SgqIsBusy>:
HAL_SgqIsBusy():
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:411
    20140915   Victor Zhang  Create 
    20151028    abby         add para ucLun
    20160329    Janka        Modify for sgq expansion from 128 to 256
========================================================================*/
BOOL HAL_SgqIsBusy(U8 ucPU, U8 ucLun)
{    
20005da8:	ea5661        	l32r	a6, 20000700 <_stext>
20005dab:	ea5c81        	l32r	a8, 2000071c <_stext+0x1c>
20005dae:	ea5d51        	l32r	a5, 20000724 <_stext+0x24>
20005db1:	f0c112        	addi	a1, a1, -16
20005db4:	21c9      	s32i.n	a12, a1, 8
20005db6:	1109      	s32i.n	a0, a1, 4
20005db8:	02cd      	mov.n	a12, a2
20005dba:	525a      	add.n	a5, a2, a5
20005dbc:	800552        	l8ui	a5, a5, 128
20005dbf:	3e2882        	l32i	a8, a8, 248
20005dc2:	a07530        	addx4	a7, a5, a3
20005dc5:	a07780        	addx4	a7, a7, a8
20005dc8:	0020c0        	memw
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:424

    ucSgqStaRegNum = ucPhyPU / PUNUM_PER_SGQ_STATUS_REG;
    ucSgqStaPuMapOffset = ucPhyPU % PUNUM_PER_SGQ_STATUS_REG;
    ucSgqStaPuLevelMapBit =  1 <<((ucSgqStaPuMapOffset * NFCQ_DEPTH_TOTAL) + ucLun* NFCQ_DEPTH + ucLevel);

    switch  (ucSgqStaRegNum)
20005dcb:	742250        	extui	a2, a5, 2, 8
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:422
    U32  ucSgqStaPuMapOffset;
    U32  ucSgqStaPuLevelMapBit;

    ucSgqStaRegNum = ucPhyPU / PUNUM_PER_SGQ_STATUS_REG;
    ucSgqStaPuMapOffset = ucPhyPU % PUNUM_PER_SGQ_STATUS_REG;
    ucSgqStaPuLevelMapBit =  1 <<((ucSgqStaPuMapOffset * NFCQ_DEPTH_TOTAL) + ucLun* NFCQ_DEPTH + ucLevel);
20005dce:	100c      	movi.n	a0, 1
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:411
    20140915   Victor Zhang  Create 
    20151028    abby         add para ucLun
    20160329    Janka        Modify for sgq expansion from 128 to 256
========================================================================*/
BOOL HAL_SgqIsBusy(U8 ucPU, U8 ucLun)
{    
20005dd0:	000772        	l8ui	a7, a7, 0
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:422
    U32  ucSgqStaPuMapOffset;
    U32  ucSgqStaPuLevelMapBit;

    ucSgqStaRegNum = ucPhyPU / PUNUM_PER_SGQ_STATUS_REG;
    ucSgqStaPuMapOffset = ucPhyPU % PUNUM_PER_SGQ_STATUS_REG;
    ucSgqStaPuLevelMapBit =  1 <<((ucSgqStaPuMapOffset * NFCQ_DEPTH_TOTAL) + ucLun* NFCQ_DEPTH + ucLevel);
20005dd3:	144050        	extui	a4, a5, 0, 2
20005dd6:	904430        	addx2	a4, a4, a3
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:411
    20140915   Victor Zhang  Create 
    20151028    abby         add para ucLun
    20160329    Janka        Modify for sgq expansion from 128 to 256
========================================================================*/
BOOL HAL_SgqIsBusy(U8 ucPU, U8 ucLun)
{    
20005dd9:	417670        	srli	a7, a7, 6
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:422
    U32  ucSgqStaPuMapOffset;
    U32  ucSgqStaPuLevelMapBit;

    ucSgqStaRegNum = ucPhyPU / PUNUM_PER_SGQ_STATUS_REG;
    ucSgqStaPuMapOffset = ucPhyPU % PUNUM_PER_SGQ_STATUS_REG;
    ucSgqStaPuLevelMapBit =  1 <<((ucSgqStaPuMapOffset * NFCQ_DEPTH_TOTAL) + ucLun* NFCQ_DEPTH + ucLevel);
20005ddc:	a04470        	addx4	a4, a4, a7
20005ddf:	401400        	ssl	a4
20005de2:	a10000        	sll	a0, a0
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:424

    switch  (ucSgqStaRegNum)
20005de5:	0d42f6        	bgeui	a2, 4, 20005df6 <HAL_SgqIsBusy+0x4e>
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:430
    {
        case 0:
        case 1:
        case 2:
        case 3:
            ulSgqStatus = *(((volatile U32*)rSgqStatusP1Addr) + ucSgqStaRegNum);
20005de8:	a07260        	addx4	a7, a2, a6
20005deb:	0020c0        	memw
20005dee:	512772        	l32i	a7, a7, 0x144
20005df1:	0179      	s32i.n	a7, a1, 0
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:431
            break;
20005df3:	000a86        	j	20005e21 <HAL_SgqIsBusy+0x79>

20005df6 <HAL_SgqIsBusy+0x4e>:
20005df6:	3109      	s32i.n	a0, a1, 12
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:424

    ucSgqStaRegNum = ucPhyPU / PUNUM_PER_SGQ_STATUS_REG;
    ucSgqStaPuMapOffset = ucPhyPU % PUNUM_PER_SGQ_STATUS_REG;
    ucSgqStaPuLevelMapBit =  1 <<((ucSgqStaPuMapOffset * NFCQ_DEPTH_TOTAL) + ucLun* NFCQ_DEPTH + ucLevel);

    switch  (ucSgqStaRegNum)
20005df8:	1282f6        	bgeui	a2, 8, 20005e0e <HAL_SgqIsBusy+0x66>
20005dfb:	3109      	s32i.n	a0, a1, 12
20005dfd:	0d42b6        	bltui	a2, 4, 20005e0e <HAL_SgqIsBusy+0x66>
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:436
            break;
        case 4:
        case 5:
        case 6:
        case 7:
            ulSgqStatus = *(((volatile U32*)rSgqStatusP2Addr) + (ucSgqStaRegNum - 4));
20005e00:	a08260        	addx4	a8, a2, a6
20005e03:	0020c0        	memw
20005e06:	692882        	l32i	a8, a8, 0x1a4
20005e09:	0189      	s32i.n	a8, a1, 0
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:437
            break;
20005e0b:	000486        	j	20005e21 <HAL_SgqIsBusy+0x79>

20005e0e <HAL_SgqIsBusy+0x66>:
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:439
        default:
            DBG_Printf("ucPhyPu is invalid\n", ucPhyPU);
20005e0e:	053d      	mov.n	a3, a5
20005e10:	eaea21        	l32r	a2, 200009b8 <_stext+0x2b8>
20005e13:	201110        	or	a1, a1, a1
20005e16:	04e4c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:440
            DBG_Getch();
20005e19:	ea3f01        	l32r	a0, 20000718 <_stext+0x18>
20005e1c:	0000c0        	callx0	a0
20005e1f:	3108      	l32i.n	a0, a1, 12
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:444
            break;
    }

    if (0 != (rGlbOTFBMCtrl0 & (1 << 18)))
20005e21:	ea5591        	l32r	a9, 20000778 <_stext+0x78>
20005e24:	0020c0        	memw
20005e27:	8a2992        	l32i	a9, a9, 0x228
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:450
    {
        DBG_Printf("PU=%d GLB_28\n", ucPU);
        return FALSE;
    }
    
    return (BOOL)(ulSgqStatus & ucSgqStaPuLevelMapBit) ? TRUE : FALSE;
20005e2a:	0128      	l32i.n	a2, a1, 0
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:444
            DBG_Printf("ucPhyPu is invalid\n", ucPhyPU);
            DBG_Getch();
            break;
    }

    if (0 != (rGlbOTFBMCtrl0 & (1 << 18)))
20005e2c:	10f927        	bbsi	a9, 18, 20005e40 <HAL_SgqIsBusy+0x98>
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:450
    {
        DBG_Printf("PU=%d GLB_28\n", ucPU);
        return FALSE;
    }
    
    return (BOOL)(ulSgqStatus & ucSgqStaPuLevelMapBit) ? TRUE : FALSE;
20005e2f:	21c8      	l32i.n	a12, a1, 8
20005e31:	102200        	and	a2, a2, a0
20005e34:	1a0c      	movi.n	a10, 1
20005e36:	1108      	l32i.n	a0, a1, 4
20005e38:	932a20        	movnez	a2, a10, a2
20005e3b:	10c112        	addi	a1, a1, 16
20005e3e:	f00d      	ret.n

20005e40 <HAL_SgqIsBusy+0x98>:
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:446
            break;
    }

    if (0 != (rGlbOTFBMCtrl0 & (1 << 18)))
    {
        DBG_Printf("PU=%d GLB_28\n", ucPU);
20005e40:	203cc0        	or	a3, a12, a12
20005e43:	eade21        	l32r	a2, 200009bc <_stext+0x2bc>
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:450
        return FALSE;
    }
    
    return (BOOL)(ulSgqStatus & ucSgqStaPuLevelMapBit) ? TRUE : FALSE;
20005e46:	0221c2        	l32i	a12, a1, 8
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:446
            break;
    }

    if (0 != (rGlbOTFBMCtrl0 & (1 << 18)))
    {
        DBG_Printf("PU=%d GLB_28\n", ucPU);
20005e49:	04e185        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:447
        return FALSE;
20005e4c:	00a022        	movi	a2, 0
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:450
    }
    
    return (BOOL)(ulSgqStatus & ucSgqStaPuLevelMapBit) ? TRUE : FALSE;
20005e4f:	1108      	l32i.n	a0, a1, 4
20005e51:	10c112        	addi	a1, a1, 16
20005e54:	f00d      	ret.n

20005e56 <HAL_SgqIsBusy+0xae>:
	...

20005e58 <HAL_ConfigCacheStatus>:
HAL_ConfigCacheStatus():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1015
{
    U32 ulBaseAddr;
    ulBaseAddr = OTFB_TLG_MCU012_SHARE_BASE - OTFB_START_ADDRESS;

    pDSG->bsCacheStatusAddr = ulBaseAddr + ulCsAddr;
    pDSG->bsCsInDram = FALSE;
20005e58:	ea6881        	l32r	a8, 200007f8 <_stext+0xf8>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1017
    pDSG->bsCacheStsData = 0;// TEST_CACHE_STS_DATA;
    pDSG->bsCacheStsEn = TRUE;
20005e5b:	00a152        	movi	a5, 0x100
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1014
void HAL_ConfigCacheStatus(NORMAL_DSG_ENTRY *pDSG, U32 ulCsAddr)
{
    U32 ulBaseAddr;
    ulBaseAddr = OTFB_TLG_MCU012_SHARE_BASE - OTFB_START_ADDRESS;

    pDSG->bsCacheStatusAddr = ulBaseAddr + ulCsAddr;
20005e5e:	2278      	l32i.n	a7, a2, 8
20005e60:	ead891        	l32r	a9, 200009c0 <_stext+0x2c0>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1016
    pDSG->bsCsInDram = FALSE;
    pDSG->bsCacheStsData = 0;// TEST_CACHE_STS_DATA;
20005e63:	060c      	movi.n	a6, 0
20005e65:	0c4262        	s8i	a6, a2, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1017
    pDSG->bsCacheStsEn = TRUE;
20005e68:	3248      	l32i.n	a4, a2, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1014
void HAL_ConfigCacheStatus(NORMAL_DSG_ENTRY *pDSG, U32 ulCsAddr)
{
    U32 ulBaseAddr;
    ulBaseAddr = OTFB_TLG_MCU012_SHARE_BASE - OTFB_START_ADDRESS;

    pDSG->bsCacheStatusAddr = ulBaseAddr + ulCsAddr;
20005e6a:	939a      	add.n	a9, a3, a9
20005e6c:	e20974        	insbits	a7, a9, 0, 30
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1017
    pDSG->bsCsInDram = FALSE;
    pDSG->bsCacheStsData = 0;// TEST_CACHE_STS_DATA;
    pDSG->bsCacheStsEn = TRUE;
20005e6f:	204450        	or	a4, a4, a5
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1015
{
    U32 ulBaseAddr;
    ulBaseAddr = OTFB_TLG_MCU012_SHARE_BASE - OTFB_START_ADDRESS;

    pDSG->bsCacheStatusAddr = ulBaseAddr + ulCsAddr;
    pDSG->bsCsInDram = FALSE;
20005e72:	107780        	and	a7, a7, a8
20005e75:	2279      	s32i.n	a7, a2, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1017
    pDSG->bsCacheStsData = 0;// TEST_CACHE_STS_DATA;
    pDSG->bsCacheStsEn = TRUE;
20005e77:	3249      	s32i.n	a4, a2, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1019

    return;
20005e79:	f00d      	ret.n

20005e7b <HAL_ConfigCacheStatus+0x23>:
	...

20005e7c <HAL_ConfigSsu1>:
HAL_ConfigSsu1():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:993
void HAL_ConfigSsu1(NFCQ_ENTRY *pNFCQEntry, U16 usSsu1Addr, BOOL bOntf)
{
    pNFCQEntry->bsSsu1En = TRUE;
    pNFCQEntry->bsSsu1Ontf = bOntf;
    pNFCQEntry->bsSsu1Addr = usSsu1Addr;
    pNFCQEntry->bsSsu1Data = 0;// TEST_SSU1_DATA;
20005e7c:	050c      	movi.n	a5, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:990
History:
20151130   abby    create
------------------------------------------------------------------------------*/
void HAL_ConfigSsu1(NFCQ_ENTRY *pNFCQEntry, U16 usSsu1Addr, BOOL bOntf)
{
    pNFCQEntry->bsSsu1En = TRUE;
20005e7e:	00a272        	movi	a7, 0x200
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:991
    pNFCQEntry->bsSsu1Ontf = bOntf;
20005e81:	7288      	l32i.n	a8, a2, 28
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:990
History:
20151130   abby    create
------------------------------------------------------------------------------*/
void HAL_ConfigSsu1(NFCQ_ENTRY *pNFCQEntry, U16 usSsu1Addr, BOOL bOntf)
{
    pNFCQEntry->bsSsu1En = TRUE;
20005e83:	0268      	l32i.n	a6, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:991
    pNFCQEntry->bsSsu1Ontf = bOntf;
20005e85:	d08484        	insbits	a8, a4, 24, 24
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:990
History:
20151130   abby    create
------------------------------------------------------------------------------*/
void HAL_ConfigSsu1(NFCQ_ENTRY *pNFCQEntry, U16 usSsu1Addr, BOOL bOntf)
{
    pNFCQEntry->bsSsu1En = TRUE;
20005e88:	206670        	or	a6, a6, a7
20005e8b:	0269      	s32i.n	a6, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:991
    pNFCQEntry->bsSsu1Ontf = bOntf;
20005e8d:	7289      	s32i.n	a8, a2, 28
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:992
    pNFCQEntry->bsSsu1Addr = usSsu1Addr;
20005e8f:	0e5232        	s16i	a3, a2, 28
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:993
    pNFCQEntry->bsSsu1Data = 0;// TEST_SSU1_DATA;
20005e92:	1e4252        	s8i	a5, a2, 30
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:995
    
    return;
20005e95:	f00d      	ret.n

20005e97 <HAL_ConfigSsu1+0x1b>:
	...

20005e98 <HAL_ConfigSsu0>:
HAL_ConfigSsu0():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:972
void HAL_ConfigSsu0(NFCQ_ENTRY *pNFCQEntry, U16 usSsu0Addr, BOOL bOntf)
{
    pNFCQEntry->bsSsu0En = TRUE;
    pNFCQEntry->bsSsu0Ontf = bOntf;      //bOntf = 1: update to OTFB
    pNFCQEntry->bsSsu0Addr = usSsu0Addr;
    pNFCQEntry->bsSsu0Data = 0;
20005e98:	050c      	movi.n	a5, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:969
History:
20151130   abby    create
------------------------------------------------------------------------------*/
void HAL_ConfigSsu0(NFCQ_ENTRY *pNFCQEntry, U16 usSsu0Addr, BOOL bOntf)
{
    pNFCQEntry->bsSsu0En = TRUE;
20005e9a:	00a172        	movi	a7, 0x100
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:970
    pNFCQEntry->bsSsu0Ontf = bOntf;      //bOntf = 1: update to OTFB
20005e9d:	6288      	l32i.n	a8, a2, 24
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:969
History:
20151130   abby    create
------------------------------------------------------------------------------*/
void HAL_ConfigSsu0(NFCQ_ENTRY *pNFCQEntry, U16 usSsu0Addr, BOOL bOntf)
{
    pNFCQEntry->bsSsu0En = TRUE;
20005e9f:	0268      	l32i.n	a6, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:970
    pNFCQEntry->bsSsu0Ontf = bOntf;      //bOntf = 1: update to OTFB
20005ea1:	d08484        	insbits	a8, a4, 24, 24
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:969
History:
20151130   abby    create
------------------------------------------------------------------------------*/
void HAL_ConfigSsu0(NFCQ_ENTRY *pNFCQEntry, U16 usSsu0Addr, BOOL bOntf)
{
    pNFCQEntry->bsSsu0En = TRUE;
20005ea4:	206670        	or	a6, a6, a7
20005ea7:	0269      	s32i.n	a6, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:970
    pNFCQEntry->bsSsu0Ontf = bOntf;      //bOntf = 1: update to OTFB
20005ea9:	6289      	s32i.n	a8, a2, 24
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:971
    pNFCQEntry->bsSsu0Addr = usSsu0Addr;
20005eab:	0c5232        	s16i	a3, a2, 24
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:972
    pNFCQEntry->bsSsu0Data = 0;
20005eae:	1a4252        	s8i	a5, a2, 26
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:974

    return;
20005eb1:	f00d      	ret.n

20005eb3 <HAL_ConfigSsu0+0x1b>:
	...

20005eb4 <HAL_SetNormalDsgSts>:
HAL_SetNormalDsgSts():
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:350
    else
    {
        DBG_Getch();
    }
#else
    l_pDsgReport->bsDsgValue = ucStsValue;
20005eb4:	ea7c      	movi.n	a10, -2
20005eb6:	ea1941        	l32r	a4, 2000071c <_stext+0x1c>
20005eb9:	190c      	movi.n	a9, 1
20005ebb:	382442        	l32i	a4, a4, 224
20005ebe:	0020c0        	memw
20005ec1:	0488      	l32i.n	a8, a4, 0
20005ec3:	1088a0        	and	a8, a8, a10
20005ec6:	208890        	or	a8, a8, a9
20005ec9:	0020c0        	memw
20005ecc:	0489      	s32i.n	a8, a4, 0
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:351
    l_pDsgReport->bsDsgWrIndex = usDsgId;
20005ece:	0020c0        	memw
20005ed1:	0478      	l32i.n	a7, a4, 0
20005ed3:	421274        	insbits	a7, a2, 1, 10
20005ed6:	0020c0        	memw
20005ed9:	0479      	s32i.n	a7, a4, 0
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:352
    l_pDsgReport->bsDsgWrEn = TRUE;
20005edb:	ea3f61        	l32r	a6, 200007d8 <_stext+0xd8>
20005ede:	ea3f51        	l32r	a5, 200007dc <_stext+0xdc>
20005ee1:	0020c0        	memw
20005ee4:	0438      	l32i.n	a3, a4, 0
20005ee6:	103360        	and	a3, a3, a6
20005ee9:	203350        	or	a3, a3, a5
20005eec:	0020c0        	memw
20005eef:	0439      	s32i.n	a3, a4, 0
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:355
#endif

    return;
20005ef1:	f00d      	ret.n

20005ef3 <HAL_SetNormalDsgSts+0x3f>:
	...

20005ef4 <HAL_NfcGetDmaAddr>:
HAL_NfcGetDmaAddr():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:734
{
    U32 ulAddr;

    ulAddr = ((ulBuffID << ulBufSizeBits) + (ulSecInBuff << SEC_SZ_BITS));
    
    return (ulAddr >> 1);
20005ef4:	115370        	slli	a5, a3, 9
20005ef7:	401400        	ssl	a4
20005efa:	a12200        	sll	a2, a2
20005efd:	225a      	add.n	a2, a2, a5
20005eff:	412120        	srli	a2, a2, 1
20005f02:	f00d      	ret.n

20005f04 <HAL_GetNormalDsgAddr>:
HAL_GetNormalDsgAddr():
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:305
    if get one DSG by HAL_GetNormalDsg function, call this function to get its address.
History:
    201409011    Tobey   uniform coding style
------------------------------------------------------------------------------*/
U32 HAL_GetNormalDsgAddr(U16 usDsgId)
{
20005f04:	f0c112        	addi	a1, a1, -16
20005f07:	0109      	s32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:306
    if(usDsgId >= NORMAL_DSG_NUM)
20005f09:	ffa102        	movi	a0, 0x1ff
20005f0c:	103027        	bltu	a0, a2, 20005f20 <HAL_GetNormalDsgAddr+0x1c>
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:313
        DBG_Getch();
        return 0;
    }
    else
    {
        return (U32)(usDsgId*sizeof(NORMAL_DSG_ENTRY) + NORMAL_DSG_BASE);
20005f0f:	ea0131        	l32r	a3, 20000714 <_stext+0x14>
20005f12:	1122c0        	slli	a2, a2, 4
20005f15:	0108      	l32i.n	a0, a1, 0
20005f17:	10c112        	addi	a1, a1, 16
20005f1a:	223a      	add.n	a2, a2, a3
20005f1c:	f00d      	ret.n

20005f1e <HAL_GetNormalDsgAddr+0x1a>:
	...

20005f20 <HAL_GetNormalDsgAddr+0x1c>:
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:308
------------------------------------------------------------------------------*/
U32 HAL_GetNormalDsgAddr(U16 usDsgId)
{
    if(usDsgId >= NORMAL_DSG_NUM)
    {
        DBG_Getch();
20005f20:	e9fe01        	l32r	a0, 20000718 <_stext+0x18>
20005f23:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:309
        return 0;
20005f26:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:313
    }
    else
    {
        return (U32)(usDsgId*sizeof(NORMAL_DSG_ENTRY) + NORMAL_DSG_BASE);
20005f28:	0108      	l32i.n	a0, a1, 0
20005f2a:	10c112        	addi	a1, a1, 16
20005f2d:	f00d      	ret.n

20005f2f <HAL_GetNormalDsgAddr+0x2b>:
	...

20005f30 <HAL_ConfigScramble>:
HAL_ConfigScramble():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1528
20150629   Jason   modify
20150709   Jason   use deferent seeds between pages in a block, according abbin's solution.
20160411   Abby    add 3D flash support
------------------------------------------------------------------------------*/
void HAL_ConfigScramble(NFCQ_ENTRY *pNFCQEntry, U16 usPage, U8 ucPlnNum, U8 ucPageType, NFC_SCR_CONF eScrType)
{
20005f30:	1a0c      	movi.n	a10, 1
20005f32:	e0c112        	addi	a1, a1, -32
20005f35:	11c9      	s32i.n	a12, a1, 4
20005f37:	0109      	s32i.n	a0, a1, 0
20005f39:	02cd      	mov.n	a12, a2
20005f3b:	042d      	mov.n	a2, a4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1532
    volatile PG_CONF_REG *pNfcPgCfg = (volatile PG_CONF_REG *) &rNfcPgCfg;
    
    /*enable scramble*/
    pNFCQEntry->bsPuEnpMsk = SCRAMBLE_MSK_EN;
20005f3d:	0c08      	l32i.n	a0, a12, 0
20005f3f:	747c      	movi.n	a4, -9
20005f41:	100040        	and	a0, a0, a4
20005f44:	0c09      	s32i.n	a0, a12, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1545
        pNFCQEntry->bsPuEnpMsk = 1;
    }
#endif  
        
    /*set scramble seed with page num & plane only when scramble is enable */
    if (FALSE != pNFCQEntry->bsPuEnpMsk)
20005f46:	33e037        	bbsi	a0, 3, 20005f7d <HAL_ConfigScramble+0x4d>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1550
    {
        return;
    }
   
    switch (eScrType)
20005f49:	0b4616        	beqz	a6, 20006001 <HAL_ConfigScramble+0xd1>
20005f4c:	760b      	addi.n	a7, a6, -1
20005f4e:	0b6716        	beqz	a7, 20006008 <HAL_ConfigScramble+0xd8>
20005f51:	fec682        	addi	a8, a6, -2
20005f54:	0d8816        	beqz	a8, 20006030 <HAL_ConfigScramble+0x100>
20005f57:	fdc692        	addi	a9, a6, -3
20005f5a:	0da916        	beqz	a9, 20006038 <HAL_ConfigScramble+0x108>
20005f5d:	4129      	s32i.n	a2, a1, 16
20005f5f:	314626        	beqi	a6, 4, 20005f94 <HAL_ConfigScramble+0x64>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1597
            }
        }break;
    #endif            
        default :
        {
            DBG_Printf("Scramble configure type error!\n");
20005f62:	ea9821        	l32r	a2, 200009c4 <_stext+0x2c4>
20005f65:	04cfc5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1598
            DBG_Getch();
20005f68:	e9ec01        	l32r	a0, 20000718 <_stext+0x18>
20005f6b:	0000c0        	callx0	a0
20005f6e:	4128      	l32i.n	a2, a1, 16

20005f70 <HAL_ConfigScramble+0x40>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1603
        }
    }
    
    /* config PLN number for TLC write or 3D MLC  */
    if (TRUE == pNfcPgCfg->bsRTSB3dTlc)
20005f70:	ea00a1        	l32r	a10, 20000770 <_stext+0x70>
20005f73:	0020c0        	memw
20005f76:	0aa8      	l32i.n	a10, a10, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1608
    {
        pNFCQEntry->bsTlcPlnNum = ucPlnNum;
    }
    
    return;
20005f78:	0108      	l32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1603
            DBG_Getch();
        }
    }
    
    /* config PLN number for TLC write or 3D MLC  */
    if (TRUE == pNfcPgCfg->bsRTSB3dTlc)
20005f7a:	08eab7        	bbsi	a10, 11, 20005f86 <HAL_ConfigScramble+0x56>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1608
    {
        pNFCQEntry->bsTlcPlnNum = ucPlnNum;
    }
    
    return;
20005f7d:	11c8      	l32i.n	a12, a1, 4
20005f7f:	0108      	l32i.n	a0, a1, 0
20005f81:	20c112        	addi	a1, a1, 32
20005f84:	f00d      	ret.n

20005f86 <HAL_ConfigScramble+0x56>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1605
    }
    
    /* config PLN number for TLC write or 3D MLC  */
    if (TRUE == pNfcPgCfg->bsRTSB3dTlc)
    {
        pNFCQEntry->bsTlcPlnNum = ucPlnNum;
20005f86:	0cb8      	l32i.n	a11, a12, 0
20005f88:	63e2b4        	insbits	a11, a2, 14, 15
20005f8b:	0cb9      	s32i.n	a11, a12, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1608
    }
    
    return;
20005f8d:	11c8      	l32i.n	a12, a1, 4
20005f8f:	20c112        	addi	a1, a1, 32
20005f92:	f00d      	ret.n

20005f94 <HAL_ConfigScramble+0x64>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1577
        case MLC_RW_TWO_PG :
        {
            pNFCQEntry->bsScrSeed0 = ucPage;
            pNFCQEntry->bsScrSeed1Lsb = (ucPage + 1) & 0x1;            //bit0
            pNFCQEntry->bsScrSeed1Msb = ((ucPage + 1) & 0xFE) >> 1;    //bit7-1
        }break;
20005f94:	6fa092        	movi	a9, 111
20005f97:	240c      	movi.n	a4, 2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1582
        
    #ifdef FLASH_INTEL_3DTLC   
        case TLC_RW_TWO_PG :
        {
            pNFCQEntry->bsScrSeed0 = ucPage;
20005f99:	134c32        	s8i	a3, a12, 19
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1577
        case MLC_RW_TWO_PG :
        {
            pNFCQEntry->bsScrSeed0 = ucPage;
            pNFCQEntry->bsScrSeed1Lsb = (ucPage + 1) & 0x1;            //bit0
            pNFCQEntry->bsScrSeed1Msb = ((ucPage + 1) & 0xFE) >> 1;    //bit7-1
        }break;
20005f9c:	e0a562        	movi	a6, 0x5e0
20005f9f:	03a052        	movi	a5, 3
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:175
------------------------------------------------------------------------------*/
PAIR_PAGE_TYPE HAL_GetFlashPairPageType(U16 usPage)
{
    PAIR_PAGE_TYPE ePairPageType;

    if(usPage < 16)
20005fa2:	200550        	or	a0, a5, a5
20005fa5:	ffb3b6        	bltui	a3, 16, 20005fa8 <HAL_ConfigScramble+0x78>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:180
    {
        ePairPageType = LOW_PAGE_WITHOUT_HIGH;
    }
    
    if((usPage >= 16) && (usPage < 112))
20005fa8:	11b3b6        	bltui	a3, 16, 20005fbd <HAL_ConfigScramble+0x8d>
20005fab:	113937        	bltu	a9, a3, 20005fc0 <HAL_ConfigScramble+0x90>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:182
    {
        if (EVEN == usPage % 2)
20005fae:	047030        	extui	a7, a3, 0, 1
20005fb1:	040d      	mov.n	a0, a4
20005fb3:	830a70        	moveqz	a0, a10, a7
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:192
        {
            ePairPageType = HIGH_PAGE;
        }
    }
    
    if((usPage >= 112) && (usPage < 1505))
20005fb6:	1bb937        	bgeu	a9, a3, 20005fd5 <HAL_ConfigScramble+0xa5>
20005fb9:	0000c6        	j	20005fc0 <HAL_ConfigScramble+0x90>

20005fbc <HAL_ConfigScramble+0x8c>:
	...

20005fbd <HAL_ConfigScramble+0x8d>:
20005fbd:	14b937        	bgeu	a9, a3, 20005fd5 <HAL_ConfigScramble+0xa5>
20005fc0:	143637        	bltu	a6, a3, 20005fd8 <HAL_ConfigScramble+0xa8>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:194
    {
        if (0 == (usPage - 112) % 3)
20005fc3:	370c      	movi.n	a7, 3
20005fc5:	90c302        	addi	a0, a3, -112
20005fc8:	f20070        	rems	a0, a0, a7
20005fcb:	082016        	beqz	a0, 20006051 <HAL_ConfigScramble+0x121>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:198
        {
            ePairPageType = EXTRA_PAGE;
        }
        else if (1 == (usPage - 112) % 3)
20005fce:	800b      	addi.n	a8, a0, -1
20005fd0:	834a80        	moveqz	a4, a10, a8
20005fd3:	040d      	mov.n	a0, a4
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:207
        else
        {
            ePairPageType = HIGH_PAGE;
        }
    }
    if((usPage >= 1505) && (usPage < 1536))
20005fd5:	0fb637        	bgeu	a6, a3, 20005fe8 <HAL_ConfigScramble+0xb8>
20005fd8:	ffa592        	movi	a9, 0x5ff
20005fdb:	093937        	bltu	a9, a3, 20005fe8 <HAL_ConfigScramble+0xb8>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:209
    {
        if (0 == usPage % 2)
20005fde:	04b030        	extui	a11, a3, 0, 1
20005fe1:	4a0c      	movi.n	a10, 4
20005fe3:	835ab0        	moveqz	a5, a10, a11
20005fe6:	050d      	mov.n	a0, a5
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1583
        
    #ifdef FLASH_INTEL_3DTLC   
        case TLC_RW_TWO_PG :
        {
            pNFCQEntry->bsScrSeed0 = ucPage;
            if(EXTRA_PAGE == HAL_GetFlashPairPageType(usPage))
20005fe8:	654026        	beqi	a0, 4, 20006051 <HAL_ConfigScramble+0x121>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1591
                pNFCQEntry->bsScrSeed1Msb = (((U8)HAL_GetHighPageIndexfromExtra(usPage)) & 0xFE) >> 1;     //bit7-1
            }
            else
            {
                pNFCQEntry->bsScrSeed1Lsb = (ucPage + 1) & 0x1;            //bit0
                pNFCQEntry->bsScrSeed1Msb = ((ucPage + 1) & 0xFE) >> 1;    //bit7-1
20005feb:	6c08      	l32i.n	a0, a12, 24
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1590
                pNFCQEntry->bsScrSeed1Lsb = ((U8)HAL_GetHighPageIndexfromExtra(usPage)) & 0x1;            //bit0
                pNFCQEntry->bsScrSeed1Msb = (((U8)HAL_GetHighPageIndexfromExtra(usPage)) & 0xFE) >> 1;     //bit7-1
            }
            else
            {
                pNFCQEntry->bsScrSeed1Lsb = (ucPage + 1) & 0x1;            //bit0
20005fed:	5c58      	l32i.n	a5, a12, 20
20005fef:	431b      	addi.n	a4, a3, 1
20005ff1:	000454        	insbits	a5, a4, 0, 0
20005ff4:	5c59      	s32i.n	a5, a12, 20
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1591
                pNFCQEntry->bsScrSeed1Msb = ((ucPage + 1) & 0xFE) >> 1;    //bit7-1
20005ff6:	214140        	srai	a4, a4, 1
20005ff9:	f39404        	insbits	a0, a4, 25, 31
20005ffc:	6c09      	s32i.n	a0, a12, 24
20005ffe:	ffdb86        	j	20005f70 <HAL_ConfigScramble+0x40>

20006001 <HAL_ConfigScramble+0xd1>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1555
    switch (eScrType)
    {
        case NORMAL_SCR :
        {
            /* set scramble seed index as page num when scramble is enable */
            pNFCQEntry->bsScrSeed0 = ucPage;
20006001:	134c32        	s8i	a3, a12, 19
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1556
        }break;
20006004:	ffda06        	j	20005f70 <HAL_ConfigScramble+0x40>

20006007 <HAL_ConfigScramble+0xd7>:
	...

20006008 <HAL_ConfigScramble+0xd8>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1560
        
        case TLC_WT_THREE_PG :
        {
            pNFCQEntry->bsScrSeed0 = ucPage;
20006008:	134c32        	s8i	a3, a12, 19
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1562
            pNFCQEntry->bsScrSeed1Lsb = (ucPage + 1) & 0x1;            //bit0
            pNFCQEntry->bsScrSeed1Msb = ((ucPage + 1) & 0xFE) >> 1;    //bit7-1
2000600b:	6cb8      	l32i.n	a11, a12, 24
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1564
            pNFCQEntry->bsScrSeed2Lsb = (ucPage + 2) & 0x1;            //bit0
            pNFCQEntry->bsScrSeed2Msb = ((ucPage + 2) & 0xFE) >> 1;    //bit7-1
2000600d:	7c98      	l32i.n	a9, a12, 28
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1561
        }break;
        
        case TLC_WT_THREE_PG :
        {
            pNFCQEntry->bsScrSeed0 = ucPage;
            pNFCQEntry->bsScrSeed1Lsb = (ucPage + 1) & 0x1;            //bit0
2000600f:	5c68      	l32i.n	a6, a12, 20
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1563
            pNFCQEntry->bsScrSeed1Msb = ((ucPage + 1) & 0xFE) >> 1;    //bit7-1
            pNFCQEntry->bsScrSeed2Lsb = (ucPage + 2) & 0x1;            //bit0
20006011:	732b      	addi.n	a7, a3, 2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1561
        }break;
        
        case TLC_WT_THREE_PG :
        {
            pNFCQEntry->bsScrSeed0 = ucPage;
            pNFCQEntry->bsScrSeed1Lsb = (ucPage + 1) & 0x1;            //bit0
20006013:	831b      	addi.n	a8, a3, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1562
            pNFCQEntry->bsScrSeed1Msb = ((ucPage + 1) & 0xFE) >> 1;    //bit7-1
20006015:	210180        	srai	a0, a8, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1564
            pNFCQEntry->bsScrSeed2Lsb = (ucPage + 2) & 0x1;            //bit0
            pNFCQEntry->bsScrSeed2Msb = ((ucPage + 2) & 0xFE) >> 1;    //bit7-1
20006018:	21a170        	srai	a10, a7, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1561
        }break;
        
        case TLC_WT_THREE_PG :
        {
            pNFCQEntry->bsScrSeed0 = ucPage;
            pNFCQEntry->bsScrSeed1Lsb = (ucPage + 1) & 0x1;            //bit0
2000601b:	000864        	insbits	a6, a8, 0, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1564
            pNFCQEntry->bsScrSeed1Msb = ((ucPage + 1) & 0xFE) >> 1;    //bit7-1
            pNFCQEntry->bsScrSeed2Lsb = (ucPage + 2) & 0x1;            //bit0
            pNFCQEntry->bsScrSeed2Msb = ((ucPage + 2) & 0xFE) >> 1;    //bit7-1
2000601e:	f39a94        	insbits	a9, a10, 25, 31
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1562
        
        case TLC_WT_THREE_PG :
        {
            pNFCQEntry->bsScrSeed0 = ucPage;
            pNFCQEntry->bsScrSeed1Lsb = (ucPage + 1) & 0x1;            //bit0
            pNFCQEntry->bsScrSeed1Msb = ((ucPage + 1) & 0xFE) >> 1;    //bit7-1
20006021:	f390b4        	insbits	a11, a0, 25, 31
20006024:	6cb9      	s32i.n	a11, a12, 24
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1564
            pNFCQEntry->bsScrSeed2Lsb = (ucPage + 2) & 0x1;            //bit0
            pNFCQEntry->bsScrSeed2Msb = ((ucPage + 2) & 0xFE) >> 1;    //bit7-1
20006026:	7c99      	s32i.n	a9, a12, 28
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1563
        case TLC_WT_THREE_PG :
        {
            pNFCQEntry->bsScrSeed0 = ucPage;
            pNFCQEntry->bsScrSeed1Lsb = (ucPage + 1) & 0x1;            //bit0
            pNFCQEntry->bsScrSeed1Msb = ((ucPage + 1) & 0xFE) >> 1;    //bit7-1
            pNFCQEntry->bsScrSeed2Lsb = (ucPage + 2) & 0x1;            //bit0
20006028:	011764        	insbits	a6, a7, 1, 1
2000602b:	5c69      	s32i.n	a6, a12, 20
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1565
            pNFCQEntry->bsScrSeed2Msb = ((ucPage + 2) & 0xFE) >> 1;    //bit7-1
        }break;
2000602d:	ffcfc6        	j	20005f70 <HAL_ConfigScramble+0x40>

20006030 <HAL_ConfigScramble+0x100>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1569
        
        case TLC_RD_ONE_PG :
        {
            pNFCQEntry->bsScrSeed0 = ucPage + ucPageType;
20006030:	453a      	add.n	a4, a5, a3
20006032:	134c42        	s8i	a4, a12, 19
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1570
        }break;
20006035:	ffcdc6        	j	20005f70 <HAL_ConfigScramble+0x40>

20006038 <HAL_ConfigScramble+0x108>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1574
        
        case MLC_RW_TWO_PG :
        {
            pNFCQEntry->bsScrSeed0 = ucPage;
20006038:	134c32        	s8i	a3, a12, 19
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1576
            pNFCQEntry->bsScrSeed1Lsb = (ucPage + 1) & 0x1;            //bit0
            pNFCQEntry->bsScrSeed1Msb = ((ucPage + 1) & 0xFE) >> 1;    //bit7-1
2000603b:	6c58      	l32i.n	a5, a12, 24
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1575
        }break;
        
        case MLC_RW_TWO_PG :
        {
            pNFCQEntry->bsScrSeed0 = ucPage;
            pNFCQEntry->bsScrSeed1Lsb = (ucPage + 1) & 0x1;            //bit0
2000603d:	5c78      	l32i.n	a7, a12, 20
2000603f:	631b      	addi.n	a6, a3, 1
20006041:	000674        	insbits	a7, a6, 0, 0
20006044:	5c79      	s32i.n	a7, a12, 20
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1576
            pNFCQEntry->bsScrSeed1Msb = ((ucPage + 1) & 0xFE) >> 1;    //bit7-1
20006046:	216160        	srai	a6, a6, 1
20006049:	f39654        	insbits	a5, a6, 25, 31
2000604c:	6c59      	s32i.n	a5, a12, 24
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1577
        }break;
2000604e:	ffc786        	j	20005f70 <HAL_ConfigScramble+0x40>

20006051 <HAL_ConfigScramble+0x121>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1585
        case TLC_RW_TWO_PG :
        {
            pNFCQEntry->bsScrSeed0 = ucPage;
            if(EXTRA_PAGE == HAL_GetFlashPairPageType(usPage))
            {
                pNFCQEntry->bsScrSeed1Lsb = ((U8)HAL_GetHighPageIndexfromExtra(usPage)) & 0x1;            //bit0
20006051:	20aab2        	movi	a11, 0xfffffa20
20006054:	afa5a2        	movi	a10, 0x5af
20006057:	e9bf41        	l32r	a4, 20000754 <_stext+0x54>
2000605a:	cfa052        	movi	a5, 207
2000605d:	70a092        	movi	a9, 112
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:226

U16 HAL_GetHighPageIndexfromExtra(U16 usExtraPg)
{
    U16 usHighPg = INVALID_4F;
    
    if(usExtraPg == 112)
20006060:	4a1397        	beq	a3, a9, 200060ae <HAL_ConfigScramble+0x17e>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:230
    {
        usHighPg = 49;
    }
    else if (((usExtraPg - 112) / 3) < 32)
20006063:	02a537        	bge	a5, a3, 20006069 <HAL_ConfigScramble+0x139>
20006066:	0023c6        	j	200060f9 <HAL_ConfigScramble+0x1c9>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:232
    {
        usHighPg = 49 + (((usExtraPg - 112) / 3) * 2);
20006069:	370c      	movi.n	a7, 3
2000606b:	90c302        	addi	a0, a3, -112
2000606e:	d20070        	quos	a0, a0, a7
20006071:	31a072        	movi	a7, 49
20006074:	900070        	addx2	a0, a0, a7
20006077:	f40000        	extui	a0, a0, 0, 16
2000607a:	026102        	s32i	a0, a1, 8
2000607d:	046122        	s32i	a2, a1, 16
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:247
    else if(usExtraPg > 1504)
    {
        usHighPg = (((usExtraPg - 1504) / 2) * 3) + 1410;
    }

    if(INVALID_4F == usHighPg)
20006080:	2c9047        	bne	a0, a4, 200060b0 <HAL_ConfigScramble+0x180>
20006083:	036132        	s32i	a3, a1, 12
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:249
    {
        DBG_Printf("Get upper page error!!!\n");
20006086:	ea5021        	l32r	a2, 200009c8 <_stext+0x2c8>
20006089:	04bd85        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:250
        DBG_Getch();
2000608c:	e9a301        	l32r	a0, 20000718 <_stext+0x18>
2000608f:	0000c0        	callx0	a0
20006092:	4128      	l32i.n	a2, a1, 16
20006094:	e0a562        	movi	a6, 0x5e0
20006097:	3138      	l32i.n	a3, a1, 12
20006099:	2108      	l32i.n	a0, a1, 8
2000609b:	e9ae41        	l32r	a4, 20000754 <_stext+0x54>
2000609e:	cfa052        	movi	a5, 207
200060a1:	70a092        	movi	a9, 112
200060a4:	afa5a2        	movi	a10, 0x5af
200060a7:	20aab2        	movi	a11, 0xfffffa20
200060aa:	000086        	j	200060b0 <HAL_ConfigScramble+0x180>

200060ad <HAL_ConfigScramble+0x17d>:
	...

200060ae <HAL_ConfigScramble+0x17e>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:228
{
    U16 usHighPg = INVALID_4F;
    
    if(usExtraPg == 112)
    {
        usHighPg = 49;
200060ae:	103c      	movi.n	a0, 49
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1585
200060b0:	5c88      	l32i.n	a8, a12, 20
200060b2:	000084        	insbits	a8, a0, 0, 0
200060b5:	5c89      	s32i.n	a8, a12, 20
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:226

U16 HAL_GetHighPageIndexfromExtra(U16 usExtraPg)
{
    U16 usHighPg = INVALID_4F;
    
    if(usExtraPg == 112)
200060b7:	2f1397        	beq	a3, a9, 200060ea <HAL_ConfigScramble+0x1ba>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:230
    {
        usHighPg = 49;
    }
    else if (((usExtraPg - 112) / 3) < 32)
200060ba:	522537        	blt	a5, a3, 20006110 <HAL_ConfigScramble+0x1e0>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:232
    {
        usHighPg = 49 + (((usExtraPg - 112) / 3) * 2);
200060bd:	350c      	movi.n	a5, 3
200060bf:	90c302        	addi	a0, a3, -112
200060c2:	d20050        	quos	a0, a0, a5
200060c5:	153c      	movi.n	a5, 49
200060c7:	900050        	addx2	a0, a0, a5
200060ca:	f40000        	extui	a0, a0, 0, 16
200060cd:	026102        	s32i	a0, a1, 8
200060d0:	046122        	s32i	a2, a1, 16
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:247
    else if(usExtraPg > 1504)
    {
        usHighPg = (((usExtraPg - 1504) / 2) * 3) + 1410;
    }

    if(INVALID_4F == usHighPg)
200060d3:	159047        	bne	a0, a4, 200060ec <HAL_ConfigScramble+0x1bc>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:249
    {
        DBG_Printf("Get upper page error!!!\n");
200060d6:	ea3c21        	l32r	a2, 200009c8 <_stext+0x2c8>
200060d9:	04b885        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:250
        DBG_Getch();
200060dc:	e98f01        	l32r	a0, 20000718 <_stext+0x18>
200060df:	0000c0        	callx0	a0
200060e2:	042122        	l32i	a2, a1, 16
200060e5:	2108      	l32i.n	a0, a1, 8
200060e7:	000046        	j	200060ec <HAL_ConfigScramble+0x1bc>

200060ea <HAL_ConfigScramble+0x1ba>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:228
{
    U16 usHighPg = INVALID_4F;
    
    if(usExtraPg == 112)
    {
        usHighPg = 49;
200060ea:	103c      	movi.n	a0, 49
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1586
                pNFCQEntry->bsScrSeed1Msb = (((U8)HAL_GetHighPageIndexfromExtra(usPage)) & 0xFE) >> 1;     //bit7-1
200060ec:	6c68      	l32i.n	a6, a12, 24
200060ee:	217100        	srai	a7, a0, 1
200060f1:	f39764        	insbits	a6, a7, 25, 31
200060f4:	6c69      	s32i.n	a6, a12, 24
200060f6:	ff9d86        	j	20005f70 <HAL_ConfigScramble+0x40>

200060f9 <HAL_ConfigScramble+0x1c9>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:234
    }
    else if (((usExtraPg - 112) / 3) < 32)
    {
        usHighPg = 49 + (((usExtraPg - 112) / 3) * 2);
    }
    else if((((usExtraPg - 112) / 3) >= 32) && (usExtraPg < 1456))
200060f9:	2b3a37        	bltu	a10, a3, 20006128 <HAL_ConfigScramble+0x1f8>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:236
    {
        usHighPg = 49 + (31 * 2) + ((((usExtraPg - 112) / 3) - 31) * 3);
200060fc:	370c      	movi.n	a7, 3
200060fe:	90c302        	addi	a0, a3, -112
20006101:	d20070        	quos	a0, a0, a7
20006104:	900000        	addx2	a0, a0, a0
20006107:	12c002        	addi	a0, a0, 18
2000610a:	f40000        	extui	a0, a0, 0, 16
2000610d:	ffda46        	j	2000607a <HAL_ConfigScramble+0x14a>

20006110 <HAL_ConfigScramble+0x1e0>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:234
    }
    else if (((usExtraPg - 112) / 3) < 32)
    {
        usHighPg = 49 + (((usExtraPg - 112) / 3) * 2);
    }
    else if((((usExtraPg - 112) / 3) >= 32) && (usExtraPg < 1456))
20006110:	203a37        	bltu	a10, a3, 20006134 <HAL_ConfigScramble+0x204>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:236
    {
        usHighPg = 49 + (31 * 2) + ((((usExtraPg - 112) / 3) - 31) * 3);
20006113:	350c      	movi.n	a5, 3
20006115:	90c302        	addi	a0, a3, -112
20006118:	d20050        	quos	a0, a0, a5
2000611b:	900000        	addx2	a0, a0, a0
2000611e:	12c002        	addi	a0, a0, 18
20006121:	f40000        	extui	a0, a0, 0, 16
20006124:	ffe946        	j	200060cd <HAL_ConfigScramble+0x19d>

20006127 <HAL_ConfigScramble+0x1f7>:
	...

20006128 <HAL_ConfigScramble+0x1f8>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:238
    }
    else if((usExtraPg >= 1456) && (usExtraPg <= 1504))
20006128:	143637        	bltu	a6, a3, 20006140 <HAL_ConfigScramble+0x210>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:240
    {
        usHighPg = 1362 + (usExtraPg - 1456);
2000612b:	a2c302        	addi	a0, a3, -94
2000612e:	f40000        	extui	a0, a0, 0, 16
20006131:	ffd146        	j	2000607a <HAL_ConfigScramble+0x14a>

20006134 <HAL_ConfigScramble+0x204>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:238
    }
    else if((((usExtraPg - 112) / 3) >= 32) && (usExtraPg < 1456))
    {
        usHighPg = 49 + (31 * 2) + ((((usExtraPg - 112) / 3) - 31) * 3);
    }
    else if((usExtraPg >= 1456) && (usExtraPg <= 1504))
20006134:	213637        	bltu	a6, a3, 20006159 <HAL_ConfigScramble+0x229>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:240
    {
        usHighPg = 1362 + (usExtraPg - 1456);
20006137:	a2c302        	addi	a0, a3, -94
2000613a:	f40000        	extui	a0, a0, 0, 16
2000613d:	ffe306        	j	200060cd <HAL_ConfigScramble+0x19d>

20006140 <HAL_ConfigScramble+0x210>:
20006140:	73ba      	add.n	a7, a3, a11
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:244
    }
    else if(usExtraPg > 1504)
    {
        usHighPg = (((usExtraPg - 1504) / 2) * 3) + 1410;
20006142:	071b      	addi.n	a0, a7, 1
20006144:	b30770        	movgez	a0, a7, a7
20006147:	210100        	srai	a0, a0, 1
2000614a:	900000        	addx2	a0, a0, a0
2000614d:	06d002        	addmi	a0, a0, 0x600
20006150:	82c002        	addi	a0, a0, -126
20006153:	f40000        	extui	a0, a0, 0, 16
20006156:	ffc806        	j	2000607a <HAL_ConfigScramble+0x14a>

20006159 <HAL_ConfigScramble+0x229>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:240
    {
        usHighPg = 49 + (31 * 2) + ((((usExtraPg - 112) / 3) - 31) * 3);
    }
    else if((usExtraPg >= 1456) && (usExtraPg <= 1504))
    {
        usHighPg = 1362 + (usExtraPg - 1456);
20006159:	53ba      	add.n	a5, a3, a11
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:244
    }
    else if(usExtraPg > 1504)
    {
        usHighPg = (((usExtraPg - 1504) / 2) * 3) + 1410;
2000615b:	051b      	addi.n	a0, a5, 1
2000615d:	b30550        	movgez	a0, a5, a5
20006160:	210100        	srai	a0, a0, 1
20006163:	900000        	addx2	a0, a0, a0
20006166:	06d002        	addmi	a0, a0, 0x600
20006169:	82c002        	addi	a0, a0, -126
2000616c:	f40000        	extui	a0, a0, 0, 16
2000616f:	ffd686        	j	200060cd <HAL_ConfigScramble+0x19d>

20006172 <HAL_ConfigScramble+0x242>:
	...

20006174 <HAL_NfcGetRedRelativeAddr>:
HAL_NfcGetRedRelativeAddr():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1080
    ulAbsoulteAddr = HAL_NfcGetRedAbsoulteAddr(ucPU, ucLun, ucWp, ucPln, bIsOntf);

    /* 8Byte Align    */
    ulRelativeAddr = (ulAbsoulteAddr - ulStartAddr) >> 3;

    return ulRelativeAddr;
20006174:	170c      	movi.n	a7, 1
20006176:	20a230        	or	a10, a2, a3
20006179:	090c      	movi.n	a9, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1068
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
    20141030    Jason   modiy interface and implement.
    20151105    abby    modify to meet VT3533, dynamic update to OTFB or DRAM
------------------------------------------------------------------------------*/
U32 HAL_NfcGetRedRelativeAddr(U8 ucPU, U8 ucLun, U8 ucWp, U8 ucPln, BOOL bIsOntf)
{
2000617b:	e96821        	l32r	a2, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1080
    ulAbsoulteAddr = HAL_NfcGetRedAbsoulteAddr(ucPU, ucLun, ucWp, ucPln, bIsOntf);

    /* 8Byte Align    */
    ulRelativeAddr = (ulAbsoulteAddr - ulStartAddr) >> 3;

    return ulRelativeAddr;
2000617e:	11aae0        	slli	a10, a10, 2
20006181:	839760        	moveqz	a9, a7, a6
20006184:	20a4a0        	or	a10, a4, a10
20006187:	ea1171        	l32r	a7, 200009cc <_stext+0x2cc>
2000618a:	3b2282        	l32i	a8, a2, 236
2000618d:	11aad0        	slli	a10, a10, 3
20006190:	3c2222        	l32i	a2, a2, 240
20006193:	20a5a0        	or	a10, a5, a10
20006196:	11aaa0        	slli	a10, a10, 6
20006199:	937890        	movnez	a7, a8, a9
2000619c:	932890        	movnez	a2, a8, a9
2000619f:	22aa      	add.n	a2, a2, a10
200061a1:	c02270        	sub	a2, a2, a7
200061a4:	412320        	srli	a2, a2, 3
200061a7:	f00d      	ret.n

200061a9 <HAL_NfcGetRedRelativeAddr+0x35>:
200061a9:	000000                                        ...

200061ac <COM_MemCpy>:
COM_MemCpy():
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:80
Description :
Others      :
Modify      :
****************************************************************************/
void COM_MemCpy(U32* TargetAddr,U32* SrcAddr,U32 LengthDW)
{
200061ac:	026d      	mov.n	a6, a2
200061ae:	f0c112        	addi	a1, a1, -16
200061b1:	006102        	s32i	a0, a1, 0
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:83
    U32 i;

    for (i = 0 ; i < LengthDW; i++)
200061b4:	a4bc      	beqz.n	a4, 200061f2 <COM_MemCpy+0x46>
200061b6:	240040        	extui	a0, a4, 0, 3
200061b9:	079076        	loopnez	a0, 200061c4 <COM_MemCpy+0x18>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:85
    {
        *TargetAddr++ = *SrcAddr++;
200061bc:	0328      	l32i.n	a2, a3, 0
200061be:	0629      	s32i.n	a2, a6, 0
200061c0:	334b      	addi.n	a3, a3, 4
200061c2:	664b      	addi.n	a6, a6, 4

200061c4 <COM_MemCpy+0x18>:
200061c4:	030d      	mov.n	a0, a3
200061c6:	412340        	srli	a2, a4, 3
200061c9:	259276        	loopnez	a2, 200061f2 <COM_MemCpy+0x46>
200061cc:	0028      	l32i.n	a2, a0, 0
200061ce:	0629      	s32i.n	a2, a6, 0
200061d0:	1028      	l32i.n	a2, a0, 4
200061d2:	1629      	s32i.n	a2, a6, 4
200061d4:	2028      	l32i.n	a2, a0, 8
200061d6:	2629      	s32i.n	a2, a6, 8
200061d8:	3028      	l32i.n	a2, a0, 12
200061da:	3629      	s32i.n	a2, a6, 12
200061dc:	4028      	l32i.n	a2, a0, 16
200061de:	4629      	s32i.n	a2, a6, 16
200061e0:	5028      	l32i.n	a2, a0, 20
200061e2:	5629      	s32i.n	a2, a6, 20
200061e4:	6028      	l32i.n	a2, a0, 24
200061e6:	6629      	s32i.n	a2, a6, 24
200061e8:	7028      	l32i.n	a2, a0, 28
200061ea:	7629      	s32i.n	a2, a6, 28
200061ec:	20c002        	addi	a0, a0, 32
200061ef:	20c662        	addi	a6, a6, 32

200061f2 <COM_MemCpy+0x46>:
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:87
    }
}
200061f2:	0108      	l32i.n	a0, a1, 0
200061f4:	10c112        	addi	a1, a1, 16
200061f7:	f00d      	ret.n

200061f9 <COM_MemCpy+0x4d>:
200061f9:	000000                                        ...

200061fc <HAL_NfcGetRedAbsoulteAddr>:
HAL_NfcGetRedAbsoulteAddr():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1032
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
    20141030    Jason   modiy interface and implement.
    20151105    abby    modify to meet VT3533,dynamic update to OTFB or DRAM, and support multi-lun
------------------------------------------------------------------------------*/
U32 HAL_NfcGetRedAbsoulteAddr(U8 ucPU, U8 ucLun, U8 ucWp, U8 ucPln, BOOL bIsOntf)
{
200061fc:	e94871        	l32r	a7, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1043

    ulRedOffset = HAL_GET_SW_RED_ID(ucPU, ucLun, ucPln, ucWp);

    ulAbsoulteAddr = ulRedOffset * RED_SZ + ulRedBaseAddr;

    return ulAbsoulteAddr;
200061ff:	202230        	or	a2, a2, a3
20006202:	1122e0        	slli	a2, a2, 2
20006205:	3b2782        	l32i	a8, a7, 236
20006208:	202420        	or	a2, a4, a2
2000620b:	3c2772        	l32i	a7, a7, 240
2000620e:	1122d0        	slli	a2, a2, 3
20006211:	202520        	or	a2, a5, a2
20006214:	1122a0        	slli	a2, a2, 6
20006217:	837860        	moveqz	a7, a8, a6
2000621a:	272a      	add.n	a2, a7, a2
2000621c:	f00d      	ret.n

2000621e <HAL_NfcGetRedAbsoulteAddr+0x22>:
	...

20006220 <HAL_NfcGetWP>:
HAL_NfcGetWP():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:513
------------------------------------------------------------------------------*/
U8 HAL_NfcGetWP(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
    return (U8)g_pNfcCmdSts->aNfcqCmdStsReg[ucPhyPU][ucLun].bsWrPtr;
20006220:	e94141        	l32r	a4, 20000724 <_stext+0x24>
20006223:	224a      	add.n	a2, a2, a4
20006225:	e93d41        	l32r	a4, 2000071c <_stext+0x1c>
20006228:	800222        	l8ui	a2, a2, 128
2000622b:	3e2442        	l32i	a4, a4, 248
2000622e:	a02230        	addx4	a2, a2, a3
20006231:	a02240        	addx4	a2, a2, a4
20006234:	0020c0        	memw
20006237:	000222        	l8ui	a2, a2, 0
2000623a:	412620        	srli	a2, a2, 6
2000623d:	f00d      	ret.n

2000623f <HAL_NfcGetWP+0x1f>:
	...

20006240 <HAL_NfcSetErrInj>:
HAL_NfcSetErrInj():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1626
History:
    20160317   abby    create
------------------------------------------------------------------------------*/
void HAL_NfcSetErrInj(NFCQ_ENTRY *pNFCQEntry, NFC_ERR_INJ *pErrInj)
{
    pNFCQEntry->bsInjEn = TRUE;
20006240:	e94f51        	l32r	a5, 2000077c <_stext+0x7c>
20006243:	3248      	l32i.n	a4, a2, 12
20006245:	204450        	or	a4, a4, a5
20006248:	3249      	s32i.n	a4, a2, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1629

    /* For erase or write: use ucErrSts to replace the last read sts value */
    pNFCQEntry->bsInjStsVal  = pErrInj->bsInjErrSts;
2000624a:	030392        	l8ui	a9, a3, 3
2000624d:	0b4292        	s8i	a9, a2, 11
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1632
    
    /* For read: inject error bit */
    pNFCQEntry->bsInjCwStart = pErrInj->bsInjCwStart;
20006250:	000382        	l8ui	a8, a3, 0
20006253:	094282        	s8i	a8, a2, 9
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1633
    pNFCQEntry->bsInjCwCnt   = pErrInj->bsInjCwLen;
20006256:	010372        	l8ui	a7, a3, 1
20006259:	084272        	s8i	a7, a2, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1634
    pNFCQEntry->bsInjErrCnt  = pErrInj->bsInjErrBitPerCw;
2000625c:	020362        	l8ui	a6, a3, 2
2000625f:	0a4262        	s8i	a6, a2, 10
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1637

    /* For all types of flash operation */
    pNFCQEntry->bsErrTypeS   = pErrInj->bsInjErrType;
20006262:	1358      	l32i.n	a5, a3, 4
20006264:	b12544        	insbits	a4, a5, 18, 21
20006267:	3249      	s32i.n	a4, a2, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1639

    return;
20006269:	f00d      	ret.n

2000626b <HAL_NfcSetErrInj+0x2b>:
	...

2000626c <HAL_GetNormalDsg>:
HAL_GetNormalDsg():
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:160
History:
    20140911    Tobey    uniform coding style
    20161129    JasonGuo dsg_pool + spin_lock -> fixed hw bug in flash not idle.
------------------------------------------------------------------------------*/
BOOL HAL_GetNormalDsg(U16 *pDsgId)
{
2000626c:	e0c112        	addi	a1, a1, -32
2000626f:	31d9      	s32i.n	a13, a1, 12
20006271:	41e9      	s32i.n	a14, a1, 16
20006273:	21c9      	s32i.n	a12, a1, 8
20006275:	e929e1        	l32r	a14, 2000071c <_stext+0x1c>
20006278:	1109      	s32i.n	a0, a1, 4
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:166
    BOOL bStsFlag;

#ifdef PATCH_HW_NORMAL_DSG_POOL
    U16 usDsgID;

    if (TRUE == HAL_NormalDsgFifoIsEmpty())
2000627a:	6b1e52        	l16ui	a5, a14, 214
2000627d:	6c1e32        	l16ui	a3, a14, 216
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:160
History:
    20140911    Tobey    uniform coding style
    20161129    JasonGuo dsg_pool + spin_lock -> fixed hw bug in flash not idle.
------------------------------------------------------------------------------*/
BOOL HAL_GetNormalDsg(U16 *pDsgId)
{
20006280:	e96001        	l32r	a0, 20000800 <_stext+0x100>
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:166
    BOOL bStsFlag;

#ifdef PATCH_HW_NORMAL_DSG_POOL
    U16 usDsgID;

    if (TRUE == HAL_NormalDsgFifoIsEmpty())
20006283:	1b1357        	beq	a3, a5, 200062a2 <HAL_GetNormalDsg+0x36>
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:94
{
    U16 usDsgID;

    usDsgID = g_aNormalDsgFifo[g_NormalDsgFifoHead];

    g_NormalDsgFifoHead = (g_NormalDsgFifoHead + 1) % NORMAL_DSG_FIFO_DEPTH;
20006286:	072c      	movi.n	a7, 32
20006288:	651b      	addi.n	a6, a5, 1
2000628a:	008d      	mov.n	a8, a0
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:173
        bStsFlag = FALSE;
    }
    else
    {
        *pDsgId = HAL_NormalDsgFifoPop();
        bStsFlag = TRUE;
2000628c:	140c      	movi.n	a4, 1
2000628e:	0149      	s32i.n	a4, a1, 0
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:92

LOCAL U16 HAL_NormalDsgFifoPop(void)
{
    U16 usDsgID;

    usDsgID = g_aNormalDsgFifo[g_NormalDsgFifoHead];
20006290:	908580        	addx2	a8, a5, a8
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:94

    g_NormalDsgFifoHead = (g_NormalDsgFifoHead + 1) % NORMAL_DSG_FIFO_DEPTH;
20006293:	f26670        	rems	a6, a6, a7
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:92

LOCAL U16 HAL_NormalDsgFifoPop(void)
{
    U16 usDsgID;

    usDsgID = g_aNormalDsgFifo[g_NormalDsgFifoHead];
20006296:	7e1882        	l16ui	a8, a8, 252
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:172
    {
        bStsFlag = FALSE;
    }
    else
    {
        *pDsgId = HAL_NormalDsgFifoPop();
20006299:	005282        	s16i	a8, a2, 0
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:94
{
    U16 usDsgID;

    usDsgID = g_aNormalDsgFifo[g_NormalDsgFifoHead];

    g_NormalDsgFifoHead = (g_NormalDsgFifoHead + 1) % NORMAL_DSG_FIFO_DEPTH;
2000629c:	6b5e62        	s16i	a6, a14, 214
2000629f:	0000c6        	j	200062a6 <HAL_GetNormalDsg+0x3a>

200062a2 <HAL_GetNormalDsg+0x36>:
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:166
    BOOL bStsFlag;

#ifdef PATCH_HW_NORMAL_DSG_POOL
    U16 usDsgID;

    if (TRUE == HAL_NormalDsgFifoIsEmpty())
200062a2:	090c      	movi.n	a9, 0
200062a4:	0199      	s32i.n	a9, a1, 0
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:177
        *pDsgId = HAL_NormalDsgFifoPop();
        bStsFlag = TRUE;
    }   
    
    #ifdef PATCH_HW_BUG_IN_ALLC_DSG_OR_HSG
    HAL_MultiCoreGetSpinLockWait(SPINLOCKID_ALLC_DSG_OR_HSG);
200062a6:	e934c1        	l32r	a12, 20000778 <_stext+0x78>
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
200062a9:	03ebd0        	rsr.prid	a13
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:149
#ifndef SIM
    U32 ulMcuID;
    U32 ulLockValue;
        
    ulMcuID = HAL_GetMcuId();
    if ((MCU0_ID == ulMcuID) || (MCU1_ID == ulMcuID) || (MCU2_ID == ulMcuID))
200062ac:	051d26        	beqi	a13, 1, 200062b5 <HAL_GetNormalDsg+0x49>
200062af:	022d26        	beqi	a13, 2, 200062b5 <HAL_GetNormalDsg+0x49>
200062b2:	0a3d66        	bnei	a13, 3, 200062c0 <HAL_GetNormalDsg+0x54>
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:151
    {
        *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4) = ulMcuID;
200062b5:	0020c0        	memw
200062b8:	ce6cd2        	s32i	a13, a12, 0x338
200062bb:	0001c6        	j	200062c6 <HAL_GetNormalDsg+0x5a>

200062be <HAL_GetNormalDsg+0x52>:
	...

200062c0 <HAL_GetNormalDsg+0x54>:
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:155
    }
    else
    {
        DBG_Getch();
200062c0:	e91601        	l32r	a0, 20000718 <_stext+0x18>
200062c3:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:158
    }

    ulLockValue = *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4);
200062c6:	0020c0        	memw
200062c9:	ce2ca2        	l32i	a10, a12, 0x338
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:187
{
    BOOL bSts = FALSE;
    do
    {
        bSts = HAL_MultiCoreGetSpinLock(ucLockId);
    }while (FALSE == bSts);
200062cc:	d99da7        	bne	a13, a10, 200062a9 <HAL_GetNormalDsg+0x3d>
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:241
    201409011    Tobey   uniform coding style
------------------------------------------------------------------------------*/
BOOL HAL_GetCurNormalDsg(U16 *pDsgId)
{
    BOOL bStsFlag;
    if (TRUE == l_pDsgReport->bsDsgValidEn)
200062cf:	382e02        	l32i	a0, a14, 224
200062d2:	0020c0        	memw
200062d5:	00b8      	l32i.n	a11, a0, 0
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:243
    {
        *pDsgId = l_pDsgReport->bsDsgId;
200062d7:	e94851        	l32r	a5, 200007f8 <_stext+0xf8>
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:241
    201409011    Tobey   uniform coding style
------------------------------------------------------------------------------*/
BOOL HAL_GetCurNormalDsg(U16 *pDsgId)
{
    BOOL bStsFlag;
    if (TRUE == l_pDsgReport->bsDsgValidEn)
200062da:	227bf7        	bbci	a11, 31, 20006300 <HAL_GetNormalDsg+0x94>
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:243
    {
        *pDsgId = l_pDsgReport->bsDsgId;
200062dd:	0020c0        	memw
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:83

LOCAL void HAL_NormalDsgFifoPush(U16 usDsgID)
{
    g_aNormalDsgFifo[g_NormalDsgFifoTail] = usDsgID;

    g_NormalDsgFifoTail = (g_NormalDsgFifoTail + 1) % NORMAL_DSG_FIFO_DEPTH;
200062e0:	042c      	movi.n	a4, 32
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:81
    return (g_NormalDsgFifoHead == (g_NormalDsgFifoTail + 1) % NORMAL_DSG_FIFO_DEPTH) ? TRUE : FALSE;
}

LOCAL void HAL_NormalDsgFifoPush(U16 usDsgID)
{
    g_aNormalDsgFifo[g_NormalDsgFifoTail] = usDsgID;
200062e2:	e94731        	l32r	a3, 20000800 <_stext+0x100>
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:243
BOOL HAL_GetCurNormalDsg(U16 *pDsgId)
{
    BOOL bStsFlag;
    if (TRUE == l_pDsgReport->bsDsgValidEn)
    {
        *pDsgId = l_pDsgReport->bsDsgId;
200062e5:	002022        	l32i	a2, a0, 0
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:81
    return (g_NormalDsgFifoHead == (g_NormalDsgFifoTail + 1) % NORMAL_DSG_FIFO_DEPTH) ? TRUE : FALSE;
}

LOCAL void HAL_NormalDsgFifoPush(U16 usDsgID)
{
    g_aNormalDsgFifo[g_NormalDsgFifoTail] = usDsgID;
200062e8:	6c1ed2        	l16ui	a13, a14, 216
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:243
BOOL HAL_GetCurNormalDsg(U16 *pDsgId)
{
    BOOL bStsFlag;
    if (TRUE == l_pDsgReport->bsDsgValidEn)
    {
        *pDsgId = l_pDsgReport->bsDsgId;
200062eb:	102250        	and	a2, a2, a5
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:81
    return (g_NormalDsgFifoHead == (g_NormalDsgFifoTail + 1) % NORMAL_DSG_FIFO_DEPTH) ? TRUE : FALSE;
}

LOCAL void HAL_NormalDsgFifoPush(U16 usDsgID)
{
    g_aNormalDsgFifo[g_NormalDsgFifoTail] = usDsgID;
200062ee:	903d30        	addx2	a3, a13, a3
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:243
BOOL HAL_GetCurNormalDsg(U16 *pDsgId)
{
    BOOL bStsFlag;
    if (TRUE == l_pDsgReport->bsDsgValidEn)
    {
        *pDsgId = l_pDsgReport->bsDsgId;
200062f1:	a52520        	extui	a2, a2, 21, 11
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:83

LOCAL void HAL_NormalDsgFifoPush(U16 usDsgID)
{
    g_aNormalDsgFifo[g_NormalDsgFifoTail] = usDsgID;

    g_NormalDsgFifoTail = (g_NormalDsgFifoTail + 1) % NORMAL_DSG_FIFO_DEPTH;
200062f4:	01cdd2        	addi	a13, a13, 1
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:81
    return (g_NormalDsgFifoHead == (g_NormalDsgFifoTail + 1) % NORMAL_DSG_FIFO_DEPTH) ? TRUE : FALSE;
}

LOCAL void HAL_NormalDsgFifoPush(U16 usDsgID)
{
    g_aNormalDsgFifo[g_NormalDsgFifoTail] = usDsgID;
200062f7:	7e5322        	s16i	a2, a3, 252
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:83

    g_NormalDsgFifoTail = (g_NormalDsgFifoTail + 1) % NORMAL_DSG_FIFO_DEPTH;
200062fa:	f2dd40        	rems	a13, a13, a4
200062fd:	6c5ed2        	s16i	a13, a14, 216
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
20006300:	03ebd0        	rsr.prid	a13
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:149
#ifndef SIM
    U32 ulMcuID;
    U32 ulLockValue;
        
    ulMcuID = HAL_GetMcuId();
    if ((MCU0_ID == ulMcuID) || (MCU1_ID == ulMcuID) || (MCU2_ID == ulMcuID))
20006303:	051d26        	beqi	a13, 1, 2000630c <HAL_GetNormalDsg+0xa0>
20006306:	022d26        	beqi	a13, 2, 2000630c <HAL_GetNormalDsg+0xa0>
20006309:	083d66        	bnei	a13, 3, 20006315 <HAL_GetNormalDsg+0xa9>
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:151
    {
        *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4) = ulMcuID;
2000630c:	0020c0        	memw
2000630f:	ce6cd2        	s32i	a13, a12, 0x338
20006312:	000146        	j	2000631b <HAL_GetNormalDsg+0xaf>

20006315 <HAL_GetNormalDsg+0xa9>:
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:155
    }
    else
    {
        DBG_Getch();
20006315:	e90001        	l32r	a0, 20000718 <_stext+0x18>
20006318:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:158
    }

    ulLockValue = *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4);
2000631b:	0020c0        	memw
2000631e:	ce2c42        	l32i	a4, a12, 0x338
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:187
{
    BOOL bSts = FALSE;
    do
    {
        bSts = HAL_MultiCoreGetSpinLock(ucLockId);
    }while (FALSE == bSts);
20006321:	db9d47        	bne	a13, a4, 20006300 <HAL_GetNormalDsg+0x94>
20006324:	0128      	l32i.n	a2, a1, 0
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:278

#ifdef PATCH_HW_BUG_IN_ALLC_DSG_OR_HSG
    HAL_MultiCoreGetSpinLockWait(SPINLOCKID_ALLC_DSG_OR_HSG);
#endif

    l_pDsgReport->bsDsgTrigger = TRUE;
20006326:	e907a1        	l32r	a10, 20000744 <_stext+0x44>
20006329:	e91e91        	l32r	a9, 200007a4 <_stext+0xa4>
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:275
#ifdef SIM
    DSG_AllocateNormalDsg(l_ulMcuID);
#else

#ifdef PATCH_HW_BUG_IN_ALLC_DSG_OR_HSG
    HAL_MultiCoreGetSpinLockWait(SPINLOCKID_ALLC_DSG_OR_HSG);
2000632c:	060c      	movi.n	a6, 0
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:278
#endif

    l_pDsgReport->bsDsgTrigger = TRUE;
2000632e:	382e82        	l32i	a8, a14, 224
20006331:	0020c0        	memw
20006334:	0878      	l32i.n	a7, a8, 0
20006336:	1077a0        	and	a7, a7, a10
20006339:	207790        	or	a7, a7, a9
2000633c:	0020c0        	memw
2000633f:	0879      	s32i.n	a7, a8, 0
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
History:
    20140917    Tobey  uniform coding style
------------------------------------------------------------------------------*/
void MULTI_CORE_TEXT_ATTR HAL_MultiCoreReleaseSpinLock(U8 ucLockId)
{
    *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4) = 0;
20006341:	0020c0        	memw
20006344:	ce6c62        	s32i	a6, a12, 0x338
20006347:	0020c0        	memw
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:198

    #ifdef PATCH_HW_BUG_IN_ALLC_DSG_OR_HSG
    HAL_MultiCoreReleaseSpinLock(SPINLOCKID_ALLC_DSG_OR_HSG);
    #endif
  
    return bStsFlag;
2000634a:	31d8      	l32i.n	a13, a1, 12
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
2000634c:	ce6c62        	s32i	a6, a12, 0x338
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:198
2000634f:	41e8      	l32i.n	a14, a1, 16
20006351:	21c8      	l32i.n	a12, a1, 8
20006353:	1108      	l32i.n	a0, a1, 4
20006355:	20c112        	addi	a1, a1, 32
20006358:	f00d      	ret.n

2000635a <HAL_GetNormalDsg+0xee>:
	...

2000635c <HAL_GetHighPageIndexfromExtra>:
HAL_GetHighPageIndexfromExtra():
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:223
    
    return ePairPageType;
}

U16 HAL_GetHighPageIndexfromExtra(U16 usExtraPg)
{
2000635c:	f0c112        	addi	a1, a1, -16
2000635f:	0109      	s32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:226
    U16 usHighPg = INVALID_4F;
    
    if(usExtraPg == 112)
20006361:	70a002        	movi	a0, 112
20006364:	701207        	beq	a2, a0, 200063d8 <HAL_GetHighPageIndexfromExtra+0x7c>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:230
    {
        usHighPg = 49;
    }
    else if (((usExtraPg - 112) / 3) < 32)
20006367:	cfa032        	movi	a3, 207
2000636a:	222327        	blt	a3, a2, 20006390 <HAL_GetHighPageIndexfromExtra+0x34>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:232
    {
        usHighPg = 49 + (((usExtraPg - 112) / 3) * 2);
2000636d:	330c      	movi.n	a3, 3
2000636f:	90c202        	addi	a0, a2, -112
20006372:	d20030        	quos	a0, a0, a3
20006375:	133c      	movi.n	a3, 49
20006377:	900030        	addx2	a0, a0, a3
2000637a:	f40000        	extui	a0, a0, 0, 16

2000637d <HAL_GetHighPageIndexfromExtra+0x21>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:247
    else if(usExtraPg > 1504)
    {
        usHighPg = (((usExtraPg - 1504) / 2) * 3) + 1410;
    }

    if(INVALID_4F == usHighPg)
2000637d:	e8f541        	l32r	a4, 20000754 <_stext+0x54>
20006380:	1109      	s32i.n	a0, a1, 4
20006382:	5b1047        	beq	a0, a4, 200063e1 <HAL_GetHighPageIndexfromExtra+0x85>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:253
    {
        DBG_Printf("Get upper page error!!!\n");
        DBG_Getch();
    }

    return usHighPg;
20006385:	002d      	mov.n	a2, a0
20006387:	0108      	l32i.n	a0, a1, 0
20006389:	10c112        	addi	a1, a1, 16
2000638c:	f00d      	ret.n

2000638e <HAL_GetHighPageIndexfromExtra+0x32>:
	...

20006390 <HAL_GetHighPageIndexfromExtra+0x34>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:234
    }
    else if (((usExtraPg - 112) / 3) < 32)
    {
        usHighPg = 49 + (((usExtraPg - 112) / 3) * 2);
    }
    else if((((usExtraPg - 112) / 3) >= 32) && (usExtraPg < 1456))
20006390:	afa552        	movi	a5, 0x5af
20006393:	153527        	bltu	a5, a2, 200063ac <HAL_GetHighPageIndexfromExtra+0x50>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:236
    {
        usHighPg = 49 + (31 * 2) + ((((usExtraPg - 112) / 3) - 31) * 3);
20006396:	330c      	movi.n	a3, 3
20006398:	90c202        	addi	a0, a2, -112
2000639b:	d20030        	quos	a0, a0, a3
2000639e:	900000        	addx2	a0, a0, a0
200063a1:	12c002        	addi	a0, a0, 18
200063a4:	f40000        	extui	a0, a0, 0, 16
200063a7:	fff486        	j	2000637d <HAL_GetHighPageIndexfromExtra+0x21>

200063aa <HAL_GetHighPageIndexfromExtra+0x4e>:
	...

200063ac <HAL_GetHighPageIndexfromExtra+0x50>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:238
    }
    else if((usExtraPg >= 1456) && (usExtraPg <= 1504))
200063ac:	e0a542        	movi	a4, 0x5e0
200063af:	093427        	bltu	a4, a2, 200063bc <HAL_GetHighPageIndexfromExtra+0x60>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:240
    {
        usHighPg = 1362 + (usExtraPg - 1456);
200063b2:	a2c202        	addi	a0, a2, -94
200063b5:	f40000        	extui	a0, a0, 0, 16
200063b8:	fff046        	j	2000637d <HAL_GetHighPageIndexfromExtra+0x21>

200063bb <HAL_GetHighPageIndexfromExtra+0x5f>:
	...

200063bc <HAL_GetHighPageIndexfromExtra+0x60>:
200063bc:	20aa32        	movi	a3, 0xfffffa20
200063bf:	323a      	add.n	a3, a2, a3
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:244
    }
    else if(usExtraPg > 1504)
    {
        usHighPg = (((usExtraPg - 1504) / 2) * 3) + 1410;
200063c1:	031b      	addi.n	a0, a3, 1
200063c3:	b30330        	movgez	a0, a3, a3
200063c6:	210100        	srai	a0, a0, 1
200063c9:	900000        	addx2	a0, a0, a0
200063cc:	06d002        	addmi	a0, a0, 0x600
200063cf:	82c002        	addi	a0, a0, -126
200063d2:	f40000        	extui	a0, a0, 0, 16
200063d5:	ffe906        	j	2000637d <HAL_GetHighPageIndexfromExtra+0x21>

200063d8 <HAL_GetHighPageIndexfromExtra+0x7c>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:228
{
    U16 usHighPg = INVALID_4F;
    
    if(usExtraPg == 112)
    {
        usHighPg = 49;
200063d8:	123c      	movi.n	a2, 49
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:253
    {
        DBG_Printf("Get upper page error!!!\n");
        DBG_Getch();
    }

    return usHighPg;
200063da:	0108      	l32i.n	a0, a1, 0
200063dc:	10c112        	addi	a1, a1, 16
200063df:	f00d      	ret.n

200063e1 <HAL_GetHighPageIndexfromExtra+0x85>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:249
        usHighPg = (((usExtraPg - 1504) / 2) * 3) + 1410;
    }

    if(INVALID_4F == usHighPg)
    {
        DBG_Printf("Get upper page error!!!\n");
200063e1:	e97921        	l32r	a2, 200009c8 <_stext+0x2c8>
200063e4:	0487c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:250
        DBG_Getch();
200063e7:	e8cc01        	l32r	a0, 20000718 <_stext+0x18>
200063ea:	0000c0        	callx0	a0
200063ed:	012122        	l32i	a2, a1, 4
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:253
    }

    return usHighPg;
200063f0:	002102        	l32i	a0, a1, 0
200063f3:	10c112        	addi	a1, a1, 16
200063f6:	000080        	ret

200063f9 <HAL_GetHighPageIndexfromExtra+0x9d>:
200063f9:	000000                                        ...

200063fc <HAL_NfcIsPairPageAccessable>:
HAL_NfcIsPairPageAccessable():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1161
-----------------------------------------------------------------------------*/
BOOL HAL_NfcIsPairPageAccessable(U16 usPage)
{
    /* only FLASH_3D_MLC and FLASH_INTEL_3DTLC program need to check */
    #ifndef FLASH_3D_MLC
        return TRUE;
200063fc:	120c      	movi.n	a2, 1
200063fe:	f00d      	ret.n

20006400 <HAL_GetFlashPairPageType>:
HAL_GetFlashPairPageType():
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:172
History:
    20150121    abby    add header
    20160526    steven  Intel 3D TLC
------------------------------------------------------------------------------*/
PAIR_PAGE_TYPE HAL_GetFlashPairPageType(U16 usPage)
{
20006400:	270c      	movi.n	a7, 2
20006402:	1a0c      	movi.n	a10, 1
20006404:	e0a592        	movi	a9, 0x5e0
20006407:	6fa082        	movi	a8, 111
2000640a:	03a062        	movi	a6, 3
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:175
    PAIR_PAGE_TYPE ePairPageType;

    if(usPage < 16)
2000640d:	205660        	or	a5, a6, a6
20006410:	26b2b6        	bltui	a2, 16, 2000643a <HAL_GetFlashPairPageType+0x3a>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:180
    {
        ePairPageType = LOW_PAGE_WITHOUT_HIGH;
    }
    
    if((usPage >= 16) && (usPage < 112))
20006413:	23b2b6        	bltui	a2, 16, 2000643a <HAL_GetFlashPairPageType+0x3a>
20006416:	233827        	bltu	a8, a2, 2000643d <HAL_GetFlashPairPageType+0x3d>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:182
    {
        if (EVEN == usPage % 2)
20006419:	043020        	extui	a3, a2, 0, 1
2000641c:	205770        	or	a5, a7, a7
2000641f:	835a30        	moveqz	a5, a10, a3
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:192
        {
            ePairPageType = HIGH_PAGE;
        }
    }
    
    if((usPage >= 112) && (usPage < 1505))
20006422:	173827        	bltu	a8, a2, 2000643d <HAL_GetFlashPairPageType+0x3d>

20006425 <HAL_GetFlashPairPageType+0x25>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:207
        else
        {
            ePairPageType = HIGH_PAGE;
        }
    }
    if((usPage >= 1505) && (usPage < 1536))
20006425:	2bb927        	bgeu	a9, a2, 20006454 <HAL_GetFlashPairPageType+0x54>
20006428:	ffa542        	movi	a4, 0x5ff
2000642b:	253427        	bltu	a4, a2, 20006454 <HAL_GetFlashPairPageType+0x54>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:209
    {
        if (0 == usPage % 2)
2000642e:	047020        	extui	a7, a2, 0, 1
20006431:	450c      	movi.n	a5, 4
20006433:	836570        	moveqz	a6, a5, a7
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:219
        {
            ePairPageType = LOW_PAGE_WITHOUT_HIGH;
        }
    }
    
    return ePairPageType;
20006436:	062d      	mov.n	a2, a6
20006438:	f00d      	ret.n

2000643a <HAL_GetFlashPairPageType+0x3a>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:192
        {
            ePairPageType = HIGH_PAGE;
        }
    }
    
    if((usPage >= 112) && (usPage < 1505))
2000643a:	e7b827        	bgeu	a8, a2, 20006425 <HAL_GetFlashPairPageType+0x25>
2000643d:	e73927        	bltu	a9, a2, 20006428 <HAL_GetFlashPairPageType+0x28>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:194
    {
        if (0 == (usPage - 112) % 3)
20006440:	330c      	movi.n	a3, 3
20006442:	90c222        	addi	a2, a2, -112
20006445:	f22230        	rems	a2, a2, a3
20006448:	c28c      	beqz.n	a2, 20006458 <HAL_GetFlashPairPageType+0x58>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:198
        {
            ePairPageType = EXTRA_PAGE;
        }
        else if (1 == (usPage - 112) % 3)
2000644a:	420b      	addi.n	a4, a2, -1
2000644c:	837a40        	moveqz	a7, a10, a4
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:219
        {
            ePairPageType = LOW_PAGE_WITHOUT_HIGH;
        }
    }
    
    return ePairPageType;
2000644f:	072d      	mov.n	a2, a7
20006451:	f00d      	ret.n

20006453 <HAL_GetFlashPairPageType+0x53>:
	...

20006454 <HAL_GetFlashPairPageType+0x54>:
20006454:	052d      	mov.n	a2, a5
20006456:	f00d      	ret.n

20006458 <HAL_GetFlashPairPageType+0x58>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:196
    
    if((usPage >= 112) && (usPage < 1505))
    {
        if (0 == (usPage - 112) % 3)
        {
            ePairPageType = EXTRA_PAGE;
20006458:	420c      	movi.n	a2, 4
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:219
        {
            ePairPageType = LOW_PAGE_WITHOUT_HIGH;
        }
    }
    
    return ePairPageType;
2000645a:	f00d      	ret.n

2000645c <TEST_NfcWtStsChk..JBB_1482204275>:
TEST_NfcWtStsChk():
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1347
History       :
    20160808    abby    create
****************************************************************************/
LOCAL BOOL TEST_NfcWtStsChk(FLASH_ADDR *pFlashAddr, NFC_PRG_REQ_DES *pWrReq)
{
    FLASH_STATUS_ENTRY tFlashSts = {0};
2000645c:	041c      	movi.n	a4, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1346
Reference     :
History       :
    20160808    abby    create
****************************************************************************/
LOCAL BOOL TEST_NfcWtStsChk(FLASH_ADDR *pFlashAddr, NFC_PRG_REQ_DES *pWrReq)
{
2000645e:	e0c112        	addi	a1, a1, -32
20006461:	4109      	s32i.n	a0, a1, 16
20006463:	71e9      	s32i.n	a14, a1, 28
20006465:	61d9      	s32i.n	a13, a1, 24
20006467:	51c9      	s32i.n	a12, a1, 20
20006469:	e959d1        	l32r	a13, 200009d0 <_stext+0x2d0>
2000646c:	02cd      	mov.n	a12, a2
2000646e:	03ed      	mov.n	a14, a3
20006470:	202110        	or	a2, a1, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1347
    FLASH_STATUS_ENTRY tFlashSts = {0};
20006473:	e95831        	l32r	a3, 200009d4 <_stext+0x2d4>
20006476:	04db85        	call0	2000b230 <memcpy>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1350

    /*    check SSU and Cache Status update    */
    if(g_bSsuEn)
20006479:	472d02        	l32i	a0, a13, 0x11c
2000647c:	060016        	beqz	a0, 200064e0 <TEST_NfcWtStsChk..JBB_1482204275+0x84>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:582
    else
    {
        ulBaseAddr = g_ulSsuInOtfbBase;
    }

    ucValue = *((volatile U8 *)(ulBaseAddr + usSsuAddr));
2000647f:	482d52        	l32i	a5, a13, 0x120
20006482:	3e2d42        	l32i	a4, a13, 248
20006485:	3d2d22        	l32i	a2, a13, 244
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1352
    FLASH_STATUS_ENTRY tFlashSts = {0};

    /*    check SSU and Cache Status update    */
    if(g_bSsuEn)
    {
        TEST_WaitSSU(pFlashAddr, pWrReq->bsSsu0Addr);
20006488:	021e32        	l16ui	a3, a14, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:582
    else
    {
        ulBaseAddr = g_ulSsuInOtfbBase;
    }

    ucValue = *((volatile U8 *)(ulBaseAddr + usSsuAddr));
2000648b:	932450        	movnez	a2, a4, a5
2000648e:	802320        	add	a2, a3, a2
20006491:	0020c0        	memw
20006494:	000242        	l8ui	a4, a2, 0
20006497:	f48c      	beqz.n	a4, 200064aa <TEST_NfcWtStsChk..JBB_1482204275+0x4e>
20006499:	078076        	loop	a0, 200064a4 <TEST_NfcWtStsChk..JBB_1482204275+0x48>
2000649c:	0020c0        	memw
2000649f:	000262        	l8ui	a6, a2, 0
200064a2:	468c      	beqz.n	a6, 200064aa <TEST_NfcWtStsChk..JBB_1482204275+0x4e>

200064a4 <TEST_NfcWtStsChk..JBB_1482204275+0x48>:
200064a4:	fffc46        	j	20006499 <TEST_NfcWtStsChk..JBB_1482204275+0x3d>

200064a7 <TEST_NfcWtStsChk..JBB_1482204275+0x4b>:
200064a7:	000000                                        ...

200064aa <TEST_NfcWtStsChk..JBB_1482204275+0x4e>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:607
    else
    {
        ulBaseAddr = g_ulSsuInOtfbBase;
    }

    *((volatile U8 *)(ulBaseAddr + usSsuAddr)) = ucValue;
200064aa:	365c      	movi.n	a6, 83
200064ac:	0020c0        	memw
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:634
    else
    {
        ulBaseAddr = g_ulSsu1OtfbBase;
    }

    ucValue = *((volatile U8 *)(ulBaseAddr + usSsuAddr));
200064af:	492d52        	l32i	a5, a13, 0x124
200064b2:	402d42        	l32i	a4, a13, 0x100
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:607
    else
    {
        ulBaseAddr = g_ulSsuInOtfbBase;
    }

    *((volatile U8 *)(ulBaseAddr + usSsuAddr)) = ucValue;
200064b5:	004262        	s8i	a6, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:634
    else
    {
        ulBaseAddr = g_ulSsu1OtfbBase;
    }

    ucValue = *((volatile U8 *)(ulBaseAddr + usSsuAddr));
200064b8:	3f2d22        	l32i	a2, a13, 252
200064bb:	932450        	movnez	a2, a4, a5
200064be:	802320        	add	a2, a3, a2
200064c1:	0020c0        	memw
200064c4:	000272        	l8ui	a7, a2, 0
200064c7:	d78c      	beqz.n	a7, 200064d8 <TEST_NfcWtStsChk..JBB_1482204275+0x7c>
200064c9:	078076        	loop	a0, 200064d4 <TEST_NfcWtStsChk..JBB_1482204275+0x78>
200064cc:	0020c0        	memw
200064cf:	000272        	l8ui	a7, a2, 0
200064d2:	278c      	beqz.n	a7, 200064d8 <TEST_NfcWtStsChk..JBB_1482204275+0x7c>

200064d4 <TEST_NfcWtStsChk..JBB_1482204275+0x78>:
200064d4:	fffc46        	j	200064c9 <TEST_NfcWtStsChk..JBB_1482204275+0x6d>

200064d7 <TEST_NfcWtStsChk..JBB_1482204275+0x7b>:
	...

200064d8 <TEST_NfcWtStsChk..JBB_1482204275+0x7c>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:660
    else
    {
        ulBaseAddr = g_ulSsu1OtfbBase;
    }

    *((volatile U8 *)(ulBaseAddr + usSsuAddr)) = ucValue;
200064d8:	585c      	movi.n	a8, 85
200064da:	0020c0        	memw
200064dd:	004282        	s8i	a8, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1354
    /*    check SSU and Cache Status update    */
    if(g_bSsuEn)
    {
        TEST_WaitSSU(pFlashAddr, pWrReq->bsSsu0Addr);
    }
    if(g_bCacheStsEn)
200064e0:	4b2d92        	l32i	a9, a13, 0x12c
200064e3:	59ac      	beqz.n	a9, 2000650c <TEST_NfcWtStsChk..JBB_1482204275+0xb0>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:700
Purpose   : wait HW flip Cache Status and FW clear it after
Reference :
****************************************************************************/
LOCAL BOOL TEST_WaitCacheStatus(FLASH_ADDR *pFlashAddr, U16 usAddrOffset)
{
    while (0 != TEST_GetCacheStatus(usAddrOffset))
200064e5:	412d32        	l32i	a3, a13, 0x104
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1356
    {
        TEST_WaitSSU(pFlashAddr, pWrReq->bsSsu0Addr);
    }
    if(g_bCacheStsEn)
    {
        TEST_WaitCacheStatus(pFlashAddr, pWrReq->bsSsu0Addr);
200064e8:	021e22        	l16ui	a2, a14, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:700
Purpose   : wait HW flip Cache Status and FW clear it after
Reference :
****************************************************************************/
LOCAL BOOL TEST_WaitCacheStatus(FLASH_ADDR *pFlashAddr, U16 usAddrOffset)
{
    while (0 != TEST_GetCacheStatus(usAddrOffset))
200064eb:	223a      	add.n	a2, a2, a3
200064ed:	0020c0        	memw
200064f0:	0002a2        	l8ui	a10, a2, 0
200064f3:	da8c      	beqz.n	a10, 20006504 <TEST_NfcWtStsChk..JBB_1482204275+0xa8>
200064f5:	078076        	loop	a0, 20006500 <TEST_NfcWtStsChk..JBB_1482204275+0xa4>
200064f8:	0020c0        	memw
200064fb:	000242        	l8ui	a4, a2, 0
200064fe:	248c      	beqz.n	a4, 20006504 <TEST_NfcWtStsChk..JBB_1482204275+0xa8>

20006500 <TEST_NfcWtStsChk..JBB_1482204275+0xa4>:
20006500:	fffc46        	j	200064f5 <TEST_NfcWtStsChk..JBB_1482204275+0x99>

20006503 <TEST_NfcWtStsChk..JBB_1482204275+0xa7>:
	...

20006504 <TEST_NfcWtStsChk..JBB_1482204275+0xa8>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:555
Reference :
****************************************************************************/
LOCAL void TEST_SetCacheStatus(U32 ulCacheAddr, U8 ucValue)
{

   *((volatile U8*)(g_ulCacheStatusAddr + ulCacheAddr)) = ucValue;
20006504:	855c      	movi.n	a5, 88
20006506:	0020c0        	memw
20006509:	004252        	s8i	a5, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1359
    if(g_bCacheStsEn)
    {
        TEST_WaitCacheStatus(pFlashAddr, pWrReq->bsSsu0Addr);
    }

    if (g_ErrInjEn)
2000650c:	0020c0        	memw
2000650f:	222d62        	l32i	a6, a13, 136
20006512:	07f616        	beqz	a6, 20006595 <TEST_NfcWtStsChk..JBB_1482204275+0x139>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20006515:	e88321        	l32r	a2, 20000724 <_stext+0x24>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1361
    {
        HAL_NfcWaitStatus(pFlashAddr->ucPU, pFlashAddr->ucLun);
20006518:	000c32        	l8ui	a3, a12, 0
2000651b:	010c42        	l8ui	a4, a12, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
2000651e:	232a      	add.n	a2, a3, a2
20006520:	800222        	l8ui	a2, a2, 128
20006523:	1b2d52        	l32i	a5, a13, 108
20006526:	a02240        	addx4	a2, a2, a4
20006529:	a02250        	addx4	a2, a2, a5
2000652c:	0020c0        	memw
2000652f:	000272        	l8ui	a7, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
20006532:	0ee707        	bbsi	a7, 0, 20006544 <TEST_NfcWtStsChk..JBB_1482204275+0xe8>
20006535:	088076        	loop	a0, 20006541 <TEST_NfcWtStsChk..JBB_1482204275+0xe5>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20006538:	0020c0        	memw
2000653b:	000252        	l8ui	a5, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
2000653e:	02e507        	bbsi	a5, 0, 20006544 <TEST_NfcWtStsChk..JBB_1482204275+0xe8>

20006541 <TEST_NfcWtStsChk..JBB_1482204275+0xe5>:
20006541:	fffc06        	j	20006535 <TEST_NfcWtStsChk..JBB_1482204275+0xd9>

20006544 <TEST_NfcWtStsChk..JBB_1482204275+0xe8>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1106
    {
        ;
    }

    if (TRUE == HAL_NfcGetErrHold(ucPU, ucLun))
20006544:	202330        	or	a2, a3, a3
20006547:	203440        	or	a3, a4, a4
2000654a:	fe1a45        	call0	200046f0 <HAL_NfcGetErrHold>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1363

        HAL_DecSramGetFlashSts(pFlashAddr, (FLASH_STATUS_ENTRY*)&tFlashSts);
2000654d:	0c2d      	mov.n	a2, a12
2000654f:	203110        	or	a3, a1, a1
20006552:	e92301        	l32r	a0, 200009e0 <_stext+0x2e0>
20006555:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1364
        if (g_tErrInj.bsInjErrSts != tFlashSts.bsFlashStatus)
20006558:	000c32        	l8ui	a3, a12, 0
2000655b:	000172        	l8ui	a7, a1, 0
2000655e:	8f0d62        	l8ui	a6, a13, 143
20006561:	010c42        	l8ui	a4, a12, 1
20006564:	0d1677        	beq	a6, a7, 20006575 <TEST_NfcWtStsChk..JBB_1482204275+0x119>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1366
        {
            DBG_Printf("PU%d LUN%d Page%d Write Inject Error Flash Status:0x%x Actual Flash Status:0x%x\n"
20006567:	e91c21        	l32r	a2, 200009d8 <_stext+0x2d8>
2000656a:	031c52        	l16ui	a5, a12, 6
2000656d:	046f45        	call0	2000ac64 <dbg_printf>
20006570:	000246        	j	2000657d <TEST_NfcWtStsChk..JBB_1482204275+0x121>

20006573 <TEST_NfcWtStsChk..JBB_1482204275+0x117>:
	...

20006575 <TEST_NfcWtStsChk..JBB_1482204275+0x119>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1371
            ,pFlashAddr->ucPU,pFlashAddr->ucLun,pFlashAddr->usPage,g_tErrInj.bsInjErrSts, tFlashSts.bsFlashStatus);
        }
        else
        {
            DBG_Printf("PU%d LUN%d Inject Flash read status value OK: 0x%x\n", pFlashAddr->ucPU, pFlashAddr->ucLun, g_tErrInj.bsInjErrSts);
20006575:	065d      	mov.n	a5, a6
20006577:	e91921        	l32r	a2, 200009dc <_stext+0x2dc>
2000657a:	046e85        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1373
        }
        HAL_NfcResetCmdQue(pFlashAddr->ucPU, pFlashAddr->ucLun);
2000657d:	000c22        	l8ui	a2, a12, 0
20006580:	010c32        	l8ui	a3, a12, 1
20006583:	e90901        	l32r	a0, 200009a8 <_stext+0x2a8>
20006586:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1374
        HAL_NfcClearINTSts(pFlashAddr->ucPU, pFlashAddr->ucLun);
20006589:	000c22        	l8ui	a2, a12, 0
2000658c:	010c32        	l8ui	a3, a12, 1
2000658f:	e90701        	l32r	a0, 200009ac <_stext+0x2ac>
20006592:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1409
            //DBG_Printf("Pu %d Block %d Page %d Write OK!\n",pFlashAddr->ucPU,pFlashAddr->usBlock,pFlashAddr->usPage);
        }
    }
#endif

    return SUCCESS;
20006595:	120c      	movi.n	a2, 1
20006597:	51c8      	l32i.n	a12, a1, 20
20006599:	61d8      	l32i.n	a13, a1, 24
2000659b:	71e8      	l32i.n	a14, a1, 28
2000659d:	4108      	l32i.n	a0, a1, 16
2000659f:	20c112        	addi	a1, a1, 32
200065a2:	f00d      	ret.n

200065a4 <TEST_NfcWtGetPageAddr..GBB_1482204275>:
TEST_NfcWtGetPageAddr():
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1260
****************************************************************************/
LOCAL U16 TEST_NfcWtGetPageAddr(U16 *pPrgIndex)
{
    U16 usPage = *pPrgIndex;

    if (g_bTlcMode)
200065a4:	e85e31        	l32r	a3, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1258
History       :
    20160808    abby    create
****************************************************************************/
LOCAL U16 TEST_NfcWtGetPageAddr(U16 *pPrgIndex)
{
    U16 usPage = *pPrgIndex;
200065a7:	001252        	l16ui	a5, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1260

    if (g_bTlcMode)
200065aa:	572332        	l32i	a3, a3, 0x15c
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1276
            *pPrgIndex = usPage;
        }
    #endif

    #ifdef FLASH_INTEL_3DTLC
        if (HIGH_PAGE == HAL_GetFlashPairPageType(usPage))
200065ad:	270c      	movi.n	a7, 2
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1260
****************************************************************************/
LOCAL U16 TEST_NfcWtGetPageAddr(U16 *pPrgIndex)
{
    U16 usPage = *pPrgIndex;

    if (g_bTlcMode)
200065af:	051316        	beqz	a3, 20006604 <TEST_NfcWtGetPageAddr..GBB_1482204275+0x60>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1276
            *pPrgIndex = usPage;
        }
    #endif

    #ifdef FLASH_INTEL_3DTLC
        if (HIGH_PAGE == HAL_GetFlashPairPageType(usPage))
200065b2:	6fa0a2        	movi	a10, 111
200065b5:	e0a592        	movi	a9, 0x5e0
200065b8:	1b0c      	movi.n	a11, 1
200065ba:	380c      	movi.n	a8, 3
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:175
------------------------------------------------------------------------------*/
PAIR_PAGE_TYPE HAL_GetFlashPairPageType(U16 usPage)
{
    PAIR_PAGE_TYPE ePairPageType;

    if(usPage < 16)
200065bc:	086d      	mov.n	a6, a8
200065be:	ffb5b6        	bltui	a5, 16, 200065c1 <TEST_NfcWtGetPageAddr..GBB_1482204275+0x1d>

200065c1 <TEST_NfcWtGetPageAddr..GBB_1482204275+0x1d>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:180
    {
        ePairPageType = LOW_PAGE_WITHOUT_HIGH;
    }
    
    if((usPage >= 16) && (usPage < 112))
200065c1:	10b5b6        	bltui	a5, 16, 200065d5 <TEST_NfcWtGetPageAddr..GBB_1482204275+0x31>
200065c4:	103a57        	bltu	a10, a5, 200065d8 <TEST_NfcWtGetPageAddr..GBB_1482204275+0x34>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:182
    {
        if (EVEN == usPage % 2)
200065c7:	044050        	extui	a4, a5, 0, 1
200065ca:	076d      	mov.n	a6, a7
200065cc:	836b40        	moveqz	a6, a11, a4
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:192
        {
            ePairPageType = HIGH_PAGE;
        }
    }
    
    if((usPage >= 112) && (usPage < 1505))
200065cf:	1aba57        	bgeu	a10, a5, 200065ed <TEST_NfcWtGetPageAddr..GBB_1482204275+0x49>
200065d2:	000086        	j	200065d8 <TEST_NfcWtGetPageAddr..GBB_1482204275+0x34>

200065d5 <TEST_NfcWtGetPageAddr..GBB_1482204275+0x31>:
200065d5:	14ba57        	bgeu	a10, a5, 200065ed <TEST_NfcWtGetPageAddr..GBB_1482204275+0x49>
200065d8:	143957        	bltu	a9, a5, 200065f0 <TEST_NfcWtGetPageAddr..GBB_1482204275+0x4c>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:194
    {
        if (0 == (usPage - 112) % 3)
200065db:	360c      	movi.n	a6, 3
200065dd:	90c542        	addi	a4, a5, -112
200065e0:	f24460        	rems	a4, a4, a6
200065e3:	d49c      	beqz.n	a4, 20006604 <TEST_NfcWtGetPageAddr..GBB_1482204275+0x60>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:198
        {
            ePairPageType = EXTRA_PAGE;
        }
        else if (1 == (usPage - 112) % 3)
200065e5:	a40b      	addi.n	a10, a4, -1
200065e7:	837ba0        	moveqz	a7, a11, a10
200065ea:	206770        	or	a6, a7, a7
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:207
        else
        {
            ePairPageType = HIGH_PAGE;
        }
    }
    if((usPage >= 1505) && (usPage < 1536))
200065ed:	10b957        	bgeu	a9, a5, 20006601 <TEST_NfcWtGetPageAddr..GBB_1482204275+0x5d>
200065f0:	ffa5b2        	movi	a11, 0x5ff
200065f3:	0a3b57        	bltu	a11, a5, 20006601 <TEST_NfcWtGetPageAddr..GBB_1482204275+0x5d>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:209
    {
        if (0 == usPage % 2)
200065f6:	044050        	extui	a4, a5, 0, 1
200065f9:	430c      	movi.n	a3, 4
200065fb:	838340        	moveqz	a8, a3, a4
200065fe:	206880        	or	a6, a8, a8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1276
20006601:	032626        	beqi	a6, 2, 20006608 <TEST_NfcWtGetPageAddr..GBB_1482204275+0x64>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1285
            *pPrgIndex = usPage;
        }
    #endif
    }
    
    return usPage;
20006604:	052d      	mov.n	a2, a5
20006606:	f00d      	ret.n

20006608 <TEST_NfcWtGetPageAddr..GBB_1482204275+0x64>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1279

    #ifdef FLASH_INTEL_3DTLC
        if (HIGH_PAGE == HAL_GetFlashPairPageType(usPage))
        {
            //DBG_Printf("program can't from high page %d!\n",usPage);
            usPage++;
20006608:	451b      	addi.n	a4, a5, 1
2000660a:	f44040        	extui	a4, a4, 0, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1280
            *pPrgIndex = usPage;
2000660d:	005242        	s16i	a4, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1285
        }
    #endif
    }
    
    return usPage;
20006610:	042d      	mov.n	a2, a4
20006612:	f00d      	ret.n

20006614 <HAL_NfcSetFullPageRowAddr>:
HAL_NfcSetFullPageRowAddr():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1041
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
    20160416    abby    add 3D flash support
------------------------------------------------------------------------------*/
void HAL_NfcSetFullPageRowAddr(NFCQ_ENTRY* pNFCQEntry, FLASH_ADDR *pFlashAddr, BOOL bMultiPageMode)
{
20006614:	e0c112        	addi	a1, a1, -32
20006617:	049d      	mov.n	a9, a4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1046
    U8 ucPln;
    U8 ucRowAddr = 0;
    FLASH_ADDR tFlashAddr = { 0 };

    tFlashAddr = *pFlashAddr;
20006619:	1388      	l32i.n	a8, a3, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1041
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
    20160416    abby    add 3D flash support
------------------------------------------------------------------------------*/
void HAL_NfcSetFullPageRowAddr(NFCQ_ENTRY* pNFCQEntry, FLASH_ADDR *pFlashAddr, BOOL bMultiPageMode)
{
2000661b:	4109      	s32i.n	a0, a1, 16
2000661d:	5129      	s32i.n	a2, a1, 20
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1048
    U8 ucRowAddr = 0;
    FLASH_ADDR tFlashAddr = { 0 };

    tFlashAddr = *pFlashAddr;

    for (ucPln = 0; ucPln < PLN_PER_LUN; ucPln++)
2000661f:	000c      	movi.n	a0, 0
20006621:	5178      	l32i.n	a7, a1, 20
20006623:	f5a080        	extui	a10, a8, 16, 16
20006626:	02a022        	movi	a2, 2
20006629:	f48080        	extui	a8, a8, 0, 16
2000662c:	118830        	slli	a8, a8, 13
2000662f:	026182        	s32i	a8, a1, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1051
    {
        tFlashAddr.bsPln = ucPln;
        pNFCQEntry->atRowAddr[ucRowAddr].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);
20006632:	2088a0        	or	a8, a8, a10
20006635:	31a276        	loopgtz	a2, 2000666a <HAL_NfcSetFullPageRowAddr+0x56>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1050

    tFlashAddr = *pFlashAddr;

    for (ucPln = 0; ucPln < PLN_PER_LUN; ucPln++)
    {
        tFlashAddr.bsPln = ucPln;
20006638:	342000        	extui	a2, a0, 0, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1051
        pNFCQEntry->atRowAddr[ucRowAddr].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);
2000663b:	a03070        	addx4	a3, a0, a7
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1052
        ucRowAddr++;
2000663e:	401b      	addi.n	a4, a0, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1051
    tFlashAddr = *pFlashAddr;

    for (ucPln = 0; ucPln < PLN_PER_LUN; ucPln++)
    {
        tFlashAddr.bsPln = ucPln;
        pNFCQEntry->atRowAddr[ucRowAddr].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);
20006640:	112250        	slli	a2, a2, 11
20006643:	8308      	l32i.n	a0, a3, 32
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1052
        ucRowAddr++;
20006645:	745040        	extui	a5, a4, 0, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1050

    tFlashAddr = *pFlashAddr;

    for (ucPln = 0; ucPln < PLN_PER_LUN; ucPln++)
    {
        tFlashAddr.bsPln = ucPln;
20006648:	344040        	extui	a4, a4, 0, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1051
        pNFCQEntry->atRowAddr[ucRowAddr].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);
2000664b:	202820        	or	a2, a8, a2
2000664e:	114450        	slli	a4, a4, 11
20006651:	a06570        	addx4	a6, a5, a7
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1052
        ucRowAddr++;
20006654:	551b      	addi.n	a5, a5, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1051
    tFlashAddr = *pFlashAddr;

    for (ucPln = 0; ucPln < PLN_PER_LUN; ucPln++)
    {
        tFlashAddr.bsPln = ucPln;
        pNFCQEntry->atRowAddr[ucRowAddr].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);
20006656:	e10204        	insbits	a0, a2, 0, 29
20006659:	202840        	or	a2, a8, a4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1052
        ucRowAddr++;
2000665c:	744050        	extui	a4, a5, 0, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1051
    tFlashAddr = *pFlashAddr;

    for (ucPln = 0; ucPln < PLN_PER_LUN; ucPln++)
    {
        tFlashAddr.bsPln = ucPln;
        pNFCQEntry->atRowAddr[ucRowAddr].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);
2000665f:	8309      	s32i.n	a0, a3, 32
20006661:	8638      	l32i.n	a3, a6, 32
20006663:	040d      	mov.n	a0, a4
20006665:	e10234        	insbits	a3, a2, 0, 29
20006668:	8639      	s32i.n	a3, a6, 32

2000666a <HAL_NfcSetFullPageRowAddr+0x56>:
2000666a:	3149      	s32i.n	a4, a1, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1056
        ucRowAddr++;
    }

    /*  config high page row addr  */
    if (bMultiPageMode)
2000666c:	085916        	beqz	a9, 200066f5 <HAL_NfcSetFullPageRowAddr+0xe1>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1060
    {
#ifdef FLASH_INTEL_3DTLC
        //High page row addr
        if(EXTRA_PAGE == HAL_GetFlashPairPageType(tFlashAddr.usPage))
2000666f:	6fa072        	movi	a7, 111
20006672:	e0a562        	movi	a6, 0x5e0
20006675:	120c      	movi.n	a2, 1
20006677:	290c      	movi.n	a9, 2
20006679:	3b0c      	movi.n	a11, 3
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:175
------------------------------------------------------------------------------*/
PAIR_PAGE_TYPE HAL_GetFlashPairPageType(U16 usPage)
{
    PAIR_PAGE_TYPE ePairPageType;

    if(usPage < 16)
2000667b:	0b0d      	mov.n	a0, a11
2000667d:	ffbab6        	bltui	a10, 16, 20006680 <HAL_NfcSetFullPageRowAddr+0x6c>

20006680 <HAL_NfcSetFullPageRowAddr+0x6c>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:180
    {
        ePairPageType = LOW_PAGE_WITHOUT_HIGH;
    }
    
    if((usPage >= 16) && (usPage < 112))
20006680:	11bab6        	bltui	a10, 16, 20006695 <HAL_NfcSetFullPageRowAddr+0x81>
20006683:	1137a7        	bltu	a7, a10, 20006698 <HAL_NfcSetFullPageRowAddr+0x84>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:182
    {
        if (EVEN == usPage % 2)
20006686:	0430a0        	extui	a3, a10, 0, 1
20006689:	090d      	mov.n	a0, a9
2000668b:	830230        	moveqz	a0, a2, a3
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:192
        {
            ePairPageType = HIGH_PAGE;
        }
    }
    
    if((usPage >= 112) && (usPage < 1505))
2000668e:	1bb7a7        	bgeu	a7, a10, 200066ad <HAL_NfcSetFullPageRowAddr+0x99>
20006691:	0000c6        	j	20006698 <HAL_NfcSetFullPageRowAddr+0x84>

20006694 <HAL_NfcSetFullPageRowAddr+0x80>:
	...

20006695 <HAL_NfcSetFullPageRowAddr+0x81>:
20006695:	14b7a7        	bgeu	a7, a10, 200066ad <HAL_NfcSetFullPageRowAddr+0x99>
20006698:	1436a7        	bltu	a6, a10, 200066b0 <HAL_NfcSetFullPageRowAddr+0x9c>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:194
    {
        if (0 == (usPage - 112) % 3)
2000669b:	330c      	movi.n	a3, 3
2000669d:	90ca02        	addi	a0, a10, -112
200066a0:	f20030        	rems	a0, a0, a3
200066a3:	056016        	beqz	a0, 200066fd <HAL_NfcSetFullPageRowAddr+0xe9>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:198
        {
            ePairPageType = EXTRA_PAGE;
        }
        else if (1 == (usPage - 112) % 3)
200066a6:	400b      	addi.n	a4, a0, -1
200066a8:	839240        	moveqz	a9, a2, a4
200066ab:	090d      	mov.n	a0, a9
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:207
        else
        {
            ePairPageType = HIGH_PAGE;
        }
    }
    if((usPage >= 1505) && (usPage < 1536))
200066ad:	0fb6a7        	bgeu	a6, a10, 200066c0 <HAL_NfcSetFullPageRowAddr+0xac>
200066b0:	ffa552        	movi	a5, 0x5ff
200066b3:	0935a7        	bltu	a5, a10, 200066c0 <HAL_NfcSetFullPageRowAddr+0xac>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:209
    {
        if (0 == usPage % 2)
200066b6:	0480a0        	extui	a8, a10, 0, 1
200066b9:	470c      	movi.n	a7, 4
200066bb:	83b780        	moveqz	a11, a7, a8
200066be:	0b0d      	mov.n	a0, a11
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1060
200066c0:	394026        	beqi	a0, 4, 200066fd <HAL_NfcSetFullPageRowAddr+0xe9>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1066
        {
            tFlashAddr.usPage = HAL_GetHighPageIndexfromExtra(tFlashAddr.usPage);
        }
        else
        {
            tFlashAddr.usPage++;
200066c3:	aa1b      	addi.n	a10, a10, 1
200066c5:	f4a0a0        	extui	a10, a10, 0, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1085
                pNFCQEntry->atRowAddr[ucRowAddr].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);
                ucRowAddr++;
            }
        }
#else            
        for (ucPln = 0; ucPln < PLN_PER_LUN; ucPln++)
200066c8:	000c      	movi.n	a0, 0
200066ca:	5168      	l32i.n	a6, a1, 20
200066cc:	3138      	l32i.n	a3, a1, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1088
        {
            tFlashAddr.bsPln = ucPln;
            pNFCQEntry->atRowAddr[ucRowAddr].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);
200066ce:	2178      	l32i.n	a7, a1, 8
200066d0:	420c      	movi.n	a2, 4
200066d2:	2077a0        	or	a7, a7, a10
200066d5:	1ca276        	loopgtz	a2, 200066f5 <HAL_NfcSetFullPageRowAddr+0xe1>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1087
            }
        }
#else            
        for (ucPln = 0; ucPln < PLN_PER_LUN; ucPln++)
        {
            tFlashAddr.bsPln = ucPln;
200066d8:	342000        	extui	a2, a0, 0, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1088
            pNFCQEntry->atRowAddr[ucRowAddr].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);
200066db:	a04360        	addx4	a4, a3, a6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1085
                pNFCQEntry->atRowAddr[ucRowAddr].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);
                ucRowAddr++;
            }
        }
#else            
        for (ucPln = 0; ucPln < PLN_PER_LUN; ucPln++)
200066de:	001b      	addi.n	a0, a0, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1089
        {
            tFlashAddr.bsPln = ucPln;
            pNFCQEntry->atRowAddr[ucRowAddr].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);
            ucRowAddr++;
200066e0:	331b      	addi.n	a3, a3, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1088
        }
#else            
        for (ucPln = 0; ucPln < PLN_PER_LUN; ucPln++)
        {
            tFlashAddr.bsPln = ucPln;
            pNFCQEntry->atRowAddr[ucRowAddr].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);
200066e2:	112250        	slli	a2, a2, 11
200066e5:	8458      	l32i.n	a5, a4, 32
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1089
            ucRowAddr++;
200066e7:	743030        	extui	a3, a3, 0, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1085
                pNFCQEntry->atRowAddr[ucRowAddr].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);
                ucRowAddr++;
            }
        }
#else            
        for (ucPln = 0; ucPln < PLN_PER_LUN; ucPln++)
200066ea:	740000        	extui	a0, a0, 0, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1088
        {
            tFlashAddr.bsPln = ucPln;
            pNFCQEntry->atRowAddr[ucRowAddr].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);
200066ed:	202720        	or	a2, a7, a2
200066f0:	e10254        	insbits	a5, a2, 0, 29
200066f3:	8459      	s32i.n	a5, a4, 32
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1094
            ucRowAddr++;
        }
#endif
    }
    
    return;
200066f5:	4108      	l32i.n	a0, a1, 16
200066f7:	20c112        	addi	a1, a1, 32
200066fa:	f00d      	ret.n

200066fc <HAL_NfcSetFullPageRowAddr+0xe8>:
	...

200066fd <HAL_NfcSetFullPageRowAddr+0xe9>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:226

U16 HAL_GetHighPageIndexfromExtra(U16 usExtraPg)
{
    U16 usHighPg = INVALID_4F;
    
    if(usExtraPg == 112)
200066fd:	70a082        	movi	a8, 112
20006700:	331a87        	beq	a10, a8, 20006737 <HAL_NfcSetFullPageRowAddr+0x123>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:247
    else if(usExtraPg > 1504)
    {
        usHighPg = (((usExtraPg - 1504) / 2) * 3) + 1410;
    }

    if(INVALID_4F == usHighPg)
20006703:	e81431        	l32r	a3, 20000754 <_stext+0x54>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:230
    
    if(usExtraPg == 112)
    {
        usHighPg = 49;
    }
    else if (((usExtraPg - 112) / 3) < 32)
20006706:	cfa092        	movi	a9, 207
20006709:	3329a7        	blt	a9, a10, 20006740 <HAL_NfcSetFullPageRowAddr+0x12c>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:232
    {
        usHighPg = 49 + (((usExtraPg - 112) / 3) * 2);
2000670c:	03a022        	movi	a2, 3
2000670f:	90ca02        	addi	a0, a10, -112
20006712:	d20020        	quos	a0, a0, a2
20006715:	31a022        	movi	a2, 49
20006718:	900020        	addx2	a0, a0, a2
2000671b:	f40000        	extui	a0, a0, 0, 16
2000671e:	6109      	s32i.n	a0, a1, 24
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:247
    else if(usExtraPg > 1504)
    {
        usHighPg = (((usExtraPg - 1504) / 2) * 3) + 1410;
    }

    if(INVALID_4F == usHighPg)
20006720:	159037        	bne	a0, a3, 20006739 <HAL_NfcSetFullPageRowAddr+0x125>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:249
    {
        DBG_Printf("Get upper page error!!!\n");
20006723:	e8a921        	l32r	a2, 200009c8 <_stext+0x2c8>
20006726:	0453c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:250
        DBG_Getch();
20006729:	e7fb01        	l32r	a0, 20000718 <_stext+0x18>
2000672c:	0000c0        	callx0	a0
2000672f:	6108      	l32i.n	a0, a1, 24
20006731:	000106        	j	20006739 <HAL_NfcSetFullPageRowAddr+0x125>

20006734 <HAL_NfcSetFullPageRowAddr+0x120>:
20006734:	000000                                        ...

20006737 <HAL_NfcSetFullPageRowAddr+0x123>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:228
{
    U16 usHighPg = INVALID_4F;
    
    if(usExtraPg == 112)
    {
        usHighPg = 49;
20006737:	103c      	movi.n	a0, 49
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1062
    {
#ifdef FLASH_INTEL_3DTLC
        //High page row addr
        if(EXTRA_PAGE == HAL_GetFlashPairPageType(tFlashAddr.usPage))
        {
            tFlashAddr.usPage = HAL_GetHighPageIndexfromExtra(tFlashAddr.usPage);
20006739:	00ad      	mov.n	a10, a0
2000673b:	ffe246        	j	200066c8 <HAL_NfcSetFullPageRowAddr+0xb4>

2000673e <HAL_NfcSetFullPageRowAddr+0x12a>:
	...

20006740 <HAL_NfcSetFullPageRowAddr+0x12c>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:234
    }
    else if (((usExtraPg - 112) / 3) < 32)
    {
        usHighPg = 49 + (((usExtraPg - 112) / 3) * 2);
    }
    else if((((usExtraPg - 112) / 3) >= 32) && (usExtraPg < 1456))
20006740:	afa542        	movi	a4, 0x5af
20006743:	1534a7        	bltu	a4, a10, 2000675c <HAL_NfcSetFullPageRowAddr+0x148>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:236
    {
        usHighPg = 49 + (31 * 2) + ((((usExtraPg - 112) / 3) - 31) * 3);
20006746:	320c      	movi.n	a2, 3
20006748:	90ca02        	addi	a0, a10, -112
2000674b:	d20020        	quos	a0, a0, a2
2000674e:	900000        	addx2	a0, a0, a0
20006751:	12c002        	addi	a0, a0, 18
20006754:	f40000        	extui	a0, a0, 0, 16
20006757:	fff0c6        	j	2000671e <HAL_NfcSetFullPageRowAddr+0x10a>

2000675a <HAL_NfcSetFullPageRowAddr+0x146>:
	...

2000675c <HAL_NfcSetFullPageRowAddr+0x148>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:238
    }
    else if((usExtraPg >= 1456) && (usExtraPg <= 1504))
2000675c:	0836a7        	bltu	a6, a10, 20006768 <HAL_NfcSetFullPageRowAddr+0x154>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:240
    {
        usHighPg = 1362 + (usExtraPg - 1456);
2000675f:	a2ca02        	addi	a0, a10, -94
20006762:	f40000        	extui	a0, a0, 0, 16
20006765:	ffed46        	j	2000671e <HAL_NfcSetFullPageRowAddr+0x10a>

20006768 <HAL_NfcSetFullPageRowAddr+0x154>:
20006768:	20aa22        	movi	a2, 0xfffffa20
2000676b:	2a2a      	add.n	a2, a10, a2
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:244
    }
    else if(usExtraPg > 1504)
    {
        usHighPg = (((usExtraPg - 1504) / 2) * 3) + 1410;
2000676d:	021b      	addi.n	a0, a2, 1
2000676f:	b30220        	movgez	a0, a2, a2
20006772:	210100        	srai	a0, a0, 1
20006775:	900000        	addx2	a0, a0, a0
20006778:	06d002        	addmi	a0, a0, 0x600
2000677b:	82c002        	addi	a0, a0, -126
2000677e:	f40000        	extui	a0, a0, 0, 16
20006781:	ffe646        	j	2000671e <HAL_NfcSetFullPageRowAddr+0x10a>

20006784 <HAL_NfcGetErrCode>:
HAL_NfcGetErrCode():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:659
U8 HAL_NfcGetErrCode(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
    
    return (U8)g_pNfcCmdSts->aNfcqCmdStsReg[ucPhyPU][ucLun].bsErrSts;
20006784:	e7e841        	l32r	a4, 20000724 <_stext+0x24>
20006787:	224a      	add.n	a2, a2, a4
20006789:	e7e441        	l32r	a4, 2000071c <_stext+0x1c>
2000678c:	800222        	l8ui	a2, a2, 128
2000678f:	3e2442        	l32i	a4, a4, 248
20006792:	a02230        	addx4	a2, a2, a3
20006795:	a02240        	addx4	a2, a2, a4
20006798:	0020c0        	memw
2000679b:	010222        	l8ui	a2, a2, 1
2000679e:	342020        	extui	a2, a2, 0, 4
200067a1:	f00d      	ret.n

200067a3 <HAL_NfcGetErrCode+0x1f>:
	...

200067a4 <TEST_NfcErrBitInj..ADB_1482204275>:
TEST_NfcErrBitInj():
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3002

Purpose   : test error bit injection
Reference :
****************************************************************************/
LOCAL void TEST_NfcErrBitInj(void)
{
200067a4:	e0c112        	addi	a1, a1, -32
200067a7:	0461e2        	s32i	a14, a1, 16
200067aa:	0561f2        	s32i	a15, a1, 20
200067ad:	016102        	s32i	a0, a1, 4
200067b0:	21c9      	s32i.n	a12, a1, 8
200067b2:	31d9      	s32i.n	a13, a1, 12
200067b4:	e88cd1        	l32r	a13, 200009e4 <_stext+0x2e4>
200067b7:	1c0c      	movi.n	a12, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2187
    return;
}
BOOL TEST_IsTlcModeSupport(void)
{
#if (defined(FLASH_INTEL_3DTLC) || defined (FLASH_3D_MLC))
    if (g_bTlcMode)
200067b9:	242d02        	l32i	a0, a13, 144
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3012
    DEC_FIFO_STATUS_ENTRY* tDecFifoSts = {0};
    NFC_ERR_INJ tErrInj = {0};
    FLASH_ADDR tFlashAddr = {0};
    
    /*  enable DEC fifo report  */
    g_bDecFifoEn = TRUE;
200067bc:	266dc2        	s32i	a12, a13, 152
200067bf:	015016        	beqz	a0, 200067d8 <TEST_NfcErrBitInj..ADB_1482204275+0x34>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2189
BOOL TEST_IsTlcModeSupport(void)
{
#if (defined(FLASH_INTEL_3DTLC) || defined (FLASH_3D_MLC))
    if (g_bTlcMode)
    { 
        DBG_Printf("Single plane operation only support SLC mode in this flash type!\n");
200067c2:	e88921        	l32r	a2, 200009e8 <_stext+0x2e8>
200067c5:	0449c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3101
    g_bDecFifoEn = FALSE; 
    g_ucEntryIndex = g_ucDecFifoRp;

    g_bSinglePln = FALSE;

    return;
200067c8:	21c8      	l32i.n	a12, a1, 8
200067ca:	31d8      	l32i.n	a13, a1, 12
200067cc:	41e8      	l32i.n	a14, a1, 16
200067ce:	51f8      	l32i.n	a15, a1, 20
200067d0:	1108      	l32i.n	a0, a1, 4
200067d2:	20c112        	addi	a1, a1, 32
200067d5:	f00d      	ret.n

200067d7 <TEST_NfcErrBitInj..ADB_1482204275+0x33>:
	...

200067d8 <TEST_NfcErrBitInj..ADB_1482204275+0x34>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3019
    if (TRUE != TEST_IsTlcModeSupport())
    { 
        return;
    }

    g_bSinglePln = TRUE;
200067d8:	0020c0        	memw
200067db:	2a6dc2        	s32i	a12, a13, 168
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3021

    TEST_NfcEraseAll();
200067de:	00e685        	call0	20007648 <TEST_NfcEraseAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3023
    
    TEST_NfcWriteAll(SING_PLN_WRITE);
200067e1:	020c      	movi.n	a2, 0
200067e3:	00bc05        	call0	200073a4 <TEST_NfcWriteAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3026

    /*  enable error injection  */
    g_ErrInjEn = TRUE;
200067e6:	0020c0        	memw
200067e9:	126dc2        	s32i	a12, a13, 72
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3027
    g_tErrInj.bsInjErrType = NF_ERR_TYPE_UECC;//NF_ERR_TYPE_RECC;
200067ec:	057c      	movi.n	a5, -16
200067ee:	142d42        	l32i	a4, a13, 80
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3030
    
    /* Error Bit injection, 1 plane */
    for (ucCwStart = 0; ucCwStart < CW_PER_PLN; ucCwStart++) // 16 CWs
200067f1:	021c      	movi.n	a2, 16
200067f3:	030c      	movi.n	a3, 0
200067f5:	0139      	s32i.n	a3, a1, 0
200067f7:	6129      	s32i.n	a2, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3027
    
    TEST_NfcWriteAll(SING_PLN_WRITE);

    /*  enable error injection  */
    g_ErrInjEn = TRUE;
    g_tErrInj.bsInjErrType = NF_ERR_TYPE_UECC;//NF_ERR_TYPE_RECC;
200067f9:	104450        	and	a4, a4, a5
200067fc:	650c      	movi.n	a5, 6
200067fe:	204450        	or	a4, a4, a5
20006801:	146d42        	s32i	a4, a13, 80
20006804:	000486        	j	2000681a <TEST_NfcErrBitInj..ADB_1482204275+0x76>

20006807 <TEST_NfcErrBitInj..ADB_1482204275+0x63>:
	...

20006808 <TEST_NfcErrBitInj..ADB_1482204275+0x64>:
20006808:	01c8      	l32i.n	a12, a1, 0
2000680a:	6168      	l32i.n	a6, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3030
    
    /* Error Bit injection, 1 plane */
    for (ucCwStart = 0; ucCwStart < CW_PER_PLN; ucCwStart++) // 16 CWs
2000680c:	cc1b      	addi.n	a12, a12, 1
2000680e:	660b      	addi.n	a6, a6, -1
20006810:	74c0c0        	extui	a12, a12, 0, 8
20006813:	01c9      	s32i.n	a12, a1, 0
20006815:	6169      	s32i.n	a6, a1, 24
20006817:	102616        	beqz	a6, 2000691d <TEST_NfcErrBitInj..ADB_1482204275+0x179>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3033
    {
        ucCwLen = rand() % (CW_PER_PLN - ucCwStart);
        g_tErrInj.bsInjCwStart = ucCwStart;
2000681a:	0021c2        	l32i	a12, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3032
    g_tErrInj.bsInjErrType = NF_ERR_TYPE_UECC;//NF_ERR_TYPE_RECC;
    
    /* Error Bit injection, 1 plane */
    for (ucCwStart = 0; ucCwStart < CW_PER_PLN; ucCwStart++) // 16 CWs
    {
        ucCwLen = rand() % (CW_PER_PLN - ucCwStart);
2000681d:	048d45        	call0	2000b0f4 <rand>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3033
        g_tErrInj.bsInjCwStart = ucCwStart;
20006820:	4c4dc2        	s8i	a12, a13, 76
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3034
        g_tErrInj.bsInjCwLen   = ucCwLen;
20006823:	0e1c      	movi.n	a14, 16
20006825:	c0fec0        	sub	a15, a14, a12
20006828:	f2f2f0        	rems	a15, a2, a15
2000682b:	4d4df2        	s8i	a15, a13, 77
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3035
        g_tErrInj.bsInjErrBitPerCw = rand() % NFC_ERR_INJ_BIT_MAX_PER_CW;
2000682e:	048c45        	call0	2000b0f4 <rand>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3036
        DBG_Printf("Read err bit inj start: CwStart%d CwLen%d ErrBitPerCw%d\n", g_tErrInj.bsInjCwStart, g_tErrInj.bsInjCwLen, g_tErrInj.bsInjErrBitPerCw);
20006831:	4c0d32        	l8ui	a3, a13, 76
20006834:	4d0d42        	l8ui	a4, a13, 77
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3035
    for (ucCwStart = 0; ucCwStart < CW_PER_PLN; ucCwStart++) // 16 CWs
    {
        ucCwLen = rand() % (CW_PER_PLN - ucCwStart);
        g_tErrInj.bsInjCwStart = ucCwStart;
        g_tErrInj.bsInjCwLen   = ucCwLen;
        g_tErrInj.bsInjErrBitPerCw = rand() % NFC_ERR_INJ_BIT_MAX_PER_CW;
20006837:	00a152        	movi	a5, 0x100
2000683a:	f25250        	rems	a5, a2, a5
2000683d:	4e4d52        	s8i	a5, a13, 78
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3036
        DBG_Printf("Read err bit inj start: CwStart%d CwLen%d ErrBitPerCw%d\n", g_tErrInj.bsInjCwStart, g_tErrInj.bsInjCwLen, g_tErrInj.bsInjErrBitPerCw);
20006840:	e86b21        	l32r	a2, 200009ec <_stext+0x2ec>
20006843:	745050        	extui	a5, a5, 0, 8
20006846:	0441c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3038

        TEST_NfcReadAll(0, SEC_PER_PHYPG, SING_PLN_READ);
20006849:	020c      	movi.n	a2, 0
2000684b:	20a032        	movi	a3, 32
2000684e:	00a042        	movi	a4, 0
20006851:	0070c5        	call0	20006f60 <TEST_NfcReadAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3041

        /* Read Multi Entries of DEC FIFO from SW Table and check error info */
        for (; g_ucEntryIndex < g_ucDecFifoRp; g_ucEntryIndex++)
20006854:	fc0de2        	l8ui	a14, a13, 252
20006857:	0020c0        	memw
2000685a:	080d62        	l8ui	a6, a13, 8
2000685d:	a9be67        	bgeu	a14, a6, 2000680a <TEST_NfcErrBitInj..ADB_1482204275+0x66>
20006860:	000c46        	j	20006895 <TEST_NfcErrBitInj..ADB_1482204275+0xf1>

20006863 <TEST_NfcErrBitInj..ADB_1482204275+0xbf>:
	...

20006865 <TEST_NfcErrBitInj..ADB_1482204275+0xc1>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3068
            {
                DBG_Printf("Inj ErrCntAcc miss match!!!\nCmdIndex %d InjErrCntAcc should be %d, but in DEC FIFO EntryIndex %d ErrCntAcc = %d\n"
                    , ucCmdIndex, usInjErrCntAcc, g_ucEntryIndex, tDecFifoSts->bsErrCntAcc);
                DBG_Getch();
            }
            if (tDecFifoSts->bsErrCntAcc0T1 != usInjErrCntAcc0T1)
20006865:	021c62        	l16ui	a6, a12, 4
20006868:	121f67        	beq	a15, a6, 2000687e <TEST_NfcErrBitInj..ADB_1482204275+0xda>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3070
            {
                DBG_Printf("Inj ErrCntAcc 0T1 miss match!!!\nCmdIndex %d InjErrCntAcc0T1 should be %d, but in DEC FIFO Entry %d ErrCntAcc0T1 = %d\n"
2000686b:	0f4d      	mov.n	a4, a15
2000686d:	0e3d      	mov.n	a3, a14
2000686f:	e86021        	l32r	a2, 200009f0 <_stext+0x2f0>
20006872:	fc0d52        	l8ui	a5, a13, 252
20006875:	043ec5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3072
                    , ucCmdIndex, usInjErrCntAcc0T1, g_ucEntryIndex, tDecFifoSts->bsErrCntAcc0T1);
                DBG_Getch();
20006878:	e7a801        	l32r	a0, 20000718 <_stext+0x18>
2000687b:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3041
        DBG_Printf("Read err bit inj start: CwStart%d CwLen%d ErrBitPerCw%d\n", g_tErrInj.bsInjCwStart, g_tErrInj.bsInjCwLen, g_tErrInj.bsInjErrBitPerCw);

        TEST_NfcReadAll(0, SEC_PER_PHYPG, SING_PLN_READ);

        /* Read Multi Entries of DEC FIFO from SW Table and check error info */
        for (; g_ucEntryIndex < g_ucDecFifoRp; g_ucEntryIndex++)
2000687e:	fc0de2        	l8ui	a14, a13, 252
20006881:	ee1b      	addi.n	a14, a14, 1
20006883:	74e0e0        	extui	a14, a14, 0, 8
20006886:	fc4de2        	s8i	a14, a13, 252
20006889:	0020c0        	memw
2000688c:	080d72        	l8ui	a7, a13, 8
2000688f:	023e77        	bltu	a14, a7, 20006895 <TEST_NfcErrBitInj..ADB_1482204275+0xf1>
20006892:	ffdc86        	j	20006808 <TEST_NfcErrBitInj..ADB_1482204275+0x64>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3045
        {
            ucCmdIndex = g_ucEntryIndex;//also can be mapping in other way
            tDecFifoSts = HAL_DecFifoGetStsEntry(ucCmdIndex);
            DBG_Printf("ucEntryIndex %d ucCmdIndex %d DEC FIFO STS: \n", g_ucEntryIndex, ucCmdIndex);
20006895:	e85721        	l32r	a2, 200009f4 <_stext+0x2f4>
20006898:	203ee0        	or	a3, a14, a14
2000689b:	0e4d      	mov.n	a4, a14
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3044

        /* Read Multi Entries of DEC FIFO from SW Table and check error info */
        for (; g_ucEntryIndex < g_ucDecFifoRp; g_ucEntryIndex++)
        {
            ucCmdIndex = g_ucEntryIndex;//also can be mapping in other way
            tDecFifoSts = HAL_DecFifoGetStsEntry(ucCmdIndex);
2000689d:	0df8      	l32i.n	a15, a13, 0
2000689f:	74c0e0        	extui	a12, a14, 0, 8
200068a2:	90ccc0        	addx2	a12, a12, a12
200068a5:	a0ccf0        	addx4	a12, a12, a15
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3045
            DBG_Printf("ucEntryIndex %d ucCmdIndex %d DEC FIFO STS: \n", g_ucEntryIndex, ucCmdIndex);
200068a8:	043b85        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3046
            DBG_Printf("ulDecEngBitMap=0x%x bsErrCntAcc0T1=0x%x bsErrCntAcc=0x%x\n", tDecFifoSts->ulDecEngBitMap, tDecFifoSts->bsErrCntAcc0T1, tDecFifoSts->bsErrCntAcc);
200068ab:	e85321        	l32r	a2, 200009f8 <_stext+0x2f8>
200068ae:	0c38      	l32i.n	a3, a12, 0
200068b0:	021c42        	l16ui	a4, a12, 4
200068b3:	031c52        	l16ui	a5, a12, 6
200068b6:	043ac5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3047
            DBG_Printf("bsLdpcDecItr=0x%x bsPlnNum=0x%x bsCmdIndex=0x%x\n\n", tDecFifoSts->bsLdpcDecItr, tDecFifoSts->bsPlnNum, tDecFifoSts->bsCmdIndex);
200068b9:	2c58      	l32i.n	a5, a12, 8
200068bb:	e85021        	l32r	a2, 200009fc <_stext+0x2fc>
200068be:	c43050        	extui	a3, a5, 0, 13
200068c1:	144d50        	extui	a4, a5, 13, 2
200068c4:	745f50        	extui	a5, a5, 15, 8
200068c7:	0439c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3049
            /* Check entry cmd index */
            if (tDecFifoSts->bsCmdIndex != ucCmdIndex)
200068ca:	2c58      	l32i.n	a5, a12, 8
200068cc:	f03d      	nop.n
200068ce:	745f50        	extui	a5, a5, 15, 8
200068d1:	1b9e57        	bne	a14, a5, 200068f0 <TEST_NfcErrBitInj..ADB_1482204275+0x14c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3060
        #ifdef SIM//pending
            usInjErrCntAcc    = g_tErrInj.bsInjCwLen * 40;
            usInjErrCntAcc0T1 = g_tErrInj.bsInjCwLen * 20;
        #else
            usInjErrCntAcc    = g_tErrInj.bsInjCwLen * (g_tErrInj.bsInjErrBitPerCw - 1);
            usInjErrCntAcc0T1 = usInjErrCntAcc;//PRG Data is all 0
200068d4:	4e0df2        	l8ui	a15, a13, 78
200068d7:	4d0d02        	l8ui	a0, a13, 77
200068da:	ff0b      	addi.n	a15, a15, -1
200068dc:	c1ff00        	mul16u	a15, a15, a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3062
        #endif
            if (tDecFifoSts->bsErrCntAcc != usInjErrCntAcc)
200068df:	031c62        	l16ui	a6, a12, 6
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3060
        #ifdef SIM//pending
            usInjErrCntAcc    = g_tErrInj.bsInjCwLen * 40;
            usInjErrCntAcc0T1 = g_tErrInj.bsInjCwLen * 20;
        #else
            usInjErrCntAcc    = g_tErrInj.bsInjCwLen * (g_tErrInj.bsInjErrBitPerCw - 1);
            usInjErrCntAcc0T1 = usInjErrCntAcc;//PRG Data is all 0
200068e2:	f4f0f0        	extui	a15, a15, 0, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3062
        #endif
            if (tDecFifoSts->bsErrCntAcc != usInjErrCntAcc)
200068e5:	0296f7        	bne	a6, a15, 200068eb <TEST_NfcErrBitInj..ADB_1482204275+0x147>
200068e8:	ffde46        	j	20006865 <TEST_NfcErrBitInj..ADB_1482204275+0xc1>
200068eb:	000546        	j	20006904 <TEST_NfcErrBitInj..ADB_1482204275+0x160>

200068ee <TEST_NfcErrBitInj..ADB_1482204275+0x14a>:
	...

200068f0 <TEST_NfcErrBitInj..ADB_1482204275+0x14c>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3051
            DBG_Printf("ulDecEngBitMap=0x%x bsErrCntAcc0T1=0x%x bsErrCntAcc=0x%x\n", tDecFifoSts->ulDecEngBitMap, tDecFifoSts->bsErrCntAcc0T1, tDecFifoSts->bsErrCntAcc);
            DBG_Printf("bsLdpcDecItr=0x%x bsPlnNum=0x%x bsCmdIndex=0x%x\n\n", tDecFifoSts->bsLdpcDecItr, tDecFifoSts->bsPlnNum, tDecFifoSts->bsCmdIndex);
            /* Check entry cmd index */
            if (tDecFifoSts->bsCmdIndex != ucCmdIndex)
            {
                DBG_Printf("CMD index miss match!!!\nucCmdIndex should be %d, but in DEC FIFO EntryIndex = %d tDecFifoSts.bsCmdIndex = %d\n"
200068f0:	e84421        	l32r	a2, 20000a00 <_stext+0x300>
200068f3:	0e3d      	mov.n	a3, a14
200068f5:	fc0d42        	l8ui	a4, a13, 252
200068f8:	043685        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3053
                    , ucCmdIndex, g_ucEntryIndex, tDecFifoSts->bsCmdIndex);
                DBG_Getch();
200068fb:	e78701        	l32r	a0, 20000718 <_stext+0x18>
200068fe:	0000c0        	callx0	a0
20006901:	fff3c6        	j	200068d4 <TEST_NfcErrBitInj..ADB_1482204275+0x130>

20006904 <TEST_NfcErrBitInj..ADB_1482204275+0x160>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3064
            usInjErrCntAcc    = g_tErrInj.bsInjCwLen * (g_tErrInj.bsInjErrBitPerCw - 1);
            usInjErrCntAcc0T1 = usInjErrCntAcc;//PRG Data is all 0
        #endif
            if (tDecFifoSts->bsErrCntAcc != usInjErrCntAcc)
            {
                DBG_Printf("Inj ErrCntAcc miss match!!!\nCmdIndex %d InjErrCntAcc should be %d, but in DEC FIFO EntryIndex %d ErrCntAcc = %d\n"
20006904:	0f4d      	mov.n	a4, a15
20006906:	e83f21        	l32r	a2, 20000a04 <_stext+0x304>
20006909:	0e3d      	mov.n	a3, a14
2000690b:	fc0d52        	l8ui	a5, a13, 252
2000690e:	043545        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3066
                    , ucCmdIndex, usInjErrCntAcc, g_ucEntryIndex, tDecFifoSts->bsErrCntAcc);
                DBG_Getch();
20006911:	e78101        	l32r	a0, 20000718 <_stext+0x18>
20006914:	0000c0        	callx0	a0
20006917:	ffd286        	j	20006865 <TEST_NfcErrBitInj..ADB_1482204275+0xc1>

2000691a <TEST_NfcErrBitInj..ADB_1482204275+0x176>:
2000691a:	000000                                        ...

2000691d <TEST_NfcErrBitInj..ADB_1482204275+0x179>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3094
            }
        }
    }
#endif
    /* disable error injection and DEC fifo report  */
    g_ErrInjEn = FALSE;
2000691d:	000c      	movi.n	a0, 0
2000691f:	0020c0        	memw
20006922:	126d02        	s32i	a0, a13, 72
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3095
    g_tErrInj = tErrInj;
20006925:	e83851        	l32r	a5, 20000a08 <_stext+0x308>
20006928:	e83941        	l32r	a4, 20000a0c <_stext+0x30c>
2000692b:	0538      	l32i.n	a3, a5, 0
2000692d:	0439      	s32i.n	a3, a4, 0
2000692f:	1558      	l32i.n	a5, a5, 4
20006931:	1459      	s32i.n	a5, a4, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3096
    g_bDecFifoEn = FALSE; 
20006933:	266d02        	s32i	a0, a13, 152
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3097
    g_ucEntryIndex = g_ucDecFifoRp;
20006936:	0020c0        	memw
20006939:	080d22        	l8ui	a2, a13, 8
2000693c:	fc4d22        	s8i	a2, a13, 252
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3099

    g_bSinglePln = FALSE;
2000693f:	0020c0        	memw
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3101

    return;
20006942:	21c8      	l32i.n	a12, a1, 8
20006944:	41e8      	l32i.n	a14, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3099
    g_ErrInjEn = FALSE;
    g_tErrInj = tErrInj;
    g_bDecFifoEn = FALSE; 
    g_ucEntryIndex = g_ucDecFifoRp;

    g_bSinglePln = FALSE;
20006946:	2a6d02        	s32i	a0, a13, 168
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3101

    return;
20006949:	51f8      	l32i.n	a15, a1, 20
2000694b:	31d8      	l32i.n	a13, a1, 12
2000694d:	1108      	l32i.n	a0, a1, 4
2000694f:	20c112        	addi	a1, a1, 32
20006952:	f00d      	ret.n

20006954 <TEST_NfcErrStsInj..PCB_1482204275>:
TEST_NfcErrStsInj():
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2973

Purpose   : test error status injection
Reference :
****************************************************************************/
LOCAL void TEST_NfcErrStsInj(void)
{
20006954:	130c      	movi.n	a3, 1
20006956:	a0c112        	addi	a1, a1, -96
20006959:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1870
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   
2000695b:	025d      	mov.n	a5, a2
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2973

Purpose   : test error status injection
Reference :
****************************************************************************/
LOCAL void TEST_NfcErrStsInj(void)
{
2000695d:	f1d9      	s32i.n	a13, a1, 60
2000695f:	1061e2        	s32i	a14, a1, 64
20006962:	1161f2        	s32i	a15, a1, 68
20006965:	d109      	s32i.n	a0, a1, 52
20006967:	e1c9      	s32i.n	a12, a1, 56
20006969:	e77601        	l32r	a0, 20000744 <_stext+0x44>
2000696c:	e829c1        	l32r	a12, 20000a10 <_stext+0x310>
2000696f:	e76df1        	l32r	a15, 20000724 <_stext+0x24>
20006972:	e76ae1        	l32r	a14, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2974
    g_bSinglePln = FALSE;
20006975:	0020c0        	memw
20006978:	5d6e22        	s32i	a2, a14, 0x174
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
2000697b:	df1ed2        	l16ui	a13, a14, 0x1be
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1868
History       :
    20151112    abby    create
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
2000697e:	e82581        	l32r	a8, 20000a14 <_stext+0x314>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1872
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
20006981:	de1e42        	l16ui	a4, a14, 0x1bc
20006984:	136142        	s32i	a4, a1, 76
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1868
History       :
    20151112    abby    create
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
20006987:	1878      	l32i.n	a7, a8, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1870
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   
20006989:	572ee2        	l32i	a14, a14, 0x15c
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1868
History       :
    20151112    abby    create
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
2000698c:	1179      	s32i.n	a7, a1, 4
2000698e:	0888      	l32i.n	a8, a8, 0
20006990:	0189      	s32i.n	a8, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1872
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
20006992:	025142        	s16i	a4, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1870
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   
20006995:	0168      	l32i.n	a6, a1, 0
20006997:	8353e0        	moveqz	a5, a3, a14
2000699a:	0155c0        	slli	a5, a5, 20
2000699d:	126152        	s32i	a5, a1, 72
200069a0:	106600        	and	a6, a6, a0
200069a3:	205560        	or	a5, a5, a6
200069a6:	0159      	s32i.n	a5, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
200069a8:	1cb4d7        	bgeu	a4, a13, 200069c8 <TEST_NfcErrStsInj..PCB_1482204275+0x74>
200069ab:	00a9c6        	j	20006c56 <TEST_NfcErrStsInj..PCB_1482204275+0x302>

200069ae <TEST_NfcErrStsInj..PCB_1482204275+0x5a>:
200069ae:	130c      	movi.n	a3, 1
200069b0:	e75b91        	l32r	a9, 2000071c <_stext+0x1c>
200069b3:	01a082        	movi	a8, 1
200069b6:	00a072        	movi	a7, 0
200069b9:	8378e0        	moveqz	a7, a8, a14
200069bc:	de1992        	l16ui	a9, a9, 0x1bc
200069bf:	136192        	s32i	a9, a1, 76
200069c2:	0177c0        	slli	a7, a7, 20
200069c5:	126172        	s32i	a7, a1, 72
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2981
    FLASH_ADDR tFlashAddr = {0};

    TEST_NfcEraseAll();

    /* enable error injection and error status injection  */
    g_ErrInjEn = TRUE;
200069c8:	0020c0        	memw
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1936
    20150229    abby    merge TLC write test code into MLC
****************************************************************************/
void TEST_NfcWriteAll(WRITE_REQ_TYPE WriteType)
{
    FLASH_ADDR tFlashAddr = {0};
    NFC_PRG_REQ_DES tWrReq = {0};
200069cb:	18c122        	addi	a2, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1935
    20151112    abby    create
    20150229    abby    merge TLC write test code into MLC
****************************************************************************/
void TEST_NfcWriteAll(WRITE_REQ_TYPE WriteType)
{
    FLASH_ADDR tFlashAddr = {0};
200069ce:	10c162        	addi	a6, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2981
    FLASH_ADDR tFlashAddr = {0};

    TEST_NfcEraseAll();

    /* enable error injection and error status injection  */
    g_ErrInjEn = TRUE;
200069d1:	e75281        	l32r	a8, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2982
    g_tErrInj.bsInjErrSts = TEST_PRG_FAIL_STS;//program fail 
200069d4:	e1a042        	movi	a4, 225
200069d7:	4b4c42        	s8i	a4, a12, 75
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2981
    FLASH_ADDR tFlashAddr = {0};

    TEST_NfcEraseAll();

    /* enable error injection and error status injection  */
    g_ErrInjEn = TRUE;
200069da:	456832        	s32i	a3, a8, 0x114
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1935
    20151112    abby    create
    20150229    abby    merge TLC write test code into MLC
****************************************************************************/
void TEST_NfcWriteAll(WRITE_REQ_TYPE WriteType)
{
    FLASH_ADDR tFlashAddr = {0};
200069dd:	e80e31        	l32r	a3, 20000a18 <_stext+0x318>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1936
    NFC_PRG_REQ_DES tWrReq = {0};
200069e0:	841c      	movi.n	a4, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1935
    20151112    abby    create
    20150229    abby    merge TLC write test code into MLC
****************************************************************************/
void TEST_NfcWriteAll(WRITE_REQ_TYPE WriteType)
{
    FLASH_ADDR tFlashAddr = {0};
200069e2:	1358      	l32i.n	a5, a3, 4
200069e4:	0378      	l32i.n	a7, a3, 0
200069e6:	0679      	s32i.n	a7, a6, 0
200069e8:	1659      	s32i.n	a5, a6, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1936
    NFC_PRG_REQ_DES tWrReq = {0};
200069ea:	08c332        	addi	a3, a3, 8
200069ed:	048405        	call0	2000b230 <memcpy>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
200069f0:	e75561        	l32r	a6, 20000744 <_stext+0x44>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1220
LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
200069f3:	362c42        	l32i	a4, a12, 216
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1219

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
200069f6:	3a2c72        	l32i	a7, a12, 232
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1218
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
200069f9:	262c82        	l32i	a8, a12, 152
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
200069fc:	e76801        	l32r	a0, 2000079c <_stext+0x9c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
200069ff:	372ca2        	l32i	a10, a12, 220
20006a02:	190c      	movi.n	a9, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1227
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;
20006a04:	242c32        	l32i	a3, a12, 144
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
20006a07:	e745b1        	l32r	a11, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1227
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;
20006a0a:	a128      	l32i.n	a2, a1, 40
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
20006a0c:	0bb8      	l32i.n	a11, a11, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1227
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;
20006a0e:	033324        	insbits	a2, a3, 3, 3
20006a11:	a129      	s32i.n	a2, a1, 40
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
20006a13:	0bb8      	l32i.n	a11, a11, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
20006a15:	030c      	movi.n	a3, 0
20006a17:	8339a0        	moveqz	a3, a9, a10
20006a1a:	0153c0        	slli	a5, a3, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
20006a1d:	bb0a      	add.n	a11, a11, a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1226
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
20006a1f:	312ca2        	l32i	a10, a12, 196
20006a22:	91a9      	s32i.n	a10, a1, 36
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
20006a24:	f5b0b0        	extui	a11, a11, 16, 16
20006a27:	11bbf0        	slli	a11, a11, 1
20006a2a:	0c51b2        	s16i	a11, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1218
    pWrReq->bsRedOntf       = g_bRedOntf;
20006a2d:	6128      	l32i.n	a2, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1223
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
20006a2f:	0133a0        	slli	a3, a3, 22
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1218
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
20006a32:	900824        	insbits	a2, a8, 16, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1219
    pWrReq->bsCSEn          = g_bCacheStsEn;
20006a35:	922724        	insbits	a2, a7, 18, 18
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1220
    pWrReq->bsSsu0En        = g_bSsuEn;
20006a38:	933424        	insbits	a2, a4, 19, 19
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
20006a3b:	102260        	and	a2, a2, a6
20006a3e:	202250        	or	a2, a2, a5
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1222
    pWrReq->bsSsu1En        = g_bSsuEn;
20006a41:	b15424        	insbits	a2, a4, 21, 21
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1223
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
20006a44:	e7f641        	l32r	a4, 20000a1c <_stext+0x31c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1224
    pWrReq->bsLbaChkEn      = g_bLbaChk;
20006a47:	272cb2        	l32i	a11, a12, 156
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1223
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
20006a4a:	102240        	and	a2, a2, a4
20006a4d:	202230        	or	a2, a2, a3
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1224
    pWrReq->bsLbaChkEn      = g_bLbaChk;
20006a50:	911b24        	insbits	a2, a11, 17, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1225
    pWrReq->bsTlcMode       = g_bTlcMode;
20006a53:	d3be24        	insbits	a2, a14, 27, 27
20006a56:	6129      	s32i.n	a2, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1229
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;

    if (FALSE != g_ErrInjEn)
20006a58:	0020c0        	memw
20006a5b:	112c92        	l32i	a9, a12, 68
20006a5e:	3c6916        	beqz	a9, 20006e28 <TEST_NfcErrStsInj..PCB_1482204275+0x4d4>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1232
    {
        pWrReq->bsInjErrEn = TRUE;
        pWrReq->pErrInj    = &g_tErrInj;
20006a61:	e7ea01        	l32r	a0, 20000a0c <_stext+0x30c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1231
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;

    if (FALSE != g_ErrInjEn)
    {
        pWrReq->bsInjErrEn = TRUE;
20006a64:	e7b9e1        	l32r	a14, 20000948 <_stext+0x248>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1232
        pWrReq->pErrInj    = &g_tErrInj;
20006a67:	0b6102        	s32i	a0, a1, 44
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1231
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;

    if (FALSE != g_ErrInjEn)
    {
        pWrReq->bsInjErrEn = TRUE;
20006a6a:	20e2e0        	or	a14, a2, a14
20006a6d:	0661e2        	s32i	a14, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1240
    {
        pWrReq->pErrInj = NULL;
    }

    /*  scramble disable    */
    if (g_bRawDataRead)
20006a70:	392c22        	l32i	a2, a12, 228
20006a73:	529c      	beqz.n	a2, 20006a8c <TEST_NfcErrStsInj..PCB_1482204275+0x138>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1243
    {
        volatile PG_CONF_REG *pNfcPgCfg = (volatile PG_CONF_REG *) &rNfcPgCfg;
        pNfcPgCfg->bsScrBps = TRUE;
20006a75:	850c      	movi.n	a5, 8
20006a77:	767c      	movi.n	a6, -9
20006a79:	e73d41        	l32r	a4, 20000770 <_stext+0x70>
20006a7c:	0020c0        	memw
20006a7f:	0438      	l32i.n	a3, a4, 0
20006a81:	103360        	and	a3, a3, a6
20006a84:	203350        	or	a3, a3, a5
20006a87:	0020c0        	memw
20006a8a:	0439      	s32i.n	a3, a4, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1941
    NFC_PRG_REQ_DES tWrReq = {0};
    U16 usPrgIndex;

    TEST_NfcWtCfgReqComm(&tWrReq);

    tFlashAddr.bsSLCMode = !g_bTlcMode;
20006a8c:	122182        	l32i	a8, a1, 72
20006a8f:	e72da1        	l32r	a10, 20000744 <_stext+0x44>
20006a92:	4198      	l32i.n	a9, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1943

    tFlashAddr.usBlock = g_usTestBlkStart;
20006a94:	132172        	l32i	a7, a1, 76
20006a97:	0a5172        	s16i	a7, a1, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1941
    NFC_PRG_REQ_DES tWrReq = {0};
    U16 usPrgIndex;

    TEST_NfcWtCfgReqComm(&tWrReq);

    tFlashAddr.bsSLCMode = !g_bTlcMode;
20006a9a:	1099a0        	and	a9, a9, a10
20006a9d:	208890        	or	a8, a8, a9
20006aa0:	4189      	s32i.n	a8, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1944

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
20006aa2:	0237d7        	bltu	a7, a13, 20006aa8 <TEST_NfcErrStsInj..PCB_1482204275+0x154>
20006aa5:	005dc6        	j	20006c20 <TEST_NfcErrStsInj..PCB_1482204275+0x2cc>
20006aa8:	d50c52        	l8ui	a5, a12, 213
20006aab:	e7ddd1        	l32r	a13, 20000a20 <_stext+0x320>
20006aae:	8e7c      	movi.n	a14, -8
20006ab0:	000506        	j	20006ac8 <TEST_NfcErrStsInj..PCB_1482204275+0x174>

20006ab3 <TEST_NfcErrStsInj..PCB_1482204275+0x15f>:
	...

20006ab4 <TEST_NfcErrStsInj..PCB_1482204275+0x160>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2030
                {
                    //DBG_Printf("Pu %d Block %d Page %d Write OK!\n",tFlashAddr.ucPU,tFlashAddr.usBlock,tFlashAddr.usPage);
                }
            }
        }
        tFlashAddr.usBlock++;
20006ab4:	0a11b2        	l16ui	a11, a1, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1944
    TEST_NfcWtCfgReqComm(&tWrReq);

    tFlashAddr.bsSLCMode = !g_bTlcMode;

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
20006ab7:	771c02        	l16ui	a0, a12, 238
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2030
                {
                    //DBG_Printf("Pu %d Block %d Page %d Write OK!\n",tFlashAddr.ucPU,tFlashAddr.usBlock,tFlashAddr.usPage);
                }
            }
        }
        tFlashAddr.usBlock++;
20006aba:	bb1b      	addi.n	a11, a11, 1
20006abc:	f4b0b0        	extui	a11, a11, 0, 16
20006abf:	0a51b2        	s16i	a11, a1, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1944
    TEST_NfcWtCfgReqComm(&tWrReq);

    tFlashAddr.bsSLCMode = !g_bTlcMode;

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
20006ac2:	023b07        	bltu	a11, a0, 20006ac8 <TEST_NfcErrStsInj..PCB_1482204275+0x174>
20006ac5:	0055c6        	j	20006c20 <TEST_NfcErrStsInj..PCB_1482204275+0x2cc>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1946
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
20006ac8:	d40c02        	l8ui	a0, a12, 212
20006acb:	104102        	s8i	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1947
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
20006ace:	023057        	bltu	a0, a5, 20006ad4 <TEST_NfcErrStsInj..PCB_1482204275+0x180>
20006ad1:	003dc6        	j	20006bcc <TEST_NfcErrStsInj..PCB_1482204275+0x278>
20006ad4:	d70c22        	l8ui	a2, a12, 215
20006ad7:	000546        	j	20006af0 <TEST_NfcErrStsInj..PCB_1482204275+0x19c>

20006ada <TEST_NfcErrStsInj..PCB_1482204275+0x186>:
	...

20006adc <TEST_NfcErrStsInj..PCB_1482204275+0x188>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1950
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20006adc:	d50c52        	l8ui	a5, a12, 213
20006adf:	100102        	l8ui	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2007
                    }
                    usPrgIndex++;
                }
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
20006ae2:	001b      	addi.n	a0, a0, 1
20006ae4:	740000        	extui	a0, a0, 0, 8
20006ae7:	104102        	s8i	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1947

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
20006aea:	023057        	bltu	a0, a5, 20006af0 <TEST_NfcErrStsInj..PCB_1482204275+0x19c>
20006aed:	003606        	j	20006bc9 <TEST_NfcErrStsInj..PCB_1482204275+0x275>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1949
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
20006af0:	d60c32        	l8ui	a3, a12, 214
20006af3:	114132        	s8i	a3, a1, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1950
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20006af6:	e8b327        	bgeu	a3, a2, 20006ae2 <TEST_NfcErrStsInj..PCB_1482204275+0x18e>
20006af9:	791c02        	l16ui	a0, a12, 242
20006afc:	000446        	j	20006b11 <TEST_NfcErrStsInj..PCB_1482204275+0x1bd>

20006aff <TEST_NfcErrStsInj..PCB_1482204275+0x1ab>:
	...

20006b00 <TEST_NfcErrStsInj..PCB_1482204275+0x1ac>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2005
                    {
                        DBG_Getch();
                    }
                    usPrgIndex++;
                }
                tFlashAddr.ucLun++;
20006b00:	110142        	l8ui	a4, a1, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1950
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20006b03:	d70c22        	l8ui	a2, a12, 215
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2005
                    {
                        DBG_Getch();
                    }
                    usPrgIndex++;
                }
                tFlashAddr.ucLun++;
20006b06:	441b      	addi.n	a4, a4, 1
20006b08:	744040        	extui	a4, a4, 0, 8
20006b0b:	114142        	s8i	a4, a1, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1950
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20006b0e:	cab427        	bgeu	a4, a2, 20006adc <TEST_NfcErrStsInj..PCB_1482204275+0x188>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1952
            {
                usPrgIndex = g_usTestPageStart;
20006b11:	781c52        	l16ui	a5, a12, 240
20006b14:	185152        	s16i	a5, a1, 48
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1953
                while (usPrgIndex < g_usTestPageEnd * PRG_CYC_CNT)
20006b17:	e5b507        	bgeu	a5, a0, 20006b00 <TEST_NfcErrStsInj..PCB_1482204275+0x1ac>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1955
                {
                    tFlashAddr.usPage = TEST_NfcWtGetPageAddr(&usPrgIndex);
20006b1a:	30c122        	addi	a2, a1, 48
20006b1d:	ffa845        	call0	200065a4 <TEST_NfcWtGetPageAddr..GBB_1482204275>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1958
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
20006b20:	791c02        	l16ui	a0, a12, 242
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1955
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
            {
                usPrgIndex = g_usTestPageStart;
                while (usPrgIndex < g_usTestPageEnd * PRG_CYC_CNT)
                {
                    tFlashAddr.usPage = TEST_NfcWtGetPageAddr(&usPrgIndex);
20006b23:	0b5122        	s16i	a2, a1, 22
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1958
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
20006b26:	d6b207        	bgeu	a2, a0, 20006b00 <TEST_NfcErrStsInj..PCB_1482204275+0x1ac>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
20006b29:	362c62        	l32i	a6, a12, 216
20006b2c:	ac48      	l32i.n	a4, a12, 40
20006b2e:	110132        	l8ui	a3, a1, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1960
                    tFlashAddr.usPage = TEST_NfcWtGetPageAddr(&usPrgIndex);
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
                    }
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
20006b31:	6178      	l32i.n	a7, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1961
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
20006b33:	a158      	l32i.n	a5, a1, 40
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
20006b35:	100102        	l8ui	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1961
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
                    }
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
20006b38:	1055e0        	and	a5, a5, a14
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
20006b3b:	8020f0        	add	a2, a0, a15
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1960
                    tFlashAddr.usPage = TEST_NfcWtGetPageAddr(&usPrgIndex);
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
                    }
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
20006b3e:	1077d0        	and	a7, a7, a13
20006b41:	066172        	s32i	a7, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
20006b44:	800222        	l8ui	a2, a2, 128
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1961
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
                    }
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
20006b47:	0a6152        	s32i	a5, a1, 40
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
20006b4a:	a02230        	addx4	a2, a2, a3
20006b4d:	a02240        	addx4	a2, a2, a4
20006b50:	06d616        	beqz	a6, 20006bc1 <TEST_NfcErrStsInj..PCB_1482204275+0x26d>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:536
    20151029    abby     modify to meet VT3533 
------------------------------------------------------------------------------*/
U8 HAL_NfcGetRP(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20006b53:	0020c0        	memw
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:528
    {
        return 0;
    }
    
    //MixVector only support 512 offset for SSUx in one MCU
    return GET_CMD_LEVEL(pFlashAddr->ucPU,pFlashAddr->ucLun,pFlashAddr->bsPln
20006b56:	1160e0        	slli	a6, a0, 2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:536
20006b59:	000202        	l8ui	a0, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:528
20006b5c:	206360        	or	a6, a3, a6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:536
20006b5f:	140400        	extui	a0, a0, 4, 2
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:528
20006b62:	e32604        	insbits	a0, a6, 2, 31
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1965
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
                
                    TEST_NfcWtDummyDataPrepare(&tFlashAddr, &tWrReq);
                    
                    tWrReq.bsSsu0Addr   = TEST_GetOffset(&tFlashAddr);
20006b65:	0e5102        	s16i	a0, a1, 28
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1966
                    tWrReq.bsSsu1Addr   = tWrReq.bsSsu0Addr + 0x400;
20006b68:	f48000        	extui	a8, a0, 0, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1967
                    tWrReq.bsCsAddrOff  = tWrReq.bsSsu0Addr;
20006b6b:	086182        	s32i	a8, a1, 32
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1966
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
                
                    TEST_NfcWtDummyDataPrepare(&tFlashAddr, &tWrReq);
                    
                    tWrReq.bsSsu0Addr   = TEST_GetOffset(&tFlashAddr);
                    tWrReq.bsSsu1Addr   = tWrReq.bsSsu0Addr + 0x400;
20006b6e:	04d882        	addmi	a8, a8, 0x400
20006b71:	0f5182        	s16i	a8, a1, 30
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetFull(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20006b74:	0020c0        	memw
20006b77:	000272        	l8ui	a7, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1968
                    tWrReq.bsCsAddrOff  = tWrReq.bsSsu0Addr;
                    while(TRUE == HAL_NfcGetFull(tFlashAddr.ucPU, tFlashAddr.ucLun))
20006b7a:	0e6737        	bbci	a7, 3, 20006b8c <TEST_NfcErrStsInj..PCB_1482204275+0x238>
20006b7d:	088076        	loop	a0, 20006b89 <TEST_NfcErrStsInj..PCB_1482204275+0x235>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
20006b80:	0020c0        	memw
20006b83:	000292        	l8ui	a9, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1968
20006b86:	026937        	bbci	a9, 3, 20006b8c <TEST_NfcErrStsInj..PCB_1482204275+0x238>

20006b89 <TEST_NfcErrStsInj..PCB_1482204275+0x235>:
20006b89:	fffc06        	j	20006b7d <TEST_NfcErrStsInj..PCB_1482204275+0x229>

20006b8c <TEST_NfcErrStsInj..PCB_1482204275+0x238>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1981
                            HAL_NfcSinglePlaneWrite(&tFlashAddr, &tWrReq);
                        }break;

                        case FULL_PAGE_WRITE :
                        {                        
                             HAL_NfcFullPageWrite(&tFlashAddr, &tWrReq);
20006b8c:	10c122        	addi	a2, a1, 16
20006b8f:	18c132        	addi	a3, a1, 24
20006b92:	e7ab01        	l32r	a0, 20000a40 <_stext+0x340>
20006b95:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1999
                        }break;

                    }//end switch
                    
                    /* check status of NFC CMD REG and DEC SRAM */
                    if (SUCCESS != TEST_NfcWtStsChk(&tFlashAddr, &tWrReq))
20006b98:	10c122        	addi	a2, a1, 16
20006b9b:	18c132        	addi	a3, a1, 24
20006b9e:	ff8bc5        	call0	2000645c <TEST_NfcWtStsChk..JBB_1482204275>
20006ba1:	051226        	beqi	a2, 1, 20006baa <TEST_NfcErrStsInj..PCB_1482204275+0x256>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2001
                    {
                        DBG_Getch();
20006ba4:	e6dd01        	l32r	a0, 20000718 <_stext+0x18>
20006ba7:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2003
                    }
                    usPrgIndex++;
20006baa:	1811a2        	l16ui	a10, a1, 48
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1953
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
            {
                usPrgIndex = g_usTestPageStart;
                while (usPrgIndex < g_usTestPageEnd * PRG_CYC_CNT)
20006bad:	791c02        	l16ui	a0, a12, 242
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2003
                    /* check status of NFC CMD REG and DEC SRAM */
                    if (SUCCESS != TEST_NfcWtStsChk(&tFlashAddr, &tWrReq))
                    {
                        DBG_Getch();
                    }
                    usPrgIndex++;
20006bb0:	aa1b      	addi.n	a10, a10, 1
20006bb2:	f4a0a0        	extui	a10, a10, 0, 16
20006bb5:	1851a2        	s16i	a10, a1, 48
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1953
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
            {
                usPrgIndex = g_usTestPageStart;
                while (usPrgIndex < g_usTestPageEnd * PRG_CYC_CNT)
20006bb8:	02ba07        	bgeu	a10, a0, 20006bbe <TEST_NfcErrStsInj..PCB_1482204275+0x26a>
20006bbb:	ffd6c6        	j	20006b1a <TEST_NfcErrStsInj..PCB_1482204275+0x1c6>
20006bbe:	ffcf86        	j	20006b00 <TEST_NfcErrStsInj..PCB_1482204275+0x1ac>

20006bc1 <TEST_NfcErrStsInj..PCB_1482204275+0x26d>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
20006bc1:	000c      	movi.n	a0, 0
20006bc3:	ffe786        	j	20006b65 <TEST_NfcErrStsInj..PCB_1482204275+0x211>

20006bc6 <TEST_NfcErrStsInj..PCB_1482204275+0x272>:
20006bc6:	000000                                        ...

20006bc9 <TEST_NfcErrStsInj..PCB_1482204275+0x275>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1947

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
20006bc9:	d40c02        	l8ui	a0, a12, 212
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2010
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
        }
        /*  check nfc status by LUN as the basic unit  */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
20006bcc:	104102        	s8i	a0, a1, 16
20006bcf:	023057        	bltu	a0, a5, 20006bd5 <TEST_NfcErrStsInj..PCB_1482204275+0x281>
20006bd2:	ffb786        	j	20006ab4 <TEST_NfcErrStsInj..PCB_1482204275+0x160>
20006bd5:	d70c22        	l8ui	a2, a12, 215
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2012
        {
            for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20006bd8:	d60c32        	l8ui	a3, a12, 214
20006bdb:	114132        	s8i	a3, a1, 17
20006bde:	2eb327        	bgeu	a3, a2, 20006c10 <TEST_NfcErrStsInj..PCB_1482204275+0x2bc>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2014
            {
                if(NFC_STATUS_SUCCESS != HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun))
20006be1:	100122        	l8ui	a2, a1, 16
20006be4:	003245        	call0	20006f0c <HAL_NfcWaitStatus>
20006be7:	0e1226        	beqi	a2, 1, 20006bf9 <TEST_NfcErrStsInj..PCB_1482204275+0x2a5>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2016
                {
                    DBG_Printf("Pu %d Block %d Page %d Write Fail!\n",tFlashAddr.ucPU,tFlashAddr.usBlock,tFlashAddr.usPage);
20006bea:	e78e21        	l32r	a2, 20000a24 <_stext+0x324>
20006bed:	100132        	l8ui	a3, a1, 16
20006bf0:	0a1142        	l16ui	a4, a1, 20
20006bf3:	0b1152        	l16ui	a5, a1, 22
20006bf6:	0406c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2012
            tFlashAddr.ucPU++;
        }
        /*  check nfc status by LUN as the basic unit  */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
        {
            for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20006bf9:	110132        	l8ui	a3, a1, 17
20006bfc:	d70c22        	l8ui	a2, a12, 215
20006bff:	331b      	addi.n	a3, a3, 1
20006c01:	743030        	extui	a3, a3, 0, 8
20006c04:	114132        	s8i	a3, a1, 17
20006c07:	d63327        	bltu	a3, a2, 20006be1 <TEST_NfcErrStsInj..PCB_1482204275+0x28d>
20006c0a:	d50c52        	l8ui	a5, a12, 213
20006c0d:	100102        	l8ui	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2010
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
        }
        /*  check nfc status by LUN as the basic unit  */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
20006c10:	001b      	addi.n	a0, a0, 1
20006c12:	740000        	extui	a0, a0, 0, 8
20006c15:	104102        	s8i	a0, a1, 16
20006c18:	bc3057        	bltu	a0, a5, 20006bd8 <TEST_NfcErrStsInj..PCB_1482204275+0x284>
20006c1b:	ffa546        	j	20006ab4 <TEST_NfcErrStsInj..PCB_1482204275+0x160>

20006c1e <TEST_NfcErrStsInj..PCB_1482204275+0x2ca>:
	...

20006c20 <TEST_NfcErrStsInj..PCB_1482204275+0x2cc>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2987
    g_tErrInj.bsInjErrSts = TEST_PRG_FAIL_STS;//program fail 

    TEST_NfcWriteAll(FULL_PAGE_WRITE);

    /* disable error injection and error status injection  */
    g_ErrInjEn = FALSE;
20006c20:	0020c0        	memw
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2990
    g_tErrInj.bsInjErrSts = 0;
    
    return;
20006c23:	d108      	l32i.n	a0, a1, 52
20006c25:	f1d8      	l32i.n	a13, a1, 60
20006c27:	1021e2        	l32i	a14, a1, 64
20006c2a:	1121f2        	l32i	a15, a1, 68
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2987
    g_tErrInj.bsInjErrSts = TEST_PRG_FAIL_STS;//program fail 

    TEST_NfcWriteAll(FULL_PAGE_WRITE);

    /* disable error injection and error status injection  */
    g_ErrInjEn = FALSE;
20006c2d:	020c      	movi.n	a2, 0
20006c2f:	116c22        	s32i	a2, a12, 68
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2988
    g_tErrInj.bsInjErrSts = 0;
20006c32:	4b4c22        	s8i	a2, a12, 75
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2990
    
    return;
20006c35:	e1c8      	l32i.n	a12, a1, 56
20006c37:	60c112        	addi	a1, a1, 96
20006c3a:	f00d      	ret.n

20006c3c <TEST_NfcErrStsInj..PCB_1482204275+0x2e8>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
20006c3c:	e6b8d1        	l32r	a13, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1916
                {
                    //DBG_Printf("PU%d LUN %d BLK%d Erase OK!\n", tFlashAddr.ucPU, tFlashAddr.ucLun, tFlashAddr.usBlock);
                }
            }
        }
        tFlashAddr.usBlock++;
20006c3f:	021132        	l16ui	a3, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
20006c42:	572de2        	l32i	a14, a13, 0x15c
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1916
                {
                    //DBG_Printf("PU%d LUN %d BLK%d Erase OK!\n", tFlashAddr.ucPU, tFlashAddr.ucLun, tFlashAddr.usBlock);
                }
            }
        }
        tFlashAddr.usBlock++;
20006c45:	331b      	addi.n	a3, a3, 1
20006c47:	f43030        	extui	a3, a3, 0, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
20006c4a:	df1dd2        	l16ui	a13, a13, 0x1be
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1916
                {
                    //DBG_Printf("PU%d LUN %d BLK%d Erase OK!\n", tFlashAddr.ucPU, tFlashAddr.ucLun, tFlashAddr.usBlock);
                }
            }
        }
        tFlashAddr.usBlock++;
20006c4d:	025132        	s16i	a3, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
20006c50:	0233d7        	bltu	a3, a13, 20006c56 <TEST_NfcErrStsInj..PCB_1482204275+0x302>
20006c53:	ff55c6        	j	200069ae <TEST_NfcErrStsInj..PCB_1482204275+0x5a>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:238
}

//for im 3d tlc slc/tlc mode switch
BOOL TEST_NfcSwitchFlashMode(U8 ucPU)
{
    FLASH_ADDR tFlashAddr = {0};
20006c56:	218b      	addi.n	a2, a1, 8
20006c58:	e77431        	l32r	a3, 20000a28 <_stext+0x328>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:247
    tFlashAddr.ucPU = ucPU;
    
    /* step1: set feature, User Selectable Trim Profile, 85h/03h data, 00-2-pass MLC;01-1-pass MLC;03-TLC */
    ucAddr = 0x91;
#ifdef SWITCH_MODE_DADF
    ulData = g_bTlcMode ? 0x104 : 0x100;
20006c5b:	04a102        	movi	a0, 0x104
20006c5e:	00a1d2        	movi	a13, 0x100
20006c61:	93d0e0        	movnez	a13, a0, a14
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:238
}

//for im 3d tlc slc/tlc mode switch
BOOL TEST_NfcSwitchFlashMode(U8 ucPU)
{
    FLASH_ADDR tFlashAddr = {0};
20006c64:	1348      	l32i.n	a4, a3, 4
20006c66:	1249      	s32i.n	a4, a2, 4
20006c68:	0338      	l32i.n	a3, a3, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1875
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
20006c6a:	d40ce2        	l8ui	a14, a12, 212
20006c6d:	0041e2        	s8i	a14, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:238
20006c70:	0239      	s32i.n	a3, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:251
#ifdef SWITCH_MODE_DADF
    ulData = g_bTlcMode ? 0x104 : 0x100;
#else
    ulData = g_bTlcMode ? 0x004 : 0x000;
#endif
    HAL_NfcSetFeature(&tFlashAddr, ulData, ucAddr);
20006c72:	91a042        	movi	a4, 145
20006c75:	0d3d      	mov.n	a3, a13
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:242
{
    FLASH_ADDR tFlashAddr = {0};
    U8 ucAddr;
    U32 ulData;
    
    tFlashAddr.ucPU = ucPU;
20006c77:	0841e2        	s8i	a14, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:251
#ifdef SWITCH_MODE_DADF
    ulData = g_bTlcMode ? 0x104 : 0x100;
#else
    ulData = g_bTlcMode ? 0x004 : 0x000;
#endif
    HAL_NfcSetFeature(&tFlashAddr, ulData, ucAddr);
20006c7a:	e77201        	l32r	a0, 20000a44 <_stext+0x344>
20006c7d:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20006c80:	090132        	l8ui	a3, a1, 9
20006c83:	e6a641        	l32r	a4, 2000071c <_stext+0x1c>
20006c86:	2efa      	add.n	a2, a14, a15
20006c88:	800222        	l8ui	a2, a2, 128
20006c8b:	3e2442        	l32i	a4, a4, 248
20006c8e:	a02230        	addx4	a2, a2, a3
20006c91:	a02240        	addx4	a2, a2, a4
20006c94:	0020c0        	memw
20006c97:	000252        	l8ui	a5, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
20006c9a:	0ee507        	bbsi	a5, 0, 20006cac <TEST_NfcErrStsInj..PCB_1482204275+0x358>
20006c9d:	088076        	loop	a0, 20006ca9 <TEST_NfcErrStsInj..PCB_1482204275+0x355>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20006ca0:	0020c0        	memw
20006ca3:	000242        	l8ui	a4, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
20006ca6:	02e407        	bbsi	a4, 0, 20006cac <TEST_NfcErrStsInj..PCB_1482204275+0x358>

20006ca9 <TEST_NfcErrStsInj..PCB_1482204275+0x355>:
20006ca9:	fffc06        	j	20006c9d <TEST_NfcErrStsInj..PCB_1482204275+0x349>

20006cac <TEST_NfcErrStsInj..PCB_1482204275+0x358>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1106
    {
        ;
    }

    if (TRUE == HAL_NfcGetErrHold(ucPU, ucLun))
20006cac:	202ee0        	or	a2, a14, a14
20006caf:	fda405        	call0	200046f0 <HAL_NfcGetErrHold>
20006cb2:	0e1266        	bnei	a2, 1, 20006cc4 <TEST_NfcErrStsInj..PCB_1482204275+0x370>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:254
    if (NFC_STATUS_SUCCESS != HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun))
    {
        DBG_Printf("set feature fail PU:%d Addr0x%x Data0x%x\n", tFlashAddr.ucPU, ucAddr, ulData);
20006cb5:	e75d21        	l32r	a2, 20000a2c <_stext+0x32c>
20006cb8:	080132        	l8ui	a3, a1, 8
20006cbb:	91a042        	movi	a4, 145
20006cbe:	205dd0        	or	a5, a13, a13
20006cc1:	03fa05        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:256
    }
    DBG_Printf("set feature OK PU:%d Addr0x%x Data0x%x\n", tFlashAddr.ucPU, ucAddr, ulData);
20006cc4:	205dd0        	or	a5, a13, a13
20006cc7:	e75a21        	l32r	a2, 20000a30 <_stext+0x330>
20006cca:	080132        	l8ui	a3, a1, 8
20006ccd:	91a042        	movi	a4, 145
20006cd0:	03f905        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:259
    
    /* step2: sync reset to make flash reload trim file from ROM block */
    HAL_NfcSyncResetFlash(&tFlashAddr);
20006cd3:	08c122        	addi	a2, a1, 8
20006cd6:	e75c01        	l32r	a0, 20000a48 <_stext+0x348>
20006cd9:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20006cdc:	090132        	l8ui	a3, a1, 9
20006cdf:	0801e2        	l8ui	a14, a1, 8
20006ce2:	e68e41        	l32r	a4, 2000071c <_stext+0x1c>
20006ce5:	802ef0        	add	a2, a14, a15
20006ce8:	800222        	l8ui	a2, a2, 128
20006ceb:	3e2442        	l32i	a4, a4, 248
20006cee:	a02230        	addx4	a2, a2, a3
20006cf1:	a02240        	addx4	a2, a2, a4
20006cf4:	0020c0        	memw
20006cf7:	000252        	l8ui	a5, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
20006cfa:	0ee507        	bbsi	a5, 0, 20006d0c <TEST_NfcErrStsInj..PCB_1482204275+0x3b8>
20006cfd:	088076        	loop	a0, 20006d09 <TEST_NfcErrStsInj..PCB_1482204275+0x3b5>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20006d00:	0020c0        	memw
20006d03:	000242        	l8ui	a4, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
20006d06:	02e407        	bbsi	a4, 0, 20006d0c <TEST_NfcErrStsInj..PCB_1482204275+0x3b8>

20006d09 <TEST_NfcErrStsInj..PCB_1482204275+0x3b5>:
20006d09:	fffc06        	j	20006cfd <TEST_NfcErrStsInj..PCB_1482204275+0x3a9>

20006d0c <TEST_NfcErrStsInj..PCB_1482204275+0x3b8>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1106
    {
        ;
    }

    if (TRUE == HAL_NfcGetErrHold(ucPU, ucLun))
20006d0c:	202ee0        	or	a2, a14, a14
20006d0f:	fd9e05        	call0	200046f0 <HAL_NfcGetErrHold>
20006d12:	081266        	bnei	a2, 1, 20006d1e <TEST_NfcErrStsInj..PCB_1482204275+0x3ca>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:262
    if (NFC_STATUS_SUCCESS != HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun))
    {
        DBG_Printf("SYNC Reset PU:%d fail!\n", tFlashAddr.ucPU);
20006d15:	e74721        	l32r	a2, 20000a34 <_stext+0x334>
20006d18:	080132        	l8ui	a3, a1, 8
20006d1b:	03f485        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:264
    }
    DBG_Printf("SYNC Reset PU:%d OK!\n", tFlashAddr.ucPU);
20006d1e:	e74621        	l32r	a2, 20000a38 <_stext+0x338>
20006d21:	080132        	l8ui	a3, a1, 8
20006d24:	03f3c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1879
    #ifdef FLASH_INTEL_3DTLC
        TEST_NfcSwitchFlashMode(tFlashAddr.ucPU);
    #endif
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
20006d27:	d50c52        	l8ui	a5, a12, 213
20006d2a:	000102        	l8ui	a0, a1, 0
20006d2d:	023057        	bltu	a0, a5, 20006d33 <TEST_NfcErrStsInj..PCB_1482204275+0x3df>
20006d30:	002446        	j	20006dc5 <TEST_NfcErrStsInj..PCB_1482204275+0x471>
20006d33:	d70c22        	l8ui	a2, a12, 215
20006d36:	000406        	j	20006d4a <TEST_NfcErrStsInj..PCB_1482204275+0x3f6>

20006d39 <TEST_NfcErrStsInj..PCB_1482204275+0x3e5>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1882
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20006d39:	d50c52        	l8ui	a5, a12, 213
20006d3c:	152102        	l32i	a0, a1, 84
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1898
                {
                    HAL_NfcFullBlockErase(&tFlashAddr, g_bTlcMode);
                }
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
20006d3f:	001b      	addi.n	a0, a0, 1
20006d41:	740000        	extui	a0, a0, 0, 8
20006d44:	004102        	s8i	a0, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1879
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
    #ifdef FLASH_INTEL_3DTLC
        TEST_NfcSwitchFlashMode(tFlashAddr.ucPU);
    #endif
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
20006d47:	7ab057        	bgeu	a0, a5, 20006dc5 <TEST_NfcErrStsInj..PCB_1482204275+0x471>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1881
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
20006d4a:	d60cd2        	l8ui	a13, a12, 214
20006d4d:	0141d2        	s8i	a13, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1882
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20006d50:	ebbd27        	bgeu	a13, a2, 20006d3f <TEST_NfcErrStsInj..PCB_1482204275+0x3eb>
20006d53:	156102        	s32i	a0, a1, 84
20006d56:	742000        	extui	a2, a0, 0, 8
20006d59:	2f2a      	add.n	a2, a15, a2
20006d5b:	146122        	s32i	a2, a1, 80
20006d5e:	000986        	j	20006d88 <TEST_NfcErrStsInj..PCB_1482204275+0x434>

20006d61 <TEST_NfcErrStsInj..PCB_1482204275+0x40d>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1888
            {
                while(TRUE == HAL_NfcGetFull(tFlashAddr.ucPU, tFlashAddr.ucLun))
                {
                    ;
                }
                if(TRUE == g_bSinglePln)
20006d61:	232ce2        	l32i	a14, a12, 140
20006d64:	0020c0        	memw
20006d67:	292c32        	l32i	a3, a12, 164
20006d6a:	481326        	beqi	a3, 1, 20006db6 <TEST_NfcErrStsInj..PCB_1482204275+0x462>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1894
                {
                    HAL_NfcSingleBlockErase(&tFlashAddr, g_bTlcMode);
                }
                else
                {
                    HAL_NfcFullBlockErase(&tFlashAddr, g_bTlcMode);
20006d6d:	203ee0        	or	a3, a14, a14
20006d70:	202110        	or	a2, a1, a1
20006d73:	e73601        	l32r	a0, 20000a4c <_stext+0x34c>
20006d76:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1882
        TEST_NfcSwitchFlashMode(tFlashAddr.ucPU);
    #endif
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20006d79:	d70c22        	l8ui	a2, a12, 215
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1896
                }
                else
                {
                    HAL_NfcFullBlockErase(&tFlashAddr, g_bTlcMode);
                }
                tFlashAddr.ucLun++;
20006d7c:	01cdd2        	addi	a13, a13, 1
20006d7f:	74d0d0        	extui	a13, a13, 0, 8
20006d82:	0141d2        	s8i	a13, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1882
        TEST_NfcSwitchFlashMode(tFlashAddr.ucPU);
    #endif
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20006d85:	b0bd27        	bgeu	a13, a2, 20006d39 <TEST_NfcErrStsInj..PCB_1482204275+0x3e5>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetFull(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20006d88:	142122        	l32i	a2, a1, 80
20006d8b:	ac38      	l32i.n	a3, a12, 40
20006d8d:	800222        	l8ui	a2, a2, 128
20006d90:	7440d0        	extui	a4, a13, 0, 8
20006d93:	a02240        	addx4	a2, a2, a4
20006d96:	a02230        	addx4	a2, a2, a3
20006d99:	0020c0        	memw
20006d9c:	0002e2        	l8ui	a14, a2, 0
20006d9f:	0020f0        	nop
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1884
            {
                while(TRUE == HAL_NfcGetFull(tFlashAddr.ucPU, tFlashAddr.ucLun))
20006da2:	bb6e37        	bbci	a14, 3, 20006d61 <TEST_NfcErrStsInj..PCB_1482204275+0x40d>
20006da5:	088076        	loop	a0, 20006db1 <TEST_NfcErrStsInj..PCB_1482204275+0x45d>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
20006da8:	0020c0        	memw
20006dab:	000232        	l8ui	a3, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1884
20006dae:	af6337        	bbci	a3, 3, 20006d61 <TEST_NfcErrStsInj..PCB_1482204275+0x40d>

20006db1 <TEST_NfcErrStsInj..PCB_1482204275+0x45d>:
20006db1:	fffc06        	j	20006da5 <TEST_NfcErrStsInj..PCB_1482204275+0x451>

20006db4 <TEST_NfcErrStsInj..PCB_1482204275+0x460>:
	...

20006db6 <TEST_NfcErrStsInj..PCB_1482204275+0x462>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1890
                {
                    ;
                }
                if(TRUE == g_bSinglePln)
                {
                    HAL_NfcSingleBlockErase(&tFlashAddr, g_bTlcMode);
20006db6:	0e3d      	mov.n	a3, a14
20006db8:	012d      	mov.n	a2, a1
20006dba:	e72501        	l32r	a0, 20000a50 <_stext+0x350>
20006dbd:	0000c0        	callx0	a0
20006dc0:	ffed46        	j	20006d79 <TEST_NfcErrStsInj..PCB_1482204275+0x425>

20006dc3 <TEST_NfcErrStsInj..PCB_1482204275+0x46f>:
	...

20006dc5 <TEST_NfcErrStsInj..PCB_1482204275+0x471>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1901
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
        }
        /*    check nfc status by LUN as the basic unit    */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
20006dc5:	d40c02        	l8ui	a0, a12, 212
20006dc8:	004102        	s8i	a0, a1, 0
20006dcb:	023057        	bltu	a0, a5, 20006dd1 <TEST_NfcErrStsInj..PCB_1482204275+0x47d>
20006dce:	ff9a86        	j	20006c3c <TEST_NfcErrStsInj..PCB_1482204275+0x2e8>
20006dd1:	d70c22        	l8ui	a2, a12, 215
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1903
        {
            for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20006dd4:	d60cd2        	l8ui	a13, a12, 214
20006dd7:	0141d2        	s8i	a13, a1, 1
20006dda:	3bbd27        	bgeu	a13, a2, 20006e19 <TEST_NfcErrStsInj..PCB_1482204275+0x4c5>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1905
            {
                if(NFC_STATUS_SUCCESS != HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun))
20006ddd:	203dd0        	or	a3, a13, a13
20006de0:	000122        	l8ui	a2, a1, 0
20006de3:	001285        	call0	20006f0c <HAL_NfcWaitStatus>
20006de6:	171226        	beqi	a2, 1, 20006e01 <TEST_NfcErrStsInj..PCB_1482204275+0x4ad>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1907
                {
                    DBG_Printf("PU%d LUN %d BLK%d Erase Fail!\n", tFlashAddr.ucPU, tFlashAddr.ucLun, tFlashAddr.usBlock);
20006de9:	e71421        	l32r	a2, 20000a3c <_stext+0x33c>
20006dec:	000132        	l8ui	a3, a1, 0
20006def:	010142        	l8ui	a4, a1, 1
20006df2:	021152        	l16ui	a5, a1, 4
20006df5:	03e6c5        	call0	2000ac64 <dbg_printf>
20006df8:	202110        	or	a2, a1, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1908
                    HAL_NfcResetLun(&tFlashAddr);//error handle, otherwise program other blk also will be fail
20006dfb:	e71601        	l32r	a0, 20000a54 <_stext+0x354>
20006dfe:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1903
            tFlashAddr.ucPU++;
        }
        /*    check nfc status by LUN as the basic unit    */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
        {
            for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20006e01:	0101d2        	l8ui	a13, a1, 1
20006e04:	d70c22        	l8ui	a2, a12, 215
20006e07:	01cdd2        	addi	a13, a13, 1
20006e0a:	74d0d0        	extui	a13, a13, 0, 8
20006e0d:	0141d2        	s8i	a13, a1, 1
20006e10:	c93d27        	bltu	a13, a2, 20006ddd <TEST_NfcErrStsInj..PCB_1482204275+0x489>
20006e13:	000102        	l8ui	a0, a1, 0
20006e16:	d50c52        	l8ui	a5, a12, 213
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1901
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
        }
        /*    check nfc status by LUN as the basic unit    */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
20006e19:	001b      	addi.n	a0, a0, 1
20006e1b:	740000        	extui	a0, a0, 0, 8
20006e1e:	004102        	s8i	a0, a1, 0
20006e21:	af3057        	bltu	a0, a5, 20006dd4 <TEST_NfcErrStsInj..PCB_1482204275+0x480>
20006e24:	ff8506        	j	20006c3c <TEST_NfcErrStsInj..PCB_1482204275+0x2e8>

20006e27 <TEST_NfcErrStsInj..PCB_1482204275+0x4d3>:
	...

20006e28 <TEST_NfcErrStsInj..PCB_1482204275+0x4d4>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1236
        pWrReq->bsInjErrEn = TRUE;
        pWrReq->pErrInj    = &g_tErrInj;
    }
    else
    {
        pWrReq->pErrInj = NULL;
20006e28:	020c      	movi.n	a2, 0
20006e2a:	b129      	s32i.n	a2, a1, 44
20006e2c:	ff1006        	j	20006a70 <TEST_NfcErrStsInj..PCB_1482204275+0x11c>

20006e2f <TEST_NfcErrStsInj..PCB_1482204275+0x4db>:
	...

20006e30 <TEST_NfcErrTypeInj..OCB_1482204275>:
TEST_NfcErrTypeInj():
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2919

Purpose   : test error type report
Reference :
****************************************************************************/
LOCAL void TEST_NfcErrTypeInj(void)
{
20006e30:	e0c112        	addi	a1, a1, -32
20006e33:	0109      	s32i.n	a0, a1, 0
20006e35:	31e9      	s32i.n	a14, a1, 12
20006e37:	21d9      	s32i.n	a13, a1, 8
20006e39:	11c9      	s32i.n	a12, a1, 4
20006e3b:	41f9      	s32i.n	a15, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2924
    U8 ucErrType;
    FLASH_ADDR tFlashAddr = {0};

    /*  enable error injection  */
    g_ErrInjEn = TRUE;
20006e3d:	140c      	movi.n	a4, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2919

Purpose   : test error type report
Reference :
****************************************************************************/
LOCAL void TEST_NfcErrTypeInj(void)
{
20006e3f:	e706f1        	l32r	a15, 20000a58 <_stext+0x358>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2924
    U8 ucErrType;
    FLASH_ADDR tFlashAddr = {0};

    /*  enable error injection  */
    g_ErrInjEn = TRUE;
20006e42:	0020c0        	memw
20006e45:	df49      	s32i.n	a4, a15, 52
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2927

    /* Error type injection  */
    for(ucErrType = 0; ucErrType < 11; ucErrType++)
20006e47:	0e0c      	movi.n	a14, 0
20006e49:	0002c6        	j	20006e58 <TEST_NfcErrTypeInj..OCB_1482204275+0x28>

20006e4c <TEST_NfcErrTypeInj..OCB_1482204275+0x1c>:
	...

20006e4e <TEST_NfcErrTypeInj..OCB_1482204275+0x1e>:
20006e4e:	b50c      	movi.n	a5, 11
20006e50:	ee1b      	addi.n	a14, a14, 1
20006e52:	74e0e0        	extui	a14, a14, 0, 8
20006e55:	781e57        	beq	a14, a5, 20006ed1 <TEST_NfcErrTypeInj..OCB_1482204275+0xa1>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2931
    {
        if ((6 == ucErrType) || (9 == ucErrType))
        {
            continue;
20006e58:	f26e26        	beqi	a14, 6, 20006e4e <TEST_NfcErrTypeInj..OCB_1482204275+0x1e>
20006e5b:	900c      	movi.n	a0, 9
20006e5d:	ed1e07        	beq	a14, a0, 20006e4e <TEST_NfcErrTypeInj..OCB_1482204275+0x1e>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2933
        }
        g_tErrInj.bsInjErrType = ucErrType;
20006e60:	0f2f22        	l32i	a2, a15, 60
20006e63:	030e24        	insbits	a2, a14, 0, 3
20006e66:	0f6f22        	s32i	a2, a15, 60
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2934
        TEST_NfcEraseAll();
20006e69:	007dc5        	call0	20007648 <TEST_NfcEraseAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2936
        /* Check error type */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
20006e6c:	c50f22        	l8ui	a2, a15, 197
20006e6f:	c40fd2        	l8ui	a13, a15, 196
20006e72:	d8bd27        	bgeu	a13, a2, 20006e4e <TEST_NfcErrTypeInj..OCB_1482204275+0x1e>
20006e75:	c70f02        	l8ui	a0, a15, 199
20006e78:	000206        	j	20006e84 <TEST_NfcErrTypeInj..OCB_1482204275+0x54>

20006e7b <TEST_NfcErrTypeInj..OCB_1482204275+0x4b>:
	...

20006e7c <TEST_NfcErrTypeInj..OCB_1482204275+0x4c>:
20006e7c:	dd1b      	addi.n	a13, a13, 1
20006e7e:	74d0d0        	extui	a13, a13, 0, 8
20006e81:	c9bd27        	bgeu	a13, a2, 20006e4e <TEST_NfcErrTypeInj..OCB_1482204275+0x1e>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2938
        {
            for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20006e84:	c60fc2        	l8ui	a12, a15, 198
20006e87:	f1bc07        	bgeu	a12, a0, 20006e7c <TEST_NfcErrTypeInj..OCB_1482204275+0x4c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2940
            {
                if (HAL_NfcGetErrCode(tFlashAddr.ucPU, tFlashAddr.ucLun) != ucErrType)
20006e8a:	0d2d      	mov.n	a2, a13
20006e8c:	0c3d      	mov.n	a3, a12
20006e8e:	ff8f45        	call0	20006784 <HAL_NfcGetErrCode>
20006e91:	1712e7        	beq	a2, a14, 20006eac <TEST_NfcErrTypeInj..OCB_1482204275+0x7c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2942
                {
                    DBG_Printf("PU%d LUN%d Erase Inject Error Type:%d Actual Error Code:%d\n"
20006e94:	0d2d      	mov.n	a2, a13
20006e96:	0c3d      	mov.n	a3, a12
20006e98:	ff8e85        	call0	20006784 <HAL_NfcGetErrCode>
20006e9b:	0d3d      	mov.n	a3, a13
20006e9d:	0c4d      	mov.n	a4, a12
20006e9f:	026d      	mov.n	a6, a2
20006ea1:	0e5d      	mov.n	a5, a14
20006ea3:	e6ee21        	l32r	a2, 20000a5c <_stext+0x35c>
20006ea6:	03dbc5        	call0	2000ac64 <dbg_printf>
20006ea9:	0004c6        	j	20006ec0 <TEST_NfcErrTypeInj..OCB_1482204275+0x90>

20006eac <TEST_NfcErrTypeInj..OCB_1482204275+0x7c>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2948
                    ,tFlashAddr.ucPU,tFlashAddr.ucLun,ucErrType,HAL_NfcGetErrCode(tFlashAddr.ucPU,tFlashAddr.ucLun));
                    //NFC_GETCH;
                }
                else//clr error
                {
                    HAL_NfcResetCmdQue(tFlashAddr.ucPU,tFlashAddr.ucLun);
20006eac:	0d2d      	mov.n	a2, a13
20006eae:	0c3d      	mov.n	a3, a12
20006eb0:	e6be01        	l32r	a0, 200009a8 <_stext+0x2a8>
20006eb3:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2949
                    HAL_NfcClearINTSts(tFlashAddr.ucPU,tFlashAddr.ucLun);
20006eb6:	0d2d      	mov.n	a2, a13
20006eb8:	0c3d      	mov.n	a3, a12
20006eba:	e6bc01        	l32r	a0, 200009ac <_stext+0x2ac>
20006ebd:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2938
        g_tErrInj.bsInjErrType = ucErrType;
        TEST_NfcEraseAll();
        /* Check error type */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
        {
            for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20006ec0:	c70f02        	l8ui	a0, a15, 199
20006ec3:	cc1b      	addi.n	a12, a12, 1
20006ec5:	74c0c0        	extui	a12, a12, 0, 8
20006ec8:	be3c07        	bltu	a12, a0, 20006e8a <TEST_NfcErrTypeInj..OCB_1482204275+0x5a>
20006ecb:	c50f22        	l8ui	a2, a15, 197
20006ece:	ffea86        	j	20006e7c <TEST_NfcErrTypeInj..OCB_1482204275+0x4c>

20006ed1 <TEST_NfcErrTypeInj..OCB_1482204275+0xa1>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2957
                }
            }
        }
    }
    /*  Disable error injection  */
    g_tErrInj.bsInjErrType = 0;  
20006ed1:	ffe8      	l32i.n	a14, a15, 60
20006ed3:	007c      	movi.n	a0, -16
20006ed5:	10ee00        	and	a14, a14, a0
20006ed8:	ffe9      	s32i.n	a14, a15, 60
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2958
    g_ErrInjEn = FALSE;
20006eda:	0d0c      	movi.n	a13, 0
20006edc:	0020c0        	memw
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2960
    
    return;
20006edf:	11c8      	l32i.n	a12, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2958
            }
        }
    }
    /*  Disable error injection  */
    g_tErrInj.bsInjErrType = 0;  
    g_ErrInjEn = FALSE;
20006ee1:	dfd9      	s32i.n	a13, a15, 52
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2960
    
    return;
20006ee3:	31e8      	l32i.n	a14, a1, 12
20006ee5:	21d8      	l32i.n	a13, a1, 8
20006ee7:	41f8      	l32i.n	a15, a1, 16
20006ee9:	0108      	l32i.n	a0, a1, 0
20006eeb:	20c112        	addi	a1, a1, 32
20006eee:	f00d      	ret.n

20006ef0 <HAL_NfcGetFlashRowAddr>:
HAL_NfcGetFlashRowAddr():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:840
#endif
    {
        addr = HAL_FLASH_ROW_ADDR(ucLunInCE, pFlashAddr->bsPln, pFlashAddr->usBlock, pFlashAddr->usPage);
    }
    
    return addr;
20006ef0:	021242        	l16ui	a4, a2, 4
20006ef3:	0238      	l32i.n	a3, a2, 0
20006ef5:	114430        	slli	a4, a4, 13
20006ef8:	031222        	l16ui	a2, a2, 6
20006efb:	353030        	extui	a3, a3, 16, 4
20006efe:	113350        	slli	a3, a3, 11
20006f01:	202240        	or	a2, a2, a4
20006f04:	202230        	or	a2, a2, a3
20006f07:	f00d      	ret.n

20006f09 <HAL_NfcGetFlashRowAddr+0x19>:
20006f09:	000000                                        ...

20006f0c <HAL_NfcWaitStatus>:
HAL_NfcWaitStatus():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1100
    FW call this function wait a cmd request to be done.
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
20006f0c:	e60461        	l32r	a6, 2000071c <_stext+0x1c>
20006f0f:	e60551        	l32r	a5, 20000724 <_stext+0x24>
20006f12:	f0c112        	addi	a1, a1, -16
20006f15:	006102        	s32i	a0, a1, 0
20006f18:	805250        	add	a5, a2, a5
20006f1b:	800552        	l8ui	a5, a5, 128
20006f1e:	3e2662        	l32i	a6, a6, 248
20006f21:	a05530        	addx4	a5, a5, a3
20006f24:	a05560        	addx4	a5, a5, a6
20006f27:	0020c0        	memw
20006f2a:	000502        	l8ui	a0, a5, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
20006f2d:	10e007        	bbsi	a0, 0, 20006f41 <HAL_NfcWaitStatus+0x35>

20006f30 <HAL_NfcWaitStatus+0x24>:
20006f30:	f03d      	nop.n
20006f32:	088076        	loop	a0, 20006f3e <HAL_NfcWaitStatus+0x32>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20006f35:	0020c0        	memw
20006f38:	000562        	l8ui	a6, a5, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
20006f3b:	02e607        	bbsi	a6, 0, 20006f41 <HAL_NfcWaitStatus+0x35>

20006f3e <HAL_NfcWaitStatus+0x32>:
20006f3e:	fffb86        	j	20006f30 <HAL_NfcWaitStatus+0x24>

20006f41 <HAL_NfcWaitStatus+0x35>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1106
    {
        ;
    }

    if (TRUE == HAL_NfcGetErrHold(ucPU, ucLun))
20006f41:	fd7ac5        	call0	200046f0 <HAL_NfcGetErrHold>
20006f44:	0c1226        	beqi	a2, 1, 20006f54 <HAL_NfcWaitStatus+0x48>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1111
    {
        return NFC_STATUS_FAIL;
    }

    return NFC_STATUS_SUCCESS;
20006f47:	01a022        	movi	a2, 1
20006f4a:	002102        	l32i	a0, a1, 0
20006f4d:	10c112        	addi	a1, a1, 16
20006f50:	000080        	ret

20006f53 <HAL_NfcWaitStatus+0x47>:
	...

20006f54 <HAL_NfcWaitStatus+0x48>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1108
        ;
    }

    if (TRUE == HAL_NfcGetErrHold(ucPU, ucLun))
    {
        return NFC_STATUS_FAIL;
20006f54:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1111
    }

    return NFC_STATUS_SUCCESS;
20006f56:	0108      	l32i.n	a0, a1, 0
20006f58:	10c112        	addi	a1, a1, 16
20006f5b:	f00d      	ret.n

20006f5d <HAL_NfcWaitStatus+0x51>:
20006f5d:	000000                                        ...

20006f60 <TEST_NfcReadAll>:
TEST_NfcReadAll():
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2055
    20151112    abby    create
    20150229    abby    merge TLC write test code into MLC
****************************************************************************/
void TEST_NfcReadAll(U8 ucSecStart, U16 usSecLen, READ_REQ_TYPE ReadType)
{
    FLASH_ADDR tFlashAddr = {0};
20006f60:	e6c051        	l32r	a5, 20000a60 <_stext+0x360>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2054
History       :
    20151112    abby    create
    20150229    abby    merge TLC write test code into MLC
****************************************************************************/
void TEST_NfcReadAll(U8 ucSecStart, U16 usSecLen, READ_REQ_TYPE ReadType)
{
20006f63:	c0c112        	addi	a1, a1, -64
20006f66:	a1c9      	s32i.n	a12, a1, 40
20006f68:	c1e9      	s32i.n	a14, a1, 48
20006f6a:	b1d9      	s32i.n	a13, a1, 44
20006f6c:	d1f9      	s32i.n	a15, a1, 52
20006f6e:	9109      	s32i.n	a0, a1, 36
20006f70:	7f7c      	movi.n	a15, -9
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2055
    FLASH_ADDR tFlashAddr = {0};
20006f72:	1508      	l32i.n	a0, a5, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2054
History       :
    20151112    abby    create
    20150229    abby    merge TLC write test code into MLC
****************************************************************************/
void TEST_NfcReadAll(U8 ucSecStart, U16 usSecLen, READ_REQ_TYPE ReadType)
{
20006f74:	03dd      	mov.n	a13, a3
20006f76:	02ed      	mov.n	a14, a2
20006f78:	04cd      	mov.n	a12, a4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2056
    FLASH_ADDR tFlashAddr = {0};
    NFC_READ_REQ_DES tRdReq = {0};
20006f7a:	218b      	addi.n	a2, a1, 8
20006f7c:	c41c      	movi.n	a4, 28
20006f7e:	358b      	addi.n	a3, a5, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2055
    20151112    abby    create
    20150229    abby    merge TLC write test code into MLC
****************************************************************************/
void TEST_NfcReadAll(U8 ucSecStart, U16 usSecLen, READ_REQ_TYPE ReadType)
{
    FLASH_ADDR tFlashAddr = {0};
20006f80:	1109      	s32i.n	a0, a1, 4
20006f82:	0558      	l32i.n	a5, a5, 0
20006f84:	0159      	s32i.n	a5, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2056
    NFC_READ_REQ_DES tRdReq = {0};
20006f86:	042a85        	call0	2000b230 <memcpy>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1575
    return;                
}

void TEST_NfcRdCfgReqComm(NFC_READ_REQ_DES *pRdReq, U8 ucSecStart, U16 usSecLen)
{
    pRdReq->bsSecStart = ucSecStart;
20006f89:	0841e2        	s8i	a14, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1576
    pRdReq->bsSecLen   = usSecLen;
20006f8c:	0941d2        	s8i	a13, a1, 9
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1578
    
    pRdReq->bsRedOntf  = g_bRedOntf;
20006f8f:	3198      	l32i.n	a9, a1, 12
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1581
    pRdReq->bsLbaChkEn = g_bLbaChk;
    pRdReq->bsSsu0En   = g_bSsuEn;
    pRdReq->bsSsu0Ontf = !g_bSsu0DramEn;
20006f91:	d57c      	movi.n	a5, -3
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1580
    pRdReq->bsSecStart = ucSecStart;
    pRdReq->bsSecLen   = usSecLen;
    
    pRdReq->bsRedOntf  = g_bRedOntf;
    pRdReq->bsLbaChkEn = g_bLbaChk;
    pRdReq->bsSsu0En   = g_bSsuEn;
20006f93:	4108      	l32i.n	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1581
    pRdReq->bsSsu0Ontf = !g_bSsu0DramEn;
20006f95:	160c      	movi.n	a6, 1
20006f97:	e5e171        	l32r	a7, 2000071c <_stext+0x1c>
20006f9a:	030c      	movi.n	a3, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1584
    pRdReq->bsSsu1En   = g_bSsuEn;
    pRdReq->bsSsu1Ontf = !g_bSsu0DramEn;
    pRdReq->bsCSEn     = g_bCacheStsEn;
20006f9c:	6e27a2        	l32i	a10, a7, 0x1b8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1579
{
    pRdReq->bsSecStart = ucSecStart;
    pRdReq->bsSecLen   = usSecLen;
    
    pRdReq->bsRedOntf  = g_bRedOntf;
    pRdReq->bsLbaChkEn = g_bLbaChk;
20006f9f:	5b27b2        	l32i	a11, a7, 0x16c
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1581
    pRdReq->bsSsu0En   = g_bSsuEn;
    pRdReq->bsSsu0Ontf = !g_bSsu0DramEn;
20006fa2:	6b2782        	l32i	a8, a7, 0x1ac
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1580
    pRdReq->bsSecStart = ucSecStart;
    pRdReq->bsSecLen   = usSecLen;
    
    pRdReq->bsRedOntf  = g_bRedOntf;
    pRdReq->bsLbaChkEn = g_bLbaChk;
    pRdReq->bsSsu0En   = g_bSsuEn;
20006fa5:	6a2742        	l32i	a4, a7, 0x1a8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1581
    pRdReq->bsSsu0Ontf = !g_bSsu0DramEn;
20006fa8:	833680        	moveqz	a3, a6, a8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1580
    pRdReq->bsSecStart = ucSecStart;
    pRdReq->bsSecLen   = usSecLen;
    
    pRdReq->bsRedOntf  = g_bRedOntf;
    pRdReq->bsLbaChkEn = g_bLbaChk;
    pRdReq->bsSsu0En   = g_bSsuEn;
20006fab:	000404        	insbits	a0, a4, 0, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1587
    pRdReq->bsSsu1En   = g_bSsuEn;
    pRdReq->bsSsu1Ontf = !g_bSsu0DramEn;
    pRdReq->bsCSEn     = g_bCacheStsEn;
    pRdReq->bsTlcMode  = g_bTlcMode;
    pRdReq->bsRawData  = g_bRawDataRead;
    pRdReq->bsEmEn     = g_bEmEnable;
20006fae:	582782        	l32i	a8, a7, 0x160
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1581
    pRdReq->bsSecLen   = usSecLen;
    
    pRdReq->bsRedOntf  = g_bRedOntf;
    pRdReq->bsLbaChkEn = g_bLbaChk;
    pRdReq->bsSsu0En   = g_bSsuEn;
    pRdReq->bsSsu0Ontf = !g_bSsu0DramEn;
20006fb1:	1123f0        	slli	a2, a3, 1
20006fb4:	100050        	and	a0, a0, a5
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1583
    pRdReq->bsSsu1En   = g_bSsuEn;
    pRdReq->bsSsu1Ontf = !g_bSsu0DramEn;
20006fb7:	1133d0        	slli	a3, a3, 3
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1581
    pRdReq->bsSecLen   = usSecLen;
    
    pRdReq->bsRedOntf  = g_bRedOntf;
    pRdReq->bsLbaChkEn = g_bLbaChk;
    pRdReq->bsSsu0En   = g_bSsuEn;
    pRdReq->bsSsu0Ontf = !g_bSsu0DramEn;
20006fba:	200020        	or	a0, a0, a2
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1578
void TEST_NfcRdCfgReqComm(NFC_READ_REQ_DES *pRdReq, U8 ucSecStart, U16 usSecLen)
{
    pRdReq->bsSecStart = ucSecStart;
    pRdReq->bsSecLen   = usSecLen;
    
    pRdReq->bsRedOntf  = g_bRedOntf;
20006fbd:	5a2722        	l32i	a2, a7, 0x168
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1582
    pRdReq->bsLbaChkEn = g_bLbaChk;
    pRdReq->bsSsu0En   = g_bSsuEn;
    pRdReq->bsSsu0Ontf = !g_bSsu0DramEn;
    pRdReq->bsSsu1En   = g_bSsuEn;
20006fc0:	022404        	insbits	a0, a4, 2, 2
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1583
    pRdReq->bsSsu1Ontf = !g_bSsu0DramEn;
20006fc3:	1000f0        	and	a0, a0, a15
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1578
void TEST_NfcRdCfgReqComm(NFC_READ_REQ_DES *pRdReq, U8 ucSecStart, U16 usSecLen)
{
    pRdReq->bsSecStart = ucSecStart;
    pRdReq->bsSecLen   = usSecLen;
    
    pRdReq->bsRedOntf  = g_bRedOntf;
20006fc6:	000294        	insbits	a9, a2, 0, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1583
    pRdReq->bsLbaChkEn = g_bLbaChk;
    pRdReq->bsSsu0En   = g_bSsuEn;
    pRdReq->bsSsu0Ontf = !g_bSsu0DramEn;
    pRdReq->bsSsu1En   = g_bSsuEn;
    pRdReq->bsSsu1Ontf = !g_bSsu0DramEn;
20006fc9:	200030        	or	a0, a0, a3
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1586
    pRdReq->bsCSEn     = g_bCacheStsEn;
    pRdReq->bsTlcMode  = g_bTlcMode;
    pRdReq->bsRawData  = g_bRawDataRead;
20006fcc:	6d2722        	l32i	a2, a7, 0x1b4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1585
    pRdReq->bsSsu0En   = g_bSsuEn;
    pRdReq->bsSsu0Ontf = !g_bSsu0DramEn;
    pRdReq->bsSsu1En   = g_bSsuEn;
    pRdReq->bsSsu1Ontf = !g_bSsu0DramEn;
    pRdReq->bsCSEn     = g_bCacheStsEn;
    pRdReq->bsTlcMode  = g_bTlcMode;
20006fcf:	572732        	l32i	a3, a7, 0x15c
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1579
{
    pRdReq->bsSecStart = ucSecStart;
    pRdReq->bsSecLen   = usSecLen;
    
    pRdReq->bsRedOntf  = g_bRedOntf;
    pRdReq->bsLbaChkEn = g_bLbaChk;
20006fd2:	011b94        	insbits	a9, a11, 1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1584
    pRdReq->bsSsu0En   = g_bSsuEn;
    pRdReq->bsSsu0Ontf = !g_bSsu0DramEn;
    pRdReq->bsSsu1En   = g_bSsuEn;
    pRdReq->bsSsu1Ontf = !g_bSsu0DramEn;
    pRdReq->bsCSEn     = g_bCacheStsEn;
20006fd5:	f3fa94        	insbits	a9, a10, 31, 31
20006fd8:	3199      	s32i.n	a9, a1, 12
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1585
    pRdReq->bsTlcMode  = g_bTlcMode;
20006fda:	226304        	insbits	a0, a3, 6, 6
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1586
    pRdReq->bsRawData  = g_bRawDataRead;
20006fdd:	900204        	insbits	a0, a2, 16, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1587
    pRdReq->bsEmEn     = g_bEmEnable;
20006fe0:	b15804        	insbits	a0, a8, 21, 21
20006fe3:	4109      	s32i.n	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1589
    
    if (g_ErrInjEn)
20006fe5:	0020c0        	memw
20006fe8:	452772        	l32i	a7, a7, 0x114
20006feb:	3ad716        	beqz	a7, 2000739c <TEST_NfcReadAll+0x43c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1592
    {
        pRdReq->bsInjErrEn = TRUE;
        pRdReq->pErrInj = &g_tErrInj;
20006fee:	e687a1        	l32r	a10, 20000a0c <_stext+0x30c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1591
    pRdReq->bsRawData  = g_bRawDataRead;
    pRdReq->bsEmEn     = g_bEmEnable;
    
    if (g_ErrInjEn)
    {
        pRdReq->bsInjErrEn = TRUE;
20006ff1:	e5e291        	l32r	a9, 2000077c <_stext+0x7c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1592
        pRdReq->pErrInj = &g_tErrInj;
20006ff4:	81a9      	s32i.n	a10, a1, 32
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1591
    pRdReq->bsRawData  = g_bRawDataRead;
    pRdReq->bsEmEn     = g_bEmEnable;
    
    if (g_ErrInjEn)
    {
        pRdReq->bsInjErrEn = TRUE;
20006ff6:	200090        	or	a0, a0, a9
20006ff9:	046102        	s32i	a0, a1, 16

20006ffc <TEST_NfcReadAll+0x9c>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1599
    else
    {
        pRdReq->pErrInj = NULL;
    }
    
    if (g_bDecFifoEn)
20006ffc:	e5c8b1        	l32r	a11, 2000071c <_stext+0x1c>
20006fff:	592bb2        	l32i	a11, a11, 0x164
20007002:	7b8c      	beqz.n	a11, 2000700d <TEST_NfcReadAll+0xad>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1601
    {
        pRdReq->bsDecFifoEn = TRUE;
20007004:	80a0d2        	movi	a13, 128
20007007:	20d0d0        	or	a13, a0, a13
2000700a:	0461d2        	s32i	a13, a1, 16
2000700d:	329c      	beqz.n	a2, 20007024 <TEST_NfcReadAll+0xc4>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1608
    
    /*  scramble disable    */
    if (g_bRawDataRead)
    {
        volatile PG_CONF_REG *pNfcPgCfg = (volatile PG_CONF_REG *) &rNfcPgCfg;
        pNfcPgCfg->bsScrBps = TRUE;
2000700f:	820c      	movi.n	a2, 8
20007011:	e5d701        	l32r	a0, 20000770 <_stext+0x70>
20007014:	0020c0        	memw
20007017:	00e8      	l32i.n	a14, a0, 0
20007019:	10eef0        	and	a14, a14, a15
2000701c:	20ee20        	or	a14, a14, a2
2000701f:	0020c0        	memw
20007022:	00e9      	s32i.n	a14, a0, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2059
{
    FLASH_ADDR tFlashAddr = {0};
    NFC_READ_REQ_DES tRdReq = {0};
    U8  ucPageType;

    TEST_NfcRdCfgReqComm(&tRdReq, ucSecStart, usSecLen);
20007024:	e690d1        	l32r	a13, 20000a64 <_stext+0x364>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2061
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;
20007027:	0158      	l32i.n	a5, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2063

    tFlashAddr.usBlock = g_usTestBlkStart;
20007029:	e5bc21        	l32r	a2, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2061
    NFC_READ_REQ_DES tRdReq = {0};
    U8  ucPageType;

    TEST_NfcRdCfgReqComm(&tRdReq, ucSecStart, usSecLen);
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;
2000702c:	170c      	movi.n	a7, 1
2000702e:	060c      	movi.n	a6, 0
20007030:	836730        	moveqz	a6, a7, a3
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2063

    tFlashAddr.usBlock = g_usTestBlkStart;
20007033:	de1202        	l16ui	a0, a2, 0x1bc
20007036:	025102        	s16i	a0, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2064
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
20007039:	df1222        	l16ui	a2, a2, 0x1be
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2061
    NFC_READ_REQ_DES tRdReq = {0};
    U8  ucPageType;

    TEST_NfcRdCfgReqComm(&tRdReq, ucSecStart, usSecLen);
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;
2000703c:	e5c271        	l32r	a7, 20000744 <_stext+0x44>
2000703f:	0166c0        	slli	a6, a6, 20
20007042:	105570        	and	a5, a5, a7
20007045:	205560        	or	a5, a5, a6
20007048:	0159      	s32i.n	a5, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2064

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
2000704a:	023027        	bltu	a0, a2, 20007050 <TEST_NfcReadAll+0xf0>
2000704d:	00a186        	j	200072d7 <TEST_NfcReadAll+0x377>
20007050:	e50d42        	l8ui	a4, a13, 229
20007053:	e685f1        	l32r	a15, 20000a68 <_stext+0x368>
20007056:	000586        	j	20007070 <TEST_NfcReadAll+0x110>

20007059 <TEST_NfcReadAll+0xf9>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2067
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
20007059:	e5b021        	l32r	a2, 2000071c <_stext+0x1c>
2000705c:	021102        	l16ui	a0, a1, 4
2000705f:	df1222        	l16ui	a2, a2, 0x1be
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2162
                }// end page loop
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
        }
        tFlashAddr.usBlock++;
20007062:	001b      	addi.n	a0, a0, 1
20007064:	f40000        	extui	a0, a0, 0, 16
20007067:	025102        	s16i	a0, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2064
    TEST_NfcRdCfgReqComm(&tRdReq, ucSecStart, usSecLen);
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
2000706a:	023027        	bltu	a0, a2, 20007070 <TEST_NfcReadAll+0x110>
2000706d:	009a46        	j	200072da <TEST_NfcReadAll+0x37a>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2066
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
20007070:	e40d32        	l8ui	a3, a13, 228
20007073:	004132        	s8i	a3, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2067
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
20007076:	e8b347        	bgeu	a3, a4, 20007062 <TEST_NfcReadAll+0x102>
20007079:	e70d22        	l8ui	a2, a13, 231
2000707c:	000446        	j	20007091 <TEST_NfcReadAll+0x131>

2000707f <TEST_NfcReadAll+0x11f>:
	...

20007080 <TEST_NfcReadAll+0x120>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2070
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20007080:	e50d42        	l8ui	a4, a13, 229
20007083:	000132        	l8ui	a3, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2160
                    }
                    tFlashAddr.usPage++;
                }// end page loop
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
20007086:	331b      	addi.n	a3, a3, 1
20007088:	743030        	extui	a3, a3, 0, 8
2000708b:	004132        	s8i	a3, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2067

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
2000708e:	c7b347        	bgeu	a3, a4, 20007059 <TEST_NfcReadAll+0xf9>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2069
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
20007091:	e60d02        	l8ui	a0, a13, 230
20007094:	014102        	s8i	a0, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2070
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20007097:	ebb027        	bgeu	a0, a2, 20007086 <TEST_NfcReadAll+0x126>
2000709a:	811d32        	l16ui	a3, a13, 0x102
2000709d:	000406        	j	200070b1 <TEST_NfcReadAll+0x151>

200070a0 <TEST_NfcReadAll+0x140>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2073
            {
                tFlashAddr.usPage = g_usTestPageStart;
                while (tFlashAddr.usPage < g_usTestPageEnd)
200070a0:	e70d22        	l8ui	a2, a13, 231
200070a3:	010102        	l8ui	a0, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2158
                            TEST_NfcPageRetry(&tFlashAddr, &tRdReq);
                        }
                    }
                    tFlashAddr.usPage++;
                }// end page loop
                tFlashAddr.ucLun++;
200070a6:	001b      	addi.n	a0, a0, 1
200070a8:	740000        	extui	a0, a0, 0, 8
200070ab:	014102        	s8i	a0, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2070
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
200070ae:	ceb027        	bgeu	a0, a2, 20007080 <TEST_NfcReadAll+0x120>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2072
            {
                tFlashAddr.usPage = g_usTestPageStart;
200070b1:	e59a41        	l32r	a4, 2000071c <_stext+0x1c>
200070b4:	e01442        	l16ui	a4, a4, 0x1c0
200070b7:	035142        	s16i	a4, a1, 6
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2073
                while (tFlashAddr.usPage < g_usTestPageEnd)
200070ba:	4f3437        	bltu	a4, a3, 2000710d <TEST_NfcReadAll+0x1ad>
200070bd:	fff946        	j	200070a6 <TEST_NfcReadAll+0x146>

200070c0 <TEST_NfcReadAll+0x160>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2094
                    
                        while (TRUE == HAL_NfcGetFull(tFlashAddr.ucPU, tFlashAddr.ucLun))
                        {
                            ;
                        }
                        switch (ReadType)
200070c0:	15ec16        	beqz	a12, 20007222 <TEST_NfcReadAll+0x2c2>
200070c3:	5c0b      	addi.n	a5, a12, -1
200070c5:	169516        	beqz	a5, 20007232 <TEST_NfcReadAll+0x2d2>
200070c8:	fecc62        	addi	a6, a12, -2
200070cb:	1a7616        	beqz	a6, 20007276 <TEST_NfcReadAll+0x316>
200070ce:	fdcc72        	addi	a7, a12, -3
200070d1:	1b1716        	beqz	a7, 20007286 <TEST_NfcReadAll+0x326>
200070d4:	fccc82        	addi	a8, a12, -4
200070d7:	1bb816        	beqz	a8, 20007296 <TEST_NfcReadAll+0x336>
200070da:	fbcc92        	addi	a9, a12, -5
200070dd:	131916        	beqz	a9, 20007212 <TEST_NfcReadAll+0x2b2>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2143
                                HAL_NfcRedOnlyRead(&tFlashAddr, &tRdReq);
                            }break;

                            default :
                            {
                                DBG_Getch();
200070e0:	e58e01        	l32r	a0, 20000718 <_stext+0x18>
200070e3:	0000c0        	callx0	a0
200070e6:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2148
                            }
                        }//end switch

                        /* check status and data */
                        TEST_NfcRdStsAndDataChk(&tFlashAddr, &tRdReq, ReadType);
200070e8:	318b      	addi.n	a3, a1, 8
200070ea:	0c4d      	mov.n	a4, a12
200070ec:	feb185        	call0	20005c08 <TEST_NfcRdStsAndDataChk>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2151

                        /* Read Retry */
                        if (g_bForceRetryEn)     //force to retry for test
200070ef:	412da2        	l32i	a10, a13, 0x104
200070f2:	6a8c      	beqz.n	a10, 200070fc <TEST_NfcReadAll+0x19c>
200070f4:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2153
                        {
                            TEST_NfcPageRetry(&tFlashAddr, &tRdReq);
200070f6:	08c132        	addi	a3, a1, 8
200070f9:	fe8805        	call0	2000597c <TEST_NfcPageRetry..BCB_1482204275>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2156
                        }
                    }
                    tFlashAddr.usPage++;
200070fc:	031142        	l16ui	a4, a1, 6
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2073
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
            {
                tFlashAddr.usPage = g_usTestPageStart;
                while (tFlashAddr.usPage < g_usTestPageEnd)
200070ff:	811d32        	l16ui	a3, a13, 0x102
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2156
                        if (g_bForceRetryEn)     //force to retry for test
                        {
                            TEST_NfcPageRetry(&tFlashAddr, &tRdReq);
                        }
                    }
                    tFlashAddr.usPage++;
20007102:	441b      	addi.n	a4, a4, 1
20007104:	f44040        	extui	a4, a4, 0, 16
20007107:	035142        	s16i	a4, a1, 6
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2073
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
            {
                tFlashAddr.usPage = g_usTestPageStart;
                while (tFlashAddr.usPage < g_usTestPageEnd)
2000710a:	92b437        	bgeu	a4, a3, 200070a0 <TEST_NfcReadAll+0x140>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:806
LOCAL U32 TEST_NfcGetReadLba(FLASH_ADDR *pFlashAddr, U8 ucSecStart)
{
    U32 ulLba;
    
    /*  Maple modify for EM test  */
    if (TRUE == g_bEmEnable)
2000710d:	080102        	l8ui	a0, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2078
                while (tFlashAddr.usPage < g_usTestPageEnd)
                {                    
                    for(ucPageType = 0; ucPageType < TEST_PG_PER_WL; ucPageType++)
                    {
                        tRdReq.bsTlcPgType  = ucPageType;
                        tRdReq.bsRdBuffId   = TEST_NfcGetRdBufId(&tFlashAddr, ucPageType);
20007110:	000132        	l8ui	a3, a1, 0
20007113:	e5a271        	l32r	a7, 2000079c <_stext+0x9c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2077
                tFlashAddr.usPage = g_usTestPageStart;
                while (tFlashAddr.usPage < g_usTestPageEnd)
                {                    
                    for(ucPageType = 0; ucPageType < TEST_PG_PER_WL; ucPageType++)
                    {
                        tRdReq.bsTlcPgType  = ucPageType;
20007116:	cfaf92        	movi	a9, -49
20007119:	4188      	l32i.n	a8, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:806
LOCAL U32 TEST_NfcGetReadLba(FLASH_ADDR *pFlashAddr, U8 ucSecStart)
{
    U32 ulLba;
    
    /*  Maple modify for EM test  */
    if (TRUE == g_bEmEnable)
2000711b:	282d52        	l32i	a5, a13, 160
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2078
                while (tFlashAddr.usPage < g_usTestPageEnd)
                {                    
                    for(ucPageType = 0; ucPageType < TEST_PG_PER_WL; ucPageType++)
                    {
                        tRdReq.bsTlcPgType  = ucPageType;
                        tRdReq.bsRdBuffId   = TEST_NfcGetRdBufId(&tFlashAddr, ucPageType);
2000711e:	e57f61        	l32r	a6, 2000071c <_stext+0x1c>
20007121:	550b      	addi.n	a5, a5, -1
20007123:	0668      	l32i.n	a6, a6, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2077
                tFlashAddr.usPage = g_usTestPageStart;
                while (tFlashAddr.usPage < g_usTestPageEnd)
                {                    
                    for(ucPageType = 0; ucPageType < TEST_PG_PER_WL; ucPageType++)
                    {
                        tRdReq.bsTlcPgType  = ucPageType;
20007125:	108890        	and	a8, a8, a9
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2078
                        tRdReq.bsRdBuffId   = TEST_NfcGetRdBufId(&tFlashAddr, ucPageType);
20007128:	0668      	l32i.n	a6, a6, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2077
                tFlashAddr.usPage = g_usTestPageStart;
                while (tFlashAddr.usPage < g_usTestPageEnd)
                {                    
                    for(ucPageType = 0; ucPageType < TEST_PG_PER_WL; ucPageType++)
                    {
                        tRdReq.bsTlcPgType  = ucPageType;
2000712a:	4189      	s32i.n	a8, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2078
                        tRdReq.bsRdBuffId   = TEST_NfcGetRdBufId(&tFlashAddr, ucPageType);
2000712c:	667a      	add.n	a6, a6, a7
2000712e:	f56060        	extui	a6, a6, 16, 16
20007131:	906630        	addx2	a6, a6, a3
20007134:	20c662        	addi	a6, a6, 32
20007137:	055162        	s16i	a6, a1, 10
2000713a:	0ca516        	beqz	a5, 20007208 <TEST_NfcReadAll+0x2a8>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:812
    {
        ulLba = ucSecStart;
    }
    else
    {
        ulLba = TEST_NfcCalcuData(pFlashAddr->ucPU,pFlashAddr->usPage,ucSecStart);
2000713d:	116380        	slli	a6, a3, 8
20007140:	206460        	or	a6, a4, a6
20007143:	116680        	slli	a6, a6, 8
20007146:	206060        	or	a6, a0, a6
20007149:	116680        	slli	a6, a6, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
    20151028     abby    add parameter ucLun
------------------------------------------------------------------------------*/
U8 HAL_NfcGetWP(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
2000714c:	010102        	l8ui	a0, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2079
                {                    
                    for(ucPageType = 0; ucPageType < TEST_PG_PER_WL; ucPageType++)
                    {
                        tRdReq.bsTlcPgType  = ucPageType;
                        tRdReq.bsRdBuffId   = TEST_NfcGetRdBufId(&tFlashAddr, ucPageType);
                        tRdReq.bsLba        = TEST_NfcGetReadLba(&tFlashAddr, tRdReq.bsSecStart);
2000714f:	418360        	srli	a8, a6, 3
20007152:	3178      	l32i.n	a7, a1, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
20007154:	e57461        	l32r	a6, 20000724 <_stext+0x24>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2079
20007157:	1188e0        	slli	a8, a8, 2
2000715a:	1077f0        	and	a7, a7, a15
2000715d:	207780        	or	a7, a7, a8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
20007160:	636a      	add.n	a6, a3, a6
20007162:	800662        	l8ui	a6, a6, 128
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2079
20007165:	3179      	s32i.n	a7, a1, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
20007167:	ed78      	l32i.n	a7, a13, 56
20007169:	a06600        	addx4	a6, a6, a0
2000716c:	a06670        	addx4	a6, a6, a7
2000716f:	0020c0        	memw
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1698
    20160808    abby    create
****************************************************************************/
LOCAL U8 TEST_NfcRdGetDecFifoCmdInx(FLASH_ADDR *pFlashAddr, U8 ucPageType)
{
    U8 ucCmdIndex = 0;
    if (g_bDecFifoEn)
20007172:	292d72        	l32i	a7, a13, 164
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
20007175:	000682        	l8ui	a8, a6, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2080
                    for(ucPageType = 0; ucPageType < TEST_PG_PER_WL; ucPageType++)
                    {
                        tRdReq.bsTlcPgType  = ucPageType;
                        tRdReq.bsRdBuffId   = TEST_NfcGetRdBufId(&tFlashAddr, ucPageType);
                        tRdReq.bsLba        = TEST_NfcGetReadLba(&tFlashAddr, tRdReq.bsSecStart);
                        tRdReq.ppNfcRed     = (NFC_RED **)&pRRed[TEST_NfcGetRedOffset(&tFlashAddr)];
20007178:	2c2d92        	l32i	a9, a13, 176
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
2000717b:	418680        	srli	a8, a8, 6
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2080
2000717e:	883a      	add.n	a8, a8, a3
20007180:	a08890        	addx4	a8, a8, a9
20007183:	7189      	s32i.n	a8, a1, 28
20007185:	97ac      	beqz.n	a7, 200071b2 <TEST_NfcReadAll+0x252>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1700
LOCAL U8 TEST_NfcRdGetDecFifoCmdInx(FLASH_ADDR *pFlashAddr, U8 ucPageType)
{
    U8 ucCmdIndex = 0;
    if (g_bDecFifoEn)
    {
        ucCmdIndex = g_ucDecFifoRp;
20007187:	0020c0        	memw
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1702
        TEST_DecFifoSetCmdIndex(pFlashAddr, ucPageType, ucCmdIndex);
        DBG_Printf("PU%d Page%d pageType%d DEC FIFO index = %d\n", pFlashAddr->ucPU, pFlashAddr->usPage, ucPageType, ucCmdIndex);
2000718a:	e63821        	l32r	a2, 20000a6c <_stext+0x36c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1700
LOCAL U8 TEST_NfcRdGetDecFifoCmdInx(FLASH_ADDR *pFlashAddr, U8 ucPageType)
{
    U8 ucCmdIndex = 0;
    if (g_bDecFifoEn)
    {
        ucCmdIndex = g_ucDecFifoRp;
2000718d:	140de2        	l8ui	a14, a13, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1702
        TEST_DecFifoSetCmdIndex(pFlashAddr, ucPageType, ucCmdIndex);
        DBG_Printf("PU%d Page%d pageType%d DEC FIFO index = %d\n", pFlashAddr->ucPU, pFlashAddr->usPage, ucPageType, ucCmdIndex);
20007190:	050c      	movi.n	a5, 0
20007192:	206ee0        	or	a6, a14, a14
20007195:	03acc5        	call0	2000ac64 <dbg_printf>
20007198:	e56361        	l32r	a6, 20000724 <_stext+0x24>
2000719b:	000132        	l8ui	a3, a1, 0
2000719e:	010102        	l8ui	a0, a1, 1
200071a1:	636a      	add.n	a6, a3, a6
200071a3:	800662        	l8ui	a6, a6, 128
200071a6:	ed78      	l32i.n	a7, a13, 56
200071a8:	a06600        	addx4	a6, a6, a0
200071ab:	a06670        	addx4	a6, a6, a7
200071ae:	000086        	j	200071b4 <TEST_NfcReadAll+0x254>

200071b1 <TEST_NfcReadAll+0x251>:
	...

200071b2 <TEST_NfcReadAll+0x252>:
200071b2:	0e0c      	movi.n	a14, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
200071b4:	3a2d72        	l32i	a7, a13, 232
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2081
                    {
                        tRdReq.bsTlcPgType  = ucPageType;
                        tRdReq.bsRdBuffId   = TEST_NfcGetRdBufId(&tFlashAddr, ucPageType);
                        tRdReq.bsLba        = TEST_NfcGetReadLba(&tFlashAddr, tRdReq.bsSecStart);
                        tRdReq.ppNfcRed     = (NFC_RED **)&pRRed[TEST_NfcGetRedOffset(&tFlashAddr)];
                        tRdReq.bsDecFifoIndex = TEST_NfcRdGetDecFifoCmdInx(&tFlashAddr, ucPageType);
200071b7:	1141e2        	s8i	a14, a1, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
200071ba:	04f716        	beqz	a7, 2000720d <TEST_NfcReadAll+0x2ad>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:536
    20151029    abby     modify to meet VT3533 
------------------------------------------------------------------------------*/
U8 HAL_NfcGetRP(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
200071bd:	0020c0        	memw
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:528
    {
        return 0;
    }
    
    //MixVector only support 512 offset for SSUx in one MCU
    return GET_CMD_LEVEL(pFlashAddr->ucPU,pFlashAddr->ucLun,pFlashAddr->bsPln
200071c0:	1183e0        	slli	a8, a3, 2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:536
200071c3:	000692        	l8ui	a9, a6, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:528
200071c6:	208080        	or	a8, a0, a8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:536
200071c9:	140490        	extui	a0, a9, 4, 2
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:528
200071cc:	e32804        	insbits	a0, a8, 2, 31
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2082
                        tRdReq.bsTlcPgType  = ucPageType;
                        tRdReq.bsRdBuffId   = TEST_NfcGetRdBufId(&tFlashAddr, ucPageType);
                        tRdReq.bsLba        = TEST_NfcGetReadLba(&tFlashAddr, tRdReq.bsSecStart);
                        tRdReq.ppNfcRed     = (NFC_RED **)&pRRed[TEST_NfcGetRedOffset(&tFlashAddr)];
                        tRdReq.bsDecFifoIndex = TEST_NfcRdGetDecFifoCmdInx(&tFlashAddr, ucPageType);
                        tRdReq.bsSsu0Addr   = TEST_GetOffset(&tFlashAddr);
200071cf:	0a5102        	s16i	a0, a1, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2085
                        tRdReq.bsSsu1Addr   = tRdReq.bsSsu0Addr + 0x400;
                        tRdReq.bsCsAddrOff  = tRdReq.bsSsu0Addr;
                        tRdReq.bsDsIndex    = TEST_NfcRdGetDsIndex(&tFlashAddr, &tRdReq, ReadType);
200071d2:	e627b1        	l32r	a11, 20000a70 <_stext+0x370>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2083
                        tRdReq.bsRdBuffId   = TEST_NfcGetRdBufId(&tFlashAddr, ucPageType);
                        tRdReq.bsLba        = TEST_NfcGetReadLba(&tFlashAddr, tRdReq.bsSecStart);
                        tRdReq.ppNfcRed     = (NFC_RED **)&pRRed[TEST_NfcGetRedOffset(&tFlashAddr)];
                        tRdReq.bsDecFifoIndex = TEST_NfcRdGetDecFifoCmdInx(&tFlashAddr, ucPageType);
                        tRdReq.bsSsu0Addr   = TEST_GetOffset(&tFlashAddr);
                        tRdReq.bsSsu1Addr   = tRdReq.bsSsu0Addr + 0x400;
200071d5:	f4e000        	extui	a14, a0, 0, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2085
                        tRdReq.bsCsAddrOff  = tRdReq.bsSsu0Addr;
                        tRdReq.bsDsIndex    = TEST_NfcRdGetDsIndex(&tFlashAddr, &tRdReq, ReadType);
200071d8:	41a8      	l32i.n	a10, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2084
                        tRdReq.bsLba        = TEST_NfcGetReadLba(&tFlashAddr, tRdReq.bsSecStart);
                        tRdReq.ppNfcRed     = (NFC_RED **)&pRRed[TEST_NfcGetRedOffset(&tFlashAddr)];
                        tRdReq.bsDecFifoIndex = TEST_NfcRdGetDecFifoCmdInx(&tFlashAddr, ucPageType);
                        tRdReq.bsSsu0Addr   = TEST_GetOffset(&tFlashAddr);
                        tRdReq.bsSsu1Addr   = tRdReq.bsSsu0Addr + 0x400;
                        tRdReq.bsCsAddrOff  = tRdReq.bsSsu0Addr;
200071da:	0661e2        	s32i	a14, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2083
                        tRdReq.bsRdBuffId   = TEST_NfcGetRdBufId(&tFlashAddr, ucPageType);
                        tRdReq.bsLba        = TEST_NfcGetReadLba(&tFlashAddr, tRdReq.bsSecStart);
                        tRdReq.ppNfcRed     = (NFC_RED **)&pRRed[TEST_NfcGetRedOffset(&tFlashAddr)];
                        tRdReq.bsDecFifoIndex = TEST_NfcRdGetDecFifoCmdInx(&tFlashAddr, ucPageType);
                        tRdReq.bsSsu0Addr   = TEST_GetOffset(&tFlashAddr);
                        tRdReq.bsSsu1Addr   = tRdReq.bsSsu0Addr + 0x400;
200071dd:	04dee2        	addmi	a14, a14, 0x400
200071e0:	0b51e2        	s16i	a14, a1, 22
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2085
                        tRdReq.bsCsAddrOff  = tRdReq.bsSsu0Addr;
                        tRdReq.bsDsIndex    = TEST_NfcRdGetDsIndex(&tFlashAddr, &tRdReq, ReadType);
200071e3:	10aab0        	and	a10, a10, a11
200071e6:	0461a2        	s32i	a10, a1, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetFull(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
200071e9:	0020c0        	memw
200071ec:	000692        	l8ui	a9, a6, 0
200071ef:	049390        	extui	a9, a9, 3, 1
200071f2:	eca916        	beqz	a9, 200070c0 <TEST_NfcReadAll+0x160>
200071f5:	0b8076        	loop	a0, 20007204 <TEST_NfcReadAll+0x2a4>
200071f8:	0020c0        	memw
200071fb:	000602        	l8ui	a0, a6, 0
200071fe:	040300        	extui	a0, a0, 3, 1
20007201:	ebb016        	beqz	a0, 200070c0 <TEST_NfcReadAll+0x160>

20007204 <TEST_NfcReadAll+0x2a4>:
20007204:	fffb46        	j	200071f5 <TEST_NfcReadAll+0x295>

20007207 <TEST_NfcReadAll+0x2a7>:
	...

20007208 <TEST_NfcReadAll+0x2a8>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:808
    U32 ulLba;
    
    /*  Maple modify for EM test  */
    if (TRUE == g_bEmEnable)
    {
        ulLba = ucSecStart;
20007208:	006d      	mov.n	a6, a0
2000720a:	ffcf86        	j	2000714c <TEST_NfcReadAll+0x1ec>

2000720d <TEST_NfcReadAll+0x2ad>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
2000720d:	000c      	movi.n	a0, 0
2000720f:	ffef06        	j	200071cf <TEST_NfcReadAll+0x26f>

20007212 <TEST_NfcReadAll+0x2b2>:
20007212:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2104
                            }break;

                            case FULL_PAGE_READ :
                            {
                                HAL_NfcPageRead(&tFlashAddr, &tRdReq);
                            }break;
20007214:	318b      	addi.n	a3, a1, 8
20007216:	e61801        	l32r	a0, 20000a78 <_stext+0x378>
20007219:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2110

                        #ifndef HOST_SATA
                            case HOST_READ :
                            {
                                HAL_NfcHostPageRead(&tFlashAddr, 0, 0, &tRdReq);
                            }break;
2000721c:	ffb186        	j	200070e6 <TEST_NfcReadAll+0x186>

2000721f <TEST_NfcReadAll+0x2bf>:
2000721f:	000000                                        ...

20007222 <TEST_NfcReadAll+0x2c2>:
20007222:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2094
                    
                        while (TRUE == HAL_NfcGetFull(tFlashAddr.ucPU, tFlashAddr.ucLun))
                        {
                            ;
                        }
                        switch (ReadType)
20007224:	318b      	addi.n	a3, a1, 8
20007226:	e5df01        	l32r	a0, 200009a4 <_stext+0x2a4>
20007229:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2099
                        {
                            case SING_PLN_READ :
                            {
                                HAL_NfcSinglePlnRead(&tFlashAddr, &tRdReq, FALSE);
                            }break;
2000722c:	ffad86        	j	200070e6 <TEST_NfcReadAll+0x186>

2000722f <TEST_NfcReadAll+0x2cf>:
2000722f:	000000                                        ...

20007232 <TEST_NfcReadAll+0x2d2>:
20007232:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2110

                        #ifndef HOST_SATA
                            case HOST_READ :
                            {
                                HAL_NfcHostPageRead(&tFlashAddr, 0, 0, &tRdReq);
                            }break;
20007234:	318b      	addi.n	a3, a1, 8
20007236:	e5db01        	l32r	a0, 200009a4 <_stext+0x2a4>
20007239:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2117

                            case SING_PLN_CCL_READ :
                            {
                                /* normal page read first    */
                                HAL_NfcSinglePlnRead(&tFlashAddr, &tRdReq, FALSE);
                                HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun);
2000723c:	000122        	l8ui	a2, a1, 0
2000723f:	010132        	l8ui	a3, a1, 1
20007242:	ffcc85        	call0	20006f0c <HAL_NfcWaitStatus>
20007245:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2119

                                TEST_NfcCheckRed(&tFlashAddr, tRdReq.ppNfcRed, tRdReq.bsSecStart, tRdReq.bsSecLen, ucPageType);
20007247:	072132        	l32i	a3, a1, 28
2000724a:	080142        	l8ui	a4, a1, 8
2000724d:	090152        	l8ui	a5, a1, 9
20007250:	00a062        	movi	a6, 0
20007253:	fead05        	call0	20005d24 <TEST_NfcCheckRed..EBB_1482204275>
20007256:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2120
                                TEST_NfcCheckData(&tFlashAddr, tRdReq.bsSecStart, tRdReq.bsSecLen, tRdReq.bsRdBuffId, ucPageType);
20007258:	080132        	l8ui	a3, a1, 8
2000725b:	090142        	l8ui	a4, a1, 9
2000725e:	051152        	l16ui	a5, a1, 10
20007261:	060c      	movi.n	a6, 0
20007263:	feabc5        	call0	20005d20 <TEST_NfcCheckData..ABB_1482204275>
20007266:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2122

                                HAL_NfcSinglePlnCCLRead(&tFlashAddr, &tRdReq);
20007268:	318b      	addi.n	a3, a1, 8
2000726a:	e60401        	l32r	a0, 20000a7c <_stext+0x37c>
2000726d:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2123
                            }break;
20007270:	ff9c86        	j	200070e6 <TEST_NfcReadAll+0x186>

20007273 <TEST_NfcReadAll+0x313>:
20007273:	000000                                        ...

20007276 <TEST_NfcReadAll+0x316>:
20007276:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2103
                                HAL_NfcSinglePlnRead(&tFlashAddr, &tRdReq, FALSE);
                            }break;

                            case FULL_PAGE_READ :
                            {
                                HAL_NfcPageRead(&tFlashAddr, &tRdReq);
20007278:	318b      	addi.n	a3, a1, 8
2000727a:	e5cd01        	l32r	a0, 200009b0 <_stext+0x2b0>
2000727d:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2104
                            }break;
20007280:	ff9886        	j	200070e6 <TEST_NfcReadAll+0x186>

20007283 <TEST_NfcReadAll+0x323>:
20007283:	000000                                        ...

20007286 <TEST_NfcReadAll+0x326>:
20007286:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2138
                                HAL_NfcChangeColRead(&tFlashAddr, &tRdReq);
                            }break;

                            case RED_ONLY_READ :
                            {
                                HAL_NfcRedOnlyRead(&tFlashAddr, &tRdReq);
20007288:	318b      	addi.n	a3, a1, 8
2000728a:	e5fd01        	l32r	a0, 20000a80 <_stext+0x380>
2000728d:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2139
                            }break;
20007290:	ff9486        	j	200070e6 <TEST_NfcReadAll+0x186>

20007293 <TEST_NfcReadAll+0x333>:
20007293:	000000                                        ...

20007296 <TEST_NfcReadAll+0x336>:
20007296:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2128
                            }break;

                            case CHANGE_COL_READ :
                            {
                                /* full page read first    */
                                HAL_NfcPageRead(&tFlashAddr, &tRdReq);
20007298:	318b      	addi.n	a3, a1, 8
2000729a:	e5c501        	l32r	a0, 200009b0 <_stext+0x2b0>
2000729d:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2129
                                HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun);
200072a0:	000122        	l8ui	a2, a1, 0
200072a3:	010132        	l8ui	a3, a1, 1
200072a6:	ffc645        	call0	20006f0c <HAL_NfcWaitStatus>
200072a9:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2130
                                TEST_NfcCheckRed(&tFlashAddr, tRdReq.ppNfcRed, tRdReq.bsSecStart, tRdReq.bsSecLen, ucPageType);
200072ab:	072132        	l32i	a3, a1, 28
200072ae:	080142        	l8ui	a4, a1, 8
200072b1:	090152        	l8ui	a5, a1, 9
200072b4:	00a062        	movi	a6, 0
200072b7:	fea6c5        	call0	20005d24 <TEST_NfcCheckRed..EBB_1482204275>
200072ba:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2131
                                TEST_NfcCheckData(&tFlashAddr, tRdReq.bsSecStart, tRdReq.bsSecLen, tRdReq.bsRdBuffId, ucPageType);
200072bc:	080132        	l8ui	a3, a1, 8
200072bf:	090142        	l8ui	a4, a1, 9
200072c2:	051152        	l16ui	a5, a1, 10
200072c5:	060c      	movi.n	a6, 0
200072c7:	fea585        	call0	20005d20 <TEST_NfcCheckData..ABB_1482204275>
200072ca:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2133

                                HAL_NfcChangeColRead(&tFlashAddr, &tRdReq);
200072cc:	318b      	addi.n	a3, a1, 8
200072ce:	e5ed01        	l32r	a0, 20000a84 <_stext+0x384>
200072d1:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2134
                            }break;
200072d4:	ff8386        	j	200070e6 <TEST_NfcReadAll+0x186>

200072d7 <TEST_NfcReadAll+0x377>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2064
    TEST_NfcRdCfgReqComm(&tRdReq, ucSecStart, usSecLen);
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
200072d7:	e50d42        	l8ui	a4, a13, 229
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2166
        }
        tFlashAddr.usBlock++;
    }
    
#ifndef DATA_CHK//no data check in FW
    for (tFlashAddr.ucPU = g_ucTestPuStart;tFlashAddr.ucPU < g_ucTestPuEnd;tFlashAddr.ucPU++)
200072da:	e40d32        	l8ui	a3, a13, 228
200072dd:	004132        	s8i	a3, a1, 0
200072e0:	023347        	bltu	a3, a4, 200072e6 <TEST_NfcReadAll+0x386>
200072e3:	002946        	j	2000738c <TEST_NfcReadAll+0x42c>
200072e6:	e70d22        	l8ui	a2, a13, 231
200072e9:	0004c6        	j	20007300 <TEST_NfcReadAll+0x3a0>

200072ec <TEST_NfcReadAll+0x38c>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2168
    {
        for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
200072ec:	e50d42        	l8ui	a4, a13, 229
200072ef:	000132        	l8ui	a3, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2166
        }
        tFlashAddr.usBlock++;
    }
    
#ifndef DATA_CHK//no data check in FW
    for (tFlashAddr.ucPU = g_ucTestPuStart;tFlashAddr.ucPU < g_ucTestPuEnd;tFlashAddr.ucPU++)
200072f2:	331b      	addi.n	a3, a3, 1
200072f4:	743030        	extui	a3, a3, 0, 8
200072f7:	004132        	s8i	a3, a1, 0
200072fa:	023347        	bltu	a3, a4, 20007300 <TEST_NfcReadAll+0x3a0>
200072fd:	0022c6        	j	2000738c <TEST_NfcReadAll+0x42c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2168
    {
        for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20007300:	e60d02        	l8ui	a0, a13, 230
20007303:	014102        	s8i	a0, a1, 1
20007306:	1c3027        	bltu	a0, a2, 20007326 <TEST_NfcReadAll+0x3c6>
20007309:	fff946        	j	200072f2 <TEST_NfcReadAll+0x392>

2000730c <TEST_NfcReadAll+0x3ac>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1106
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
    {
        ;
    }

    if (TRUE == HAL_NfcGetErrHold(ucPU, ucLun))
2000730c:	201110        	or	a1, a1, a1
2000730f:	fd3e05        	call0	200046f0 <HAL_NfcGetErrHold>
20007312:	3e1226        	beqi	a2, 1, 20007354 <TEST_NfcReadAll+0x3f4>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2168
20007315:	010102        	l8ui	a0, a1, 1
20007318:	e70d22        	l8ui	a2, a13, 231
2000731b:	001b      	addi.n	a0, a0, 1
2000731d:	740000        	extui	a0, a0, 0, 8
20007320:	014102        	s8i	a0, a1, 1
20007323:	c5b027        	bgeu	a0, a2, 200072ec <TEST_NfcReadAll+0x38c>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20007326:	e4ff61        	l32r	a6, 20000724 <_stext+0x24>
20007329:	000122        	l8ui	a2, a1, 0
2000732c:	ed78      	l32i.n	a7, a13, 56
2000732e:	626a      	add.n	a6, a2, a6
20007330:	800662        	l8ui	a6, a6, 128
20007333:	743000        	extui	a3, a0, 0, 8
20007336:	a06630        	addx4	a6, a6, a3
20007339:	a06670        	addx4	a6, a6, a7
2000733c:	0020c0        	memw
2000733f:	000642        	l8ui	a4, a6, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
20007342:	c6e407        	bbsi	a4, 0, 2000730c <TEST_NfcReadAll+0x3ac>
20007345:	088076        	loop	a0, 20007351 <TEST_NfcReadAll+0x3f1>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20007348:	0020c0        	memw
2000734b:	000672        	l8ui	a7, a6, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
2000734e:	bae707        	bbsi	a7, 0, 2000730c <TEST_NfcReadAll+0x3ac>

20007351 <TEST_NfcReadAll+0x3f1>:
20007351:	fffc06        	j	20007345 <TEST_NfcReadAll+0x3e5>

20007354 <TEST_NfcReadAll+0x3f4>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2172
        {
            if(NFC_STATUS_SUCCESS != HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun))
            {
                HAL_NfcResetCmdQue(tFlashAddr.ucPU, tFlashAddr.ucLun);
20007354:	000122        	l8ui	a2, a1, 0
20007357:	010132        	l8ui	a3, a1, 1
2000735a:	e59301        	l32r	a0, 200009a8 <_stext+0x2a8>
2000735d:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2173
                HAL_NfcClearINTSts(tFlashAddr.ucPU, tFlashAddr.ucLun);
20007360:	000122        	l8ui	a2, a1, 0
20007363:	010132        	l8ui	a3, a1, 1
20007366:	e59101        	l32r	a0, 200009ac <_stext+0x2ac>
20007369:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2174
                DBG_Printf("Pu %d LUN %d Read Fail, ErrType:%d\n",tFlashAddr.ucPU
2000736c:	000122        	l8ui	a2, a1, 0
2000736f:	010132        	l8ui	a3, a1, 1
20007372:	ff4105        	call0	20006784 <HAL_NfcGetErrCode>
20007375:	000132        	l8ui	a3, a1, 0
20007378:	025d      	mov.n	a5, a2
2000737a:	010142        	l8ui	a4, a1, 1
2000737d:	e5bd21        	l32r	a2, 20000a74 <_stext+0x374>
20007380:	038e05        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2176
                    , tFlashAddr.ucLun, HAL_NfcGetErrCode(tFlashAddr.ucPU, tFlashAddr.ucLun));
                DBG_Getch();
20007383:	e4e501        	l32r	a0, 20000718 <_stext+0x18>
20007386:	0000c0        	callx0	a0
20007389:	ffe206        	j	20007315 <TEST_NfcReadAll+0x3b5>

2000738c <TEST_NfcReadAll+0x42c>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2182
            }
        }
    }
#endif

    return;
2000738c:	a1c8      	l32i.n	a12, a1, 40
2000738e:	b1d8      	l32i.n	a13, a1, 44
20007390:	c1e8      	l32i.n	a14, a1, 48
20007392:	d1f8      	l32i.n	a15, a1, 52
20007394:	9108      	l32i.n	a0, a1, 36
20007396:	40c112        	addi	a1, a1, 64
20007399:	f00d      	ret.n

2000739b <TEST_NfcReadAll+0x43b>:
	...

2000739c <TEST_NfcReadAll+0x43c>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1596
        pRdReq->bsInjErrEn = TRUE;
        pRdReq->pErrInj = &g_tErrInj;
    }
    else
    {
        pRdReq->pErrInj = NULL;
2000739c:	080c      	movi.n	a8, 0
2000739e:	8189      	s32i.n	a8, a1, 32
200073a0:	ff1606        	j	20006ffc <TEST_NfcReadAll+0x9c>

200073a3 <TEST_NfcReadAll+0x443>:
	...

200073a4 <TEST_NfcWriteAll>:
TEST_NfcWriteAll():
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1936
    20150229    abby    merge TLC write test code into MLC
****************************************************************************/
void TEST_NfcWriteAll(WRITE_REQ_TYPE WriteType)
{
    FLASH_ADDR tFlashAddr = {0};
    NFC_PRG_REQ_DES tWrReq = {0};
200073a4:	841c      	movi.n	a4, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1935
    20151112    abby    create
    20150229    abby    merge TLC write test code into MLC
****************************************************************************/
void TEST_NfcWriteAll(WRITE_REQ_TYPE WriteType)
{
    FLASH_ADDR tFlashAddr = {0};
200073a6:	e59c51        	l32r	a5, 20000a18 <_stext+0x318>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1934
History       :
    20151112    abby    create
    20150229    abby    merge TLC write test code into MLC
****************************************************************************/
void TEST_NfcWriteAll(WRITE_REQ_TYPE WriteType)
{
200073a9:	c0c112        	addi	a1, a1, -64
200073ac:	d1f9      	s32i.n	a15, a1, 52
200073ae:	9109      	s32i.n	a0, a1, 36
200073b0:	b1d9      	s32i.n	a13, a1, 44
200073b2:	a1c9      	s32i.n	a12, a1, 40
200073b4:	c1e9      	s32i.n	a14, a1, 48
200073b6:	e596c1        	l32r	a12, 20000a10 <_stext+0x310>
200073b9:	e4e2e1        	l32r	a14, 20000744 <_stext+0x44>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1936
    FLASH_ADDR tFlashAddr = {0};
    NFC_PRG_REQ_DES tWrReq = {0};
200073bc:	358b      	addi.n	a3, a5, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1934
History       :
    20151112    abby    create
    20150229    abby    merge TLC write test code into MLC
****************************************************************************/
void TEST_NfcWriteAll(WRITE_REQ_TYPE WriteType)
{
200073be:	02dd      	mov.n	a13, a2
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1935
    FLASH_ADDR tFlashAddr = {0};
200073c0:	1508      	l32i.n	a0, a5, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1936
    NFC_PRG_REQ_DES tWrReq = {0};
200073c2:	218b      	addi.n	a2, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1935
    20151112    abby    create
    20150229    abby    merge TLC write test code into MLC
****************************************************************************/
void TEST_NfcWriteAll(WRITE_REQ_TYPE WriteType)
{
    FLASH_ADDR tFlashAddr = {0};
200073c4:	1109      	s32i.n	a0, a1, 4
200073c6:	0558      	l32i.n	a5, a5, 0
200073c8:	0159      	s32i.n	a5, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1936
    NFC_PRG_REQ_DES tWrReq = {0};
200073ca:	03e645        	call0	2000b230 <memcpy>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1225
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
200073cd:	232c02        	l32i	a0, a12, 140
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1219

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
200073d0:	3a2c42        	l32i	a4, a12, 232
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1218
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
200073d3:	262c52        	l32i	a5, a12, 152
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1227
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;
200073d6:	242c92        	l32i	a9, a12, 144
200073d9:	61a8      	l32i.n	a10, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
200073db:	372c72        	l32i	a7, a12, 220
200073de:	160c      	movi.n	a6, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
200073e0:	e4cf81        	l32r	a8, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
200073e3:	030c      	movi.n	a3, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
200073e5:	0888      	l32i.n	a8, a8, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
200073e7:	833670        	moveqz	a3, a6, a7
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1227
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;
200073ea:	0339a4        	insbits	a10, a9, 3, 3
200073ed:	61a9      	s32i.n	a10, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
200073ef:	e4eb91        	l32r	a9, 2000079c <_stext+0x9c>
200073f2:	0888      	l32i.n	a8, a8, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1224
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
200073f4:	272c72        	l32i	a7, a12, 156
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
200073f7:	889a      	add.n	a8, a8, a9
200073f9:	f58080        	extui	a8, a8, 16, 16
200073fc:	1188f0        	slli	a8, a8, 1
200073ff:	045182        	s16i	a8, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1218
    pWrReq->bsRedOntf       = g_bRedOntf;
20007402:	2128      	l32i.n	a2, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1226
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
20007404:	312c82        	l32i	a8, a12, 196
20007407:	5189      	s32i.n	a8, a1, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1218
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
20007409:	900524        	insbits	a2, a5, 16, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1219
    pWrReq->bsCSEn          = g_bCacheStsEn;
2000740c:	922424        	insbits	a2, a4, 18, 18
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1220
    pWrReq->bsSsu0En        = g_bSsuEn;
2000740f:	362c42        	l32i	a4, a12, 216
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
20007412:	0153c0        	slli	a5, a3, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1220
LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
20007415:	933424        	insbits	a2, a4, 19, 19
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
20007418:	1022e0        	and	a2, a2, a14
2000741b:	202250        	or	a2, a2, a5
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1222
    pWrReq->bsSsu1En        = g_bSsuEn;
2000741e:	b15424        	insbits	a2, a4, 21, 21
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1223
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
20007421:	e57e41        	l32r	a4, 20000a1c <_stext+0x31c>
20007424:	0133a0        	slli	a3, a3, 22
20007427:	102240        	and	a2, a2, a4
2000742a:	202230        	or	a2, a2, a3
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1224
    pWrReq->bsLbaChkEn      = g_bLbaChk;
2000742d:	911724        	insbits	a2, a7, 17, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1225
    pWrReq->bsTlcMode       = g_bTlcMode;
20007430:	d3b024        	insbits	a2, a0, 27, 27
20007433:	2129      	s32i.n	a2, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1229
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;

    if (FALSE != g_ErrInjEn)
20007435:	0020c0        	memw
20007438:	112c62        	l32i	a6, a12, 68
2000743b:	202616        	beqz	a6, 20007641 <TEST_NfcWriteAll+0x29d>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1232
    {
        pWrReq->bsInjErrEn = TRUE;
        pWrReq->pErrInj    = &g_tErrInj;
2000743e:	e573a1        	l32r	a10, 20000a0c <_stext+0x30c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1231
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;

    if (FALSE != g_ErrInjEn)
    {
        pWrReq->bsInjErrEn = TRUE;
20007441:	e54191        	l32r	a9, 20000948 <_stext+0x248>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1232
        pWrReq->pErrInj    = &g_tErrInj;
20007444:	71a9      	s32i.n	a10, a1, 28
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1231
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;

    if (FALSE != g_ErrInjEn)
    {
        pWrReq->bsInjErrEn = TRUE;
20007446:	209290        	or	a9, a2, a9
20007449:	026192        	s32i	a9, a1, 8

2000744c <TEST_NfcWriteAll+0xa8>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1240
    {
        pWrReq->pErrInj = NULL;
    }

    /*  scramble disable    */
    if (g_bRawDataRead)
2000744c:	392cb2        	l32i	a11, a12, 228
2000744f:	5b9c      	beqz.n	a11, 20007468 <TEST_NfcWriteAll+0xc4>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1243
    {
        volatile PG_CONF_REG *pNfcPgCfg = (volatile PG_CONF_REG *) &rNfcPgCfg;
        pNfcPgCfg->bsScrBps = TRUE;
20007451:	830c      	movi.n	a3, 8
20007453:	747c      	movi.n	a4, -9
20007455:	e4c621        	l32r	a2, 20000770 <_stext+0x70>
20007458:	0020c0        	memw
2000745b:	02f8      	l32i.n	a15, a2, 0
2000745d:	10ff40        	and	a15, a15, a4
20007460:	20ff30        	or	a15, a15, a3
20007463:	0020c0        	memw
20007466:	02f9      	s32i.n	a15, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1944
    TEST_NfcWtCfgReqComm(&tWrReq);

    tFlashAddr.bsSLCMode = !g_bTlcMode;

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
20007468:	771c62        	l16ui	a6, a12, 238
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1941
    NFC_PRG_REQ_DES tWrReq = {0};
    U16 usPrgIndex;

    TEST_NfcWtCfgReqComm(&tWrReq);

    tFlashAddr.bsSLCMode = !g_bTlcMode;
2000746b:	190c      	movi.n	a9, 1
2000746d:	080c      	movi.n	a8, 0
2000746f:	0178      	l32i.n	a7, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1943

    tFlashAddr.usBlock = g_usTestBlkStart;
20007471:	761c52        	l16ui	a5, a12, 236
20007474:	025152        	s16i	a5, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1941
    NFC_PRG_REQ_DES tWrReq = {0};
    U16 usPrgIndex;

    TEST_NfcWtCfgReqComm(&tWrReq);

    tFlashAddr.bsSLCMode = !g_bTlcMode;
20007477:	1077e0        	and	a7, a7, a14
2000747a:	838900        	moveqz	a8, a9, a0
2000747d:	0188c0        	slli	a8, a8, 20
20007480:	207780        	or	a7, a7, a8
20007483:	0179      	s32i.n	a7, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1944

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
20007485:	023567        	bltu	a5, a6, 2000748b <TEST_NfcWriteAll+0xe7>
20007488:	006986        	j	20007632 <TEST_NfcWriteAll+0x28e>
2000748b:	d50c62        	l8ui	a6, a12, 213
2000748e:	e564e1        	l32r	a14, 20000a20 <_stext+0x320>
20007491:	e4a4f1        	l32r	a15, 20000724 <_stext+0x24>
20007494:	000506        	j	200074ac <TEST_NfcWriteAll+0x108>

20007497 <TEST_NfcWriteAll+0xf3>:
	...

20007498 <TEST_NfcWriteAll+0xf4>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2030
                {
                    //DBG_Printf("Pu %d Block %d Page %d Write OK!\n",tFlashAddr.ucPU,tFlashAddr.usBlock,tFlashAddr.usPage);
                }
            }
        }
        tFlashAddr.usBlock++;
20007498:	021192        	l16ui	a9, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1944
    TEST_NfcWtCfgReqComm(&tWrReq);

    tFlashAddr.bsSLCMode = !g_bTlcMode;

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
2000749b:	771ca2        	l16ui	a10, a12, 238
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2030
                {
                    //DBG_Printf("Pu %d Block %d Page %d Write OK!\n",tFlashAddr.ucPU,tFlashAddr.usBlock,tFlashAddr.usPage);
                }
            }
        }
        tFlashAddr.usBlock++;
2000749e:	991b      	addi.n	a9, a9, 1
200074a0:	f49090        	extui	a9, a9, 0, 16
200074a3:	025192        	s16i	a9, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1944
    TEST_NfcWtCfgReqComm(&tWrReq);

    tFlashAddr.bsSLCMode = !g_bTlcMode;

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
200074a6:	0239a7        	bltu	a9, a10, 200074ac <TEST_NfcWriteAll+0x108>
200074a9:	006146        	j	20007632 <TEST_NfcWriteAll+0x28e>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1946
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
200074ac:	d40c02        	l8ui	a0, a12, 212
200074af:	004102        	s8i	a0, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1947
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
200074b2:	023067        	bltu	a0, a6, 200074b8 <TEST_NfcWriteAll+0x114>
200074b5:	0049c6        	j	200075e0 <TEST_NfcWriteAll+0x23c>
200074b8:	d70c22        	l8ui	a2, a12, 215
200074bb:	000546        	j	200074d4 <TEST_NfcWriteAll+0x130>

200074be <TEST_NfcWriteAll+0x11a>:
	...

200074c0 <TEST_NfcWriteAll+0x11c>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1950
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
200074c0:	d50c62        	l8ui	a6, a12, 213
200074c3:	000102        	l8ui	a0, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2007
                    }
                    usPrgIndex++;
                }
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
200074c6:	001b      	addi.n	a0, a0, 1
200074c8:	740000        	extui	a0, a0, 0, 8
200074cb:	004102        	s8i	a0, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1947

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
200074ce:	023067        	bltu	a0, a6, 200074d4 <TEST_NfcWriteAll+0x130>
200074d1:	004206        	j	200075dd <TEST_NfcWriteAll+0x239>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1949
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
200074d4:	d60c32        	l8ui	a3, a12, 214
200074d7:	014132        	s8i	a3, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1950
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
200074da:	e8b327        	bgeu	a3, a2, 200074c6 <TEST_NfcWriteAll+0x122>
200074dd:	791c02        	l16ui	a0, a12, 242
200074e0:	000446        	j	200074f5 <TEST_NfcWriteAll+0x151>

200074e3 <TEST_NfcWriteAll+0x13f>:
	...

200074e4 <TEST_NfcWriteAll+0x140>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2005
                    {
                        DBG_Getch();
                    }
                    usPrgIndex++;
                }
                tFlashAddr.ucLun++;
200074e4:	010142        	l8ui	a4, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1950
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
200074e7:	d70c22        	l8ui	a2, a12, 215
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2005
                    {
                        DBG_Getch();
                    }
                    usPrgIndex++;
                }
                tFlashAddr.ucLun++;
200074ea:	441b      	addi.n	a4, a4, 1
200074ec:	744040        	extui	a4, a4, 0, 8
200074ef:	014142        	s8i	a4, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1950
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
200074f2:	cab427        	bgeu	a4, a2, 200074c0 <TEST_NfcWriteAll+0x11c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1952
            {
                usPrgIndex = g_usTestPageStart;
200074f5:	781c52        	l16ui	a5, a12, 240
200074f8:	105152        	s16i	a5, a1, 32
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1953
                while (usPrgIndex < g_usTestPageEnd * PRG_CYC_CNT)
200074fb:	e5b507        	bgeu	a5, a0, 200074e4 <TEST_NfcWriteAll+0x140>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1955
                {
                    tFlashAddr.usPage = TEST_NfcWtGetPageAddr(&usPrgIndex);
200074fe:	20c122        	addi	a2, a1, 32
20007501:	ff0a05        	call0	200065a4 <TEST_NfcWtGetPageAddr..GBB_1482204275>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1958
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
20007504:	791c02        	l16ui	a0, a12, 242
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1955
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
            {
                usPrgIndex = g_usTestPageStart;
                while (usPrgIndex < g_usTestPageEnd * PRG_CYC_CNT)
                {
                    tFlashAddr.usPage = TEST_NfcWtGetPageAddr(&usPrgIndex);
20007507:	035122        	s16i	a2, a1, 6
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1958
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
2000750a:	d6b207        	bgeu	a2, a0, 200074e4 <TEST_NfcWriteAll+0x140>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
2000750d:	362c62        	l32i	a6, a12, 216
20007510:	ac48      	l32i.n	a4, a12, 40
20007512:	010132        	l8ui	a3, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1960
                    tFlashAddr.usPage = TEST_NfcWtGetPageAddr(&usPrgIndex);
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
                    }
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
20007515:	2178      	l32i.n	a7, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
20007517:	000102        	l8ui	a0, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1961
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
                    }
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
2000751a:	6158      	l32i.n	a5, a1, 24
2000751c:	887c      	movi.n	a8, -8
2000751e:	105580        	and	a5, a5, a8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
20007521:	20fa      	add.n	a2, a0, a15
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1960
                    tFlashAddr.usPage = TEST_NfcWtGetPageAddr(&usPrgIndex);
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
                    }
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
20007523:	1077e0        	and	a7, a7, a14
20007526:	2179      	s32i.n	a7, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
20007528:	800222        	l8ui	a2, a2, 128
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1961
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
                    }
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
2000752b:	066152        	s32i	a5, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
2000752e:	a02230        	addx4	a2, a2, a3
20007531:	a02240        	addx4	a2, a2, a4
20007534:	070616        	beqz	a6, 200075a8 <TEST_NfcWriteAll+0x204>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:536
    20151029    abby     modify to meet VT3533 
------------------------------------------------------------------------------*/
U8 HAL_NfcGetRP(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20007537:	0020c0        	memw
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:528
    {
        return 0;
    }
    
    //MixVector only support 512 offset for SSUx in one MCU
    return GET_CMD_LEVEL(pFlashAddr->ucPU,pFlashAddr->ucLun,pFlashAddr->bsPln
2000753a:	1190e0        	slli	a9, a0, 2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:536
2000753d:	000202        	l8ui	a0, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:528
20007540:	209390        	or	a9, a3, a9
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:536
20007543:	140400        	extui	a0, a0, 4, 2
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:528
20007546:	e32904        	insbits	a0, a9, 2, 31
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1965
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
                
                    TEST_NfcWtDummyDataPrepare(&tFlashAddr, &tWrReq);
                    
                    tWrReq.bsSsu0Addr   = TEST_GetOffset(&tFlashAddr);
20007549:	065102        	s16i	a0, a1, 12
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1966
                    tWrReq.bsSsu1Addr   = tWrReq.bsSsu0Addr + 0x400;
2000754c:	f4b000        	extui	a11, a0, 0, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1967
                    tWrReq.bsCsAddrOff  = tWrReq.bsSsu0Addr;
2000754f:	0461b2        	s32i	a11, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1966
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
                
                    TEST_NfcWtDummyDataPrepare(&tFlashAddr, &tWrReq);
                    
                    tWrReq.bsSsu0Addr   = TEST_GetOffset(&tFlashAddr);
                    tWrReq.bsSsu1Addr   = tWrReq.bsSsu0Addr + 0x400;
20007552:	04dbb2        	addmi	a11, a11, 0x400
20007555:	0751b2        	s16i	a11, a1, 14
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetFull(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20007558:	0020c0        	memw
2000755b:	0002a2        	l8ui	a10, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1968
                    tWrReq.bsCsAddrOff  = tWrReq.bsSsu0Addr;
                    while(TRUE == HAL_NfcGetFull(tFlashAddr.ucPU, tFlashAddr.ucLun))
2000755e:	0f6a37        	bbci	a10, 3, 20007571 <TEST_NfcWriteAll+0x1cd>
20007561:	088076        	loop	a0, 2000756d <TEST_NfcWriteAll+0x1c9>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
20007564:	0020c0        	memw
20007567:	000202        	l8ui	a0, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1968
2000756a:	036037        	bbci	a0, 3, 20007571 <TEST_NfcWriteAll+0x1cd>

2000756d <TEST_NfcWriteAll+0x1c9>:
2000756d:	fffc06        	j	20007561 <TEST_NfcWriteAll+0x1bd>

20007570 <TEST_NfcWriteAll+0x1cc>:
	...

20007571 <TEST_NfcWriteAll+0x1cd>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1972
                    {
                        ;
                    }
                    switch(WriteType)
20007571:	049d16        	beqz	a13, 200075be <TEST_NfcWriteAll+0x21a>
20007574:	561d26        	beqi	a13, 1, 200075ce <TEST_NfcWriteAll+0x22a>
20007577:	332d26        	beqi	a13, 2, 200075ae <TEST_NfcWriteAll+0x20a>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1993
                        }break;
                    #endif

                        default :
                        {
                            DBG_Getch();
2000757a:	e46701        	l32r	a0, 20000718 <_stext+0x18>
2000757d:	0000c0        	callx0	a0
20007580:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1999
                        }break;

                    }//end switch
                    
                    /* check status of NFC CMD REG and DEC SRAM */
                    if (SUCCESS != TEST_NfcWtStsChk(&tFlashAddr, &tWrReq))
20007582:	08c132        	addi	a3, a1, 8
20007585:	feed45        	call0	2000645c <TEST_NfcWtStsChk..JBB_1482204275>
20007588:	051226        	beqi	a2, 1, 20007591 <TEST_NfcWriteAll+0x1ed>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2001
                    {
                        DBG_Getch();
2000758b:	e46301        	l32r	a0, 20000718 <_stext+0x18>
2000758e:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2003
                    }
                    usPrgIndex++;
20007591:	101122        	l16ui	a2, a1, 32
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1953
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
            {
                usPrgIndex = g_usTestPageStart;
                while (usPrgIndex < g_usTestPageEnd * PRG_CYC_CNT)
20007594:	791c02        	l16ui	a0, a12, 242
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2003
                    /* check status of NFC CMD REG and DEC SRAM */
                    if (SUCCESS != TEST_NfcWtStsChk(&tFlashAddr, &tWrReq))
                    {
                        DBG_Getch();
                    }
                    usPrgIndex++;
20007597:	221b      	addi.n	a2, a2, 1
20007599:	f42020        	extui	a2, a2, 0, 16
2000759c:	105122        	s16i	a2, a1, 32
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1953
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
            {
                usPrgIndex = g_usTestPageStart;
                while (usPrgIndex < g_usTestPageEnd * PRG_CYC_CNT)
2000759f:	02b207        	bgeu	a2, a0, 200075a5 <TEST_NfcWriteAll+0x201>
200075a2:	ffd606        	j	200074fe <TEST_NfcWriteAll+0x15a>
200075a5:	ffcec6        	j	200074e4 <TEST_NfcWriteAll+0x140>

200075a8 <TEST_NfcWriteAll+0x204>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
200075a8:	000c      	movi.n	a0, 0
200075aa:	ffe6c6        	j	20007549 <TEST_NfcWriteAll+0x1a5>

200075ad <TEST_NfcWriteAll+0x209>:
	...

200075ae <TEST_NfcWriteAll+0x20a>:
200075ae:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1982
                        }break;

                        case FULL_PAGE_WRITE :
                        {                        
                             HAL_NfcFullPageWrite(&tFlashAddr, &tWrReq);
                        }break;
200075b0:	318b      	addi.n	a3, a1, 8
200075b2:	e53501        	l32r	a0, 20000a88 <_stext+0x388>
200075b5:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1988

                    #ifndef HOST_SATA
                        case HOST_WRITE :
                        {
                            HAL_NfcHostPageWrite(&tFlashAddr, 0, 0, &tWrReq);
                        }break;
200075b8:	fff106        	j	20007580 <TEST_NfcWriteAll+0x1dc>

200075bb <TEST_NfcWriteAll+0x217>:
200075bb:	000000                                        ...

200075be <TEST_NfcWriteAll+0x21a>:
200075be:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1976
                    }
                    switch(WriteType)
                    {
                        case SING_PLN_WRITE :
                        {
                            HAL_NfcSinglePlaneWrite(&tFlashAddr, &tWrReq);
200075c0:	318b      	addi.n	a3, a1, 8
200075c2:	e53201        	l32r	a0, 20000a8c <_stext+0x38c>
200075c5:	0000c0        	callx0	a0
200075c8:	ffed06        	j	20007580 <TEST_NfcWriteAll+0x1dc>

200075cb <TEST_NfcWriteAll+0x227>:
200075cb:	000000                                        ...

200075ce <TEST_NfcWriteAll+0x22a>:
200075ce:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1981
                        }break;

                        case FULL_PAGE_WRITE :
                        {                        
                             HAL_NfcFullPageWrite(&tFlashAddr, &tWrReq);
200075d0:	318b      	addi.n	a3, a1, 8
200075d2:	e51b01        	l32r	a0, 20000a40 <_stext+0x340>
200075d5:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1982
                        }break;
200075d8:	ffe906        	j	20007580 <TEST_NfcWriteAll+0x1dc>

200075db <TEST_NfcWriteAll+0x237>:
	...

200075dd <TEST_NfcWriteAll+0x239>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1947

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
200075dd:	d40c02        	l8ui	a0, a12, 212
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2010
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
        }
        /*  check nfc status by LUN as the basic unit  */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
200075e0:	004102        	s8i	a0, a1, 0
200075e3:	023067        	bltu	a0, a6, 200075e9 <TEST_NfcWriteAll+0x245>
200075e6:	ffab86        	j	20007498 <TEST_NfcWriteAll+0xf4>
200075e9:	d70c22        	l8ui	a2, a12, 215
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2012
        {
            for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
200075ec:	d60c32        	l8ui	a3, a12, 214
200075ef:	014132        	s8i	a3, a1, 1
200075f2:	2eb327        	bgeu	a3, a2, 20007624 <TEST_NfcWriteAll+0x280>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2014
            {
                if(NFC_STATUS_SUCCESS != HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun))
200075f5:	000122        	l8ui	a2, a1, 0
200075f8:	ff9105        	call0	20006f0c <HAL_NfcWaitStatus>
200075fb:	0e1226        	beqi	a2, 1, 2000760d <TEST_NfcWriteAll+0x269>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2016
                {
                    DBG_Printf("Pu %d Block %d Page %d Write Fail!\n",tFlashAddr.ucPU,tFlashAddr.usBlock,tFlashAddr.usPage);
200075fe:	e50921        	l32r	a2, 20000a24 <_stext+0x324>
20007601:	000132        	l8ui	a3, a1, 0
20007604:	021142        	l16ui	a4, a1, 4
20007607:	031152        	l16ui	a5, a1, 6
2000760a:	036585        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2012
            tFlashAddr.ucPU++;
        }
        /*  check nfc status by LUN as the basic unit  */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
        {
            for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
2000760d:	010132        	l8ui	a3, a1, 1
20007610:	d70c22        	l8ui	a2, a12, 215
20007613:	331b      	addi.n	a3, a3, 1
20007615:	743030        	extui	a3, a3, 0, 8
20007618:	014132        	s8i	a3, a1, 1
2000761b:	d63327        	bltu	a3, a2, 200075f5 <TEST_NfcWriteAll+0x251>
2000761e:	d50c62        	l8ui	a6, a12, 213
20007621:	000102        	l8ui	a0, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2010
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
        }
        /*  check nfc status by LUN as the basic unit  */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
20007624:	001b      	addi.n	a0, a0, 1
20007626:	740000        	extui	a0, a0, 0, 8
20007629:	004102        	s8i	a0, a1, 0
2000762c:	bc3067        	bltu	a0, a6, 200075ec <TEST_NfcWriteAll+0x248>
2000762f:	ff9946        	j	20007498 <TEST_NfcWriteAll+0xf4>

20007632 <TEST_NfcWriteAll+0x28e>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2032
                }
            }
        }
        tFlashAddr.usBlock++;
    }
    return;
20007632:	a1c8      	l32i.n	a12, a1, 40
20007634:	b1d8      	l32i.n	a13, a1, 44
20007636:	c1e8      	l32i.n	a14, a1, 48
20007638:	d1f8      	l32i.n	a15, a1, 52
2000763a:	9108      	l32i.n	a0, a1, 36
2000763c:	40c112        	addi	a1, a1, 64
2000763f:	f00d      	ret.n

20007641 <TEST_NfcWriteAll+0x29d>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1236
        pWrReq->bsInjErrEn = TRUE;
        pWrReq->pErrInj    = &g_tErrInj;
    }
    else
    {
        pWrReq->pErrInj = NULL;
20007641:	020c      	movi.n	a2, 0
20007643:	7129      	s32i.n	a2, a1, 28
20007645:	ff80c6        	j	2000744c <TEST_NfcWriteAll+0xa8>

20007648 <TEST_NfcEraseAll>:
TEST_NfcEraseAll():
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1870
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   
20007648:	170c      	movi.n	a7, 1
2000764a:	050c      	movi.n	a5, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1867
Reference     :
History       :
    20151112    abby    create
****************************************************************************/
void TEST_NfcEraseAll(void)
{
2000764c:	d0c112        	addi	a1, a1, -48
2000764f:	51c9      	s32i.n	a12, a1, 20
20007651:	71e9      	s32i.n	a14, a1, 28
20007653:	81f9      	s32i.n	a15, a1, 32
20007655:	61d9      	s32i.n	a13, a1, 24
20007657:	4109      	s32i.n	a0, a1, 16
20007659:	e4edd1        	l32r	a13, 20000a10 <_stext+0x310>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1868
    FLASH_ADDR tFlashAddr = {0};
2000765c:	e4ee01        	l32r	a0, 20000a14 <_stext+0x314>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
2000765f:	771d32        	l16ui	a3, a13, 238
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1868
History       :
    20151112    abby    create
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
20007662:	0048      	l32i.n	a4, a0, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1870
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   
20007664:	232d82        	l32i	a8, a13, 140
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1872

    tFlashAddr.usBlock = g_usTestBlkStart;
20007667:	761d22        	l16ui	a2, a13, 236
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1868
History       :
    20151112    abby    create
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
2000766a:	1068      	l32i.n	a6, a0, 4
2000766c:	1169      	s32i.n	a6, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1872
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
2000766e:	025122        	s16i	a2, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1870
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   
20007671:	e43461        	l32r	a6, 20000744 <_stext+0x44>
20007674:	835780        	moveqz	a5, a7, a8
20007677:	0155c0        	slli	a5, a5, 20
2000767a:	104460        	and	a4, a4, a6
2000767d:	204450        	or	a4, a4, a5
20007680:	0149      	s32i.n	a4, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
20007682:	163237        	bltu	a2, a3, 2000769c <TEST_NfcEraseAll+0x54>
20007685:	0075c6        	j	20007860 <TEST_NfcEraseAll+0x218>

20007688 <TEST_NfcEraseAll+0x40>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1916
                {
                    //DBG_Printf("PU%d LUN %d BLK%d Erase OK!\n", tFlashAddr.ucPU, tFlashAddr.ucLun, tFlashAddr.usBlock);
                }
            }
        }
        tFlashAddr.usBlock++;
20007688:	0211e2        	l16ui	a14, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
2000768b:	771df2        	l16ui	a15, a13, 238
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1916
                {
                    //DBG_Printf("PU%d LUN %d BLK%d Erase OK!\n", tFlashAddr.ucPU, tFlashAddr.ucLun, tFlashAddr.usBlock);
                }
            }
        }
        tFlashAddr.usBlock++;
2000768e:	ee1b      	addi.n	a14, a14, 1
20007690:	f4e0e0        	extui	a14, a14, 0, 16
20007693:	0251e2        	s16i	a14, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
20007696:	023ef7        	bltu	a14, a15, 2000769c <TEST_NfcEraseAll+0x54>
20007699:	0070c6        	j	20007860 <TEST_NfcEraseAll+0x218>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:247
    tFlashAddr.ucPU = ucPU;
    
    /* step1: set feature, User Selectable Trim Profile, 85h/03h data, 00-2-pass MLC;01-1-pass MLC;03-TLC */
    ucAddr = 0x91;
#ifdef SWITCH_MODE_DADF
    ulData = g_bTlcMode ? 0x104 : 0x100;
2000769c:	232d32        	l32i	a3, a13, 140
2000769f:	04a102        	movi	a0, 0x104
200076a2:	00a1c2        	movi	a12, 0x100
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:238
}

//for im 3d tlc slc/tlc mode switch
BOOL TEST_NfcSwitchFlashMode(U8 ucPU)
{
    FLASH_ADDR tFlashAddr = {0};
200076a5:	218b      	addi.n	a2, a1, 8
200076a7:	e4e0f1        	l32r	a15, 20000a28 <_stext+0x328>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1875
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
200076aa:	d40de2        	l8ui	a14, a13, 212
200076ad:	0041e2        	s8i	a14, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:238
200076b0:	0f48      	l32i.n	a4, a15, 0
200076b2:	1f58      	l32i.n	a5, a15, 4
200076b4:	1259      	s32i.n	a5, a2, 4
200076b6:	0249      	s32i.n	a4, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:247
    tFlashAddr.ucPU = ucPU;
    
    /* step1: set feature, User Selectable Trim Profile, 85h/03h data, 00-2-pass MLC;01-1-pass MLC;03-TLC */
    ucAddr = 0x91;
#ifdef SWITCH_MODE_DADF
    ulData = g_bTlcMode ? 0x104 : 0x100;
200076b8:	93c030        	movnez	a12, a0, a3
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:251
#else
    ulData = g_bTlcMode ? 0x004 : 0x000;
#endif
    HAL_NfcSetFeature(&tFlashAddr, ulData, ucAddr);
200076bb:	0c3d      	mov.n	a3, a12
200076bd:	91a042        	movi	a4, 145
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:242
{
    FLASH_ADDR tFlashAddr = {0};
    U8 ucAddr;
    U32 ulData;
    
    tFlashAddr.ucPU = ucPU;
200076c0:	0841e2        	s8i	a14, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:251
#ifdef SWITCH_MODE_DADF
    ulData = g_bTlcMode ? 0x104 : 0x100;
#else
    ulData = g_bTlcMode ? 0x004 : 0x000;
#endif
    HAL_NfcSetFeature(&tFlashAddr, ulData, ucAddr);
200076c3:	e4e001        	l32r	a0, 20000a44 <_stext+0x344>
200076c6:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
200076c9:	e41621        	l32r	a2, 20000724 <_stext+0x24>
200076cc:	090132        	l8ui	a3, a1, 9
200076cf:	2e2a      	add.n	a2, a14, a2
200076d1:	800222        	l8ui	a2, a2, 128
200076d4:	ad48      	l32i.n	a4, a13, 40
200076d6:	a02230        	addx4	a2, a2, a3
200076d9:	a02240        	addx4	a2, a2, a4
200076dc:	0020c0        	memw
200076df:	000262        	l8ui	a6, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
200076e2:	0ee607        	bbsi	a6, 0, 200076f4 <TEST_NfcEraseAll+0xac>
200076e5:	088076        	loop	a0, 200076f1 <TEST_NfcEraseAll+0xa9>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
200076e8:	0020c0        	memw
200076eb:	000242        	l8ui	a4, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
200076ee:	02e407        	bbsi	a4, 0, 200076f4 <TEST_NfcEraseAll+0xac>

200076f1 <TEST_NfcEraseAll+0xa9>:
200076f1:	fffc06        	j	200076e5 <TEST_NfcEraseAll+0x9d>

200076f4 <TEST_NfcEraseAll+0xac>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1106
    {
        ;
    }

    if (TRUE == HAL_NfcGetErrHold(ucPU, ucLun))
200076f4:	202ee0        	or	a2, a14, a14
200076f7:	fcff85        	call0	200046f0 <HAL_NfcGetErrHold>
200076fa:	0e1266        	bnei	a2, 1, 2000770c <TEST_NfcEraseAll+0xc4>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:254
    if (NFC_STATUS_SUCCESS != HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun))
    {
        DBG_Printf("set feature fail PU:%d Addr0x%x Data0x%x\n", tFlashAddr.ucPU, ucAddr, ulData);
200076fd:	e4cb21        	l32r	a2, 20000a2c <_stext+0x32c>
20007700:	080132        	l8ui	a3, a1, 8
20007703:	91a042        	movi	a4, 145
20007706:	205cc0        	or	a5, a12, a12
20007709:	035585        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:256
    }
    DBG_Printf("set feature OK PU:%d Addr0x%x Data0x%x\n", tFlashAddr.ucPU, ucAddr, ulData);
2000770c:	0c5d      	mov.n	a5, a12
2000770e:	e4c821        	l32r	a2, 20000a30 <_stext+0x330>
20007711:	080132        	l8ui	a3, a1, 8
20007714:	91a042        	movi	a4, 145
20007717:	0354c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:259
    
    /* step2: sync reset to make flash reload trim file from ROM block */
    HAL_NfcSyncResetFlash(&tFlashAddr);
2000771a:	218b      	addi.n	a2, a1, 8
2000771c:	e4cb01        	l32r	a0, 20000a48 <_stext+0x348>
2000771f:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20007722:	e40021        	l32r	a2, 20000724 <_stext+0x24>
20007725:	0801e2        	l8ui	a14, a1, 8
20007728:	090132        	l8ui	a3, a1, 9
2000772b:	2e2a      	add.n	a2, a14, a2
2000772d:	800222        	l8ui	a2, a2, 128
20007730:	ad48      	l32i.n	a4, a13, 40
20007732:	a02230        	addx4	a2, a2, a3
20007735:	a02240        	addx4	a2, a2, a4
20007738:	0020c0        	memw
2000773b:	000252        	l8ui	a5, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
2000773e:	0fe507        	bbsi	a5, 0, 20007751 <TEST_NfcEraseAll+0x109>
20007741:	088076        	loop	a0, 2000774d <TEST_NfcEraseAll+0x105>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20007744:	0020c0        	memw
20007747:	000242        	l8ui	a4, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
2000774a:	03e407        	bbsi	a4, 0, 20007751 <TEST_NfcEraseAll+0x109>

2000774d <TEST_NfcEraseAll+0x105>:
2000774d:	fffc06        	j	20007741 <TEST_NfcEraseAll+0xf9>

20007750 <TEST_NfcEraseAll+0x108>:
	...

20007751 <TEST_NfcEraseAll+0x109>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1106
    {
        ;
    }

    if (TRUE == HAL_NfcGetErrHold(ucPU, ucLun))
20007751:	0e2d      	mov.n	a2, a14
20007753:	201110        	or	a1, a1, a1
20007756:	fcf985        	call0	200046f0 <HAL_NfcGetErrHold>
20007759:	0b1266        	bnei	a2, 1, 20007768 <TEST_NfcEraseAll+0x120>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:262
    if (NFC_STATUS_SUCCESS != HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun))
    {
        DBG_Printf("SYNC Reset PU:%d fail!\n", tFlashAddr.ucPU);
2000775c:	e4b621        	l32r	a2, 20000a34 <_stext+0x334>
2000775f:	080132        	l8ui	a3, a1, 8
20007762:	201110        	or	a1, a1, a1
20007765:	034fc5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:264
    }
    DBG_Printf("SYNC Reset PU:%d OK!\n", tFlashAddr.ucPU);
20007768:	e4b421        	l32r	a2, 20000a38 <_stext+0x338>
2000776b:	080132        	l8ui	a3, a1, 8
2000776e:	201110        	or	a1, a1, a1
20007771:	034f05        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1879
    #ifdef FLASH_INTEL_3DTLC
        TEST_NfcSwitchFlashMode(tFlashAddr.ucPU);
    #endif
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
20007774:	d50d22        	l8ui	a2, a13, 213
20007777:	0001f2        	l8ui	a15, a1, 0
2000777a:	7fbf27        	bgeu	a15, a2, 200077fd <TEST_NfcEraseAll+0x1b5>
2000777d:	d70d02        	l8ui	a0, a13, 215
20007780:	000346        	j	20007791 <TEST_NfcEraseAll+0x149>

20007783 <TEST_NfcEraseAll+0x13b>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1882
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20007783:	d50d22        	l8ui	a2, a13, 213
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1898
                {
                    HAL_NfcFullBlockErase(&tFlashAddr, g_bTlcMode);
                }
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
20007786:	ff1b      	addi.n	a15, a15, 1
20007788:	74f0f0        	extui	a15, a15, 0, 8
2000778b:	0041f2        	s8i	a15, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1879
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
    #ifdef FLASH_INTEL_3DTLC
        TEST_NfcSwitchFlashMode(tFlashAddr.ucPU);
    #endif
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
2000778e:	6bbf27        	bgeu	a15, a2, 200077fd <TEST_NfcEraseAll+0x1b5>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1881
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
20007791:	d60dc2        	l8ui	a12, a13, 214
20007794:	0141c2        	s8i	a12, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1882
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20007797:	ebbc07        	bgeu	a12, a0, 20007786 <TEST_NfcEraseAll+0x13e>
2000779a:	e3e2e1        	l32r	a14, 20000724 <_stext+0x24>
2000779d:	7400f0        	extui	a0, a15, 0, 8
200077a0:	ee0a      	add.n	a14, a14, a0
200077a2:	000886        	j	200077c8 <TEST_NfcEraseAll+0x180>

200077a5 <TEST_NfcEraseAll+0x15d>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1888
            {
                while(TRUE == HAL_NfcGetFull(tFlashAddr.ucPU, tFlashAddr.ucLun))
                {
                    ;
                }
                if(TRUE == g_bSinglePln)
200077a5:	232d32        	l32i	a3, a13, 140
200077a8:	0020c0        	memw
200077ab:	292d22        	l32i	a2, a13, 164
200077ae:	3e1226        	beqi	a2, 1, 200077f0 <TEST_NfcEraseAll+0x1a8>
200077b1:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1894
                {
                    HAL_NfcSingleBlockErase(&tFlashAddr, g_bTlcMode);
                }
                else
                {
                    HAL_NfcFullBlockErase(&tFlashAddr, g_bTlcMode);
200077b3:	e4a601        	l32r	a0, 20000a4c <_stext+0x34c>
200077b6:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1882
        TEST_NfcSwitchFlashMode(tFlashAddr.ucPU);
    #endif
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
200077b9:	d70d02        	l8ui	a0, a13, 215
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1896
                }
                else
                {
                    HAL_NfcFullBlockErase(&tFlashAddr, g_bTlcMode);
                }
                tFlashAddr.ucLun++;
200077bc:	01ccc2        	addi	a12, a12, 1
200077bf:	74c0c0        	extui	a12, a12, 0, 8
200077c2:	0141c2        	s8i	a12, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1882
        TEST_NfcSwitchFlashMode(tFlashAddr.ucPU);
    #endif
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
200077c5:	babc07        	bgeu	a12, a0, 20007783 <TEST_NfcEraseAll+0x13b>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetFull(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
200077c8:	ad38      	l32i.n	a3, a13, 40
200077ca:	800e22        	l8ui	a2, a14, 128
200077cd:	7440c0        	extui	a4, a12, 0, 8
200077d0:	a02240        	addx4	a2, a2, a4
200077d3:	a02230        	addx4	a2, a2, a3
200077d6:	0020c0        	memw
200077d9:	000202        	l8ui	a0, a2, 0
200077dc:	f03d      	nop.n
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1884
            {
                while(TRUE == HAL_NfcGetFull(tFlashAddr.ucPU, tFlashAddr.ucLun))
200077de:	c36037        	bbci	a0, 3, 200077a5 <TEST_NfcEraseAll+0x15d>
200077e1:	088076        	loop	a0, 200077ed <TEST_NfcEraseAll+0x1a5>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
200077e4:	0020c0        	memw
200077e7:	000252        	l8ui	a5, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1884
200077ea:	b76537        	bbci	a5, 3, 200077a5 <TEST_NfcEraseAll+0x15d>

200077ed <TEST_NfcEraseAll+0x1a5>:
200077ed:	fffc06        	j	200077e1 <TEST_NfcEraseAll+0x199>

200077f0 <TEST_NfcEraseAll+0x1a8>:
200077f0:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1890
                {
                    ;
                }
                if(TRUE == g_bSinglePln)
                {
                    HAL_NfcSingleBlockErase(&tFlashAddr, g_bTlcMode);
200077f2:	e49701        	l32r	a0, 20000a50 <_stext+0x350>
200077f5:	0000c0        	callx0	a0
200077f8:	ffef46        	j	200077b9 <TEST_NfcEraseAll+0x171>

200077fb <TEST_NfcEraseAll+0x1b3>:
	...

200077fd <TEST_NfcEraseAll+0x1b5>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1901
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
        }
        /*    check nfc status by LUN as the basic unit    */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
200077fd:	d40df2        	l8ui	a15, a13, 212
20007800:	0041f2        	s8i	a15, a1, 0
20007803:	023f27        	bltu	a15, a2, 20007809 <TEST_NfcEraseAll+0x1c1>
20007806:	ff9f86        	j	20007688 <TEST_NfcEraseAll+0x40>
20007809:	d70d02        	l8ui	a0, a13, 215
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1903
        {
            for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
2000780c:	d60dc2        	l8ui	a12, a13, 214
2000780f:	0141c2        	s8i	a12, a1, 1
20007812:	3bbc07        	bgeu	a12, a0, 20007851 <TEST_NfcEraseAll+0x209>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1905
            {
                if(NFC_STATUS_SUCCESS != HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun))
20007815:	203cc0        	or	a3, a12, a12
20007818:	000122        	l8ui	a2, a1, 0
2000781b:	ff6f05        	call0	20006f0c <HAL_NfcWaitStatus>
2000781e:	171226        	beqi	a2, 1, 20007839 <TEST_NfcEraseAll+0x1f1>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1907
                {
                    DBG_Printf("PU%d LUN %d BLK%d Erase Fail!\n", tFlashAddr.ucPU, tFlashAddr.ucLun, tFlashAddr.usBlock);
20007821:	e48621        	l32r	a2, 20000a3c <_stext+0x33c>
20007824:	000132        	l8ui	a3, a1, 0
20007827:	010142        	l8ui	a4, a1, 1
2000782a:	021152        	l16ui	a5, a1, 4
2000782d:	034345        	call0	2000ac64 <dbg_printf>
20007830:	202110        	or	a2, a1, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1908
                    HAL_NfcResetLun(&tFlashAddr);//error handle, otherwise program other blk also will be fail
20007833:	e48801        	l32r	a0, 20000a54 <_stext+0x354>
20007836:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1903
            tFlashAddr.ucPU++;
        }
        /*    check nfc status by LUN as the basic unit    */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
        {
            for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20007839:	0101c2        	l8ui	a12, a1, 1
2000783c:	d70d02        	l8ui	a0, a13, 215
2000783f:	01ccc2        	addi	a12, a12, 1
20007842:	74c0c0        	extui	a12, a12, 0, 8
20007845:	0141c2        	s8i	a12, a1, 1
20007848:	c93c07        	bltu	a12, a0, 20007815 <TEST_NfcEraseAll+0x1cd>
2000784b:	d50d22        	l8ui	a2, a13, 213
2000784e:	0001f2        	l8ui	a15, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1901
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
        }
        /*    check nfc status by LUN as the basic unit    */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
20007851:	ff1b      	addi.n	a15, a15, 1
20007853:	74f0f0        	extui	a15, a15, 0, 8
20007856:	0041f2        	s8i	a15, a1, 0
20007859:	af3f27        	bltu	a15, a2, 2000780c <TEST_NfcEraseAll+0x1c4>
2000785c:	ff8a06        	j	20007688 <TEST_NfcEraseAll+0x40>

2000785f <TEST_NfcEraseAll+0x217>:
	...

20007860 <TEST_NfcEraseAll+0x218>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1918
                }
            }
        }
        tFlashAddr.usBlock++;
    }
    return;
20007860:	51c8      	l32i.n	a12, a1, 20
20007862:	61d8      	l32i.n	a13, a1, 24
20007864:	71e8      	l32i.n	a14, a1, 28
20007866:	81f8      	l32i.n	a15, a1, 32
20007868:	4108      	l32i.n	a0, a1, 16
2000786a:	30c112        	addi	a1, a1, 48
2000786d:	f00d      	ret.n

2000786f <TEST_NfcEraseAll+0x227>:
	...

20007870 <TEST_NfcErrInjDecRep..BDB_1482204275>:
TEST_NfcErrInjDecRep():
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3113

Purpose   : test error type report
Reference :
****************************************************************************/
LOCAL void TEST_NfcErrInjDecRep(void)
{
20007870:	f0c112        	addi	a1, a1, -16
20007873:	006102        	s32i	a0, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3114
    TEST_NfcErrTypeInj();
20007876:	ff5b85        	call0	20006e30 <TEST_NfcErrTypeInj..OCB_1482204275>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3116

    TEST_NfcErrStsInj();
20007879:	ff0d85        	call0	20006954 <TEST_NfcErrStsInj..PCB_1482204275>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3118

    TEST_NfcErrBitInj();
2000787c:	fef245        	call0	200067a4 <TEST_NfcErrBitInj..ADB_1482204275>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3120

    return;
2000787f:	0108      	l32i.n	a0, a1, 0
20007881:	10c112        	addi	a1, a1, 16
20007884:	f00d      	ret.n

20007886 <TEST_NfcErrInjDecRep..BDB_1482204275+0x16>:
	...

20007888 <TEST_NfcLunBitMap..NCB_1482204275>:
TEST_NfcLunBitMap():
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2810
{
    FLASH_ADDR tFlashAddr = {0};
    volatile U32 ulLunBitMap;
    U32 ulTrigTimes;
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;
20007888:	150c      	movi.n	a5, 1
2000788a:	040c      	movi.n	a4, 0
2000788c:	e3ae71        	l32r	a7, 20000744 <_stext+0x44>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2806
Purpose   :
Reference :
****************************************************************************/
LOCAL void TEST_NfcLunBitMap(void)
{
    FLASH_ADDR tFlashAddr = {0};
2000788f:	e48091        	l32r	a9, 20000a90 <_stext+0x390>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2805

Purpose   :
Reference :
****************************************************************************/
LOCAL void TEST_NfcLunBitMap(void)
{
20007892:	d0c112        	addi	a1, a1, -48
20007895:	41c9      	s32i.n	a12, a1, 16
20007897:	61e9      	s32i.n	a14, a1, 24
20007899:	71f9      	s32i.n	a15, a1, 28
2000789b:	3109      	s32i.n	a0, a1, 12
2000789d:	51d9      	s32i.n	a13, a1, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2806
    FLASH_ADDR tFlashAddr = {0};
2000789f:	0928      	l32i.n	a2, a9, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2805

Purpose   :
Reference :
****************************************************************************/
LOCAL void TEST_NfcLunBitMap(void)
{
200078a1:	e45bd1        	l32r	a13, 20000a10 <_stext+0x310>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2806
    FLASH_ADDR tFlashAddr = {0};
200078a4:	1998      	l32i.n	a9, a9, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2813
    U32 ulTrigTimes;
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;
    tFlashAddr.usBlock = g_usTestBlkStart;

    for (tFlashAddr.ucPU = g_ucTestPuStart;tFlashAddr.ucPU < g_ucTestPuEnd;tFlashAddr.ucPU++)
200078a6:	d50d02        	l8ui	a0, a13, 213
200078a9:	d40d32        	l8ui	a3, a13, 212
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2810
{
    FLASH_ADDR tFlashAddr = {0};
    volatile U32 ulLunBitMap;
    U32 ulTrigTimes;
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;
200078ac:	102270        	and	a2, a2, a7
200078af:	232d62        	l32i	a6, a13, 140
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2806
Purpose   :
Reference :
****************************************************************************/
LOCAL void TEST_NfcLunBitMap(void)
{
    FLASH_ADDR tFlashAddr = {0};
200078b2:	1199      	s32i.n	a9, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2811
    volatile U32 ulLunBitMap;
    U32 ulTrigTimes;
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;
    tFlashAddr.usBlock = g_usTestBlkStart;
200078b4:	761d82        	l16ui	a8, a13, 236
200078b7:	025182        	s16i	a8, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2810
{
    FLASH_ADDR tFlashAddr = {0};
    volatile U32 ulLunBitMap;
    U32 ulTrigTimes;
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;
200078ba:	834560        	moveqz	a4, a5, a6
200078bd:	0144c0        	slli	a4, a4, 20
200078c0:	202240        	or	a2, a2, a4
200078c3:	0129      	s32i.n	a2, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2813
    tFlashAddr.usBlock = g_usTestBlkStart;

    for (tFlashAddr.ucPU = g_ucTestPuStart;tFlashAddr.ucPU < g_ucTestPuEnd;tFlashAddr.ucPU++)
200078c5:	004132        	s8i	a3, a1, 0
200078c8:	023307        	bltu	a3, a0, 200078ce <TEST_NfcLunBitMap..NCB_1482204275+0x46>
200078cb:	00cf46        	j	20007c0c <TEST_NfcLunBitMap..NCB_1482204275+0x384>
200078ce:	e395e1        	l32r	a14, 20000724 <_stext+0x24>
200078d1:	0004c6        	j	200078e8 <TEST_NfcLunBitMap..NCB_1482204275+0x60>

200078d4 <TEST_NfcLunBitMap..NCB_1482204275+0x4c>:
200078d4:	000132        	l8ui	a3, a1, 0
200078d7:	d50da2        	l8ui	a10, a13, 213
200078da:	331b      	addi.n	a3, a3, 1
200078dc:	743030        	extui	a3, a3, 0, 8
200078df:	004132        	s8i	a3, a1, 0
200078e2:	0233a7        	bltu	a3, a10, 200078e8 <TEST_NfcLunBitMap..NCB_1482204275+0x60>
200078e5:	00c8c6        	j	20007c0c <TEST_NfcLunBitMap..NCB_1482204275+0x384>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:895
            ulBitMap = pNfcLlunstREG->aErrorReg[ucRegGroupID].ulBitMap;
        }break;

        case LOGIC_LUN_BITMAP_IDLE:
        {
            ulBitMap = pNfcLlunstREG->aIdleReg[ucRegGroupID].ulBitMap;
200078e8:	444330        	extui	a4, a3, 3, 5
200078eb:	152d52        	l32i	a5, a13, 84
200078ee:	1124e0        	slli	a2, a4, 2
200078f1:	a04450        	addx4	a4, a4, a5
200078f4:	0020c0        	memw
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2816
    {
        /*    check PU idle before trigger cmd    */
        ulLunBitMap = HAL_NfcGetLLunStsBitMap(tFlashAddr.ucPU, LOGIC_LUN_BITMAP_IDLE);
200078f7:	240030        	extui	a0, a3, 0, 3
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:895
200078fa:	8448      	l32i.n	a4, a4, 32
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2816
200078fc:	1100e0        	slli	a0, a0, 2
200078ff:	740000        	extui	a0, a0, 0, 8
20007902:	400000        	ssr	a0
20007905:	914040        	srl	a4, a4
20007908:	344040        	extui	a4, a4, 0, 4
2000790b:	0020c0        	memw
2000790e:	2149      	s32i.n	a4, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2817
        for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20007910:	d70d82        	l8ui	a8, a13, 215
20007913:	d60dc2        	l8ui	a12, a13, 214
20007916:	0141c2        	s8i	a12, a1, 1
20007919:	45bc87        	bgeu	a12, a8, 20007962 <TEST_NfcLunBitMap..NCB_1482204275+0xda>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2819
        {
            if (FALSE == (ulLunBitMap & (1 << (tFlashAddr.ucLun + NFC_LUN_PER_PU * (tFlashAddr.ucPU%8)))))
2000791c:	000132        	l8ui	a3, a1, 0
2000791f:	247030        	extui	a7, a3, 0, 3
20007922:	807c70        	add	a7, a12, a7
20007925:	0020c0        	memw
20007928:	022162        	l32i	a6, a1, 8
2000792b:	13d677        	bbs	a6, a7, 20007942 <TEST_NfcLunBitMap..NCB_1482204275+0xba>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2821
            {
                DBG_Printf("PU %d LUN %d is Busy before trig cmd, LUN BitMap = 0x%x\n",tFlashAddr.ucPU, tFlashAddr.ucLun, ulLunBitMap);
2000792e:	e45921        	l32r	a2, 20000a94 <_stext+0x394>
20007931:	204cc0        	or	a4, a12, a12
20007934:	0020c0        	memw
20007937:	2158      	l32i.n	a5, a1, 8
20007939:	033285        	call0	2000ac64 <dbg_printf>
2000793c:	d70d82        	l8ui	a8, a13, 215
2000793f:	0101c2        	l8ui	a12, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2817

    for (tFlashAddr.ucPU = g_ucTestPuStart;tFlashAddr.ucPU < g_ucTestPuEnd;tFlashAddr.ucPU++)
    {
        /*    check PU idle before trigger cmd    */
        ulLunBitMap = HAL_NfcGetLLunStsBitMap(tFlashAddr.ucPU, LOGIC_LUN_BITMAP_IDLE);
        for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20007942:	cc1b      	addi.n	a12, a12, 1
20007944:	74c0c0        	extui	a12, a12, 0, 8
20007947:	0141c2        	s8i	a12, a1, 1
2000794a:	ce3c87        	bltu	a12, a8, 2000791c <TEST_NfcLunBitMap..NCB_1482204275+0x94>
2000794d:	000122        	l8ui	a2, a1, 0
20007950:	d60dc2        	l8ui	a12, a13, 214
20007953:	240020        	extui	a0, a2, 0, 3
20007956:	1100e0        	slli	a0, a0, 2
20007959:	742320        	extui	a2, a2, 3, 8
2000795c:	1122e0        	slli	a2, a2, 2
2000795f:	740000        	extui	a0, a0, 0, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2825
            {
                DBG_Printf("PU %d LUN %d is Busy before trig cmd, LUN BitMap = 0x%x\n",tFlashAddr.ucPU, tFlashAddr.ucLun, ulLunBitMap);
            }
        }

        for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20007962:	0141c2        	s8i	a12, a1, 1
20007965:	24bc87        	bgeu	a12, a8, 2000798d <TEST_NfcLunBitMap..NCB_1482204275+0x105>
20007968:	096122        	s32i	a2, a1, 36
2000796b:	086102        	s32i	a0, a1, 32
2000796e:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2828
        {
            /*     Erase: just do a cmd    */
            HAL_NfcFullBlockErase(&tFlashAddr, FALSE);
20007970:	030c      	movi.n	a3, 0
20007972:	e43601        	l32r	a0, 20000a4c <_stext+0x34c>
20007975:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2825
            {
                DBG_Printf("PU %d LUN %d is Busy before trig cmd, LUN BitMap = 0x%x\n",tFlashAddr.ucPU, tFlashAddr.ucLun, ulLunBitMap);
            }
        }

        for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20007978:	d70d82        	l8ui	a8, a13, 215
2000797b:	cc1b      	addi.n	a12, a12, 1
2000797d:	74c0c0        	extui	a12, a12, 0, 8
20007980:	0141c2        	s8i	a12, a1, 1
20007983:	e73c87        	bltu	a12, a8, 2000796e <TEST_NfcLunBitMap..NCB_1482204275+0xe6>
20007986:	d60dc2        	l8ui	a12, a13, 214
20007989:	8108      	l32i.n	a0, a1, 32
2000798b:	9128      	l32i.n	a2, a1, 36
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:895
2000798d:	152d32        	l32i	a3, a13, 84
20007990:	332a      	add.n	a3, a3, a2
20007992:	0020c0        	memw
20007995:	83f8      	l32i.n	a15, a3, 32
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2832
            /*     Erase: just do a cmd    */
            HAL_NfcFullBlockErase(&tFlashAddr, FALSE);
        }

        /*    check PU idle after trigger cmd  */
        ulLunBitMap = HAL_NfcGetLLunStsBitMap(tFlashAddr.ucPU, LOGIC_LUN_BITMAP_IDLE);
20007997:	400000        	ssr	a0
2000799a:	91f0f0        	srl	a15, a15
2000799d:	34f0f0        	extui	a15, a15, 0, 4
200079a0:	0020c0        	memw
200079a3:	0261f2        	s32i	a15, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2833
        for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
200079a6:	0141c2        	s8i	a12, a1, 1
200079a9:	4bbc87        	bgeu	a12, a8, 200079f8 <TEST_NfcLunBitMap..NCB_1482204275+0x170>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2835
        {
            if (FALSE == (ulLunBitMap & (1 << (tFlashAddr.ucLun + NFC_LUN_PER_PU * (tFlashAddr.ucPU%8)))))
200079ac:	000132        	l8ui	a3, a1, 0
200079af:	245030        	extui	a5, a3, 0, 3
200079b2:	805c50        	add	a5, a12, a5
200079b5:	0020c0        	memw
200079b8:	022142        	l32i	a4, a1, 8
200079bb:	13d457        	bbs	a4, a5, 200079d2 <TEST_NfcLunBitMap..NCB_1482204275+0x14a>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2837
            {
                DBG_Printf("Right STS! PU %d LUN %d is Busy after trig cmd, LUN BitMap = 0x%x\n",tFlashAddr.ucPU, tFlashAddr.ucLun, ulLunBitMap);
200079be:	e43621        	l32r	a2, 20000a98 <_stext+0x398>
200079c1:	204cc0        	or	a4, a12, a12
200079c4:	0020c0        	memw
200079c7:	2158      	l32i.n	a5, a1, 8
200079c9:	032985        	call0	2000ac64 <dbg_printf>
200079cc:	d70d82        	l8ui	a8, a13, 215
200079cf:	0101c2        	l8ui	a12, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2833
            HAL_NfcFullBlockErase(&tFlashAddr, FALSE);
        }

        /*    check PU idle after trigger cmd  */
        ulLunBitMap = HAL_NfcGetLLunStsBitMap(tFlashAddr.ucPU, LOGIC_LUN_BITMAP_IDLE);
        for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
200079d2:	cc1b      	addi.n	a12, a12, 1
200079d4:	74c0c0        	extui	a12, a12, 0, 8
200079d7:	0141c2        	s8i	a12, a1, 1
200079da:	ce3c87        	bltu	a12, a8, 200079ac <TEST_NfcLunBitMap..NCB_1482204275+0x124>
200079dd:	d60dc2        	l8ui	a12, a13, 214
200079e0:	000132        	l8ui	a3, a1, 0
200079e3:	152d42        	l32i	a4, a13, 84
200079e6:	240030        	extui	a0, a3, 0, 3
200079e9:	743330        	extui	a3, a3, 3, 8
200079ec:	1100e0        	slli	a0, a0, 2
200079ef:	740000        	extui	a0, a0, 0, 8
200079f2:	1123e0        	slli	a2, a3, 2
200079f5:	a03340        	addx4	a3, a3, a4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:905
            ulBitMap = pNfcLlunstREG->aNotFullReg[ucRegGroupID].ulBitMap;
        }break;

        case LOGIC_LUN_BITMAP_EMPTY:
        {
            ulBitMap = pNfcLlunstREG->aEmptyReg[ucRegGroupID].ulBitMap;
200079f8:	0020c0        	memw
200079fb:	0348      	l32i.n	a4, a3, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2842
                DBG_Printf("Right STS! PU %d LUN %d is Busy after trig cmd, LUN BitMap = 0x%x\n",tFlashAddr.ucPU, tFlashAddr.ucLun, ulLunBitMap);
            }
        }

        /*  check PU empty before trigger cmd  */
        ulLunBitMap = HAL_NfcGetLLunStsBitMap(tFlashAddr.ucPU, LOGIC_LUN_BITMAP_EMPTY);
200079fd:	400000        	ssr	a0
20007a00:	914040        	srl	a4, a4
20007a03:	344040        	extui	a4, a4, 0, 4
20007a06:	0020c0        	memw
20007a09:	2149      	s32i.n	a4, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2843
        for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20007a0b:	0141c2        	s8i	a12, a1, 1
20007a0e:	42bc87        	bgeu	a12, a8, 20007a54 <TEST_NfcLunBitMap..NCB_1482204275+0x1cc>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2845
        {
            if (FALSE == (ulLunBitMap & (1 << (tFlashAddr.ucLun + NFC_LUN_PER_PU * (tFlashAddr.ucPU%8)))))
20007a11:	000132        	l8ui	a3, a1, 0
20007a14:	246030        	extui	a6, a3, 0, 3
20007a17:	6c6a      	add.n	a6, a12, a6
20007a19:	0020c0        	memw
20007a1c:	2158      	l32i.n	a5, a1, 8
20007a1e:	12d567        	bbs	a5, a6, 20007a34 <TEST_NfcLunBitMap..NCB_1482204275+0x1ac>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2847
            {
                DBG_Printf("PU %d LUN %d is not empty before trig cmd, LUN BitMap = 0x%x\n",tFlashAddr.ucPU, tFlashAddr.ucLun, ulLunBitMap);
20007a21:	e41e21        	l32r	a2, 20000a9c <_stext+0x39c>
20007a24:	0c4d      	mov.n	a4, a12
20007a26:	0020c0        	memw
20007a29:	2158      	l32i.n	a5, a1, 8
20007a2b:	032385        	call0	2000ac64 <dbg_printf>
20007a2e:	d70d82        	l8ui	a8, a13, 215
20007a31:	0101c2        	l8ui	a12, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2843
            }
        }

        /*  check PU empty before trigger cmd  */
        ulLunBitMap = HAL_NfcGetLLunStsBitMap(tFlashAddr.ucPU, LOGIC_LUN_BITMAP_EMPTY);
        for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20007a34:	cc1b      	addi.n	a12, a12, 1
20007a36:	74c0c0        	extui	a12, a12, 0, 8
20007a39:	0141c2        	s8i	a12, a1, 1
20007a3c:	d13c87        	bltu	a12, a8, 20007a11 <TEST_NfcLunBitMap..NCB_1482204275+0x189>
20007a3f:	000122        	l8ui	a2, a1, 0
20007a42:	d60dc2        	l8ui	a12, a13, 214
20007a45:	240020        	extui	a0, a2, 0, 3
20007a48:	1100e0        	slli	a0, a0, 2
20007a4b:	742320        	extui	a2, a2, 3, 8
20007a4e:	1122e0        	slli	a2, a2, 2
20007a51:	740000        	extui	a0, a0, 0, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2851
            {
                DBG_Printf("PU %d LUN %d is not empty before trig cmd, LUN BitMap = 0x%x\n",tFlashAddr.ucPU, tFlashAddr.ucLun, ulLunBitMap);
            }
        }

        for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20007a54:	0141c2        	s8i	a12, a1, 1
20007a57:	22bc87        	bgeu	a12, a8, 20007a7d <TEST_NfcLunBitMap..NCB_1482204275+0x1f5>
20007a5a:	9129      	s32i.n	a2, a1, 36
20007a5c:	8109      	s32i.n	a0, a1, 32
20007a5e:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2854
        {
            /*   Erase: just do a cmd   */
            HAL_NfcFullBlockErase(&tFlashAddr, FALSE);
20007a60:	030c      	movi.n	a3, 0
20007a62:	e3fa01        	l32r	a0, 20000a4c <_stext+0x34c>
20007a65:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2851
            {
                DBG_Printf("PU %d LUN %d is not empty before trig cmd, LUN BitMap = 0x%x\n",tFlashAddr.ucPU, tFlashAddr.ucLun, ulLunBitMap);
            }
        }

        for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20007a68:	d70d82        	l8ui	a8, a13, 215
20007a6b:	cc1b      	addi.n	a12, a12, 1
20007a6d:	74c0c0        	extui	a12, a12, 0, 8
20007a70:	0141c2        	s8i	a12, a1, 1
20007a73:	e73c87        	bltu	a12, a8, 20007a5e <TEST_NfcLunBitMap..NCB_1482204275+0x1d6>
20007a76:	d60dc2        	l8ui	a12, a13, 214
20007a79:	8108      	l32i.n	a0, a1, 32
20007a7b:	9128      	l32i.n	a2, a1, 36
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:905
20007a7d:	152d32        	l32i	a3, a13, 84
20007a80:	332a      	add.n	a3, a3, a2
20007a82:	0020c0        	memw
20007a85:	03f8      	l32i.n	a15, a3, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2858
            /*   Erase: just do a cmd   */
            HAL_NfcFullBlockErase(&tFlashAddr, FALSE);
        }

        /*  check PU empty after trigger cmd  */
        ulLunBitMap = HAL_NfcGetLLunStsBitMap(tFlashAddr.ucPU, LOGIC_LUN_BITMAP_EMPTY);
20007a87:	400000        	ssr	a0
20007a8a:	91f0f0        	srl	a15, a15
20007a8d:	34f0f0        	extui	a15, a15, 0, 4
20007a90:	0020c0        	memw
20007a93:	0261f2        	s32i	a15, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2859
        for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20007a96:	0141c2        	s8i	a12, a1, 1
20007a99:	4bbc87        	bgeu	a12, a8, 20007ae8 <TEST_NfcLunBitMap..NCB_1482204275+0x260>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2861
        {
            if (FALSE == (ulLunBitMap & (1 << (tFlashAddr.ucLun + NFC_LUN_PER_PU * (tFlashAddr.ucPU%8)))))
20007a9c:	000132        	l8ui	a3, a1, 0
20007a9f:	245030        	extui	a5, a3, 0, 3
20007aa2:	805c50        	add	a5, a12, a5
20007aa5:	0020c0        	memw
20007aa8:	022142        	l32i	a4, a1, 8
20007aab:	13d457        	bbs	a4, a5, 20007ac2 <TEST_NfcLunBitMap..NCB_1482204275+0x23a>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2863
            {
                DBG_Printf("Right STS! PU %d LUN %d is not Empty after trig cmd, LUN BitMap = 0x%x\n",tFlashAddr.ucPU, tFlashAddr.ucLun, ulLunBitMap);
20007aae:	e3fc21        	l32r	a2, 20000aa0 <_stext+0x3a0>
20007ab1:	204cc0        	or	a4, a12, a12
20007ab4:	0020c0        	memw
20007ab7:	2158      	l32i.n	a5, a1, 8
20007ab9:	031a85        	call0	2000ac64 <dbg_printf>
20007abc:	d70d82        	l8ui	a8, a13, 215
20007abf:	0101c2        	l8ui	a12, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2859
            HAL_NfcFullBlockErase(&tFlashAddr, FALSE);
        }

        /*  check PU empty after trigger cmd  */
        ulLunBitMap = HAL_NfcGetLLunStsBitMap(tFlashAddr.ucPU, LOGIC_LUN_BITMAP_EMPTY);
        for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20007ac2:	cc1b      	addi.n	a12, a12, 1
20007ac4:	74c0c0        	extui	a12, a12, 0, 8
20007ac7:	0141c2        	s8i	a12, a1, 1
20007aca:	ce3c87        	bltu	a12, a8, 20007a9c <TEST_NfcLunBitMap..NCB_1482204275+0x214>
20007acd:	d60dc2        	l8ui	a12, a13, 214
20007ad0:	000132        	l8ui	a3, a1, 0
20007ad3:	152d42        	l32i	a4, a13, 84
20007ad6:	240030        	extui	a0, a3, 0, 3
20007ad9:	743330        	extui	a3, a3, 3, 8
20007adc:	1100e0        	slli	a0, a0, 2
20007adf:	740000        	extui	a0, a0, 0, 8
20007ae2:	1123e0        	slli	a2, a3, 2
20007ae5:	a03340        	addx4	a3, a3, a4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:900
            ulBitMap = pNfcLlunstREG->aIdleReg[ucRegGroupID].ulBitMap;
        }break;

        case LOGIC_LUN_BITMAP_NOTFULL:
        {
            ulBitMap = pNfcLlunstREG->aNotFullReg[ucRegGroupID].ulBitMap;
20007ae8:	0020c0        	memw
20007aeb:	4348      	l32i.n	a4, a3, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2868
                DBG_Printf("Right STS! PU %d LUN %d is not Empty after trig cmd, LUN BitMap = 0x%x\n",tFlashAddr.ucPU, tFlashAddr.ucLun, ulLunBitMap);
            }
        }

        /*  check PU not full before trigger cmd    */
        ulLunBitMap = HAL_NfcGetLLunStsBitMap(tFlashAddr.ucPU, LOGIC_LUN_BITMAP_NOTFULL);
20007aed:	400000        	ssr	a0
20007af0:	914040        	srl	a4, a4
20007af3:	344040        	extui	a4, a4, 0, 4
20007af6:	0020c0        	memw
20007af9:	2149      	s32i.n	a4, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2869
        for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20007afb:	0141c2        	s8i	a12, a1, 1
20007afe:	42bc87        	bgeu	a12, a8, 20007b44 <TEST_NfcLunBitMap..NCB_1482204275+0x2bc>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2871
        {
            if (FALSE == (ulLunBitMap & (1 << (tFlashAddr.ucLun + NFC_LUN_PER_PU * (tFlashAddr.ucPU%8)))))
20007b01:	000132        	l8ui	a3, a1, 0
20007b04:	246030        	extui	a6, a3, 0, 3
20007b07:	6c6a      	add.n	a6, a12, a6
20007b09:	0020c0        	memw
20007b0c:	2158      	l32i.n	a5, a1, 8
20007b0e:	12d567        	bbs	a5, a6, 20007b24 <TEST_NfcLunBitMap..NCB_1482204275+0x29c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2873
            {
                DBG_Printf("PU %d LUN %d is Full before trig cmd, LUN BitMap = 0x%x\n",tFlashAddr.ucPU, tFlashAddr.ucLun, ulLunBitMap);
20007b11:	e3e421        	l32r	a2, 20000aa4 <_stext+0x3a4>
20007b14:	0c4d      	mov.n	a4, a12
20007b16:	0020c0        	memw
20007b19:	2158      	l32i.n	a5, a1, 8
20007b1b:	031485        	call0	2000ac64 <dbg_printf>
20007b1e:	d70d82        	l8ui	a8, a13, 215
20007b21:	0101c2        	l8ui	a12, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2869
            }
        }

        /*  check PU not full before trigger cmd    */
        ulLunBitMap = HAL_NfcGetLLunStsBitMap(tFlashAddr.ucPU, LOGIC_LUN_BITMAP_NOTFULL);
        for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20007b24:	cc1b      	addi.n	a12, a12, 1
20007b26:	74c0c0        	extui	a12, a12, 0, 8
20007b29:	0141c2        	s8i	a12, a1, 1
20007b2c:	d13c87        	bltu	a12, a8, 20007b01 <TEST_NfcLunBitMap..NCB_1482204275+0x279>
20007b2f:	000122        	l8ui	a2, a1, 0
20007b32:	d60dc2        	l8ui	a12, a13, 214
20007b35:	240020        	extui	a0, a2, 0, 3
20007b38:	1100e0        	slli	a0, a0, 2
20007b3b:	742320        	extui	a2, a2, 3, 8
20007b3e:	1122e0        	slli	a2, a2, 2
20007b41:	740000        	extui	a0, a0, 0, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2876
            if (FALSE == (ulLunBitMap & (1 << (tFlashAddr.ucLun + NFC_LUN_PER_PU * (tFlashAddr.ucPU%8)))))
            {
                DBG_Printf("PU %d LUN %d is Full before trig cmd, LUN BitMap = 0x%x\n",tFlashAddr.ucPU, tFlashAddr.ucLun, ulLunBitMap);
            }
        }
        for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20007b44:	0141c2        	s8i	a12, a1, 1
20007b47:	29bc87        	bgeu	a12, a8, 20007b74 <TEST_NfcLunBitMap..NCB_1482204275+0x2ec>
20007b4a:	9129      	s32i.n	a2, a1, 36
20007b4c:	8109      	s32i.n	a0, a1, 32
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2878
        {
            for (ulTrigTimes = 0; ulTrigTimes < NFCQ_DEPTH; ulTrigTimes++)
20007b4e:	0f0c      	movi.n	a15, 0
20007b50:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2881
            {
                /*     Erase: just do a cmd    */
                HAL_NfcFullBlockErase(&tFlashAddr, FALSE);
20007b52:	030c      	movi.n	a3, 0
20007b54:	e3be01        	l32r	a0, 20000a4c <_stext+0x34c>
20007b57:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2878
                DBG_Printf("PU %d LUN %d is Full before trig cmd, LUN BitMap = 0x%x\n",tFlashAddr.ucPU, tFlashAddr.ucLun, ulLunBitMap);
            }
        }
        for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
        {
            for (ulTrigTimes = 0; ulTrigTimes < NFCQ_DEPTH; ulTrigTimes++)
20007b5a:	ff1b      	addi.n	a15, a15, 1
20007b5c:	f04f66        	bnei	a15, 4, 20007b50 <TEST_NfcLunBitMap..NCB_1482204275+0x2c8>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2876
            if (FALSE == (ulLunBitMap & (1 << (tFlashAddr.ucLun + NFC_LUN_PER_PU * (tFlashAddr.ucPU%8)))))
            {
                DBG_Printf("PU %d LUN %d is Full before trig cmd, LUN BitMap = 0x%x\n",tFlashAddr.ucPU, tFlashAddr.ucLun, ulLunBitMap);
            }
        }
        for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20007b5f:	d70d82        	l8ui	a8, a13, 215
20007b62:	cc1b      	addi.n	a12, a12, 1
20007b64:	74c0c0        	extui	a12, a12, 0, 8
20007b67:	0141c2        	s8i	a12, a1, 1
20007b6a:	e03c87        	bltu	a12, a8, 20007b4e <TEST_NfcLunBitMap..NCB_1482204275+0x2c6>
20007b6d:	d60dc2        	l8ui	a12, a13, 214
20007b70:	8108      	l32i.n	a0, a1, 32
20007b72:	9128      	l32i.n	a2, a1, 36
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:900
20007b74:	152df2        	l32i	a15, a13, 84
20007b77:	80ff20        	add	a15, a15, a2
20007b7a:	0020c0        	memw
20007b7d:	042ff2        	l32i	a15, a15, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2886
                HAL_NfcFullBlockErase(&tFlashAddr, FALSE);
            }
        }

        /*    check PU not full after trigger cmd  */
        ulLunBitMap = HAL_NfcGetLLunStsBitMap(tFlashAddr.ucPU, LOGIC_LUN_BITMAP_NOTFULL);
20007b80:	400000        	ssr	a0
20007b83:	91f0f0        	srl	a15, a15
20007b86:	34f0f0        	extui	a15, a15, 0, 4
20007b89:	0020c0        	memw
20007b8c:	21f9      	s32i.n	a15, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2887
        for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20007b8e:	0141c2        	s8i	a12, a1, 1
20007b91:	30bc87        	bgeu	a12, a8, 20007bc5 <TEST_NfcLunBitMap..NCB_1482204275+0x33d>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2889
        {
            if (FALSE == (ulLunBitMap & (1 << (tFlashAddr.ucLun + NFC_LUN_PER_PU * (tFlashAddr.ucPU%8)))))
20007b94:	000132        	l8ui	a3, a1, 0
20007b97:	242030        	extui	a2, a3, 0, 3
20007b9a:	2c2a      	add.n	a2, a12, a2
20007b9c:	0020c0        	memw
20007b9f:	2108      	l32i.n	a0, a1, 8
20007ba1:	15d027        	bbs	a0, a2, 20007bba <TEST_NfcLunBitMap..NCB_1482204275+0x332>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2891
            {
                DBG_Printf("Right STS! PU %d LUN %d is Full after trig %d cmd, LUN BitMap = 0x%x\n", tFlashAddr.ucPU, NFCQ_DEPTH, tFlashAddr.ucLun, ulLunBitMap);
20007ba4:	e3c121        	l32r	a2, 20000aa8 <_stext+0x3a8>
20007ba7:	440c      	movi.n	a4, 4
20007ba9:	205cc0        	or	a5, a12, a12
20007bac:	0020c0        	memw
20007baf:	2168      	l32i.n	a6, a1, 8
20007bb1:	030b05        	call0	2000ac64 <dbg_printf>
20007bb4:	d70d82        	l8ui	a8, a13, 215
20007bb7:	0101c2        	l8ui	a12, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2887
            }
        }

        /*    check PU not full after trigger cmd  */
        ulLunBitMap = HAL_NfcGetLLunStsBitMap(tFlashAddr.ucPU, LOGIC_LUN_BITMAP_NOTFULL);
        for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20007bba:	cc1b      	addi.n	a12, a12, 1
20007bbc:	74c0c0        	extui	a12, a12, 0, 8
20007bbf:	0141c2        	s8i	a12, a1, 1
20007bc2:	ce3c87        	bltu	a12, a8, 20007b94 <TEST_NfcLunBitMap..NCB_1482204275+0x30c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2896
                DBG_Printf("Right STS! PU %d LUN %d is Full after trig %d cmd, LUN BitMap = 0x%x\n", tFlashAddr.ucPU, NFCQ_DEPTH, tFlashAddr.ucLun, ulLunBitMap);
            }
        }

        /* reset CQ */
        for (tFlashAddr.ucLun = 0; tFlashAddr.ucLun < NFC_LUN_PER_PU; tFlashAddr.ucLun++)
20007bc5:	0c0c      	movi.n	a12, 0
20007bc7:	0141c2        	s8i	a12, a1, 1
20007bca:	0004c6        	j	20007be1 <TEST_NfcLunBitMap..NCB_1482204275+0x359>

20007bcd <TEST_NfcLunBitMap..NCB_1482204275+0x345>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1106
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
    {
        ;
    }

    if (TRUE == HAL_NfcGetErrHold(ucPU, ucLun))
20007bcd:	201110        	or	a1, a1, a1
20007bd0:	fcb1c5        	call0	200046f0 <HAL_NfcGetErrHold>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2896
20007bd3:	0101c2        	l8ui	a12, a1, 1
20007bd6:	cc1b      	addi.n	a12, a12, 1
20007bd8:	74c0c0        	extui	a12, a12, 0, 8
20007bdb:	0141c2        	s8i	a12, a1, 1
20007bde:	cf2c56        	bnez	a12, 200078d4 <TEST_NfcLunBitMap..NCB_1482204275+0x4c>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20007be1:	000122        	l8ui	a2, a1, 0
20007be4:	ad58      	l32i.n	a5, a13, 40
20007be6:	42ea      	add.n	a4, a2, a14
20007be8:	800442        	l8ui	a4, a4, 128
20007beb:	7430c0        	extui	a3, a12, 0, 8
20007bee:	a04430        	addx4	a4, a4, a3
20007bf1:	a04450        	addx4	a4, a4, a5
20007bf4:	0020c0        	memw
20007bf7:	0004f2        	l8ui	a15, a4, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
20007bfa:	cfef07        	bbsi	a15, 0, 20007bcd <TEST_NfcLunBitMap..NCB_1482204275+0x345>
20007bfd:	088076        	loop	a0, 20007c09 <TEST_NfcLunBitMap..NCB_1482204275+0x381>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20007c00:	0020c0        	memw
20007c03:	000452        	l8ui	a5, a4, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
20007c06:	c3e507        	bbsi	a5, 0, 20007bcd <TEST_NfcLunBitMap..NCB_1482204275+0x345>

20007c09 <TEST_NfcLunBitMap..NCB_1482204275+0x381>:
20007c09:	fffc06        	j	20007bfd <TEST_NfcLunBitMap..NCB_1482204275+0x375>

20007c0c <TEST_NfcLunBitMap..NCB_1482204275+0x384>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2907
            HAL_NfcClearINTSts(tFlashAddr.ucPU, tFlashAddr.ucLun);
        #endif
        }
    }

    return;
20007c0c:	41c8      	l32i.n	a12, a1, 16
20007c0e:	51d8      	l32i.n	a13, a1, 20
20007c10:	61e8      	l32i.n	a14, a1, 24
20007c12:	71f8      	l32i.n	a15, a1, 28
20007c14:	3108      	l32i.n	a0, a1, 12
20007c16:	30c112        	addi	a1, a1, 48
20007c19:	f00d      	ret.n

20007c1b <TEST_NfcLunBitMap..NCB_1482204275+0x393>:
	...

20007c1c <TEST_NfcPuBitMap..MCB_1482204275>:
TEST_NfcPuBitMap():
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2688
    FLASH_ADDR tFlashAddr = {0};
    volatile U32 ulPuBitMap;
    U32 ulPuIndex;
    U32 ulTrigTimes;

    tFlashAddr.bsSLCMode = !g_bTlcMode;
20007c1c:	040c      	movi.n	a4, 0
20007c1e:	e2c961        	l32r	a6, 20000744 <_stext+0x44>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2683
Purpose   :
Reference :
****************************************************************************/
LOCAL void TEST_NfcPuBitMap(void)
{
    FLASH_ADDR tFlashAddr = {0};
20007c21:	e3a281        	l32r	a8, 20000aac <_stext+0x3ac>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2682

Purpose   :
Reference :
****************************************************************************/
LOCAL void TEST_NfcPuBitMap(void)
{
20007c24:	e0c112        	addi	a1, a1, -32
20007c27:	61e9      	s32i.n	a14, a1, 24
20007c29:	51d9      	s32i.n	a13, a1, 20
20007c2b:	3109      	s32i.n	a0, a1, 12
20007c2d:	71f9      	s32i.n	a15, a1, 28
20007c2f:	41c9      	s32i.n	a12, a1, 16
20007c31:	1f0c      	movi.n	a15, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2683
    FLASH_ADDR tFlashAddr = {0};
20007c33:	0838      	l32i.n	a3, a8, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2682

Purpose   :
Reference :
****************************************************************************/
LOCAL void TEST_NfcPuBitMap(void)
{
20007c35:	e376c1        	l32r	a12, 20000a10 <_stext+0x310>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2683
    FLASH_ADDR tFlashAddr = {0};
20007c38:	1888      	l32i.n	a8, a8, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2690
    U32 ulPuIndex;
    U32 ulTrigTimes;

    tFlashAddr.bsSLCMode = !g_bTlcMode;
    tFlashAddr.usBlock = g_usTestBlkStart;
    tFlashAddr.ucLun = g_ucTestLunStart;
20007c3a:	d60c22        	l8ui	a2, a12, 214
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2688
    FLASH_ADDR tFlashAddr = {0};
    volatile U32 ulPuBitMap;
    U32 ulPuIndex;
    U32 ulTrigTimes;

    tFlashAddr.bsSLCMode = !g_bTlcMode;
20007c3d:	103360        	and	a3, a3, a6
20007c40:	232c52        	l32i	a5, a12, 140
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2683
Purpose   :
Reference :
****************************************************************************/
LOCAL void TEST_NfcPuBitMap(void)
{
    FLASH_ADDR tFlashAddr = {0};
20007c43:	1189      	s32i.n	a8, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2689
    volatile U32 ulPuBitMap;
    U32 ulPuIndex;
    U32 ulTrigTimes;

    tFlashAddr.bsSLCMode = !g_bTlcMode;
    tFlashAddr.usBlock = g_usTestBlkStart;
20007c45:	761c72        	l16ui	a7, a12, 236
20007c48:	025172        	s16i	a7, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2688
    FLASH_ADDR tFlashAddr = {0};
    volatile U32 ulPuBitMap;
    U32 ulPuIndex;
    U32 ulTrigTimes;

    tFlashAddr.bsSLCMode = !g_bTlcMode;
20007c4b:	834f50        	moveqz	a4, a15, a5
20007c4e:	0144c0        	slli	a4, a4, 20
20007c51:	203340        	or	a3, a3, a4
20007c54:	0139      	s32i.n	a3, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2690
    tFlashAddr.usBlock = g_usTestBlkStart;
    tFlashAddr.ucLun = g_ucTestLunStart;
20007c56:	014122        	s8i	a2, a1, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:826
        }
        break;

        case LOGIC_PU_BITMAP_IDLE:
        {
            ulBitMap = pNfLpustREG->ulIdleBitMap;
20007c59:	142c02        	l32i	a0, a12, 80
20007c5c:	0020c0        	memw
20007c5f:	022002        	l32i	a0, a0, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2693
    
    /*  check PU idle before trigger cmd  */
    ulPuBitMap = HAL_NfcGetLogicPuBitMap(LOGIC_PU_BITMAP_IDLE);
20007c62:	0020c0        	memw
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2694
    for (ulPuIndex = g_ucTestPuStart; ulPuIndex < g_ucTestPuEnd; ulPuIndex++)
20007c65:	d40cd2        	l8ui	a13, a12, 212
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2693
    tFlashAddr.bsSLCMode = !g_bTlcMode;
    tFlashAddr.usBlock = g_usTestBlkStart;
    tFlashAddr.ucLun = g_ucTestLunStart;
    
    /*  check PU idle before trigger cmd  */
    ulPuBitMap = HAL_NfcGetLogicPuBitMap(LOGIC_PU_BITMAP_IDLE);
20007c68:	026102        	s32i	a0, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2694
    for (ulPuIndex = g_ucTestPuStart; ulPuIndex < g_ucTestPuEnd; ulPuIndex++)
20007c6b:	d50c02        	l8ui	a0, a12, 213
20007c6e:	22bd07        	bgeu	a13, a0, 20007c94 <TEST_NfcPuBitMap..MCB_1482204275+0x78>

20007c71 <TEST_NfcPuBitMap..MCB_1482204275+0x55>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2696
    {
        if (FALSE == (ulPuBitMap & (1 << ulPuIndex))) // current PU not idle
20007c71:	0020c0        	memw
20007c74:	022192        	l32i	a9, a1, 8
20007c77:	11d9d7        	bbs	a9, a13, 20007c8c <TEST_NfcPuBitMap..MCB_1482204275+0x70>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2698
        {
            DBG_Printf("Wrong STS! PU %d is Busy before trig cmd, PU BitMap = 0x%x\n",ulPuIndex, ulPuBitMap);
20007c7a:	e38d21        	l32r	a2, 20000ab0 <_stext+0x3b0>
20007c7d:	203dd0        	or	a3, a13, a13
20007c80:	0020c0        	memw
20007c83:	022142        	l32i	a4, a1, 8
20007c86:	02fdc5        	call0	2000ac64 <dbg_printf>
20007c89:	d50c02        	l8ui	a0, a12, 213
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2694
    tFlashAddr.usBlock = g_usTestBlkStart;
    tFlashAddr.ucLun = g_ucTestLunStart;
    
    /*  check PU idle before trigger cmd  */
    ulPuBitMap = HAL_NfcGetLogicPuBitMap(LOGIC_PU_BITMAP_IDLE);
    for (ulPuIndex = g_ucTestPuStart; ulPuIndex < g_ucTestPuEnd; ulPuIndex++)
20007c8c:	dd1b      	addi.n	a13, a13, 1
20007c8e:	df3d07        	bltu	a13, a0, 20007c71 <TEST_NfcPuBitMap..MCB_1482204275+0x55>
20007c91:	d40cd2        	l8ui	a13, a12, 212
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2702
        {
            DBG_Printf("Wrong STS! PU %d is Busy before trig cmd, PU BitMap = 0x%x\n",ulPuIndex, ulPuBitMap);
        }
    }

    for (tFlashAddr.ucPU = g_ucTestPuStart;tFlashAddr.ucPU < g_ucTestPuEnd;tFlashAddr.ucPU++)
20007c94:	0041d2        	s8i	a13, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2694
    tFlashAddr.usBlock = g_usTestBlkStart;
    tFlashAddr.ucLun = g_ucTestLunStart;
    
    /*  check PU idle before trigger cmd  */
    ulPuBitMap = HAL_NfcGetLogicPuBitMap(LOGIC_PU_BITMAP_IDLE);
    for (ulPuIndex = g_ucTestPuStart; ulPuIndex < g_ucTestPuEnd; ulPuIndex++)
20007c97:	0e0c      	movi.n	a14, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2702
        {
            DBG_Printf("Wrong STS! PU %d is Busy before trig cmd, PU BitMap = 0x%x\n",ulPuIndex, ulPuBitMap);
        }
    }

    for (tFlashAddr.ucPU = g_ucTestPuStart;tFlashAddr.ucPU < g_ucTestPuEnd;tFlashAddr.ucPU++)
20007c99:	20bd07        	bgeu	a13, a0, 20007cbd <TEST_NfcPuBitMap..MCB_1482204275+0xa1>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2704
    {
        for (tFlashAddr.ucLun = 0;tFlashAddr.ucLun < NFC_LUN_PER_PU;tFlashAddr.ucLun++)
20007c9c:	0141e2        	s8i	a14, a1, 1
20007c9f:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2707
        {
            /*  Erase: just do a cmd  */
            HAL_NfcFullBlockErase(&tFlashAddr, FALSE);
20007ca1:	030c      	movi.n	a3, 0
20007ca3:	e36a01        	l32r	a0, 20000a4c <_stext+0x34c>
20007ca6:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2704
        }
    }

    for (tFlashAddr.ucPU = g_ucTestPuStart;tFlashAddr.ucPU < g_ucTestPuEnd;tFlashAddr.ucPU++)
    {
        for (tFlashAddr.ucLun = 0;tFlashAddr.ucLun < NFC_LUN_PER_PU;tFlashAddr.ucLun++)
20007ca9:	0141f2        	s8i	a15, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2702
        {
            DBG_Printf("Wrong STS! PU %d is Busy before trig cmd, PU BitMap = 0x%x\n",ulPuIndex, ulPuBitMap);
        }
    }

    for (tFlashAddr.ucPU = g_ucTestPuStart;tFlashAddr.ucPU < g_ucTestPuEnd;tFlashAddr.ucPU++)
20007cac:	d50c02        	l8ui	a0, a12, 213
20007caf:	dd1b      	addi.n	a13, a13, 1
20007cb1:	74d0d0        	extui	a13, a13, 0, 8
20007cb4:	0041d2        	s8i	a13, a1, 0
20007cb7:	e13d07        	bltu	a13, a0, 20007c9c <TEST_NfcPuBitMap..MCB_1482204275+0x80>
20007cba:	d40cd2        	l8ui	a13, a12, 212
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:826
20007cbd:	142c22        	l32i	a2, a12, 80
20007cc0:	0020c0        	memw
20007cc3:	2238      	l32i.n	a3, a2, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2712
            HAL_NfcFullBlockErase(&tFlashAddr, FALSE);
        }
    }

    /*  check PU idle after trigger cmd  */
    ulPuBitMap = HAL_NfcGetLogicPuBitMap(LOGIC_PU_BITMAP_IDLE);
20007cc5:	0020c0        	memw
20007cc8:	2139      	s32i.n	a3, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2713
    for (ulPuIndex = g_ucTestPuStart; ulPuIndex < g_ucTestPuEnd; ulPuIndex++)
20007cca:	25bd07        	bgeu	a13, a0, 20007cf3 <TEST_NfcPuBitMap..MCB_1482204275+0xd7>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2715
    {
        if (FALSE == (ulPuBitMap & (1 << ulPuIndex)))
20007ccd:	0020c0        	memw
20007cd0:	022142        	l32i	a4, a1, 8
20007cd3:	11d4d7        	bbs	a4, a13, 20007ce8 <TEST_NfcPuBitMap..MCB_1482204275+0xcc>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2717
        {
            DBG_Printf("Right STS! PU %d is Busy after trig cmd, PU BitMap = 0x%x\n",ulPuIndex, ulPuBitMap);
20007cd6:	e37721        	l32r	a2, 20000ab4 <_stext+0x3b4>
20007cd9:	203dd0        	or	a3, a13, a13
20007cdc:	0020c0        	memw
20007cdf:	022142        	l32i	a4, a1, 8
20007ce2:	02f805        	call0	2000ac64 <dbg_printf>
20007ce5:	d50c02        	l8ui	a0, a12, 213
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2713
        }
    }

    /*  check PU idle after trigger cmd  */
    ulPuBitMap = HAL_NfcGetLogicPuBitMap(LOGIC_PU_BITMAP_IDLE);
    for (ulPuIndex = g_ucTestPuStart; ulPuIndex < g_ucTestPuEnd; ulPuIndex++)
20007ce8:	dd1b      	addi.n	a13, a13, 1
20007cea:	df3d07        	bltu	a13, a0, 20007ccd <TEST_NfcPuBitMap..MCB_1482204275+0xb1>
20007ced:	d40cd2        	l8ui	a13, a12, 212
20007cf0:	142c22        	l32i	a2, a12, 80
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:838
        }
        break;

        case LOGIC_PU_BITMAP_EMPTY:
        {
            ulBitMap = pNfLpustREG->ulEmptyBitMap;
20007cf3:	0020c0        	memw
20007cf6:	0258      	l32i.n	a5, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2722
            DBG_Printf("Right STS! PU %d is Busy after trig cmd, PU BitMap = 0x%x\n",ulPuIndex, ulPuBitMap);
        }
    }

    /*    check PU empty before trigger cmd    */
    ulPuBitMap = HAL_NfcGetLogicPuBitMap(LOGIC_PU_BITMAP_EMPTY);
20007cf8:	0020c0        	memw
20007cfb:	026152        	s32i	a5, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2723
    for (ulPuIndex = g_ucTestPuStart; ulPuIndex < g_ucTestPuEnd; ulPuIndex++)
20007cfe:	22bd07        	bgeu	a13, a0, 20007d24 <TEST_NfcPuBitMap..MCB_1482204275+0x108>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2725
    {
        if (FALSE == (ulPuBitMap & (1 << ulPuIndex))) // current PU not idle
20007d01:	0020c0        	memw
20007d04:	022162        	l32i	a6, a1, 8
20007d07:	11d6d7        	bbs	a6, a13, 20007d1c <TEST_NfcPuBitMap..MCB_1482204275+0x100>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2727
        {
            DBG_Printf("Wrong STS! PU %d is not empty before trig cmd, PU BitMap = 0x%x\n",ulPuIndex, ulPuBitMap);
20007d0a:	e36b21        	l32r	a2, 20000ab8 <_stext+0x3b8>
20007d0d:	203dd0        	or	a3, a13, a13
20007d10:	0020c0        	memw
20007d13:	022142        	l32i	a4, a1, 8
20007d16:	02f4c5        	call0	2000ac64 <dbg_printf>
20007d19:	d50c02        	l8ui	a0, a12, 213
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2723
        }
    }

    /*    check PU empty before trigger cmd    */
    ulPuBitMap = HAL_NfcGetLogicPuBitMap(LOGIC_PU_BITMAP_EMPTY);
    for (ulPuIndex = g_ucTestPuStart; ulPuIndex < g_ucTestPuEnd; ulPuIndex++)
20007d1c:	dd1b      	addi.n	a13, a13, 1
20007d1e:	df3d07        	bltu	a13, a0, 20007d01 <TEST_NfcPuBitMap..MCB_1482204275+0xe5>
20007d21:	d40cd2        	l8ui	a13, a12, 212
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2731
        {
            DBG_Printf("Wrong STS! PU %d is not empty before trig cmd, PU BitMap = 0x%x\n",ulPuIndex, ulPuBitMap);
        }
    }

    for (tFlashAddr.ucPU =  g_ucTestPuStart;tFlashAddr.ucPU < g_ucTestPuEnd;tFlashAddr.ucPU++)
20007d24:	0041d2        	s8i	a13, a1, 0
20007d27:	22bd07        	bgeu	a13, a0, 20007d4d <TEST_NfcPuBitMap..MCB_1482204275+0x131>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2733
    {
        for (tFlashAddr.ucLun = 0; tFlashAddr.ucLun < NFC_LUN_PER_PU; tFlashAddr.ucLun++)
20007d2a:	0141e2        	s8i	a14, a1, 1
20007d2d:	202110        	or	a2, a1, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2736
        {
            /*     Erase: just do a cmd    */
            HAL_NfcFullBlockErase(&tFlashAddr, FALSE);
20007d30:	00a032        	movi	a3, 0
20007d33:	e34601        	l32r	a0, 20000a4c <_stext+0x34c>
20007d36:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2733
        }
    }

    for (tFlashAddr.ucPU =  g_ucTestPuStart;tFlashAddr.ucPU < g_ucTestPuEnd;tFlashAddr.ucPU++)
    {
        for (tFlashAddr.ucLun = 0; tFlashAddr.ucLun < NFC_LUN_PER_PU; tFlashAddr.ucLun++)
20007d39:	0141f2        	s8i	a15, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2731
        {
            DBG_Printf("Wrong STS! PU %d is not empty before trig cmd, PU BitMap = 0x%x\n",ulPuIndex, ulPuBitMap);
        }
    }

    for (tFlashAddr.ucPU =  g_ucTestPuStart;tFlashAddr.ucPU < g_ucTestPuEnd;tFlashAddr.ucPU++)
20007d3c:	d50c02        	l8ui	a0, a12, 213
20007d3f:	dd1b      	addi.n	a13, a13, 1
20007d41:	74d0d0        	extui	a13, a13, 0, 8
20007d44:	0041d2        	s8i	a13, a1, 0
20007d47:	df3d07        	bltu	a13, a0, 20007d2a <TEST_NfcPuBitMap..MCB_1482204275+0x10e>
20007d4a:	d40cd2        	l8ui	a13, a12, 212
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:838
20007d4d:	142c22        	l32i	a2, a12, 80
20007d50:	0020c0        	memw
20007d53:	0238      	l32i.n	a3, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2741
            HAL_NfcFullBlockErase(&tFlashAddr, FALSE);
        }
    }

    /*    check PU empty after trigger cmd  */
    ulPuBitMap = HAL_NfcGetLogicPuBitMap(LOGIC_PU_BITMAP_EMPTY);
20007d55:	0020c0        	memw
20007d58:	2139      	s32i.n	a3, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2742
    for (ulPuIndex = g_ucTestPuStart; ulPuIndex < g_ucTestPuEnd; ulPuIndex++)
20007d5a:	25bd07        	bgeu	a13, a0, 20007d83 <TEST_NfcPuBitMap..MCB_1482204275+0x167>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2744
    {
        if (FALSE == (ulPuBitMap & (1 << ulPuIndex)))
20007d5d:	0020c0        	memw
20007d60:	022142        	l32i	a4, a1, 8
20007d63:	11d4d7        	bbs	a4, a13, 20007d78 <TEST_NfcPuBitMap..MCB_1482204275+0x15c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2746
        {
            DBG_Printf("Right STS! PU %d is not Empty after trig cmd, PU BitMap = 0x%x\n",ulPuIndex, ulPuBitMap);
20007d66:	e35521        	l32r	a2, 20000abc <_stext+0x3bc>
20007d69:	203dd0        	or	a3, a13, a13
20007d6c:	0020c0        	memw
20007d6f:	022142        	l32i	a4, a1, 8
20007d72:	02ef05        	call0	2000ac64 <dbg_printf>
20007d75:	d50c02        	l8ui	a0, a12, 213
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2742
        }
    }

    /*    check PU empty after trigger cmd  */
    ulPuBitMap = HAL_NfcGetLogicPuBitMap(LOGIC_PU_BITMAP_EMPTY);
    for (ulPuIndex = g_ucTestPuStart; ulPuIndex < g_ucTestPuEnd; ulPuIndex++)
20007d78:	dd1b      	addi.n	a13, a13, 1
20007d7a:	df3d07        	bltu	a13, a0, 20007d5d <TEST_NfcPuBitMap..MCB_1482204275+0x141>
20007d7d:	d40cd2        	l8ui	a13, a12, 212
20007d80:	142c22        	l32i	a2, a12, 80
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:832
        }
        break;

        case LOGIC_PU_BITMAP_NOTFULL:
        {
            ulBitMap = pNfLpustREG->ulNotFullBitMap;
20007d83:	0020c0        	memw
20007d86:	1258      	l32i.n	a5, a2, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2751
            DBG_Printf("Right STS! PU %d is not Empty after trig cmd, PU BitMap = 0x%x\n",ulPuIndex, ulPuBitMap);
        }
    }

    /*    check PU not full before trigger cmd    */
    ulPuBitMap = HAL_NfcGetLogicPuBitMap(LOGIC_PU_BITMAP_NOTFULL);
20007d88:	0020c0        	memw
20007d8b:	026152        	s32i	a5, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2752
    for (ulPuIndex = g_ucTestPuStart; ulPuIndex < g_ucTestPuEnd; ulPuIndex++)
20007d8e:	22bd07        	bgeu	a13, a0, 20007db4 <TEST_NfcPuBitMap..MCB_1482204275+0x198>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2754
    {
        if (FALSE == (ulPuBitMap & (1 << ulPuIndex))) // current PU not idle
20007d91:	0020c0        	memw
20007d94:	022162        	l32i	a6, a1, 8
20007d97:	11d6d7        	bbs	a6, a13, 20007dac <TEST_NfcPuBitMap..MCB_1482204275+0x190>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2756
        {
            DBG_Printf("Wrong STS! PU %d is Full before trig cmd, PU BitMap = 0x%x\n",ulPuIndex, ulPuBitMap);
20007d9a:	e34921        	l32r	a2, 20000ac0 <_stext+0x3c0>
20007d9d:	203dd0        	or	a3, a13, a13
20007da0:	0020c0        	memw
20007da3:	022142        	l32i	a4, a1, 8
20007da6:	02ebc5        	call0	2000ac64 <dbg_printf>
20007da9:	d50c02        	l8ui	a0, a12, 213
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2752
        }
    }

    /*    check PU not full before trigger cmd    */
    ulPuBitMap = HAL_NfcGetLogicPuBitMap(LOGIC_PU_BITMAP_NOTFULL);
    for (ulPuIndex = g_ucTestPuStart; ulPuIndex < g_ucTestPuEnd; ulPuIndex++)
20007dac:	dd1b      	addi.n	a13, a13, 1
20007dae:	df3d07        	bltu	a13, a0, 20007d91 <TEST_NfcPuBitMap..MCB_1482204275+0x175>
20007db1:	d40cd2        	l8ui	a13, a12, 212
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2759
        if (FALSE == (ulPuBitMap & (1 << ulPuIndex))) // current PU not idle
        {
            DBG_Printf("Wrong STS! PU %d is Full before trig cmd, PU BitMap = 0x%x\n",ulPuIndex, ulPuBitMap);
        }
    }
    tFlashAddr.ucPU =  g_ucTestPuStart;
20007db4:	0041d2        	s8i	a13, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2760
    for (ulTrigTimes = 0; ulTrigTimes < NFCQ_DEPTH; ulTrigTimes++)
20007db7:	0d0c      	movi.n	a13, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2762
    {
        for (tFlashAddr.ucLun = 0; tFlashAddr.ucLun < NFC_LUN_PER_PU; tFlashAddr.ucLun++)
20007db9:	0141e2        	s8i	a14, a1, 1
20007dbc:	202110        	or	a2, a1, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2765
        {
            /*     Erase: just do a cmd    */
            HAL_NfcFullBlockErase(&tFlashAddr, FALSE);
20007dbf:	00a032        	movi	a3, 0
20007dc2:	e32201        	l32r	a0, 20000a4c <_stext+0x34c>
20007dc5:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2762
        }
    }
    tFlashAddr.ucPU =  g_ucTestPuStart;
    for (ulTrigTimes = 0; ulTrigTimes < NFCQ_DEPTH; ulTrigTimes++)
    {
        for (tFlashAddr.ucLun = 0; tFlashAddr.ucLun < NFC_LUN_PER_PU; tFlashAddr.ucLun++)
20007dc8:	0141f2        	s8i	a15, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2760
        {
            DBG_Printf("Wrong STS! PU %d is Full before trig cmd, PU BitMap = 0x%x\n",ulPuIndex, ulPuBitMap);
        }
    }
    tFlashAddr.ucPU =  g_ucTestPuStart;
    for (ulTrigTimes = 0; ulTrigTimes < NFCQ_DEPTH; ulTrigTimes++)
20007dcb:	dd1b      	addi.n	a13, a13, 1
20007dcd:	e84d66        	bnei	a13, 4, 20007db9 <TEST_NfcPuBitMap..MCB_1482204275+0x19d>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:832
20007dd0:	142c72        	l32i	a7, a12, 80
20007dd3:	0020c0        	memw
20007dd6:	012772        	l32i	a7, a7, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2770
            HAL_NfcFullBlockErase(&tFlashAddr, FALSE);
        }
    }

    /*    check PU not full after trigger cmd  */
    ulPuBitMap = HAL_NfcGetLogicPuBitMap(LOGIC_PU_BITMAP_NOTFULL);
20007dd9:	0020c0        	memw
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2771
    for (ulPuIndex = g_ucTestPuStart; ulPuIndex < g_ucTestPuEnd; ulPuIndex++)
20007ddc:	d50c02        	l8ui	a0, a12, 213
20007ddf:	d40cd2        	l8ui	a13, a12, 212
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2770
            HAL_NfcFullBlockErase(&tFlashAddr, FALSE);
        }
    }

    /*    check PU not full after trigger cmd  */
    ulPuBitMap = HAL_NfcGetLogicPuBitMap(LOGIC_PU_BITMAP_NOTFULL);
20007de2:	026172        	s32i	a7, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2771
    for (ulPuIndex = g_ucTestPuStart; ulPuIndex < g_ucTestPuEnd; ulPuIndex++)
20007de5:	23bd07        	bgeu	a13, a0, 20007e0c <TEST_NfcPuBitMap..MCB_1482204275+0x1f0>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2773
    {
        if (FALSE == (ulPuBitMap & (1 << ulPuIndex)))
20007de8:	0020c0        	memw
20007deb:	2188      	l32i.n	a8, a1, 8
20007ded:	13d8d7        	bbs	a8, a13, 20007e04 <TEST_NfcPuBitMap..MCB_1482204275+0x1e8>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2775
        {
            DBG_Printf("Right STS! PU %d is Full after trig %d cmd, PU BitMap = 0x%x\n", ulPuIndex, NFCQ_DEPTH, ulPuBitMap);
20007df0:	e33521        	l32r	a2, 20000ac4 <_stext+0x3c4>
20007df3:	0d3d      	mov.n	a3, a13
20007df5:	04a042        	movi	a4, 4
20007df8:	0020c0        	memw
20007dfb:	022152        	l32i	a5, a1, 8
20007dfe:	02e645        	call0	2000ac64 <dbg_printf>
20007e01:	d50c02        	l8ui	a0, a12, 213
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2771
        }
    }

    /*    check PU not full after trigger cmd  */
    ulPuBitMap = HAL_NfcGetLogicPuBitMap(LOGIC_PU_BITMAP_NOTFULL);
    for (ulPuIndex = g_ucTestPuStart; ulPuIndex < g_ucTestPuEnd; ulPuIndex++)
20007e04:	dd1b      	addi.n	a13, a13, 1
20007e06:	de3d07        	bltu	a13, a0, 20007de8 <TEST_NfcPuBitMap..MCB_1482204275+0x1cc>
20007e09:	d40cd2        	l8ui	a13, a12, 212
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2780
            DBG_Printf("Right STS! PU %d is Full after trig %d cmd, PU BitMap = 0x%x\n", ulPuIndex, NFCQ_DEPTH, ulPuBitMap);
        }
    }

    /* reset CQ */
    for (tFlashAddr.ucPU =  g_ucTestPuStart;tFlashAddr.ucPU < g_ucTestPuEnd;tFlashAddr.ucPU++)
20007e0c:	0041d2        	s8i	a13, a1, 0
20007e0f:	5dbd07        	bgeu	a13, a0, 20007e70 <TEST_NfcPuBitMap..MCB_1482204275+0x254>
20007e12:	e244d1        	l32r	a13, 20000724 <_stext+0x24>
20007e15:	000406        	j	20007e29 <TEST_NfcPuBitMap..MCB_1482204275+0x20d>

20007e18 <TEST_NfcPuBitMap..MCB_1482204275+0x1fc>:
20007e18:	000192        	l8ui	a9, a1, 0
20007e1b:	d50ca2        	l8ui	a10, a12, 213
20007e1e:	991b      	addi.n	a9, a9, 1
20007e20:	749090        	extui	a9, a9, 0, 8
20007e23:	004192        	s8i	a9, a1, 0
20007e26:	46b9a7        	bgeu	a9, a10, 20007e70 <TEST_NfcPuBitMap..MCB_1482204275+0x254>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2782
    {
        for (tFlashAddr.ucLun = 0; tFlashAddr.ucLun < NFC_LUN_PER_PU; tFlashAddr.ucLun++)
20007e29:	000c      	movi.n	a0, 0
20007e2b:	014102        	s8i	a0, a1, 1
20007e2e:	0004c6        	j	20007e45 <TEST_NfcPuBitMap..MCB_1482204275+0x229>

20007e31 <TEST_NfcPuBitMap..MCB_1482204275+0x215>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1106
    {
        ;
    }

    if (TRUE == HAL_NfcGetErrHold(ucPU, ucLun))
20007e31:	201110        	or	a1, a1, a1
20007e34:	fc8b85        	call0	200046f0 <HAL_NfcGetErrHold>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2782
20007e37:	010102        	l8ui	a0, a1, 1
20007e3a:	001b      	addi.n	a0, a0, 1
20007e3c:	740000        	extui	a0, a0, 0, 8
20007e3f:	014102        	s8i	a0, a1, 1
20007e42:	fd2056        	bnez	a0, 20007e18 <TEST_NfcPuBitMap..MCB_1482204275+0x1fc>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20007e45:	000122        	l8ui	a2, a1, 0
20007e48:	ac68      	l32i.n	a6, a12, 40
20007e4a:	52da      	add.n	a5, a2, a13
20007e4c:	800552        	l8ui	a5, a5, 128
20007e4f:	743000        	extui	a3, a0, 0, 8
20007e52:	a05530        	addx4	a5, a5, a3
20007e55:	a05560        	addx4	a5, a5, a6
20007e58:	0020c0        	memw
20007e5b:	000542        	l8ui	a4, a5, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
20007e5e:	cfe407        	bbsi	a4, 0, 20007e31 <TEST_NfcPuBitMap..MCB_1482204275+0x215>
20007e61:	088076        	loop	a0, 20007e6d <TEST_NfcPuBitMap..MCB_1482204275+0x251>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20007e64:	0020c0        	memw
20007e67:	000562        	l8ui	a6, a5, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
20007e6a:	c3e607        	bbsi	a6, 0, 20007e31 <TEST_NfcPuBitMap..MCB_1482204275+0x215>

20007e6d <TEST_NfcPuBitMap..MCB_1482204275+0x251>:
20007e6d:	fffc06        	j	20007e61 <TEST_NfcPuBitMap..MCB_1482204275+0x245>

20007e70 <TEST_NfcPuBitMap..MCB_1482204275+0x254>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2793
            HAL_NfcClearINTSts(tFlashAddr.ucPU, tFlashAddr.ucLun);
        #endif
        }
    }
    
    return;
20007e70:	41c8      	l32i.n	a12, a1, 16
20007e72:	51d8      	l32i.n	a13, a1, 20
20007e74:	61e8      	l32i.n	a14, a1, 24
20007e76:	71f8      	l32i.n	a15, a1, 28
20007e78:	3108      	l32i.n	a0, a1, 12
20007e7a:	20c112        	addi	a1, a1, 32
20007e7d:	f00d      	ret.n

20007e7f <TEST_NfcPuBitMap..MCB_1482204275+0x263>:
	...

20007e80 <TEST_NfcRedDynamUpdate..KCB_1482204275>:
TEST_NfcRedDynamUpdate():
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2529
Reference     :
History        :
    20151203    abby    create
****************************************************************************/
LOCAL void TEST_NfcRedDynamUpdate(void)
{
20007e80:	e0c112        	addi	a1, a1, -32
20007e83:	0109      	s32i.n	a0, a1, 0
20007e85:	41f9      	s32i.n	a15, a1, 16
20007e87:	31e9      	s32i.n	a14, a1, 12
20007e89:	21d9      	s32i.n	a13, a1, 8
20007e8b:	11c9      	s32i.n	a12, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2546
    /*    case 1: single plane, write RED from OTFB, read to DRAM    */
    switch (eReadTypeSel)
    {
        case SING_PLN_READ :
        {
            for (eRedCaseSel = OTFB_W_OTFB_R; eRedCaseSel < SSU_RED_CASE_CNT; eRedCaseSel++)
20007e8d:	00a0d2        	movi	a13, 0
20007e90:	00a0c2        	movi	a12, 0
20007e93:	e222e1        	l32r	a14, 2000071c <_stext+0x1c>
20007e96:	01a0f2        	movi	a15, 1

20007e99 <TEST_NfcRedDynamUpdate..KCB_1482204275+0x19>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2187
    return;
}
BOOL TEST_IsTlcModeSupport(void)
{
#if (defined(FLASH_INTEL_3DTLC) || defined (FLASH_3D_MLC))
    if (g_bTlcMode)
20007e99:	572e02        	l32i	a0, a14, 0x15c
20007e9c:	104056        	bnez	a0, 20007fa4 <TEST_NfcRedDynamUpdate..KCB_1482204275+0x124>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2553
                if (TRUE != TEST_IsTlcModeSupport())
                { 
                    break;
                }

                g_bSinglePln = TRUE;
20007e9f:	0020c0        	memw
20007ea2:	5d6ef2        	s32i	a15, a14, 0x174
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2555

                TEST_NfcEraseAll();
20007ea5:	ff7a05        	call0	20007648 <TEST_NfcEraseAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2556
                g_bRedOntf = !(((U32)eRedCaseSel & 0x2) >> 1); //get 2nd bit of pattern sel
20007ea8:	0441d0        	extui	a4, a13, 1, 1
20007eab:	130c      	movi.n	a3, 1
20007ead:	020c      	movi.n	a2, 0
20007eaf:	832340        	moveqz	a2, a3, a4
20007eb2:	5a6e22        	s32i	a2, a14, 0x168
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2557
                TEST_NfcWriteAll(SING_PLN_WRITE);
20007eb5:	020c      	movi.n	a2, 0
20007eb7:	ff4ec5        	call0	200073a4 <TEST_NfcWriteAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2559
                g_bRedOntf = !((U32)eRedCaseSel & 0x1); //get 1st bit of pattern sel
                TEST_NfcReadAll(0, SEC_PER_PHYPG, SING_PLN_READ);
20007eba:	020c      	movi.n	a2, 0
20007ebc:	032c      	movi.n	a3, 32
20007ebe:	040c      	movi.n	a4, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2558
                g_bSinglePln = TRUE;

                TEST_NfcEraseAll();
                g_bRedOntf = !(((U32)eRedCaseSel & 0x2) >> 1); //get 2nd bit of pattern sel
                TEST_NfcWriteAll(SING_PLN_WRITE);
                g_bRedOntf = !((U32)eRedCaseSel & 0x1); //get 1st bit of pattern sel
20007ec0:	0470d0        	extui	a7, a13, 0, 1
20007ec3:	160c      	movi.n	a6, 1
20007ec5:	00a052        	movi	a5, 0
20007ec8:	835670        	moveqz	a5, a6, a7
20007ecb:	5a6e52        	s32i	a5, a14, 0x168
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2559
                TEST_NfcReadAll(0, SEC_PER_PHYPG, SING_PLN_READ);
20007ece:	ff0905        	call0	20006f60 <TEST_NfcReadAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2561

                g_bSinglePln = FALSE;
20007ed1:	0020c0        	memw
20007ed4:	5d6ec2        	s32i	a12, a14, 0x174
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2546
    /*    case 1: single plane, write RED from OTFB, read to DRAM    */
    switch (eReadTypeSel)
    {
        case SING_PLN_READ :
        {
            for (eRedCaseSel = OTFB_W_OTFB_R; eRedCaseSel < SSU_RED_CASE_CNT; eRedCaseSel++)
20007ed7:	01cdd2        	addi	a13, a13, 1
20007eda:	bb4d66        	bnei	a13, 4, 20007e99 <TEST_NfcRedDynamUpdate..KCB_1482204275+0x19>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2563
                g_bRedOntf = !((U32)eRedCaseSel & 0x1); //get 1st bit of pattern sel
                TEST_NfcReadAll(0, SEC_PER_PHYPG, SING_PLN_READ);

                g_bSinglePln = FALSE;
            }
            DBG_Printf("SING_PLN_READ Red Dynamically Update OK!\n");
20007edd:	e2fa21        	l32r	a2, 20000ac8 <_stext+0x3c8>
20007ee0:	02d805        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2569
        }//break;

        case FULL_PAGE_READ :
        {
            usSecLen = SEC_PER_PIPE_PG;
            for (eRedCaseSel = OTFB_W_OTFB_R; eRedCaseSel < SSU_RED_CASE_CNT; eRedCaseSel++)
20007ee3:	0d0c      	movi.n	a13, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2571
            {
                g_bSinglePln = FALSE;
20007ee5:	0020c0        	memw
20007ee8:	5d6ec2        	s32i	a12, a14, 0x174
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2572
                TEST_NfcEraseAll();
20007eeb:	ff75c5        	call0	20007648 <TEST_NfcEraseAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2574
                g_bRedOntf = ((U32)eRedCaseSel & 0x2) >> 1; //get 2nd bit of pattern sel
                TEST_NfcWriteAll(FULL_PAGE_WRITE);
20007eee:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2573
            usSecLen = SEC_PER_PIPE_PG;
            for (eRedCaseSel = OTFB_W_OTFB_R; eRedCaseSel < SSU_RED_CASE_CNT; eRedCaseSel++)
            {
                g_bSinglePln = FALSE;
                TEST_NfcEraseAll();
                g_bRedOntf = ((U32)eRedCaseSel & 0x2) >> 1; //get 2nd bit of pattern sel
20007ef0:	0481d0        	extui	a8, a13, 1, 1
20007ef3:	5a6e82        	s32i	a8, a14, 0x168
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2574
                TEST_NfcWriteAll(FULL_PAGE_WRITE);
20007ef6:	ff4ac5        	call0	200073a4 <TEST_NfcWriteAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2576
                g_bRedOntf = (U32)eRedCaseSel & 0x1; //get 1st bit of pattern sel
                TEST_NfcReadAll(0, usSecLen, FULL_PAGE_READ);
20007ef9:	020c      	movi.n	a2, 0
20007efb:	80a032        	movi	a3, 128
20007efe:	240c      	movi.n	a4, 2
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2575
            {
                g_bSinglePln = FALSE;
                TEST_NfcEraseAll();
                g_bRedOntf = ((U32)eRedCaseSel & 0x2) >> 1; //get 2nd bit of pattern sel
                TEST_NfcWriteAll(FULL_PAGE_WRITE);
                g_bRedOntf = (U32)eRedCaseSel & 0x1; //get 1st bit of pattern sel
20007f00:	0490d0        	extui	a9, a13, 0, 1
20007f03:	5a6e92        	s32i	a9, a14, 0x168
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2576
                TEST_NfcReadAll(0, usSecLen, FULL_PAGE_READ);
20007f06:	ff0585        	call0	20006f60 <TEST_NfcReadAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2569
        }//break;

        case FULL_PAGE_READ :
        {
            usSecLen = SEC_PER_PIPE_PG;
            for (eRedCaseSel = OTFB_W_OTFB_R; eRedCaseSel < SSU_RED_CASE_CNT; eRedCaseSel++)
20007f09:	01cdd2        	addi	a13, a13, 1
20007f0c:	d54d66        	bnei	a13, 4, 20007ee5 <TEST_NfcRedDynamUpdate..KCB_1482204275+0x65>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2578
                g_bRedOntf = ((U32)eRedCaseSel & 0x2) >> 1; //get 2nd bit of pattern sel
                TEST_NfcWriteAll(FULL_PAGE_WRITE);
                g_bRedOntf = (U32)eRedCaseSel & 0x1; //get 1st bit of pattern sel
                TEST_NfcReadAll(0, usSecLen, FULL_PAGE_READ);
            }
            DBG_Printf("FULL_PAGE_READ Red Dynamically Update OK!\n");
20007f0f:	e2ef21        	l32r	a2, 20000acc <_stext+0x3cc>
20007f12:	02d505        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2584
        }//break;

        case RED_ONLY_READ :
        {
            usSecLen = SEC_PER_PIPE_PG;
            for (eRedCaseSel = OTFB_W_OTFB_R; eRedCaseSel < SSU_RED_CASE_CNT; eRedCaseSel++)
20007f15:	00a0d2        	movi	a13, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2586
            {
                g_bSinglePln = FALSE;
20007f18:	0020c0        	memw
20007f1b:	5d6ec2        	s32i	a12, a14, 0x174
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2587
                TEST_NfcEraseAll();
20007f1e:	ff7285        	call0	20007648 <TEST_NfcEraseAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2589
                g_bRedOntf = ((U32)eRedCaseSel & 0x2) >> 1; //get 2nd bit of pattern sel
                TEST_NfcWriteAll(FULL_PAGE_WRITE);
20007f21:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2588
            usSecLen = SEC_PER_PIPE_PG;
            for (eRedCaseSel = OTFB_W_OTFB_R; eRedCaseSel < SSU_RED_CASE_CNT; eRedCaseSel++)
            {
                g_bSinglePln = FALSE;
                TEST_NfcEraseAll();
                g_bRedOntf = ((U32)eRedCaseSel & 0x2) >> 1; //get 2nd bit of pattern sel
20007f23:	04a1d0        	extui	a10, a13, 1, 1
20007f26:	5a6ea2        	s32i	a10, a14, 0x168
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2589
                TEST_NfcWriteAll(FULL_PAGE_WRITE);
20007f29:	ff4785        	call0	200073a4 <TEST_NfcWriteAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2591
                g_bRedOntf = (U32)eRedCaseSel & 0x1; //get 1st bit of pattern sel
                TEST_NfcReadAll(0, usSecLen, RED_ONLY_READ);
20007f2c:	020c      	movi.n	a2, 0
20007f2e:	80a032        	movi	a3, 128
20007f31:	03a042        	movi	a4, 3
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2590
            {
                g_bSinglePln = FALSE;
                TEST_NfcEraseAll();
                g_bRedOntf = ((U32)eRedCaseSel & 0x2) >> 1; //get 2nd bit of pattern sel
                TEST_NfcWriteAll(FULL_PAGE_WRITE);
                g_bRedOntf = (U32)eRedCaseSel & 0x1; //get 1st bit of pattern sel
20007f34:	04b0d0        	extui	a11, a13, 0, 1
20007f37:	5a6eb2        	s32i	a11, a14, 0x168
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2591
                TEST_NfcReadAll(0, usSecLen, RED_ONLY_READ);
20007f3a:	ff0245        	call0	20006f60 <TEST_NfcReadAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2584
        }//break;

        case RED_ONLY_READ :
        {
            usSecLen = SEC_PER_PIPE_PG;
            for (eRedCaseSel = OTFB_W_OTFB_R; eRedCaseSel < SSU_RED_CASE_CNT; eRedCaseSel++)
20007f3d:	dd1b      	addi.n	a13, a13, 1
20007f3f:	d54d66        	bnei	a13, 4, 20007f18 <TEST_NfcRedDynamUpdate..KCB_1482204275+0x98>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2593
                g_bRedOntf = ((U32)eRedCaseSel & 0x2) >> 1; //get 2nd bit of pattern sel
                TEST_NfcWriteAll(FULL_PAGE_WRITE);
                g_bRedOntf = (U32)eRedCaseSel & 0x1; //get 1st bit of pattern sel
                TEST_NfcReadAll(0, usSecLen, RED_ONLY_READ);
            }
            DBG_Printf("RED_ONLY_READ Red Dynamically Update OK!\n");
20007f42:	e2e321        	l32r	a2, 20000ad0 <_stext+0x3d0>
20007f45:	02d1c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2600
        
        case CHANGE_COL_READ :
        {
            ucSecStep = 30;
            usSecMax  = SEC_PER_PIPE_PG;
            for (eRedCaseSel = OTFB_W_OTFB_R; eRedCaseSel < SSU_RED_CASE_CNT; eRedCaseSel++)
20007f48:	0d0c      	movi.n	a13, 0
20007f4a:	80a0f2        	movi	a15, 128
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2602
            {
                g_bSinglePln = FALSE;
20007f4d:	0020c0        	memw
20007f50:	00a0c2        	movi	a12, 0
20007f53:	5d6ec2        	s32i	a12, a14, 0x174
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2603
                TEST_NfcEraseAll();
20007f56:	ff6f05        	call0	20007648 <TEST_NfcEraseAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2605
                g_bRedOntf = ((U32)eRedCaseSel & 0x2) >> 1; //get 2nd bit of pattern sel
                TEST_NfcWriteAll(FULL_PAGE_WRITE);
20007f59:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2604
            usSecMax  = SEC_PER_PIPE_PG;
            for (eRedCaseSel = OTFB_W_OTFB_R; eRedCaseSel < SSU_RED_CASE_CNT; eRedCaseSel++)
            {
                g_bSinglePln = FALSE;
                TEST_NfcEraseAll();
                g_bRedOntf = ((U32)eRedCaseSel & 0x2) >> 1; //get 2nd bit of pattern sel
20007f5b:	0401d0        	extui	a0, a13, 1, 1
20007f5e:	5a6e02        	s32i	a0, a14, 0x168
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2605
                TEST_NfcWriteAll(FULL_PAGE_WRITE);
20007f61:	ff4405        	call0	200073a4 <TEST_NfcWriteAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2607
                g_bRedOntf = (U32)eRedCaseSel & 0x1; //get 1st bit of pattern sel
                for (ucSecStart = 0; ucSecStart < usSecMax; )
20007f64:	0c0c      	movi.n	a12, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2606
            {
                g_bSinglePln = FALSE;
                TEST_NfcEraseAll();
                g_bRedOntf = ((U32)eRedCaseSel & 0x2) >> 1; //get 2nd bit of pattern sel
                TEST_NfcWriteAll(FULL_PAGE_WRITE);
                g_bRedOntf = (U32)eRedCaseSel & 0x1; //get 1st bit of pattern sel
20007f66:	0420d0        	extui	a2, a13, 0, 1
20007f69:	5a6e22        	s32i	a2, a14, 0x168
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2612
                for (ucSecStart = 0; ucSecStart < usSecMax; )
                {
                    /* change column read    */
                    usSecLen = usSecMax - ucSecStart;
                    //DBG_Printf("Change Column Read Start Sec%d, Sec Length%d;\n",ucSecStart, usSecLen);
                    TEST_NfcReadAll(ucSecStart, usSecLen, CHANGE_COL_READ);
20007f6c:	202cc0        	or	a2, a12, a12
20007f6f:	04a042        	movi	a4, 4
20007f72:	c03fc0        	sub	a3, a15, a12
20007f75:	f43030        	extui	a3, a3, 0, 16
20007f78:	fefe45        	call0	20006f60 <TEST_NfcReadAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2613
                    ucSecStart = ucSecStart + ucSecStep;
20007f7b:	1eccc2        	addi	a12, a12, 30
20007f7e:	74c0c0        	extui	a12, a12, 0, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2607
                g_bSinglePln = FALSE;
                TEST_NfcEraseAll();
                g_bRedOntf = ((U32)eRedCaseSel & 0x2) >> 1; //get 2nd bit of pattern sel
                TEST_NfcWriteAll(FULL_PAGE_WRITE);
                g_bRedOntf = (U32)eRedCaseSel & 0x1; //get 1st bit of pattern sel
                for (ucSecStart = 0; ucSecStart < usSecMax; )
20007f81:	e7ecb6        	bltui	a12, 128, 20007f6c <TEST_NfcRedDynamUpdate..KCB_1482204275+0xec>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2600
        
        case CHANGE_COL_READ :
        {
            ucSecStep = 30;
            usSecMax  = SEC_PER_PIPE_PG;
            for (eRedCaseSel = OTFB_W_OTFB_R; eRedCaseSel < SSU_RED_CASE_CNT; eRedCaseSel++)
20007f84:	01cdd2        	addi	a13, a13, 1
20007f87:	c24d66        	bnei	a13, 4, 20007f4d <TEST_NfcRedDynamUpdate..KCB_1482204275+0xcd>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2616
                    //DBG_Printf("Change Column Read Start Sec%d, Sec Length%d;\n",ucSecStart, usSecLen);
                    TEST_NfcReadAll(ucSecStart, usSecLen, CHANGE_COL_READ);
                    ucSecStart = ucSecStart + ucSecStep;
                }
            }
            DBG_Printf("CHANGE_COL_READ Red Dynamically Update OK!\n");
20007f8a:	e2d221        	l32r	a2, 20000ad4 <_stext+0x3d4>
20007f8d:	02cd45        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2628
            DBG_Getch();
        }
    }//end of switch
    g_bRedOntf = TRUE;

    return;
20007f90:	0108      	l32i.n	a0, a1, 0
20007f92:	11c8      	l32i.n	a12, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2626
        {
            DBG_Printf("Wrong Pattern Sel for Red Dynamically Update!\n");
            DBG_Getch();
        }
    }//end of switch
    g_bRedOntf = TRUE;
20007f94:	1d0c      	movi.n	a13, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2628

    return;
20007f96:	41f8      	l32i.n	a15, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2626
        {
            DBG_Printf("Wrong Pattern Sel for Red Dynamically Update!\n");
            DBG_Getch();
        }
    }//end of switch
    g_bRedOntf = TRUE;
20007f98:	5a6ed2        	s32i	a13, a14, 0x168
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2628

    return;
20007f9b:	21d8      	l32i.n	a13, a1, 8
20007f9d:	31e8      	l32i.n	a14, a1, 12
20007f9f:	20c112        	addi	a1, a1, 32
20007fa2:	f00d      	ret.n

20007fa4 <TEST_NfcRedDynamUpdate..KCB_1482204275+0x124>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2189
BOOL TEST_IsTlcModeSupport(void)
{
#if (defined(FLASH_INTEL_3DTLC) || defined (FLASH_3D_MLC))
    if (g_bTlcMode)
    { 
        DBG_Printf("Single plane operation only support SLC mode in this flash type!\n");
20007fa4:	e29121        	l32r	a2, 200009e8 <_stext+0x2e8>
20007fa7:	02cbc5        	call0	2000ac64 <dbg_printf>
20007faa:	ffcbc6        	j	20007edd <TEST_NfcRedDynamUpdate..KCB_1482204275+0x5d>

20007fad <TEST_NfcRedDynamUpdate..KCB_1482204275+0x12d>:
20007fad:	000000                                        ...

20007fb0 <TEST_NfcSSUandCS..ICB_1482204275>:
TEST_NfcSSUandCS():
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2426

Purpose   : FW check if cache status is right, if right, clr it
Reference :
****************************************************************************/
LOCAL void TEST_NfcSSUandCS(void)
{
20007fb0:	e2cb21        	l32r	a2, 20000adc <_stext+0x3dc>
20007fb3:	e1da31        	l32r	a3, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2428
    /* disable RECC_EN in this case */
    rNfcPgCfg &= ~(1<<16);
20007fb6:	e2c8b1        	l32r	a11, 20000ad8 <_stext+0x3d8>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2426

Purpose   : FW check if cache status is right, if right, clr it
Reference :
****************************************************************************/
LOCAL void TEST_NfcSSUandCS(void)
{
20007fb9:	a0c112        	addi	a1, a1, -96
20007fbc:	1061e2        	s32i	a14, a1, 64
20007fbf:	f1d9      	s32i.n	a13, a1, 60
20007fc1:	d109      	s32i.n	a0, a1, 52
20007fc3:	1161f2        	s32i	a15, a1, 68
20007fc6:	e1c9      	s32i.n	a12, a1, 56
20007fc8:	e1d7f1        	l32r	a15, 20000724 <_stext+0x24>
20007fcb:	e291c1        	l32r	a12, 20000a10 <_stext+0x310>
20007fce:	e1dd01        	l32r	a0, 20000744 <_stext+0x44>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2428
    /* disable RECC_EN in this case */
    rNfcPgCfg &= ~(1<<16);
20007fd1:	0020c0        	memw
20007fd4:	8022a2        	l32i	a10, a2, 0x200
20007fd7:	10aab0        	and	a10, a10, a11
20007fda:	0020c0        	memw
20007fdd:	8062a2        	s32i	a10, a2, 0x200
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
20007fe0:	df13d2        	l16ui	a13, a3, 0x1be
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1870
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   
20007fe3:	5723e2        	l32i	a14, a3, 0x15c
20007fe6:	170c      	movi.n	a7, 1
20007fe8:	060c      	movi.n	a6, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1868
History       :
    20151112    abby    create
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
20007fea:	e28a81        	l32r	a8, 20000a14 <_stext+0x314>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2432
    /* disable RECC_EN in this case */
    rNfcPgCfg &= ~(1<<16);

    /* enable SSU & Cache Status */
    g_bSsuEn = TRUE;
    g_bCacheStsEn = TRUE;
20007fed:	140c      	movi.n	a4, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2431
{
    /* disable RECC_EN in this case */
    rNfcPgCfg &= ~(1<<16);

    /* enable SSU & Cache Status */
    g_bSsuEn = TRUE;
20007fef:	150c      	movi.n	a5, 1
20007ff1:	126152        	s32i	a5, a1, 72
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2432
    g_bCacheStsEn = TRUE;
20007ff4:	136142        	s32i	a4, a1, 76
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2431
{
    /* disable RECC_EN in this case */
    rNfcPgCfg &= ~(1<<16);

    /* enable SSU & Cache Status */
    g_bSsuEn = TRUE;
20007ff7:	6a6352        	s32i	a5, a3, 0x1a8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2432
    g_bCacheStsEn = TRUE;
20007ffa:	6e6342        	s32i	a4, a3, 0x1b8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1868
History       :
    20151112    abby    create
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
20007ffd:	1898      	l32i.n	a9, a8, 4
20007fff:	1199      	s32i.n	a9, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1870
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   
20008001:	8367e0        	moveqz	a6, a7, a14
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1868
History       :
    20151112    abby    create
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
20008004:	0888      	l32i.n	a8, a8, 0
20008006:	0189      	s32i.n	a8, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1870
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   
20008008:	0166c0        	slli	a6, a6, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1872

    tFlashAddr.usBlock = g_usTestBlkStart;
2000800b:	de1332        	l16ui	a3, a3, 0x1bc
2000800e:	156132        	s32i	a3, a1, 84
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1870
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   
20008011:	146162        	s32i	a6, a1, 80
20008014:	0178      	l32i.n	a7, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1872

    tFlashAddr.usBlock = g_usTestBlkStart;
20008016:	025132        	s16i	a3, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1870
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   
20008019:	107700        	and	a7, a7, a0
2000801c:	206670        	or	a6, a6, a7
2000801f:	0169      	s32i.n	a6, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
20008021:	28b3d7        	bgeu	a3, a13, 2000804d <TEST_NfcSSUandCS..ICB_1482204275+0x9d>
20008024:	00af86        	j	200082e6 <TEST_NfcSSUandCS..ICB_1482204275+0x336>

20008027 <TEST_NfcSSUandCS..ICB_1482204275+0x77>:
	...

20008029 <TEST_NfcSSUandCS..ICB_1482204275+0x79>:
20008029:	e1bc71        	l32r	a7, 2000071c <_stext+0x1c>
2000802c:	01a062        	movi	a6, 1
2000802f:	00a052        	movi	a5, 0
20008032:	8356e0        	moveqz	a5, a6, a14
20008035:	6e2782        	l32i	a8, a7, 0x1b8
20008038:	de1792        	l16ui	a9, a7, 0x1bc
2000803b:	156192        	s32i	a9, a1, 84
2000803e:	136182        	s32i	a8, a1, 76
20008041:	0155c0        	slli	a5, a5, 20
20008044:	146152        	s32i	a5, a1, 80
20008047:	6a2772        	l32i	a7, a7, 0x1a8
2000804a:	126172        	s32i	a7, a1, 72
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1936
    20150229    abby    merge TLC write test code into MLC
****************************************************************************/
void TEST_NfcWriteAll(WRITE_REQ_TYPE WriteType)
{
    FLASH_ADDR tFlashAddr = {0};
    NFC_PRG_REQ_DES tWrReq = {0};
2000804d:	18c122        	addi	a2, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1935
    20151112    abby    create
    20150229    abby    merge TLC write test code into MLC
****************************************************************************/
void TEST_NfcWriteAll(WRITE_REQ_TYPE WriteType)
{
    FLASH_ADDR tFlashAddr = {0};
20008050:	e27231        	l32r	a3, 20000a18 <_stext+0x318>
20008053:	10c152        	addi	a5, a1, 16
20008056:	1348      	l32i.n	a4, a3, 4
20008058:	0368      	l32i.n	a6, a3, 0
2000805a:	0569      	s32i.n	a6, a5, 0
2000805c:	1549      	s32i.n	a4, a5, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1936
    NFC_PRG_REQ_DES tWrReq = {0};
2000805e:	338b      	addi.n	a3, a3, 8
20008060:	841c      	movi.n	a4, 24
20008062:	031cc5        	call0	2000b230 <memcpy>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1224
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
20008065:	272c82        	l32i	a8, a12, 156
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1223
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
20008068:	e26d41        	l32r	a4, 20000a1c <_stext+0x31c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1218
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
2000806b:	262ca2        	l32i	a10, a12, 152
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
2000806e:	e1cb91        	l32r	a9, 2000079c <_stext+0x9c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1227
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;
20008071:	242c02        	l32i	a0, a12, 144
20008074:	a1b8      	l32i.n	a11, a1, 40
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
20008076:	372c32        	l32i	a3, a12, 220
20008079:	120c      	movi.n	a2, 1
2000807b:	060c      	movi.n	a6, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1226
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
2000807d:	312c52        	l32i	a5, a12, 196
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
20008080:	e1a771        	l32r	a7, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1226
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
20008083:	9159      	s32i.n	a5, a1, 36
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1220
LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
20008085:	122152        	l32i	a5, a1, 72
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
20008088:	0778      	l32i.n	a7, a7, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
2000808a:	836230        	moveqz	a6, a2, a3
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1227
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;
2000808d:	0330b4        	insbits	a11, a0, 3, 3
20008090:	a1b9      	s32i.n	a11, a1, 40
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1223
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
20008092:	0136a0        	slli	a3, a6, 22
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
20008095:	0778      	l32i.n	a7, a7, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
20008097:	0166c0        	slli	a6, a6, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
2000809a:	779a      	add.n	a7, a7, a9
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1219
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
2000809c:	132192        	l32i	a9, a1, 76
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
2000809f:	f57070        	extui	a7, a7, 16, 16
200080a2:	1177f0        	slli	a7, a7, 1
200080a5:	0c5172        	s16i	a7, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1218
    pWrReq->bsRedOntf       = g_bRedOntf;
200080a8:	6128      	l32i.n	a2, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
200080aa:	e1a671        	l32r	a7, 20000744 <_stext+0x44>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1218
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
200080ad:	900a24        	insbits	a2, a10, 16, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1219
    pWrReq->bsCSEn          = g_bCacheStsEn;
200080b0:	922924        	insbits	a2, a9, 18, 18
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1220
    pWrReq->bsSsu0En        = g_bSsuEn;
200080b3:	933524        	insbits	a2, a5, 19, 19
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
200080b6:	102270        	and	a2, a2, a7
200080b9:	202260        	or	a2, a2, a6
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1222
    pWrReq->bsSsu1En        = g_bSsuEn;
200080bc:	b15524        	insbits	a2, a5, 21, 21
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1223
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
200080bf:	102240        	and	a2, a2, a4
200080c2:	202230        	or	a2, a2, a3
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1224
    pWrReq->bsLbaChkEn      = g_bLbaChk;
200080c5:	911824        	insbits	a2, a8, 17, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1225
    pWrReq->bsTlcMode       = g_bTlcMode;
200080c8:	d3be24        	insbits	a2, a14, 27, 27
200080cb:	6129      	s32i.n	a2, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1229
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;

    if (FALSE != g_ErrInjEn)
200080cd:	0020c0        	memw
200080d0:	112c72        	l32i	a7, a12, 68
200080d3:	3e9716        	beqz	a7, 200084c0 <TEST_NfcSSUandCS..ICB_1482204275+0x510>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1232
    {
        pWrReq->bsInjErrEn = TRUE;
        pWrReq->pErrInj    = &g_tErrInj;
200080d6:	e24d91        	l32r	a9, 20000a0c <_stext+0x30c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1231
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;

    if (FALSE != g_ErrInjEn)
    {
        pWrReq->bsInjErrEn = TRUE;
200080d9:	e21b81        	l32r	a8, 20000948 <_stext+0x248>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1232
        pWrReq->pErrInj    = &g_tErrInj;
200080dc:	b199      	s32i.n	a9, a1, 44
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1231
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;

    if (FALSE != g_ErrInjEn)
    {
        pWrReq->bsInjErrEn = TRUE;
200080de:	208280        	or	a8, a2, a8
200080e1:	066182        	s32i	a8, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1240
    {
        pWrReq->pErrInj = NULL;
    }

    /*  scramble disable    */
    if (g_bRawDataRead)
200080e4:	392ca2        	l32i	a10, a12, 228
200080e7:	5a9c      	beqz.n	a10, 20008100 <TEST_NfcSSUandCS..ICB_1482204275+0x150>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1243
    {
        volatile PG_CONF_REG *pNfcPgCfg = (volatile PG_CONF_REG *) &rNfcPgCfg;
        pNfcPgCfg->bsScrBps = TRUE;
200080e9:	800c      	movi.n	a0, 8
200080eb:	727c      	movi.n	a2, -9
200080ed:	e1a0e1        	l32r	a14, 20000770 <_stext+0x70>
200080f0:	0020c0        	memw
200080f3:	0eb8      	l32i.n	a11, a14, 0
200080f5:	10bb20        	and	a11, a11, a2
200080f8:	20bb00        	or	a11, a11, a0
200080fb:	0020c0        	memw
200080fe:	0eb9      	s32i.n	a11, a14, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1941
    NFC_PRG_REQ_DES tWrReq = {0};
    U16 usPrgIndex;

    TEST_NfcWtCfgReqComm(&tWrReq);

    tFlashAddr.bsSLCMode = !g_bTlcMode;
20008100:	142142        	l32i	a4, a1, 80
20008103:	e19061        	l32r	a6, 20000744 <_stext+0x44>
20008106:	4158      	l32i.n	a5, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1943

    tFlashAddr.usBlock = g_usTestBlkStart;
20008108:	152132        	l32i	a3, a1, 84
2000810b:	0a5132        	s16i	a3, a1, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1941
    NFC_PRG_REQ_DES tWrReq = {0};
    U16 usPrgIndex;

    TEST_NfcWtCfgReqComm(&tWrReq);

    tFlashAddr.bsSLCMode = !g_bTlcMode;
2000810e:	105560        	and	a5, a5, a6
20008111:	204450        	or	a4, a4, a5
20008114:	4149      	s32i.n	a4, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1944

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
20008116:	0233d7        	bltu	a3, a13, 2000811c <TEST_NfcSSUandCS..ICB_1482204275+0x16c>
20008119:	005d46        	j	20008292 <TEST_NfcSSUandCS..ICB_1482204275+0x2e2>
2000811c:	d50c52        	l8ui	a5, a12, 213
2000811f:	e240d1        	l32r	a13, 20000a20 <_stext+0x320>
20008122:	8e7c      	movi.n	a14, -8
20008124:	000506        	j	2000813c <TEST_NfcSSUandCS..ICB_1482204275+0x18c>

20008127 <TEST_NfcSSUandCS..ICB_1482204275+0x177>:
	...

20008128 <TEST_NfcSSUandCS..ICB_1482204275+0x178>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2030
                {
                    //DBG_Printf("Pu %d Block %d Page %d Write OK!\n",tFlashAddr.ucPU,tFlashAddr.usBlock,tFlashAddr.usPage);
                }
            }
        }
        tFlashAddr.usBlock++;
20008128:	0a1172        	l16ui	a7, a1, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1944
    TEST_NfcWtCfgReqComm(&tWrReq);

    tFlashAddr.bsSLCMode = !g_bTlcMode;

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
2000812b:	771c82        	l16ui	a8, a12, 238
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2030
                {
                    //DBG_Printf("Pu %d Block %d Page %d Write OK!\n",tFlashAddr.ucPU,tFlashAddr.usBlock,tFlashAddr.usPage);
                }
            }
        }
        tFlashAddr.usBlock++;
2000812e:	771b      	addi.n	a7, a7, 1
20008130:	f47070        	extui	a7, a7, 0, 16
20008133:	0a5172        	s16i	a7, a1, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1944
    TEST_NfcWtCfgReqComm(&tWrReq);

    tFlashAddr.bsSLCMode = !g_bTlcMode;

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
20008136:	023787        	bltu	a7, a8, 2000813c <TEST_NfcSSUandCS..ICB_1482204275+0x18c>
20008139:	005546        	j	20008292 <TEST_NfcSSUandCS..ICB_1482204275+0x2e2>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1946
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
2000813c:	d40c02        	l8ui	a0, a12, 212
2000813f:	104102        	s8i	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1947
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
20008142:	023057        	bltu	a0, a5, 20008148 <TEST_NfcSSUandCS..ICB_1482204275+0x198>
20008145:	003dc6        	j	20008240 <TEST_NfcSSUandCS..ICB_1482204275+0x290>
20008148:	d70c22        	l8ui	a2, a12, 215
2000814b:	000546        	j	20008164 <TEST_NfcSSUandCS..ICB_1482204275+0x1b4>

2000814e <TEST_NfcSSUandCS..ICB_1482204275+0x19e>:
	...

20008150 <TEST_NfcSSUandCS..ICB_1482204275+0x1a0>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1950
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20008150:	d50c52        	l8ui	a5, a12, 213
20008153:	100102        	l8ui	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2007
                    }
                    usPrgIndex++;
                }
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
20008156:	001b      	addi.n	a0, a0, 1
20008158:	740000        	extui	a0, a0, 0, 8
2000815b:	104102        	s8i	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1947

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
2000815e:	023057        	bltu	a0, a5, 20008164 <TEST_NfcSSUandCS..ICB_1482204275+0x1b4>
20008161:	003606        	j	2000823d <TEST_NfcSSUandCS..ICB_1482204275+0x28d>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1949
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
20008164:	d60c32        	l8ui	a3, a12, 214
20008167:	114132        	s8i	a3, a1, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1950
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
2000816a:	e8b327        	bgeu	a3, a2, 20008156 <TEST_NfcSSUandCS..ICB_1482204275+0x1a6>
2000816d:	791c02        	l16ui	a0, a12, 242
20008170:	000446        	j	20008185 <TEST_NfcSSUandCS..ICB_1482204275+0x1d5>

20008173 <TEST_NfcSSUandCS..ICB_1482204275+0x1c3>:
	...

20008174 <TEST_NfcSSUandCS..ICB_1482204275+0x1c4>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2005
                    {
                        DBG_Getch();
                    }
                    usPrgIndex++;
                }
                tFlashAddr.ucLun++;
20008174:	110142        	l8ui	a4, a1, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1950
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20008177:	d70c22        	l8ui	a2, a12, 215
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2005
                    {
                        DBG_Getch();
                    }
                    usPrgIndex++;
                }
                tFlashAddr.ucLun++;
2000817a:	441b      	addi.n	a4, a4, 1
2000817c:	744040        	extui	a4, a4, 0, 8
2000817f:	114142        	s8i	a4, a1, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1950
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20008182:	cab427        	bgeu	a4, a2, 20008150 <TEST_NfcSSUandCS..ICB_1482204275+0x1a0>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1952
            {
                usPrgIndex = g_usTestPageStart;
20008185:	781c52        	l16ui	a5, a12, 240
20008188:	185152        	s16i	a5, a1, 48
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1953
                while (usPrgIndex < g_usTestPageEnd * PRG_CYC_CNT)
2000818b:	e5b507        	bgeu	a5, a0, 20008174 <TEST_NfcSSUandCS..ICB_1482204275+0x1c4>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1955
                {
                    tFlashAddr.usPage = TEST_NfcWtGetPageAddr(&usPrgIndex);
2000818e:	30c122        	addi	a2, a1, 48
20008191:	fe4105        	call0	200065a4 <TEST_NfcWtGetPageAddr..GBB_1482204275>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1958
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
20008194:	791c02        	l16ui	a0, a12, 242
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1955
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
            {
                usPrgIndex = g_usTestPageStart;
                while (usPrgIndex < g_usTestPageEnd * PRG_CYC_CNT)
                {
                    tFlashAddr.usPage = TEST_NfcWtGetPageAddr(&usPrgIndex);
20008197:	0b5122        	s16i	a2, a1, 22
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1958
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
2000819a:	d6b207        	bgeu	a2, a0, 20008174 <TEST_NfcSSUandCS..ICB_1482204275+0x1c4>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
2000819d:	362c62        	l32i	a6, a12, 216
200081a0:	ac48      	l32i.n	a4, a12, 40
200081a2:	110132        	l8ui	a3, a1, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1960
                    tFlashAddr.usPage = TEST_NfcWtGetPageAddr(&usPrgIndex);
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
                    }
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
200081a5:	6178      	l32i.n	a7, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1961
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
200081a7:	a158      	l32i.n	a5, a1, 40
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
200081a9:	100102        	l8ui	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1961
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
                    }
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
200081ac:	1055e0        	and	a5, a5, a14
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
200081af:	20fa      	add.n	a2, a0, a15
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1960
                    tFlashAddr.usPage = TEST_NfcWtGetPageAddr(&usPrgIndex);
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
                    }
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
200081b1:	1077d0        	and	a7, a7, a13
200081b4:	066172        	s32i	a7, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
200081b7:	800222        	l8ui	a2, a2, 128
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1961
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
                    }
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
200081ba:	0a6152        	s32i	a5, a1, 40
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
200081bd:	a02230        	addx4	a2, a2, a3
200081c0:	a02240        	addx4	a2, a2, a4
200081c3:	06f616        	beqz	a6, 20008236 <TEST_NfcSSUandCS..ICB_1482204275+0x286>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:536
    20151029    abby     modify to meet VT3533 
------------------------------------------------------------------------------*/
U8 HAL_NfcGetRP(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
200081c6:	0020c0        	memw
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:528
    {
        return 0;
    }
    
    //MixVector only support 512 offset for SSUx in one MCU
    return GET_CMD_LEVEL(pFlashAddr->ucPU,pFlashAddr->ucLun,pFlashAddr->bsPln
200081c9:	1160e0        	slli	a6, a0, 2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:536
200081cc:	000202        	l8ui	a0, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:528
200081cf:	206360        	or	a6, a3, a6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:536
200081d2:	140400        	extui	a0, a0, 4, 2
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:528
200081d5:	e32604        	insbits	a0, a6, 2, 31
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1965
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
                
                    TEST_NfcWtDummyDataPrepare(&tFlashAddr, &tWrReq);
                    
                    tWrReq.bsSsu0Addr   = TEST_GetOffset(&tFlashAddr);
200081d8:	0e5102        	s16i	a0, a1, 28
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1966
                    tWrReq.bsSsu1Addr   = tWrReq.bsSsu0Addr + 0x400;
200081db:	f48000        	extui	a8, a0, 0, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1967
                    tWrReq.bsCsAddrOff  = tWrReq.bsSsu0Addr;
200081de:	086182        	s32i	a8, a1, 32
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1966
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
                
                    TEST_NfcWtDummyDataPrepare(&tFlashAddr, &tWrReq);
                    
                    tWrReq.bsSsu0Addr   = TEST_GetOffset(&tFlashAddr);
                    tWrReq.bsSsu1Addr   = tWrReq.bsSsu0Addr + 0x400;
200081e1:	04d882        	addmi	a8, a8, 0x400
200081e4:	0f5182        	s16i	a8, a1, 30
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetFull(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
200081e7:	0020c0        	memw
200081ea:	000272        	l8ui	a7, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1968
                    tWrReq.bsCsAddrOff  = tWrReq.bsSsu0Addr;
                    while(TRUE == HAL_NfcGetFull(tFlashAddr.ucPU, tFlashAddr.ucLun))
200081ed:	106737        	bbci	a7, 3, 20008201 <TEST_NfcSSUandCS..ICB_1482204275+0x251>
200081f0:	f03d      	nop.n
200081f2:	088076        	loop	a0, 200081fe <TEST_NfcSSUandCS..ICB_1482204275+0x24e>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
200081f5:	0020c0        	memw
200081f8:	000292        	l8ui	a9, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1968
200081fb:	026937        	bbci	a9, 3, 20008201 <TEST_NfcSSUandCS..ICB_1482204275+0x251>

200081fe <TEST_NfcSSUandCS..ICB_1482204275+0x24e>:
200081fe:	fffb86        	j	200081f0 <TEST_NfcSSUandCS..ICB_1482204275+0x240>

20008201 <TEST_NfcSSUandCS..ICB_1482204275+0x251>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1981
                            HAL_NfcSinglePlaneWrite(&tFlashAddr, &tWrReq);
                        }break;

                        case FULL_PAGE_WRITE :
                        {                        
                             HAL_NfcFullPageWrite(&tFlashAddr, &tWrReq);
20008201:	10c122        	addi	a2, a1, 16
20008204:	18c132        	addi	a3, a1, 24
20008207:	e20e01        	l32r	a0, 20000a40 <_stext+0x340>
2000820a:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1999
                        }break;

                    }//end switch
                    
                    /* check status of NFC CMD REG and DEC SRAM */
                    if (SUCCESS != TEST_NfcWtStsChk(&tFlashAddr, &tWrReq))
2000820d:	10c122        	addi	a2, a1, 16
20008210:	18c132        	addi	a3, a1, 24
20008213:	fe2485        	call0	2000645c <TEST_NfcWtStsChk..JBB_1482204275>
20008216:	051226        	beqi	a2, 1, 2000821f <TEST_NfcSSUandCS..ICB_1482204275+0x26f>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2001
                    {
                        DBG_Getch();
20008219:	e13f01        	l32r	a0, 20000718 <_stext+0x18>
2000821c:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2003
                    }
                    usPrgIndex++;
2000821f:	1811a2        	l16ui	a10, a1, 48
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1953
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
            {
                usPrgIndex = g_usTestPageStart;
                while (usPrgIndex < g_usTestPageEnd * PRG_CYC_CNT)
20008222:	791c02        	l16ui	a0, a12, 242
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2003
                    /* check status of NFC CMD REG and DEC SRAM */
                    if (SUCCESS != TEST_NfcWtStsChk(&tFlashAddr, &tWrReq))
                    {
                        DBG_Getch();
                    }
                    usPrgIndex++;
20008225:	aa1b      	addi.n	a10, a10, 1
20008227:	f4a0a0        	extui	a10, a10, 0, 16
2000822a:	1851a2        	s16i	a10, a1, 48
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1953
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
            {
                usPrgIndex = g_usTestPageStart;
                while (usPrgIndex < g_usTestPageEnd * PRG_CYC_CNT)
2000822d:	02ba07        	bgeu	a10, a0, 20008233 <TEST_NfcSSUandCS..ICB_1482204275+0x283>
20008230:	ffd686        	j	2000818e <TEST_NfcSSUandCS..ICB_1482204275+0x1de>
20008233:	ffcf46        	j	20008174 <TEST_NfcSSUandCS..ICB_1482204275+0x1c4>

20008236 <TEST_NfcSSUandCS..ICB_1482204275+0x286>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
20008236:	000c      	movi.n	a0, 0
20008238:	ffe706        	j	200081d8 <TEST_NfcSSUandCS..ICB_1482204275+0x228>

2000823b <TEST_NfcSSUandCS..ICB_1482204275+0x28b>:
	...

2000823d <TEST_NfcSSUandCS..ICB_1482204275+0x28d>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1947

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
2000823d:	d40c02        	l8ui	a0, a12, 212
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2010
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
        }
        /*  check nfc status by LUN as the basic unit  */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
20008240:	104102        	s8i	a0, a1, 16
20008243:	023057        	bltu	a0, a5, 20008249 <TEST_NfcSSUandCS..ICB_1482204275+0x299>
20008246:	ffb786        	j	20008128 <TEST_NfcSSUandCS..ICB_1482204275+0x178>
20008249:	d70c22        	l8ui	a2, a12, 215
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2012
        {
            for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
2000824c:	d60c32        	l8ui	a3, a12, 214
2000824f:	114132        	s8i	a3, a1, 17
20008252:	2eb327        	bgeu	a3, a2, 20008284 <TEST_NfcSSUandCS..ICB_1482204275+0x2d4>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2014
            {
                if(NFC_STATUS_SUCCESS != HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun))
20008255:	100122        	l8ui	a2, a1, 16
20008258:	fecb05        	call0	20006f0c <HAL_NfcWaitStatus>
2000825b:	0e1226        	beqi	a2, 1, 2000826d <TEST_NfcSSUandCS..ICB_1482204275+0x2bd>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2016
                {
                    DBG_Printf("Pu %d Block %d Page %d Write Fail!\n",tFlashAddr.ucPU,tFlashAddr.usBlock,tFlashAddr.usPage);
2000825e:	e1f121        	l32r	a2, 20000a24 <_stext+0x324>
20008261:	100132        	l8ui	a3, a1, 16
20008264:	0a1142        	l16ui	a4, a1, 20
20008267:	0b1152        	l16ui	a5, a1, 22
2000826a:	029f85        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2012
            tFlashAddr.ucPU++;
        }
        /*  check nfc status by LUN as the basic unit  */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
        {
            for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
2000826d:	110132        	l8ui	a3, a1, 17
20008270:	d70c22        	l8ui	a2, a12, 215
20008273:	331b      	addi.n	a3, a3, 1
20008275:	743030        	extui	a3, a3, 0, 8
20008278:	114132        	s8i	a3, a1, 17
2000827b:	d63327        	bltu	a3, a2, 20008255 <TEST_NfcSSUandCS..ICB_1482204275+0x2a5>
2000827e:	d50c52        	l8ui	a5, a12, 213
20008281:	100102        	l8ui	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2010
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
        }
        /*  check nfc status by LUN as the basic unit  */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
20008284:	001b      	addi.n	a0, a0, 1
20008286:	740000        	extui	a0, a0, 0, 8
20008289:	104102        	s8i	a0, a1, 16
2000828c:	bc3057        	bltu	a0, a5, 2000824c <TEST_NfcSSUandCS..ICB_1482204275+0x29c>
2000828f:	ffa546        	j	20008128 <TEST_NfcSSUandCS..ICB_1482204275+0x178>

20008292 <TEST_NfcSSUandCS..ICB_1482204275+0x2e2>:
20008292:	0d0c      	movi.n	a13, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2441

    /* Write */
    TEST_NfcWriteAll(FULL_PAGE_WRITE);
    
    /* Read */
    TEST_NfcReadAll(0, SEC_PER_PIPE_PG, FULL_PAGE_READ);
20008294:	00a022        	movi	a2, 0
20008297:	80a032        	movi	a3, 128
2000829a:	02a042        	movi	a4, 2
2000829d:	fecc05        	call0	20006f60 <TEST_NfcReadAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2444
    
    /* enable RECC_EN after this case */
    rNfcPgCfg |= (1<<16);
200082a0:	e14741        	l32r	a4, 200007bc <_stext+0xbc>
200082a3:	0020c0        	memw
200082a6:	e20d31        	l32r	a3, 20000adc <_stext+0x3dc>
200082a9:	802322        	l32i	a2, a3, 0x200
200082ac:	202240        	or	a2, a2, a4
200082af:	0020c0        	memw
200082b2:	806322        	s32i	a2, a3, 0x200
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2450
    
    /* recover to default value */
    g_bSsuEn = FALSE;
    g_bCacheStsEn = FALSE;

    return;
200082b5:	d108      	l32i.n	a0, a1, 52
200082b7:	1021e2        	l32i	a14, a1, 64
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2447
    
    /* enable RECC_EN after this case */
    rNfcPgCfg |= (1<<16);
    
    /* recover to default value */
    g_bSsuEn = FALSE;
200082ba:	366cd2        	s32i	a13, a12, 216
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2448
    g_bCacheStsEn = FALSE;
200082bd:	3a6cd2        	s32i	a13, a12, 232
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2450

    return;
200082c0:	1121f2        	l32i	a15, a1, 68
200082c3:	e1c8      	l32i.n	a12, a1, 56
200082c5:	f1d8      	l32i.n	a13, a1, 60
200082c7:	60c112        	addi	a1, a1, 96
200082ca:	f00d      	ret.n

200082cc <TEST_NfcSSUandCS..ICB_1482204275+0x31c>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
200082cc:	e114d1        	l32r	a13, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1916
                {
                    //DBG_Printf("PU%d LUN %d BLK%d Erase OK!\n", tFlashAddr.ucPU, tFlashAddr.ucLun, tFlashAddr.usBlock);
                }
            }
        }
        tFlashAddr.usBlock++;
200082cf:	021152        	l16ui	a5, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
200082d2:	572de2        	l32i	a14, a13, 0x15c
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1916
                {
                    //DBG_Printf("PU%d LUN %d BLK%d Erase OK!\n", tFlashAddr.ucPU, tFlashAddr.ucLun, tFlashAddr.usBlock);
                }
            }
        }
        tFlashAddr.usBlock++;
200082d5:	551b      	addi.n	a5, a5, 1
200082d7:	f45050        	extui	a5, a5, 0, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
200082da:	df1dd2        	l16ui	a13, a13, 0x1be
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1916
                {
                    //DBG_Printf("PU%d LUN %d BLK%d Erase OK!\n", tFlashAddr.ucPU, tFlashAddr.ucLun, tFlashAddr.usBlock);
                }
            }
        }
        tFlashAddr.usBlock++;
200082dd:	025152        	s16i	a5, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
200082e0:	0235d7        	bltu	a5, a13, 200082e6 <TEST_NfcSSUandCS..ICB_1482204275+0x336>
200082e3:	ff5086        	j	20008029 <TEST_NfcSSUandCS..ICB_1482204275+0x79>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:238
}

//for im 3d tlc slc/tlc mode switch
BOOL TEST_NfcSwitchFlashMode(U8 ucPU)
{
    FLASH_ADDR tFlashAddr = {0};
200082e6:	218b      	addi.n	a2, a1, 8
200082e8:	e1d031        	l32r	a3, 20000a28 <_stext+0x328>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:247
    tFlashAddr.ucPU = ucPU;
    
    /* step1: set feature, User Selectable Trim Profile, 85h/03h data, 00-2-pass MLC;01-1-pass MLC;03-TLC */
    ucAddr = 0x91;
#ifdef SWITCH_MODE_DADF
    ulData = g_bTlcMode ? 0x104 : 0x100;
200082eb:	04a102        	movi	a0, 0x104
200082ee:	00a1d2        	movi	a13, 0x100
200082f1:	93d0e0        	movnez	a13, a0, a14
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:238
}

//for im 3d tlc slc/tlc mode switch
BOOL TEST_NfcSwitchFlashMode(U8 ucPU)
{
    FLASH_ADDR tFlashAddr = {0};
200082f4:	1348      	l32i.n	a4, a3, 4
200082f6:	1249      	s32i.n	a4, a2, 4
200082f8:	0338      	l32i.n	a3, a3, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1875
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
200082fa:	d40ce2        	l8ui	a14, a12, 212
200082fd:	0041e2        	s8i	a14, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:238
20008300:	0239      	s32i.n	a3, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:251
#ifdef SWITCH_MODE_DADF
    ulData = g_bTlcMode ? 0x104 : 0x100;
#else
    ulData = g_bTlcMode ? 0x004 : 0x000;
#endif
    HAL_NfcSetFeature(&tFlashAddr, ulData, ucAddr);
20008302:	91a042        	movi	a4, 145
20008305:	0d3d      	mov.n	a3, a13
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:242
{
    FLASH_ADDR tFlashAddr = {0};
    U8 ucAddr;
    U32 ulData;
    
    tFlashAddr.ucPU = ucPU;
20008307:	0841e2        	s8i	a14, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:251
#ifdef SWITCH_MODE_DADF
    ulData = g_bTlcMode ? 0x104 : 0x100;
#else
    ulData = g_bTlcMode ? 0x004 : 0x000;
#endif
    HAL_NfcSetFeature(&tFlashAddr, ulData, ucAddr);
2000830a:	e1ce01        	l32r	a0, 20000a44 <_stext+0x344>
2000830d:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20008310:	090132        	l8ui	a3, a1, 9
20008313:	e10241        	l32r	a4, 2000071c <_stext+0x1c>
20008316:	2efa      	add.n	a2, a14, a15
20008318:	800222        	l8ui	a2, a2, 128
2000831b:	3e2442        	l32i	a4, a4, 248
2000831e:	a02230        	addx4	a2, a2, a3
20008321:	a02240        	addx4	a2, a2, a4
20008324:	0020c0        	memw
20008327:	000252        	l8ui	a5, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
2000832a:	0ee507        	bbsi	a5, 0, 2000833c <TEST_NfcSSUandCS..ICB_1482204275+0x38c>
2000832d:	088076        	loop	a0, 20008339 <TEST_NfcSSUandCS..ICB_1482204275+0x389>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20008330:	0020c0        	memw
20008333:	000242        	l8ui	a4, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
20008336:	02e407        	bbsi	a4, 0, 2000833c <TEST_NfcSSUandCS..ICB_1482204275+0x38c>

20008339 <TEST_NfcSSUandCS..ICB_1482204275+0x389>:
20008339:	fffc06        	j	2000832d <TEST_NfcSSUandCS..ICB_1482204275+0x37d>

2000833c <TEST_NfcSSUandCS..ICB_1482204275+0x38c>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1106
    {
        ;
    }

    if (TRUE == HAL_NfcGetErrHold(ucPU, ucLun))
2000833c:	202ee0        	or	a2, a14, a14
2000833f:	fc3b05        	call0	200046f0 <HAL_NfcGetErrHold>
20008342:	0e1266        	bnei	a2, 1, 20008354 <TEST_NfcSSUandCS..ICB_1482204275+0x3a4>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:254
    if (NFC_STATUS_SUCCESS != HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun))
    {
        DBG_Printf("set feature fail PU:%d Addr0x%x Data0x%x\n", tFlashAddr.ucPU, ucAddr, ulData);
20008345:	e1b921        	l32r	a2, 20000a2c <_stext+0x32c>
20008348:	080132        	l8ui	a3, a1, 8
2000834b:	91a042        	movi	a4, 145
2000834e:	205dd0        	or	a5, a13, a13
20008351:	029105        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:256
    }
    DBG_Printf("set feature OK PU:%d Addr0x%x Data0x%x\n", tFlashAddr.ucPU, ucAddr, ulData);
20008354:	205dd0        	or	a5, a13, a13
20008357:	e1b621        	l32r	a2, 20000a30 <_stext+0x330>
2000835a:	080132        	l8ui	a3, a1, 8
2000835d:	91a042        	movi	a4, 145
20008360:	029005        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:259
    
    /* step2: sync reset to make flash reload trim file from ROM block */
    HAL_NfcSyncResetFlash(&tFlashAddr);
20008363:	08c122        	addi	a2, a1, 8
20008366:	e1b801        	l32r	a0, 20000a48 <_stext+0x348>
20008369:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
2000836c:	090132        	l8ui	a3, a1, 9
2000836f:	0801e2        	l8ui	a14, a1, 8
20008372:	e0ea41        	l32r	a4, 2000071c <_stext+0x1c>
20008375:	802ef0        	add	a2, a14, a15
20008378:	800222        	l8ui	a2, a2, 128
2000837b:	3e2442        	l32i	a4, a4, 248
2000837e:	a02230        	addx4	a2, a2, a3
20008381:	a02240        	addx4	a2, a2, a4
20008384:	0020c0        	memw
20008387:	000252        	l8ui	a5, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
2000838a:	0fe507        	bbsi	a5, 0, 2000839d <TEST_NfcSSUandCS..ICB_1482204275+0x3ed>
2000838d:	088076        	loop	a0, 20008399 <TEST_NfcSSUandCS..ICB_1482204275+0x3e9>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20008390:	0020c0        	memw
20008393:	000242        	l8ui	a4, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
20008396:	03e407        	bbsi	a4, 0, 2000839d <TEST_NfcSSUandCS..ICB_1482204275+0x3ed>

20008399 <TEST_NfcSSUandCS..ICB_1482204275+0x3e9>:
20008399:	fffc06        	j	2000838d <TEST_NfcSSUandCS..ICB_1482204275+0x3dd>

2000839c <TEST_NfcSSUandCS..ICB_1482204275+0x3ec>:
	...

2000839d <TEST_NfcSSUandCS..ICB_1482204275+0x3ed>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1106
    {
        ;
    }

    if (TRUE == HAL_NfcGetErrHold(ucPU, ucLun))
2000839d:	0e2d      	mov.n	a2, a14
2000839f:	fc3505        	call0	200046f0 <HAL_NfcGetErrHold>
200083a2:	0b1266        	bnei	a2, 1, 200083b1 <TEST_NfcSSUandCS..ICB_1482204275+0x401>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:262
    if (NFC_STATUS_SUCCESS != HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun))
    {
        DBG_Printf("SYNC Reset PU:%d fail!\n", tFlashAddr.ucPU);
200083a5:	e1a321        	l32r	a2, 20000a34 <_stext+0x334>
200083a8:	080132        	l8ui	a3, a1, 8
200083ab:	201110        	or	a1, a1, a1
200083ae:	028b45        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:264
    }
    DBG_Printf("SYNC Reset PU:%d OK!\n", tFlashAddr.ucPU);
200083b1:	e1a121        	l32r	a2, 20000a38 <_stext+0x338>
200083b4:	080132        	l8ui	a3, a1, 8
200083b7:	028ac5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1879
    #ifdef FLASH_INTEL_3DTLC
        TEST_NfcSwitchFlashMode(tFlashAddr.ucPU);
    #endif
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
200083ba:	d50c52        	l8ui	a5, a12, 213
200083bd:	000102        	l8ui	a0, a1, 0
200083c0:	023057        	bltu	a0, a5, 200083c6 <TEST_NfcSSUandCS..ICB_1482204275+0x416>
200083c3:	002586        	j	2000845d <TEST_NfcSSUandCS..ICB_1482204275+0x4ad>
200083c6:	d70c22        	l8ui	a2, a12, 215
200083c9:	0004c6        	j	200083e0 <TEST_NfcSSUandCS..ICB_1482204275+0x430>

200083cc <TEST_NfcSSUandCS..ICB_1482204275+0x41c>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1882
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
200083cc:	d50c52        	l8ui	a5, a12, 213
200083cf:	172102        	l32i	a0, a1, 92
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1898
                {
                    HAL_NfcFullBlockErase(&tFlashAddr, g_bTlcMode);
                }
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
200083d2:	001b      	addi.n	a0, a0, 1
200083d4:	740000        	extui	a0, a0, 0, 8
200083d7:	004102        	s8i	a0, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1879
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
    #ifdef FLASH_INTEL_3DTLC
        TEST_NfcSwitchFlashMode(tFlashAddr.ucPU);
    #endif
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
200083da:	023057        	bltu	a0, a5, 200083e0 <TEST_NfcSSUandCS..ICB_1482204275+0x430>
200083dd:	001f06        	j	2000845d <TEST_NfcSSUandCS..ICB_1482204275+0x4ad>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1881
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
200083e0:	d60cd2        	l8ui	a13, a12, 214
200083e3:	0141d2        	s8i	a13, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1882
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
200083e6:	e8bd27        	bgeu	a13, a2, 200083d2 <TEST_NfcSSUandCS..ICB_1482204275+0x422>
200083e9:	176102        	s32i	a0, a1, 92
200083ec:	742000        	extui	a2, a0, 0, 8
200083ef:	2f2a      	add.n	a2, a15, a2
200083f1:	166122        	s32i	a2, a1, 88
200083f4:	000a06        	j	20008420 <TEST_NfcSSUandCS..ICB_1482204275+0x470>

200083f7 <TEST_NfcSSUandCS..ICB_1482204275+0x447>:
	...

200083f9 <TEST_NfcSSUandCS..ICB_1482204275+0x449>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1888
            {
                while(TRUE == HAL_NfcGetFull(tFlashAddr.ucPU, tFlashAddr.ucLun))
                {
                    ;
                }
                if(TRUE == g_bSinglePln)
200083f9:	232ce2        	l32i	a14, a12, 140
200083fc:	0020c0        	memw
200083ff:	292c32        	l32i	a3, a12, 164
20008402:	481326        	beqi	a3, 1, 2000844e <TEST_NfcSSUandCS..ICB_1482204275+0x49e>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1894
                {
                    HAL_NfcSingleBlockErase(&tFlashAddr, g_bTlcMode);
                }
                else
                {
                    HAL_NfcFullBlockErase(&tFlashAddr, g_bTlcMode);
20008405:	203ee0        	or	a3, a14, a14
20008408:	202110        	or	a2, a1, a1
2000840b:	e19001        	l32r	a0, 20000a4c <_stext+0x34c>
2000840e:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1882
        TEST_NfcSwitchFlashMode(tFlashAddr.ucPU);
    #endif
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20008411:	d70c22        	l8ui	a2, a12, 215
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1896
                }
                else
                {
                    HAL_NfcFullBlockErase(&tFlashAddr, g_bTlcMode);
                }
                tFlashAddr.ucLun++;
20008414:	01cdd2        	addi	a13, a13, 1
20008417:	74d0d0        	extui	a13, a13, 0, 8
2000841a:	0141d2        	s8i	a13, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1882
        TEST_NfcSwitchFlashMode(tFlashAddr.ucPU);
    #endif
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
2000841d:	abbd27        	bgeu	a13, a2, 200083cc <TEST_NfcSSUandCS..ICB_1482204275+0x41c>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetFull(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20008420:	162122        	l32i	a2, a1, 88
20008423:	ac38      	l32i.n	a3, a12, 40
20008425:	800222        	l8ui	a2, a2, 128
20008428:	7440d0        	extui	a4, a13, 0, 8
2000842b:	a02240        	addx4	a2, a2, a4
2000842e:	a02230        	addx4	a2, a2, a3
20008431:	0020c0        	memw
20008434:	0002e2        	l8ui	a14, a2, 0
20008437:	0020f0        	nop
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1884
            {
                while(TRUE == HAL_NfcGetFull(tFlashAddr.ucPU, tFlashAddr.ucLun))
2000843a:	bb6e37        	bbci	a14, 3, 200083f9 <TEST_NfcSSUandCS..ICB_1482204275+0x449>
2000843d:	088076        	loop	a0, 20008449 <TEST_NfcSSUandCS..ICB_1482204275+0x499>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
20008440:	0020c0        	memw
20008443:	000232        	l8ui	a3, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1884
20008446:	af6337        	bbci	a3, 3, 200083f9 <TEST_NfcSSUandCS..ICB_1482204275+0x449>

20008449 <TEST_NfcSSUandCS..ICB_1482204275+0x499>:
20008449:	fffc06        	j	2000843d <TEST_NfcSSUandCS..ICB_1482204275+0x48d>

2000844c <TEST_NfcSSUandCS..ICB_1482204275+0x49c>:
	...

2000844e <TEST_NfcSSUandCS..ICB_1482204275+0x49e>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1890
                {
                    ;
                }
                if(TRUE == g_bSinglePln)
                {
                    HAL_NfcSingleBlockErase(&tFlashAddr, g_bTlcMode);
2000844e:	0e3d      	mov.n	a3, a14
20008450:	012d      	mov.n	a2, a1
20008452:	e17f01        	l32r	a0, 20000a50 <_stext+0x350>
20008455:	0000c0        	callx0	a0
20008458:	ffed46        	j	20008411 <TEST_NfcSSUandCS..ICB_1482204275+0x461>

2000845b <TEST_NfcSSUandCS..ICB_1482204275+0x4ab>:
	...

2000845d <TEST_NfcSSUandCS..ICB_1482204275+0x4ad>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1901
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
        }
        /*    check nfc status by LUN as the basic unit    */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
2000845d:	d40c02        	l8ui	a0, a12, 212
20008460:	004102        	s8i	a0, a1, 0
20008463:	023057        	bltu	a0, a5, 20008469 <TEST_NfcSSUandCS..ICB_1482204275+0x4b9>
20008466:	ff9886        	j	200082cc <TEST_NfcSSUandCS..ICB_1482204275+0x31c>
20008469:	d70c22        	l8ui	a2, a12, 215
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1903
        {
            for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
2000846c:	d60cd2        	l8ui	a13, a12, 214
2000846f:	0141d2        	s8i	a13, a1, 1
20008472:	3bbd27        	bgeu	a13, a2, 200084b1 <TEST_NfcSSUandCS..ICB_1482204275+0x501>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1905
            {
                if(NFC_STATUS_SUCCESS != HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun))
20008475:	203dd0        	or	a3, a13, a13
20008478:	000122        	l8ui	a2, a1, 0
2000847b:	fea905        	call0	20006f0c <HAL_NfcWaitStatus>
2000847e:	171226        	beqi	a2, 1, 20008499 <TEST_NfcSSUandCS..ICB_1482204275+0x4e9>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1907
                {
                    DBG_Printf("PU%d LUN %d BLK%d Erase Fail!\n", tFlashAddr.ucPU, tFlashAddr.ucLun, tFlashAddr.usBlock);
20008481:	e16e21        	l32r	a2, 20000a3c <_stext+0x33c>
20008484:	000132        	l8ui	a3, a1, 0
20008487:	010142        	l8ui	a4, a1, 1
2000848a:	021152        	l16ui	a5, a1, 4
2000848d:	027d45        	call0	2000ac64 <dbg_printf>
20008490:	202110        	or	a2, a1, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1908
                    HAL_NfcResetLun(&tFlashAddr);//error handle, otherwise program other blk also will be fail
20008493:	e17001        	l32r	a0, 20000a54 <_stext+0x354>
20008496:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1903
            tFlashAddr.ucPU++;
        }
        /*    check nfc status by LUN as the basic unit    */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
        {
            for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20008499:	0101d2        	l8ui	a13, a1, 1
2000849c:	d70c22        	l8ui	a2, a12, 215
2000849f:	01cdd2        	addi	a13, a13, 1
200084a2:	74d0d0        	extui	a13, a13, 0, 8
200084a5:	0141d2        	s8i	a13, a1, 1
200084a8:	c93d27        	bltu	a13, a2, 20008475 <TEST_NfcSSUandCS..ICB_1482204275+0x4c5>
200084ab:	000102        	l8ui	a0, a1, 0
200084ae:	d50c52        	l8ui	a5, a12, 213
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1901
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
        }
        /*    check nfc status by LUN as the basic unit    */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
200084b1:	001b      	addi.n	a0, a0, 1
200084b3:	740000        	extui	a0, a0, 0, 8
200084b6:	004102        	s8i	a0, a1, 0
200084b9:	af3057        	bltu	a0, a5, 2000846c <TEST_NfcSSUandCS..ICB_1482204275+0x4bc>
200084bc:	ff8306        	j	200082cc <TEST_NfcSSUandCS..ICB_1482204275+0x31c>

200084bf <TEST_NfcSSUandCS..ICB_1482204275+0x50f>:
	...

200084c0 <TEST_NfcSSUandCS..ICB_1482204275+0x510>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1236
        pWrReq->bsInjErrEn = TRUE;
        pWrReq->pErrInj    = &g_tErrInj;
    }
    else
    {
        pWrReq->pErrInj = NULL;
200084c0:	020c      	movi.n	a2, 0
200084c2:	b129      	s32i.n	a2, a1, 44
200084c4:	ff0706        	j	200080e4 <TEST_NfcSSUandCS..ICB_1482204275+0x134>

200084c7 <TEST_NfcSSUandCS..ICB_1482204275+0x517>:
	...

200084c8 <TEST_NfcRedOnlyRead..HCB_1482204275>:
TEST_NfcRedOnlyRead():
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2404
Reference     :
History       :
    20151112    abby    create
****************************************************************************/
LOCAL void TEST_NfcRedOnlyRead(void)
{
200084c8:	a0c112        	addi	a1, a1, -96
200084cb:	030c      	movi.n	a3, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1870
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   
200084cd:	034d      	mov.n	a4, a3
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2404
Reference     :
History       :
    20151112    abby    create
****************************************************************************/
LOCAL void TEST_NfcRedOnlyRead(void)
{
200084cf:	f1d9      	s32i.n	a13, a1, 60
200084d1:	1061e2        	s32i	a14, a1, 64
200084d4:	1161f2        	s32i	a15, a1, 68
200084d7:	d109      	s32i.n	a0, a1, 52
200084d9:	e1c9      	s32i.n	a12, a1, 56
200084db:	e09a01        	l32r	a0, 20000744 <_stext+0x44>
200084de:	e14cc1        	l32r	a12, 20000a10 <_stext+0x310>
200084e1:	e090f1        	l32r	a15, 20000724 <_stext+0x24>
200084e4:	e08ee1        	l32r	a14, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2405
    g_bSinglePln = FALSE;
200084e7:	0020c0        	memw
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1870
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   
200084ea:	150c      	movi.n	a5, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2405
History       :
    20151112    abby    create
****************************************************************************/
LOCAL void TEST_NfcRedOnlyRead(void)
{
    g_bSinglePln = FALSE;
200084ec:	5d6e32        	s32i	a3, a14, 0x174
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
200084ef:	df1ed2        	l16ui	a13, a14, 0x1be
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1868
History       :
    20151112    abby    create
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
200084f2:	e14871        	l32r	a7, 20000a14 <_stext+0x314>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1872
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
200084f5:	de1e22        	l16ui	a2, a14, 0x1bc
200084f8:	136122        	s32i	a2, a1, 76
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1868
History       :
    20151112    abby    create
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
200084fb:	1768      	l32i.n	a6, a7, 4
200084fd:	1169      	s32i.n	a6, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1870
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   
200084ff:	572ee2        	l32i	a14, a14, 0x15c
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1868
History       :
    20151112    abby    create
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
20008502:	0778      	l32i.n	a7, a7, 0
20008504:	0179      	s32i.n	a7, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1870
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   
20008506:	8345e0        	moveqz	a4, a5, a14
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1872

    tFlashAddr.usBlock = g_usTestBlkStart;
20008509:	025122        	s16i	a2, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1870
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   
2000850c:	0158      	l32i.n	a5, a1, 0
2000850e:	0144c0        	slli	a4, a4, 20
20008511:	126142        	s32i	a4, a1, 72
20008514:	105500        	and	a5, a5, a0
20008517:	204450        	or	a4, a4, a5
2000851a:	0149      	s32i.n	a4, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
2000851c:	1db2d7        	bgeu	a2, a13, 2000853d <TEST_NfcRedOnlyRead..HCB_1482204275+0x75>
2000851f:	00a546        	j	200087b8 <TEST_NfcRedOnlyRead..HCB_1482204275+0x2f0>

20008522 <TEST_NfcRedOnlyRead..HCB_1482204275+0x5a>:
20008522:	000000                                        ...

20008525 <TEST_NfcRedOnlyRead..HCB_1482204275+0x5d>:
20008525:	e07d81        	l32r	a8, 2000071c <_stext+0x1c>
20008528:	01a072        	movi	a7, 1
2000852b:	00a062        	movi	a6, 0
2000852e:	8367e0        	moveqz	a6, a7, a14
20008531:	de1882        	l16ui	a8, a8, 0x1bc
20008534:	136182        	s32i	a8, a1, 76
20008537:	0166c0        	slli	a6, a6, 20
2000853a:	126162        	s32i	a6, a1, 72
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1936
    20150229    abby    merge TLC write test code into MLC
****************************************************************************/
void TEST_NfcWriteAll(WRITE_REQ_TYPE WriteType)
{
    FLASH_ADDR tFlashAddr = {0};
    NFC_PRG_REQ_DES tWrReq = {0};
2000853d:	18c122        	addi	a2, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1935
    20151112    abby    create
    20150229    abby    merge TLC write test code into MLC
****************************************************************************/
void TEST_NfcWriteAll(WRITE_REQ_TYPE WriteType)
{
    FLASH_ADDR tFlashAddr = {0};
20008540:	e13631        	l32r	a3, 20000a18 <_stext+0x318>
20008543:	10c152        	addi	a5, a1, 16
20008546:	1348      	l32i.n	a4, a3, 4
20008548:	0368      	l32i.n	a6, a3, 0
2000854a:	0569      	s32i.n	a6, a5, 0
2000854c:	1549      	s32i.n	a4, a5, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1936
    NFC_PRG_REQ_DES tWrReq = {0};
2000854e:	338b      	addi.n	a3, a3, 8
20008550:	841c      	movi.n	a4, 24
20008552:	02cdc5        	call0	2000b230 <memcpy>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
20008555:	e07b61        	l32r	a6, 20000744 <_stext+0x44>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1220
LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
20008558:	362c42        	l32i	a4, a12, 216
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1219

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
2000855b:	3a2c72        	l32i	a7, a12, 232
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1218
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
2000855e:	262c82        	l32i	a8, a12, 152
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
20008561:	e08e01        	l32r	a0, 2000079c <_stext+0x9c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
20008564:	372ca2        	l32i	a10, a12, 220
20008567:	190c      	movi.n	a9, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1227
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;
20008569:	242c32        	l32i	a3, a12, 144
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
2000856c:	e06cb1        	l32r	a11, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1227
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;
2000856f:	a128      	l32i.n	a2, a1, 40
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
20008571:	0bb8      	l32i.n	a11, a11, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1227
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;
20008573:	033324        	insbits	a2, a3, 3, 3
20008576:	a129      	s32i.n	a2, a1, 40
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
20008578:	030c      	movi.n	a3, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
2000857a:	0bb8      	l32i.n	a11, a11, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
2000857c:	8339a0        	moveqz	a3, a9, a10
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1224
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
2000857f:	272c92        	l32i	a9, a12, 156
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
20008582:	0153c0        	slli	a5, a3, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
20008585:	bb0a      	add.n	a11, a11, a0
20008587:	f5b0b0        	extui	a11, a11, 16, 16
2000858a:	11bbf0        	slli	a11, a11, 1
2000858d:	0c51b2        	s16i	a11, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1218
    pWrReq->bsRedOntf       = g_bRedOntf;
20008590:	6128      	l32i.n	a2, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1223
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
20008592:	0133a0        	slli	a3, a3, 22
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1218
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
20008595:	900824        	insbits	a2, a8, 16, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1226
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
20008598:	312c82        	l32i	a8, a12, 196
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1219

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
2000859b:	922724        	insbits	a2, a7, 18, 18
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1220
    pWrReq->bsSsu0En        = g_bSsuEn;
2000859e:	933424        	insbits	a2, a4, 19, 19
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
200085a1:	102260        	and	a2, a2, a6
200085a4:	202250        	or	a2, a2, a5
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1222
    pWrReq->bsSsu1En        = g_bSsuEn;
200085a7:	b15424        	insbits	a2, a4, 21, 21
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1223
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
200085aa:	e11c41        	l32r	a4, 20000a1c <_stext+0x31c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1226
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
200085ad:	9189      	s32i.n	a8, a1, 36
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1223
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
200085af:	102240        	and	a2, a2, a4
200085b2:	202230        	or	a2, a2, a3
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1224
    pWrReq->bsLbaChkEn      = g_bLbaChk;
200085b5:	911924        	insbits	a2, a9, 17, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1225
    pWrReq->bsTlcMode       = g_bTlcMode;
200085b8:	d3be24        	insbits	a2, a14, 27, 27
200085bb:	6129      	s32i.n	a2, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1229
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;

    if (FALSE != g_ErrInjEn)
200085bd:	0020c0        	memw
200085c0:	112c72        	l32i	a7, a12, 68
200085c3:	3c5716        	beqz	a7, 2000898c <TEST_NfcRedOnlyRead..HCB_1482204275+0x4c4>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1232
    {
        pWrReq->bsInjErrEn = TRUE;
        pWrReq->pErrInj    = &g_tErrInj;
200085c6:	e11101        	l32r	a0, 20000a0c <_stext+0x30c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1231
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;

    if (FALSE != g_ErrInjEn)
    {
        pWrReq->bsInjErrEn = TRUE;
200085c9:	e0dfe1        	l32r	a14, 20000948 <_stext+0x248>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1232
        pWrReq->pErrInj    = &g_tErrInj;
200085cc:	b109      	s32i.n	a0, a1, 44
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1231
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;

    if (FALSE != g_ErrInjEn)
    {
        pWrReq->bsInjErrEn = TRUE;
200085ce:	20e2e0        	or	a14, a2, a14
200085d1:	0661e2        	s32i	a14, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1240
    {
        pWrReq->pErrInj = NULL;
    }

    /*  scramble disable    */
    if (g_bRawDataRead)
200085d4:	392c22        	l32i	a2, a12, 228
200085d7:	529c      	beqz.n	a2, 200085f0 <TEST_NfcRedOnlyRead..HCB_1482204275+0x128>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1243
    {
        volatile PG_CONF_REG *pNfcPgCfg = (volatile PG_CONF_REG *) &rNfcPgCfg;
        pNfcPgCfg->bsScrBps = TRUE;
200085d9:	850c      	movi.n	a5, 8
200085db:	767c      	movi.n	a6, -9
200085dd:	e06441        	l32r	a4, 20000770 <_stext+0x70>
200085e0:	0020c0        	memw
200085e3:	0438      	l32i.n	a3, a4, 0
200085e5:	103360        	and	a3, a3, a6
200085e8:	203350        	or	a3, a3, a5
200085eb:	0020c0        	memw
200085ee:	0439      	s32i.n	a3, a4, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1941
    NFC_PRG_REQ_DES tWrReq = {0};
    U16 usPrgIndex;

    TEST_NfcWtCfgReqComm(&tWrReq);

    tFlashAddr.bsSLCMode = !g_bTlcMode;
200085f0:	122182        	l32i	a8, a1, 72
200085f3:	e054a1        	l32r	a10, 20000744 <_stext+0x44>
200085f6:	4198      	l32i.n	a9, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1943

    tFlashAddr.usBlock = g_usTestBlkStart;
200085f8:	132172        	l32i	a7, a1, 76
200085fb:	0a5172        	s16i	a7, a1, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1941
    NFC_PRG_REQ_DES tWrReq = {0};
    U16 usPrgIndex;

    TEST_NfcWtCfgReqComm(&tWrReq);

    tFlashAddr.bsSLCMode = !g_bTlcMode;
200085fe:	1099a0        	and	a9, a9, a10
20008601:	208890        	or	a8, a8, a9
20008604:	4189      	s32i.n	a8, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1944

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
20008606:	0237d7        	bltu	a7, a13, 2000860c <TEST_NfcRedOnlyRead..HCB_1482204275+0x144>
20008609:	005d46        	j	20008782 <TEST_NfcRedOnlyRead..HCB_1482204275+0x2ba>
2000860c:	d50c52        	l8ui	a5, a12, 213
2000860f:	e104d1        	l32r	a13, 20000a20 <_stext+0x320>
20008612:	8e7c      	movi.n	a14, -8
20008614:	000506        	j	2000862c <TEST_NfcRedOnlyRead..HCB_1482204275+0x164>

20008617 <TEST_NfcRedOnlyRead..HCB_1482204275+0x14f>:
	...

20008618 <TEST_NfcRedOnlyRead..HCB_1482204275+0x150>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2030
                {
                    //DBG_Printf("Pu %d Block %d Page %d Write OK!\n",tFlashAddr.ucPU,tFlashAddr.usBlock,tFlashAddr.usPage);
                }
            }
        }
        tFlashAddr.usBlock++;
20008618:	0a11b2        	l16ui	a11, a1, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1944
    TEST_NfcWtCfgReqComm(&tWrReq);

    tFlashAddr.bsSLCMode = !g_bTlcMode;

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
2000861b:	771c02        	l16ui	a0, a12, 238
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2030
                {
                    //DBG_Printf("Pu %d Block %d Page %d Write OK!\n",tFlashAddr.ucPU,tFlashAddr.usBlock,tFlashAddr.usPage);
                }
            }
        }
        tFlashAddr.usBlock++;
2000861e:	bb1b      	addi.n	a11, a11, 1
20008620:	f4b0b0        	extui	a11, a11, 0, 16
20008623:	0a51b2        	s16i	a11, a1, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1944
    TEST_NfcWtCfgReqComm(&tWrReq);

    tFlashAddr.bsSLCMode = !g_bTlcMode;

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
20008626:	023b07        	bltu	a11, a0, 2000862c <TEST_NfcRedOnlyRead..HCB_1482204275+0x164>
20008629:	005546        	j	20008782 <TEST_NfcRedOnlyRead..HCB_1482204275+0x2ba>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1946
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
2000862c:	d40c02        	l8ui	a0, a12, 212
2000862f:	104102        	s8i	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1947
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
20008632:	023057        	bltu	a0, a5, 20008638 <TEST_NfcRedOnlyRead..HCB_1482204275+0x170>
20008635:	003dc6        	j	20008730 <TEST_NfcRedOnlyRead..HCB_1482204275+0x268>
20008638:	d70c22        	l8ui	a2, a12, 215
2000863b:	000546        	j	20008654 <TEST_NfcRedOnlyRead..HCB_1482204275+0x18c>

2000863e <TEST_NfcRedOnlyRead..HCB_1482204275+0x176>:
	...

20008640 <TEST_NfcRedOnlyRead..HCB_1482204275+0x178>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1950
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20008640:	d50c52        	l8ui	a5, a12, 213
20008643:	100102        	l8ui	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2007
                    }
                    usPrgIndex++;
                }
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
20008646:	001b      	addi.n	a0, a0, 1
20008648:	740000        	extui	a0, a0, 0, 8
2000864b:	104102        	s8i	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1947

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
2000864e:	023057        	bltu	a0, a5, 20008654 <TEST_NfcRedOnlyRead..HCB_1482204275+0x18c>
20008651:	003606        	j	2000872d <TEST_NfcRedOnlyRead..HCB_1482204275+0x265>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1949
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
20008654:	d60c32        	l8ui	a3, a12, 214
20008657:	114132        	s8i	a3, a1, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1950
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
2000865a:	e8b327        	bgeu	a3, a2, 20008646 <TEST_NfcRedOnlyRead..HCB_1482204275+0x17e>
2000865d:	791c02        	l16ui	a0, a12, 242
20008660:	000446        	j	20008675 <TEST_NfcRedOnlyRead..HCB_1482204275+0x1ad>

20008663 <TEST_NfcRedOnlyRead..HCB_1482204275+0x19b>:
	...

20008664 <TEST_NfcRedOnlyRead..HCB_1482204275+0x19c>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2005
                    {
                        DBG_Getch();
                    }
                    usPrgIndex++;
                }
                tFlashAddr.ucLun++;
20008664:	110142        	l8ui	a4, a1, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1950
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20008667:	d70c22        	l8ui	a2, a12, 215
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2005
                    {
                        DBG_Getch();
                    }
                    usPrgIndex++;
                }
                tFlashAddr.ucLun++;
2000866a:	441b      	addi.n	a4, a4, 1
2000866c:	744040        	extui	a4, a4, 0, 8
2000866f:	114142        	s8i	a4, a1, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1950
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20008672:	cab427        	bgeu	a4, a2, 20008640 <TEST_NfcRedOnlyRead..HCB_1482204275+0x178>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1952
            {
                usPrgIndex = g_usTestPageStart;
20008675:	781c52        	l16ui	a5, a12, 240
20008678:	185152        	s16i	a5, a1, 48
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1953
                while (usPrgIndex < g_usTestPageEnd * PRG_CYC_CNT)
2000867b:	e5b507        	bgeu	a5, a0, 20008664 <TEST_NfcRedOnlyRead..HCB_1482204275+0x19c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1955
                {
                    tFlashAddr.usPage = TEST_NfcWtGetPageAddr(&usPrgIndex);
2000867e:	30c122        	addi	a2, a1, 48
20008681:	fdf205        	call0	200065a4 <TEST_NfcWtGetPageAddr..GBB_1482204275>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1958
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
20008684:	791c02        	l16ui	a0, a12, 242
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1955
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
            {
                usPrgIndex = g_usTestPageStart;
                while (usPrgIndex < g_usTestPageEnd * PRG_CYC_CNT)
                {
                    tFlashAddr.usPage = TEST_NfcWtGetPageAddr(&usPrgIndex);
20008687:	0b5122        	s16i	a2, a1, 22
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1958
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
2000868a:	d6b207        	bgeu	a2, a0, 20008664 <TEST_NfcRedOnlyRead..HCB_1482204275+0x19c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
2000868d:	362c62        	l32i	a6, a12, 216
20008690:	ac48      	l32i.n	a4, a12, 40
20008692:	110132        	l8ui	a3, a1, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1960
                    tFlashAddr.usPage = TEST_NfcWtGetPageAddr(&usPrgIndex);
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
                    }
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
20008695:	6178      	l32i.n	a7, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1961
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
20008697:	a158      	l32i.n	a5, a1, 40
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
20008699:	100102        	l8ui	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1961
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
                    }
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
2000869c:	1055e0        	and	a5, a5, a14
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
2000869f:	20fa      	add.n	a2, a0, a15
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1960
                    tFlashAddr.usPage = TEST_NfcWtGetPageAddr(&usPrgIndex);
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
                    }
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
200086a1:	1077d0        	and	a7, a7, a13
200086a4:	066172        	s32i	a7, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
200086a7:	800222        	l8ui	a2, a2, 128
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1961
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
                    }
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
200086aa:	0a6152        	s32i	a5, a1, 40
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
200086ad:	a02230        	addx4	a2, a2, a3
200086b0:	a02240        	addx4	a2, a2, a4
200086b3:	06f616        	beqz	a6, 20008726 <TEST_NfcRedOnlyRead..HCB_1482204275+0x25e>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:536
    20151029    abby     modify to meet VT3533 
------------------------------------------------------------------------------*/
U8 HAL_NfcGetRP(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
200086b6:	0020c0        	memw
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:528
    {
        return 0;
    }
    
    //MixVector only support 512 offset for SSUx in one MCU
    return GET_CMD_LEVEL(pFlashAddr->ucPU,pFlashAddr->ucLun,pFlashAddr->bsPln
200086b9:	1160e0        	slli	a6, a0, 2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:536
200086bc:	000202        	l8ui	a0, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:528
200086bf:	206360        	or	a6, a3, a6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:536
200086c2:	140400        	extui	a0, a0, 4, 2
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:528
200086c5:	e32604        	insbits	a0, a6, 2, 31
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1965
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
                
                    TEST_NfcWtDummyDataPrepare(&tFlashAddr, &tWrReq);
                    
                    tWrReq.bsSsu0Addr   = TEST_GetOffset(&tFlashAddr);
200086c8:	0e5102        	s16i	a0, a1, 28
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1966
                    tWrReq.bsSsu1Addr   = tWrReq.bsSsu0Addr + 0x400;
200086cb:	f48000        	extui	a8, a0, 0, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1967
                    tWrReq.bsCsAddrOff  = tWrReq.bsSsu0Addr;
200086ce:	086182        	s32i	a8, a1, 32
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1966
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
                
                    TEST_NfcWtDummyDataPrepare(&tFlashAddr, &tWrReq);
                    
                    tWrReq.bsSsu0Addr   = TEST_GetOffset(&tFlashAddr);
                    tWrReq.bsSsu1Addr   = tWrReq.bsSsu0Addr + 0x400;
200086d1:	04d882        	addmi	a8, a8, 0x400
200086d4:	0f5182        	s16i	a8, a1, 30
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetFull(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
200086d7:	0020c0        	memw
200086da:	000272        	l8ui	a7, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1968
                    tWrReq.bsCsAddrOff  = tWrReq.bsSsu0Addr;
                    while(TRUE == HAL_NfcGetFull(tFlashAddr.ucPU, tFlashAddr.ucLun))
200086dd:	106737        	bbci	a7, 3, 200086f1 <TEST_NfcRedOnlyRead..HCB_1482204275+0x229>
200086e0:	f03d      	nop.n
200086e2:	088076        	loop	a0, 200086ee <TEST_NfcRedOnlyRead..HCB_1482204275+0x226>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
200086e5:	0020c0        	memw
200086e8:	000292        	l8ui	a9, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1968
200086eb:	026937        	bbci	a9, 3, 200086f1 <TEST_NfcRedOnlyRead..HCB_1482204275+0x229>

200086ee <TEST_NfcRedOnlyRead..HCB_1482204275+0x226>:
200086ee:	fffb86        	j	200086e0 <TEST_NfcRedOnlyRead..HCB_1482204275+0x218>

200086f1 <TEST_NfcRedOnlyRead..HCB_1482204275+0x229>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1981
                            HAL_NfcSinglePlaneWrite(&tFlashAddr, &tWrReq);
                        }break;

                        case FULL_PAGE_WRITE :
                        {                        
                             HAL_NfcFullPageWrite(&tFlashAddr, &tWrReq);
200086f1:	10c122        	addi	a2, a1, 16
200086f4:	18c132        	addi	a3, a1, 24
200086f7:	e0d201        	l32r	a0, 20000a40 <_stext+0x340>
200086fa:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1999
                        }break;

                    }//end switch
                    
                    /* check status of NFC CMD REG and DEC SRAM */
                    if (SUCCESS != TEST_NfcWtStsChk(&tFlashAddr, &tWrReq))
200086fd:	10c122        	addi	a2, a1, 16
20008700:	18c132        	addi	a3, a1, 24
20008703:	fdd585        	call0	2000645c <TEST_NfcWtStsChk..JBB_1482204275>
20008706:	051226        	beqi	a2, 1, 2000870f <TEST_NfcRedOnlyRead..HCB_1482204275+0x247>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2001
                    {
                        DBG_Getch();
20008709:	e00301        	l32r	a0, 20000718 <_stext+0x18>
2000870c:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2003
                    }
                    usPrgIndex++;
2000870f:	1811a2        	l16ui	a10, a1, 48
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1953
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
            {
                usPrgIndex = g_usTestPageStart;
                while (usPrgIndex < g_usTestPageEnd * PRG_CYC_CNT)
20008712:	791c02        	l16ui	a0, a12, 242
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2003
                    /* check status of NFC CMD REG and DEC SRAM */
                    if (SUCCESS != TEST_NfcWtStsChk(&tFlashAddr, &tWrReq))
                    {
                        DBG_Getch();
                    }
                    usPrgIndex++;
20008715:	aa1b      	addi.n	a10, a10, 1
20008717:	f4a0a0        	extui	a10, a10, 0, 16
2000871a:	1851a2        	s16i	a10, a1, 48
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1953
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
            {
                usPrgIndex = g_usTestPageStart;
                while (usPrgIndex < g_usTestPageEnd * PRG_CYC_CNT)
2000871d:	02ba07        	bgeu	a10, a0, 20008723 <TEST_NfcRedOnlyRead..HCB_1482204275+0x25b>
20008720:	ffd686        	j	2000867e <TEST_NfcRedOnlyRead..HCB_1482204275+0x1b6>
20008723:	ffcf46        	j	20008664 <TEST_NfcRedOnlyRead..HCB_1482204275+0x19c>

20008726 <TEST_NfcRedOnlyRead..HCB_1482204275+0x25e>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
20008726:	000c      	movi.n	a0, 0
20008728:	ffe706        	j	200086c8 <TEST_NfcRedOnlyRead..HCB_1482204275+0x200>

2000872b <TEST_NfcRedOnlyRead..HCB_1482204275+0x263>:
	...

2000872d <TEST_NfcRedOnlyRead..HCB_1482204275+0x265>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1947

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
2000872d:	d40c02        	l8ui	a0, a12, 212
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2010
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
        }
        /*  check nfc status by LUN as the basic unit  */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
20008730:	104102        	s8i	a0, a1, 16
20008733:	023057        	bltu	a0, a5, 20008739 <TEST_NfcRedOnlyRead..HCB_1482204275+0x271>
20008736:	ffb786        	j	20008618 <TEST_NfcRedOnlyRead..HCB_1482204275+0x150>
20008739:	d70c22        	l8ui	a2, a12, 215
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2012
        {
            for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
2000873c:	d60c32        	l8ui	a3, a12, 214
2000873f:	114132        	s8i	a3, a1, 17
20008742:	2eb327        	bgeu	a3, a2, 20008774 <TEST_NfcRedOnlyRead..HCB_1482204275+0x2ac>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2014
            {
                if(NFC_STATUS_SUCCESS != HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun))
20008745:	100122        	l8ui	a2, a1, 16
20008748:	fe7c05        	call0	20006f0c <HAL_NfcWaitStatus>
2000874b:	0e1226        	beqi	a2, 1, 2000875d <TEST_NfcRedOnlyRead..HCB_1482204275+0x295>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2016
                {
                    DBG_Printf("Pu %d Block %d Page %d Write Fail!\n",tFlashAddr.ucPU,tFlashAddr.usBlock,tFlashAddr.usPage);
2000874e:	e0b521        	l32r	a2, 20000a24 <_stext+0x324>
20008751:	100132        	l8ui	a3, a1, 16
20008754:	0a1142        	l16ui	a4, a1, 20
20008757:	0b1152        	l16ui	a5, a1, 22
2000875a:	025085        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2012
            tFlashAddr.ucPU++;
        }
        /*  check nfc status by LUN as the basic unit  */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
        {
            for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
2000875d:	110132        	l8ui	a3, a1, 17
20008760:	d70c22        	l8ui	a2, a12, 215
20008763:	331b      	addi.n	a3, a3, 1
20008765:	743030        	extui	a3, a3, 0, 8
20008768:	114132        	s8i	a3, a1, 17
2000876b:	d63327        	bltu	a3, a2, 20008745 <TEST_NfcRedOnlyRead..HCB_1482204275+0x27d>
2000876e:	d50c52        	l8ui	a5, a12, 213
20008771:	100102        	l8ui	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2010
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
        }
        /*  check nfc status by LUN as the basic unit  */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
20008774:	001b      	addi.n	a0, a0, 1
20008776:	740000        	extui	a0, a0, 0, 8
20008779:	104102        	s8i	a0, a1, 16
2000877c:	bc3057        	bltu	a0, a5, 2000873c <TEST_NfcRedOnlyRead..HCB_1482204275+0x274>
2000877f:	ffa546        	j	20008618 <TEST_NfcRedOnlyRead..HCB_1482204275+0x150>

20008782 <TEST_NfcRedOnlyRead..HCB_1482204275+0x2ba>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2412
    TEST_NfcEraseAll();

    TEST_NfcWriteAll(FULL_PAGE_WRITE);

    /* only read red data */
    TEST_NfcReadAll(0, SEC_PER_PIPE_PG, RED_ONLY_READ);
20008782:	020c      	movi.n	a2, 0
20008784:	80a032        	movi	a3, 128
20008787:	340c      	movi.n	a4, 3
20008789:	fe7d45        	call0	20006f60 <TEST_NfcReadAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2414

    return;
2000878c:	e1c8      	l32i.n	a12, a1, 56
2000878e:	f1d8      	l32i.n	a13, a1, 60
20008790:	1021e2        	l32i	a14, a1, 64
20008793:	1121f2        	l32i	a15, a1, 68
20008796:	d108      	l32i.n	a0, a1, 52
20008798:	60c112        	addi	a1, a1, 96
2000879b:	f00d      	ret.n

2000879d <TEST_NfcRedOnlyRead..HCB_1482204275+0x2d5>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
2000879d:	dfdfd1        	l32r	a13, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1916
                {
                    //DBG_Printf("PU%d LUN %d BLK%d Erase OK!\n", tFlashAddr.ucPU, tFlashAddr.ucLun, tFlashAddr.usBlock);
                }
            }
        }
        tFlashAddr.usBlock++;
200087a0:	021122        	l16ui	a2, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
200087a3:	572de2        	l32i	a14, a13, 0x15c
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1916
                {
                    //DBG_Printf("PU%d LUN %d BLK%d Erase OK!\n", tFlashAddr.ucPU, tFlashAddr.ucLun, tFlashAddr.usBlock);
                }
            }
        }
        tFlashAddr.usBlock++;
200087a6:	01c222        	addi	a2, a2, 1
200087a9:	f42020        	extui	a2, a2, 0, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
200087ac:	df1dd2        	l16ui	a13, a13, 0x1be
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1916
                {
                    //DBG_Printf("PU%d LUN %d BLK%d Erase OK!\n", tFlashAddr.ucPU, tFlashAddr.ucLun, tFlashAddr.usBlock);
                }
            }
        }
        tFlashAddr.usBlock++;
200087af:	025122        	s16i	a2, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
200087b2:	0232d7        	bltu	a2, a13, 200087b8 <TEST_NfcRedOnlyRead..HCB_1482204275+0x2f0>
200087b5:	ff5b06        	j	20008525 <TEST_NfcRedOnlyRead..HCB_1482204275+0x5d>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:238
}

//for im 3d tlc slc/tlc mode switch
BOOL TEST_NfcSwitchFlashMode(U8 ucPU)
{
    FLASH_ADDR tFlashAddr = {0};
200087b8:	218b      	addi.n	a2, a1, 8
200087ba:	e09b31        	l32r	a3, 20000a28 <_stext+0x328>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:247
    tFlashAddr.ucPU = ucPU;
    
    /* step1: set feature, User Selectable Trim Profile, 85h/03h data, 00-2-pass MLC;01-1-pass MLC;03-TLC */
    ucAddr = 0x91;
#ifdef SWITCH_MODE_DADF
    ulData = g_bTlcMode ? 0x104 : 0x100;
200087bd:	04a102        	movi	a0, 0x104
200087c0:	00a1d2        	movi	a13, 0x100
200087c3:	93d0e0        	movnez	a13, a0, a14
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:238
}

//for im 3d tlc slc/tlc mode switch
BOOL TEST_NfcSwitchFlashMode(U8 ucPU)
{
    FLASH_ADDR tFlashAddr = {0};
200087c6:	1348      	l32i.n	a4, a3, 4
200087c8:	1249      	s32i.n	a4, a2, 4
200087ca:	002332        	l32i	a3, a3, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1875
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
200087cd:	d40ce2        	l8ui	a14, a12, 212
200087d0:	0041e2        	s8i	a14, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:238
200087d3:	0239      	s32i.n	a3, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:251
#ifdef SWITCH_MODE_DADF
    ulData = g_bTlcMode ? 0x104 : 0x100;
#else
    ulData = g_bTlcMode ? 0x004 : 0x000;
#endif
    HAL_NfcSetFeature(&tFlashAddr, ulData, ucAddr);
200087d5:	91a042        	movi	a4, 145
200087d8:	203dd0        	or	a3, a13, a13
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:242
{
    FLASH_ADDR tFlashAddr = {0};
    U8 ucAddr;
    U32 ulData;
    
    tFlashAddr.ucPU = ucPU;
200087db:	0841e2        	s8i	a14, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:251
#ifdef SWITCH_MODE_DADF
    ulData = g_bTlcMode ? 0x104 : 0x100;
#else
    ulData = g_bTlcMode ? 0x004 : 0x000;
#endif
    HAL_NfcSetFeature(&tFlashAddr, ulData, ucAddr);
200087de:	e09901        	l32r	a0, 20000a44 <_stext+0x344>
200087e1:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
200087e4:	090132        	l8ui	a3, a1, 9
200087e7:	dfcd41        	l32r	a4, 2000071c <_stext+0x1c>
200087ea:	2efa      	add.n	a2, a14, a15
200087ec:	800222        	l8ui	a2, a2, 128
200087ef:	3e2442        	l32i	a4, a4, 248
200087f2:	a02230        	addx4	a2, a2, a3
200087f5:	a02240        	addx4	a2, a2, a4
200087f8:	0020c0        	memw
200087fb:	000252        	l8ui	a5, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
200087fe:	0ee507        	bbsi	a5, 0, 20008810 <TEST_NfcRedOnlyRead..HCB_1482204275+0x348>
20008801:	088076        	loop	a0, 2000880d <TEST_NfcRedOnlyRead..HCB_1482204275+0x345>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20008804:	0020c0        	memw
20008807:	000242        	l8ui	a4, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
2000880a:	02e407        	bbsi	a4, 0, 20008810 <TEST_NfcRedOnlyRead..HCB_1482204275+0x348>

2000880d <TEST_NfcRedOnlyRead..HCB_1482204275+0x345>:
2000880d:	fffc06        	j	20008801 <TEST_NfcRedOnlyRead..HCB_1482204275+0x339>

20008810 <TEST_NfcRedOnlyRead..HCB_1482204275+0x348>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1106
    {
        ;
    }

    if (TRUE == HAL_NfcGetErrHold(ucPU, ucLun))
20008810:	202ee0        	or	a2, a14, a14
20008813:	fbedc5        	call0	200046f0 <HAL_NfcGetErrHold>
20008816:	0e1266        	bnei	a2, 1, 20008828 <TEST_NfcRedOnlyRead..HCB_1482204275+0x360>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:254
    if (NFC_STATUS_SUCCESS != HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun))
    {
        DBG_Printf("set feature fail PU:%d Addr0x%x Data0x%x\n", tFlashAddr.ucPU, ucAddr, ulData);
20008819:	e08421        	l32r	a2, 20000a2c <_stext+0x32c>
2000881c:	080132        	l8ui	a3, a1, 8
2000881f:	91a042        	movi	a4, 145
20008822:	205dd0        	or	a5, a13, a13
20008825:	0243c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:256
    }
    DBG_Printf("set feature OK PU:%d Addr0x%x Data0x%x\n", tFlashAddr.ucPU, ucAddr, ulData);
20008828:	205dd0        	or	a5, a13, a13
2000882b:	e08121        	l32r	a2, 20000a30 <_stext+0x330>
2000882e:	080132        	l8ui	a3, a1, 8
20008831:	91a042        	movi	a4, 145
20008834:	0242c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:259
    
    /* step2: sync reset to make flash reload trim file from ROM block */
    HAL_NfcSyncResetFlash(&tFlashAddr);
20008837:	08c122        	addi	a2, a1, 8
2000883a:	e08301        	l32r	a0, 20000a48 <_stext+0x348>
2000883d:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20008840:	090132        	l8ui	a3, a1, 9
20008843:	0801e2        	l8ui	a14, a1, 8
20008846:	dfb541        	l32r	a4, 2000071c <_stext+0x1c>
20008849:	802ef0        	add	a2, a14, a15
2000884c:	800222        	l8ui	a2, a2, 128
2000884f:	3e2442        	l32i	a4, a4, 248
20008852:	a02230        	addx4	a2, a2, a3
20008855:	a02240        	addx4	a2, a2, a4
20008858:	0020c0        	memw
2000885b:	000252        	l8ui	a5, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
2000885e:	0ee507        	bbsi	a5, 0, 20008870 <TEST_NfcRedOnlyRead..HCB_1482204275+0x3a8>
20008861:	088076        	loop	a0, 2000886d <TEST_NfcRedOnlyRead..HCB_1482204275+0x3a5>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20008864:	0020c0        	memw
20008867:	000242        	l8ui	a4, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
2000886a:	02e407        	bbsi	a4, 0, 20008870 <TEST_NfcRedOnlyRead..HCB_1482204275+0x3a8>

2000886d <TEST_NfcRedOnlyRead..HCB_1482204275+0x3a5>:
2000886d:	fffc06        	j	20008861 <TEST_NfcRedOnlyRead..HCB_1482204275+0x399>

20008870 <TEST_NfcRedOnlyRead..HCB_1482204275+0x3a8>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1106
    {
        ;
    }

    if (TRUE == HAL_NfcGetErrHold(ucPU, ucLun))
20008870:	202ee0        	or	a2, a14, a14
20008873:	fbe7c5        	call0	200046f0 <HAL_NfcGetErrHold>
20008876:	081266        	bnei	a2, 1, 20008882 <TEST_NfcRedOnlyRead..HCB_1482204275+0x3ba>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:262
    if (NFC_STATUS_SUCCESS != HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun))
    {
        DBG_Printf("SYNC Reset PU:%d fail!\n", tFlashAddr.ucPU);
20008879:	e06e21        	l32r	a2, 20000a34 <_stext+0x334>
2000887c:	080132        	l8ui	a3, a1, 8
2000887f:	023e45        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:264
    }
    DBG_Printf("SYNC Reset PU:%d OK!\n", tFlashAddr.ucPU);
20008882:	e06d21        	l32r	a2, 20000a38 <_stext+0x338>
20008885:	080132        	l8ui	a3, a1, 8
20008888:	023d85        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1879
    #ifdef FLASH_INTEL_3DTLC
        TEST_NfcSwitchFlashMode(tFlashAddr.ucPU);
    #endif
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
2000888b:	d50c52        	l8ui	a5, a12, 213
2000888e:	000102        	l8ui	a0, a1, 0
20008891:	023057        	bltu	a0, a5, 20008897 <TEST_NfcRedOnlyRead..HCB_1482204275+0x3cf>
20008894:	002446        	j	20008929 <TEST_NfcRedOnlyRead..HCB_1482204275+0x461>
20008897:	d70c22        	l8ui	a2, a12, 215
2000889a:	000406        	j	200088ae <TEST_NfcRedOnlyRead..HCB_1482204275+0x3e6>

2000889d <TEST_NfcRedOnlyRead..HCB_1482204275+0x3d5>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1882
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
2000889d:	d50c52        	l8ui	a5, a12, 213
200088a0:	152102        	l32i	a0, a1, 84
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1898
                {
                    HAL_NfcFullBlockErase(&tFlashAddr, g_bTlcMode);
                }
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
200088a3:	001b      	addi.n	a0, a0, 1
200088a5:	740000        	extui	a0, a0, 0, 8
200088a8:	004102        	s8i	a0, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1879
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
    #ifdef FLASH_INTEL_3DTLC
        TEST_NfcSwitchFlashMode(tFlashAddr.ucPU);
    #endif
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
200088ab:	7ab057        	bgeu	a0, a5, 20008929 <TEST_NfcRedOnlyRead..HCB_1482204275+0x461>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1881
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
200088ae:	d60cd2        	l8ui	a13, a12, 214
200088b1:	0141d2        	s8i	a13, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1882
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
200088b4:	ebbd27        	bgeu	a13, a2, 200088a3 <TEST_NfcRedOnlyRead..HCB_1482204275+0x3db>
200088b7:	156102        	s32i	a0, a1, 84
200088ba:	742000        	extui	a2, a0, 0, 8
200088bd:	2f2a      	add.n	a2, a15, a2
200088bf:	146122        	s32i	a2, a1, 80
200088c2:	000986        	j	200088ec <TEST_NfcRedOnlyRead..HCB_1482204275+0x424>

200088c5 <TEST_NfcRedOnlyRead..HCB_1482204275+0x3fd>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1888
            {
                while(TRUE == HAL_NfcGetFull(tFlashAddr.ucPU, tFlashAddr.ucLun))
                {
                    ;
                }
                if(TRUE == g_bSinglePln)
200088c5:	232ce2        	l32i	a14, a12, 140
200088c8:	0020c0        	memw
200088cb:	292c32        	l32i	a3, a12, 164
200088ce:	481326        	beqi	a3, 1, 2000891a <TEST_NfcRedOnlyRead..HCB_1482204275+0x452>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1894
                {
                    HAL_NfcSingleBlockErase(&tFlashAddr, g_bTlcMode);
                }
                else
                {
                    HAL_NfcFullBlockErase(&tFlashAddr, g_bTlcMode);
200088d1:	203ee0        	or	a3, a14, a14
200088d4:	202110        	or	a2, a1, a1
200088d7:	e05d01        	l32r	a0, 20000a4c <_stext+0x34c>
200088da:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1882
        TEST_NfcSwitchFlashMode(tFlashAddr.ucPU);
    #endif
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
200088dd:	d70c22        	l8ui	a2, a12, 215
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1896
                }
                else
                {
                    HAL_NfcFullBlockErase(&tFlashAddr, g_bTlcMode);
                }
                tFlashAddr.ucLun++;
200088e0:	01cdd2        	addi	a13, a13, 1
200088e3:	74d0d0        	extui	a13, a13, 0, 8
200088e6:	0141d2        	s8i	a13, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1882
        TEST_NfcSwitchFlashMode(tFlashAddr.ucPU);
    #endif
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
200088e9:	b0bd27        	bgeu	a13, a2, 2000889d <TEST_NfcRedOnlyRead..HCB_1482204275+0x3d5>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetFull(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
200088ec:	142122        	l32i	a2, a1, 80
200088ef:	ac38      	l32i.n	a3, a12, 40
200088f1:	800222        	l8ui	a2, a2, 128
200088f4:	7440d0        	extui	a4, a13, 0, 8
200088f7:	a02240        	addx4	a2, a2, a4
200088fa:	a02230        	addx4	a2, a2, a3
200088fd:	0020c0        	memw
20008900:	0002e2        	l8ui	a14, a2, 0
20008903:	0020f0        	nop
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1884
            {
                while(TRUE == HAL_NfcGetFull(tFlashAddr.ucPU, tFlashAddr.ucLun))
20008906:	bb6e37        	bbci	a14, 3, 200088c5 <TEST_NfcRedOnlyRead..HCB_1482204275+0x3fd>
20008909:	088076        	loop	a0, 20008915 <TEST_NfcRedOnlyRead..HCB_1482204275+0x44d>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
2000890c:	0020c0        	memw
2000890f:	000232        	l8ui	a3, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1884
20008912:	af6337        	bbci	a3, 3, 200088c5 <TEST_NfcRedOnlyRead..HCB_1482204275+0x3fd>

20008915 <TEST_NfcRedOnlyRead..HCB_1482204275+0x44d>:
20008915:	fffc06        	j	20008909 <TEST_NfcRedOnlyRead..HCB_1482204275+0x441>

20008918 <TEST_NfcRedOnlyRead..HCB_1482204275+0x450>:
	...

2000891a <TEST_NfcRedOnlyRead..HCB_1482204275+0x452>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1890
                {
                    ;
                }
                if(TRUE == g_bSinglePln)
                {
                    HAL_NfcSingleBlockErase(&tFlashAddr, g_bTlcMode);
2000891a:	0e3d      	mov.n	a3, a14
2000891c:	012d      	mov.n	a2, a1
2000891e:	e04c01        	l32r	a0, 20000a50 <_stext+0x350>
20008921:	0000c0        	callx0	a0
20008924:	ffed46        	j	200088dd <TEST_NfcRedOnlyRead..HCB_1482204275+0x415>

20008927 <TEST_NfcRedOnlyRead..HCB_1482204275+0x45f>:
	...

20008929 <TEST_NfcRedOnlyRead..HCB_1482204275+0x461>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1901
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
        }
        /*    check nfc status by LUN as the basic unit    */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
20008929:	d40c02        	l8ui	a0, a12, 212
2000892c:	004102        	s8i	a0, a1, 0
2000892f:	023057        	bltu	a0, a5, 20008935 <TEST_NfcRedOnlyRead..HCB_1482204275+0x46d>
20008932:	ff99c6        	j	2000879d <TEST_NfcRedOnlyRead..HCB_1482204275+0x2d5>
20008935:	d70c22        	l8ui	a2, a12, 215
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1903
        {
            for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20008938:	d60cd2        	l8ui	a13, a12, 214
2000893b:	0141d2        	s8i	a13, a1, 1
2000893e:	3bbd27        	bgeu	a13, a2, 2000897d <TEST_NfcRedOnlyRead..HCB_1482204275+0x4b5>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1905
            {
                if(NFC_STATUS_SUCCESS != HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun))
20008941:	203dd0        	or	a3, a13, a13
20008944:	000122        	l8ui	a2, a1, 0
20008947:	fe5c45        	call0	20006f0c <HAL_NfcWaitStatus>
2000894a:	171226        	beqi	a2, 1, 20008965 <TEST_NfcRedOnlyRead..HCB_1482204275+0x49d>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1907
                {
                    DBG_Printf("PU%d LUN %d BLK%d Erase Fail!\n", tFlashAddr.ucPU, tFlashAddr.ucLun, tFlashAddr.usBlock);
2000894d:	e03b21        	l32r	a2, 20000a3c <_stext+0x33c>
20008950:	000132        	l8ui	a3, a1, 0
20008953:	010142        	l8ui	a4, a1, 1
20008956:	021152        	l16ui	a5, a1, 4
20008959:	023085        	call0	2000ac64 <dbg_printf>
2000895c:	202110        	or	a2, a1, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1908
                    HAL_NfcResetLun(&tFlashAddr);//error handle, otherwise program other blk also will be fail
2000895f:	e03d01        	l32r	a0, 20000a54 <_stext+0x354>
20008962:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1903
            tFlashAddr.ucPU++;
        }
        /*    check nfc status by LUN as the basic unit    */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
        {
            for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20008965:	0101d2        	l8ui	a13, a1, 1
20008968:	d70c22        	l8ui	a2, a12, 215
2000896b:	01cdd2        	addi	a13, a13, 1
2000896e:	74d0d0        	extui	a13, a13, 0, 8
20008971:	0141d2        	s8i	a13, a1, 1
20008974:	c93d27        	bltu	a13, a2, 20008941 <TEST_NfcRedOnlyRead..HCB_1482204275+0x479>
20008977:	000102        	l8ui	a0, a1, 0
2000897a:	d50c52        	l8ui	a5, a12, 213
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1901
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
        }
        /*    check nfc status by LUN as the basic unit    */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
2000897d:	001b      	addi.n	a0, a0, 1
2000897f:	740000        	extui	a0, a0, 0, 8
20008982:	004102        	s8i	a0, a1, 0
20008985:	af3057        	bltu	a0, a5, 20008938 <TEST_NfcRedOnlyRead..HCB_1482204275+0x470>
20008988:	ff8446        	j	2000879d <TEST_NfcRedOnlyRead..HCB_1482204275+0x2d5>

2000898b <TEST_NfcRedOnlyRead..HCB_1482204275+0x4c3>:
	...

2000898c <TEST_NfcRedOnlyRead..HCB_1482204275+0x4c4>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1236
        pWrReq->bsInjErrEn = TRUE;
        pWrReq->pErrInj    = &g_tErrInj;
    }
    else
    {
        pWrReq->pErrInj = NULL;
2000898c:	020c      	movi.n	a2, 0
2000898e:	b129      	s32i.n	a2, a1, 44
20008990:	ff1006        	j	200085d4 <TEST_NfcRedOnlyRead..HCB_1482204275+0x10c>

20008993 <TEST_NfcRedOnlyRead..HCB_1482204275+0x4cb>:
	...

20008994 <TEST_NfcChangeColumnRead..FCB_1482204275>:
TEST_NfcChangeColumnRead():
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2326
Reference     :
History       :
    20151112    abby    create
****************************************************************************/
LOCAL void TEST_NfcChangeColumnRead(void)
{
20008994:	a0c112        	addi	a1, a1, -96
20008997:	030c      	movi.n	a3, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1870
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   
20008999:	034d      	mov.n	a4, a3
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2326
Reference     :
History       :
    20151112    abby    create
****************************************************************************/
LOCAL void TEST_NfcChangeColumnRead(void)
{
2000899b:	f1d9      	s32i.n	a13, a1, 60
2000899d:	1061e2        	s32i	a14, a1, 64
200089a0:	1161f2        	s32i	a15, a1, 68
200089a3:	d109      	s32i.n	a0, a1, 52
200089a5:	e1c9      	s32i.n	a12, a1, 56
200089a7:	df6701        	l32r	a0, 20000744 <_stext+0x44>
200089aa:	e019c1        	l32r	a12, 20000a10 <_stext+0x310>
200089ad:	df5df1        	l32r	a15, 20000724 <_stext+0x24>
200089b0:	df5be1        	l32r	a14, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2333
    U16 usSecLen, usSecMax;
    
    ucSecStep = 30; 
    usSecMax  = SEC_PER_PIPE_PG;
    
    g_bSinglePln = FALSE;
200089b3:	0020c0        	memw
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1870
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   
200089b6:	150c      	movi.n	a5, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2333
    U16 usSecLen, usSecMax;
    
    ucSecStep = 30; 
    usSecMax  = SEC_PER_PIPE_PG;
    
    g_bSinglePln = FALSE;
200089b8:	5d6e32        	s32i	a3, a14, 0x174
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
200089bb:	df1ed2        	l16ui	a13, a14, 0x1be
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1868
History       :
    20151112    abby    create
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
200089be:	e01571        	l32r	a7, 20000a14 <_stext+0x314>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1872
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
200089c1:	de1e22        	l16ui	a2, a14, 0x1bc
200089c4:	136122        	s32i	a2, a1, 76
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1868
History       :
    20151112    abby    create
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
200089c7:	1768      	l32i.n	a6, a7, 4
200089c9:	1169      	s32i.n	a6, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1870
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   
200089cb:	572ee2        	l32i	a14, a14, 0x15c
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1868
History       :
    20151112    abby    create
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
200089ce:	0778      	l32i.n	a7, a7, 0
200089d0:	0179      	s32i.n	a7, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1870
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   
200089d2:	8345e0        	moveqz	a4, a5, a14
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1872

    tFlashAddr.usBlock = g_usTestBlkStart;
200089d5:	025122        	s16i	a2, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1870
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   
200089d8:	0158      	l32i.n	a5, a1, 0
200089da:	0144c0        	slli	a4, a4, 20
200089dd:	126142        	s32i	a4, a1, 72
200089e0:	105500        	and	a5, a5, a0
200089e3:	204450        	or	a4, a4, a5
200089e6:	0149      	s32i.n	a4, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
200089e8:	1db2d7        	bgeu	a2, a13, 20008a09 <TEST_NfcChangeColumnRead..FCB_1482204275+0x75>
200089eb:	00a9c6        	j	20008c96 <TEST_NfcChangeColumnRead..FCB_1482204275+0x302>

200089ee <TEST_NfcChangeColumnRead..FCB_1482204275+0x5a>:
200089ee:	000000                                        ...

200089f1 <TEST_NfcChangeColumnRead..FCB_1482204275+0x5d>:
200089f1:	df4a81        	l32r	a8, 2000071c <_stext+0x1c>
200089f4:	01a072        	movi	a7, 1
200089f7:	00a062        	movi	a6, 0
200089fa:	8367e0        	moveqz	a6, a7, a14
200089fd:	de1882        	l16ui	a8, a8, 0x1bc
20008a00:	136182        	s32i	a8, a1, 76
20008a03:	0166c0        	slli	a6, a6, 20
20008a06:	126162        	s32i	a6, a1, 72
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1936
    20150229    abby    merge TLC write test code into MLC
****************************************************************************/
void TEST_NfcWriteAll(WRITE_REQ_TYPE WriteType)
{
    FLASH_ADDR tFlashAddr = {0};
    NFC_PRG_REQ_DES tWrReq = {0};
20008a09:	18c122        	addi	a2, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1935
    20151112    abby    create
    20150229    abby    merge TLC write test code into MLC
****************************************************************************/
void TEST_NfcWriteAll(WRITE_REQ_TYPE WriteType)
{
    FLASH_ADDR tFlashAddr = {0};
20008a0c:	e00331        	l32r	a3, 20000a18 <_stext+0x318>
20008a0f:	10c152        	addi	a5, a1, 16
20008a12:	1348      	l32i.n	a4, a3, 4
20008a14:	0368      	l32i.n	a6, a3, 0
20008a16:	0569      	s32i.n	a6, a5, 0
20008a18:	1549      	s32i.n	a4, a5, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1936
    NFC_PRG_REQ_DES tWrReq = {0};
20008a1a:	338b      	addi.n	a3, a3, 8
20008a1c:	841c      	movi.n	a4, 24
20008a1e:	028105        	call0	2000b230 <memcpy>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
20008a21:	df4861        	l32r	a6, 20000744 <_stext+0x44>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1220
LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
20008a24:	362c42        	l32i	a4, a12, 216
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1219

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
20008a27:	3a2c72        	l32i	a7, a12, 232
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1218
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
20008a2a:	262c82        	l32i	a8, a12, 152
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
20008a2d:	df5b01        	l32r	a0, 2000079c <_stext+0x9c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
20008a30:	372ca2        	l32i	a10, a12, 220
20008a33:	190c      	movi.n	a9, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1227
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;
20008a35:	242c32        	l32i	a3, a12, 144
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
20008a38:	df39b1        	l32r	a11, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1227
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;
20008a3b:	a128      	l32i.n	a2, a1, 40
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
20008a3d:	0bb8      	l32i.n	a11, a11, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1227
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;
20008a3f:	033324        	insbits	a2, a3, 3, 3
20008a42:	a129      	s32i.n	a2, a1, 40
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
20008a44:	030c      	movi.n	a3, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
20008a46:	0bb8      	l32i.n	a11, a11, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
20008a48:	8339a0        	moveqz	a3, a9, a10
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1224
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
20008a4b:	272c92        	l32i	a9, a12, 156
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
20008a4e:	0153c0        	slli	a5, a3, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
20008a51:	bb0a      	add.n	a11, a11, a0
20008a53:	f5b0b0        	extui	a11, a11, 16, 16
20008a56:	11bbf0        	slli	a11, a11, 1
20008a59:	0c51b2        	s16i	a11, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1218
    pWrReq->bsRedOntf       = g_bRedOntf;
20008a5c:	6128      	l32i.n	a2, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1223
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
20008a5e:	0133a0        	slli	a3, a3, 22
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1218
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
20008a61:	900824        	insbits	a2, a8, 16, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1226
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
20008a64:	312c82        	l32i	a8, a12, 196
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1219

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
20008a67:	922724        	insbits	a2, a7, 18, 18
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1220
    pWrReq->bsSsu0En        = g_bSsuEn;
20008a6a:	933424        	insbits	a2, a4, 19, 19
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
20008a6d:	102260        	and	a2, a2, a6
20008a70:	202250        	or	a2, a2, a5
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1222
    pWrReq->bsSsu1En        = g_bSsuEn;
20008a73:	b15424        	insbits	a2, a4, 21, 21
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1223
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
20008a76:	dfe941        	l32r	a4, 20000a1c <_stext+0x31c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1226
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
20008a79:	9189      	s32i.n	a8, a1, 36
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1223
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
20008a7b:	102240        	and	a2, a2, a4
20008a7e:	202230        	or	a2, a2, a3
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1224
    pWrReq->bsLbaChkEn      = g_bLbaChk;
20008a81:	911924        	insbits	a2, a9, 17, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1225
    pWrReq->bsTlcMode       = g_bTlcMode;
20008a84:	d3be24        	insbits	a2, a14, 27, 27
20008a87:	6129      	s32i.n	a2, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1229
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;

    if (FALSE != g_ErrInjEn)
20008a89:	0020c0        	memw
20008a8c:	112c72        	l32i	a7, a12, 68
20008a8f:	3dc716        	beqz	a7, 20008e6f <TEST_NfcChangeColumnRead..FCB_1482204275+0x4db>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1232
    {
        pWrReq->bsInjErrEn = TRUE;
        pWrReq->pErrInj    = &g_tErrInj;
20008a92:	dfde01        	l32r	a0, 20000a0c <_stext+0x30c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1231
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;

    if (FALSE != g_ErrInjEn)
    {
        pWrReq->bsInjErrEn = TRUE;
20008a95:	dface1        	l32r	a14, 20000948 <_stext+0x248>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1232
        pWrReq->pErrInj    = &g_tErrInj;
20008a98:	b109      	s32i.n	a0, a1, 44
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1231
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;

    if (FALSE != g_ErrInjEn)
    {
        pWrReq->bsInjErrEn = TRUE;
20008a9a:	20e2e0        	or	a14, a2, a14
20008a9d:	0661e2        	s32i	a14, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1240
    {
        pWrReq->pErrInj = NULL;
    }

    /*  scramble disable    */
    if (g_bRawDataRead)
20008aa0:	392c22        	l32i	a2, a12, 228
20008aa3:	529c      	beqz.n	a2, 20008abc <TEST_NfcChangeColumnRead..FCB_1482204275+0x128>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1243
    {
        volatile PG_CONF_REG *pNfcPgCfg = (volatile PG_CONF_REG *) &rNfcPgCfg;
        pNfcPgCfg->bsScrBps = TRUE;
20008aa5:	850c      	movi.n	a5, 8
20008aa7:	767c      	movi.n	a6, -9
20008aa9:	df3141        	l32r	a4, 20000770 <_stext+0x70>
20008aac:	0020c0        	memw
20008aaf:	0438      	l32i.n	a3, a4, 0
20008ab1:	103360        	and	a3, a3, a6
20008ab4:	203350        	or	a3, a3, a5
20008ab7:	0020c0        	memw
20008aba:	0439      	s32i.n	a3, a4, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1941
    NFC_PRG_REQ_DES tWrReq = {0};
    U16 usPrgIndex;

    TEST_NfcWtCfgReqComm(&tWrReq);

    tFlashAddr.bsSLCMode = !g_bTlcMode;
20008abc:	122182        	l32i	a8, a1, 72
20008abf:	df21a1        	l32r	a10, 20000744 <_stext+0x44>
20008ac2:	4198      	l32i.n	a9, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1943

    tFlashAddr.usBlock = g_usTestBlkStart;
20008ac4:	132172        	l32i	a7, a1, 76
20008ac7:	0a5172        	s16i	a7, a1, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1941
    NFC_PRG_REQ_DES tWrReq = {0};
    U16 usPrgIndex;

    TEST_NfcWtCfgReqComm(&tWrReq);

    tFlashAddr.bsSLCMode = !g_bTlcMode;
20008aca:	1099a0        	and	a9, a9, a10
20008acd:	208890        	or	a8, a8, a9
20008ad0:	4189      	s32i.n	a8, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1944

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
20008ad2:	0237d7        	bltu	a7, a13, 20008ad8 <TEST_NfcChangeColumnRead..FCB_1482204275+0x144>
20008ad5:	005d46        	j	20008c4e <TEST_NfcChangeColumnRead..FCB_1482204275+0x2ba>
20008ad8:	d50c52        	l8ui	a5, a12, 213
20008adb:	dfd1d1        	l32r	a13, 20000a20 <_stext+0x320>
20008ade:	8e7c      	movi.n	a14, -8
20008ae0:	000506        	j	20008af8 <TEST_NfcChangeColumnRead..FCB_1482204275+0x164>

20008ae3 <TEST_NfcChangeColumnRead..FCB_1482204275+0x14f>:
	...

20008ae4 <TEST_NfcChangeColumnRead..FCB_1482204275+0x150>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2030
                {
                    //DBG_Printf("Pu %d Block %d Page %d Write OK!\n",tFlashAddr.ucPU,tFlashAddr.usBlock,tFlashAddr.usPage);
                }
            }
        }
        tFlashAddr.usBlock++;
20008ae4:	0a11b2        	l16ui	a11, a1, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1944
    TEST_NfcWtCfgReqComm(&tWrReq);

    tFlashAddr.bsSLCMode = !g_bTlcMode;

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
20008ae7:	771c02        	l16ui	a0, a12, 238
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2030
                {
                    //DBG_Printf("Pu %d Block %d Page %d Write OK!\n",tFlashAddr.ucPU,tFlashAddr.usBlock,tFlashAddr.usPage);
                }
            }
        }
        tFlashAddr.usBlock++;
20008aea:	bb1b      	addi.n	a11, a11, 1
20008aec:	f4b0b0        	extui	a11, a11, 0, 16
20008aef:	0a51b2        	s16i	a11, a1, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1944
    TEST_NfcWtCfgReqComm(&tWrReq);

    tFlashAddr.bsSLCMode = !g_bTlcMode;

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
20008af2:	023b07        	bltu	a11, a0, 20008af8 <TEST_NfcChangeColumnRead..FCB_1482204275+0x164>
20008af5:	005546        	j	20008c4e <TEST_NfcChangeColumnRead..FCB_1482204275+0x2ba>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1946
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
20008af8:	d40c02        	l8ui	a0, a12, 212
20008afb:	104102        	s8i	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1947
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
20008afe:	023057        	bltu	a0, a5, 20008b04 <TEST_NfcChangeColumnRead..FCB_1482204275+0x170>
20008b01:	003dc6        	j	20008bfc <TEST_NfcChangeColumnRead..FCB_1482204275+0x268>
20008b04:	d70c22        	l8ui	a2, a12, 215
20008b07:	000546        	j	20008b20 <TEST_NfcChangeColumnRead..FCB_1482204275+0x18c>

20008b0a <TEST_NfcChangeColumnRead..FCB_1482204275+0x176>:
	...

20008b0c <TEST_NfcChangeColumnRead..FCB_1482204275+0x178>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1950
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20008b0c:	d50c52        	l8ui	a5, a12, 213
20008b0f:	100102        	l8ui	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2007
                    }
                    usPrgIndex++;
                }
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
20008b12:	001b      	addi.n	a0, a0, 1
20008b14:	740000        	extui	a0, a0, 0, 8
20008b17:	104102        	s8i	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1947

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
20008b1a:	023057        	bltu	a0, a5, 20008b20 <TEST_NfcChangeColumnRead..FCB_1482204275+0x18c>
20008b1d:	003606        	j	20008bf9 <TEST_NfcChangeColumnRead..FCB_1482204275+0x265>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1949
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
20008b20:	d60c32        	l8ui	a3, a12, 214
20008b23:	114132        	s8i	a3, a1, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1950
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20008b26:	e8b327        	bgeu	a3, a2, 20008b12 <TEST_NfcChangeColumnRead..FCB_1482204275+0x17e>
20008b29:	791c02        	l16ui	a0, a12, 242
20008b2c:	000446        	j	20008b41 <TEST_NfcChangeColumnRead..FCB_1482204275+0x1ad>

20008b2f <TEST_NfcChangeColumnRead..FCB_1482204275+0x19b>:
	...

20008b30 <TEST_NfcChangeColumnRead..FCB_1482204275+0x19c>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2005
                    {
                        DBG_Getch();
                    }
                    usPrgIndex++;
                }
                tFlashAddr.ucLun++;
20008b30:	110142        	l8ui	a4, a1, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1950
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20008b33:	d70c22        	l8ui	a2, a12, 215
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2005
                    {
                        DBG_Getch();
                    }
                    usPrgIndex++;
                }
                tFlashAddr.ucLun++;
20008b36:	441b      	addi.n	a4, a4, 1
20008b38:	744040        	extui	a4, a4, 0, 8
20008b3b:	114142        	s8i	a4, a1, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1950
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20008b3e:	cab427        	bgeu	a4, a2, 20008b0c <TEST_NfcChangeColumnRead..FCB_1482204275+0x178>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1952
            {
                usPrgIndex = g_usTestPageStart;
20008b41:	781c52        	l16ui	a5, a12, 240
20008b44:	185152        	s16i	a5, a1, 48
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1953
                while (usPrgIndex < g_usTestPageEnd * PRG_CYC_CNT)
20008b47:	e5b507        	bgeu	a5, a0, 20008b30 <TEST_NfcChangeColumnRead..FCB_1482204275+0x19c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1955
                {
                    tFlashAddr.usPage = TEST_NfcWtGetPageAddr(&usPrgIndex);
20008b4a:	30c122        	addi	a2, a1, 48
20008b4d:	fda545        	call0	200065a4 <TEST_NfcWtGetPageAddr..GBB_1482204275>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1958
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
20008b50:	791c02        	l16ui	a0, a12, 242
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1955
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
            {
                usPrgIndex = g_usTestPageStart;
                while (usPrgIndex < g_usTestPageEnd * PRG_CYC_CNT)
                {
                    tFlashAddr.usPage = TEST_NfcWtGetPageAddr(&usPrgIndex);
20008b53:	0b5122        	s16i	a2, a1, 22
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1958
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
20008b56:	d6b207        	bgeu	a2, a0, 20008b30 <TEST_NfcChangeColumnRead..FCB_1482204275+0x19c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
20008b59:	362c62        	l32i	a6, a12, 216
20008b5c:	ac48      	l32i.n	a4, a12, 40
20008b5e:	110132        	l8ui	a3, a1, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1960
                    tFlashAddr.usPage = TEST_NfcWtGetPageAddr(&usPrgIndex);
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
                    }
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
20008b61:	6178      	l32i.n	a7, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1961
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
20008b63:	a158      	l32i.n	a5, a1, 40
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
20008b65:	100102        	l8ui	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1961
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
                    }
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
20008b68:	1055e0        	and	a5, a5, a14
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
20008b6b:	20fa      	add.n	a2, a0, a15
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1960
                    tFlashAddr.usPage = TEST_NfcWtGetPageAddr(&usPrgIndex);
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
                    }
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
20008b6d:	1077d0        	and	a7, a7, a13
20008b70:	066172        	s32i	a7, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
20008b73:	800222        	l8ui	a2, a2, 128
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1961
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
                    }
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
20008b76:	0a6152        	s32i	a5, a1, 40
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
20008b79:	a02230        	addx4	a2, a2, a3
20008b7c:	a02240        	addx4	a2, a2, a4
20008b7f:	06f616        	beqz	a6, 20008bf2 <TEST_NfcChangeColumnRead..FCB_1482204275+0x25e>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:536
    20151029    abby     modify to meet VT3533 
------------------------------------------------------------------------------*/
U8 HAL_NfcGetRP(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20008b82:	0020c0        	memw
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:528
    {
        return 0;
    }
    
    //MixVector only support 512 offset for SSUx in one MCU
    return GET_CMD_LEVEL(pFlashAddr->ucPU,pFlashAddr->ucLun,pFlashAddr->bsPln
20008b85:	1160e0        	slli	a6, a0, 2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:536
20008b88:	000202        	l8ui	a0, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:528
20008b8b:	206360        	or	a6, a3, a6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:536
20008b8e:	140400        	extui	a0, a0, 4, 2
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:528
20008b91:	e32604        	insbits	a0, a6, 2, 31
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1965
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
                
                    TEST_NfcWtDummyDataPrepare(&tFlashAddr, &tWrReq);
                    
                    tWrReq.bsSsu0Addr   = TEST_GetOffset(&tFlashAddr);
20008b94:	0e5102        	s16i	a0, a1, 28
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1966
                    tWrReq.bsSsu1Addr   = tWrReq.bsSsu0Addr + 0x400;
20008b97:	f48000        	extui	a8, a0, 0, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1967
                    tWrReq.bsCsAddrOff  = tWrReq.bsSsu0Addr;
20008b9a:	086182        	s32i	a8, a1, 32
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1966
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
                
                    TEST_NfcWtDummyDataPrepare(&tFlashAddr, &tWrReq);
                    
                    tWrReq.bsSsu0Addr   = TEST_GetOffset(&tFlashAddr);
                    tWrReq.bsSsu1Addr   = tWrReq.bsSsu0Addr + 0x400;
20008b9d:	04d882        	addmi	a8, a8, 0x400
20008ba0:	0f5182        	s16i	a8, a1, 30
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetFull(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20008ba3:	0020c0        	memw
20008ba6:	000272        	l8ui	a7, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1968
                    tWrReq.bsCsAddrOff  = tWrReq.bsSsu0Addr;
                    while(TRUE == HAL_NfcGetFull(tFlashAddr.ucPU, tFlashAddr.ucLun))
20008ba9:	106737        	bbci	a7, 3, 20008bbd <TEST_NfcChangeColumnRead..FCB_1482204275+0x229>
20008bac:	f03d      	nop.n
20008bae:	088076        	loop	a0, 20008bba <TEST_NfcChangeColumnRead..FCB_1482204275+0x226>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
20008bb1:	0020c0        	memw
20008bb4:	000292        	l8ui	a9, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1968
20008bb7:	026937        	bbci	a9, 3, 20008bbd <TEST_NfcChangeColumnRead..FCB_1482204275+0x229>

20008bba <TEST_NfcChangeColumnRead..FCB_1482204275+0x226>:
20008bba:	fffb86        	j	20008bac <TEST_NfcChangeColumnRead..FCB_1482204275+0x218>

20008bbd <TEST_NfcChangeColumnRead..FCB_1482204275+0x229>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1981
                            HAL_NfcSinglePlaneWrite(&tFlashAddr, &tWrReq);
                        }break;

                        case FULL_PAGE_WRITE :
                        {                        
                             HAL_NfcFullPageWrite(&tFlashAddr, &tWrReq);
20008bbd:	10c122        	addi	a2, a1, 16
20008bc0:	18c132        	addi	a3, a1, 24
20008bc3:	df9f01        	l32r	a0, 20000a40 <_stext+0x340>
20008bc6:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1999
                        }break;

                    }//end switch
                    
                    /* check status of NFC CMD REG and DEC SRAM */
                    if (SUCCESS != TEST_NfcWtStsChk(&tFlashAddr, &tWrReq))
20008bc9:	10c122        	addi	a2, a1, 16
20008bcc:	18c132        	addi	a3, a1, 24
20008bcf:	fd88c5        	call0	2000645c <TEST_NfcWtStsChk..JBB_1482204275>
20008bd2:	051226        	beqi	a2, 1, 20008bdb <TEST_NfcChangeColumnRead..FCB_1482204275+0x247>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2001
                    {
                        DBG_Getch();
20008bd5:	ded001        	l32r	a0, 20000718 <_stext+0x18>
20008bd8:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2003
                    }
                    usPrgIndex++;
20008bdb:	1811a2        	l16ui	a10, a1, 48
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1953
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
            {
                usPrgIndex = g_usTestPageStart;
                while (usPrgIndex < g_usTestPageEnd * PRG_CYC_CNT)
20008bde:	791c02        	l16ui	a0, a12, 242
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2003
                    /* check status of NFC CMD REG and DEC SRAM */
                    if (SUCCESS != TEST_NfcWtStsChk(&tFlashAddr, &tWrReq))
                    {
                        DBG_Getch();
                    }
                    usPrgIndex++;
20008be1:	aa1b      	addi.n	a10, a10, 1
20008be3:	f4a0a0        	extui	a10, a10, 0, 16
20008be6:	1851a2        	s16i	a10, a1, 48
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1953
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
            {
                usPrgIndex = g_usTestPageStart;
                while (usPrgIndex < g_usTestPageEnd * PRG_CYC_CNT)
20008be9:	02ba07        	bgeu	a10, a0, 20008bef <TEST_NfcChangeColumnRead..FCB_1482204275+0x25b>
20008bec:	ffd686        	j	20008b4a <TEST_NfcChangeColumnRead..FCB_1482204275+0x1b6>
20008bef:	ffcf46        	j	20008b30 <TEST_NfcChangeColumnRead..FCB_1482204275+0x19c>

20008bf2 <TEST_NfcChangeColumnRead..FCB_1482204275+0x25e>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
20008bf2:	000c      	movi.n	a0, 0
20008bf4:	ffe706        	j	20008b94 <TEST_NfcChangeColumnRead..FCB_1482204275+0x200>

20008bf7 <TEST_NfcChangeColumnRead..FCB_1482204275+0x263>:
	...

20008bf9 <TEST_NfcChangeColumnRead..FCB_1482204275+0x265>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1947

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
20008bf9:	d40c02        	l8ui	a0, a12, 212
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2010
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
        }
        /*  check nfc status by LUN as the basic unit  */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
20008bfc:	104102        	s8i	a0, a1, 16
20008bff:	023057        	bltu	a0, a5, 20008c05 <TEST_NfcChangeColumnRead..FCB_1482204275+0x271>
20008c02:	ffb786        	j	20008ae4 <TEST_NfcChangeColumnRead..FCB_1482204275+0x150>
20008c05:	d70c22        	l8ui	a2, a12, 215
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2012
        {
            for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20008c08:	d60c32        	l8ui	a3, a12, 214
20008c0b:	114132        	s8i	a3, a1, 17
20008c0e:	2eb327        	bgeu	a3, a2, 20008c40 <TEST_NfcChangeColumnRead..FCB_1482204275+0x2ac>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2014
            {
                if(NFC_STATUS_SUCCESS != HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun))
20008c11:	100122        	l8ui	a2, a1, 16
20008c14:	fe2f45        	call0	20006f0c <HAL_NfcWaitStatus>
20008c17:	0e1226        	beqi	a2, 1, 20008c29 <TEST_NfcChangeColumnRead..FCB_1482204275+0x295>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2016
                {
                    DBG_Printf("Pu %d Block %d Page %d Write Fail!\n",tFlashAddr.ucPU,tFlashAddr.usBlock,tFlashAddr.usPage);
20008c1a:	df8221        	l32r	a2, 20000a24 <_stext+0x324>
20008c1d:	100132        	l8ui	a3, a1, 16
20008c20:	0a1142        	l16ui	a4, a1, 20
20008c23:	0b1152        	l16ui	a5, a1, 22
20008c26:	0203c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2012
            tFlashAddr.ucPU++;
        }
        /*  check nfc status by LUN as the basic unit  */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
        {
            for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20008c29:	110132        	l8ui	a3, a1, 17
20008c2c:	d70c22        	l8ui	a2, a12, 215
20008c2f:	331b      	addi.n	a3, a3, 1
20008c31:	743030        	extui	a3, a3, 0, 8
20008c34:	114132        	s8i	a3, a1, 17
20008c37:	d63327        	bltu	a3, a2, 20008c11 <TEST_NfcChangeColumnRead..FCB_1482204275+0x27d>
20008c3a:	d50c52        	l8ui	a5, a12, 213
20008c3d:	100102        	l8ui	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2010
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
        }
        /*  check nfc status by LUN as the basic unit  */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
20008c40:	001b      	addi.n	a0, a0, 1
20008c42:	740000        	extui	a0, a0, 0, 8
20008c45:	104102        	s8i	a0, a1, 16
20008c48:	bc3057        	bltu	a0, a5, 20008c08 <TEST_NfcChangeColumnRead..FCB_1482204275+0x274>
20008c4b:	ffa546        	j	20008ae4 <TEST_NfcChangeColumnRead..FCB_1482204275+0x150>

20008c4e <TEST_NfcChangeColumnRead..FCB_1482204275+0x2ba>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2342

    /*     write whole page    */
    TEST_NfcWriteAll(FULL_PAGE_WRITE);

    /*     change column read read range depends on sector address    */
    for (ucSecStart = 0; ucSecStart < usSecMax; )
20008c4e:	0c0c      	movi.n	a12, 0
20008c50:	80a0d2        	movi	a13, 128
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2347
    {
        /* change column read    */
        usSecLen = usSecMax - ucSecStart;
        //DBG_Printf("Change Column Read Start Sec%d, Sec Length%d\n", ucSecStart, usSecLen);
        TEST_NfcReadAll(ucSecStart, usSecLen, CHANGE_COL_READ);
20008c53:	0c2d      	mov.n	a2, a12
20008c55:	440c      	movi.n	a4, 4
20008c57:	c03dc0        	sub	a3, a13, a12
20008c5a:	f43030        	extui	a3, a3, 0, 16
20008c5d:	fe3005        	call0	20006f60 <TEST_NfcReadAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2348
        ucSecStart = ucSecStart + ucSecStep;
20008c60:	1eccc2        	addi	a12, a12, 30
20008c63:	74c0c0        	extui	a12, a12, 0, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2342

    /*     write whole page    */
    TEST_NfcWriteAll(FULL_PAGE_WRITE);

    /*     change column read read range depends on sector address    */
    for (ucSecStart = 0; ucSecStart < usSecMax; )
20008c66:	e9ecb6        	bltui	a12, 128, 20008c53 <TEST_NfcChangeColumnRead..FCB_1482204275+0x2bf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2350
        usSecLen = usSecMax - ucSecStart;
        //DBG_Printf("Change Column Read Start Sec%d, Sec Length%d\n", ucSecStart, usSecLen);
        TEST_NfcReadAll(ucSecStart, usSecLen, CHANGE_COL_READ);
        ucSecStart = ucSecStart + ucSecStep;
    }
    return;
20008c69:	e1c8      	l32i.n	a12, a1, 56
20008c6b:	f1d8      	l32i.n	a13, a1, 60
20008c6d:	1021e2        	l32i	a14, a1, 64
20008c70:	1121f2        	l32i	a15, a1, 68
20008c73:	d108      	l32i.n	a0, a1, 52
20008c75:	60c112        	addi	a1, a1, 96
20008c78:	f00d      	ret.n

20008c7a <TEST_NfcChangeColumnRead..FCB_1482204275+0x2e6>:
	...

20008c7c <TEST_NfcChangeColumnRead..FCB_1482204275+0x2e8>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
20008c7c:	dea8d1        	l32r	a13, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1916
                {
                    //DBG_Printf("PU%d LUN %d BLK%d Erase OK!\n", tFlashAddr.ucPU, tFlashAddr.ucLun, tFlashAddr.usBlock);
                }
            }
        }
        tFlashAddr.usBlock++;
20008c7f:	021102        	l16ui	a0, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
20008c82:	572de2        	l32i	a14, a13, 0x15c
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1916
                {
                    //DBG_Printf("PU%d LUN %d BLK%d Erase OK!\n", tFlashAddr.ucPU, tFlashAddr.ucLun, tFlashAddr.usBlock);
                }
            }
        }
        tFlashAddr.usBlock++;
20008c85:	001b      	addi.n	a0, a0, 1
20008c87:	f40000        	extui	a0, a0, 0, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
20008c8a:	df1dd2        	l16ui	a13, a13, 0x1be
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1916
                {
                    //DBG_Printf("PU%d LUN %d BLK%d Erase OK!\n", tFlashAddr.ucPU, tFlashAddr.ucLun, tFlashAddr.usBlock);
                }
            }
        }
        tFlashAddr.usBlock++;
20008c8d:	025102        	s16i	a0, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
20008c90:	0230d7        	bltu	a0, a13, 20008c96 <TEST_NfcChangeColumnRead..FCB_1482204275+0x302>
20008c93:	ff5686        	j	200089f1 <TEST_NfcChangeColumnRead..FCB_1482204275+0x5d>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:238
}

//for im 3d tlc slc/tlc mode switch
BOOL TEST_NfcSwitchFlashMode(U8 ucPU)
{
    FLASH_ADDR tFlashAddr = {0};
20008c96:	218b      	addi.n	a2, a1, 8
20008c98:	df6431        	l32r	a3, 20000a28 <_stext+0x328>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:247
    tFlashAddr.ucPU = ucPU;
    
    /* step1: set feature, User Selectable Trim Profile, 85h/03h data, 00-2-pass MLC;01-1-pass MLC;03-TLC */
    ucAddr = 0x91;
#ifdef SWITCH_MODE_DADF
    ulData = g_bTlcMode ? 0x104 : 0x100;
20008c9b:	04a102        	movi	a0, 0x104
20008c9e:	00a1d2        	movi	a13, 0x100
20008ca1:	93d0e0        	movnez	a13, a0, a14
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:238
}

//for im 3d tlc slc/tlc mode switch
BOOL TEST_NfcSwitchFlashMode(U8 ucPU)
{
    FLASH_ADDR tFlashAddr = {0};
20008ca4:	1348      	l32i.n	a4, a3, 4
20008ca6:	1249      	s32i.n	a4, a2, 4
20008ca8:	0338      	l32i.n	a3, a3, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1875
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
20008caa:	d40ce2        	l8ui	a14, a12, 212
20008cad:	0041e2        	s8i	a14, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:238
20008cb0:	0239      	s32i.n	a3, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:251
#ifdef SWITCH_MODE_DADF
    ulData = g_bTlcMode ? 0x104 : 0x100;
#else
    ulData = g_bTlcMode ? 0x004 : 0x000;
#endif
    HAL_NfcSetFeature(&tFlashAddr, ulData, ucAddr);
20008cb2:	91a042        	movi	a4, 145
20008cb5:	0d3d      	mov.n	a3, a13
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:242
{
    FLASH_ADDR tFlashAddr = {0};
    U8 ucAddr;
    U32 ulData;
    
    tFlashAddr.ucPU = ucPU;
20008cb7:	0841e2        	s8i	a14, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:251
#ifdef SWITCH_MODE_DADF
    ulData = g_bTlcMode ? 0x104 : 0x100;
#else
    ulData = g_bTlcMode ? 0x004 : 0x000;
#endif
    HAL_NfcSetFeature(&tFlashAddr, ulData, ucAddr);
20008cba:	df6201        	l32r	a0, 20000a44 <_stext+0x344>
20008cbd:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20008cc0:	090132        	l8ui	a3, a1, 9
20008cc3:	de9641        	l32r	a4, 2000071c <_stext+0x1c>
20008cc6:	2efa      	add.n	a2, a14, a15
20008cc8:	800222        	l8ui	a2, a2, 128
20008ccb:	3e2442        	l32i	a4, a4, 248
20008cce:	a02230        	addx4	a2, a2, a3
20008cd1:	a02240        	addx4	a2, a2, a4
20008cd4:	0020c0        	memw
20008cd7:	000252        	l8ui	a5, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
20008cda:	0ee507        	bbsi	a5, 0, 20008cec <TEST_NfcChangeColumnRead..FCB_1482204275+0x358>
20008cdd:	088076        	loop	a0, 20008ce9 <TEST_NfcChangeColumnRead..FCB_1482204275+0x355>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20008ce0:	0020c0        	memw
20008ce3:	000242        	l8ui	a4, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
20008ce6:	02e407        	bbsi	a4, 0, 20008cec <TEST_NfcChangeColumnRead..FCB_1482204275+0x358>

20008ce9 <TEST_NfcChangeColumnRead..FCB_1482204275+0x355>:
20008ce9:	fffc06        	j	20008cdd <TEST_NfcChangeColumnRead..FCB_1482204275+0x349>

20008cec <TEST_NfcChangeColumnRead..FCB_1482204275+0x358>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1106
    {
        ;
    }

    if (TRUE == HAL_NfcGetErrHold(ucPU, ucLun))
20008cec:	202ee0        	or	a2, a14, a14
20008cef:	fba005        	call0	200046f0 <HAL_NfcGetErrHold>
20008cf2:	0e1266        	bnei	a2, 1, 20008d04 <TEST_NfcChangeColumnRead..FCB_1482204275+0x370>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:254
    if (NFC_STATUS_SUCCESS != HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun))
    {
        DBG_Printf("set feature fail PU:%d Addr0x%x Data0x%x\n", tFlashAddr.ucPU, ucAddr, ulData);
20008cf5:	df4d21        	l32r	a2, 20000a2c <_stext+0x32c>
20008cf8:	080132        	l8ui	a3, a1, 8
20008cfb:	91a042        	movi	a4, 145
20008cfe:	205dd0        	or	a5, a13, a13
20008d01:	01f605        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:256
    }
    DBG_Printf("set feature OK PU:%d Addr0x%x Data0x%x\n", tFlashAddr.ucPU, ucAddr, ulData);
20008d04:	205dd0        	or	a5, a13, a13
20008d07:	df4a21        	l32r	a2, 20000a30 <_stext+0x330>
20008d0a:	080132        	l8ui	a3, a1, 8
20008d0d:	91a042        	movi	a4, 145
20008d10:	01f505        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:259
    
    /* step2: sync reset to make flash reload trim file from ROM block */
    HAL_NfcSyncResetFlash(&tFlashAddr);
20008d13:	08c122        	addi	a2, a1, 8
20008d16:	df4c01        	l32r	a0, 20000a48 <_stext+0x348>
20008d19:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20008d1c:	090132        	l8ui	a3, a1, 9
20008d1f:	0801e2        	l8ui	a14, a1, 8
20008d22:	de7e41        	l32r	a4, 2000071c <_stext+0x1c>
20008d25:	802ef0        	add	a2, a14, a15
20008d28:	800222        	l8ui	a2, a2, 128
20008d2b:	3e2442        	l32i	a4, a4, 248
20008d2e:	a02230        	addx4	a2, a2, a3
20008d31:	a02240        	addx4	a2, a2, a4
20008d34:	0020c0        	memw
20008d37:	000252        	l8ui	a5, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
20008d3a:	0fe507        	bbsi	a5, 0, 20008d4d <TEST_NfcChangeColumnRead..FCB_1482204275+0x3b9>
20008d3d:	088076        	loop	a0, 20008d49 <TEST_NfcChangeColumnRead..FCB_1482204275+0x3b5>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20008d40:	0020c0        	memw
20008d43:	000242        	l8ui	a4, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
20008d46:	03e407        	bbsi	a4, 0, 20008d4d <TEST_NfcChangeColumnRead..FCB_1482204275+0x3b9>

20008d49 <TEST_NfcChangeColumnRead..FCB_1482204275+0x3b5>:
20008d49:	fffc06        	j	20008d3d <TEST_NfcChangeColumnRead..FCB_1482204275+0x3a9>

20008d4c <TEST_NfcChangeColumnRead..FCB_1482204275+0x3b8>:
	...

20008d4d <TEST_NfcChangeColumnRead..FCB_1482204275+0x3b9>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1106
    {
        ;
    }

    if (TRUE == HAL_NfcGetErrHold(ucPU, ucLun))
20008d4d:	0e2d      	mov.n	a2, a14
20008d4f:	fb9a05        	call0	200046f0 <HAL_NfcGetErrHold>
20008d52:	0b1266        	bnei	a2, 1, 20008d61 <TEST_NfcChangeColumnRead..FCB_1482204275+0x3cd>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:262
    if (NFC_STATUS_SUCCESS != HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun))
    {
        DBG_Printf("SYNC Reset PU:%d fail!\n", tFlashAddr.ucPU);
20008d55:	df3721        	l32r	a2, 20000a34 <_stext+0x334>
20008d58:	080132        	l8ui	a3, a1, 8
20008d5b:	201110        	or	a1, a1, a1
20008d5e:	01f045        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:264
    }
    DBG_Printf("SYNC Reset PU:%d OK!\n", tFlashAddr.ucPU);
20008d61:	df3521        	l32r	a2, 20000a38 <_stext+0x338>
20008d64:	080132        	l8ui	a3, a1, 8
20008d67:	01efc5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1879
    #ifdef FLASH_INTEL_3DTLC
        TEST_NfcSwitchFlashMode(tFlashAddr.ucPU);
    #endif
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
20008d6a:	d50c52        	l8ui	a5, a12, 213
20008d6d:	000102        	l8ui	a0, a1, 0
20008d70:	023057        	bltu	a0, a5, 20008d76 <TEST_NfcChangeColumnRead..FCB_1482204275+0x3e2>
20008d73:	002586        	j	20008e0d <TEST_NfcChangeColumnRead..FCB_1482204275+0x479>
20008d76:	d70c22        	l8ui	a2, a12, 215
20008d79:	000406        	j	20008d8d <TEST_NfcChangeColumnRead..FCB_1482204275+0x3f9>

20008d7c <TEST_NfcChangeColumnRead..FCB_1482204275+0x3e8>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1882
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20008d7c:	d50c52        	l8ui	a5, a12, 213
20008d7f:	152102        	l32i	a0, a1, 84
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1898
                {
                    HAL_NfcFullBlockErase(&tFlashAddr, g_bTlcMode);
                }
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
20008d82:	001b      	addi.n	a0, a0, 1
20008d84:	740000        	extui	a0, a0, 0, 8
20008d87:	004102        	s8i	a0, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1879
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
    #ifdef FLASH_INTEL_3DTLC
        TEST_NfcSwitchFlashMode(tFlashAddr.ucPU);
    #endif
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
20008d8a:	7fb057        	bgeu	a0, a5, 20008e0d <TEST_NfcChangeColumnRead..FCB_1482204275+0x479>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1881
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
20008d8d:	d60cd2        	l8ui	a13, a12, 214
20008d90:	0141d2        	s8i	a13, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1882
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20008d93:	ebbd27        	bgeu	a13, a2, 20008d82 <TEST_NfcChangeColumnRead..FCB_1482204275+0x3ee>
20008d96:	156102        	s32i	a0, a1, 84
20008d99:	742000        	extui	a2, a0, 0, 8
20008d9c:	2f2a      	add.n	a2, a15, a2
20008d9e:	146122        	s32i	a2, a1, 80
20008da1:	000a46        	j	20008dce <TEST_NfcChangeColumnRead..FCB_1482204275+0x43a>

20008da4 <TEST_NfcChangeColumnRead..FCB_1482204275+0x410>:
	...

20008da5 <TEST_NfcChangeColumnRead..FCB_1482204275+0x411>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1888
            {
                while(TRUE == HAL_NfcGetFull(tFlashAddr.ucPU, tFlashAddr.ucLun))
                {
                    ;
                }
                if(TRUE == g_bSinglePln)
20008da5:	232ce2        	l32i	a14, a12, 140
20008da8:	0020c0        	memw
20008dab:	292c32        	l32i	a3, a12, 164
20008dae:	0020f0        	nop
20008db1:	491326        	beqi	a3, 1, 20008dfe <TEST_NfcChangeColumnRead..FCB_1482204275+0x46a>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1894
                {
                    HAL_NfcSingleBlockErase(&tFlashAddr, g_bTlcMode);
                }
                else
                {
                    HAL_NfcFullBlockErase(&tFlashAddr, g_bTlcMode);
20008db4:	203ee0        	or	a3, a14, a14
20008db7:	202110        	or	a2, a1, a1
20008dba:	df2401        	l32r	a0, 20000a4c <_stext+0x34c>
20008dbd:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1882
        TEST_NfcSwitchFlashMode(tFlashAddr.ucPU);
    #endif
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20008dc0:	d70c22        	l8ui	a2, a12, 215
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1896
                }
                else
                {
                    HAL_NfcFullBlockErase(&tFlashAddr, g_bTlcMode);
                }
                tFlashAddr.ucLun++;
20008dc3:	dd1b      	addi.n	a13, a13, 1
20008dc5:	74d0d0        	extui	a13, a13, 0, 8
20008dc8:	0141d2        	s8i	a13, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1882
        TEST_NfcSwitchFlashMode(tFlashAddr.ucPU);
    #endif
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20008dcb:	adbd27        	bgeu	a13, a2, 20008d7c <TEST_NfcChangeColumnRead..FCB_1482204275+0x3e8>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetFull(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20008dce:	142122        	l32i	a2, a1, 80
20008dd1:	ac38      	l32i.n	a3, a12, 40
20008dd3:	800222        	l8ui	a2, a2, 128
20008dd6:	7440d0        	extui	a4, a13, 0, 8
20008dd9:	a02240        	addx4	a2, a2, a4
20008ddc:	a02230        	addx4	a2, a2, a3
20008ddf:	0020c0        	memw
20008de2:	0002e2        	l8ui	a14, a2, 0
20008de5:	0020f0        	nop
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1884
            {
                while(TRUE == HAL_NfcGetFull(tFlashAddr.ucPU, tFlashAddr.ucLun))
20008de8:	b96e37        	bbci	a14, 3, 20008da5 <TEST_NfcChangeColumnRead..FCB_1482204275+0x411>
20008deb:	f03d      	nop.n
20008ded:	088076        	loop	a0, 20008df9 <TEST_NfcChangeColumnRead..FCB_1482204275+0x465>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
20008df0:	0020c0        	memw
20008df3:	000232        	l8ui	a3, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1884
20008df6:	ab6337        	bbci	a3, 3, 20008da5 <TEST_NfcChangeColumnRead..FCB_1482204275+0x411>

20008df9 <TEST_NfcChangeColumnRead..FCB_1482204275+0x465>:
20008df9:	fffb86        	j	20008deb <TEST_NfcChangeColumnRead..FCB_1482204275+0x457>

20008dfc <TEST_NfcChangeColumnRead..FCB_1482204275+0x468>:
	...

20008dfe <TEST_NfcChangeColumnRead..FCB_1482204275+0x46a>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1890
                {
                    ;
                }
                if(TRUE == g_bSinglePln)
                {
                    HAL_NfcSingleBlockErase(&tFlashAddr, g_bTlcMode);
20008dfe:	0e3d      	mov.n	a3, a14
20008e00:	012d      	mov.n	a2, a1
20008e02:	df1301        	l32r	a0, 20000a50 <_stext+0x350>
20008e05:	0000c0        	callx0	a0
20008e08:	ffed06        	j	20008dc0 <TEST_NfcChangeColumnRead..FCB_1482204275+0x42c>

20008e0b <TEST_NfcChangeColumnRead..FCB_1482204275+0x477>:
	...

20008e0d <TEST_NfcChangeColumnRead..FCB_1482204275+0x479>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1901
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
        }
        /*    check nfc status by LUN as the basic unit    */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
20008e0d:	d40c02        	l8ui	a0, a12, 212
20008e10:	004102        	s8i	a0, a1, 0
20008e13:	023057        	bltu	a0, a5, 20008e19 <TEST_NfcChangeColumnRead..FCB_1482204275+0x485>
20008e16:	ff9886        	j	20008c7c <TEST_NfcChangeColumnRead..FCB_1482204275+0x2e8>
20008e19:	d70c22        	l8ui	a2, a12, 215
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1903
        {
            for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20008e1c:	d60cd2        	l8ui	a13, a12, 214
20008e1f:	0141d2        	s8i	a13, a1, 1
20008e22:	3bbd27        	bgeu	a13, a2, 20008e61 <TEST_NfcChangeColumnRead..FCB_1482204275+0x4cd>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1905
            {
                if(NFC_STATUS_SUCCESS != HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun))
20008e25:	203dd0        	or	a3, a13, a13
20008e28:	000122        	l8ui	a2, a1, 0
20008e2b:	fe0e05        	call0	20006f0c <HAL_NfcWaitStatus>
20008e2e:	171226        	beqi	a2, 1, 20008e49 <TEST_NfcChangeColumnRead..FCB_1482204275+0x4b5>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1907
                {
                    DBG_Printf("PU%d LUN %d BLK%d Erase Fail!\n", tFlashAddr.ucPU, tFlashAddr.ucLun, tFlashAddr.usBlock);
20008e31:	df0221        	l32r	a2, 20000a3c <_stext+0x33c>
20008e34:	000132        	l8ui	a3, a1, 0
20008e37:	010142        	l8ui	a4, a1, 1
20008e3a:	021152        	l16ui	a5, a1, 4
20008e3d:	01e245        	call0	2000ac64 <dbg_printf>
20008e40:	202110        	or	a2, a1, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1908
                    HAL_NfcResetLun(&tFlashAddr);//error handle, otherwise program other blk also will be fail
20008e43:	df0401        	l32r	a0, 20000a54 <_stext+0x354>
20008e46:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1903
            tFlashAddr.ucPU++;
        }
        /*    check nfc status by LUN as the basic unit    */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
        {
            for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20008e49:	0101d2        	l8ui	a13, a1, 1
20008e4c:	d70c22        	l8ui	a2, a12, 215
20008e4f:	01cdd2        	addi	a13, a13, 1
20008e52:	74d0d0        	extui	a13, a13, 0, 8
20008e55:	0141d2        	s8i	a13, a1, 1
20008e58:	c93d27        	bltu	a13, a2, 20008e25 <TEST_NfcChangeColumnRead..FCB_1482204275+0x491>
20008e5b:	000102        	l8ui	a0, a1, 0
20008e5e:	d50c52        	l8ui	a5, a12, 213
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1901
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
        }
        /*    check nfc status by LUN as the basic unit    */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
20008e61:	001b      	addi.n	a0, a0, 1
20008e63:	740000        	extui	a0, a0, 0, 8
20008e66:	004102        	s8i	a0, a1, 0
20008e69:	af3057        	bltu	a0, a5, 20008e1c <TEST_NfcChangeColumnRead..FCB_1482204275+0x488>
20008e6c:	ff8306        	j	20008c7c <TEST_NfcChangeColumnRead..FCB_1482204275+0x2e8>

20008e6f <TEST_NfcChangeColumnRead..FCB_1482204275+0x4db>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1236
        pWrReq->bsInjErrEn = TRUE;
        pWrReq->pErrInj    = &g_tErrInj;
    }
    else
    {
        pWrReq->pErrInj = NULL;
20008e6f:	020c      	movi.n	a2, 0
20008e71:	b129      	s32i.n	a2, a1, 44
20008e73:	ff0a46        	j	20008aa0 <TEST_NfcChangeColumnRead..FCB_1482204275+0x10c>

20008e76 <TEST_NfcChangeColumnRead..FCB_1482204275+0x4e2>:
	...

20008e78 <TEST_NfcPartialRead..GCB_1482204275>:
TEST_NfcPartialRead():
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2366
Reference     :
History       :
    20151112    abby    create
****************************************************************************/
LOCAL void TEST_NfcPartialRead(void)
{
20008e78:	a0c112        	addi	a1, a1, -96
20008e7b:	030c      	movi.n	a3, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1870
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   
20008e7d:	034d      	mov.n	a4, a3
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2366
Reference     :
History       :
    20151112    abby    create
****************************************************************************/
LOCAL void TEST_NfcPartialRead(void)
{
20008e7f:	f1d9      	s32i.n	a13, a1, 60
20008e81:	1061e2        	s32i	a14, a1, 64
20008e84:	1161f2        	s32i	a15, a1, 68
20008e87:	d109      	s32i.n	a0, a1, 52
20008e89:	e1c9      	s32i.n	a12, a1, 56
20008e8b:	de2e01        	l32r	a0, 20000744 <_stext+0x44>
20008e8e:	dee0c1        	l32r	a12, 20000a10 <_stext+0x310>
20008e91:	de24f1        	l32r	a15, 20000724 <_stext+0x24>
20008e94:	de22e1        	l32r	a14, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2373
    U8  ucSecStart, ucSecStep;
    
    usSecMax  = SEC_PER_PIPE_PG;
    ucSecStep = 30;
    
    g_bSinglePln = FALSE;
20008e97:	0020c0        	memw
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1870
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   
20008e9a:	150c      	movi.n	a5, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2373
    U8  ucSecStart, ucSecStep;
    
    usSecMax  = SEC_PER_PIPE_PG;
    ucSecStep = 30;
    
    g_bSinglePln = FALSE;
20008e9c:	5d6e32        	s32i	a3, a14, 0x174
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
20008e9f:	df1ed2        	l16ui	a13, a14, 0x1be
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1868
History       :
    20151112    abby    create
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
20008ea2:	dedc71        	l32r	a7, 20000a14 <_stext+0x314>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1872
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
20008ea5:	de1e22        	l16ui	a2, a14, 0x1bc
20008ea8:	136122        	s32i	a2, a1, 76
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1868
History       :
    20151112    abby    create
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
20008eab:	1768      	l32i.n	a6, a7, 4
20008ead:	1169      	s32i.n	a6, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1870
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   
20008eaf:	572ee2        	l32i	a14, a14, 0x15c
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1868
History       :
    20151112    abby    create
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
20008eb2:	0778      	l32i.n	a7, a7, 0
20008eb4:	0179      	s32i.n	a7, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1870
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   
20008eb6:	8345e0        	moveqz	a4, a5, a14
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1872

    tFlashAddr.usBlock = g_usTestBlkStart;
20008eb9:	025122        	s16i	a2, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1870
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   
20008ebc:	0158      	l32i.n	a5, a1, 0
20008ebe:	0144c0        	slli	a4, a4, 20
20008ec1:	126142        	s32i	a4, a1, 72
20008ec4:	105500        	and	a5, a5, a0
20008ec7:	204450        	or	a4, a4, a5
20008eca:	0149      	s32i.n	a4, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
20008ecc:	1db2d7        	bgeu	a2, a13, 20008eed <TEST_NfcPartialRead..GCB_1482204275+0x75>
20008ecf:	00a9c6        	j	2000917a <TEST_NfcPartialRead..GCB_1482204275+0x302>

20008ed2 <TEST_NfcPartialRead..GCB_1482204275+0x5a>:
20008ed2:	000000                                        ...

20008ed5 <TEST_NfcPartialRead..GCB_1482204275+0x5d>:
20008ed5:	de1181        	l32r	a8, 2000071c <_stext+0x1c>
20008ed8:	01a072        	movi	a7, 1
20008edb:	00a062        	movi	a6, 0
20008ede:	8367e0        	moveqz	a6, a7, a14
20008ee1:	de1882        	l16ui	a8, a8, 0x1bc
20008ee4:	136182        	s32i	a8, a1, 76
20008ee7:	0166c0        	slli	a6, a6, 20
20008eea:	126162        	s32i	a6, a1, 72
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1936
    20150229    abby    merge TLC write test code into MLC
****************************************************************************/
void TEST_NfcWriteAll(WRITE_REQ_TYPE WriteType)
{
    FLASH_ADDR tFlashAddr = {0};
    NFC_PRG_REQ_DES tWrReq = {0};
20008eed:	18c122        	addi	a2, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1935
    20151112    abby    create
    20150229    abby    merge TLC write test code into MLC
****************************************************************************/
void TEST_NfcWriteAll(WRITE_REQ_TYPE WriteType)
{
    FLASH_ADDR tFlashAddr = {0};
20008ef0:	deca31        	l32r	a3, 20000a18 <_stext+0x318>
20008ef3:	10c152        	addi	a5, a1, 16
20008ef6:	1348      	l32i.n	a4, a3, 4
20008ef8:	0368      	l32i.n	a6, a3, 0
20008efa:	0569      	s32i.n	a6, a5, 0
20008efc:	1549      	s32i.n	a4, a5, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1936
    NFC_PRG_REQ_DES tWrReq = {0};
20008efe:	338b      	addi.n	a3, a3, 8
20008f00:	841c      	movi.n	a4, 24
20008f02:	0232c5        	call0	2000b230 <memcpy>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
20008f05:	de0f61        	l32r	a6, 20000744 <_stext+0x44>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1220
LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
20008f08:	362c42        	l32i	a4, a12, 216
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1219

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
20008f0b:	3a2c72        	l32i	a7, a12, 232
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1218
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
20008f0e:	262c82        	l32i	a8, a12, 152
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
20008f11:	de2201        	l32r	a0, 2000079c <_stext+0x9c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
20008f14:	372ca2        	l32i	a10, a12, 220
20008f17:	190c      	movi.n	a9, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1227
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;
20008f19:	242c32        	l32i	a3, a12, 144
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
20008f1c:	de00b1        	l32r	a11, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1227
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;
20008f1f:	a128      	l32i.n	a2, a1, 40
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
20008f21:	0bb8      	l32i.n	a11, a11, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1227
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;
20008f23:	033324        	insbits	a2, a3, 3, 3
20008f26:	a129      	s32i.n	a2, a1, 40
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
20008f28:	030c      	movi.n	a3, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
20008f2a:	0bb8      	l32i.n	a11, a11, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
20008f2c:	8339a0        	moveqz	a3, a9, a10
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1224
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
20008f2f:	272c92        	l32i	a9, a12, 156
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
20008f32:	0153c0        	slli	a5, a3, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
20008f35:	bb0a      	add.n	a11, a11, a0
20008f37:	f5b0b0        	extui	a11, a11, 16, 16
20008f3a:	11bbf0        	slli	a11, a11, 1
20008f3d:	0c51b2        	s16i	a11, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1218
    pWrReq->bsRedOntf       = g_bRedOntf;
20008f40:	6128      	l32i.n	a2, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1223
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
20008f42:	0133a0        	slli	a3, a3, 22
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1218
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
20008f45:	900824        	insbits	a2, a8, 16, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1226
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
20008f48:	312c82        	l32i	a8, a12, 196
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1219

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
20008f4b:	922724        	insbits	a2, a7, 18, 18
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1220
    pWrReq->bsSsu0En        = g_bSsuEn;
20008f4e:	933424        	insbits	a2, a4, 19, 19
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
20008f51:	102260        	and	a2, a2, a6
20008f54:	202250        	or	a2, a2, a5
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1222
    pWrReq->bsSsu1En        = g_bSsuEn;
20008f57:	b15424        	insbits	a2, a4, 21, 21
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1223
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
20008f5a:	deb041        	l32r	a4, 20000a1c <_stext+0x31c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1226
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
20008f5d:	9189      	s32i.n	a8, a1, 36
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1223
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
20008f5f:	102240        	and	a2, a2, a4
20008f62:	202230        	or	a2, a2, a3
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1224
    pWrReq->bsLbaChkEn      = g_bLbaChk;
20008f65:	911924        	insbits	a2, a9, 17, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1225
    pWrReq->bsTlcMode       = g_bTlcMode;
20008f68:	d3be24        	insbits	a2, a14, 27, 27
20008f6b:	6129      	s32i.n	a2, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1229
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;

    if (FALSE != g_ErrInjEn)
20008f6d:	0020c0        	memw
20008f70:	112c72        	l32i	a7, a12, 68
20008f73:	3d9716        	beqz	a7, 20009350 <TEST_NfcPartialRead..GCB_1482204275+0x4d8>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1232
    {
        pWrReq->bsInjErrEn = TRUE;
        pWrReq->pErrInj    = &g_tErrInj;
20008f76:	dea501        	l32r	a0, 20000a0c <_stext+0x30c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1231
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;

    if (FALSE != g_ErrInjEn)
    {
        pWrReq->bsInjErrEn = TRUE;
20008f79:	de73e1        	l32r	a14, 20000948 <_stext+0x248>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1232
        pWrReq->pErrInj    = &g_tErrInj;
20008f7c:	b109      	s32i.n	a0, a1, 44
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1231
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;

    if (FALSE != g_ErrInjEn)
    {
        pWrReq->bsInjErrEn = TRUE;
20008f7e:	20e2e0        	or	a14, a2, a14
20008f81:	0661e2        	s32i	a14, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1240
    {
        pWrReq->pErrInj = NULL;
    }

    /*  scramble disable    */
    if (g_bRawDataRead)
20008f84:	392c22        	l32i	a2, a12, 228
20008f87:	529c      	beqz.n	a2, 20008fa0 <TEST_NfcPartialRead..GCB_1482204275+0x128>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1243
    {
        volatile PG_CONF_REG *pNfcPgCfg = (volatile PG_CONF_REG *) &rNfcPgCfg;
        pNfcPgCfg->bsScrBps = TRUE;
20008f89:	850c      	movi.n	a5, 8
20008f8b:	767c      	movi.n	a6, -9
20008f8d:	ddf841        	l32r	a4, 20000770 <_stext+0x70>
20008f90:	0020c0        	memw
20008f93:	0438      	l32i.n	a3, a4, 0
20008f95:	103360        	and	a3, a3, a6
20008f98:	203350        	or	a3, a3, a5
20008f9b:	0020c0        	memw
20008f9e:	0439      	s32i.n	a3, a4, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1941
    NFC_PRG_REQ_DES tWrReq = {0};
    U16 usPrgIndex;

    TEST_NfcWtCfgReqComm(&tWrReq);

    tFlashAddr.bsSLCMode = !g_bTlcMode;
20008fa0:	122182        	l32i	a8, a1, 72
20008fa3:	dde8a1        	l32r	a10, 20000744 <_stext+0x44>
20008fa6:	4198      	l32i.n	a9, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1943

    tFlashAddr.usBlock = g_usTestBlkStart;
20008fa8:	132172        	l32i	a7, a1, 76
20008fab:	0a5172        	s16i	a7, a1, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1941
    NFC_PRG_REQ_DES tWrReq = {0};
    U16 usPrgIndex;

    TEST_NfcWtCfgReqComm(&tWrReq);

    tFlashAddr.bsSLCMode = !g_bTlcMode;
20008fae:	1099a0        	and	a9, a9, a10
20008fb1:	208890        	or	a8, a8, a9
20008fb4:	4189      	s32i.n	a8, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1944

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
20008fb6:	0237d7        	bltu	a7, a13, 20008fbc <TEST_NfcPartialRead..GCB_1482204275+0x144>
20008fb9:	005d46        	j	20009132 <TEST_NfcPartialRead..GCB_1482204275+0x2ba>
20008fbc:	d50c52        	l8ui	a5, a12, 213
20008fbf:	de98d1        	l32r	a13, 20000a20 <_stext+0x320>
20008fc2:	8e7c      	movi.n	a14, -8
20008fc4:	000506        	j	20008fdc <TEST_NfcPartialRead..GCB_1482204275+0x164>

20008fc7 <TEST_NfcPartialRead..GCB_1482204275+0x14f>:
	...

20008fc8 <TEST_NfcPartialRead..GCB_1482204275+0x150>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2030
                {
                    //DBG_Printf("Pu %d Block %d Page %d Write OK!\n",tFlashAddr.ucPU,tFlashAddr.usBlock,tFlashAddr.usPage);
                }
            }
        }
        tFlashAddr.usBlock++;
20008fc8:	0a11b2        	l16ui	a11, a1, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1944
    TEST_NfcWtCfgReqComm(&tWrReq);

    tFlashAddr.bsSLCMode = !g_bTlcMode;

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
20008fcb:	771c02        	l16ui	a0, a12, 238
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2030
                {
                    //DBG_Printf("Pu %d Block %d Page %d Write OK!\n",tFlashAddr.ucPU,tFlashAddr.usBlock,tFlashAddr.usPage);
                }
            }
        }
        tFlashAddr.usBlock++;
20008fce:	bb1b      	addi.n	a11, a11, 1
20008fd0:	f4b0b0        	extui	a11, a11, 0, 16
20008fd3:	0a51b2        	s16i	a11, a1, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1944
    TEST_NfcWtCfgReqComm(&tWrReq);

    tFlashAddr.bsSLCMode = !g_bTlcMode;

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
20008fd6:	023b07        	bltu	a11, a0, 20008fdc <TEST_NfcPartialRead..GCB_1482204275+0x164>
20008fd9:	005546        	j	20009132 <TEST_NfcPartialRead..GCB_1482204275+0x2ba>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1946
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
20008fdc:	d40c02        	l8ui	a0, a12, 212
20008fdf:	104102        	s8i	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1947
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
20008fe2:	023057        	bltu	a0, a5, 20008fe8 <TEST_NfcPartialRead..GCB_1482204275+0x170>
20008fe5:	003dc6        	j	200090e0 <TEST_NfcPartialRead..GCB_1482204275+0x268>
20008fe8:	d70c22        	l8ui	a2, a12, 215
20008feb:	000546        	j	20009004 <TEST_NfcPartialRead..GCB_1482204275+0x18c>

20008fee <TEST_NfcPartialRead..GCB_1482204275+0x176>:
	...

20008ff0 <TEST_NfcPartialRead..GCB_1482204275+0x178>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1950
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20008ff0:	d50c52        	l8ui	a5, a12, 213
20008ff3:	100102        	l8ui	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2007
                    }
                    usPrgIndex++;
                }
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
20008ff6:	001b      	addi.n	a0, a0, 1
20008ff8:	740000        	extui	a0, a0, 0, 8
20008ffb:	104102        	s8i	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1947

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
20008ffe:	023057        	bltu	a0, a5, 20009004 <TEST_NfcPartialRead..GCB_1482204275+0x18c>
20009001:	003606        	j	200090dd <TEST_NfcPartialRead..GCB_1482204275+0x265>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1949
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
20009004:	d60c32        	l8ui	a3, a12, 214
20009007:	114132        	s8i	a3, a1, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1950
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
2000900a:	e8b327        	bgeu	a3, a2, 20008ff6 <TEST_NfcPartialRead..GCB_1482204275+0x17e>
2000900d:	791c02        	l16ui	a0, a12, 242
20009010:	000446        	j	20009025 <TEST_NfcPartialRead..GCB_1482204275+0x1ad>

20009013 <TEST_NfcPartialRead..GCB_1482204275+0x19b>:
	...

20009014 <TEST_NfcPartialRead..GCB_1482204275+0x19c>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2005
                    {
                        DBG_Getch();
                    }
                    usPrgIndex++;
                }
                tFlashAddr.ucLun++;
20009014:	110142        	l8ui	a4, a1, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1950
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20009017:	d70c22        	l8ui	a2, a12, 215
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2005
                    {
                        DBG_Getch();
                    }
                    usPrgIndex++;
                }
                tFlashAddr.ucLun++;
2000901a:	441b      	addi.n	a4, a4, 1
2000901c:	744040        	extui	a4, a4, 0, 8
2000901f:	114142        	s8i	a4, a1, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1950
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20009022:	cab427        	bgeu	a4, a2, 20008ff0 <TEST_NfcPartialRead..GCB_1482204275+0x178>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1952
            {
                usPrgIndex = g_usTestPageStart;
20009025:	781c52        	l16ui	a5, a12, 240
20009028:	185152        	s16i	a5, a1, 48
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1953
                while (usPrgIndex < g_usTestPageEnd * PRG_CYC_CNT)
2000902b:	e5b507        	bgeu	a5, a0, 20009014 <TEST_NfcPartialRead..GCB_1482204275+0x19c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1955
                {
                    tFlashAddr.usPage = TEST_NfcWtGetPageAddr(&usPrgIndex);
2000902e:	30c122        	addi	a2, a1, 48
20009031:	fd5705        	call0	200065a4 <TEST_NfcWtGetPageAddr..GBB_1482204275>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1958
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
20009034:	791c02        	l16ui	a0, a12, 242
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1955
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
            {
                usPrgIndex = g_usTestPageStart;
                while (usPrgIndex < g_usTestPageEnd * PRG_CYC_CNT)
                {
                    tFlashAddr.usPage = TEST_NfcWtGetPageAddr(&usPrgIndex);
20009037:	0b5122        	s16i	a2, a1, 22
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1958
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
2000903a:	d6b207        	bgeu	a2, a0, 20009014 <TEST_NfcPartialRead..GCB_1482204275+0x19c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
2000903d:	362c62        	l32i	a6, a12, 216
20009040:	ac48      	l32i.n	a4, a12, 40
20009042:	110132        	l8ui	a3, a1, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1960
                    tFlashAddr.usPage = TEST_NfcWtGetPageAddr(&usPrgIndex);
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
                    }
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
20009045:	6178      	l32i.n	a7, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1961
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
20009047:	a158      	l32i.n	a5, a1, 40
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
20009049:	100102        	l8ui	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1961
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
                    }
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
2000904c:	1055e0        	and	a5, a5, a14
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
2000904f:	20fa      	add.n	a2, a0, a15
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1960
                    tFlashAddr.usPage = TEST_NfcWtGetPageAddr(&usPrgIndex);
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
                    }
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
20009051:	1077d0        	and	a7, a7, a13
20009054:	066172        	s32i	a7, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
20009057:	800222        	l8ui	a2, a2, 128
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1961
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
                    }
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
2000905a:	0a6152        	s32i	a5, a1, 40
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
2000905d:	a02230        	addx4	a2, a2, a3
20009060:	a02240        	addx4	a2, a2, a4
20009063:	06f616        	beqz	a6, 200090d6 <TEST_NfcPartialRead..GCB_1482204275+0x25e>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:536
    20151029    abby     modify to meet VT3533 
------------------------------------------------------------------------------*/
U8 HAL_NfcGetRP(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20009066:	0020c0        	memw
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:528
    {
        return 0;
    }
    
    //MixVector only support 512 offset for SSUx in one MCU
    return GET_CMD_LEVEL(pFlashAddr->ucPU,pFlashAddr->ucLun,pFlashAddr->bsPln
20009069:	1160e0        	slli	a6, a0, 2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:536
2000906c:	000202        	l8ui	a0, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:528
2000906f:	206360        	or	a6, a3, a6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:536
20009072:	140400        	extui	a0, a0, 4, 2
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:528
20009075:	e32604        	insbits	a0, a6, 2, 31
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1965
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
                
                    TEST_NfcWtDummyDataPrepare(&tFlashAddr, &tWrReq);
                    
                    tWrReq.bsSsu0Addr   = TEST_GetOffset(&tFlashAddr);
20009078:	0e5102        	s16i	a0, a1, 28
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1966
                    tWrReq.bsSsu1Addr   = tWrReq.bsSsu0Addr + 0x400;
2000907b:	f48000        	extui	a8, a0, 0, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1967
                    tWrReq.bsCsAddrOff  = tWrReq.bsSsu0Addr;
2000907e:	086182        	s32i	a8, a1, 32
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1966
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
                
                    TEST_NfcWtDummyDataPrepare(&tFlashAddr, &tWrReq);
                    
                    tWrReq.bsSsu0Addr   = TEST_GetOffset(&tFlashAddr);
                    tWrReq.bsSsu1Addr   = tWrReq.bsSsu0Addr + 0x400;
20009081:	04d882        	addmi	a8, a8, 0x400
20009084:	0f5182        	s16i	a8, a1, 30
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetFull(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20009087:	0020c0        	memw
2000908a:	000272        	l8ui	a7, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1968
                    tWrReq.bsCsAddrOff  = tWrReq.bsSsu0Addr;
                    while(TRUE == HAL_NfcGetFull(tFlashAddr.ucPU, tFlashAddr.ucLun))
2000908d:	106737        	bbci	a7, 3, 200090a1 <TEST_NfcPartialRead..GCB_1482204275+0x229>
20009090:	f03d      	nop.n
20009092:	088076        	loop	a0, 2000909e <TEST_NfcPartialRead..GCB_1482204275+0x226>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
20009095:	0020c0        	memw
20009098:	000292        	l8ui	a9, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1968
2000909b:	026937        	bbci	a9, 3, 200090a1 <TEST_NfcPartialRead..GCB_1482204275+0x229>

2000909e <TEST_NfcPartialRead..GCB_1482204275+0x226>:
2000909e:	fffb86        	j	20009090 <TEST_NfcPartialRead..GCB_1482204275+0x218>

200090a1 <TEST_NfcPartialRead..GCB_1482204275+0x229>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1981
                            HAL_NfcSinglePlaneWrite(&tFlashAddr, &tWrReq);
                        }break;

                        case FULL_PAGE_WRITE :
                        {                        
                             HAL_NfcFullPageWrite(&tFlashAddr, &tWrReq);
200090a1:	10c122        	addi	a2, a1, 16
200090a4:	18c132        	addi	a3, a1, 24
200090a7:	de6601        	l32r	a0, 20000a40 <_stext+0x340>
200090aa:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1999
                        }break;

                    }//end switch
                    
                    /* check status of NFC CMD REG and DEC SRAM */
                    if (SUCCESS != TEST_NfcWtStsChk(&tFlashAddr, &tWrReq))
200090ad:	10c122        	addi	a2, a1, 16
200090b0:	18c132        	addi	a3, a1, 24
200090b3:	fd3a85        	call0	2000645c <TEST_NfcWtStsChk..JBB_1482204275>
200090b6:	051226        	beqi	a2, 1, 200090bf <TEST_NfcPartialRead..GCB_1482204275+0x247>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2001
                    {
                        DBG_Getch();
200090b9:	dd9701        	l32r	a0, 20000718 <_stext+0x18>
200090bc:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2003
                    }
                    usPrgIndex++;
200090bf:	1811a2        	l16ui	a10, a1, 48
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1953
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
            {
                usPrgIndex = g_usTestPageStart;
                while (usPrgIndex < g_usTestPageEnd * PRG_CYC_CNT)
200090c2:	791c02        	l16ui	a0, a12, 242
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2003
                    /* check status of NFC CMD REG and DEC SRAM */
                    if (SUCCESS != TEST_NfcWtStsChk(&tFlashAddr, &tWrReq))
                    {
                        DBG_Getch();
                    }
                    usPrgIndex++;
200090c5:	aa1b      	addi.n	a10, a10, 1
200090c7:	f4a0a0        	extui	a10, a10, 0, 16
200090ca:	1851a2        	s16i	a10, a1, 48
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1953
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
            {
                usPrgIndex = g_usTestPageStart;
                while (usPrgIndex < g_usTestPageEnd * PRG_CYC_CNT)
200090cd:	02ba07        	bgeu	a10, a0, 200090d3 <TEST_NfcPartialRead..GCB_1482204275+0x25b>
200090d0:	ffd686        	j	2000902e <TEST_NfcPartialRead..GCB_1482204275+0x1b6>
200090d3:	ffcf46        	j	20009014 <TEST_NfcPartialRead..GCB_1482204275+0x19c>

200090d6 <TEST_NfcPartialRead..GCB_1482204275+0x25e>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
200090d6:	000c      	movi.n	a0, 0
200090d8:	ffe706        	j	20009078 <TEST_NfcPartialRead..GCB_1482204275+0x200>

200090db <TEST_NfcPartialRead..GCB_1482204275+0x263>:
	...

200090dd <TEST_NfcPartialRead..GCB_1482204275+0x265>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1947

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
200090dd:	d40c02        	l8ui	a0, a12, 212
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2010
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
        }
        /*  check nfc status by LUN as the basic unit  */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
200090e0:	104102        	s8i	a0, a1, 16
200090e3:	023057        	bltu	a0, a5, 200090e9 <TEST_NfcPartialRead..GCB_1482204275+0x271>
200090e6:	ffb786        	j	20008fc8 <TEST_NfcPartialRead..GCB_1482204275+0x150>
200090e9:	d70c22        	l8ui	a2, a12, 215
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2012
        {
            for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
200090ec:	d60c32        	l8ui	a3, a12, 214
200090ef:	114132        	s8i	a3, a1, 17
200090f2:	2eb327        	bgeu	a3, a2, 20009124 <TEST_NfcPartialRead..GCB_1482204275+0x2ac>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2014
            {
                if(NFC_STATUS_SUCCESS != HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun))
200090f5:	100122        	l8ui	a2, a1, 16
200090f8:	fde105        	call0	20006f0c <HAL_NfcWaitStatus>
200090fb:	0e1226        	beqi	a2, 1, 2000910d <TEST_NfcPartialRead..GCB_1482204275+0x295>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2016
                {
                    DBG_Printf("Pu %d Block %d Page %d Write Fail!\n",tFlashAddr.ucPU,tFlashAddr.usBlock,tFlashAddr.usPage);
200090fe:	de4921        	l32r	a2, 20000a24 <_stext+0x324>
20009101:	100132        	l8ui	a3, a1, 16
20009104:	0a1142        	l16ui	a4, a1, 20
20009107:	0b1152        	l16ui	a5, a1, 22
2000910a:	01b585        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2012
            tFlashAddr.ucPU++;
        }
        /*  check nfc status by LUN as the basic unit  */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
        {
            for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
2000910d:	110132        	l8ui	a3, a1, 17
20009110:	d70c22        	l8ui	a2, a12, 215
20009113:	331b      	addi.n	a3, a3, 1
20009115:	743030        	extui	a3, a3, 0, 8
20009118:	114132        	s8i	a3, a1, 17
2000911b:	d63327        	bltu	a3, a2, 200090f5 <TEST_NfcPartialRead..GCB_1482204275+0x27d>
2000911e:	d50c52        	l8ui	a5, a12, 213
20009121:	100102        	l8ui	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2010
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
        }
        /*  check nfc status by LUN as the basic unit  */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
20009124:	001b      	addi.n	a0, a0, 1
20009126:	740000        	extui	a0, a0, 0, 8
20009129:	104102        	s8i	a0, a1, 16
2000912c:	bc3057        	bltu	a0, a5, 200090ec <TEST_NfcPartialRead..GCB_1482204275+0x274>
2000912f:	ffa546        	j	20008fc8 <TEST_NfcPartialRead..GCB_1482204275+0x150>

20009132 <TEST_NfcPartialRead..GCB_1482204275+0x2ba>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2382

    /*     write whole page    */
    TEST_NfcWriteAll(FULL_PAGE_WRITE);

    /*     partial read read range depends on sector address    */
    for (ucSecStart = 0; ucSecStart < usSecMax;)
20009132:	0c0c      	movi.n	a12, 0
20009134:	80a0d2        	movi	a13, 128
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2386
    {
        usSecLen = usSecMax - ucSecStart;
        //DBG_Printf("Partial Read Start Sec%d, Sec Length%d\n", ucSecStart, usSecLen);
        TEST_NfcReadAll(ucSecStart, usSecLen, FULL_PAGE_READ);
20009137:	0c2d      	mov.n	a2, a12
20009139:	240c      	movi.n	a4, 2
2000913b:	c03dc0        	sub	a3, a13, a12
2000913e:	f43030        	extui	a3, a3, 0, 16
20009141:	fde1c5        	call0	20006f60 <TEST_NfcReadAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2387
        ucSecStart = ucSecStart + ucSecStep;
20009144:	1eccc2        	addi	a12, a12, 30
20009147:	74c0c0        	extui	a12, a12, 0, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2382

    /*     write whole page    */
    TEST_NfcWriteAll(FULL_PAGE_WRITE);

    /*     partial read read range depends on sector address    */
    for (ucSecStart = 0; ucSecStart < usSecMax;)
2000914a:	e9ecb6        	bltui	a12, 128, 20009137 <TEST_NfcPartialRead..GCB_1482204275+0x2bf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2390
        //DBG_Printf("Partial Read Start Sec%d, Sec Length%d\n", ucSecStart, usSecLen);
        TEST_NfcReadAll(ucSecStart, usSecLen, FULL_PAGE_READ);
        ucSecStart = ucSecStart + ucSecStep;
    }

    return;
2000914d:	e1c8      	l32i.n	a12, a1, 56
2000914f:	f1d8      	l32i.n	a13, a1, 60
20009151:	1021e2        	l32i	a14, a1, 64
20009154:	1121f2        	l32i	a15, a1, 68
20009157:	d108      	l32i.n	a0, a1, 52
20009159:	60c112        	addi	a1, a1, 96
2000915c:	f00d      	ret.n

2000915e <TEST_NfcPartialRead..GCB_1482204275+0x2e6>:
	...

20009160 <TEST_NfcPartialRead..GCB_1482204275+0x2e8>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
20009160:	dd6fd1        	l32r	a13, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1916
                {
                    //DBG_Printf("PU%d LUN %d BLK%d Erase OK!\n", tFlashAddr.ucPU, tFlashAddr.ucLun, tFlashAddr.usBlock);
                }
            }
        }
        tFlashAddr.usBlock++;
20009163:	021102        	l16ui	a0, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
20009166:	572de2        	l32i	a14, a13, 0x15c
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1916
                {
                    //DBG_Printf("PU%d LUN %d BLK%d Erase OK!\n", tFlashAddr.ucPU, tFlashAddr.ucLun, tFlashAddr.usBlock);
                }
            }
        }
        tFlashAddr.usBlock++;
20009169:	001b      	addi.n	a0, a0, 1
2000916b:	f40000        	extui	a0, a0, 0, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
2000916e:	df1dd2        	l16ui	a13, a13, 0x1be
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1916
                {
                    //DBG_Printf("PU%d LUN %d BLK%d Erase OK!\n", tFlashAddr.ucPU, tFlashAddr.ucLun, tFlashAddr.usBlock);
                }
            }
        }
        tFlashAddr.usBlock++;
20009171:	025102        	s16i	a0, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
20009174:	0230d7        	bltu	a0, a13, 2000917a <TEST_NfcPartialRead..GCB_1482204275+0x302>
20009177:	ff5686        	j	20008ed5 <TEST_NfcPartialRead..GCB_1482204275+0x5d>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:238
}

//for im 3d tlc slc/tlc mode switch
BOOL TEST_NfcSwitchFlashMode(U8 ucPU)
{
    FLASH_ADDR tFlashAddr = {0};
2000917a:	218b      	addi.n	a2, a1, 8
2000917c:	de2b31        	l32r	a3, 20000a28 <_stext+0x328>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:247
    tFlashAddr.ucPU = ucPU;
    
    /* step1: set feature, User Selectable Trim Profile, 85h/03h data, 00-2-pass MLC;01-1-pass MLC;03-TLC */
    ucAddr = 0x91;
#ifdef SWITCH_MODE_DADF
    ulData = g_bTlcMode ? 0x104 : 0x100;
2000917f:	04a102        	movi	a0, 0x104
20009182:	00a1d2        	movi	a13, 0x100
20009185:	93d0e0        	movnez	a13, a0, a14
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:238
}

//for im 3d tlc slc/tlc mode switch
BOOL TEST_NfcSwitchFlashMode(U8 ucPU)
{
    FLASH_ADDR tFlashAddr = {0};
20009188:	1348      	l32i.n	a4, a3, 4
2000918a:	1249      	s32i.n	a4, a2, 4
2000918c:	0338      	l32i.n	a3, a3, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1875
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
2000918e:	d40ce2        	l8ui	a14, a12, 212
20009191:	0041e2        	s8i	a14, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:238
20009194:	0239      	s32i.n	a3, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:251
#ifdef SWITCH_MODE_DADF
    ulData = g_bTlcMode ? 0x104 : 0x100;
#else
    ulData = g_bTlcMode ? 0x004 : 0x000;
#endif
    HAL_NfcSetFeature(&tFlashAddr, ulData, ucAddr);
20009196:	91a042        	movi	a4, 145
20009199:	0d3d      	mov.n	a3, a13
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:242
{
    FLASH_ADDR tFlashAddr = {0};
    U8 ucAddr;
    U32 ulData;
    
    tFlashAddr.ucPU = ucPU;
2000919b:	0841e2        	s8i	a14, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:251
#ifdef SWITCH_MODE_DADF
    ulData = g_bTlcMode ? 0x104 : 0x100;
#else
    ulData = g_bTlcMode ? 0x004 : 0x000;
#endif
    HAL_NfcSetFeature(&tFlashAddr, ulData, ucAddr);
2000919e:	de2901        	l32r	a0, 20000a44 <_stext+0x344>
200091a1:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
200091a4:	090132        	l8ui	a3, a1, 9
200091a7:	dd5d41        	l32r	a4, 2000071c <_stext+0x1c>
200091aa:	2efa      	add.n	a2, a14, a15
200091ac:	800222        	l8ui	a2, a2, 128
200091af:	3e2442        	l32i	a4, a4, 248
200091b2:	a02230        	addx4	a2, a2, a3
200091b5:	a02240        	addx4	a2, a2, a4
200091b8:	0020c0        	memw
200091bb:	000252        	l8ui	a5, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
200091be:	0ee507        	bbsi	a5, 0, 200091d0 <TEST_NfcPartialRead..GCB_1482204275+0x358>
200091c1:	088076        	loop	a0, 200091cd <TEST_NfcPartialRead..GCB_1482204275+0x355>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
200091c4:	0020c0        	memw
200091c7:	000242        	l8ui	a4, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
200091ca:	02e407        	bbsi	a4, 0, 200091d0 <TEST_NfcPartialRead..GCB_1482204275+0x358>

200091cd <TEST_NfcPartialRead..GCB_1482204275+0x355>:
200091cd:	fffc06        	j	200091c1 <TEST_NfcPartialRead..GCB_1482204275+0x349>

200091d0 <TEST_NfcPartialRead..GCB_1482204275+0x358>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1106
    {
        ;
    }

    if (TRUE == HAL_NfcGetErrHold(ucPU, ucLun))
200091d0:	202ee0        	or	a2, a14, a14
200091d3:	fb51c5        	call0	200046f0 <HAL_NfcGetErrHold>
200091d6:	0e1266        	bnei	a2, 1, 200091e8 <TEST_NfcPartialRead..GCB_1482204275+0x370>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:254
    if (NFC_STATUS_SUCCESS != HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun))
    {
        DBG_Printf("set feature fail PU:%d Addr0x%x Data0x%x\n", tFlashAddr.ucPU, ucAddr, ulData);
200091d9:	de1421        	l32r	a2, 20000a2c <_stext+0x32c>
200091dc:	080132        	l8ui	a3, a1, 8
200091df:	91a042        	movi	a4, 145
200091e2:	205dd0        	or	a5, a13, a13
200091e5:	01a7c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:256
    }
    DBG_Printf("set feature OK PU:%d Addr0x%x Data0x%x\n", tFlashAddr.ucPU, ucAddr, ulData);
200091e8:	205dd0        	or	a5, a13, a13
200091eb:	de1121        	l32r	a2, 20000a30 <_stext+0x330>
200091ee:	080132        	l8ui	a3, a1, 8
200091f1:	91a042        	movi	a4, 145
200091f4:	01a6c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:259
    
    /* step2: sync reset to make flash reload trim file from ROM block */
    HAL_NfcSyncResetFlash(&tFlashAddr);
200091f7:	08c122        	addi	a2, a1, 8
200091fa:	de1301        	l32r	a0, 20000a48 <_stext+0x348>
200091fd:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20009200:	090132        	l8ui	a3, a1, 9
20009203:	0801e2        	l8ui	a14, a1, 8
20009206:	dd4541        	l32r	a4, 2000071c <_stext+0x1c>
20009209:	802ef0        	add	a2, a14, a15
2000920c:	800222        	l8ui	a2, a2, 128
2000920f:	3e2442        	l32i	a4, a4, 248
20009212:	a02230        	addx4	a2, a2, a3
20009215:	a02240        	addx4	a2, a2, a4
20009218:	0020c0        	memw
2000921b:	000252        	l8ui	a5, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
2000921e:	0fe507        	bbsi	a5, 0, 20009231 <TEST_NfcPartialRead..GCB_1482204275+0x3b9>
20009221:	088076        	loop	a0, 2000922d <TEST_NfcPartialRead..GCB_1482204275+0x3b5>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20009224:	0020c0        	memw
20009227:	000242        	l8ui	a4, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
2000922a:	03e407        	bbsi	a4, 0, 20009231 <TEST_NfcPartialRead..GCB_1482204275+0x3b9>

2000922d <TEST_NfcPartialRead..GCB_1482204275+0x3b5>:
2000922d:	fffc06        	j	20009221 <TEST_NfcPartialRead..GCB_1482204275+0x3a9>

20009230 <TEST_NfcPartialRead..GCB_1482204275+0x3b8>:
	...

20009231 <TEST_NfcPartialRead..GCB_1482204275+0x3b9>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1106
    {
        ;
    }

    if (TRUE == HAL_NfcGetErrHold(ucPU, ucLun))
20009231:	0e2d      	mov.n	a2, a14
20009233:	fb4bc5        	call0	200046f0 <HAL_NfcGetErrHold>
20009236:	0b1266        	bnei	a2, 1, 20009245 <TEST_NfcPartialRead..GCB_1482204275+0x3cd>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:262
    if (NFC_STATUS_SUCCESS != HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun))
    {
        DBG_Printf("SYNC Reset PU:%d fail!\n", tFlashAddr.ucPU);
20009239:	ddfe21        	l32r	a2, 20000a34 <_stext+0x334>
2000923c:	080132        	l8ui	a3, a1, 8
2000923f:	201110        	or	a1, a1, a1
20009242:	01a205        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:264
    }
    DBG_Printf("SYNC Reset PU:%d OK!\n", tFlashAddr.ucPU);
20009245:	ddfc21        	l32r	a2, 20000a38 <_stext+0x338>
20009248:	080132        	l8ui	a3, a1, 8
2000924b:	01a185        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1879
    #ifdef FLASH_INTEL_3DTLC
        TEST_NfcSwitchFlashMode(tFlashAddr.ucPU);
    #endif
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
2000924e:	d50c52        	l8ui	a5, a12, 213
20009251:	000102        	l8ui	a0, a1, 0
20009254:	023057        	bltu	a0, a5, 2000925a <TEST_NfcPartialRead..GCB_1482204275+0x3e2>
20009257:	002486        	j	200092ed <TEST_NfcPartialRead..GCB_1482204275+0x475>
2000925a:	d70c22        	l8ui	a2, a12, 215
2000925d:	000406        	j	20009271 <TEST_NfcPartialRead..GCB_1482204275+0x3f9>

20009260 <TEST_NfcPartialRead..GCB_1482204275+0x3e8>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1882
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20009260:	d50c52        	l8ui	a5, a12, 213
20009263:	152102        	l32i	a0, a1, 84
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1898
                {
                    HAL_NfcFullBlockErase(&tFlashAddr, g_bTlcMode);
                }
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
20009266:	001b      	addi.n	a0, a0, 1
20009268:	740000        	extui	a0, a0, 0, 8
2000926b:	004102        	s8i	a0, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1879
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
    #ifdef FLASH_INTEL_3DTLC
        TEST_NfcSwitchFlashMode(tFlashAddr.ucPU);
    #endif
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
2000926e:	7bb057        	bgeu	a0, a5, 200092ed <TEST_NfcPartialRead..GCB_1482204275+0x475>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1881
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
20009271:	d60cd2        	l8ui	a13, a12, 214
20009274:	0141d2        	s8i	a13, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1882
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20009277:	ebbd27        	bgeu	a13, a2, 20009266 <TEST_NfcPartialRead..GCB_1482204275+0x3ee>
2000927a:	156102        	s32i	a0, a1, 84
2000927d:	742000        	extui	a2, a0, 0, 8
20009280:	2f2a      	add.n	a2, a15, a2
20009282:	146122        	s32i	a2, a1, 80
20009285:	000946        	j	200092ae <TEST_NfcPartialRead..GCB_1482204275+0x436>

20009288 <TEST_NfcPartialRead..GCB_1482204275+0x410>:
	...

20009289 <TEST_NfcPartialRead..GCB_1482204275+0x411>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1888
            {
                while(TRUE == HAL_NfcGetFull(tFlashAddr.ucPU, tFlashAddr.ucLun))
                {
                    ;
                }
                if(TRUE == g_bSinglePln)
20009289:	232ce2        	l32i	a14, a12, 140
2000928c:	0020c0        	memw
2000928f:	292c32        	l32i	a3, a12, 164
20009292:	481326        	beqi	a3, 1, 200092de <TEST_NfcPartialRead..GCB_1482204275+0x466>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1894
                {
                    HAL_NfcSingleBlockErase(&tFlashAddr, g_bTlcMode);
                }
                else
                {
                    HAL_NfcFullBlockErase(&tFlashAddr, g_bTlcMode);
20009295:	203ee0        	or	a3, a14, a14
20009298:	012d      	mov.n	a2, a1
2000929a:	ddec01        	l32r	a0, 20000a4c <_stext+0x34c>
2000929d:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1882
        TEST_NfcSwitchFlashMode(tFlashAddr.ucPU);
    #endif
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
200092a0:	d70c22        	l8ui	a2, a12, 215
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1896
                }
                else
                {
                    HAL_NfcFullBlockErase(&tFlashAddr, g_bTlcMode);
                }
                tFlashAddr.ucLun++;
200092a3:	dd1b      	addi.n	a13, a13, 1
200092a5:	74d0d0        	extui	a13, a13, 0, 8
200092a8:	0141d2        	s8i	a13, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1882
        TEST_NfcSwitchFlashMode(tFlashAddr.ucPU);
    #endif
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
200092ab:	b1bd27        	bgeu	a13, a2, 20009260 <TEST_NfcPartialRead..GCB_1482204275+0x3e8>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetFull(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
200092ae:	142122        	l32i	a2, a1, 80
200092b1:	ac38      	l32i.n	a3, a12, 40
200092b3:	800222        	l8ui	a2, a2, 128
200092b6:	7440d0        	extui	a4, a13, 0, 8
200092b9:	a02240        	addx4	a2, a2, a4
200092bc:	a02230        	addx4	a2, a2, a3
200092bf:	0020c0        	memw
200092c2:	0002e2        	l8ui	a14, a2, 0
200092c5:	0020f0        	nop
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1884
            {
                while(TRUE == HAL_NfcGetFull(tFlashAddr.ucPU, tFlashAddr.ucLun))
200092c8:	bd6e37        	bbci	a14, 3, 20009289 <TEST_NfcPartialRead..GCB_1482204275+0x411>
200092cb:	f03d      	nop.n
200092cd:	088076        	loop	a0, 200092d9 <TEST_NfcPartialRead..GCB_1482204275+0x461>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
200092d0:	0020c0        	memw
200092d3:	000232        	l8ui	a3, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1884
200092d6:	af6337        	bbci	a3, 3, 20009289 <TEST_NfcPartialRead..GCB_1482204275+0x411>

200092d9 <TEST_NfcPartialRead..GCB_1482204275+0x461>:
200092d9:	fffb86        	j	200092cb <TEST_NfcPartialRead..GCB_1482204275+0x453>

200092dc <TEST_NfcPartialRead..GCB_1482204275+0x464>:
	...

200092de <TEST_NfcPartialRead..GCB_1482204275+0x466>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1890
                {
                    ;
                }
                if(TRUE == g_bSinglePln)
                {
                    HAL_NfcSingleBlockErase(&tFlashAddr, g_bTlcMode);
200092de:	0e3d      	mov.n	a3, a14
200092e0:	012d      	mov.n	a2, a1
200092e2:	dddb01        	l32r	a0, 20000a50 <_stext+0x350>
200092e5:	0000c0        	callx0	a0
200092e8:	ffed06        	j	200092a0 <TEST_NfcPartialRead..GCB_1482204275+0x428>

200092eb <TEST_NfcPartialRead..GCB_1482204275+0x473>:
	...

200092ed <TEST_NfcPartialRead..GCB_1482204275+0x475>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1901
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
        }
        /*    check nfc status by LUN as the basic unit    */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
200092ed:	d40c02        	l8ui	a0, a12, 212
200092f0:	004102        	s8i	a0, a1, 0
200092f3:	023057        	bltu	a0, a5, 200092f9 <TEST_NfcPartialRead..GCB_1482204275+0x481>
200092f6:	ff9986        	j	20009160 <TEST_NfcPartialRead..GCB_1482204275+0x2e8>
200092f9:	d70c22        	l8ui	a2, a12, 215
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1903
        {
            for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
200092fc:	d60cd2        	l8ui	a13, a12, 214
200092ff:	0141d2        	s8i	a13, a1, 1
20009302:	3bbd27        	bgeu	a13, a2, 20009341 <TEST_NfcPartialRead..GCB_1482204275+0x4c9>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1905
            {
                if(NFC_STATUS_SUCCESS != HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun))
20009305:	203dd0        	or	a3, a13, a13
20009308:	000122        	l8ui	a2, a1, 0
2000930b:	fdc005        	call0	20006f0c <HAL_NfcWaitStatus>
2000930e:	171226        	beqi	a2, 1, 20009329 <TEST_NfcPartialRead..GCB_1482204275+0x4b1>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1907
                {
                    DBG_Printf("PU%d LUN %d BLK%d Erase Fail!\n", tFlashAddr.ucPU, tFlashAddr.ucLun, tFlashAddr.usBlock);
20009311:	ddca21        	l32r	a2, 20000a3c <_stext+0x33c>
20009314:	000132        	l8ui	a3, a1, 0
20009317:	010142        	l8ui	a4, a1, 1
2000931a:	021152        	l16ui	a5, a1, 4
2000931d:	019445        	call0	2000ac64 <dbg_printf>
20009320:	202110        	or	a2, a1, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1908
                    HAL_NfcResetLun(&tFlashAddr);//error handle, otherwise program other blk also will be fail
20009323:	ddcc01        	l32r	a0, 20000a54 <_stext+0x354>
20009326:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1903
            tFlashAddr.ucPU++;
        }
        /*    check nfc status by LUN as the basic unit    */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
        {
            for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
20009329:	0101d2        	l8ui	a13, a1, 1
2000932c:	d70c22        	l8ui	a2, a12, 215
2000932f:	01cdd2        	addi	a13, a13, 1
20009332:	74d0d0        	extui	a13, a13, 0, 8
20009335:	0141d2        	s8i	a13, a1, 1
20009338:	c93d27        	bltu	a13, a2, 20009305 <TEST_NfcPartialRead..GCB_1482204275+0x48d>
2000933b:	000102        	l8ui	a0, a1, 0
2000933e:	d50c52        	l8ui	a5, a12, 213
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1901
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
        }
        /*    check nfc status by LUN as the basic unit    */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
20009341:	001b      	addi.n	a0, a0, 1
20009343:	740000        	extui	a0, a0, 0, 8
20009346:	004102        	s8i	a0, a1, 0
20009349:	af3057        	bltu	a0, a5, 200092fc <TEST_NfcPartialRead..GCB_1482204275+0x484>
2000934c:	ff8406        	j	20009160 <TEST_NfcPartialRead..GCB_1482204275+0x2e8>

2000934f <TEST_NfcPartialRead..GCB_1482204275+0x4d7>:
	...

20009350 <TEST_NfcPartialRead..GCB_1482204275+0x4d8>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1236
        pWrReq->bsInjErrEn = TRUE;
        pWrReq->pErrInj    = &g_tErrInj;
    }
    else
    {
        pWrReq->pErrInj = NULL;
20009350:	020c      	movi.n	a2, 0
20009352:	b129      	s32i.n	a2, a1, 44
20009354:	ff0b06        	j	20008f84 <TEST_NfcPartialRead..GCB_1482204275+0x10c>

20009357 <TEST_NfcPartialRead..GCB_1482204275+0x4df>:
	...

20009358 <TEST_NfcMultiPlnEWR..CCB_1482204275>:
TEST_NfcMultiPlnEWR():
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2239
Reference     :
History       :
    20151112    abby    create
****************************************************************************/
LOCAL void TEST_NfcMultiPlnEWR(void)
{
20009358:	a0c112        	addi	a1, a1, -96
2000935b:	030c      	movi.n	a3, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1870
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   
2000935d:	034d      	mov.n	a4, a3
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2239
Reference     :
History       :
    20151112    abby    create
****************************************************************************/
LOCAL void TEST_NfcMultiPlnEWR(void)
{
2000935f:	f1d9      	s32i.n	a13, a1, 60
20009361:	1061e2        	s32i	a14, a1, 64
20009364:	1161f2        	s32i	a15, a1, 68
20009367:	d109      	s32i.n	a0, a1, 52
20009369:	e1c9      	s32i.n	a12, a1, 56
2000936b:	dcf601        	l32r	a0, 20000744 <_stext+0x44>
2000936e:	dda8c1        	l32r	a12, 20000a10 <_stext+0x310>
20009371:	dcecf1        	l32r	a15, 20000724 <_stext+0x24>
20009374:	dceae1        	l32r	a14, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2240
    g_bSinglePln = FALSE;
20009377:	0020c0        	memw
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1870
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   
2000937a:	150c      	movi.n	a5, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2240
History       :
    20151112    abby    create
****************************************************************************/
LOCAL void TEST_NfcMultiPlnEWR(void)
{
    g_bSinglePln = FALSE;
2000937c:	5d6e32        	s32i	a3, a14, 0x174
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
2000937f:	df1ed2        	l16ui	a13, a14, 0x1be
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1868
History       :
    20151112    abby    create
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
20009382:	dda471        	l32r	a7, 20000a14 <_stext+0x314>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1872
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
20009385:	de1e22        	l16ui	a2, a14, 0x1bc
20009388:	136122        	s32i	a2, a1, 76
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1868
History       :
    20151112    abby    create
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
2000938b:	1768      	l32i.n	a6, a7, 4
2000938d:	1169      	s32i.n	a6, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1870
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   
2000938f:	572ee2        	l32i	a14, a14, 0x15c
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1868
History       :
    20151112    abby    create
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
20009392:	0778      	l32i.n	a7, a7, 0
20009394:	0179      	s32i.n	a7, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1870
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   
20009396:	8345e0        	moveqz	a4, a5, a14
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1872

    tFlashAddr.usBlock = g_usTestBlkStart;
20009399:	025122        	s16i	a2, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1870
****************************************************************************/
void TEST_NfcEraseAll(void)
{
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   
2000939c:	0158      	l32i.n	a5, a1, 0
2000939e:	0144c0        	slli	a4, a4, 20
200093a1:	126142        	s32i	a4, a1, 72
200093a4:	105500        	and	a5, a5, a0
200093a7:	204450        	or	a4, a4, a5
200093aa:	0149      	s32i.n	a4, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
200093ac:	1db2d7        	bgeu	a2, a13, 200093cd <TEST_NfcMultiPlnEWR..CCB_1482204275+0x75>
200093af:	00a546        	j	20009648 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x2f0>

200093b2 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x5a>:
200093b2:	000000                                        ...

200093b5 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x5d>:
200093b5:	dcd981        	l32r	a8, 2000071c <_stext+0x1c>
200093b8:	01a072        	movi	a7, 1
200093bb:	00a062        	movi	a6, 0
200093be:	8367e0        	moveqz	a6, a7, a14
200093c1:	de1882        	l16ui	a8, a8, 0x1bc
200093c4:	136182        	s32i	a8, a1, 76
200093c7:	0166c0        	slli	a6, a6, 20
200093ca:	126162        	s32i	a6, a1, 72
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1936
    20150229    abby    merge TLC write test code into MLC
****************************************************************************/
void TEST_NfcWriteAll(WRITE_REQ_TYPE WriteType)
{
    FLASH_ADDR tFlashAddr = {0};
    NFC_PRG_REQ_DES tWrReq = {0};
200093cd:	18c122        	addi	a2, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1935
    20151112    abby    create
    20150229    abby    merge TLC write test code into MLC
****************************************************************************/
void TEST_NfcWriteAll(WRITE_REQ_TYPE WriteType)
{
    FLASH_ADDR tFlashAddr = {0};
200093d0:	dd9231        	l32r	a3, 20000a18 <_stext+0x318>
200093d3:	10c152        	addi	a5, a1, 16
200093d6:	1348      	l32i.n	a4, a3, 4
200093d8:	0368      	l32i.n	a6, a3, 0
200093da:	0569      	s32i.n	a6, a5, 0
200093dc:	1549      	s32i.n	a4, a5, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1936
    NFC_PRG_REQ_DES tWrReq = {0};
200093de:	338b      	addi.n	a3, a3, 8
200093e0:	841c      	movi.n	a4, 24
200093e2:	01e4c5        	call0	2000b230 <memcpy>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
200093e5:	dcd761        	l32r	a6, 20000744 <_stext+0x44>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1220
LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
200093e8:	362c42        	l32i	a4, a12, 216
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1219

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
200093eb:	3a2c72        	l32i	a7, a12, 232
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1218
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
200093ee:	262c82        	l32i	a8, a12, 152
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
200093f1:	dcea01        	l32r	a0, 2000079c <_stext+0x9c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
200093f4:	372ca2        	l32i	a10, a12, 220
200093f7:	190c      	movi.n	a9, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1227
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;
200093f9:	242c32        	l32i	a3, a12, 144
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
200093fc:	dcc8b1        	l32r	a11, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1227
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;
200093ff:	a128      	l32i.n	a2, a1, 40
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
20009401:	0bb8      	l32i.n	a11, a11, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1227
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;
20009403:	033324        	insbits	a2, a3, 3, 3
20009406:	a129      	s32i.n	a2, a1, 40
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
20009408:	030c      	movi.n	a3, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
2000940a:	0bb8      	l32i.n	a11, a11, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
2000940c:	8339a0        	moveqz	a3, a9, a10
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1224
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
2000940f:	272c92        	l32i	a9, a12, 156
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
20009412:	0153c0        	slli	a5, a3, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1217
    return;
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
20009415:	bb0a      	add.n	a11, a11, a0
20009417:	f5b0b0        	extui	a11, a11, 16, 16
2000941a:	11bbf0        	slli	a11, a11, 1
2000941d:	0c51b2        	s16i	a11, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1218
    pWrReq->bsRedOntf       = g_bRedOntf;
20009420:	6128      	l32i.n	a2, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1223
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
20009422:	0133a0        	slli	a3, a3, 22
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1218
}

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
20009425:	900824        	insbits	a2, a8, 16, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1226
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
20009428:	312c82        	l32i	a8, a12, 196
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1219

LOCAL void TEST_NfcWtCfgReqComm(NFC_PRG_REQ_DES *pWrReq)
{
    pWrReq->bsWrBuffId      = START_WBUF_ID;
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
2000942b:	922724        	insbits	a2, a7, 18, 18
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1220
    pWrReq->bsSsu0En        = g_bSsuEn;
2000942e:	933424        	insbits	a2, a4, 19, 19
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1221
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
20009431:	102260        	and	a2, a2, a6
20009434:	202250        	or	a2, a2, a5
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1222
    pWrReq->bsSsu1En        = g_bSsuEn;
20009437:	b15424        	insbits	a2, a4, 21, 21
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1223
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
2000943a:	dd7841        	l32r	a4, 20000a1c <_stext+0x31c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1226
    pWrReq->bsLbaChkEn      = g_bLbaChk;
    pWrReq->bsTlcMode       = g_bTlcMode;
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
2000943d:	9189      	s32i.n	a8, a1, 36
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1223
    pWrReq->bsRedOntf       = g_bRedOntf;
    pWrReq->bsCSEn          = g_bCacheStsEn;
    pWrReq->bsSsu0En        = g_bSsuEn;
    pWrReq->bsSsu0Ontf      = !g_bSsu0DramEn;
    pWrReq->bsSsu1En        = g_bSsuEn;
    pWrReq->bsSsu1Ontf      = !g_bSsu0DramEn;
2000943f:	102240        	and	a2, a2, a4
20009442:	202230        	or	a2, a2, a3
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1224
    pWrReq->bsLbaChkEn      = g_bLbaChk;
20009445:	911924        	insbits	a2, a9, 17, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1225
    pWrReq->bsTlcMode       = g_bTlcMode;
20009448:	d3be24        	insbits	a2, a14, 27, 27
2000944b:	6129      	s32i.n	a2, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1229
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;

    if (FALSE != g_ErrInjEn)
2000944d:	0020c0        	memw
20009450:	112c72        	l32i	a7, a12, 68
20009453:	3c9716        	beqz	a7, 20009820 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x4c8>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1232
    {
        pWrReq->bsInjErrEn = TRUE;
        pWrReq->pErrInj    = &g_tErrInj;
20009456:	dd6d01        	l32r	a0, 20000a0c <_stext+0x30c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1231
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;

    if (FALSE != g_ErrInjEn)
    {
        pWrReq->bsInjErrEn = TRUE;
20009459:	dd3be1        	l32r	a14, 20000948 <_stext+0x248>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1232
        pWrReq->pErrInj    = &g_tErrInj;
2000945c:	b109      	s32i.n	a0, a1, 44
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1231
    pWrReq->pNfcRed         = (NFC_RED *)pWrRed;
    pWrReq->bsEmEn          = g_bEmEnable;

    if (FALSE != g_ErrInjEn)
    {
        pWrReq->bsInjErrEn = TRUE;
2000945e:	20e2e0        	or	a14, a2, a14
20009461:	0661e2        	s32i	a14, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1240
    {
        pWrReq->pErrInj = NULL;
    }

    /*  scramble disable    */
    if (g_bRawDataRead)
20009464:	392c22        	l32i	a2, a12, 228
20009467:	529c      	beqz.n	a2, 20009480 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x128>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1243
    {
        volatile PG_CONF_REG *pNfcPgCfg = (volatile PG_CONF_REG *) &rNfcPgCfg;
        pNfcPgCfg->bsScrBps = TRUE;
20009469:	850c      	movi.n	a5, 8
2000946b:	767c      	movi.n	a6, -9
2000946d:	dcc041        	l32r	a4, 20000770 <_stext+0x70>
20009470:	0020c0        	memw
20009473:	0438      	l32i.n	a3, a4, 0
20009475:	103360        	and	a3, a3, a6
20009478:	203350        	or	a3, a3, a5
2000947b:	0020c0        	memw
2000947e:	0439      	s32i.n	a3, a4, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1941
    NFC_PRG_REQ_DES tWrReq = {0};
    U16 usPrgIndex;

    TEST_NfcWtCfgReqComm(&tWrReq);

    tFlashAddr.bsSLCMode = !g_bTlcMode;
20009480:	122182        	l32i	a8, a1, 72
20009483:	dcb0a1        	l32r	a10, 20000744 <_stext+0x44>
20009486:	4198      	l32i.n	a9, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1943

    tFlashAddr.usBlock = g_usTestBlkStart;
20009488:	132172        	l32i	a7, a1, 76
2000948b:	0a5172        	s16i	a7, a1, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1941
    NFC_PRG_REQ_DES tWrReq = {0};
    U16 usPrgIndex;

    TEST_NfcWtCfgReqComm(&tWrReq);

    tFlashAddr.bsSLCMode = !g_bTlcMode;
2000948e:	1099a0        	and	a9, a9, a10
20009491:	208890        	or	a8, a8, a9
20009494:	4189      	s32i.n	a8, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1944

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
20009496:	0237d7        	bltu	a7, a13, 2000949c <TEST_NfcMultiPlnEWR..CCB_1482204275+0x144>
20009499:	005d46        	j	20009612 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x2ba>
2000949c:	d50c52        	l8ui	a5, a12, 213
2000949f:	dd60d1        	l32r	a13, 20000a20 <_stext+0x320>
200094a2:	8e7c      	movi.n	a14, -8
200094a4:	000506        	j	200094bc <TEST_NfcMultiPlnEWR..CCB_1482204275+0x164>

200094a7 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x14f>:
	...

200094a8 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x150>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2030
                {
                    //DBG_Printf("Pu %d Block %d Page %d Write OK!\n",tFlashAddr.ucPU,tFlashAddr.usBlock,tFlashAddr.usPage);
                }
            }
        }
        tFlashAddr.usBlock++;
200094a8:	0a11b2        	l16ui	a11, a1, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1944
    TEST_NfcWtCfgReqComm(&tWrReq);

    tFlashAddr.bsSLCMode = !g_bTlcMode;

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
200094ab:	771c02        	l16ui	a0, a12, 238
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2030
                {
                    //DBG_Printf("Pu %d Block %d Page %d Write OK!\n",tFlashAddr.ucPU,tFlashAddr.usBlock,tFlashAddr.usPage);
                }
            }
        }
        tFlashAddr.usBlock++;
200094ae:	bb1b      	addi.n	a11, a11, 1
200094b0:	f4b0b0        	extui	a11, a11, 0, 16
200094b3:	0a51b2        	s16i	a11, a1, 20
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1944
    TEST_NfcWtCfgReqComm(&tWrReq);

    tFlashAddr.bsSLCMode = !g_bTlcMode;

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
200094b6:	023b07        	bltu	a11, a0, 200094bc <TEST_NfcMultiPlnEWR..CCB_1482204275+0x164>
200094b9:	005546        	j	20009612 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x2ba>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1946
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
200094bc:	d40c02        	l8ui	a0, a12, 212
200094bf:	104102        	s8i	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1947
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
200094c2:	023057        	bltu	a0, a5, 200094c8 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x170>
200094c5:	003dc6        	j	200095c0 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x268>
200094c8:	d70c22        	l8ui	a2, a12, 215
200094cb:	000546        	j	200094e4 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x18c>

200094ce <TEST_NfcMultiPlnEWR..CCB_1482204275+0x176>:
	...

200094d0 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x178>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1950
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
200094d0:	d50c52        	l8ui	a5, a12, 213
200094d3:	100102        	l8ui	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2007
                    }
                    usPrgIndex++;
                }
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
200094d6:	001b      	addi.n	a0, a0, 1
200094d8:	740000        	extui	a0, a0, 0, 8
200094db:	104102        	s8i	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1947

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
200094de:	023057        	bltu	a0, a5, 200094e4 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x18c>
200094e1:	003606        	j	200095bd <TEST_NfcMultiPlnEWR..CCB_1482204275+0x265>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1949
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
200094e4:	d60c32        	l8ui	a3, a12, 214
200094e7:	114132        	s8i	a3, a1, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1950
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
200094ea:	e8b327        	bgeu	a3, a2, 200094d6 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x17e>
200094ed:	791c02        	l16ui	a0, a12, 242
200094f0:	000446        	j	20009505 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x1ad>

200094f3 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x19b>:
	...

200094f4 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x19c>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2005
                    {
                        DBG_Getch();
                    }
                    usPrgIndex++;
                }
                tFlashAddr.ucLun++;
200094f4:	110142        	l8ui	a4, a1, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1950
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
200094f7:	d70c22        	l8ui	a2, a12, 215
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2005
                    {
                        DBG_Getch();
                    }
                    usPrgIndex++;
                }
                tFlashAddr.ucLun++;
200094fa:	441b      	addi.n	a4, a4, 1
200094fc:	744040        	extui	a4, a4, 0, 8
200094ff:	114142        	s8i	a4, a1, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1950
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20009502:	cab427        	bgeu	a4, a2, 200094d0 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x178>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1952
            {
                usPrgIndex = g_usTestPageStart;
20009505:	781c52        	l16ui	a5, a12, 240
20009508:	185152        	s16i	a5, a1, 48
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1953
                while (usPrgIndex < g_usTestPageEnd * PRG_CYC_CNT)
2000950b:	e5b507        	bgeu	a5, a0, 200094f4 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x19c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1955
                {
                    tFlashAddr.usPage = TEST_NfcWtGetPageAddr(&usPrgIndex);
2000950e:	30c122        	addi	a2, a1, 48
20009511:	fd0905        	call0	200065a4 <TEST_NfcWtGetPageAddr..GBB_1482204275>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1958
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
20009514:	791c02        	l16ui	a0, a12, 242
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1955
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
            {
                usPrgIndex = g_usTestPageStart;
                while (usPrgIndex < g_usTestPageEnd * PRG_CYC_CNT)
                {
                    tFlashAddr.usPage = TEST_NfcWtGetPageAddr(&usPrgIndex);
20009517:	0b5122        	s16i	a2, a1, 22
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1958
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
2000951a:	d6b207        	bgeu	a2, a0, 200094f4 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x19c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
2000951d:	362c62        	l32i	a6, a12, 216
20009520:	0a2c42        	l32i	a4, a12, 40
20009523:	110132        	l8ui	a3, a1, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1960
                    tFlashAddr.usPage = TEST_NfcWtGetPageAddr(&usPrgIndex);
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
                    }
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
20009526:	062172        	l32i	a7, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1961
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
20009529:	0a2152        	l32i	a5, a1, 40
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
2000952c:	100102        	l8ui	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1961
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
                    }
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
2000952f:	1055e0        	and	a5, a5, a14
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
20009532:	20fa      	add.n	a2, a0, a15
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1960
                    tFlashAddr.usPage = TEST_NfcWtGetPageAddr(&usPrgIndex);
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
                    }
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
20009534:	1077d0        	and	a7, a7, a13
20009537:	6179      	s32i.n	a7, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
20009539:	800222        	l8ui	a2, a2, 128
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1961
                    if (tFlashAddr.usPage >= g_usTestPageEnd)//page address check
                    {
                        break;
                    }
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
2000953c:	a159      	s32i.n	a5, a1, 40
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
2000953e:	a02230        	addx4	a2, a2, a3
20009541:	a02240        	addx4	a2, a2, a4
20009544:	070616        	beqz	a6, 200095b8 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x260>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:536
    20151029    abby     modify to meet VT3533 
------------------------------------------------------------------------------*/
U8 HAL_NfcGetRP(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20009547:	0020c0        	memw
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:528
    {
        return 0;
    }
    
    //MixVector only support 512 offset for SSUx in one MCU
    return GET_CMD_LEVEL(pFlashAddr->ucPU,pFlashAddr->ucLun,pFlashAddr->bsPln
2000954a:	1160e0        	slli	a6, a0, 2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:536
2000954d:	000202        	l8ui	a0, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:528
20009550:	206360        	or	a6, a3, a6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:536
20009553:	140400        	extui	a0, a0, 4, 2
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:528
20009556:	e32604        	insbits	a0, a6, 2, 31
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1965
                    tWrReq.bsTlcPgCycle = TEST_NfcWtGetPrgCycle(usPrgIndex);
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
                
                    TEST_NfcWtDummyDataPrepare(&tFlashAddr, &tWrReq);
                    
                    tWrReq.bsSsu0Addr   = TEST_GetOffset(&tFlashAddr);
20009559:	0e5102        	s16i	a0, a1, 28
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1966
                    tWrReq.bsSsu1Addr   = tWrReq.bsSsu0Addr + 0x400;
2000955c:	f48000        	extui	a8, a0, 0, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1967
                    tWrReq.bsCsAddrOff  = tWrReq.bsSsu0Addr;
2000955f:	086182        	s32i	a8, a1, 32
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1966
                    tWrReq.bsDsIndex    = TEST_NfcWtGetDsIndex(&tFlashAddr, WriteType);
                
                    TEST_NfcWtDummyDataPrepare(&tFlashAddr, &tWrReq);
                    
                    tWrReq.bsSsu0Addr   = TEST_GetOffset(&tFlashAddr);
                    tWrReq.bsSsu1Addr   = tWrReq.bsSsu0Addr + 0x400;
20009562:	04d882        	addmi	a8, a8, 0x400
20009565:	0f5182        	s16i	a8, a1, 30
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetFull(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20009568:	0020c0        	memw
2000956b:	000272        	l8ui	a7, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1968
                    tWrReq.bsCsAddrOff  = tWrReq.bsSsu0Addr;
                    while(TRUE == HAL_NfcGetFull(tFlashAddr.ucPU, tFlashAddr.ucLun))
2000956e:	0e6737        	bbci	a7, 3, 20009580 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x228>
20009571:	088076        	loop	a0, 2000957d <TEST_NfcMultiPlnEWR..CCB_1482204275+0x225>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
20009574:	0020c0        	memw
20009577:	000292        	l8ui	a9, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1968
2000957a:	026937        	bbci	a9, 3, 20009580 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x228>

2000957d <TEST_NfcMultiPlnEWR..CCB_1482204275+0x225>:
2000957d:	fffc06        	j	20009571 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x219>

20009580 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x228>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1981
                            HAL_NfcSinglePlaneWrite(&tFlashAddr, &tWrReq);
                        }break;

                        case FULL_PAGE_WRITE :
                        {                        
                             HAL_NfcFullPageWrite(&tFlashAddr, &tWrReq);
20009580:	10c122        	addi	a2, a1, 16
20009583:	18c132        	addi	a3, a1, 24
20009586:	dd2e01        	l32r	a0, 20000a40 <_stext+0x340>
20009589:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1999
                        }break;

                    }//end switch
                    
                    /* check status of NFC CMD REG and DEC SRAM */
                    if (SUCCESS != TEST_NfcWtStsChk(&tFlashAddr, &tWrReq))
2000958c:	10c122        	addi	a2, a1, 16
2000958f:	18c132        	addi	a3, a1, 24
20009592:	201110        	or	a1, a1, a1
20009595:	fcec45        	call0	2000645c <TEST_NfcWtStsChk..JBB_1482204275>
20009598:	051226        	beqi	a2, 1, 200095a1 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x249>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2001
                    {
                        DBG_Getch();
2000959b:	dc5f01        	l32r	a0, 20000718 <_stext+0x18>
2000959e:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2003
                    }
                    usPrgIndex++;
200095a1:	1811a2        	l16ui	a10, a1, 48
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1953
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
            {
                usPrgIndex = g_usTestPageStart;
                while (usPrgIndex < g_usTestPageEnd * PRG_CYC_CNT)
200095a4:	791c02        	l16ui	a0, a12, 242
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2003
                    /* check status of NFC CMD REG and DEC SRAM */
                    if (SUCCESS != TEST_NfcWtStsChk(&tFlashAddr, &tWrReq))
                    {
                        DBG_Getch();
                    }
                    usPrgIndex++;
200095a7:	aa1b      	addi.n	a10, a10, 1
200095a9:	f4a0a0        	extui	a10, a10, 0, 16
200095ac:	1851a2        	s16i	a10, a1, 48
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1953
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
            {
                usPrgIndex = g_usTestPageStart;
                while (usPrgIndex < g_usTestPageEnd * PRG_CYC_CNT)
200095af:	02ba07        	bgeu	a10, a0, 200095b5 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x25d>
200095b2:	ffd606        	j	2000950e <TEST_NfcMultiPlnEWR..CCB_1482204275+0x1b6>
200095b5:	ffcec6        	j	200094f4 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x19c>

200095b8 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x260>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:522
Purpose   : Get SSU and the cache status address offset
Reference :
****************************************************************************/
LOCAL U32 TEST_GetOffset(FLASH_ADDR *pFlashAddr)
{
    if(!g_bSsuEn)
200095b8:	000c      	movi.n	a0, 0
200095ba:	ffe6c6        	j	20009559 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x201>

200095bd <TEST_NfcMultiPlnEWR..CCB_1482204275+0x265>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1947

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < g_usTestBlkEnd)
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
200095bd:	d40c02        	l8ui	a0, a12, 212
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2010
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
        }
        /*  check nfc status by LUN as the basic unit  */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
200095c0:	104102        	s8i	a0, a1, 16
200095c3:	023057        	bltu	a0, a5, 200095c9 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x271>
200095c6:	ffb786        	j	200094a8 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x150>
200095c9:	d70c22        	l8ui	a2, a12, 215
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2012
        {
            for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
200095cc:	d60c32        	l8ui	a3, a12, 214
200095cf:	114132        	s8i	a3, a1, 17
200095d2:	2eb327        	bgeu	a3, a2, 20009604 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x2ac>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2014
            {
                if(NFC_STATUS_SUCCESS != HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun))
200095d5:	100122        	l8ui	a2, a1, 16
200095d8:	fd9305        	call0	20006f0c <HAL_NfcWaitStatus>
200095db:	0e1226        	beqi	a2, 1, 200095ed <TEST_NfcMultiPlnEWR..CCB_1482204275+0x295>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2016
                {
                    DBG_Printf("Pu %d Block %d Page %d Write Fail!\n",tFlashAddr.ucPU,tFlashAddr.usBlock,tFlashAddr.usPage);
200095de:	dd4021        	l32r	a2, 20000ae0 <_stext+0x3e0>
200095e1:	100132        	l8ui	a3, a1, 16
200095e4:	0a1142        	l16ui	a4, a1, 20
200095e7:	0b1152        	l16ui	a5, a1, 22
200095ea:	016785        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2012
            tFlashAddr.ucPU++;
        }
        /*  check nfc status by LUN as the basic unit  */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
        {
            for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
200095ed:	110132        	l8ui	a3, a1, 17
200095f0:	d70c22        	l8ui	a2, a12, 215
200095f3:	331b      	addi.n	a3, a3, 1
200095f5:	743030        	extui	a3, a3, 0, 8
200095f8:	114132        	s8i	a3, a1, 17
200095fb:	d63327        	bltu	a3, a2, 200095d5 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x27d>
200095fe:	d50c52        	l8ui	a5, a12, 213
20009601:	100102        	l8ui	a0, a1, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2010
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
        }
        /*  check nfc status by LUN as the basic unit  */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
20009604:	001b      	addi.n	a0, a0, 1
20009606:	740000        	extui	a0, a0, 0, 8
20009609:	104102        	s8i	a0, a1, 16
2000960c:	bc3057        	bltu	a0, a5, 200095cc <TEST_NfcMultiPlnEWR..CCB_1482204275+0x274>
2000960f:	ffa546        	j	200094a8 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x150>

20009612 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x2ba>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2246

    TEST_NfcEraseAll();

    TEST_NfcWriteAll(FULL_PAGE_WRITE);

    TEST_NfcReadAll(0, SEC_PER_PIPE_PG, FULL_PAGE_READ);
20009612:	020c      	movi.n	a2, 0
20009614:	80a032        	movi	a3, 128
20009617:	240c      	movi.n	a4, 2
20009619:	fd9445        	call0	20006f60 <TEST_NfcReadAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2248

    return;
2000961c:	e1c8      	l32i.n	a12, a1, 56
2000961e:	f1d8      	l32i.n	a13, a1, 60
20009620:	1021e2        	l32i	a14, a1, 64
20009623:	1121f2        	l32i	a15, a1, 68
20009626:	d108      	l32i.n	a0, a1, 52
20009628:	60c112        	addi	a1, a1, 96
2000962b:	f00d      	ret.n

2000962d <TEST_NfcMultiPlnEWR..CCB_1482204275+0x2d5>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
2000962d:	dc3bd1        	l32r	a13, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1916
                {
                    //DBG_Printf("PU%d LUN %d BLK%d Erase OK!\n", tFlashAddr.ucPU, tFlashAddr.ucLun, tFlashAddr.usBlock);
                }
            }
        }
        tFlashAddr.usBlock++;
20009630:	021122        	l16ui	a2, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
20009633:	572de2        	l32i	a14, a13, 0x15c
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1916
                {
                    //DBG_Printf("PU%d LUN %d BLK%d Erase OK!\n", tFlashAddr.ucPU, tFlashAddr.ucLun, tFlashAddr.usBlock);
                }
            }
        }
        tFlashAddr.usBlock++;
20009636:	01c222        	addi	a2, a2, 1
20009639:	f42020        	extui	a2, a2, 0, 16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
2000963c:	df1dd2        	l16ui	a13, a13, 0x1be
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1916
                {
                    //DBG_Printf("PU%d LUN %d BLK%d Erase OK!\n", tFlashAddr.ucPU, tFlashAddr.ucLun, tFlashAddr.usBlock);
                }
            }
        }
        tFlashAddr.usBlock++;
2000963f:	025122        	s16i	a2, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1873
    FLASH_ADDR tFlashAddr = {0};
    
    tFlashAddr.bsSLCMode = !g_bTlcMode;   

    tFlashAddr.usBlock = g_usTestBlkStart;
    while (tFlashAddr.usBlock < (U16)g_usTestBlkEnd)
20009642:	0232d7        	bltu	a2, a13, 20009648 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x2f0>
20009645:	ff5b06        	j	200093b5 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x5d>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:238
}

//for im 3d tlc slc/tlc mode switch
BOOL TEST_NfcSwitchFlashMode(U8 ucPU)
{
    FLASH_ADDR tFlashAddr = {0};
20009648:	218b      	addi.n	a2, a1, 8
2000964a:	dcf731        	l32r	a3, 20000a28 <_stext+0x328>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:247
    tFlashAddr.ucPU = ucPU;
    
    /* step1: set feature, User Selectable Trim Profile, 85h/03h data, 00-2-pass MLC;01-1-pass MLC;03-TLC */
    ucAddr = 0x91;
#ifdef SWITCH_MODE_DADF
    ulData = g_bTlcMode ? 0x104 : 0x100;
2000964d:	04a102        	movi	a0, 0x104
20009650:	00a1d2        	movi	a13, 0x100
20009653:	93d0e0        	movnez	a13, a0, a14
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:238
}

//for im 3d tlc slc/tlc mode switch
BOOL TEST_NfcSwitchFlashMode(U8 ucPU)
{
    FLASH_ADDR tFlashAddr = {0};
20009656:	1348      	l32i.n	a4, a3, 4
20009658:	1249      	s32i.n	a4, a2, 4
2000965a:	002332        	l32i	a3, a3, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1875
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
2000965d:	d40ce2        	l8ui	a14, a12, 212
20009660:	0041e2        	s8i	a14, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:238
20009663:	0239      	s32i.n	a3, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:251
#ifdef SWITCH_MODE_DADF
    ulData = g_bTlcMode ? 0x104 : 0x100;
#else
    ulData = g_bTlcMode ? 0x004 : 0x000;
#endif
    HAL_NfcSetFeature(&tFlashAddr, ulData, ucAddr);
20009665:	91a042        	movi	a4, 145
20009668:	203dd0        	or	a3, a13, a13
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:242
{
    FLASH_ADDR tFlashAddr = {0};
    U8 ucAddr;
    U32 ulData;
    
    tFlashAddr.ucPU = ucPU;
2000966b:	0841e2        	s8i	a14, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:251
#ifdef SWITCH_MODE_DADF
    ulData = g_bTlcMode ? 0x104 : 0x100;
#else
    ulData = g_bTlcMode ? 0x004 : 0x000;
#endif
    HAL_NfcSetFeature(&tFlashAddr, ulData, ucAddr);
2000966e:	dcf501        	l32r	a0, 20000a44 <_stext+0x344>
20009671:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20009674:	090132        	l8ui	a3, a1, 9
20009677:	dc2941        	l32r	a4, 2000071c <_stext+0x1c>
2000967a:	2efa      	add.n	a2, a14, a15
2000967c:	800222        	l8ui	a2, a2, 128
2000967f:	3e2442        	l32i	a4, a4, 248
20009682:	a02230        	addx4	a2, a2, a3
20009685:	a02240        	addx4	a2, a2, a4
20009688:	0020c0        	memw
2000968b:	000252        	l8ui	a5, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
2000968e:	0fe507        	bbsi	a5, 0, 200096a1 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x349>
20009691:	088076        	loop	a0, 2000969d <TEST_NfcMultiPlnEWR..CCB_1482204275+0x345>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
20009694:	0020c0        	memw
20009697:	000242        	l8ui	a4, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
2000969a:	03e407        	bbsi	a4, 0, 200096a1 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x349>

2000969d <TEST_NfcMultiPlnEWR..CCB_1482204275+0x345>:
2000969d:	fffc06        	j	20009691 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x339>

200096a0 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x348>:
	...

200096a1 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x349>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1106
    {
        ;
    }

    if (TRUE == HAL_NfcGetErrHold(ucPU, ucLun))
200096a1:	0e2d      	mov.n	a2, a14
200096a3:	201110        	or	a1, a1, a1
200096a6:	fb0485        	call0	200046f0 <HAL_NfcGetErrHold>
200096a9:	0d1266        	bnei	a2, 1, 200096ba <TEST_NfcMultiPlnEWR..CCB_1482204275+0x362>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:254
    if (NFC_STATUS_SUCCESS != HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun))
    {
        DBG_Printf("set feature fail PU:%d Addr0x%x Data0x%x\n", tFlashAddr.ucPU, ucAddr, ulData);
200096ac:	dd0e21        	l32r	a2, 20000ae4 <_stext+0x3e4>
200096af:	080132        	l8ui	a3, a1, 8
200096b2:	91a042        	movi	a4, 145
200096b5:	0d5d      	mov.n	a5, a13
200096b7:	015ac5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:256
    }
    DBG_Printf("set feature OK PU:%d Addr0x%x Data0x%x\n", tFlashAddr.ucPU, ucAddr, ulData);
200096ba:	0d5d      	mov.n	a5, a13
200096bc:	dd0b21        	l32r	a2, 20000ae8 <_stext+0x3e8>
200096bf:	080132        	l8ui	a3, a1, 8
200096c2:	91a042        	movi	a4, 145
200096c5:	0159c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:259
    
    /* step2: sync reset to make flash reload trim file from ROM block */
    HAL_NfcSyncResetFlash(&tFlashAddr);
200096c8:	08c122        	addi	a2, a1, 8
200096cb:	dcdf01        	l32r	a0, 20000a48 <_stext+0x348>
200096ce:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
200096d1:	090132        	l8ui	a3, a1, 9
200096d4:	0801e2        	l8ui	a14, a1, 8
200096d7:	dc1141        	l32r	a4, 2000071c <_stext+0x1c>
200096da:	2efa      	add.n	a2, a14, a15
200096dc:	800222        	l8ui	a2, a2, 128
200096df:	3e2442        	l32i	a4, a4, 248
200096e2:	a02230        	addx4	a2, a2, a3
200096e5:	a02240        	addx4	a2, a2, a4
200096e8:	0020c0        	memw
200096eb:	000252        	l8ui	a5, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
200096ee:	0ee507        	bbsi	a5, 0, 20009700 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x3a8>
200096f1:	088076        	loop	a0, 200096fd <TEST_NfcMultiPlnEWR..CCB_1482204275+0x3a5>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:560
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetIdle(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
200096f4:	0020c0        	memw
200096f7:	000242        	l8ui	a4, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1101
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcWaitStatus(U8 ucPU, U8 ucLun)
{
    while (FALSE == HAL_NfcGetIdle(ucPU, ucLun))
200096fa:	02e407        	bbsi	a4, 0, 20009700 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x3a8>

200096fd <TEST_NfcMultiPlnEWR..CCB_1482204275+0x3a5>:
200096fd:	fffc06        	j	200096f1 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x399>

20009700 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x3a8>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1106
    {
        ;
    }

    if (TRUE == HAL_NfcGetErrHold(ucPU, ucLun))
20009700:	0e2d      	mov.n	a2, a14
20009702:	fafec5        	call0	200046f0 <HAL_NfcGetErrHold>
20009705:	081266        	bnei	a2, 1, 20009711 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x3b9>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:262
    if (NFC_STATUS_SUCCESS != HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun))
    {
        DBG_Printf("SYNC Reset PU:%d fail!\n", tFlashAddr.ucPU);
20009708:	dcf921        	l32r	a2, 20000aec <_stext+0x3ec>
2000970b:	080132        	l8ui	a3, a1, 8
2000970e:	015545        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:264
    }
    DBG_Printf("SYNC Reset PU:%d OK!\n", tFlashAddr.ucPU);
20009711:	dcf721        	l32r	a2, 20000af0 <_stext+0x3f0>
20009714:	080132        	l8ui	a3, a1, 8
20009717:	0154c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1879
    #ifdef FLASH_INTEL_3DTLC
        TEST_NfcSwitchFlashMode(tFlashAddr.ucPU);
    #endif
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
2000971a:	d50c52        	l8ui	a5, a12, 213
2000971d:	000102        	l8ui	a0, a1, 0
20009720:	023057        	bltu	a0, a5, 20009726 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x3ce>
20009723:	002586        	j	200097bd <TEST_NfcMultiPlnEWR..CCB_1482204275+0x465>
20009726:	d70c22        	l8ui	a2, a12, 215
20009729:	000406        	j	2000973d <TEST_NfcMultiPlnEWR..CCB_1482204275+0x3e5>

2000972c <TEST_NfcMultiPlnEWR..CCB_1482204275+0x3d4>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1882
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
2000972c:	d50c52        	l8ui	a5, a12, 213
2000972f:	152102        	l32i	a0, a1, 84
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1898
                {
                    HAL_NfcFullBlockErase(&tFlashAddr, g_bTlcMode);
                }
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
20009732:	001b      	addi.n	a0, a0, 1
20009734:	740000        	extui	a0, a0, 0, 8
20009737:	004102        	s8i	a0, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1879
    {
        tFlashAddr.ucPU = g_ucTestPuStart;
    #ifdef FLASH_INTEL_3DTLC
        TEST_NfcSwitchFlashMode(tFlashAddr.ucPU);
    #endif
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
2000973a:	7fb057        	bgeu	a0, a5, 200097bd <TEST_NfcMultiPlnEWR..CCB_1482204275+0x465>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1881
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
2000973d:	d60cd2        	l8ui	a13, a12, 214
20009740:	0141d2        	s8i	a13, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1882
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20009743:	ebbd27        	bgeu	a13, a2, 20009732 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x3da>
20009746:	156102        	s32i	a0, a1, 84
20009749:	742000        	extui	a2, a0, 0, 8
2000974c:	2f2a      	add.n	a2, a15, a2
2000974e:	146122        	s32i	a2, a1, 80
20009751:	000a46        	j	2000977e <TEST_NfcMultiPlnEWR..CCB_1482204275+0x426>

20009754 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x3fc>:
	...

20009755 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x3fd>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1888
            {
                while(TRUE == HAL_NfcGetFull(tFlashAddr.ucPU, tFlashAddr.ucLun))
                {
                    ;
                }
                if(TRUE == g_bSinglePln)
20009755:	232ce2        	l32i	a14, a12, 140
20009758:	0020c0        	memw
2000975b:	292c32        	l32i	a3, a12, 164
2000975e:	0020f0        	nop
20009761:	491326        	beqi	a3, 1, 200097ae <TEST_NfcMultiPlnEWR..CCB_1482204275+0x456>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1894
                {
                    HAL_NfcSingleBlockErase(&tFlashAddr, g_bTlcMode);
                }
                else
                {
                    HAL_NfcFullBlockErase(&tFlashAddr, g_bTlcMode);
20009764:	203ee0        	or	a3, a14, a14
20009767:	202110        	or	a2, a1, a1
2000976a:	dcb801        	l32r	a0, 20000a4c <_stext+0x34c>
2000976d:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1882
        TEST_NfcSwitchFlashMode(tFlashAddr.ucPU);
    #endif
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
20009770:	d70c22        	l8ui	a2, a12, 215
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1896
                }
                else
                {
                    HAL_NfcFullBlockErase(&tFlashAddr, g_bTlcMode);
                }
                tFlashAddr.ucLun++;
20009773:	dd1b      	addi.n	a13, a13, 1
20009775:	74d0d0        	extui	a13, a13, 0, 8
20009778:	0141d2        	s8i	a13, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1882
        TEST_NfcSwitchFlashMode(tFlashAddr.ucPU);
    #endif
        while (tFlashAddr.ucPU < g_ucTestPuEnd)
        {
            tFlashAddr.ucLun = g_ucTestLunStart;
            while (tFlashAddr.ucLun < g_ucTestLunEnd)
2000977b:	adbd27        	bgeu	a13, a2, 2000972c <TEST_NfcMultiPlnEWR..CCB_1482204275+0x3d4>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetFull(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
2000977e:	142122        	l32i	a2, a1, 80
20009781:	ac38      	l32i.n	a3, a12, 40
20009783:	800222        	l8ui	a2, a2, 128
20009786:	7440d0        	extui	a4, a13, 0, 8
20009789:	a02240        	addx4	a2, a2, a4
2000978c:	a02230        	addx4	a2, a2, a3
2000978f:	0020c0        	memw
20009792:	0002e2        	l8ui	a14, a2, 0
20009795:	0020f0        	nop
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1884
            {
                while(TRUE == HAL_NfcGetFull(tFlashAddr.ucPU, tFlashAddr.ucLun))
20009798:	b96e37        	bbci	a14, 3, 20009755 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x3fd>
2000979b:	f03d      	nop.n
2000979d:	088076        	loop	a0, 200097a9 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x451>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
200097a0:	0020c0        	memw
200097a3:	000232        	l8ui	a3, a2, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1884
200097a6:	ab6337        	bbci	a3, 3, 20009755 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x3fd>

200097a9 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x451>:
200097a9:	fffb86        	j	2000979b <TEST_NfcMultiPlnEWR..CCB_1482204275+0x443>

200097ac <TEST_NfcMultiPlnEWR..CCB_1482204275+0x454>:
	...

200097ae <TEST_NfcMultiPlnEWR..CCB_1482204275+0x456>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1890
                {
                    ;
                }
                if(TRUE == g_bSinglePln)
                {
                    HAL_NfcSingleBlockErase(&tFlashAddr, g_bTlcMode);
200097ae:	0e3d      	mov.n	a3, a14
200097b0:	012d      	mov.n	a2, a1
200097b2:	dca701        	l32r	a0, 20000a50 <_stext+0x350>
200097b5:	0000c0        	callx0	a0
200097b8:	ffed06        	j	20009770 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x418>

200097bb <TEST_NfcMultiPlnEWR..CCB_1482204275+0x463>:
	...

200097bd <TEST_NfcMultiPlnEWR..CCB_1482204275+0x465>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1901
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
        }
        /*    check nfc status by LUN as the basic unit    */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
200097bd:	d40c02        	l8ui	a0, a12, 212
200097c0:	004102        	s8i	a0, a1, 0
200097c3:	023057        	bltu	a0, a5, 200097c9 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x471>
200097c6:	ff98c6        	j	2000962d <TEST_NfcMultiPlnEWR..CCB_1482204275+0x2d5>
200097c9:	d70c22        	l8ui	a2, a12, 215
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1903
        {
            for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
200097cc:	d60cd2        	l8ui	a13, a12, 214
200097cf:	0141d2        	s8i	a13, a1, 1
200097d2:	3bbd27        	bgeu	a13, a2, 20009811 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x4b9>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1905
            {
                if(NFC_STATUS_SUCCESS != HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun))
200097d5:	203dd0        	or	a3, a13, a13
200097d8:	000122        	l8ui	a2, a1, 0
200097db:	fd7305        	call0	20006f0c <HAL_NfcWaitStatus>
200097de:	171226        	beqi	a2, 1, 200097f9 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x4a1>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1907
                {
                    DBG_Printf("PU%d LUN %d BLK%d Erase Fail!\n", tFlashAddr.ucPU, tFlashAddr.ucLun, tFlashAddr.usBlock);
200097e1:	dcc421        	l32r	a2, 20000af4 <_stext+0x3f4>
200097e4:	000132        	l8ui	a3, a1, 0
200097e7:	010142        	l8ui	a4, a1, 1
200097ea:	021152        	l16ui	a5, a1, 4
200097ed:	014745        	call0	2000ac64 <dbg_printf>
200097f0:	202110        	or	a2, a1, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1908
                    HAL_NfcResetLun(&tFlashAddr);//error handle, otherwise program other blk also will be fail
200097f3:	dc9801        	l32r	a0, 20000a54 <_stext+0x354>
200097f6:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1903
            tFlashAddr.ucPU++;
        }
        /*    check nfc status by LUN as the basic unit    */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
        {
            for (tFlashAddr.ucLun = g_ucTestLunStart; tFlashAddr.ucLun < g_ucTestLunEnd; tFlashAddr.ucLun++)
200097f9:	0101d2        	l8ui	a13, a1, 1
200097fc:	d70c22        	l8ui	a2, a12, 215
200097ff:	01cdd2        	addi	a13, a13, 1
20009802:	74d0d0        	extui	a13, a13, 0, 8
20009805:	0141d2        	s8i	a13, a1, 1
20009808:	c93d27        	bltu	a13, a2, 200097d5 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x47d>
2000980b:	000102        	l8ui	a0, a1, 0
2000980e:	d50c52        	l8ui	a5, a12, 213
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1901
                tFlashAddr.ucLun++;
            }
            tFlashAddr.ucPU++;
        }
        /*    check nfc status by LUN as the basic unit    */
        for (tFlashAddr.ucPU = g_ucTestPuStart; tFlashAddr.ucPU < g_ucTestPuEnd; tFlashAddr.ucPU++)
20009811:	001b      	addi.n	a0, a0, 1
20009813:	740000        	extui	a0, a0, 0, 8
20009816:	004102        	s8i	a0, a1, 0
20009819:	af3057        	bltu	a0, a5, 200097cc <TEST_NfcMultiPlnEWR..CCB_1482204275+0x474>
2000981c:	ff8346        	j	2000962d <TEST_NfcMultiPlnEWR..CCB_1482204275+0x2d5>

2000981f <TEST_NfcMultiPlnEWR..CCB_1482204275+0x4c7>:
	...

20009820 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x4c8>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:1236
        pWrReq->bsInjErrEn = TRUE;
        pWrReq->pErrInj    = &g_tErrInj;
    }
    else
    {
        pWrReq->pErrInj = NULL;
20009820:	020c      	movi.n	a2, 0
20009822:	b129      	s32i.n	a2, a1, 44
20009824:	ff0f06        	j	20009464 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x10c>

20009827 <TEST_NfcMultiPlnEWR..CCB_1482204275+0x4cf>:
	...

20009828 <TEST_NfcBasicTestPattern..EDB_1482204275>:
TEST_NfcBasicTestPattern():
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3658
Reference     :
History       :
    20160808    abby    create
****************************************************************************/
LOCAL void TEST_NfcBasicTestPattern(U8 ucPattId)
{   
20009828:	023d      	mov.n	a3, a2
2000982a:	e0c112        	addi	a1, a1, -32
2000982d:	6109      	s32i.n	a0, a1, 24
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3663
    U8 ucPattSel;
    LOCAL U32 l_ulLoop = 0;
    
    ucPattSel = ucPattId;        //next pattern ID sel
    ASSERT(ucPattSel < P_TYPE_CNT);
2000982f:	b01c      	movi.n	a0, 27
20009831:	1b3027        	bltu	a0, a2, 20009850 <TEST_NfcBasicTestPattern..EDB_1482204275+0x28>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3673
    {
        TEST_EMInit();
    }
#endif

    switch (ucPattSel)
20009834:	160c      	movi.n	a6, 1
20009836:	020c      	movi.n	a2, 0
20009838:	dcb001        	l32r	a0, 20000af8 <_stext+0x3f8>
2000983b:	f40c      	movi.n	a4, 15
2000983d:	fac372        	addi	a7, a3, -6
20009840:	11b747        	bgeu	a7, a4, 20009855 <TEST_NfcBasicTestPattern..EDB_1482204275+0x2d>
20009843:	dcae51        	l32r	a5, 20000afc <_stext+0x3fc>
20009846:	a05750        	addx4	a5, a7, a5
20009849:	0558      	l32i.n	a5, a5, 0
2000984b:	0005a0        	jx	a5

2000984e <TEST_NfcBasicTestPattern..EDB_1482204275+0x26>:
	...

20009850 <TEST_NfcBasicTestPattern..EDB_1482204275+0x28>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3663
{   
    U8 ucPattSel;
    LOCAL U32 l_ulLoop = 0;
    
    ucPattSel = ucPattId;        //next pattern ID sel
    ASSERT(ucPattSel < P_TYPE_CNT);
20009850:	ffff06        	j	20009850 <TEST_NfcBasicTestPattern..EDB_1482204275+0x28>

20009853 <TEST_NfcBasicTestPattern..EDB_1482204275+0x2b>:
	...

20009855 <TEST_NfcBasicTestPattern..EDB_1482204275+0x2d>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3770
        }break;
    #endif

        default:
        {
            DBG_Printf("Not support pattern ID %d\n", ucPattSel);
20009855:	dcaa21        	l32r	a2, 20000b00 <_stext+0x400>
20009858:	014085        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3771
            DBG_Getch();
2000985b:	dbaf01        	l32r	a0, 20000718 <_stext+0x18>
2000985e:	0000c0        	callx0	a0
20009861:	dca501        	l32r	a0, 20000af8 <_stext+0x3f8>
20009864:	dca871        	l32r	a7, 20000b04 <_stext+0x404>
20009867:	282022        	l32i	a2, a0, 160
2000986a:	0020c0        	memw
2000986d:	010222        	l8ui	a2, a2, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattQ.c:100
    return g_pPattStsQ->aPattStsQ[ucWptr];
}

LOCAL void TEST_NfcPattQSetSts(U8 ucPattId, U8 ucPattQSts)
{
    g_pPattStsQ->aPattStsQ[ucPattId] = ucPattQSts;
20009870:	272092        	l32i	a9, a0, 156
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattQ.c:193
{
    U8 ucRptr;
    ucRptr = TEST_NfcPattQGetRptr();
    ucRptr = (ucRptr + PATTQ_DEPTH - 1)%PATTQ_DEPTH;

    TEST_NfcPattQSetSts(ucRptr, BASIC_PATTQ_STS_INIT);
20009873:	221b      	addi.n	a2, a2, 1
20009875:	04b020        	extui	a11, a2, 0, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattQ.c:100
    return g_pPattStsQ->aPattStsQ[ucWptr];
}

LOCAL void TEST_NfcPattQSetSts(U8 ucPattId, U8 ucPattQSts)
{
    g_pPattStsQ->aPattStsQ[ucPattId] = ucPattQSts;
20009878:	60a0b0        	neg	a10, a11
2000987b:	b3ab20        	movgez	a10, a11, a2
2000987e:	74a0a0        	extui	a10, a10, 0, 8
20009881:	99aa      	add.n	a9, a9, a10
20009883:	0020c0        	memw
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3778
    }//end switch
    
    /* recycle pattern Q */
    TEST_NfcPattQRecycleEntry();
    
    DBG_Printf("NFC HAL TEST PASS %d BASIC PATT!\n\n",l_ulLoop++);
20009886:	dca021        	l32r	a2, 20000b08 <_stext+0x408>
20009889:	0738      	l32i.n	a3, a7, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattQ.c:100
2000988b:	080c      	movi.n	a8, 0
2000988d:	004982        	s8i	a8, a9, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3778
20009890:	631b      	addi.n	a6, a3, 1
20009892:	006762        	s32i	a6, a7, 0
20009895:	013cc5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3779
}
20009898:	6108      	l32i.n	a0, a1, 24
2000989a:	20c112        	addi	a1, a1, 32
2000989d:	f00d      	ret.n

2000989f <TEST_NfcBasicTestPattern..EDB_1482204275+0x77>:
	...

200098a0 <TEST_NfcBasicTestPattern..EDB_1482204275+0x78>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2187
    return;
}
BOOL TEST_IsTlcModeSupport(void)
{
#if (defined(FLASH_INTEL_3DTLC) || defined (FLASH_3D_MLC))
    if (g_bTlcMode)
200098a0:	172032        	l32i	a3, a0, 92
200098a3:	211316        	beqz	a3, 20009ab8 <TEST_NfcBasicTestPattern..EDB_1482204275+0x290>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2189
    { 
        DBG_Printf("Single plane operation only support SLC mode in this flash type!\n");
200098a6:	dc9921        	l32r	a2, 20000b0c <_stext+0x40c>
200098a9:	013b85        	call0	2000ac64 <dbg_printf>

200098ac <TEST_NfcBasicTestPattern..EDB_1482204275+0x84>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3678
    switch (ucPattSel)
    {
        case P_SINGLE_PLN :
        {
            TEST_NfcSinglePlnEWR();
            DBG_Printf("Single Plane EWR Pass!\n\n");
200098ac:	dc9921        	l32r	a2, 20000b10 <_stext+0x410>
200098af:	013b45        	call0	2000ac64 <dbg_printf>
200098b2:	dc9101        	l32r	a0, 20000af8 <_stext+0x3f8>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3679
        }break;
200098b5:	ffeac6        	j	20009864 <TEST_NfcBasicTestPattern..EDB_1482204275+0x3c>

200098b8 <TEST_NfcBasicTestPattern..EDB_1482204275+0x90>:
200098b8:	000000                                        ...

200098bb <TEST_NfcBasicTestPattern..EDB_1482204275+0x93>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3755
            DBG_Printf("READ STS Pass!\n\n");
        }break;

        case P_ERR_INJ_DEC_REP ://error injection and dec report
        {
            TEST_NfcErrInjDecRep();
200098bb:	fdfb45        	call0	20007870 <TEST_NfcErrInjDecRep..BDB_1482204275>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3756
            DBG_Printf("Err Inj and DEC STS Report Pass!\n\n");
200098be:	dc9521        	l32r	a2, 20000b14 <_stext+0x414>
200098c1:	013a05        	call0	2000ac64 <dbg_printf>
200098c4:	dc8d01        	l32r	a0, 20000af8 <_stext+0x3f8>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3757
        }break;
200098c7:	ffe646        	j	20009864 <TEST_NfcBasicTestPattern..EDB_1482204275+0x3c>

200098ca <TEST_NfcBasicTestPattern..EDB_1482204275+0xa2>:
200098ca:	000000                                        ...

200098cd <TEST_NfcBasicTestPattern..EDB_1482204275+0xa5>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3473
    FLASH_ADDR tFlashAddr = {0};

    tFlashAddr.ucPU = g_ucTestPuStart;
    tFlashAddr.ucLun = g_ucTestLunStart;
    tFlashAddr.usBlock = g_usTestBlkStart;
    tFlashAddr.usPage = g_usTestPageStart;
200098cd:	6010b2        	l16ui	a11, a0, 192
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3471
LOCAL void TEST_NfcReadStatus(void)
{
    FLASH_ADDR tFlashAddr = {0};

    tFlashAddr.ucPU = g_ucTestPuStart;
    tFlashAddr.ucLun = g_ucTestLunStart;
200098d0:	a600a2        	l8ui	a10, a0, 166
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3470
****************************************************************************/
LOCAL void TEST_NfcReadStatus(void)
{
    FLASH_ADDR tFlashAddr = {0};

    tFlashAddr.ucPU = g_ucTestPuStart;
200098d3:	a40092        	l8ui	a9, a0, 164
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3472
    tFlashAddr.ucLun = g_ucTestLunStart;
    tFlashAddr.usBlock = g_usTestBlkStart;
200098d6:	5e1032        	l16ui	a3, a0, 188
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3474
    tFlashAddr.usPage = g_usTestPageStart;
    tFlashAddr.bsSLCMode = !g_bTlcMode;
200098d9:	172042        	l32i	a4, a0, 92
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3468
History       :
    20160426    abby    create
****************************************************************************/
LOCAL void TEST_NfcReadStatus(void)
{
    FLASH_ADDR tFlashAddr = {0};
200098dc:	dc8f51        	l32r	a5, 20000b18 <_stext+0x418>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3474

    tFlashAddr.ucPU = g_ucTestPuStart;
    tFlashAddr.ucLun = g_ucTestLunStart;
    tFlashAddr.usBlock = g_usTestBlkStart;
    tFlashAddr.usPage = g_usTestPageStart;
    tFlashAddr.bsSLCMode = !g_bTlcMode;
200098df:	028d      	mov.n	a8, a2
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3468
History       :
    20160426    abby    create
****************************************************************************/
LOCAL void TEST_NfcReadStatus(void)
{
    FLASH_ADDR tFlashAddr = {0};
200098e1:	1578      	l32i.n	a7, a5, 4
200098e3:	0558      	l32i.n	a5, a5, 0
200098e5:	1179      	s32i.n	a7, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3474

    tFlashAddr.ucPU = g_ucTestPuStart;
    tFlashAddr.ucLun = g_ucTestLunStart;
    tFlashAddr.usBlock = g_usTestBlkStart;
    tFlashAddr.usPage = g_usTestPageStart;
    tFlashAddr.bsSLCMode = !g_bTlcMode;
200098e7:	838640        	moveqz	a8, a6, a4
200098ea:	0188c0        	slli	a8, a8, 20
200098ed:	db9571        	l32r	a7, 20000744 <_stext+0x44>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3468
History       :
    20160426    abby    create
****************************************************************************/
LOCAL void TEST_NfcReadStatus(void)
{
    FLASH_ADDR tFlashAddr = {0};
200098f0:	0159      	s32i.n	a5, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3472

    tFlashAddr.ucPU = g_ucTestPuStart;
    tFlashAddr.ucLun = g_ucTestLunStart;
    tFlashAddr.usBlock = g_usTestBlkStart;
200098f2:	025132        	s16i	a3, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3470
****************************************************************************/
LOCAL void TEST_NfcReadStatus(void)
{
    FLASH_ADDR tFlashAddr = {0};

    tFlashAddr.ucPU = g_ucTestPuStart;
200098f5:	004192        	s8i	a9, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3471
    tFlashAddr.ucLun = g_ucTestLunStart;
200098f8:	0141a2        	s8i	a10, a1, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3474
    tFlashAddr.usBlock = g_usTestBlkStart;
    tFlashAddr.usPage = g_usTestPageStart;
    tFlashAddr.bsSLCMode = !g_bTlcMode;
200098fb:	0158      	l32i.n	a5, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3473
    FLASH_ADDR tFlashAddr = {0};

    tFlashAddr.ucPU = g_ucTestPuStart;
    tFlashAddr.ucLun = g_ucTestLunStart;
    tFlashAddr.usBlock = g_usTestBlkStart;
    tFlashAddr.usPage = g_usTestPageStart;
200098fd:	0351b2        	s16i	a11, a1, 6
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3474
    tFlashAddr.bsSLCMode = !g_bTlcMode;
20009900:	105570        	and	a5, a5, a7
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3476

    for (tFlashAddr.bsPln = 0; tFlashAddr.bsPln < PLN_PER_LUN; tFlashAddr.bsPln++)
20009903:	dc8671        	l32r	a7, 20000b1c <_stext+0x41c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3474

    tFlashAddr.ucPU = g_ucTestPuStart;
    tFlashAddr.ucLun = g_ucTestLunStart;
    tFlashAddr.usBlock = g_usTestBlkStart;
    tFlashAddr.usPage = g_usTestPageStart;
    tFlashAddr.bsSLCMode = !g_bTlcMode;
20009906:	205580        	or	a5, a5, a8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3476

    for (tFlashAddr.bsPln = 0; tFlashAddr.bsPln < PLN_PER_LUN; tFlashAddr.bsPln++)
20009909:	105570        	and	a5, a5, a7
2000990c:	4159      	s32i.n	a5, a1, 16
2000990e:	0159      	s32i.n	a5, a1, 0
20009910:	355050        	extui	a5, a5, 16, 4
20009913:	5159      	s32i.n	a5, a1, 20
20009915:	1c45e6        	bgei	a5, 4, 20009935 <TEST_NfcBasicTestPattern..EDB_1482204275+0x10d>

20009918 <TEST_NfcBasicTestPattern..EDB_1482204275+0xf0>:
20009918:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3478
    {
        HAL_NfcSinglePlnReadSts(&tFlashAddr);
2000991a:	dc9001        	l32r	a0, 20000b5c <_stext+0x45c>
2000991d:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3476
    tFlashAddr.ucLun = g_ucTestLunStart;
    tFlashAddr.usBlock = g_usTestBlkStart;
    tFlashAddr.usPage = g_usTestPageStart;
    tFlashAddr.bsSLCMode = !g_bTlcMode;

    for (tFlashAddr.bsPln = 0; tFlashAddr.bsPln < PLN_PER_LUN; tFlashAddr.bsPln++)
20009920:	5188      	l32i.n	a8, a1, 20
20009922:	4198      	l32i.n	a9, a1, 16
20009924:	a81b      	addi.n	a10, a8, 1
20009926:	930a94        	insbits	a9, a10, 16, 19
20009929:	4199      	s32i.n	a9, a1, 16
2000992b:	0199      	s32i.n	a9, a1, 0
2000992d:	358090        	extui	a8, a9, 16, 4
20009930:	5189      	s32i.n	a8, a1, 20
20009932:	e248a6        	blti	a8, 4, 20009918 <TEST_NfcBasicTestPattern..EDB_1482204275+0xf0>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3750
        }break;
    
        case P_READ_STS :
        {
            TEST_NfcReadStatus();
            DBG_Printf("READ STS Pass!\n\n");
20009935:	dc7a21        	l32r	a2, 20000b20 <_stext+0x420>
20009938:	013285        	call0	2000ac64 <dbg_printf>
2000993b:	dc6f01        	l32r	a0, 20000af8 <_stext+0x3f8>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3751
        }break;
2000993e:	ffc886        	j	20009864 <TEST_NfcBasicTestPattern..EDB_1482204275+0x3c>

20009941 <TEST_NfcBasicTestPattern..EDB_1482204275+0x119>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2648
LOCAL void TEST_NfcReadRetry(void)
{
    g_bForceRetryEn = TRUE;
    
    /*  1 plane EWR  */
    if (!g_bTlcMode)
20009941:	1720b2        	l32i	a11, a0, 92
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2645
History:
    20160217   abby    create
------------------------------------------------------------------------------*/
LOCAL void TEST_NfcReadRetry(void)
{
    g_bForceRetryEn = TRUE;
20009944:	316062        	s32i	a6, a0, 196
20009947:	01db56        	bnez	a11, 20009968 <TEST_NfcBasicTestPattern..EDB_1482204275+0x140>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2650
    
    /*  1 plane EWR  */
    if (!g_bTlcMode)
    { 
        g_bSinglePln = TRUE;
2000994a:	0020c0        	memw
2000994d:	1d6062        	s32i	a6, a0, 116
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2652

        TEST_NfcEraseAll();
20009950:	fdcf45        	call0	20007648 <TEST_NfcEraseAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2653
        TEST_NfcWriteAll(SING_PLN_WRITE);
20009953:	00a022        	movi	a2, 0
20009956:	fda4c5        	call0	200073a4 <TEST_NfcWriteAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2655
        
        TEST_NfcReadAll(0, SEC_PER_PHYPG, SING_PLN_READ);
20009959:	020c      	movi.n	a2, 0
2000995b:	032c      	movi.n	a3, 32
2000995d:	040c      	movi.n	a4, 0
2000995f:	fd6005        	call0	20006f60 <TEST_NfcReadAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2656
        DBG_Printf("Single Plane Read Retry Done!\n");
20009962:	dc7021        	l32r	a2, 20000b24 <_stext+0x424>
20009965:	012fc5        	call0	2000ac64 <dbg_printf>

20009968 <TEST_NfcBasicTestPattern..EDB_1482204275+0x140>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2660
    }

    /*  Full plane EWR  */
    g_bSinglePln = FALSE;
20009968:	0020c0        	memw
2000996b:	dc6331        	l32r	a3, 20000af8 <_stext+0x3f8>
2000996e:	020c      	movi.n	a2, 0
20009970:	1d6322        	s32i	a2, a3, 116
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2662
    
    TEST_NfcEraseAll();
20009973:	fdcd45        	call0	20007648 <TEST_NfcEraseAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2663
    TEST_NfcWriteAll(FULL_PAGE_WRITE);
20009976:	120c      	movi.n	a2, 1
20009978:	fda285        	call0	200073a4 <TEST_NfcWriteAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2665
    
    TEST_NfcReadAll(0, SEC_PER_PIPE_PG, FULL_PAGE_READ);
2000997b:	020c      	movi.n	a2, 0
2000997d:	80a032        	movi	a3, 128
20009980:	240c      	movi.n	a4, 2
20009982:	fd5dc5        	call0	20006f60 <TEST_NfcReadAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2666
    DBG_Printf("Full Plane Read Retry Done!\n");
20009985:	dc6821        	l32r	a2, 20000b28 <_stext+0x428>
20009988:	012d85        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3744
        }break;
        
        case P_RETRY :
        {
            TEST_NfcReadRetry();
            DBG_Printf("Read Retry Pass!\n\n");
2000998b:	dc6821        	l32r	a2, 20000b2c <_stext+0x42c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2668
    TEST_NfcWriteAll(FULL_PAGE_WRITE);
    
    TEST_NfcReadAll(0, SEC_PER_PIPE_PG, FULL_PAGE_READ);
    DBG_Printf("Full Plane Read Retry Done!\n");

    g_bForceRetryEn = FALSE;
2000998e:	dc5a51        	l32r	a5, 20000af8 <_stext+0x3f8>
20009991:	040c      	movi.n	a4, 0
20009993:	316542        	s32i	a4, a5, 196
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3744
        }break;
        
        case P_RETRY :
        {
            TEST_NfcReadRetry();
            DBG_Printf("Read Retry Pass!\n\n");
20009996:	012cc5        	call0	2000ac64 <dbg_printf>
20009999:	dc5701        	l32r	a0, 20000af8 <_stext+0x3f8>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3745
        }break;
2000999c:	ffb106        	j	20009864 <TEST_NfcBasicTestPattern..EDB_1482204275+0x3c>

2000999f <TEST_NfcBasicTestPattern..EDB_1482204275+0x177>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3737
            DBG_Printf("PU Status BitMap Pass!\n\n");
        }break;

        case P_LUN_BITMAP :
        {
            TEST_NfcLunBitMap();
2000999f:	fdee85        	call0	20007888 <TEST_NfcLunBitMap..NCB_1482204275>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3738
            DBG_Printf("LUN Status BitMap Pass!\n\n");
200099a2:	dc6321        	l32r	a2, 20000b30 <_stext+0x430>
200099a5:	012bc5        	call0	2000ac64 <dbg_printf>
200099a8:	dc5401        	l32r	a0, 20000af8 <_stext+0x3f8>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3739
        }break;
200099ab:	ffad46        	j	20009864 <TEST_NfcBasicTestPattern..EDB_1482204275+0x3c>

200099ae <TEST_NfcBasicTestPattern..EDB_1482204275+0x186>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3731
            DBG_Printf("Red Dynamically Update to DRAM or OTFB Pass!\n\n");
        }break;

        case P_PU_BITMAP :
        {
            TEST_NfcPuBitMap();
200099ae:	fe26c5        	call0	20007c1c <TEST_NfcPuBitMap..MCB_1482204275>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3732
            DBG_Printf("PU Status BitMap Pass!\n\n");
200099b1:	dc6021        	l32r	a2, 20000b34 <_stext+0x434>
200099b4:	012ac5        	call0	2000ac64 <dbg_printf>
200099b7:	dc5001        	l32r	a0, 20000af8 <_stext+0x3f8>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3733
        }break;
200099ba:	ffa986        	j	20009864 <TEST_NfcBasicTestPattern..EDB_1482204275+0x3c>

200099bd <TEST_NfcBasicTestPattern..EDB_1482204275+0x195>:
	...

200099be <TEST_NfcBasicTestPattern..EDB_1482204275+0x196>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2483
    
    /* enable SSU  */
    g_bSsuEn = TRUE;

    eRedCaseSel = OTFB_W_OTFB_R;
    while (eRedCaseSel < SSU_RED_CASE_CNT)
200099be:	3129      	s32i.n	a2, a1, 12
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2477
#endif

    SSU_RED_UPDATE_SEL eRedCaseSel;

    /* disable RECC_EN in this case */
    rNfcPgCfg &= ~(1<<16);
200099c0:	dc4691        	l32r	a9, 20000ad8 <_stext+0x3d8>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3715
        
        case P_SSU_CS :
        {
            TEST_NfcSSUandCS();
            DBG_Printf("SSU & Cache Status Check Pass!\n\n");
        }break;
200099c3:	dc4681        	l32r	a8, 20000adc <_stext+0x3dc>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2477
#endif

    SSU_RED_UPDATE_SEL eRedCaseSel;

    /* disable RECC_EN in this case */
    rNfcPgCfg &= ~(1<<16);
200099c6:	0020c0        	memw
200099c9:	802872        	l32i	a7, a8, 0x200
200099cc:	107790        	and	a7, a7, a9
200099cf:	0020c0        	memw
200099d2:	806872        	s32i	a7, a8, 0x200
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2480
    
    /* enable SSU  */
    g_bSsuEn = TRUE;
200099d5:	2a6062        	s32i	a6, a0, 168

200099d8 <TEST_NfcBasicTestPattern..EDB_1482204275+0x1b0>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2486

    eRedCaseSel = OTFB_W_OTFB_R;
    while (eRedCaseSel < SSU_RED_CASE_CNT)
    {
        /* Erase */
        TEST_NfcEraseAll();
200099d8:	fdc6c5        	call0	20007648 <TEST_NfcEraseAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2491

        /* Write */
        g_bSsu0DramEn = ((U32)eRedCaseSel & 0x2) >> 1; //get 2nd bit of pattern sel
        g_bSsu1DramEn = ((U32)eRedCaseSel & 0x2) >> 1; //get 2nd bit of pattern sel
        TEST_NfcWriteAll(FULL_PAGE_WRITE);
200099db:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2489
    {
        /* Erase */
        TEST_NfcEraseAll();

        /* Write */
        g_bSsu0DramEn = ((U32)eRedCaseSel & 0x2) >> 1; //get 2nd bit of pattern sel
200099dd:	31b8      	l32i.n	a11, a1, 12
200099df:	dc4601        	l32r	a0, 20000af8 <_stext+0x3f8>
200099e2:	04b1b0        	extui	a11, a11, 1, 1
200099e5:	2b60b2        	s32i	a11, a0, 172
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2490
        g_bSsu1DramEn = ((U32)eRedCaseSel & 0x2) >> 1; //get 2nd bit of pattern sel
200099e8:	2c60b2        	s32i	a11, a0, 176
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2491
        TEST_NfcWriteAll(FULL_PAGE_WRITE);
200099eb:	fd9b85        	call0	200073a4 <TEST_NfcWriteAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2496
    
        /* Read */
        g_bSsu0DramEn = ((U32)eRedCaseSel & 0x1); //get 1st bit of pattern sel
        g_bSsu1DramEn = ((U32)eRedCaseSel & 0x1); //get 1st bit of pattern sel
        TEST_NfcReadAll(0, SEC_PER_PIPE_PG, FULL_PAGE_READ);
200099ee:	80a032        	movi	a3, 128
200099f1:	240c      	movi.n	a4, 2
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2494
        g_bSsu0DramEn = ((U32)eRedCaseSel & 0x2) >> 1; //get 2nd bit of pattern sel
        g_bSsu1DramEn = ((U32)eRedCaseSel & 0x2) >> 1; //get 2nd bit of pattern sel
        TEST_NfcWriteAll(FULL_PAGE_WRITE);
    
        /* Read */
        g_bSsu0DramEn = ((U32)eRedCaseSel & 0x1); //get 1st bit of pattern sel
200099f3:	3108      	l32i.n	a0, a1, 12
200099f5:	dc4021        	l32r	a2, 20000af8 <_stext+0x3f8>
200099f8:	040000        	extui	a0, a0, 0, 1
200099fb:	2b6202        	s32i	a0, a2, 172
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2495
        g_bSsu1DramEn = ((U32)eRedCaseSel & 0x1); //get 1st bit of pattern sel
200099fe:	2c6202        	s32i	a0, a2, 176
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2496
        TEST_NfcReadAll(0, SEC_PER_PIPE_PG, FULL_PAGE_READ);
20009a01:	020c      	movi.n	a2, 0
20009a03:	fd55c5        	call0	20006f60 <TEST_NfcReadAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2498

        eRedCaseSel++;
20009a06:	3128      	l32i.n	a2, a1, 12
20009a08:	221b      	addi.n	a2, a2, 1
20009a0a:	3129      	s32i.n	a2, a1, 12
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2483
    
    /* enable SSU  */
    g_bSsuEn = TRUE;

    eRedCaseSel = OTFB_W_OTFB_R;
    while (eRedCaseSel < SSU_RED_CASE_CNT)
20009a0c:	c84266        	bnei	a2, 4, 200099d8 <TEST_NfcBasicTestPattern..EDB_1482204275+0x1b0>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2504
    }
    
    /*    recover to default value    */
    g_bSsu0DramEn = FALSE;
    g_bSsu1DramEn = FALSE;
    g_bSsuEn = FALSE;
20009a0f:	dc3a71        	l32r	a7, 20000af8 <_stext+0x3f8>
20009a12:	060c      	movi.n	a6, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2502

        eRedCaseSel++;
    }
    
    /*    recover to default value    */
    g_bSsu0DramEn = FALSE;
20009a14:	2b6762        	s32i	a6, a7, 172
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2503
    g_bSsu1DramEn = FALSE;
20009a17:	2c6762        	s32i	a6, a7, 176
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2504
    g_bSsuEn = FALSE;
20009a1a:	2a6762        	s32i	a6, a7, 168
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2507

    /* enable RECC_EN after this case */
    rNfcPgCfg |= (1<<16);
20009a1d:	db6751        	l32r	a5, 200007bc <_stext+0xbc>
20009a20:	0020c0        	memw
20009a23:	dc2e41        	l32r	a4, 20000adc <_stext+0x3dc>
20009a26:	802432        	l32i	a3, a4, 0x200
20009a29:	203350        	or	a3, a3, a5
20009a2c:	0020c0        	memw
20009a2f:	806432        	s32i	a3, a4, 0x200
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3720
        }break;

        case P_SSU_UPDATE :
        {
            TEST_NfcSSUDynamUpdate();
            DBG_Printf("SSU Dynamically Update to DRAM Check Pass!\n\n");
20009a32:	dc4121        	l32r	a2, 20000b38 <_stext+0x438>
20009a35:	0122c5        	call0	2000ac64 <dbg_printf>
20009a38:	dc3001        	l32r	a0, 20000af8 <_stext+0x3f8>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3721
        }break;
20009a3b:	ff8946        	j	20009864 <TEST_NfcBasicTestPattern..EDB_1482204275+0x3c>

20009a3e <TEST_NfcBasicTestPattern..EDB_1482204275+0x216>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3725

        case P_RED_UPDATE :
        {
            TEST_NfcRedDynamUpdate();
20009a3e:	fe4405        	call0	20007e80 <TEST_NfcRedDynamUpdate..KCB_1482204275>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3726
            DBG_Printf("Red Dynamically Update to DRAM or OTFB Pass!\n\n");
20009a41:	dc3e21        	l32r	a2, 20000b3c <_stext+0x43c>
20009a44:	0121c5        	call0	2000ac64 <dbg_printf>
20009a47:	dc2c01        	l32r	a0, 20000af8 <_stext+0x3f8>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3727
        }break;
20009a4a:	ff8586        	j	20009864 <TEST_NfcBasicTestPattern..EDB_1482204275+0x3c>

20009a4d <TEST_NfcBasicTestPattern..EDB_1482204275+0x225>:
	...

20009a4e <TEST_NfcBasicTestPattern..EDB_1482204275+0x226>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3713
            DBG_Printf("RED Only Read Pass!\n\n");
        }break;
        
        case P_SSU_CS :
        {
            TEST_NfcSSUandCS();
20009a4e:	fe5605        	call0	20007fb0 <TEST_NfcSSUandCS..ICB_1482204275>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3714
            DBG_Printf("SSU & Cache Status Check Pass!\n\n");
20009a51:	dc3b21        	l32r	a2, 20000b40 <_stext+0x440>
20009a54:	0120c5        	call0	2000ac64 <dbg_printf>
20009a57:	dc2801        	l32r	a0, 20000af8 <_stext+0x3f8>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3715
        }break;
20009a5a:	ff8186        	j	20009864 <TEST_NfcBasicTestPattern..EDB_1482204275+0x3c>

20009a5d <TEST_NfcBasicTestPattern..EDB_1482204275+0x235>:
	...

20009a5e <TEST_NfcBasicTestPattern..EDB_1482204275+0x236>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3707
            DBG_Printf("Change Column Read Pass!\n\n");
        }break;
    
        case P_RED_ONLY_READ:
        {
            TEST_NfcRedOnlyRead();
20009a5e:	fea685        	call0	200084c8 <TEST_NfcRedOnlyRead..HCB_1482204275>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3708
            DBG_Printf("RED Only Read Pass!\n\n");
20009a61:	dc3821        	l32r	a2, 20000b44 <_stext+0x444>
20009a64:	011fc5        	call0	2000ac64 <dbg_printf>
20009a67:	dc2401        	l32r	a0, 20000af8 <_stext+0x3f8>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3709
        }break;
20009a6a:	ff7d86        	j	20009864 <TEST_NfcBasicTestPattern..EDB_1482204275+0x3c>

20009a6d <TEST_NfcBasicTestPattern..EDB_1482204275+0x245>:
	...

20009a6e <TEST_NfcBasicTestPattern..EDB_1482204275+0x246>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3701
            DBG_Printf("Single Plane Change Column Read Pass!\n\n");
        }break;

        case P_CHANGE_COL_READ :
        {
            TEST_NfcChangeColumnRead();
20009a6e:	fef245        	call0	20008994 <TEST_NfcChangeColumnRead..FCB_1482204275>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3702
            DBG_Printf("Change Column Read Pass!\n\n");
20009a71:	dc3521        	l32r	a2, 20000b48 <_stext+0x448>
20009a74:	011ec5        	call0	2000ac64 <dbg_printf>
20009a77:	dc2001        	l32r	a0, 20000af8 <_stext+0x3f8>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3703
        }break;
20009a7a:	ff7986        	j	20009864 <TEST_NfcBasicTestPattern..EDB_1482204275+0x3c>

20009a7d <TEST_NfcBasicTestPattern..EDB_1482204275+0x255>:
20009a7d:	000000                                        ...

20009a80 <TEST_NfcBasicTestPattern..EDB_1482204275+0x258>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2284
History       :
    20160308    abby    create
****************************************************************************/
LOCAL void TEST_NfcSinglePlnCCLRead(void)
{
    if (g_bTlcMode)
20009a80:	172082        	l32i	a8, a0, 92
20009a83:	05d816        	beqz	a8, 20009ae4 <TEST_NfcBasicTestPattern..EDB_1482204275+0x2bc>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2286
    { 
        DBG_Printf("Single plane operation only support SLC mode in 3D flash!\n");
20009a86:	dc3121        	l32r	a2, 20000b4c <_stext+0x44c>
20009a89:	011d85        	call0	2000ac64 <dbg_printf>

20009a8c <TEST_NfcBasicTestPattern..EDB_1482204275+0x264>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3696
        }break;
        
        case P_SING_PLN_CCL_READ :
        {
            TEST_NfcSinglePlnCCLRead();
            DBG_Printf("Single Plane Change Column Read Pass!\n\n");
20009a8c:	dc3121        	l32r	a2, 20000b50 <_stext+0x450>
20009a8f:	011d45        	call0	2000ac64 <dbg_printf>
20009a92:	dc1901        	l32r	a0, 20000af8 <_stext+0x3f8>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3697
        }break;
20009a95:	ff72c6        	j	20009864 <TEST_NfcBasicTestPattern..EDB_1482204275+0x3c>

20009a98 <TEST_NfcBasicTestPattern..EDB_1482204275+0x270>:
	...

20009a9a <TEST_NfcBasicTestPattern..EDB_1482204275+0x272>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3689
            DBG_Printf("Multi Plane EWR Pass!\n\n");
        }break;

        case P_PART_READ :
        {
            TEST_NfcPartialRead();
20009a9a:	ff3dc5        	call0	20008e78 <TEST_NfcPartialRead..GCB_1482204275>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3690
            DBG_Printf("Partial Read Pass!\n\n");
20009a9d:	dc2d21        	l32r	a2, 20000b54 <_stext+0x454>
20009aa0:	011c05        	call0	2000ac64 <dbg_printf>
20009aa3:	dc1501        	l32r	a0, 20000af8 <_stext+0x3f8>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3691
        }break;
20009aa6:	ff6e86        	j	20009864 <TEST_NfcBasicTestPattern..EDB_1482204275+0x3c>

20009aa9 <TEST_NfcBasicTestPattern..EDB_1482204275+0x281>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3683
            DBG_Printf("Single Plane EWR Pass!\n\n");
        }break;

        case P_MULTI_PLN :
        {
            TEST_NfcMultiPlnEWR();
20009aa9:	ff8ac5        	call0	20009358 <TEST_NfcMultiPlnEWR..CCB_1482204275>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3684
            DBG_Printf("Multi Plane EWR Pass!\n\n");
20009aac:	dc2b21        	l32r	a2, 20000b58 <_stext+0x458>
20009aaf:	011b45        	call0	2000ac64 <dbg_printf>
20009ab2:	dc1101        	l32r	a0, 20000af8 <_stext+0x3f8>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:3685
        }break;
20009ab5:	ff6ac6        	j	20009864 <TEST_NfcBasicTestPattern..EDB_1482204275+0x3c>

20009ab8 <TEST_NfcBasicTestPattern..EDB_1482204275+0x290>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2213
    if (TRUE != TEST_IsTlcModeSupport())
    { 
        return;
    }

    g_bSinglePln = TRUE;
20009ab8:	0020c0        	memw
20009abb:	209000        	or	a9, a0, a0
20009abe:	1d6962        	s32i	a6, a9, 116
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2216
    
    //Erase
    TEST_NfcEraseAll();
20009ac1:	fdb845        	call0	20007648 <TEST_NfcEraseAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2219
    
    //Program
    TEST_NfcWriteAll(SING_PLN_WRITE);
20009ac4:	020c      	movi.n	a2, 0
20009ac6:	fd8dc5        	call0	200073a4 <TEST_NfcWriteAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2222

    //Read
    TEST_NfcReadAll(0, SEC_PER_PHYPG, SING_PLN_READ);
20009ac9:	020c      	movi.n	a2, 0
20009acb:	20a032        	movi	a3, 32
20009ace:	00a042        	movi	a4, 0
20009ad1:	fd48c5        	call0	20006f60 <TEST_NfcReadAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2224

    g_bSinglePln = FALSE;
20009ad4:	0020c0        	memw
20009ad7:	dc08b1        	l32r	a11, 20000af8 <_stext+0x3f8>
20009ada:	0a0c      	movi.n	a10, 0
20009adc:	1d6ba2        	s32i	a10, a11, 116
20009adf:	ff7246        	j	200098ac <TEST_NfcBasicTestPattern..EDB_1482204275+0x84>

20009ae2 <TEST_NfcBasicTestPattern..EDB_1482204275+0x2ba>:
	...

20009ae4 <TEST_NfcBasicTestPattern..EDB_1482204275+0x2bc>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2293
    }

    U8 ucSecStart;
    U16 usSecLen;
    
    g_bSinglePln = TRUE;
20009ae4:	0020c0        	memw
20009ae7:	1d6062        	s32i	a6, a0, 116
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2296
    
    /*     full block erase    */
    TEST_NfcEraseAll();
20009aea:	fdb5c5        	call0	20007648 <TEST_NfcEraseAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2299

    /*     write whole page    */
    TEST_NfcWriteAll(SING_PLN_WRITE);
20009aed:	00a022        	movi	a2, 0
20009af0:	fd8b05        	call0	200073a4 <TEST_NfcWriteAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2302

    /*     change column read read range depends on sector address    */
    for (ucSecStart = 0; ucSecStart < SEC_PER_PHYPG; )
20009af3:	00a032        	movi	a3, 0
20009af6:	2139      	s32i.n	a3, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2307
    {
        /* change column read    */
        usSecLen = SEC_PER_PHYPG - ucSecStart;
        //DBG_Printf("Single Pln Change Column Read Start Sec%d, Sec Length%d;\n",ucSecStart, usSecLen);
        TEST_NfcReadAll(ucSecStart, usSecLen, SING_PLN_CCL_READ);
20009af8:	01a042        	movi	a4, 1
20009afb:	022122        	l32i	a2, a1, 8
20009afe:	20a032        	movi	a3, 32
20009b01:	c03320        	sub	a3, a3, a2
20009b04:	f43030        	extui	a3, a3, 0, 16
20009b07:	fd4585        	call0	20006f60 <TEST_NfcReadAll>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2308
        ucSecStart = ucSecStart + 15;
20009b0a:	2148      	l32i.n	a4, a1, 8
20009b0c:	54fb      	addi.n	a5, a4, 15
20009b0e:	744050        	extui	a4, a5, 0, 8
20009b11:	2149      	s32i.n	a4, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2302

    /*     write whole page    */
    TEST_NfcWriteAll(SING_PLN_WRITE);

    /*     change column read read range depends on sector address    */
    for (ucSecStart = 0; ucSecStart < SEC_PER_PHYPG; )
20009b13:	e1c4b6        	bltui	a4, 32, 20009af8 <TEST_NfcBasicTestPattern..EDB_1482204275+0x2d0>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcFuncBasic.c:2311
        //DBG_Printf("Single Pln Change Column Read Start Sec%d, Sec Length%d;\n",ucSecStart, usSecLen);
        TEST_NfcReadAll(ucSecStart, usSecLen, SING_PLN_CCL_READ);
        ucSecStart = ucSecStart + 15;
    }

    g_bSinglePln = FALSE;
20009b16:	0020c0        	memw
20009b19:	dbf771        	l32r	a7, 20000af8 <_stext+0x3f8>
20009b1c:	060c      	movi.n	a6, 0
20009b1e:	1d6762        	s32i	a6, a7, 116
20009b21:	ffd9c6        	j	20009a8c <TEST_NfcBasicTestPattern..EDB_1482204275+0x264>

20009b24 <TEST_NfcExtPattRun>:
TEST_NfcExtPattRun():
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_EXT/TEST_NfcFuncExt.c:51
#endif
}

void TEST_NfcExtPattRun(void)
{
    g_aStartTimer[L3_ONE_CMD_PERF] = TEST_NfcStartOneCMDPerfTimer();
20009b24:	dc0f21        	l32r	a2, 20000b60 <_stext+0x460>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_EXT/TEST_NfcFuncExt.c:50
    }
#endif
}

void TEST_NfcExtPattRun(void)
{
20009b27:	e0c112        	addi	a1, a1, -32
20009b2a:	066102        	s32i	a0, a1, 24
20009b2d:	71c9      	s32i.n	a12, a1, 28
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_EXT/TEST_NfcFuncExt.c:51
    g_aStartTimer[L3_ONE_CMD_PERF] = TEST_NfcStartOneCMDPerfTimer();
20009b2f:	000c      	movi.n	a0, 0
20009b31:	7f6202        	s32i	a0, a2, 0x1fc
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:638
    U32 ulStatus;

    //////////////////////////////////////////////////////////////////////////////////////
    // Response the highest prority system event from the higher layer.
    //////////////////////////////////////////////////////////////////////////////////////
    ulStatus = L3_SchEventHandler();
20009b34:	fbb485        	call0	20005680 <L3_SchEventHandler..BH_1482204275>
20009b37:	fdc232        	addi	a3, a2, -3
20009b3a:	176316        	beqz	a3, 20009cb4 <TEST_NfcExtPattRun+0x190>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:652
    // 1. The order of FCMDQ selection: CH -> PPU -> CE -> LUN -> HighPriQ -> LowPriQ,  //
    // this can make the wholechip to get the highest performance.                      //
    // 2. There are two kinds of fcmd, the one is need to trigger nfc, another will not //
    // trigger nfc.                                                                     //
    //////////////////////////////////////////////////////////////////////////////////////
    ucTLun = L3_SchSelTLun(ARB_BMP_POPREQ);
20009b3d:	00a022        	movi	a2, 0
20009b40:	fb8a85        	call0	200053ec <L3_SchSelTLun..AH_1482204275>
20009b43:	ffa042        	movi	a4, 255
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:653
    if (INVALID_2F != ucTLun)
20009b46:	021247        	beq	a2, a4, 20009b4c <TEST_NfcExtPattRun+0x28>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:655
    {
        L3_IFPopFCmdQ(ucTLun);
20009b49:	fb7cc5        	call0	20005318 <L3_IFPopFCmdQ>

20009b4c <TEST_NfcExtPattRun+0x28>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:661
    }  

    //////////////////////////////////////////////////////////////////////////////////////
    // The fcmd needs redo or multi-step execution, which needs L3 handle it;           //
    //////////////////////////////////////////////////////////////////////////////////////
    ucTLun = L3_SchSelTLun(ARB_BMP_PEND);
20009b4c:	01a022        	movi	a2, 1
20009b4f:	fb89c5        	call0	200053ec <L3_SchSelTLun..AH_1482204275>
20009b52:	daf431        	l32r	a3, 20000724 <_stext+0x24>
20009b55:	daf1c1        	l32r	a12, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:662
    if (INVALID_2F != ucTLun)
20009b58:	ffa002        	movi	a0, 255
20009b5b:	029207        	bne	a2, a0, 20009b61 <TEST_NfcExtPattRun+0x3d>
20009b5e:	002286        	j	20009bec <TEST_NfcExtPattRun+0xc8>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
20009b61:	807230        	add	a7, a2, a3
20009b64:	800772        	l8ui	a7, a7, 128
20009b67:	3e2c52        	l32i	a5, a12, 248
20009b6a:	1177c0        	slli	a7, a7, 4
20009b6d:	557a      	add.n	a5, a5, a7
20009b6f:	0020c0        	memw
20009b72:	000552        	l8ui	a5, a5, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1835
    if (TRUE == HAL_NfcGetFull(L3_GET_PU(ucTLun), L3_GET_LUN_IN_PU(ucTLun)))
    {
        return;
    }

    ucCurPptr = L3_FCMDQGetIntrPptr(ucTLun, FALSE);
20009b75:	1192e0        	slli	a9, a2, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1830
    U8 ucCurPptr, ucNxtPptr;
    BOOL bResult;
    FCMD_INTR_CTRL_ENTRY *ptCtrlEntry;
    
    // Before send fcmd, we need to make sure that the nfcq is not full.
    if (TRUE == HAL_NfcGetFull(L3_GET_PU(ucTLun), L3_GET_LUN_IN_PU(ucTLun)))
20009b78:	70e537        	bbsi	a5, 3, 20009bec <TEST_NfcExtPattRun+0xc8>
20009b7b:	3129      	s32i.n	a2, a1, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1835
    {
        return;
    }

    ucCurPptr = L3_FCMDQGetIntrPptr(ucTLun, FALSE);
20009b7d:	1e2c82        	l32i	a8, a12, 120
20009b80:	4199      	s32i.n	a9, a1, 16
20009b82:	a08280        	addx4	a8, a2, a8
20009b85:	020882        	l8ui	a8, a8, 2
20009b88:	5189      	s32i.n	a8, a1, 20
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:555
20009b8a:	4a48f6        	bgeui	a8, 4, 20009bd8 <TEST_NfcExtPattRun+0xb4>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1841
    ptCtrlEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucCurPptr, FALSE);

    #ifdef SIM
    L3_DbgFCmdCntDec(ptCtrlEntry);
    #endif
    bResult = L3_IFSendFCmd(ptCtrlEntry);    
20009b8d:	a02880        	addx4	a2, a8, a8
20009b90:	3148      	l32i.n	a4, a1, 12
20009b92:	1a2c32        	l32i	a3, a12, 104
20009b95:	a04440        	addx4	a4, a4, a4
20009b98:	1144b0        	slli	a4, a4, 5
20009b9b:	803340        	add	a3, a3, a4
20009b9e:	b02230        	addx8	a2, a2, a3
20009ba1:	fb4305        	call0	20004fd4 <L3_IFSendFCmd>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1843

    if (TRUE == bResult)
20009ba4:	441266        	bnei	a2, 1, 20009bec <TEST_NfcExtPattRun+0xc8>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:436
==============================================================================*/
void L3_FCMDQSetIntrPptr(U8 ucTLun, U8 ucPptr, BOOL bBak)
{
    FCMD_INTR_DPTR *ptDptr;

    ASSERT(INVALID_DPTR == ucPptr || NFCQ_DEPTH > ucPptr);
20009ba7:	480c      	movi.n	a8, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1846
    {        
        ucNxtPptr = (ucCurPptr+1) % NFCQ_DEPTH;
        ucNxtPptr = (ucNxtPptr == L3_FCMDQGetIntrWptr(ucTLun, FALSE)) ? INVALID_DPTR : ucNxtPptr;
20009ba9:	4168      	l32i.n	a6, a1, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:436
20009bab:	5178      	l32i.n	a7, a1, 20
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1846
20009bad:	1e2c52        	l32i	a5, a12, 120
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:436
20009bb0:	771b      	addi.n	a7, a7, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1846
20009bb2:	556a      	add.n	a5, a5, a6
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:436
20009bb4:	f27780        	rems	a7, a7, a8
20009bb7:	747070        	extui	a7, a7, 0, 8
20009bba:	ffa062        	movi	a6, 255
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1846
20009bbd:	000582        	l8ui	a8, a5, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:436
20009bc0:	060d      	mov.n	a0, a6
20009bc2:	c08870        	sub	a8, a8, a7
20009bc5:	930780        	movnez	a0, a7, a8
20009bc8:	c06060        	sub	a6, a0, a6
20009bcb:	131616        	beqz	a6, 20009d00 <TEST_NfcExtPattRun+0x1dc>
20009bce:	0240f6        	bgeui	a0, 4, 20009bd4 <TEST_NfcExtPattRun+0xb0>
20009bd1:	004ac6        	j	20009d00 <TEST_NfcExtPattRun+0x1dc>
20009bd4:	ffff06        	j	20009bd4 <TEST_NfcExtPattRun+0xb0>

20009bd7 <TEST_NfcExtPattRun+0xb3>:
	...

20009bd8 <TEST_NfcExtPattRun+0xb4>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:555
==============================================================================*/
FCMD_INTR_CTRL_ENTRY *L3_FCMDQGetIntrCtrlEntry(U8 ucTLun, U8 ucLevel, BOOL bBak)
{
    FCMD_INTR_CTRL *ptCtrl;
    
    ASSERT(ucLevel < NFCQ_DEPTH);
20009bd8:	ffff06        	j	20009bd8 <TEST_NfcExtPattRun+0xb4>

20009bdb <TEST_NfcExtPattRun+0xb7>:
	...

20009bdd <TEST_NfcExtPattRun+0xb9>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:283
void L3_SchClrStsBit(U8 ucTLun, STS_BITMAP_TYPE eStsBmpType)
{
    U8 ucPU = L3_GET_PU(ucTLun);
    U8 ucLunInPU = L3_GET_LUN_IN_PU(ucTLun);

    l_aTLunStsBmp[eStsBmpType][ucLunInPU] &= ~(1 << ucPU);
20009bdd:	0020c0        	memw
20009be0:	7f2382        	l32i	a8, a3, 0x1fc
20009be3:	108820        	and	a8, a8, a2
20009be6:	0020c0        	memw
20009be9:	7f6382        	s32i	a8, a3, 0x1fc
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:675
    // 1. The request which needs check the process status, the status address can't be //
    // updated auto by nfc;                                                             //
    // 2. The request which needs check the red info, and the red-info address can't be //
    // updated auto by nfc;                                                             //
    //////////////////////////////////////////////////////////////////////////////////////
    ucTLun = L3_SchSelTLun(ARB_BMP_RECYCLE);
20009bec:	220c      	movi.n	a2, 2
20009bee:	fb7fc5        	call0	200053ec <L3_SchSelTLun..AH_1482204275>
20009bf1:	020d      	mov.n	a0, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:676
    if (INVALID_2F != ucTLun)
20009bf3:	ffa092        	movi	a9, 255
20009bf6:	029297        	bne	a2, a9, 20009bfc <TEST_NfcExtPattRun+0xd8>
20009bf9:	002446        	j	20009c8e <TEST_NfcExtPattRun+0x16a>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:678
    {
        L3_IFRecycleFCmdQ(ucTLun);
20009bfc:	1e2c22        	l32i	a2, a12, 120
20009bff:	a02020        	addx4	a2, a0, a2
20009c02:	010222        	l8ui	a2, a2, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:555
20009c05:	0242b6        	bltui	a2, 4, 20009c0b <TEST_NfcExtPattRun+0xe7>
20009c08:	002d06        	j	20009cc0 <TEST_NfcExtPattRun+0x19c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1915
{
    U8 ucRptr;
    FCMD_INTR_CTRL_ENTRY *ptCtrlEntry;

    ucRptr = L3_FCMDQGetIntrRptr(ucTLun, FALSE);
    ptCtrlEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucRptr, FALSE);
20009c0b:	a03220        	addx4	a3, a2, a2
20009c0e:	1a2c42        	l32i	a4, a12, 104
20009c11:	a05000        	addx4	a5, a0, a0
20009c14:	1155b0        	slli	a5, a5, 5
20009c17:	445a      	add.n	a4, a4, a5
20009c19:	b03340        	addx8	a3, a3, a4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1724
BOOL L3_IFIsFCmdFinished(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    BOOL bFinish;
    U8 ucTLun;

    ucTLun = ptCtrlEntry->ptReqEntry->bsTLun;
20009c1c:	0328      	l32i.n	a2, a3, 0
20009c1e:	1358      	l32i.n	a5, a3, 4
20009c20:	000262        	l8ui	a6, a2, 0
20009c23:	155e50        	extui	a5, a5, 30, 2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:687
    U8 ucPhyPU;
    BOOL bFinishFlag = FALSE;

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);

    if (0 == ucLevel)
20009c26:	09e516        	beqz	a5, 20009cc8 <TEST_NfcExtPattRun+0x1a4>
20009c29:	750b      	addi.n	a7, a5, -1
20009c2b:	0b5716        	beqz	a7, 20009ce4 <TEST_NfcExtPattRun+0x1c0>
20009c2e:	fec582        	addi	a8, a5, -2
20009c31:	11b816        	beqz	a8, 20009d50 <TEST_NfcExtPattRun+0x22c>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:699
    }
    else if (2 == ucLevel)
    {
        bFinishFlag = (BOOL)g_pNfcCmdSts->aNfcqCmdStsReg[ucPhyPU][ucLun].bsFsLv2;
    }
    else if(3 == ucLevel)
20009c34:	503566        	bnei	a5, 3, 20009c88 <TEST_NfcExtPattRun+0x164>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:701
    {
        bFinishFlag = (BOOL)g_pNfcCmdSts->aNfcqCmdStsReg[ucPhyPU][ucLun].bsFsLv3;
20009c37:	dabb71        	l32r	a7, 20000724 <_stext+0x24>
20009c3a:	767a      	add.n	a7, a6, a7
20009c3c:	800772        	l8ui	a7, a7, 128
20009c3f:	3e2c52        	l32i	a5, a12, 248
20009c42:	1177c0        	slli	a7, a7, 4
20009c45:	557a      	add.n	a5, a5, a7
20009c47:	0020c0        	memw
20009c4a:	030552        	l8ui	a5, a5, 3
20009c4d:	415750        	srli	a5, a5, 7
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1917
    FCMD_INTR_CTRL_ENTRY *ptCtrlEntry;

    ucRptr = L3_FCMDQGetIntrRptr(ucTLun, FALSE);
    ptCtrlEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucRptr, FALSE);
    
    if (TRUE == L3_IFIsFCmdFinished(ptCtrlEntry))
20009c50:	3a1566        	bnei	a5, 1, 20009c8e <TEST_NfcExtPattRun+0x16a>
20009c53:	2129      	s32i.n	a2, a1, 8
20009c55:	1139      	s32i.n	a3, a1, 4
20009c57:	006102        	s32i	a0, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:126

// Use this to detect some special commands, such as the command containing XOR data of SLC write,
// the 1st program stage of the command containing XOR data of TLC write.
BOOL L3_IsDataDisperse(const FCMD_REQ_ENTRY *ptReqEntry)
{
    ASSERT(ptReqEntry != NULL);
20009c5a:	066216        	beqz	a2, 20009cc4 <TEST_NfcExtPattRun+0x1a0>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:128

    if ((TRUE == L3_IsNeedDoXor(ptReqEntry)) && (TRUE == ptReqEntry->bsContainXorData))
20009c5d:	f91785        	call0	20002dd8 <L3_IsNeedDoXor>
20009c60:	ffc282        	addi	a8, a2, -1
20009c63:	105816        	beqz	a8, 20009d6c <TEST_NfcExtPattRun+0x248>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1744
==============================================================================*/
LOCAL void L3_IFUpdtRedData(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U8 ucTLun;
    U32 *pSrcData, *pDstData;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
20009c66:	1108      	l32i.n	a0, a1, 4
20009c68:	0008      	l32i.n	a0, a0, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1746

    if (FCMD_REQ_TYPE_READ != ptReqEntry->bsReqType || 0 == ptReqEntry->ulSpareAddr)
20009c6a:	0058      	l32i.n	a5, a0, 0
20009c6c:	259250        	extui	a9, a5, 18, 3
20009c6f:	990b      	addi.n	a9, a9, -1
20009c71:	11f916        	beqz	a9, 20009d94 <TEST_NfcExtPattRun+0x270>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1931
            }
        }
        else
        {
            L3_IFUpdtRedData(ptCtrlEntry);     
            L3_IFUpdtReqStatus(ptCtrlEntry);
20009c74:	012122        	l32i	a2, a1, 4
20009c77:	fb0c05        	call0	20004d38 <L3_IFUpdtReqStatus>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1932
            L3_FCMDQSetIntrRptr(ucTLun, INVALID_DPTR, FALSE);   
20009c7a:	002122        	l32i	a2, a1, 0
20009c7d:	ffa032        	movi	a3, 255
20009c80:	040c      	movi.n	a4, 0
20009c82:	fb0385        	call0	20004cbc <L3_FCMDQSetIntrRptr>
20009c85:	000146        	j	20009c8e <TEST_NfcExtPattRun+0x16a>

20009c88 <TEST_NfcExtPattRun+0x164>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:705
    }
    else
    {
        DBG_Getch();
20009c88:	daa401        	l32r	a0, 20000718 <_stext+0x18>
20009c8b:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:684
    }

    //////////////////////////////////////////////////////////////////////////////////////
    // The fcmd generates an error, which needs L3 to do the error handling;            //
    //////////////////////////////////////////////////////////////////////////////////////
    ucTLun = L3_SchSelTLun(ARB_BMP_ERRH);
20009c8e:	320c      	movi.n	a2, 3
20009c90:	201110        	or	a1, a1, a1
20009c93:	fb7585        	call0	200053ec <L3_SchSelTLun..AH_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:685
    if (INVALID_2F != ucTLun)
20009c96:	ffa032        	movi	a3, 255
20009c99:	051237        	beq	a2, a3, 20009ca2 <TEST_NfcExtPattRun+0x17e>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:687
    {
        L3_ErrHHandling(ucTLun);
20009c9c:	dbb201        	l32r	a0, 20000b64 <_stext+0x464>
20009c9f:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:693
    }

    //////////////////////////////////////////////////////////////////////////////////////
    // Does L3 need to do some extend process after the error handling?                 //
    //////////////////////////////////////////////////////////////////////////////////////
    ucTLun = L3_SchSelTLun(ARB_BMP_EXTH);
20009ca2:	04a022        	movi	a2, 4
20009ca5:	fb7445        	call0	200053ec <L3_SchSelTLun..AH_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:694
    if (INVALID_2F != ucTLun)
20009ca8:	ffa042        	movi	a4, 255
20009cab:	051247        	beq	a2, a4, 20009cb4 <TEST_NfcExtPattRun+0x190>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:696
    {
        L3_ExtHHandling(ucTLun);
20009cae:	dbae01        	l32r	a0, 20000b68 <_stext+0x468>
20009cb1:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_EXT/TEST_NfcFuncExt.c:58
    /* execute CMD */
    L3_Scheduler();
    
    TEST_NfcEndOneCMDPerfTimer(g_aStartTimer[L3_ONE_CMD_PERF], g_aEndTimer[L3_ONE_CMD_PERF]);
    
    return;
20009cb4:	0721c2        	l32i	a12, a1, 28
20009cb7:	062102        	l32i	a0, a1, 24
20009cba:	20c112        	addi	a1, a1, 32
20009cbd:	f00d      	ret.n

20009cbf <TEST_NfcExtPattRun+0x19b>:
	...

20009cc0 <TEST_NfcExtPattRun+0x19c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:555
20009cc0:	ffff06        	j	20009cc0 <TEST_NfcExtPattRun+0x19c>

20009cc3 <TEST_NfcExtPattRun+0x19f>:
	...

20009cc4 <TEST_NfcExtPattRun+0x1a0>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:126

// Use this to detect some special commands, such as the command containing XOR data of SLC write,
// the 1st program stage of the command containing XOR data of TLC write.
BOOL L3_IsDataDisperse(const FCMD_REQ_ENTRY *ptReqEntry)
{
    ASSERT(ptReqEntry != NULL);
20009cc4:	ffff06        	j	20009cc4 <TEST_NfcExtPattRun+0x1a0>

20009cc7 <TEST_NfcExtPattRun+0x1a3>:
	...

20009cc8 <TEST_NfcExtPattRun+0x1a4>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:689

    ucPhyPU = HAL_NfcGetPhyPU(ucPU);

    if (0 == ucLevel)
    {
        bFinishFlag = (BOOL)g_pNfcCmdSts->aNfcqCmdStsReg[ucPhyPU][ucLun].bsFsLv0;
20009cc8:	da9771        	l32r	a7, 20000724 <_stext+0x24>
20009ccb:	767a      	add.n	a7, a6, a7
20009ccd:	800772        	l8ui	a7, a7, 128
20009cd0:	3e2c52        	l32i	a5, a12, 248
20009cd3:	1177c0        	slli	a7, a7, 4
20009cd6:	557a      	add.n	a5, a5, a7
20009cd8:	0020c0        	memw
20009cdb:	020552        	l8ui	a5, a5, 2
20009cde:	045350        	extui	a5, a5, 3, 1
20009ce1:	ffdac6        	j	20009c50 <TEST_NfcExtPattRun+0x12c>

20009ce4 <TEST_NfcExtPattRun+0x1c0>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:693
    }
    else if (1 == ucLevel)
    {
        bFinishFlag = (BOOL)g_pNfcCmdSts->aNfcqCmdStsReg[ucPhyPU][ucLun].bsFsLv1;
20009ce4:	da9071        	l32r	a7, 20000724 <_stext+0x24>
20009ce7:	767a      	add.n	a7, a6, a7
20009ce9:	800772        	l8ui	a7, a7, 128
20009cec:	3e2c52        	l32i	a5, a12, 248
20009cef:	1177c0        	slli	a7, a7, 4
20009cf2:	557a      	add.n	a5, a5, a7
20009cf4:	0020c0        	memw
20009cf7:	020552        	l8ui	a5, a5, 2
20009cfa:	415750        	srli	a5, a5, 7
20009cfd:	ffd3c6        	j	20009c50 <TEST_NfcExtPattRun+0x12c>

20009d00 <TEST_NfcExtPattRun+0x1dc>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:443
    ptDptr = (FALSE == bBak) ? g_ptFCmdIntrDptr : g_ptFCmdIntrDptrBak;

    //FIRMWARE_LogInfo("TLun#%d IntrPptr#0x%x 0x%x\n", ucTLun, ptDptr->atIntrQDptr[ucTLun].ucPptr, ucPptr);
    ptDptr->atIntrQDptr[ucTLun].ucPptr = ucPptr;

    if (NFCQ_DEPTH > ucPptr)
20009d00:	db1631        	l32r	a3, 20000958 <_stext+0x258>
20009d03:	f27c      	movi.n	a2, -1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:441
    ASSERT(INVALID_DPTR == ucPptr || NFCQ_DEPTH > ucPptr);

    ptDptr = (FALSE == bBak) ? g_ptFCmdIntrDptr : g_ptFCmdIntrDptrBak;

    //FIRMWARE_LogInfo("TLun#%d IntrPptr#0x%x 0x%x\n", ucTLun, ptDptr->atIntrQDptr[ucTLun].ucPptr, ucPptr);
    ptDptr->atIntrQDptr[ucTLun].ucPptr = ucPptr;
20009d05:	024502        	s8i	a0, a5, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:443

    if (NFCQ_DEPTH > ucPptr)
20009d08:	3168      	l32i.n	a6, a1, 12
20009d0a:	150c      	movi.n	a5, 1
20009d0c:	401600        	ssl	a6
20009d0f:	a15500        	sll	a5, a5
20009d12:	302520        	xor	a2, a5, a2
20009d15:	0240b6        	bltui	a0, 4, 20009d1b <TEST_NfcExtPattRun+0x1f7>
20009d18:	ffb046        	j	20009bdd <TEST_NfcExtPattRun+0xb9>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:262
void L3_SchSetStsBit(U8 ucTLun, STS_BITMAP_TYPE eStsBmpType)
{
    U8 ucPU = L3_GET_PU(ucTLun);
    U8 ucLunInPU = L3_GET_LUN_IN_PU(ucTLun);

    l_aTLunStsBmp[eStsBmpType][ucLunInPU] |= 1 << ucPU;
20009d1b:	0020c0        	memw
20009d1e:	7f23a2        	l32i	a10, a3, 0x1fc
20009d21:	20aa50        	or	a10, a10, a5
20009d24:	0020c0        	memw
20009d27:	7f63a2        	s32i	a10, a3, 0x1fc
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:409
void L3_SchClrArbBit(U8 ucTLun, ARB_BITMAP_TYPE eArbBmpType)
{
    U8 ucPU = L3_GET_PU(ucTLun);
    U8 ucLunInPU = L3_GET_LUN_IN_PU(ucTLun);

    l_aTLunArbBmp[eArbBmpType][ucLunInPU] &= ~(1 << ucPU);
20009d2a:	dabc81        	l32r	a8, 2000081c <_stext+0x11c>
20009d2d:	0020c0        	memw
20009d30:	7f2892        	l32i	a9, a8, 0x1fc
20009d33:	109920        	and	a9, a9, a2
20009d36:	0020c0        	memw
20009d39:	7f6892        	s32i	a9, a8, 0x1fc
20009d3c:	0020c0        	memw
20009d3f:	872872        	l32i	a7, a8, 0x21c
20009d42:	107720        	and	a7, a7, a2
20009d45:	0020c0        	memw
20009d48:	876872        	s32i	a7, a8, 0x21c
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:448
    {
        L3_SchSetStsBit(ucTLun, STS_BMP_PEND);

        L3_SchClrArbBit(ucTLun, ARB_BMP_POPREQ);
        L3_SchClrArbBit(ucTLun, ARB_BMP_RECYCLE);
20009d4b:	ffa746        	j	20009bec <TEST_NfcExtPattRun+0xc8>

20009d4e <TEST_NfcExtPattRun+0x22a>:
	...

20009d50 <TEST_NfcExtPattRun+0x22c>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:697
    }
    else if (2 == ucLevel)
    {
        bFinishFlag = (BOOL)g_pNfcCmdSts->aNfcqCmdStsReg[ucPhyPU][ucLun].bsFsLv2;
20009d50:	da7571        	l32r	a7, 20000724 <_stext+0x24>
20009d53:	767a      	add.n	a7, a6, a7
20009d55:	800772        	l8ui	a7, a7, 128
20009d58:	3e2c52        	l32i	a5, a12, 248
20009d5b:	1177c0        	slli	a7, a7, 4
20009d5e:	557a      	add.n	a5, a5, a7
20009d60:	0020c0        	memw
20009d63:	030552        	l8ui	a5, a5, 3
20009d66:	045350        	extui	a5, a5, 3, 1
20009d69:	ffb8c6        	j	20009c50 <TEST_NfcExtPattRun+0x12c>

20009d6c <TEST_NfcExtPattRun+0x248>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_DataRecover.c:128

    if ((TRUE == L3_IsNeedDoXor(ptReqEntry)) && (TRUE == ptReqEntry->bsContainXorData))
20009d6c:	022182        	l32i	a8, a1, 8
20009d6f:	0888      	l32i.n	a8, a8, 0
20009d71:	048d80        	extui	a8, a8, 13, 1
20009d74:	eee816        	beqz	a8, 20009c66 <TEST_NfcExtPattRun+0x142>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1921
    
    if (TRUE == L3_IFIsFCmdFinished(ptCtrlEntry))
    {
        if (TRUE == L3_IsDataDisperse(ptCtrlEntry->ptReqEntry))
        {
            BOOL bXoreReleaseFinish = L3_XoreRelease(ptCtrlEntry);
20009d77:	1128      	l32i.n	a2, a1, 4
20009d79:	fb0305        	call0	20004dac <L3_XoreRelease>
20009d7c:	920b      	addi.n	a9, a2, -1
20009d7e:	f0c956        	bnez	a9, 20009c8e <TEST_NfcExtPattRun+0x16a>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1924
            if (bXoreReleaseFinish == TRUE)
            {
                L3_IFUpdtReqStatus(ptCtrlEntry);
20009d81:	012122        	l32i	a2, a1, 4
20009d84:	fafb05        	call0	20004d38 <L3_IFUpdtReqStatus>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1925
                L3_FCMDQSetIntrRptr(ucTLun, INVALID_DPTR, FALSE);
20009d87:	0128      	l32i.n	a2, a1, 0
20009d89:	ffa032        	movi	a3, 255
20009d8c:	040c      	movi.n	a4, 0
20009d8e:	faf2c5        	call0	20004cbc <L3_FCMDQSetIntrRptr>
20009d91:	ffbe46        	j	20009c8e <TEST_NfcExtPattRun+0x16a>

20009d94 <TEST_NfcExtPattRun+0x270>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1746
{
    U8 ucTLun;
    U32 *pSrcData, *pDstData;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;

    if (FCMD_REQ_TYPE_READ != ptReqEntry->bsReqType || 0 == ptReqEntry->ulSpareAddr)
20009d94:	2038      	l32i.n	a3, a0, 8
20009d96:	eda316        	beqz	a3, 20009c74 <TEST_NfcExtPattRun+0x150>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1752
    {
        return;
    }

    ucTLun = ptReqEntry->bsTLun;    
    if (TRUE != ptCtrlEntry->bsIntrReq)
20009d99:	162c62        	l32i	a6, a12, 88
20009d9c:	11a8      	l32i.n	a10, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1751
    if (FCMD_REQ_TYPE_READ != ptReqEntry->bsReqType || 0 == ptReqEntry->ulSpareAddr)
    {
        return;
    }

    ucTLun = ptReqEntry->bsTLun;    
20009d9e:	000002        	l8ui	a0, a0, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1752
    if (TRUE != ptCtrlEntry->bsIntrReq)
20009da1:	2aa8      	l32i.n	a10, a10, 8
20009da3:	1100e0        	slli	a0, a0, 2
20009da6:	0eeab7        	bbsi	a10, 11, 20009db8 <TEST_NfcExtPattRun+0x294>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1754
    {
        pSrcData = (U32 *)RED_ABSOLUTE_ADDR(MCU1_ID, ucTLun, ptReqEntry->bsReqPtr);
20009da9:	15c050        	extui	a12, a5, 16, 2
20009dac:	010c04        	insbits	a0, a12, 0, 1
20009daf:	11b070        	slli	a11, a0, 9
20009db2:	06ba      	add.n	a0, a6, a11
20009db4:	000506        	j	20009dcc <TEST_NfcExtPattRun+0x2a8>

20009db7 <TEST_NfcExtPattRun+0x293>:
	...

20009db8 <TEST_NfcExtPattRun+0x294>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1758
    }
    else
    {
        pSrcData = (U32 *)RED_ABSOLUTE_ADDR(MCU2_ID, ucTLun, ptCtrlEntry->bsCtrlPtr);
20009db8:	1158      	l32i.n	a5, a1, 4
20009dba:	1558      	l32i.n	a5, a5, 4
20009dbc:	da6a41        	l32r	a4, 20000764 <_stext+0x64>
20009dbf:	155c50        	extui	a5, a5, 28, 2
20009dc2:	010504        	insbits	a0, a5, 0, 1
20009dc5:	112070        	slli	a2, a0, 9
20009dc8:	262a      	add.n	a2, a6, a2
20009dca:	024a      	add.n	a0, a2, a4
20009dcc:	820c      	movi.n	a2, 8
20009dce:	25a276        	loopgtz	a2, 20009df7 <TEST_NfcExtPattRun+0x2d3>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:85
{
    U32 i;

    for (i = 0 ; i < LengthDW; i++)
    {
        *TargetAddr++ = *SrcAddr++;
20009dd1:	0028      	l32i.n	a2, a0, 0
20009dd3:	0329      	s32i.n	a2, a3, 0
20009dd5:	1028      	l32i.n	a2, a0, 4
20009dd7:	1329      	s32i.n	a2, a3, 4
20009dd9:	2028      	l32i.n	a2, a0, 8
20009ddb:	2329      	s32i.n	a2, a3, 8
20009ddd:	3028      	l32i.n	a2, a0, 12
20009ddf:	3329      	s32i.n	a2, a3, 12
20009de1:	4028      	l32i.n	a2, a0, 16
20009de3:	4329      	s32i.n	a2, a3, 16
20009de5:	5028      	l32i.n	a2, a0, 20
20009de7:	5329      	s32i.n	a2, a3, 20
20009de9:	6028      	l32i.n	a2, a0, 24
20009deb:	6329      	s32i.n	a2, a3, 24
20009ded:	7028      	l32i.n	a2, a0, 28
20009def:	7329      	s32i.n	a2, a3, 28
20009df1:	20c002        	addi	a0, a0, 32
20009df4:	20c332        	addi	a3, a3, 32

20009df7 <TEST_NfcExtPattRun+0x2d3>:
20009df7:	ff9e46        	j	20009c74 <TEST_NfcExtPattRun+0x150>

20009dfa <TEST_NfcExtPattRun+0x2d6>:
	...

20009dfc <TEST_NfcBasicPattRunInit>:
TEST_NfcBasicPattRunInit():
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:627
Reference     :
History        :
    20151112    abby    create
****************************************************************************/
void TEST_NfcBasicPattRunInit(void)
{
20009dfc:	f0c112        	addi	a1, a1, -16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:631
    U32 i;
    U32 ulRedNum;

    DBG_Printf("START_BUFFER_ID: 0x%x\n", START_BUFFER_ID);
20009dff:	db5b21        	l32r	a2, 20000b6c <_stext+0x46c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:627
Reference     :
History        :
    20151112    abby    create
****************************************************************************/
void TEST_NfcBasicPattRunInit(void)
{
20009e02:	21d9      	s32i.n	a13, a1, 8
20009e04:	da46d1        	l32r	a13, 2000071c <_stext+0x1c>
20009e07:	11c9      	s32i.n	a12, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:631
    U32 i;
    U32 ulRedNum;

    DBG_Printf("START_BUFFER_ID: 0x%x\n", START_BUFFER_ID);
20009e09:	0d38      	l32i.n	a3, a13, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:627
Reference     :
History        :
    20151112    abby    create
****************************************************************************/
void TEST_NfcBasicPattRunInit(void)
{
20009e0b:	da64c1        	l32r	a12, 2000079c <_stext+0x9c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:631
    U32 i;
    U32 ulRedNum;

    DBG_Printf("START_BUFFER_ID: 0x%x\n", START_BUFFER_ID);
20009e0e:	0338      	l32i.n	a3, a3, 0
20009e10:	0109      	s32i.n	a0, a1, 0
20009e12:	33ca      	add.n	a3, a3, a12
20009e14:	f53030        	extui	a3, a3, 16, 16
20009e17:	00e4c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:632
    DBG_Printf("START_WBUF_ID: 0x%x\n", START_WBUF_ID);
20009e1a:	0d38      	l32i.n	a3, a13, 0
20009e1c:	0338      	l32i.n	a3, a3, 0
20009e1e:	db5421        	l32r	a2, 20000b70 <_stext+0x470>
20009e21:	8033c0        	add	a3, a3, a12
20009e24:	f53030        	extui	a3, a3, 16, 16
20009e27:	1133f0        	slli	a3, a3, 1
20009e2a:	00e385        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:633
    DBG_Printf("START_RBUF_ID: 0x%x\n", START_RBUF_ID);
20009e2d:	0d38      	l32i.n	a3, a13, 0
20009e2f:	db5121        	l32r	a2, 20000b74 <_stext+0x474>
20009e32:	0338      	l32i.n	a3, a3, 0
20009e34:	042c      	movi.n	a4, 32
20009e36:	33ca      	add.n	a3, a3, a12
20009e38:	f53030        	extui	a3, a3, 16, 16
20009e3b:	903340        	addx2	a3, a3, a4
20009e3e:	00e245        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:634
    DBG_Printf("START_WRED_ADDR: 0x%x\n", START_WRED_ADDR);
20009e41:	0d38      	l32i.n	a3, a13, 0
20009e43:	db4d21        	l32r	a2, 20000b78 <_stext+0x478>
20009e46:	0338      	l32i.n	a3, a3, 0
20009e48:	db4d41        	l32r	a4, 20000b7c <_stext+0x47c>
20009e4b:	33ca      	add.n	a3, a3, a12
20009e4d:	f53030        	extui	a3, a3, 16, 16
20009e50:	0133f0        	slli	a3, a3, 17
20009e53:	803340        	add	a3, a3, a4
20009e56:	00e0c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:635
    DBG_Printf("START_RRED_BASE: 0x%x\n", START_RRED_BASE);
20009e59:	0d38      	l32i.n	a3, a13, 0
20009e5b:	db4921        	l32r	a2, 20000b80 <_stext+0x480>
20009e5e:	0338      	l32i.n	a3, a3, 0
20009e60:	db4941        	l32r	a4, 20000b84 <_stext+0x484>
20009e63:	33ca      	add.n	a3, a3, a12
20009e65:	f53030        	extui	a3, a3, 16, 16
20009e68:	0133f0        	slli	a3, a3, 17
20009e6b:	803340        	add	a3, a3, a4
20009e6e:	00df45        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:636
    DBG_Printf("START_RRED_ADDR: 0x%x\n", START_RRED_ADDR);
20009e71:	0d38      	l32i.n	a3, a13, 0
20009e73:	db4521        	l32r	a2, 20000b88 <_stext+0x488>
20009e76:	0338      	l32i.n	a3, a3, 0
20009e78:	db4541        	l32r	a4, 20000b8c <_stext+0x48c>
20009e7b:	33ca      	add.n	a3, a3, a12
20009e7d:	f53030        	extui	a3, a3, 16, 16
20009e80:	0133f0        	slli	a3, a3, 17
20009e83:	334a      	add.n	a3, a3, a4
20009e85:	00ddc5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:640

    /*  DBG single of NFC   */
#if 1
    rGLB(0x50) = 0x3E1E00;
20009e88:	db1531        	l32r	a3, 20000adc <_stext+0x3dc>
20009e8b:	db4171        	l32r	a7, 20000b90 <_stext+0x490>
20009e8e:	da3a61        	l32r	a6, 20000778 <_stext+0x78>
20009e91:	0020c0        	memw
20009e94:	946672        	s32i	a7, a6, 0x250
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:641
    rGLB(0x54) = 0x1E0E0;
20009e97:	db3f51        	l32r	a5, 20000b94 <_stext+0x494>
20009e9a:	0020c0        	memw
20009e9d:	956652        	s32i	a5, a6, 0x254
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:642
    rNfcDbgSigGrpChg0  = 0x2220;//0xCCCC;//0x0000;//IFC:00 ICB:0C
20009ea0:	db3e41        	l32r	a4, 20000b98 <_stext+0x498>
20009ea3:	0020c0        	memw
20009ea6:	886342        	s32i	a4, a3, 0x220
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:643
    rNfcDbgSigGrpChg1  = 0x70004;//0x240004;//0x240023;//0x2b0004;
20009ea9:	db3c21        	l32r	a2, 20000b9c <_stext+0x49c>
20009eac:	0020c0        	memw
20009eaf:	896322        	s32i	a2, a3, 0x224
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:644
    rNfcDbgSigGrpChg2  = 0x90008;//0x26000c;//0x260025;//0x150001;//0x150017;
20009eb2:	db3b21        	l32r	a2, 20000ba0 <_stext+0x4a0>
20009eb5:	0020c0        	memw
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:648
#endif

    /*  allocate red pointer address     */
    pWrRed = (volatile NFC_RED *)START_WRED_ADDR;
20009eb8:	db3141        	l32r	a4, 20000b7c <_stext+0x47c>
20009ebb:	0d08      	l32i.n	a0, a13, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:644
#if 1
    rGLB(0x50) = 0x3E1E00;
    rGLB(0x54) = 0x1E0E0;
    rNfcDbgSigGrpChg0  = 0x2220;//0xCCCC;//0x0000;//IFC:00 ICB:0C
    rNfcDbgSigGrpChg1  = 0x70004;//0x240004;//0x240023;//0x2b0004;
    rNfcDbgSigGrpChg2  = 0x90008;//0x26000c;//0x260025;//0x150001;//0x150017;
20009ebd:	8a6322        	s32i	a2, a3, 0x228
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:648
#endif

    /*  allocate red pointer address     */
    pWrRed = (volatile NFC_RED *)START_WRED_ADDR;
20009ec0:	0008      	l32i.n	a0, a0, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:649
    pRRed = (volatile NFC_RED **)START_RRED_BASE;
20009ec2:	db3031        	l32r	a3, 20000b84 <_stext+0x484>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:648
    rNfcDbgSigGrpChg1  = 0x70004;//0x240004;//0x240023;//0x2b0004;
    rNfcDbgSigGrpChg2  = 0x90008;//0x26000c;//0x260025;//0x150001;//0x150017;
#endif

    /*  allocate red pointer address     */
    pWrRed = (volatile NFC_RED *)START_WRED_ADDR;
20009ec5:	00ca      	add.n	a0, a0, a12
20009ec7:	f50000        	extui	a0, a0, 16, 16
20009eca:	0120f0        	slli	a2, a0, 17
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:652
    pRRed = (volatile NFC_RED **)START_RRED_BASE;

    ulRedNum = NFCQ_DEPTH;//TEST_ADDR_OFF << NFCQ_DEPTH_BIT;//NFCQ_DEPTH;//TEST_ADDR_OFF << NFCQ_DEPTH_BIT;
    for(i = 0; i < ulRedNum ; i++)
20009ecd:	110070        	slli	a0, a0, 9
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:649
    rNfcDbgSigGrpChg2  = 0x90008;//0x26000c;//0x260025;//0x150001;//0x150017;
#endif

    /*  allocate red pointer address     */
    pWrRed = (volatile NFC_RED *)START_WRED_ADDR;
    pRRed = (volatile NFC_RED **)START_RRED_BASE;
20009ed0:	323a      	add.n	a3, a2, a3
20009ed2:	5c6d32        	s32i	a3, a13, 0x170
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:648
    rNfcDbgSigGrpChg1  = 0x70004;//0x240004;//0x240023;//0x2b0004;
    rNfcDbgSigGrpChg2  = 0x90008;//0x26000c;//0x260025;//0x150001;//0x150017;
#endif

    /*  allocate red pointer address     */
    pWrRed = (volatile NFC_RED *)START_WRED_ADDR;
20009ed5:	224a      	add.n	a2, a2, a4
20009ed7:	656d22        	s32i	a2, a13, 0x194
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:652
    pRRed = (volatile NFC_RED **)START_RRED_BASE;

    ulRedNum = NFCQ_DEPTH;//TEST_ADDR_OFF << NFCQ_DEPTH_BIT;//NFCQ_DEPTH;//TEST_ADDR_OFF << NFCQ_DEPTH_BIT;
    for(i = 0; i < ulRedNum ; i++)
20009eda:	db2c21        	l32r	a2, 20000b8c <_stext+0x48c>
20009edd:	110080        	slli	a0, a0, 8
20009ee0:	002a      	add.n	a0, a0, a2
20009ee2:	03d082        	addmi	a8, a0, 0x300
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:654
    {
        pRRed[i] = (NFC_RED *)(START_RRED_ADDR + i * sizeof(NFC_RED));
20009ee5:	0309      	s32i.n	a0, a3, 0
20009ee7:	3389      	s32i.n	a8, a3, 12
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:652
    /*  allocate red pointer address     */
    pWrRed = (volatile NFC_RED *)START_WRED_ADDR;
    pRRed = (volatile NFC_RED **)START_RRED_BASE;

    ulRedNum = NFCQ_DEPTH;//TEST_ADDR_OFF << NFCQ_DEPTH_BIT;//NFCQ_DEPTH;//TEST_ADDR_OFF << NFCQ_DEPTH_BIT;
    for(i = 0; i < ulRedNum ; i++)
20009ee9:	02d092        	addmi	a9, a0, 0x200
20009eec:	01d0a2        	addmi	a10, a0, 0x100
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:654
    {
        pRRed[i] = (NFC_RED *)(START_RRED_ADDR + i * sizeof(NFC_RED));
20009eef:	13a9      	s32i.n	a10, a3, 4
20009ef1:	2399      	s32i.n	a9, a3, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:658
    }

    /*  Set SSU & Cache Status base addr  */
    TEST_NfcSetSsu0Base();
20009ef3:	db3001        	l32r	a0, 20000bb4 <_stext+0x4b4>
20009ef6:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:669

#if 0//only for test
    TEST_NfcDSInit();
#endif

    TEST_NfcBasicSharedMemMap(&g_FreeMemBase);
20009ef9:	db2c21        	l32r	a2, 20000bac <_stext+0x4ac>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:405
Reference :
------------------------------------------------------------------------------*/
LOCAL void TEST_NfcSetSsu1Base(void)
{
    g_ulSsu1OtfbBase = OTFB_SSU1_MCU12_SHARE_BASE;//g_ulSsuInOtfbBase + 1024;
    g_ulSsu1DramBase = g_ulSsuInDramBase + 1024;
20009efc:	612dc2        	l32i	a12, a13, 0x184
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:404
Purpose   : Set SSU1 BaseAddr
Reference :
------------------------------------------------------------------------------*/
LOCAL void TEST_NfcSetSsu1Base(void)
{
    g_ulSsu1OtfbBase = OTFB_SSU1_MCU12_SHARE_BASE;//g_ulSsuInOtfbBase + 1024;
20009eff:	db2901        	l32r	a0, 20000ba4 <_stext+0x4a4>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:427
History:
    20151112    abby       create.  
------------------------------------------------------------------------------*/
LOCAL void TEST_NfcSetCacheStatusBase(void)
{    
    g_ulCacheStatusAddr = OTFB_TLG_MCU012_SHARE_BASE;
20009f02:	db29b1        	l32r	a11, 20000ba8 <_stext+0x4a8>
20009f05:	646db2        	s32i	a11, a13, 0x190
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:404
Purpose   : Set SSU1 BaseAddr
Reference :
------------------------------------------------------------------------------*/
LOCAL void TEST_NfcSetSsu1Base(void)
{
    g_ulSsu1OtfbBase = OTFB_SSU1_MCU12_SHARE_BASE;//g_ulSsuInOtfbBase + 1024;
20009f08:	626d02        	s32i	a0, a13, 0x188
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:405
    g_ulSsu1DramBase = g_ulSsuInDramBase + 1024;
20009f0b:	04dcc2        	addmi	a12, a12, 0x400
20009f0e:	636dc2        	s32i	a12, a13, 0x18c
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:669

#if 0//only for test
    TEST_NfcDSInit();
#endif

    TEST_NfcBasicSharedMemMap(&g_FreeMemBase);
20009f11:	db2901        	l32r	a0, 20000bb8 <_stext+0x4b8>
20009f14:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:670
    TEST_NfcPattQStsInit();
20009f17:	db2901        	l32r	a0, 20000bbc <_stext+0x4bc>
20009f1a:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:672

    DBG_Printf("NFC Basic UT Init Done!\n\n");
20009f1d:	db2421        	l32r	a2, 20000bb0 <_stext+0x4b0>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:674
   
    return;
20009f20:	11c8      	l32i.n	a12, a1, 4
20009f22:	0221d2        	l32i	a13, a1, 8
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:672
#endif

    TEST_NfcBasicSharedMemMap(&g_FreeMemBase);
    TEST_NfcPattQStsInit();

    DBG_Printf("NFC Basic UT Init Done!\n\n");
20009f25:	00d3c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:674
   
    return;
20009f28:	0108      	l32i.n	a0, a1, 0
20009f2a:	10c112        	addi	a1, a1, 16
20009f2d:	f00d      	ret.n

20009f2f <TEST_NfcBasicPattRunInit+0x133>:
	...

20009f30 <UT_NfcMain>:
UT_NfcMain():
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:778
Usage      : 
History    : 
    1. 2016.3.19 VIA create function
==============================================================================*/
BOOL UT_NfcMain(void)
{
20009f30:	f0c112        	addi	a1, a1, -16
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:779
    DBG_Printf("\nHAL NFC UNIT TEST START!\n");
20009f33:	db2321        	l32r	a2, 20000bc0 <_stext+0x4c0>
20009f36:	00d2c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Event.c:161
****************************************************************************/
U32 CommCheckEvent(U8 EventOwner,COMMON_EVENT* EVENT)
{
    EVENT->Event = ModuleEvent[EventOwner].Event;

    if (0 == EVENT->Event)
20009f39:	da0101        	l32r	a0, 20000740 <_stext+0x40>
20009f3c:	062002        	l32i	a0, a0, 24
20009f3f:	609c      	beqz.n	a0, 20009f59 <UT_NfcMain+0x29>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:692
{
    COMMON_EVENT NFC_Event;

    if (COMM_EVENT_STATUS_SUCCESS_NOEVENT != CommCheckEvent(COMM_EVENT_OWNER_L3, &NFC_Event))
    {
        if (!NFC_Event.EventBoot)
20009f41:	086057        	bbci	a0, 5, 20009f4d <UT_NfcMain+0x1d>

20009f44 <UT_NfcMain+0x14>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:783
{
    DBG_Printf("\nHAL NFC UNIT TEST START!\n");

    TEST_NfcMCU2Main();

    DBG_Printf("\nHAL NFC UNIT TEST END!\n\n");
20009f44:	db2021        	l32r	a2, 20000bc4 <_stext+0x4c4>
20009f47:	00d1c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:785

    while(1);
20009f4a:	ffff06        	j	20009f4a <UT_NfcMain+0x1a>

20009f4d <UT_NfcMain+0x1d>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:694

    if (COMM_EVENT_STATUS_SUCCESS_NOEVENT != CommCheckEvent(COMM_EVENT_OWNER_L3, &NFC_Event))
    {
        if (!NFC_Event.EventBoot)
        {
            DBG_Printf("MCU2 Event Invalid!\n");
20009f4d:	db1e21        	l32r	a2, 20000bc8 <_stext+0x4c8>
20009f50:	00d105        	call0	2000ac64 <dbg_printf>
20009f53:	fffb46        	j	20009f44 <UT_NfcMain+0x14>

20009f56 <UT_NfcMain+0x26>:
20009f56:	000000                                        ...

20009f59 <UT_NfcMain+0x29>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:736

    rNfcDbgSigGrpChg0  = 0x5555;//0xCCCC;//0x0000;//IFC:00 ICB:0C
    rNfcDbgSigGrpChg1  = (0x0<<28)|(0xB<<16)|(0x0<<12)|(0xA);//0x240004;//0x240023;//0x2b0004;
    rNfcDbgSigGrpChg2  = (0x1<<28)|(0xB<<16)|(0x1<<12)|(0xA);//0x26000c;//0x260025;//0x150001;//0x150017;
#else//DRAM
    rGLB(0x50) = (0x1E<<22);//B0 of NFC
20009f59:	db1da1        	l32r	a10, 20000bd0 <_stext+0x4d0>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:719
    if (FALSE == TEST_NfcMCU2EventCheck())
    {
        return;
    }

    U8 ucFileType = TEST_NfcGetCheckListFileType();;
20009f5c:	d9f041        	l32r	a4, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:93
History:
    20160816    abby   create.
------------------------------------------------------------------------------*/
U8 TEST_NfcGetCheckListFileType(void)
{
    g_pLoadReg = (CHECK_LIST_LOAD_CNTR_REG*)CHECKLIST_LOAD_CNTR_REG;
20009f5f:	db1bb1        	l32r	a11, 20000bcc <_stext+0x4cc>
20009f62:	5e64b2        	s32i	a11, a4, 0x178
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:719
20009f65:	db1b31        	l32r	a3, 20000bd4 <_stext+0x4d4>
20009f68:	dadd61        	l32r	a6, 20000adc <_stext+0x3dc>
20009f6b:	da0391        	l32r	a9, 20000778 <_stext+0x78>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:736

    rNfcDbgSigGrpChg0  = 0x5555;//0xCCCC;//0x0000;//IFC:00 ICB:0C
    rNfcDbgSigGrpChg1  = (0x0<<28)|(0xB<<16)|(0x0<<12)|(0xA);//0x240004;//0x240023;//0x2b0004;
    rNfcDbgSigGrpChg2  = (0x1<<28)|(0xB<<16)|(0x1<<12)|(0xA);//0x26000c;//0x260025;//0x150001;//0x150017;
#else//DRAM
    rGLB(0x50) = (0x1E<<22);//B0 of NFC
20009f6e:	0020c0        	memw
20009f71:	9469a2        	s32i	a10, a9, 0x250
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:737
    rGLB(0x54) = (1<<28)|(0xE0<<18); //B1 of NFC
20009f74:	db1981        	l32r	a8, 20000bd8 <_stext+0x4d8>
20009f77:	0020c0        	memw
20009f7a:	956982        	s32i	a8, a9, 0x254
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:738
    rNfcDbgSigGrpChg0  = 0x5500;
20009f7d:	db1771        	l32r	a7, 20000bdc <_stext+0x4dc>
20009f80:	0020c0        	memw
20009f83:	886672        	s32i	a7, a6, 0x220
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:739
    rNfcDbgSigGrpChg1  = (0x2<<28)|(0xB<<16)|(0x2<<12)|(0x20);//(0x2<<28)|(0xB<<16)|(0x2<<12)|(0xA);
20009f86:	db1651        	l32r	a5, 20000be0 <_stext+0x4e0>
20009f89:	0020c0        	memw
20009f8c:	896652        	s32i	a5, a6, 0x224
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcPerformance.c:39
GLOBAL MCU12_VAR_ATTR U32 g_aStartTimer[PERF_TYPE_CNT];
GLOBAL MCU12_VAR_ATTR U32 g_aEndTimer[PERF_TYPE_CNT];

void TEST_NfcInitLLFFlag(void)
{
    g_pLLFDone = (U32*)(DRAM_START_ADDRESS + 0x8000000);//multi-use LLF status address
20009f8f:	5f6432        	s32i	a3, a4, 0x17c
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcPerformance.c:40
    *g_pLLFDone = 0;
20009f92:	020c      	movi.n	a2, 0
20009f94:	0020c0        	memw
20009f97:	0329      	s32i.n	a2, a3, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:760
        {
            TEST_NfcBasicPattRun();
        }
        else//ext file
        {
            TEST_NfcExtPattRun();
20009f99:	ffb885        	call0	20009b24 <TEST_NfcExtPattRun>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:762
        }
    }
20009f9c:	fffe46        	j	20009f99 <UT_NfcMain+0x69>

20009f9f <UT_NfcMain+0x6f>:
	...

20009fa0 <HAL_FlashIntEntry>:
HAL_FlashIntEntry():
D:\IM_3D_TLC\firmware\HAL\Interrupt/HAL_Interrupt.c:285
Modify History:
    20140905    Victor Zhang Create
------------------------------------------------------------------------------*/
void HAL_FlashIntEntry(void)
{
    return;
20009fa0:	f00d      	ret.n

20009fa2 <HAL_FlashIntEntry+0x2>:
	...

20009fa4 <HAL_SATAIntEntry>:
HAL_SATAIntEntry():
D:\IM_3D_TLC\firmware\HAL\Interrupt/HAL_Interrupt.c:270
void HAL_SATAIntEntry(void)
{
#if defined(HOST_SATA) && defined(MCU0)
    L0_SataISR();    
#endif
    return;
20009fa4:	f00d      	ret.n

20009fa6 <HAL_SATAIntEntry+0x2>:
	...

20009fa8 <HAL_L5TimerIntEntry>:
HAL_L5TimerIntEntry():
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:694

            break;

        case 2:
            //clear interrupt by writing CCOMPARE2
            XT_WSR_CCOMPARE2(0);
20009fa8:	040c      	movi.n	a4, 0
20009faa:	13f240        	wsr.ccompare2	a4
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:179
    20141028    Gavin   add "INLINE" attribute
------------------------------------------------------------------------------*/
INLINE void HAL_DisableMCUIntSrc(U32 ulDisableMap)
{
#ifndef SIM
    U32 ulNewIntEn = (XT_RSR_INTENABLE() & (~ulDisableMap));
20009fad:	03e420        	rsr.intenable	a2
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:181

    XT_WSR_INTENABLE(ulNewIntEn);
20009fb0:	daca31        	l32r	a3, 20000ad8 <_stext+0x3d8>
20009fb3:	102230        	and	a2, a2, a3
20009fb6:	13e420        	wsr.intenable	a2
D:\IM_3D_TLC\firmware\HAL\Interrupt/HAL_Interrupt.c:252
    20160119    Yao Chen
------------------------------------------------------------------------------*/
void HAL_L5TimerIntEntry(void)
{
    HAL_McuTimerISR(2);
    return;
20009fb9:	f00d      	ret.n

20009fbb <HAL_L5TimerIntEntry+0x13>:
	...

20009fbc <HAL_L4TimerIntEntry>:
HAL_L4TimerIntEntry():
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:685

            break;

        case 1:
            //clear interrupt by writing CCOMPARE1
            XT_WSR_CCOMPARE1(0);
20009fbc:	040c      	movi.n	a4, 0
20009fbe:	13f140        	wsr.ccompare1	a4
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:179
    20141028    Gavin   add "INLINE" attribute
------------------------------------------------------------------------------*/
INLINE void HAL_DisableMCUIntSrc(U32 ulDisableMap)
{
#ifndef SIM
    U32 ulNewIntEn = (XT_RSR_INTENABLE() & (~ulDisableMap));
20009fc1:	03e420        	rsr.intenable	a2
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:181

    XT_WSR_INTENABLE(ulNewIntEn);
20009fc4:	ffae32        	movi	a3, 0xfffffeff
20009fc7:	102230        	and	a2, a2, a3
20009fca:	13e420        	wsr.intenable	a2
D:\IM_3D_TLC\firmware\HAL\Interrupt/HAL_Interrupt.c:236
    20140905    Victor Zhang Create
------------------------------------------------------------------------------*/
void HAL_L4TimerIntEntry(void)
{
    HAL_McuTimerISR(1);
    return;
20009fcd:	f00d      	ret.n

20009fcf <HAL_L4TimerIntEntry+0x13>:
	...

20009fd0 <HAL_AssertIPI>:
HAL_AssertIPI():
D:\IM_3D_TLC\firmware\HAL\Interrupt/HAL_Interrupt.c:410
        INT_SET(l_aSetInt[ucReqMcuId][ucRespMcuId]);
    }
    // Clear int
    else
    {
        INT_Clear(l_aClearInt[ucReqMcuId][ucRespMcuId]);
20009fd0:	d9f731        	l32r	a3, 200007ac <_stext+0xac>
20009fd3:	db0441        	l32r	a4, 20000be4 <_stext+0x4e4>
20009fd6:	a03230        	addx4	a3, a2, a3
20009fd9:	582332        	l32i	a3, a3, 0x160
20009fdc:	0020c0        	memw
20009fdf:	af5432        	s16i	a3, a4, 0x15e
D:\IM_3D_TLC\firmware\HAL\Interrupt/HAL_Interrupt.c:412
    }
    return;
20009fe2:	f00d      	ret.n

20009fe4 <HAL_HCmdTimerInterruptEntry>:
HAL_HCmdTimerInterruptEntry():
D:\IM_3D_TLC\firmware\HAL\Timer/HAL_HCmdTimer.c:101
    called by level 1 interrupt main entry;
History:
    20141215    Gavin   create
------------------------------------------------------------------------------*/
void HAL_HCmdTimerInterruptEntry(void)
{
20009fe4:	f0c112        	addi	a1, a1, -16
20009fe7:	006102        	s32i	a0, a1, 0
D:\IM_3D_TLC\firmware\HAL\Timer/HAL_HCmdTimer.c:108

    if ((NULL == l_pUserTimerOutCallBack) ||
        (0 == (rTimeOutCtrl & (1 << 1))))
    {
        //can not get here if no call-back function registered or no time-out happened
        DBG_Getch();
20009fea:	d9cb01        	l32r	a0, 20000718 <_stext+0x18>
20009fed:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\Timer/HAL_HCmdTimer.c:123
                break;
            }
        }
    }

    return;
20009ff0:	0108      	l32i.n	a0, a1, 0
20009ff2:	10c112        	addi	a1, a1, 16
20009ff5:	f00d      	ret.n

20009ff7 <HAL_HCmdTimerInterruptEntry+0x13>:
	...

20009ff8 <HAL_UserExcpEntry>:
HAL_UserExcpEntry():
D:\IM_3D_TLC\firmware\HAL\Interrupt/HAL_Interrupt.c:107
Modify History:
    20080521     Sue Wang       First create
    20140905     Victor Zhang   Replace HAL_SaveMCUExcCause() to asm()  
------------------------------------------------------------------------------*/
void HAL_UserExcpEntry(void)
{
20009ff8:	f0c112        	addi	a1, a1, -16
20009ffb:	1109      	s32i.n	a0, a1, 4
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:301
    20141028    Gavin   add "INLINE" attribute
------------------------------------------------------------------------------*/
INLINE U32 HAL_GetMCUExcCause(void)
{
#ifndef SIM
    return XT_RSR_EXCCAUSE();
20009ffd:	03e800        	rsr.exccause	a0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:331
INLINE void HAL_SaveMCUExcCause(U32 ulExcCause)
{
#ifndef SIM
    U32 ulEPC1;

    asm ( "rsr.epc1 %0\n\t \
2000a000:	da7331        	l32r	a3, 200009cc <_stext+0x2cc>
D:\IM_3D_TLC\firmware\HAL\Interrupt/HAL_Interrupt.c:112
    U32 ulExcCause;

    ulExcCause = HAL_GetMCUExcCause();

    switch (ulExcCause)
2000a003:	114026        	beqi	a0, 4, 2000a018 <HAL_UserExcpEntry+0x20>
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:331
2000a006:	03b120        	rsr.epc1	a2
2000a009:	0309      	s32i.n	a0, a3, 0
2000a00b:	1329      	s32i.n	a2, a3, 4

2000a00d <HAL_UserExcpEntry+0x15>:
2000a00d:	ffff06        	j	2000a00d <HAL_UserExcpEntry+0x15>

2000a010 <HAL_UserExcpEntry+0x18>:
	...

2000a011 <HAL_UserExcpEntry+0x19>:
D:\IM_3D_TLC\firmware\HAL\Interrupt/HAL_Interrupt.c:126
            /* Just records exception cause and source instruction address at the start of OTFB and hangs. */
            HAL_SaveMCUExcCause(ulExcCause);
            break;
    }

    return;
2000a011:	1108      	l32i.n	a0, a1, 4
2000a013:	10c112        	addi	a1, a1, 16
2000a016:	f00d      	ret.n

2000a018 <HAL_UserExcpEntry+0x20>:
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:266
    20141028    Gavin   add "INLINE" attribute
------------------------------------------------------------------------------*/
INLINE U32 HAL_GetMCUIntSrc(void)
{
#ifndef SIM
    return XT_RSR_INTERRUPT();
2000a018:	03e200        	rsr.interrupt	a0
D:\IM_3D_TLC\firmware\HAL\Interrupt/HAL_Interrupt.c:192
------------------------------------------------------------------------------*/
void HAL_L1IntSharedEntry(void)
{
    U32 ulIntSrc = HAL_GetMCUIntSrc();

    if (0 != (ulIntSrc & BIT_ORINT_HOSTC))
2000a01b:	1360e7        	bbci	a0, 14, 2000a032 <HAL_UserExcpEntry+0x3a>
D:\IM_3D_TLC\firmware\HAL\Interrupt/HAL_Interrupt.c:194
    {
        HAL_HostCIntEntry();
2000a01e:	d9b841        	l32r	a4, 20000700 <_stext>
D:\IM_3D_TLC\firmware\HAL\Interrupt/HAL_Interrupt.c:419

void HAL_HostCIntEntry(void)
{
    U32 ulHostCIntPending, ulHostCIntClear;

    ulHostCIntPending = rHOSTC_INTPENDING;
2000a021:	0020c0        	memw
D:\IM_3D_TLC\firmware\HAL\Interrupt/HAL_Interrupt.c:424

#if defined (HOST_AHCI) && defined (MCU0)
    ulHostCIntClear = L0_AHCISetExtEvent(ulHostCIntPending);
#else
    ulHostCIntClear = 0;
2000a024:	030c      	movi.n	a3, 0
D:\IM_3D_TLC\firmware\HAL\Interrupt/HAL_Interrupt.c:419

void HAL_HostCIntEntry(void)
{
    U32 ulHostCIntPending, ulHostCIntClear;

    ulHostCIntPending = rHOSTC_INTPENDING;
2000a026:	4458      	l32i.n	a5, a4, 16
2000a028:	2109      	s32i.n	a0, a1, 8
D:\IM_3D_TLC\firmware\HAL\Interrupt/HAL_Interrupt.c:433
    L0_NVMeISR();
#endif

#ifndef SIM
    /* Common: Timer overflows. */
    if (0 != (ulHostCIntPending & INT_HOSTC_TIMER))
2000a02a:	3fe597        	bbsi	a5, 9, 2000a06d <HAL_UserExcpEntry+0x75>
D:\IM_3D_TLC\firmware\HAL\Interrupt/HAL_Interrupt.c:442
        ulHostCIntClear |= INT_HOSTC_TIMER;
    }
#endif

    /* Clears interrupt pending status */
    rHOSTC_INTPENDING = ulHostCIntClear;
2000a02d:	0020c0        	memw
2000a030:	4439      	s32i.n	a3, a4, 16
D:\IM_3D_TLC\firmware\HAL\Interrupt/HAL_Interrupt.c:197
    if (0 != (ulIntSrc & BIT_ORINT_HOSTC))
    {
        HAL_HostCIntEntry();
    }

    if (0 != (ulIntSrc & BIT_ORINT_TIMER0))
2000a032:	106067        	bbci	a0, 6, 2000a046 <HAL_UserExcpEntry+0x4e>
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:670
#ifndef SIM
    switch (ulTimerID)
    {
        case 0:
            //clear interrupt by writing CCOMPARE0
            XT_WSR_CCOMPARE0(0);
2000a035:	080c      	movi.n	a8, 0
2000a037:	13f080        	wsr.ccompare0	a8
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:179
    20141028    Gavin   add "INLINE" attribute
------------------------------------------------------------------------------*/
INLINE void HAL_DisableMCUIntSrc(U32 ulDisableMap)
{
#ifndef SIM
    U32 ulNewIntEn = (XT_RSR_INTENABLE() & (~ulDisableMap));
2000a03a:	03e460        	rsr.intenable	a6
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:181

    XT_WSR_INTENABLE(ulNewIntEn);
2000a03d:	bfaf72        	movi	a7, -65
2000a040:	106670        	and	a6, a6, a7
2000a043:	13e460        	wsr.intenable	a6
D:\IM_3D_TLC\firmware\HAL\Interrupt/HAL_Interrupt.c:207
    /* MCU0 uses an inter-processor interrupt to wake a subsystem up
     since the subsystem MCU would sleep in WAITI state when it 
     completes one stage of IDLE task. */
#ifndef MCU0
    /* Only MCU1/MCU2 processes inter-processor interrupts which come from MCU0. */
    if (0 != (ulIntSrc & (BIT_ORINT_MCU0_1 | BIT_ORINT_MCU0_2)))
2000a046:	07e057        	bbsi	a0, 5, 2000a051 <HAL_UserExcpEntry+0x59>
D:\IM_3D_TLC\firmware\HAL\Interrupt/HAL_Interrupt.c:126
            /* Just records exception cause and source instruction address at the start of OTFB and hangs. */
            HAL_SaveMCUExcCause(ulExcCause);
            break;
    }

    return;
2000a049:	1108      	l32i.n	a0, a1, 4
2000a04b:	10c112        	addi	a1, a1, 16
2000a04e:	f00d      	ret.n

2000a050 <HAL_UserExcpEntry+0x58>:
	...

2000a051 <HAL_UserExcpEntry+0x59>:
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
    20141028    Gavin   change attribute to "INLINE"
------------------------------------------------------------------------------*/
INLINE U32 HAL_GetMcuId(void)
{
    U32 ulMcuId;
    ulMcuId = XT_RSR_PRID();
2000a051:	03eb90        	rsr.prid	a9
2000a054:	0199      	s32i.n	a9, a1, 0
D:\IM_3D_TLC\firmware\HAL\Interrupt/HAL_Interrupt.c:453
void HAL_IPIIntEntry(void)
{
    U32 ulMCUId = HAL_GetMcuId();

#ifndef MIX_VECTOR
    FW_ChkNtfnMsg();
2000a056:	dae401        	l32r	a0, 20000be8 <_stext+0x4e8>
2000a059:	0000c0        	callx0	a0
2000a05c:	0128      	l32i.n	a2, a1, 0
2000a05e:	742020        	extui	a2, a2, 0, 8
2000a061:	fff6c5        	call0	20009fd0 <HAL_AssertIPI>
D:\IM_3D_TLC\firmware\HAL\Interrupt/HAL_Interrupt.c:126
            /* Just records exception cause and source instruction address at the start of OTFB and hangs. */
            HAL_SaveMCUExcCause(ulExcCause);
            break;
    }

    return;
2000a064:	1108      	l32i.n	a0, a1, 4
2000a066:	10c112        	addi	a1, a1, 16
2000a069:	f00d      	ret.n

2000a06b <HAL_UserExcpEntry+0x73>:
	...

2000a06d <HAL_UserExcpEntry+0x75>:
D:\IM_3D_TLC\firmware\HAL\Interrupt/HAL_Interrupt.c:435

#ifndef SIM
    /* Common: Timer overflows. */
    if (0 != (ulHostCIntPending & INT_HOSTC_TIMER))
    {
        HAL_HCmdTimerInterruptEntry();
2000a06d:	fff745        	call0	20009fe4 <HAL_HCmdTimerInterruptEntry>
2000a070:	2108      	l32i.n	a0, a1, 8
2000a072:	d9a341        	l32r	a4, 20000700 <_stext>
D:\IM_3D_TLC\firmware\HAL\Interrupt/HAL_Interrupt.c:437

        ulHostCIntClear |= INT_HOSTC_TIMER;
2000a075:	00a232        	movi	a3, 0x200
2000a078:	ffec46        	j	2000a02d <HAL_UserExcpEntry+0x35>

2000a07b <HAL_UserExcpEntry+0x83>:
	...

2000a07c <HAL_NfcCmdTrigger>:
HAL_NfcCmdTrigger():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
    20151028     abby    add parameter ucLun
------------------------------------------------------------------------------*/
U8 HAL_NfcGetWP(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
2000a07c:	d9aa91        	l32r	a9, 20000724 <_stext+0x24>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1000
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
    20151030    abby    modify to meet VT3533, add input para ucXorEngId
------------------------------------------------------------------------------*/
void HAL_NfcCmdTrigger(FLASH_ADDR *pFlashAddr, U8 ucReqType, BOOL bIsXorParityWriteCmd, U8 ucXorId)
{
2000a07f:	f0c112        	addi	a1, a1, -16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:931
    20151028    abby    modify to meet VT3533
------------------------------------------------------------------------------*/
LOCAL void HAL_NfcSetTriggerReg(FLASH_ADDR *pFlashAddr, U8 ucReqType, BOOL bIsXorParityWriteCmd, U8 ucXorId)
{
    U8 ucPhyPU, ucLun, ucWp;
    NFC_TRIGGER_REG tNfcTriggerReg = {0};
2000a082:	da33a1        	l32r	a10, 20000950 <_stext+0x250>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
    20151028     abby    add parameter ucLun
------------------------------------------------------------------------------*/
U8 HAL_NfcGetWP(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
2000a085:	000282        	l8ui	a8, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:931
    20151028    abby    modify to meet VT3533
------------------------------------------------------------------------------*/
LOCAL void HAL_NfcSetTriggerReg(FLASH_ADDR *pFlashAddr, U8 ucReqType, BOOL bIsXorParityWriteCmd, U8 ucXorId)
{
    U8 ucPhyPU, ucLun, ucWp;
    NFC_TRIGGER_REG tNfcTriggerReg = {0};
2000a088:	000aa2        	l8ui	a10, a10, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
    20151028     abby    add parameter ucLun
------------------------------------------------------------------------------*/
U8 HAL_NfcGetWP(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
2000a08b:	889a      	add.n	a8, a8, a9
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:931
    20151028    abby    modify to meet VT3533
------------------------------------------------------------------------------*/
LOCAL void HAL_NfcSetTriggerReg(FLASH_ADDR *pFlashAddr, U8 ucReqType, BOOL bIsXorParityWriteCmd, U8 ucXorId)
{
    U8 ucPhyPU, ucLun, ucWp;
    NFC_TRIGGER_REG tNfcTriggerReg = {0};
2000a08d:	0041a2        	s8i	a10, a1, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:934
    BOOL bsSLCMode;
    
    ucLun   = pFlashAddr->ucLun;
2000a090:	010292        	l8ui	a9, a2, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1000
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
    20151030    abby    modify to meet VT3533, add input para ucXorEngId
------------------------------------------------------------------------------*/
void HAL_NfcCmdTrigger(FLASH_ADDR *pFlashAddr, U8 ucReqType, BOOL bIsXorParityWriteCmd, U8 ucXorId)
{
2000a093:	d9a2a1        	l32r	a10, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
    20151028     abby    add parameter ucLun
------------------------------------------------------------------------------*/
U8 HAL_NfcGetWP(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
2000a096:	800882        	l8ui	a8, a8, 128
2000a099:	3e2ab2        	l32i	a11, a10, 248
2000a09c:	a07890        	addx4	a7, a8, a9
2000a09f:	a077b0        	addx4	a7, a7, a11
2000a0a2:	0020c0        	memw
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:944
#if (defined(XTMP) || defined(SIM))
    NfcM_ISetCmdCode(ucPhyPU, ucLun, ucWp, ucReqType);
    NfcM_ISetCmdMode(ucPhyPU, ucLun, ucWp, bsSLCMode);
#endif

    tNfcTriggerReg.bsCmdType = g_aPrcqTable[ucReqType].bsTrigType;
2000a0a5:	fca062        	movi	a6, 252
2000a0a8:	d9dfb1        	l32r	a11, 20000824 <_stext+0x124>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
    20151028     abby    add parameter ucLun
------------------------------------------------------------------------------*/
U8 HAL_NfcGetWP(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
2000a0ab:	000772        	l8ui	a7, a7, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:944
#if (defined(XTMP) || defined(SIM))
    NfcM_ISetCmdCode(ucPhyPU, ucLun, ucWp, ucReqType);
    NfcM_ISetCmdMode(ucPhyPU, ucLun, ucWp, bsSLCMode);
#endif

    tNfcTriggerReg.bsCmdType = g_aPrcqTable[ucReqType].bsTrigType;
2000a0ae:	a0b3b0        	addx4	a11, a3, a11
2000a0b1:	4b38      	l32i.n	a3, a11, 16
2000a0b3:	0001b2        	l8ui	a11, a1, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:512
    20151028     abby    add parameter ucLun
------------------------------------------------------------------------------*/
U8 HAL_NfcGetWP(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
2000a0b6:	417670        	srli	a7, a7, 6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:944
#if (defined(XTMP) || defined(SIM))
    NfcM_ISetCmdCode(ucPhyPU, ucLun, ucWp, ucReqType);
    NfcM_ISetCmdMode(ucPhyPU, ucLun, ucWp, bsSLCMode);
#endif

    tNfcTriggerReg.bsCmdType = g_aPrcqTable[ucReqType].bsTrigType;
2000a0b9:	10bb60        	and	a11, a11, a6
2000a0bc:	416930        	srli	a6, a3, 9
2000a0bf:	0106b4        	insbits	a11, a6, 0, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:951
    
    /* CE_SEL = 1 only when CE decode enable & Logic LUN = 2/3 & LUN_PER_CE = 2 */
    tNfcTriggerReg.bsCESel = (0 == NFC_CE_PER_PU_BITS) ? 0 : ucLun / LUN_PER_CE;

    /* For write command, 1-stand for write XOR parity  */ 
    if ((NFC_WRITE_CMD == tNfcTriggerReg.bsCmdType) &&(FALSE != bIsXorParityWriteCmd))
2000a0c2:	f3a062        	movi	a6, 243
2000a0c5:	102b60        	and	a2, a11, a6
2000a0c8:	146020        	extui	a6, a2, 0, 2
2000a0cb:	16ec      	bnez.n	a6, 2000a0f0 <HAL_NfcCmdTrigger+0x74>
2000a0cd:	f49c      	beqz.n	a4, 2000a0f0 <HAL_NfcCmdTrigger+0x74>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:970
    else  
    {
        tNfcTriggerReg.bsExtCmd = g_aPrcqTable[ucReqType].bsIsPioCmd;
    }

    *(volatile U8*)&g_pNfcTrigger->aNfcTriggerReg[ucPhyPU][ucLun][ucWp] = *(U8*)&tNfcTriggerReg;
2000a0cf:	422a42        	l32i	a4, a10, 0x108
2000a0d2:	398a      	add.n	a3, a9, a8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:954

    /* For write command, 1-stand for write XOR parity  */ 
    if ((NFC_WRITE_CMD == tNfcTriggerReg.bsCmdType) &&(FALSE != bIsXorParityWriteCmd))
    {
        tNfcTriggerReg.bsExtCmd = TRUE;
        tNfcTriggerReg.bsExtCmdSel = ucXorId;
2000a0d4:	34b020        	extui	a11, a2, 0, 4
2000a0d7:	2355b4        	insbits	a11, a5, 5, 7
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:970
    else  
    {
        tNfcTriggerReg.bsExtCmd = g_aPrcqTable[ucReqType].bsIsPioCmd;
    }

    *(volatile U8*)&g_pNfcTrigger->aNfcTriggerReg[ucPhyPU][ucLun][ucWp] = *(U8*)&tNfcTriggerReg;
2000a0da:	b03340        	addx8	a3, a3, a4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:954

    /* For write command, 1-stand for write XOR parity  */ 
    if ((NFC_WRITE_CMD == tNfcTriggerReg.bsCmdType) &&(FALSE != bIsXorParityWriteCmd))
    {
        tNfcTriggerReg.bsExtCmd = TRUE;
        tNfcTriggerReg.bsExtCmdSel = ucXorId;
2000a0dd:	041c      	movi.n	a4, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:970
    else  
    {
        tNfcTriggerReg.bsExtCmd = g_aPrcqTable[ucReqType].bsIsPioCmd;
    }

    *(volatile U8*)&g_pNfcTrigger->aNfcTriggerReg[ucPhyPU][ucLun][ucWp] = *(U8*)&tNfcTriggerReg;
2000a0df:	373a      	add.n	a3, a7, a3
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:954

    /* For write command, 1-stand for write XOR parity  */ 
    if ((NFC_WRITE_CMD == tNfcTriggerReg.bsCmdType) &&(FALSE != bIsXorParityWriteCmd))
    {
        tNfcTriggerReg.bsExtCmd = TRUE;
        tNfcTriggerReg.bsExtCmdSel = ucXorId;
2000a0e1:	20bb40        	or	a11, a11, a4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:970
    else  
    {
        tNfcTriggerReg.bsExtCmd = g_aPrcqTable[ucReqType].bsIsPioCmd;
    }

    *(volatile U8*)&g_pNfcTrigger->aNfcTriggerReg[ucPhyPU][ucLun][ucWp] = *(U8*)&tNfcTriggerReg;
2000a0e4:	0020c0        	memw
2000a0e7:	0043b2        	s8i	a11, a3, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1007

    #ifdef SIM
    NFC_ModelSchedule();
    #endif

    return;
2000a0ea:	10c112        	addi	a1, a1, 16
2000a0ed:	f00d      	ret.n

2000a0ef <HAL_NfcCmdTrigger+0x73>:
	...

2000a0f0 <HAL_NfcCmdTrigger+0x74>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:970
    else  
    {
        tNfcTriggerReg.bsExtCmd = g_aPrcqTable[ucReqType].bsIsPioCmd;
    }

    *(volatile U8*)&g_pNfcTrigger->aNfcTriggerReg[ucPhyPU][ucLun][ucWp] = *(U8*)&tNfcTriggerReg;
2000a0f0:	422ab2        	l32i	a11, a10, 0x108
2000a0f3:	698a      	add.n	a6, a9, a8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:967
    }
#endif
    /* For Normal or PIO cmd: 0-Normal; 1-PIO  */
    else  
    {
        tNfcTriggerReg.bsExtCmd = g_aPrcqTable[ucReqType].bsIsPioCmd;
2000a0f5:	efa052        	movi	a5, 239
2000a0f8:	105250        	and	a5, a2, a5
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:970
    }

    *(volatile U8*)&g_pNfcTrigger->aNfcTriggerReg[ucPhyPU][ucLun][ucWp] = *(U8*)&tNfcTriggerReg;
2000a0fb:	b066b0        	addx8	a6, a6, a11
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:967
    }
#endif
    /* For Normal or PIO cmd: 0-Normal; 1-PIO  */
    else  
    {
        tNfcTriggerReg.bsExtCmd = g_aPrcqTable[ucReqType].bsIsPioCmd;
2000a0fe:	41b830        	srli	a11, a3, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:970
    }

    *(volatile U8*)&g_pNfcTrigger->aNfcTriggerReg[ucPhyPU][ucLun][ucWp] = *(U8*)&tNfcTriggerReg;
2000a101:	676a      	add.n	a6, a7, a6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:967
    }
#endif
    /* For Normal or PIO cmd: 0-Normal; 1-PIO  */
    else  
    {
        tNfcTriggerReg.bsExtCmd = g_aPrcqTable[ucReqType].bsIsPioCmd;
2000a103:	204b54        	insbits	a5, a11, 4, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:970
    }

    *(volatile U8*)&g_pNfcTrigger->aNfcTriggerReg[ucPhyPU][ucLun][ucWp] = *(U8*)&tNfcTriggerReg;
2000a106:	0020c0        	memw
2000a109:	004652        	s8i	a5, a6, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1007

    #ifdef SIM
    NFC_ModelSchedule();
    #endif

    return;
2000a10c:	10c112        	addi	a1, a1, 16
2000a10f:	f00d      	ret.n

2000a111 <HAL_NfcCmdTrigger+0x95>:
2000a111:	000000                                        ...

2000a114 <HAL_NfcGetPrcqStartDw>:
HAL_NfcGetPrcqStartDw():
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:830
History:
    20151028    abby   create.
------------------------------------------------------------------------------*/
U32 HAL_NfcGetPrcqStartDw(U8 ucCmdCode)
{
    return g_aPrcqTable[ucCmdCode].bsPRCQStartDw;
2000a114:	d9c431        	l32r	a3, 20000824 <_stext+0x124>
2000a117:	a02230        	addx4	a2, a2, a3
2000a11a:	4228      	l32i.n	a2, a2, 16
2000a11c:	842b20        	extui	a2, a2, 11, 9
2000a11f:	f00d      	ret.n

2000a121 <HAL_NfcGetPrcqStartDw+0xd>:
2000a121:	000000                                        ...

2000a124 <HAL_NfcGetNfcqEntryAddr>:
HAL_NfcGetNfcqEntryAddr():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:757
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
    20151028    abby    add para ucLun,del para RP
------------------------------------------------------------------------------*/
NFCQ_ENTRY * HAL_NfcGetNfcqEntryAddr(U8 ucPU, U8 ucLun)
{
2000a124:	d98061        	l32r	a6, 20000724 <_stext+0x24>
2000a127:	d97d51        	l32r	a5, 2000071c <_stext+0x1c>
2000a12a:	626a      	add.n	a6, a2, a6
2000a12c:	800662        	l8ui	a6, a6, 128
2000a12f:	3e2572        	l32i	a7, a5, 248
2000a132:	a06630        	addx4	a6, a6, a3
2000a135:	a06670        	addx4	a6, a6, a7
2000a138:	0020c0        	memw
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:761
    U8 ucLevel;
    ucLevel = HAL_NfcGetWP(ucPU, ucLun);   

    return (NFCQ_ENTRY *)(&g_pNfcq->aNfcqEntry[ucPU][ucLun][ucLevel]);
2000a13b:	423a      	add.n	a4, a2, a3
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:757
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
    20151028    abby    add para ucLun,del para RP
------------------------------------------------------------------------------*/
NFCQ_ENTRY * HAL_NfcGetNfcqEntryAddr(U8 ucPU, U8 ucLun)
{
2000a13d:	000662        	l8ui	a6, a6, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:761
    U8 ucLevel;
    ucLevel = HAL_NfcGetWP(ucPU, ucLun);   

    return (NFCQ_ENTRY *)(&g_pNfcq->aNfcqEntry[ucPU][ucLun][ucLevel]);
2000a140:	3d2522        	l32i	a2, a5, 244
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:757
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
    20151028    abby    add para ucLun,del para RP
------------------------------------------------------------------------------*/
NFCQ_ENTRY * HAL_NfcGetNfcqEntryAddr(U8 ucPU, U8 ucLun)
{
2000a143:	416660        	srli	a6, a6, 6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:761
    U8 ucLevel;
    ucLevel = HAL_NfcGetWP(ucPU, ucLun);   

    return (NFCQ_ENTRY *)(&g_pNfcq->aNfcqEntry[ucPU][ucLun][ucLevel]);
2000a146:	b04460        	addx8	a4, a4, a6
2000a149:	1144a0        	slli	a4, a4, 6
2000a14c:	224a      	add.n	a2, a2, a4
2000a14e:	f00d      	ret.n

2000a150 <HAL_NfcIsLunAccessable>:
HAL_NfcIsLunAccessable():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1134
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
    20151105    abby    expend to lun level, change name from HAL_NfcIsPUAccessable
-----------------------------------------------------------------------------*/
BOOL HAL_NfcIsLunAccessable(U8 ucPU, U8 ucLun)
{
2000a150:	f0c112        	addi	a1, a1, -16
2000a153:	006102        	s32i	a0, a1, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:583
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
------------------------------------------------------------------------------*/
BOOL HAL_NfcGetFull(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU;
    ucPhyPU = HAL_NfcGetPhyPU(ucPU);
2000a156:	d97301        	l32r	a0, 20000724 <_stext+0x24>
2000a159:	d97041        	l32r	a4, 2000071c <_stext+0x1c>
2000a15c:	800200        	add	a0, a2, a0
2000a15f:	800002        	l8ui	a0, a0, 128
2000a162:	3e2442        	l32i	a4, a4, 248
2000a165:	a00030        	addx4	a0, a0, a3
2000a168:	a00040        	addx4	a0, a0, a4
2000a16b:	0020c0        	memw
2000a16e:	000002        	l8ui	a0, a0, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1135
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
    20151105    abby    expend to lun level, change name from HAL_NfcIsPUAccessable
-----------------------------------------------------------------------------*/
BOOL HAL_NfcIsLunAccessable(U8 ucPU, U8 ucLun)
{
    if ((TRUE == HAL_NfcGetFull(ucPU, ucLun)) || (TRUE == HAL_NfcGetErrHold(ucPU, ucLun)))
2000a171:	0fe037        	bbsi	a0, 3, 2000a184 <HAL_NfcIsLunAccessable+0x34>
2000a174:	fa5785        	call0	200046f0 <HAL_NfcGetErrHold>
2000a177:	091226        	beqi	a2, 1, 2000a184 <HAL_NfcIsLunAccessable+0x34>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1139
    {
        return FALSE;
    }
    return TRUE;
2000a17a:	01a022        	movi	a2, 1
2000a17d:	0108      	l32i.n	a0, a1, 0
2000a17f:	10c112        	addi	a1, a1, 16
2000a182:	f00d      	ret.n

2000a184 <HAL_NfcIsLunAccessable+0x34>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1137
-----------------------------------------------------------------------------*/
BOOL HAL_NfcIsLunAccessable(U8 ucPU, U8 ucLun)
{
    if ((TRUE == HAL_NfcGetFull(ucPU, ucLun)) || (TRUE == HAL_NfcGetErrHold(ucPU, ucLun)))
    {
        return FALSE;
2000a184:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1139
    }
    return TRUE;
2000a186:	0108      	l32i.n	a0, a1, 0
2000a188:	10c112        	addi	a1, a1, 16
2000a18b:	f00d      	ret.n

2000a18d <HAL_NfcIsLunAccessable+0x3d>:
2000a18d:	000000                                        ...

2000a190 <HAL_GetSubSystemCEMap>:
HAL_GetSubSystemCEMap():
D:\IM_3D_TLC\firmware\HAL\ParamTable/HAL_ParamTable.c:502
    }

    pBootLoaderFile = HalGetBootLoaderFileBase();
    pPTable = &pBootLoaderFile->tSysParameterTable;
        
    return pPTable->ulSubSysCEMap[ulMcuId-MCU1_ID];
2000a190:	da9721        	l32r	a2, 20000bec <_stext+0x4ec>
2000a193:	222222        	l32i	a2, a2, 136
2000a196:	f00d      	ret.n

2000a198 <HAL_DecFifoReset>:
HAL_DecFifoReset():
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:66
History:
    20160310    abby    create
------------------------------------------------------------------------------*/
void HAL_DecFifoReset(void)
{
    g_pDecFifoCfg->bsDecFifoRst = 1;
2000a198:	da9651        	l32r	a5, 20000bf0 <_stext+0x4f0>
2000a19b:	d96031        	l32r	a3, 2000071c <_stext+0x1c>
2000a19e:	d9a241        	l32r	a4, 20000828 <_stext+0x128>
2000a1a1:	322332        	l32i	a3, a3, 200
2000a1a4:	0020c0        	memw
2000a1a7:	0328      	l32i.n	a2, a3, 0
2000a1a9:	102250        	and	a2, a2, a5
2000a1ac:	202240        	or	a2, a2, a4
2000a1af:	0020c0        	memw
2000a1b2:	0329      	s32i.n	a2, a3, 0
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:70
#ifdef SIM
    g_pDecFifoCfg->bsDecFifoRst = 0;
#endif
    return;
2000a1b4:	f00d      	ret.n

2000a1b6 <HAL_DecFifoReset+0x1e>:
	...

2000a1b8 <L2_SharedBuffAlignDramMemMap..EE_1482204275>:
L2_SharedBuffAlignDramMemMap():
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:223
    COM_MemIncBaseAddr(&ulFreeBase, GBBT_BUF_SIZE);
    COM_MemAddrPageBoundaryAlign(&ulFreeBase);
        
    // JasonGuo20161128: move the PbnBindingTable to DCache for improving the perofrmance#0.
#ifdef DCACHE
    l_ulPbnBindingTable = ulFreeBase + DRAM_HIGH_ADDR_OFFSET;
2000a1b8:	d96281        	l32r	a8, 20000740 <_stext+0x40>
2000a1bb:	d9e371        	l32r	a7, 20000948 <_stext+0x248>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:214
}

LOCAL void L2_SharedBuffAlignDramMemMap(U32 *pFreeSharedDramBase)
{
    U32 ulFreeBase = *pFreeSharedDramBase;
    COM_MemAddrPageBoundaryAlign(&ulFreeBase);
2000a1be:	d95751        	l32r	a5, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:212

    return;
}

LOCAL void L2_SharedBuffAlignDramMemMap(U32 *pFreeSharedDramBase)
{
2000a1c1:	d97e61        	l32r	a6, 200007bc <_stext+0xbc>
2000a1c4:	da8c41        	l32r	a4, 20000bf4 <_stext+0x4f4>
2000a1c7:	f0c112        	addi	a1, a1, -16
2000a1ca:	0109      	s32i.n	a0, a1, 0
2000a1cc:	21d9      	s32i.n	a13, a1, 8
2000a1ce:	11c9      	s32i.n	a12, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:213
    U32 ulFreeBase = *pFreeSharedDramBase;
2000a1d0:	02d8      	l32i.n	a13, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:212

    return;
}

LOCAL void L2_SharedBuffAlignDramMemMap(U32 *pFreeSharedDramBase)
{
2000a1d2:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:213
    U32 ulFreeBase = *pFreeSharedDramBase;
2000a1d4:	0d0d      	mov.n	a0, a13
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:106
    ulMemAddr = *pMemAddr;

    /* page align in memory */
    if( (ulMemAddr & THIRTYTWOKB_SIZE_MSK) != 0)
    {
        ulMemAddr = ( ulMemAddr & (~THIRTYTWOKB_SIZE_MSK)) + THIRTYTWOKB_SIZE;
2000a1d6:	102d40        	and	a2, a13, a4
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:104
    U32 ulMemAddr;

    ulMemAddr = *pMemAddr;

    /* page align in memory */
    if( (ulMemAddr & THIRTYTWOKB_SIZE_MSK) != 0)
2000a1d9:	f430d0        	extui	a3, a13, 0, 16
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:106
    {
        ulMemAddr = ( ulMemAddr & (~THIRTYTWOKB_SIZE_MSK)) + THIRTYTWOKB_SIZE;
2000a1dc:	226a      	add.n	a2, a2, a6
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:104
    U32 ulMemAddr;

    ulMemAddr = *pMemAddr;

    /* page align in memory */
    if( (ulMemAddr & THIRTYTWOKB_SIZE_MSK) != 0)
2000a1de:	93d230        	movnez	a13, a2, a3
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:217
    COM_MemAddrPageBoundaryAlign(&ulFreeBase);

    // Part 1
    g_ulGBBT = ulFreeBase;
2000a1e1:	1165d2        	s32i	a13, a5, 68
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:101
/*address align by 32KBytes size*/
void COM_MemAddrPageBoundaryAlign(U32 *pMemAddr)
{
    U32 ulMemAddr;

    ulMemAddr = *pMemAddr;
2000a1e4:	dd6a      	add.n	a13, a13, a6
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:106

    /* page align in memory */
    if( (ulMemAddr & THIRTYTWOKB_SIZE_MSK) != 0)
    {
        ulMemAddr = ( ulMemAddr & (~THIRTYTWOKB_SIZE_MSK)) + THIRTYTWOKB_SIZE;
2000a1e6:	109d40        	and	a9, a13, a4
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:104
    U32 ulMemAddr;

    ulMemAddr = *pMemAddr;

    /* page align in memory */
    if( (ulMemAddr & THIRTYTWOKB_SIZE_MSK) != 0)
2000a1e9:	f4a0d0        	extui	a10, a13, 0, 16
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:106
    {
        ulMemAddr = ( ulMemAddr & (~THIRTYTWOKB_SIZE_MSK)) + THIRTYTWOKB_SIZE;
2000a1ec:	996a      	add.n	a9, a9, a6
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:104
    U32 ulMemAddr;

    ulMemAddr = *pMemAddr;

    /* page align in memory */
    if( (ulMemAddr & THIRTYTWOKB_SIZE_MSK) != 0)
2000a1ee:	93d9a0        	movnez	a13, a9, a10
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:223
    COM_MemIncBaseAddr(&ulFreeBase, GBBT_BUF_SIZE);
    COM_MemAddrPageBoundaryAlign(&ulFreeBase);
        
    // JasonGuo20161128: move the PbnBindingTable to DCache for improving the perofrmance#0.
#ifdef DCACHE
    l_ulPbnBindingTable = ulFreeBase + DRAM_HIGH_ADDR_OFFSET;
2000a1f1:	7d7a      	add.n	a7, a13, a7
2000a1f3:	0020c0        	memw
2000a1f6:	1879      	s32i.n	a7, a8, 4
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:101
/*address align by 32KBytes size*/
void COM_MemAddrPageBoundaryAlign(U32 *pMemAddr)
{
    U32 ulMemAddr;

    ulMemAddr = *pMemAddr;
2000a1f8:	e558      	l32i.n	a5, a5, 56
2000a1fa:	da7f71        	l32r	a7, 20000bf8 <_stext+0x4f8>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:230
    l_ulPbnBindingTable = ulFreeBase;
#endif
    COM_MemIncBaseAddr(&ulFreeBase, SUBSYSTEM_LUN_NUM * BBT_BLK_PER_PLN * PLN_PER_LUN * sizeof(U16));        
    COM_MemAddrPageBoundaryAlign(&ulFreeBase);
    // OverFlow Check and Update Free Base
    if (ulFreeBase - DRAM_DATA_BUFF_MCU12_BASE >= DRAM_BUFF_MCU12_SIZE)
2000a1fd:	da7f21        	l32r	a2, 20000bfc <_stext+0x4fc>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:101
2000a200:	825570        	mull	a5, a5, a7
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:230
2000a203:	da7f31        	l32r	a3, 20000c00 <_stext+0x500>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:101
2000a206:	dd5a      	add.n	a13, a13, a5
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:104

    /* page align in memory */
    if( (ulMemAddr & THIRTYTWOKB_SIZE_MSK) != 0)
2000a208:	f450d0        	extui	a5, a13, 0, 16
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:106
    {
        ulMemAddr = ( ulMemAddr & (~THIRTYTWOKB_SIZE_MSK)) + THIRTYTWOKB_SIZE;
2000a20b:	104d40        	and	a4, a13, a4
2000a20e:	446a      	add.n	a4, a4, a6
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:104
    U32 ulMemAddr;

    ulMemAddr = *pMemAddr;

    /* page align in memory */
    if( (ulMemAddr & THIRTYTWOKB_SIZE_MSK) != 0)
2000a210:	93d450        	movnez	a13, a4, a5
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:230
2000a213:	3d3a      	add.n	a3, a13, a3
2000a215:	273237        	bltu	a2, a3, 2000a240 <L2_SharedBuffAlignDramMemMap..EE_1482204275+0x88>

2000a218 <L2_SharedBuffAlignDramMemMap..EE_1482204275+0x60>:
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
2000a218:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:236
    {
        DBG_Printf("MCU#%d Allocate Shared Dram OverFlow in L2_SharedBuffAlignDramMemMap.\n", HAL_GetMcuId());
        DBG_Getch();
    }

    DBG_Printf("MCU#%d L2 allocate the shared-BuffAlign Dram size %d KB, Rsvd %d M.\n", HAL_GetMcuId(), (ulFreeBase - *pFreeSharedDramBase)/1024, (DRAM_BUFF_MCU12_SIZE - (ulFreeBase - *pFreeSharedDramBase))/1024/1024);
2000a21b:	da7b21        	l32r	a2, 20000c08 <_stext+0x508>
2000a21e:	da7961        	l32r	a6, 20000c04 <_stext+0x504>
2000a221:	c050d0        	sub	a5, a0, a13
2000a224:	c04d00        	sub	a4, a13, a0
2000a227:	414a40        	srli	a4, a4, 10
2000a22a:	556a      	add.n	a5, a5, a6
2000a22c:	b55450        	extui	a5, a5, 20, 12
2000a22f:	00a345        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:238

    *pFreeSharedDramBase = ulFreeBase;
2000a232:	0cd9      	s32i.n	a13, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:240
    
    return;
2000a234:	0108      	l32i.n	a0, a1, 0
2000a236:	11c8      	l32i.n	a12, a1, 4
2000a238:	21d8      	l32i.n	a13, a1, 8
2000a23a:	10c112        	addi	a1, a1, 16
2000a23d:	f00d      	ret.n

2000a23f <L2_SharedBuffAlignDramMemMap..EE_1482204275+0x87>:
	...

2000a240 <L2_SharedBuffAlignDramMemMap..EE_1482204275+0x88>:
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
2000a240:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:232
    COM_MemIncBaseAddr(&ulFreeBase, SUBSYSTEM_LUN_NUM * BBT_BLK_PER_PLN * PLN_PER_LUN * sizeof(U16));        
    COM_MemAddrPageBoundaryAlign(&ulFreeBase);
    // OverFlow Check and Update Free Base
    if (ulFreeBase - DRAM_DATA_BUFF_MCU12_BASE >= DRAM_BUFF_MCU12_SIZE)
    {
        DBG_Printf("MCU#%d Allocate Shared Dram OverFlow in L2_SharedBuffAlignDramMemMap.\n", HAL_GetMcuId());
2000a243:	da7221        	l32r	a2, 20000c0c <_stext+0x50c>
2000a246:	00a1c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:233
        DBG_Getch();
2000a249:	d93301        	l32r	a0, 20000718 <_stext+0x18>
2000a24c:	0000c0        	callx0	a0
2000a24f:	0c08      	l32i.n	a0, a12, 0
2000a251:	fff0c6        	j	2000a218 <L2_SharedBuffAlignDramMemMap..EE_1482204275+0x60>

2000a254 <L2_Shared16DWAlignDramMemMap..DE_1482204275>:
L2_Shared16DWAlignDramMemMap():
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:166
    *pFreeSharedDRAMBase = ulFreeBase;
    return;
}

LOCAL void L2_Shared16DWAlignDramMemMap(U32 *pFreeSharedDramBase)
{
2000a254:	c0af82        	movi	a8, -64
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:124
    ulMemAddr = *pMemAddr;

    /* 16DW align in memory */
    if( (ulMemAddr & SIXTEENDW_SIZE_MSK) != 0)
    {
        ulMemAddr = (ulMemAddr & (~SIXTEENDW_SIZE_MSK)) + SIXTEENDW_SIZE;
2000a257:	d9bc51        	l32r	a5, 20000948 <_stext+0x248>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:176

#ifdef DCACHE
    ulDramOffSet = DRAM_HIGH_ADDR_OFFSET;
#endif   

    for (i = 0; i < SUBSYSTEM_SUPERPU_NUM; i++)
2000a25a:	da6d71        	l32r	a7, 20000c10 <_stext+0x510>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:166
    *pFreeSharedDRAMBase = ulFreeBase;
    return;
}

LOCAL void L2_Shared16DWAlignDramMemMap(U32 *pFreeSharedDramBase)
{
2000a25d:	f63c      	movi.n	a6, 63
2000a25f:	f0c112        	addi	a1, a1, -16
2000a262:	21d9      	s32i.n	a13, a1, 8
2000a264:	11c9      	s32i.n	a12, a1, 4
2000a266:	0109      	s32i.n	a0, a1, 0
2000a268:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:124
2000a26a:	d92c01        	l32r	a0, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:168
    U32 i, ulDramOffSet = 0;
    U32 ulFreeBase = *pFreeSharedDramBase;
2000a26d:	0228      	l32i.n	a2, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:176

#ifdef DCACHE
    ulDramOffSet = DRAM_HIGH_ADDR_OFFSET;
#endif   

    for (i = 0; i < SUBSYSTEM_SUPERPU_NUM; i++)
2000a26f:	e098      	l32i.n	a9, a0, 56
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:168
}

LOCAL void L2_Shared16DWAlignDramMemMap(U32 *pFreeSharedDramBase)
{
    U32 i, ulDramOffSet = 0;
    U32 ulFreeBase = *pFreeSharedDramBase;
2000a271:	02ad      	mov.n	a10, a2
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:122
    U32 ulMemAddr;

    ulMemAddr = *pMemAddr;

    /* 16DW align in memory */
    if( (ulMemAddr & SIXTEENDW_SIZE_MSK) != 0)
2000a273:	050627        	bnone	a6, a2, 2000a27c <L2_Shared16DWAlignDramMemMap..DE_1482204275+0x28>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:124
    {
        ulMemAddr = (ulMemAddr & (~SIXTEENDW_SIZE_MSK)) + SIXTEENDW_SIZE;
2000a276:	102280        	and	a2, a2, a8
2000a279:	40c222        	addi	a2, a2, 64

2000a27c <L2_Shared16DWAlignDramMemMap..DE_1482204275+0x28>:
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:127
    }

    *pMemAddr = ulMemAddr;
2000a27c:	02dd      	mov.n	a13, a2
2000a27e:	159976        	loopnez	a9, 2000a297 <L2_Shared16DWAlignDramMemMap..DE_1482204275+0x43>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:119
/* 16DW align */
void COM_MemAddr16DWAlign(U32 *pMemAddr)
{
    U32 ulMemAddr;

    ulMemAddr = *pMemAddr;
2000a281:	bd7a      	add.n	a11, a13, a7
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:178
    ulDramOffSet = DRAM_HIGH_ADDR_OFFSET;
#endif   

    for (i = 0; i < SUBSYSTEM_SUPERPU_NUM; i++)
    {
        pPBIT[i] = (PBIT *)(ulFreeBase + ulDramOffSet);
2000a283:	3d5a      	add.n	a3, a13, a5
2000a285:	7c6032        	s32i	a3, a0, 0x1f0
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:119
2000a288:	0b2d      	mov.n	a2, a11
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:176

#ifdef DCACHE
    ulDramOffSet = DRAM_HIGH_ADDR_OFFSET;
#endif   

    for (i = 0; i < SUBSYSTEM_SUPERPU_NUM; i++)
2000a28a:	004b      	addi.n	a0, a0, 4
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:122

    /* 16DW align in memory */
    if( (ulMemAddr & SIXTEENDW_SIZE_MSK) != 0)
2000a28c:	0506b7        	bnone	a6, a11, 2000a295 <L2_Shared16DWAlignDramMemMap..DE_1482204275+0x41>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:124
    {
        ulMemAddr = (ulMemAddr & (~SIXTEENDW_SIZE_MSK)) + SIXTEENDW_SIZE;
2000a28f:	102b80        	and	a2, a11, a8
2000a292:	40c222        	addi	a2, a2, 64
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:127
    }

    *pMemAddr = ulMemAddr;
2000a295:	02dd      	mov.n	a13, a2

2000a297 <L2_Shared16DWAlignDramMemMap..DE_1482204275+0x43>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:183
        pPBIT[i] = (PBIT *)(ulFreeBase + ulDramOffSet);
        COM_MemIncBaseAddr(&ulFreeBase, sizeof(PBIT));
        COM_MemAddr16DWAlign(&ulFreeBase);
    }

    for (i = 0; i < SUBSYSTEM_SUPERPU_NUM; i++)
2000a297:	02dd      	mov.n	a13, a2
2000a299:	a9bc      	beqz.n	a9, 2000a2d7 <L2_Shared16DWAlignDramMemMap..DE_1482204275+0x83>
2000a29b:	d92001        	l32r	a0, 2000071c <_stext+0x1c>
2000a29e:	169976        	loopnez	a9, 2000a2b8 <L2_Shared16DWAlignDramMemMap..DE_1482204275+0x64>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:119
/* 16DW align */
void COM_MemAddr16DWAlign(U32 *pMemAddr)
{
    U32 ulMemAddr;

    ulMemAddr = *pMemAddr;
2000a2a1:	20dd72        	addmi	a7, a13, 0x2000
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:185
    {
        pVBT[i] = (VBT *)(ulFreeBase + ulDramOffSet);
2000a2a4:	3d5a      	add.n	a3, a13, a5
2000a2a6:	9c6032        	s32i	a3, a0, 0x270
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:119
2000a2a9:	072d      	mov.n	a2, a7
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:183
        pPBIT[i] = (PBIT *)(ulFreeBase + ulDramOffSet);
        COM_MemIncBaseAddr(&ulFreeBase, sizeof(PBIT));
        COM_MemAddr16DWAlign(&ulFreeBase);
    }

    for (i = 0; i < SUBSYSTEM_SUPERPU_NUM; i++)
2000a2ab:	004b      	addi.n	a0, a0, 4
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:122

    /* 16DW align in memory */
    if( (ulMemAddr & SIXTEENDW_SIZE_MSK) != 0)
2000a2ad:	050677        	bnone	a6, a7, 2000a2b6 <L2_Shared16DWAlignDramMemMap..DE_1482204275+0x62>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:124
    {
        ulMemAddr = (ulMemAddr & (~SIXTEENDW_SIZE_MSK)) + SIXTEENDW_SIZE;
2000a2b0:	102780        	and	a2, a7, a8
2000a2b3:	40c222        	addi	a2, a2, 64

2000a2b6 <L2_Shared16DWAlignDramMemMap..DE_1482204275+0x62>:
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:127
    }

    *pMemAddr = ulMemAddr;
2000a2b6:	02dd      	mov.n	a13, a2

2000a2b8 <L2_Shared16DWAlignDramMemMap..DE_1482204275+0x64>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:190
        pVBT[i] = (VBT *)(ulFreeBase + ulDramOffSet);
        COM_MemIncBaseAddr(&ulFreeBase, sizeof(VBT));
        COM_MemAddr16DWAlign(&ulFreeBase);
    }

    for (i = 0; i < SUBSYSTEM_SUPERPU_NUM; i++)
2000a2b8:	d91901        	l32r	a0, 2000071c <_stext+0x1c>
2000a2bb:	f03d      	nop.n
2000a2bd:	169976        	loopnez	a9, 2000a2d7 <L2_Shared16DWAlignDramMemMap..DE_1482204275+0x83>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:119
/* 16DW align */
void COM_MemAddr16DWAlign(U32 *pMemAddr)
{
    U32 ulMemAddr;

    ulMemAddr = *pMemAddr;
2000a2c0:	70cd72        	addi	a7, a13, 112
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:192
    {
        g_PuInfo[i] = (PuInfo*)(ulFreeBase + ulDramOffSet);
2000a2c3:	3d5a      	add.n	a3, a13, a5
2000a2c5:	bc6032        	s32i	a3, a0, 0x2f0
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:119
2000a2c8:	072d      	mov.n	a2, a7
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:190
        pVBT[i] = (VBT *)(ulFreeBase + ulDramOffSet);
        COM_MemIncBaseAddr(&ulFreeBase, sizeof(VBT));
        COM_MemAddr16DWAlign(&ulFreeBase);
    }

    for (i = 0; i < SUBSYSTEM_SUPERPU_NUM; i++)
2000a2ca:	004b      	addi.n	a0, a0, 4
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:122

    /* 16DW align in memory */
    if( (ulMemAddr & SIXTEENDW_SIZE_MSK) != 0)
2000a2cc:	050677        	bnone	a6, a7, 2000a2d5 <L2_Shared16DWAlignDramMemMap..DE_1482204275+0x81>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:124
    {
        ulMemAddr = (ulMemAddr & (~SIXTEENDW_SIZE_MSK)) + SIXTEENDW_SIZE;
2000a2cf:	102780        	and	a2, a7, a8
2000a2d2:	40c222        	addi	a2, a2, 64

2000a2d5 <L2_Shared16DWAlignDramMemMap..DE_1482204275+0x81>:
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:127
    }

    *pMemAddr = ulMemAddr;
2000a2d5:	02dd      	mov.n	a13, a2
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:198
        COM_MemIncBaseAddr(&ulFreeBase, sizeof(PuInfo));
        COM_MemAddr16DWAlign(&ulFreeBase);
    }
    
    // OverFlow Check and Update Free Base
    if ((ulFreeBase - DRAM_DATA_BUFF_MCU12_BASE) > DRAM_BUFF_MCU12_SIZE)
2000a2d7:	da4a31        	l32r	a3, 20000c00 <_stext+0x500>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:190
        pVBT[i] = (VBT *)(ulFreeBase + ulDramOffSet);
        COM_MemIncBaseAddr(&ulFreeBase, sizeof(VBT));
        COM_MemAddr16DWAlign(&ulFreeBase);
    }

    for (i = 0; i < SUBSYSTEM_SUPERPU_NUM; i++)
2000a2da:	da4a01        	l32r	a0, 20000c04 <_stext+0x504>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:198
        COM_MemIncBaseAddr(&ulFreeBase, sizeof(PuInfo));
        COM_MemAddr16DWAlign(&ulFreeBase);
    }
    
    // OverFlow Check and Update Free Base
    if ((ulFreeBase - DRAM_DATA_BUFF_MCU12_BASE) > DRAM_BUFF_MCU12_SIZE)
2000a2dd:	3d3a      	add.n	a3, a13, a3
2000a2df:	253037        	bltu	a0, a3, 2000a308 <L2_Shared16DWAlignDramMemMap..DE_1482204275+0xb4>
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
2000a2e2:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:204
    {
        DBG_Printf("MCU#%d Allocate Shared Dram OverFlow in L2_Shared16DWAlignDramMemMap.\n", HAL_GetMcuId());
        DBG_Getch();
    }

    DBG_Printf("MCU#%d L2 allocate the shared-16DwAlign Dram size %d KB, Rsvd %d M.\n", HAL_GetMcuId(), (ulFreeBase - *pFreeSharedDramBase)/1024, (DRAM_BUFF_MCU12_SIZE - (ulFreeBase - *pFreeSharedDramBase))/1024/1024);
2000a2e5:	da4b21        	l32r	a2, 20000c14 <_stext+0x514>
2000a2e8:	c05ad0        	sub	a5, a10, a13
2000a2eb:	c04da0        	sub	a4, a13, a10
2000a2ee:	414a40        	srli	a4, a4, 10
2000a2f1:	550a      	add.n	a5, a5, a0
2000a2f3:	b55450        	extui	a5, a5, 20, 12
2000a2f6:	0096c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:206
    
    *pFreeSharedDramBase = ulFreeBase;
2000a2f9:	0cd9      	s32i.n	a13, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:208

    return;
2000a2fb:	0108      	l32i.n	a0, a1, 0
2000a2fd:	11c8      	l32i.n	a12, a1, 4
2000a2ff:	21d8      	l32i.n	a13, a1, 8
2000a301:	10c112        	addi	a1, a1, 16
2000a304:	f00d      	ret.n

2000a306 <L2_Shared16DWAlignDramMemMap..DE_1482204275+0xb2>:
	...

2000a308 <L2_Shared16DWAlignDramMemMap..DE_1482204275+0xb4>:
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
2000a308:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:200
    }
    
    // OverFlow Check and Update Free Base
    if ((ulFreeBase - DRAM_DATA_BUFF_MCU12_BASE) > DRAM_BUFF_MCU12_SIZE)
    {
        DBG_Printf("MCU#%d Allocate Shared Dram OverFlow in L2_Shared16DWAlignDramMemMap.\n", HAL_GetMcuId());
2000a30b:	da4321        	l32r	a2, 20000c18 <_stext+0x518>
2000a30e:	009545        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:201
        DBG_Getch();
2000a311:	d90101        	l32r	a0, 20000718 <_stext+0x18>
2000a314:	0000c0        	callx0	a0
2000a317:	da3b01        	l32r	a0, 20000c04 <_stext+0x504>
2000a31a:	0ca8      	l32i.n	a10, a12, 0
2000a31c:	fff086        	j	2000a2e2 <L2_Shared16DWAlignDramMemMap..DE_1482204275+0x8e>

2000a31f <L2_Shared16DWAlignDramMemMap..DE_1482204275+0xcb>:
	...

2000a320 <L2_SharedDRAMRedMemMap..CE_1482204275>:
L2_SharedDRAMRedMemMap():
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:150
    
    *pFreeSharedOTFBBase = ulFreeBase;
    return;
}
LOCAL void L2_SharedDRAMRedMemMap(U32 *pFreeSharedDRAMBase)
{
2000a320:	c0af82        	movi	a8, -64
2000a323:	f93c      	movi.n	a9, 63
2000a325:	025d      	mov.n	a5, a2
2000a327:	f0c112        	addi	a1, a1, -16
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:152
    U32 ulFreeBase = *pFreeSharedDRAMBase;
    COM_MemAddr16DWAlign(&ulFreeBase);
2000a32a:	d8fca1        	l32r	a10, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:150
    
    *pFreeSharedOTFBBase = ulFreeBase;
    return;
}
LOCAL void L2_SharedDRAMRedMemMap(U32 *pFreeSharedDRAMBase)
{
2000a32d:	0109      	s32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:151
    U32 ulFreeBase = *pFreeSharedDRAMBase;
2000a32f:	0208      	l32i.n	a0, a2, 0
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:63
****************************************************************************/
void COM_MemZero(U32* TargetAddr,U32 LengthDW)
{
    U32 i;

    for (i = 0 ; i < LengthDW; i++)
2000a331:	0e2a72        	l32i	a7, a10, 56
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:119
/* 16DW align */
void COM_MemAddr16DWAlign(U32 *pMemAddr)
{
    U32 ulMemAddr;

    ulMemAddr = *pMemAddr;
2000a334:	006d      	mov.n	a6, a0
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:63
****************************************************************************/
void COM_MemZero(U32* TargetAddr,U32 LengthDW)
{
    U32 i;

    for (i = 0 ; i < LengthDW; i++)
2000a336:	907770        	addx2	a7, a7, a7
2000a339:	117750        	slli	a7, a7, 11
2000a33c:	412270        	srli	a2, a7, 2
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:122
    U32 ulMemAddr;

    ulMemAddr = *pMemAddr;

    /* 16DW align in memory */
    if( (ulMemAddr & SIXTEENDW_SIZE_MSK) != 0)
2000a33f:	050907        	bnone	a9, a0, 2000a348 <L2_SharedDRAMRedMemMap..CE_1482204275+0x28>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:124
    {
        ulMemAddr = (ulMemAddr & (~SIXTEENDW_SIZE_MSK)) + SIXTEENDW_SIZE;
2000a342:	106080        	and	a6, a0, a8
2000a345:	40c662        	addi	a6, a6, 64

2000a348 <L2_SharedDRAMRedMemMap..CE_1482204275+0x28>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:155
    COM_MemAddr16DWAlign(&ulFreeBase);

    #ifdef RED_MAP_TO_DRAM
    g_pRedBaseAddr = (RED *)ulFreeBase;
2000a348:	166a62        	s32i	a6, a10, 88
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:156
    COM_MemZero((U32*)g_pRedBaseAddr, 2 * SUBSYSTEM_LUN_NUM*NFCQ_DEPTH*PG_PER_WL*sizeof(RED) / sizeof(U32));
2000a34b:	060d      	mov.n	a0, a6
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:119
/* 16DW align */
void COM_MemAddr16DWAlign(U32 *pMemAddr)
{
    U32 ulMemAddr;

    ulMemAddr = *pMemAddr;
2000a34d:	676a      	add.n	a6, a7, a6
2000a34f:	52ac      	beqz.n	a2, 2000a378 <L2_SharedDRAMRedMemMap..CE_1482204275+0x58>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:63
****************************************************************************/
void COM_MemZero(U32* TargetAddr,U32 LengthDW)
{
    U32 i;

    for (i = 0 ; i < LengthDW; i++)
2000a351:	02ad      	mov.n	a10, a2
2000a353:	24b270        	extui	a11, a7, 2, 3
2000a356:	020c      	movi.n	a2, 0
2000a358:	4133a0        	srli	a3, a10, 3
2000a35b:	039b76        	loopnez	a11, 2000a362 <L2_SharedDRAMRedMemMap..CE_1482204275+0x42>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:65
    {
        *TargetAddr++ = 0;
2000a35e:	0029      	s32i.n	a2, a0, 0
2000a360:	004b      	addi.n	a0, a0, 4
2000a362:	129376        	loopnez	a3, 2000a378 <L2_SharedDRAMRedMemMap..CE_1482204275+0x58>
2000a365:	0029      	s32i.n	a2, a0, 0
2000a367:	1029      	s32i.n	a2, a0, 4
2000a369:	2029      	s32i.n	a2, a0, 8
2000a36b:	3029      	s32i.n	a2, a0, 12
2000a36d:	4029      	s32i.n	a2, a0, 16
2000a36f:	5029      	s32i.n	a2, a0, 20
2000a371:	6029      	s32i.n	a2, a0, 24
2000a373:	7029      	s32i.n	a2, a0, 28
2000a375:	20c002        	addi	a0, a0, 32
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:122
    U32 ulMemAddr;

    ulMemAddr = *pMemAddr;

    /* 16DW align in memory */
    if( (ulMemAddr & SIXTEENDW_SIZE_MSK) != 0)
2000a378:	0e0967        	bnone	a9, a6, 2000a38a <L2_SharedDRAMRedMemMap..CE_1482204275+0x6a>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:124
    {
        ulMemAddr = (ulMemAddr & (~SIXTEENDW_SIZE_MSK)) + SIXTEENDW_SIZE;
2000a37b:	100680        	and	a0, a6, a8
2000a37e:	40c002        	addi	a0, a0, 64
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:161
    COM_MemIncBaseAddr(&ulFreeBase, 2 * SUBSYSTEM_PU_NUM*NFCQ_DEPTH*PG_PER_WL*sizeof(RED));
    COM_MemAddr16DWAlign(&ulFreeBase);
    #endif
    
    *pFreeSharedDRAMBase = ulFreeBase;
2000a381:	0509      	s32i.n	a0, a5, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:162
    return;
2000a383:	0108      	l32i.n	a0, a1, 0
2000a385:	10c112        	addi	a1, a1, 16
2000a388:	f00d      	ret.n

2000a38a <L2_SharedDRAMRedMemMap..CE_1482204275+0x6a>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:161
    COM_MemZero((U32*)g_pRedBaseAddr, 2 * SUBSYSTEM_LUN_NUM*NFCQ_DEPTH*PG_PER_WL*sizeof(RED) / sizeof(U32));
    COM_MemIncBaseAddr(&ulFreeBase, 2 * SUBSYSTEM_PU_NUM*NFCQ_DEPTH*PG_PER_WL*sizeof(RED));
    COM_MemAddr16DWAlign(&ulFreeBase);
    #endif
    
    *pFreeSharedDRAMBase = ulFreeBase;
2000a38a:	0569      	s32i.n	a6, a5, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:162
    return;
2000a38c:	0108      	l32i.n	a0, a1, 0
2000a38e:	10c112        	addi	a1, a1, 16
2000a391:	f00d      	ret.n

2000a393 <L2_SharedDRAMRedMemMap..CE_1482204275+0x73>:
	...

2000a394 <L2_SharedOTFBRedMemMap..BE_1482204275>:
L2_SharedOTFBRedMemMap():
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:136

    return;
}
LOCAL void L2_SharedOTFBRedMemMap(U32 *pFreeSharedOTFBBase)
{
    U32 ulFreeBase = *pFreeSharedOTFBBase;
2000a394:	0258      	l32i.n	a5, a2, 0
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:122
    U32 ulMemAddr;

    ulMemAddr = *pMemAddr;

    /* 16DW align in memory */
    if( (ulMemAddr & SIXTEENDW_SIZE_MSK) != 0)
2000a396:	f33c      	movi.n	a3, 63
2000a398:	0c0357        	bnone	a3, a5, 2000a3a8 <L2_SharedOTFBRedMemMap..BE_1482204275+0x14>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:124
    {
        ulMemAddr = (ulMemAddr & (~SIXTEENDW_SIZE_MSK)) + SIXTEENDW_SIZE;
2000a39b:	c0af42        	movi	a4, -64
2000a39e:	104540        	and	a4, a5, a4
2000a3a1:	40c442        	addi	a4, a4, 64
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:146
    COM_MemZero((U32*)g_pRedBaseAddr, 2*SUBSYSTEM_LUN_NUM*NFCQ_DEPTH*PG_PER_WL*sizeof(RED)/sizeof(U32));
    COM_MemIncBaseAddr(&ulFreeBase, 2*SUBSYSTEM_PU_NUM*NFCQ_DEPTH*PG_PER_WL*sizeof(RED));
    COM_MemAddr16DWAlign(&ulFreeBase);
    #endif
    
    *pFreeSharedOTFBBase = ulFreeBase;
2000a3a4:	0249      	s32i.n	a4, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:147
    return;
2000a3a6:	f00d      	ret.n

2000a3a8 <L2_SharedOTFBRedMemMap..BE_1482204275+0x14>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:146
    COM_MemZero((U32*)g_pRedBaseAddr, 2*SUBSYSTEM_LUN_NUM*NFCQ_DEPTH*PG_PER_WL*sizeof(RED)/sizeof(U32));
    COM_MemIncBaseAddr(&ulFreeBase, 2*SUBSYSTEM_PU_NUM*NFCQ_DEPTH*PG_PER_WL*sizeof(RED));
    COM_MemAddr16DWAlign(&ulFreeBase);
    #endif
    
    *pFreeSharedOTFBBase = ulFreeBase;
2000a3a8:	0259      	s32i.n	a5, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:147
    return;
2000a3aa:	f00d      	ret.n

2000a3ac <L2_SharedOTFBSsuMemMap..AE_1482204275>:
L2_SharedOTFBSsuMemMap():
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:112
    
    return;
}

LOCAL void L2_SharedOTFBSsuMemMap(U32 *pFreeSharedOTFBBase)
{
2000a3ac:	f53c      	movi.n	a5, 63
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:114
    U32 ulFreeBase = *pFreeSharedOTFBBase;
    COM_MemAddr16DWAlign(&ulFreeBase);
2000a3ae:	d8db41        	l32r	a4, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:112
    
    return;
}

LOCAL void L2_SharedOTFBSsuMemMap(U32 *pFreeSharedOTFBBase)
{
2000a3b1:	f0c112        	addi	a1, a1, -16
2000a3b4:	0109      	s32i.n	a0, a1, 0
2000a3b6:	21d9      	s32i.n	a13, a1, 8
2000a3b8:	11c9      	s32i.n	a12, a1, 4
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:119
/* 16DW align */
void COM_MemAddr16DWAlign(U32 *pMemAddr)
{
    U32 ulMemAddr;

    ulMemAddr = *pMemAddr;
2000a3ba:	e438      	l32i.n	a3, a4, 56
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:112
2000a3bc:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:113
    U32 ulFreeBase = *pFreeSharedOTFBBase;
2000a3be:	002cd2        	l32i	a13, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:112
    
    return;
}

LOCAL void L2_SharedOTFBSsuMemMap(U32 *pFreeSharedOTFBBase)
{
2000a3c1:	c0af22        	movi	a2, -64
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:113
    U32 ulFreeBase = *pFreeSharedOTFBBase;
2000a3c4:	200dd0        	or	a0, a13, a13
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:122

    /* 16DW align in memory */
    if( (ulMemAddr & SIXTEENDW_SIZE_MSK) != 0)
2000a3c7:	0505d7        	bnone	a5, a13, 2000a3d0 <L2_SharedOTFBSsuMemMap..AE_1482204275+0x24>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:124
    {
        ulMemAddr = (ulMemAddr & (~SIXTEENDW_SIZE_MSK)) + SIXTEENDW_SIZE;
2000a3ca:	10dd20        	and	a13, a13, a2
2000a3cd:	40cdd2        	addi	a13, a13, 64

2000a3d0 <L2_SharedOTFBSsuMemMap..AE_1482204275+0x24>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:117
    COM_MemAddr16DWAlign(&ulFreeBase);
    
    // Part1:
    g_ulSsuInOtfbBaseAddr = ulFreeBase;
2000a3d0:	1864d2        	s32i	a13, a4, 96
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:118
    g_ptFCmdReqSts = (FCMD_REQSTS *)ulFreeBase;
2000a3d3:	f4d9      	s32i.n	a13, a4, 60
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:119
/* 16DW align */
void COM_MemAddr16DWAlign(U32 *pMemAddr)
{
    U32 ulMemAddr;

    ulMemAddr = *pMemAddr;
2000a3d5:	a0d3d0        	addx4	a13, a3, a13
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:122
    COM_MemIncBaseAddr(&ulFreeBase, FCMD_REQSTS_SZ);
    COM_MemAddr16DWAlign(&ulFreeBase);
    
    if (ulFreeBase - OTFB_SSU0_MCU12_SHARE_BASE > OTFB_MCU12_SHARED_SSU0_SIZE)
2000a3d8:	da1131        	l32r	a3, 20000c1c <_stext+0x51c>

    /* 16DW align in memory */
    if( (ulMemAddr & SIXTEENDW_SIZE_MSK) != 0)
2000a3db:	0505d7        	bnone	a5, a13, 2000a3e4 <L2_SharedOTFBSsuMemMap..AE_1482204275+0x38>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:124
    {
        ulMemAddr = (ulMemAddr & (~SIXTEENDW_SIZE_MSK)) + SIXTEENDW_SIZE;
2000a3de:	10dd20        	and	a13, a13, a2
2000a3e1:	40cdd2        	addi	a13, a13, 64
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:122
2000a3e4:	3d3a      	add.n	a3, a13, a3
2000a3e6:	00a422        	movi	a2, 0x400
2000a3e9:	243237        	bltu	a2, a3, 2000a411 <L2_SharedOTFBSsuMemMap..AE_1482204275+0x65>
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
2000a3ec:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:128
    {
        DBG_Printf("MCU#%d SharedOTFB OverFlow L2_SharedOTFBSsuMemMap.\n", HAL_GetMcuId());
        DBG_Getch();
    }

    DBG_Printf("MCU#%d L2_SharedOTFBSsuMemMap %d KB, Rsvd %d kB.\n", HAL_GetMcuId(), (ulFreeBase - *pFreeSharedOTFBBase)/1024, (OTFB_MCU12_SHARED_SSU0_SIZE - (ulFreeBase - *pFreeSharedOTFBBase))/1024);
2000a3ef:	da0c21        	l32r	a2, 20000c20 <_stext+0x520>
2000a3f2:	c050d0        	sub	a5, a0, a13
2000a3f5:	c04d00        	sub	a4, a13, a0
2000a3f8:	414a40        	srli	a4, a4, 10
2000a3fb:	04d552        	addmi	a5, a5, 0x400
2000a3fe:	415a50        	srli	a5, a5, 10
2000a401:	008605        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:130

    *pFreeSharedOTFBBase = ulFreeBase;
2000a404:	0cd9      	s32i.n	a13, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:132

    return;
2000a406:	0108      	l32i.n	a0, a1, 0
2000a408:	11c8      	l32i.n	a12, a1, 4
2000a40a:	21d8      	l32i.n	a13, a1, 8
2000a40c:	10c112        	addi	a1, a1, 16
2000a40f:	f00d      	ret.n

2000a411 <L2_SharedOTFBSsuMemMap..AE_1482204275+0x65>:
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
2000a411:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:124
    COM_MemIncBaseAddr(&ulFreeBase, FCMD_REQSTS_SZ);
    COM_MemAddr16DWAlign(&ulFreeBase);
    
    if (ulFreeBase - OTFB_SSU0_MCU12_SHARE_BASE > OTFB_MCU12_SHARED_SSU0_SIZE)
    {
        DBG_Printf("MCU#%d SharedOTFB OverFlow L2_SharedOTFBSsuMemMap.\n", HAL_GetMcuId());
2000a414:	da0421        	l32r	a2, 20000c24 <_stext+0x524>
2000a417:	0084c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:125
        DBG_Getch();
2000a41a:	d8bf01        	l32r	a0, 20000718 <_stext+0x18>
2000a41d:	0000c0        	callx0	a0
2000a420:	0c08      	l32i.n	a0, a12, 0
2000a422:	fff186        	j	2000a3ec <L2_SharedOTFBSsuMemMap..AE_1482204275+0x40>

2000a425 <L2_SharedOTFBSsuMemMap..AE_1482204275+0x79>:
L2_SharedOTFBSsuMemMap..AE_1482204275():
2000a425:	000000                                        ...

2000a428 <L2_SharedDSRAM1MemMap..PD_1482204275>:
L2_SharedDSRAM1MemMap():
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:74

/*============================================================================*/
/* main code region: function implement                                       */
/*============================================================================*/
LOCAL void L2_SharedDSRAM1MemMap(U32 *pFreeSharedSRAM1Base)
{
2000a428:	c0af62        	movi	a6, -64
2000a42b:	f0c112        	addi	a1, a1, -16
2000a42e:	0109      	s32i.n	a0, a1, 0
2000a430:	11c9      	s32i.n	a12, a1, 4
2000a432:	21d9      	s32i.n	a13, a1, 8
2000a434:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:75
    U32 ulFreeBase = *pFreeSharedSRAM1Base;
2000a436:	02d8      	l32i.n	a13, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:74

/*============================================================================*/
/* main code region: function implement                                       */
/*============================================================================*/
LOCAL void L2_SharedDSRAM1MemMap(U32 *pFreeSharedSRAM1Base)
{
2000a438:	f03c      	movi.n	a0, 63
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:75
    U32 ulFreeBase = *pFreeSharedSRAM1Base;
2000a43a:	0d2d      	mov.n	a2, a13
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:122
    U32 ulMemAddr;

    ulMemAddr = *pMemAddr;

    /* 16DW align in memory */
    if( (ulMemAddr & SIXTEENDW_SIZE_MSK) != 0)
2000a43c:	0500d7        	bnone	a0, a13, 2000a445 <L2_SharedDSRAM1MemMap..PD_1482204275+0x1d>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:124
    {
        ulMemAddr = (ulMemAddr & (~SIXTEENDW_SIZE_MSK)) + SIXTEENDW_SIZE;
2000a43f:	10dd60        	and	a13, a13, a6
2000a442:	40cdd2        	addi	a13, a13, 64

2000a445 <L2_SharedDSRAM1MemMap..PD_1482204275+0x1d>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:81
    COM_MemAddr16DWAlign(&ulFreeBase);
    
    // Part0:
    #ifdef HOST_NVME
    ulFreeBase += HAL_CHAIN_NUM_MANAGER_SIZE;
    COM_MemAddr16DWAlign(&ulFreeBase);
2000a445:	d8b571        	l32r	a7, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:119
/* 16DW align */
void COM_MemAddr16DWAlign(U32 *pMemAddr)
{
    U32 ulMemAddr;

    ulMemAddr = *pMemAddr;
2000a448:	03ddd2        	addmi	a13, a13, 0x300
2000a44b:	e758      	l32i.n	a5, a7, 56
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:122

    /* 16DW align in memory */
    if( (ulMemAddr & SIXTEENDW_SIZE_MSK) != 0)
2000a44d:	0500d7        	bnone	a0, a13, 2000a456 <L2_SharedDSRAM1MemMap..PD_1482204275+0x2e>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:124
    {
        ulMemAddr = (ulMemAddr & (~SIXTEENDW_SIZE_MSK)) + SIXTEENDW_SIZE;
2000a450:	10dd60        	and	a13, a13, a6
2000a453:	40cdd2        	addi	a13, a13, 64
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:85
    #endif

    // Part1:
    g_ptFCmdReq = (FCMD_REQ *)ulFreeBase;
2000a456:	d7d9      	s32i.n	a13, a7, 52
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:119
/* 16DW align */
void COM_MemAddr16DWAlign(U32 *pMemAddr)
{
    U32 ulMemAddr;

    ulMemAddr = *pMemAddr;
2000a458:	903550        	addx2	a3, a5, a5
2000a45b:	1133a0        	slli	a3, a3, 6
2000a45e:	dd3a      	add.n	a13, a13, a3
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:122

    /* 16DW align in memory */
    if( (ulMemAddr & SIXTEENDW_SIZE_MSK) != 0)
2000a460:	0500d7        	bnone	a0, a13, 2000a469 <L2_SharedDSRAM1MemMap..PD_1482204275+0x41>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:124
    {
        ulMemAddr = (ulMemAddr & (~SIXTEENDW_SIZE_MSK)) + SIXTEENDW_SIZE;
2000a463:	10dd60        	and	a13, a13, a6
2000a466:	40cdd2        	addi	a13, a13, 64
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:119
/* 16DW align */
void COM_MemAddr16DWAlign(U32 *pMemAddr)
{
    U32 ulMemAddr;

    ulMemAddr = *pMemAddr;
2000a469:	a03550        	addx4	a3, a5, a5
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:89
    COM_MemIncBaseAddr(&ulFreeBase, FCMD_REQ_SZ);
    COM_MemAddr16DWAlign(&ulFreeBase);

    g_ptFCmdReqDptr = (FCMD_REQ_DPTR *)ulFreeBase;
2000a46c:	1067d2        	s32i	a13, a7, 64
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:119
2000a46f:	40cdd2        	addi	a13, a13, 64
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:122

    /* 16DW align in memory */
    if( (ulMemAddr & SIXTEENDW_SIZE_MSK) != 0)
2000a472:	0500d7        	bnone	a0, a13, 2000a47b <L2_SharedDSRAM1MemMap..PD_1482204275+0x53>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:124
    {
        ulMemAddr = (ulMemAddr & (~SIXTEENDW_SIZE_MSK)) + SIXTEENDW_SIZE;
2000a475:	10dd60        	and	a13, a13, a6
2000a478:	40cdd2        	addi	a13, a13, 64
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:94
    COM_MemIncBaseAddr(&ulFreeBase, FCMD_REQ_DPTR_SZ);
    COM_MemAddr16DWAlign(&ulFreeBase);

    // Part2:
    g_ptFMUserMgr = (FM_USER_ITEM *)ulFreeBase;
2000a47b:	1767d2        	s32i	a13, a7, 92
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:119
/* 16DW align */
void COM_MemAddr16DWAlign(U32 *pMemAddr)
{
    U32 ulMemAddr;

    ulMemAddr = *pMemAddr;
2000a47e:	a0d3d0        	addx4	a13, a3, a13
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:122

    /* 16DW align in memory */
    if( (ulMemAddr & SIXTEENDW_SIZE_MSK) != 0)
2000a481:	0500d7        	bnone	a0, a13, 2000a48a <L2_SharedDSRAM1MemMap..PD_1482204275+0x62>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:124
    {
        ulMemAddr = (ulMemAddr & (~SIXTEENDW_SIZE_MSK)) + SIXTEENDW_SIZE;
2000a484:	10dd60        	and	a13, a13, a6
2000a487:	40cdd2        	addi	a13, a13, 64
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:98
    COM_MemIncBaseAddr(&ulFreeBase, FM_USER_TOT_SZ);
    COM_MemAddr16DWAlign(&ulFreeBase);
    
    if (ulFreeBase - DSRAM1_MCU12_SHARE_BASE > DSRAM1_MCU12_SHARE_SIZE)
2000a48a:	d9e701        	l32r	a0, 20000c28 <_stext+0x528>
2000a48d:	d9e731        	l32r	a3, 20000c2c <_stext+0x52c>
2000a490:	0d0a      	add.n	a0, a13, a0
2000a492:	263307        	bltu	a3, a0, 2000a4bc <L2_SharedDSRAM1MemMap..PD_1482204275+0x94>
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
2000a495:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:104
    {
        DBG_Printf("MCU#%d SharedDSRAM1 overflow %dK!\n", HAL_GetMcuId(), (ulFreeBase - DSRAM1_MCU12_SHARE_BASE)/1024);
        DBG_Getch();
    }
    
    DBG_Printf("MCU#%d Alloc shared SRAM1 %d KB, Rsvd %d KB.\n", HAL_GetMcuId(), (ulFreeBase - *pFreeSharedSRAM1Base)/1024, (DSRAM1_MCU12_SHARE_SIZE - (ulFreeBase - *pFreeSharedSRAM1Base))/1024);
2000a498:	c052d0        	sub	a5, a2, a13
2000a49b:	c04d20        	sub	a4, a13, a2
2000a49e:	414a40        	srli	a4, a4, 10
2000a4a1:	62d552        	addmi	a5, a5, 0x6200
2000a4a4:	415a50        	srli	a5, a5, 10
2000a4a7:	d9e221        	l32r	a2, 20000c30 <_stext+0x530>
2000a4aa:	007b85        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:106

    *pFreeSharedSRAM1Base = ulFreeBase;
2000a4ad:	0cd9      	s32i.n	a13, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:108
    
    return;
2000a4af:	0108      	l32i.n	a0, a1, 0
2000a4b1:	11c8      	l32i.n	a12, a1, 4
2000a4b3:	21d8      	l32i.n	a13, a1, 8
2000a4b5:	10c112        	addi	a1, a1, 16
2000a4b8:	f00d      	ret.n

2000a4ba <L2_SharedDSRAM1MemMap..PD_1482204275+0x92>:
	...

2000a4bc <L2_SharedDSRAM1MemMap..PD_1482204275+0x94>:
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
2000a4bc:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:100
    COM_MemIncBaseAddr(&ulFreeBase, FM_USER_TOT_SZ);
    COM_MemAddr16DWAlign(&ulFreeBase);
    
    if (ulFreeBase - DSRAM1_MCU12_SHARE_BASE > DSRAM1_MCU12_SHARE_SIZE)
    {
        DBG_Printf("MCU#%d SharedDSRAM1 overflow %dK!\n", HAL_GetMcuId(), (ulFreeBase - DSRAM1_MCU12_SHARE_BASE)/1024);
2000a4bf:	d9dd21        	l32r	a2, 20000c34 <_stext+0x534>
2000a4c2:	414a00        	srli	a4, a0, 10
2000a4c5:	0079c5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:101
        DBG_Getch();
2000a4c8:	d89401        	l32r	a0, 20000718 <_stext+0x18>
2000a4cb:	0000c0        	callx0	a0
2000a4ce:	0c28      	l32i.n	a2, a12, 0
2000a4d0:	fff046        	j	2000a495 <L2_SharedDSRAM1MemMap..PD_1482204275+0x6d>

2000a4d3 <L2_SharedDSRAM1MemMap..PD_1482204275+0xab>:
	...

2000a4d4 <COM_MemAddrPageBoundaryAlign>:
COM_MemAddrPageBoundaryAlign():
/*address align by 32KBytes size*/
void COM_MemAddrPageBoundaryAlign(U32 *pMemAddr)
{
    U32 ulMemAddr;

    ulMemAddr = *pMemAddr;
2000a4d4:	0248      	l32i.n	a4, a2, 0
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:106

    /* page align in memory */
    if( (ulMemAddr & THIRTYTWOKB_SIZE_MSK) != 0)
    {
        ulMemAddr = ( ulMemAddr & (~THIRTYTWOKB_SIZE_MSK)) + THIRTYTWOKB_SIZE;
2000a4d6:	d9c751        	l32r	a5, 20000bf4 <_stext+0x4f4>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:104
    U32 ulMemAddr;

    ulMemAddr = *pMemAddr;

    /* page align in memory */
    if( (ulMemAddr & THIRTYTWOKB_SIZE_MSK) != 0)
2000a4d9:	f43040        	extui	a3, a4, 0, 16
2000a4dc:	a38c      	beqz.n	a3, 2000a4ea <COM_MemAddrPageBoundaryAlign+0x16>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:106
    {
        ulMemAddr = ( ulMemAddr & (~THIRTYTWOKB_SIZE_MSK)) + THIRTYTWOKB_SIZE;
2000a4de:	d8b761        	l32r	a6, 200007bc <_stext+0xbc>
2000a4e1:	105450        	and	a5, a4, a5
2000a4e4:	556a      	add.n	a5, a5, a6
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:109
    }

    *pMemAddr = ulMemAddr;
2000a4e6:	0259      	s32i.n	a5, a2, 0
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:111

    return;
2000a4e8:	f00d      	ret.n

2000a4ea <COM_MemAddrPageBoundaryAlign+0x16>:
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:109
    if( (ulMemAddr & THIRTYTWOKB_SIZE_MSK) != 0)
    {
        ulMemAddr = ( ulMemAddr & (~THIRTYTWOKB_SIZE_MSK)) + THIRTYTWOKB_SIZE;
    }

    *pMemAddr = ulMemAddr;
2000a4ea:	0249      	s32i.n	a4, a2, 0
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:111

    return;
2000a4ec:	f00d      	ret.n

2000a4ee <COM_MemAddrPageBoundaryAlign+0x1a>:
	...

2000a4f0 <COM_MemIncBaseAddr>:
COM_MemIncBaseAddr():
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:91
    }
}

void COM_MemIncBaseAddr(U32* Addr, U32 Offset)
{
    *Addr += Offset;
2000a4f0:	0248      	l32i.n	a4, a2, 0
2000a4f2:	443a      	add.n	a4, a4, a3
2000a4f4:	0249      	s32i.n	a4, a2, 0
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:93

    return;
2000a4f6:	f00d      	ret.n

2000a4f8 <COM_MemAddr16DWAlign>:
COM_MemAddr16DWAlign():
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:119
/* 16DW align */
void COM_MemAddr16DWAlign(U32 *pMemAddr)
{
    U32 ulMemAddr;

    ulMemAddr = *pMemAddr;
2000a4f8:	0258      	l32i.n	a5, a2, 0
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:122

    /* 16DW align in memory */
    if( (ulMemAddr & SIXTEENDW_SIZE_MSK) != 0)
2000a4fa:	f33c      	movi.n	a3, 63
2000a4fc:	0c0357        	bnone	a3, a5, 2000a50c <COM_MemAddr16DWAlign+0x14>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:124
    {
        ulMemAddr = (ulMemAddr & (~SIXTEENDW_SIZE_MSK)) + SIXTEENDW_SIZE;
2000a4ff:	c0af42        	movi	a4, -64
2000a502:	104540        	and	a4, a5, a4
2000a505:	40c442        	addi	a4, a4, 64
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:127
    }

    *pMemAddr = ulMemAddr;
2000a508:	0249      	s32i.n	a4, a2, 0
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:129

    return;
2000a50a:	f00d      	ret.n

2000a50c <COM_MemAddr16DWAlign+0x14>:
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:127
    if( (ulMemAddr & SIXTEENDW_SIZE_MSK) != 0)
    {
        ulMemAddr = (ulMemAddr & (~SIXTEENDW_SIZE_MSK)) + SIXTEENDW_SIZE;
    }

    *pMemAddr = ulMemAddr;
2000a50c:	0259      	s32i.n	a5, a2, 0
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:129

    return;
2000a50e:	f00d      	ret.n

2000a510 <L2_FCmdReqStsInit>:
L2_FCmdReqStsInit():
D:\IM_3D_TLC\firmware\algorithm\L2/L2_FCMDQ.c:79
Usage      : 
History    : 
    1. 2016.7.12 JasonGuo create function
==============================================================================*/
void L2_FCmdReqStsInit(U32 ucMcuId)
{
2000a510:	d88331        	l32r	a3, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_FCMDQ.c:83
    U32 ulTLun, ulPriIdx, ulDepthIdx;
    FCMD_REQSTS_Q *pReqStsQ;

    for (ulTLun = 0; ulTLun < SUBSYSTEM_LUN_NUM; ulTLun++)
2000a513:	040c      	movi.n	a4, 0
2000a515:	e328      	l32i.n	a2, a3, 56
2000a517:	f338      	l32i.n	a3, a3, 60
2000a519:	0d9276        	loopnez	a2, 2000a52a <L2_FCmdReqStsInit+0x1a>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_FCMDQ.c:90
        for (ulPriIdx = 0; ulPriIdx < FCMD_REQ_PRI_NUM; ulPriIdx++)
        {
            pReqStsQ = &g_ptFCmdReqSts->atReqStsQ[ulTLun][ulPriIdx];
            for (ulDepthIdx = 0; ulDepthIdx < FCMDQ_DEPTH; ulDepthIdx++)
            {
                pReqStsQ->aReqStatus[ulDepthIdx] = (MCU1_ID == ucMcuId) ? INVALID_2F : FCMD_REQ_STS_INIT;
2000a51c:	004342        	s8i	a4, a3, 0
2000a51f:	014342        	s8i	a4, a3, 1
2000a522:	024342        	s8i	a4, a3, 2
2000a525:	034342        	s8i	a4, a3, 3
D:\IM_3D_TLC\firmware\algorithm\L2/L2_FCMDQ.c:83
void L2_FCmdReqStsInit(U32 ucMcuId)
{
    U32 ulTLun, ulPriIdx, ulDepthIdx;
    FCMD_REQSTS_Q *pReqStsQ;

    for (ulTLun = 0; ulTLun < SUBSYSTEM_LUN_NUM; ulTLun++)
2000a528:	334b      	addi.n	a3, a3, 4

2000a52a <L2_FCmdReqStsInit+0x1a>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_FCMDQ.c:95
                pReqStsQ->aReqStatus[ulDepthIdx] = (MCU1_ID == ucMcuId) ? INVALID_2F : FCMD_REQ_STS_INIT;
            }
        }
    }

    return;
2000a52a:	f00d      	ret.n

2000a52c <L3_IFNFCIRSInit>:
L3_IFNFCIRSInit():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1950
Usage      : 
History    : 
    1. 2016.7.27 JasonGuo create function
==============================================================================*/
void L3_IFNFCIRSInit(void)
{
2000a52c:	d87c21        	l32r	a2, 2000071c <_stext+0x1c>
2000a52f:	f0c112        	addi	a1, a1, -16
2000a532:	0109      	s32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1951
    HAL_NfcSetRedInDramBase((U32)g_pRedBaseAddr);
2000a534:	162222        	l32i	a2, a2, 88
2000a537:	d9c001        	l32r	a0, 20000c38 <_stext+0x538>
2000a53a:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1952
    HAL_NfcSetSsuInOtfbBase((U32)g_ptFCmdReqSts);
2000a53d:	d87721        	l32r	a2, 2000071c <_stext+0x1c>
2000a540:	f228      	l32i.n	a2, a2, 60
2000a542:	d9be01        	l32r	a0, 20000c3c <_stext+0x53c>
2000a545:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Interface.c:1954

    return;
2000a548:	0108      	l32i.n	a0, a1, 0
2000a54a:	10c112        	addi	a1, a1, 16
2000a54d:	f00d      	ret.n

2000a54f <L3_IFNFCIRSInit+0x23>:
	...

2000a550 <COM_MemZero>:
COM_MemZero():
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:60
Description :
Others      :
Modify      :
****************************************************************************/
void COM_MemZero(U32* TargetAddr,U32 LengthDW)
{
2000a550:	f0c112        	addi	a1, a1, -16
2000a553:	0109      	s32i.n	a0, a1, 0
2000a555:	a3ac      	beqz.n	a3, 2000a583 <COM_MemZero+0x33>
2000a557:	244030        	extui	a4, a3, 0, 3
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:63
    U32 i;

    for (i = 0 ; i < LengthDW; i++)
2000a55a:	035d      	mov.n	a5, a3
2000a55c:	000c      	movi.n	a0, 0
2000a55e:	006d      	mov.n	a6, a0
2000a560:	413350        	srli	a3, a5, 3
2000a563:	039476        	loopnez	a4, 2000a56a <COM_MemZero+0x1a>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:65
    {
        *TargetAddr++ = 0;
2000a566:	0209      	s32i.n	a0, a2, 0
2000a568:	224b      	addi.n	a2, a2, 4

2000a56a <COM_MemZero+0x1a>:
2000a56a:	200220        	or	a0, a2, a2
2000a56d:	129376        	loopnez	a3, 2000a583 <COM_MemZero+0x33>
2000a570:	0069      	s32i.n	a6, a0, 0
2000a572:	1069      	s32i.n	a6, a0, 4
2000a574:	2069      	s32i.n	a6, a0, 8
2000a576:	3069      	s32i.n	a6, a0, 12
2000a578:	4069      	s32i.n	a6, a0, 16
2000a57a:	5069      	s32i.n	a6, a0, 20
2000a57c:	6069      	s32i.n	a6, a0, 24
2000a57e:	7069      	s32i.n	a6, a0, 28
2000a580:	20c002        	addi	a0, a0, 32

2000a583 <COM_MemZero+0x33>:
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:67
    }
}
2000a583:	0108      	l32i.n	a0, a1, 0
2000a585:	10c112        	addi	a1, a1, 16
2000a588:	f00d      	ret.n

2000a58a <COM_MemZero+0x3a>:
	...

2000a58c <HAL_ChainMaintainInit>:
HAL_ChainMaintainInit():
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:59
    20140716    Gavin   created
------------------------------------------------------------------------------*/
void HAL_ChainMaintainInit(void)
{
    // initialize the pointer to the chain number manager(both MCU1 and MCU2 have to do this)
    l_aChainNumMgr = (CHAIN_NUM_MGR*)HAL_CHAIN_NUM_MANAGER_BASE;
2000a58c:	d9ad21        	l32r	a2, 20000c40 <_stext+0x540>
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:57
    FW call this function in boot stage;
History:
    20140716    Gavin   created
------------------------------------------------------------------------------*/
void HAL_ChainMaintainInit(void)
{
2000a58f:	f0c112        	addi	a1, a1, -16
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:59
    // initialize the pointer to the chain number manager(both MCU1 and MCU2 have to do this)
    l_aChainNumMgr = (CHAIN_NUM_MGR*)HAL_CHAIN_NUM_MANAGER_BASE;
2000a592:	d86231        	l32r	a3, 2000071c <_stext+0x1c>
2000a595:	0109      	s32i.n	a0, a1, 0
2000a597:	736322        	s32i	a2, a3, 0x1cc
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
2000a59a:	03eb00        	rsr.prid	a0
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:63
****************************************************************************/
void COM_MemZero(U32* TargetAddr,U32 LengthDW)
{
    U32 i;

    for (i = 0 ; i < LengthDW; i++)
2000a59d:	020c      	movi.n	a2, 0

    // only MCU1 has to initialize the chain number manager since it's shared by MCU1
    // and MCU2, it's pointless(and wrong) to initialize the data structure twice
    if(HAL_GetMcuId() == MCU1_ID)
2000a59f:	1a2066        	bnei	a0, 2, 2000a5bd <HAL_ChainMaintainInit+0x31>
2000a5a2:	d9a701        	l32r	a0, 20000c40 <_stext+0x540>
2000a5a5:	831c      	movi.n	a3, 24
2000a5a7:	12a376        	loopgtz	a3, 2000a5bd <HAL_ChainMaintainInit+0x31>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:65
    {
        *TargetAddr++ = 0;
2000a5aa:	0029      	s32i.n	a2, a0, 0
2000a5ac:	1029      	s32i.n	a2, a0, 4
2000a5ae:	2029      	s32i.n	a2, a0, 8
2000a5b0:	3029      	s32i.n	a2, a0, 12
2000a5b2:	4029      	s32i.n	a2, a0, 16
2000a5b4:	5029      	s32i.n	a2, a0, 20
2000a5b6:	6029      	s32i.n	a2, a0, 24
2000a5b8:	7029      	s32i.n	a2, a0, 28
2000a5ba:	20c002        	addi	a0, a0, 32

2000a5bd <HAL_ChainMaintainInit+0x31>:
D:\IM_3D_TLC\firmware\HAL\ChainMaintain/HAL_ChainMaintain.c:68
    {
        COM_MemZero((U32*)&l_aChainNumMgr[0], MAX_SLOT_NUM * (sizeof(CHAIN_NUM_MGR)/sizeof(U32)));
    }
    
    return;
2000a5bd:	0108      	l32i.n	a0, a1, 0
2000a5bf:	10c112        	addi	a1, a1, 16
2000a5c2:	f00d      	ret.n

2000a5c4 <HAL_SgeInitChainCnt>:
HAL_SgeInitChainCnt():
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:514
History:
    20140915   Victor Zhang  Create    
========================================================================*/

void HAL_SgeInitChainCnt(void)
{
2000a5c4:	f0c112        	addi	a1, a1, -16
2000a5c7:	006102        	s32i	a0, a1, 0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
2000a5ca:	03eb00        	rsr.prid	a0
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:515
    if(MCU1_ID == HAL_GetMcuId())
2000a5cd:	0b2026        	beqi	a0, 2, 2000a5dc <HAL_SgeInitChainCnt+0x18>
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
2000a5d0:	03eb20        	rsr.prid	a2
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:520
    {
        l_pChainNumReg     = (CHAIN_NUM_REG*)&rChainNumMcu1;
        l_pPeerChainNumReg = (CHAIN_NUM_REG*)&rChainNumMcu2;
    }
    else if(MCU2_ID == HAL_GetMcuId())
2000a5d3:	053226        	beqi	a2, 3, 2000a5dc <HAL_SgeInitChainCnt+0x18>
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:527
        l_pChainNumReg     = (CHAIN_NUM_REG*)&rChainNumMcu2;
        l_pPeerChainNumReg = (CHAIN_NUM_REG*)&rChainNumMcu1;
    }
    else
    {
        DBG_Getch();
2000a5d6:	d85001        	l32r	a0, 20000718 <_stext+0x18>
2000a5d9:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:529
    }
}
2000a5dc:	0108      	l32i.n	a0, a1, 0
2000a5de:	10c112        	addi	a1, a1, 16
2000a5e1:	f00d      	ret.n

2000a5e3 <HAL_SgeInitChainCnt+0x1f>:
	...

2000a5e4 <HAL_DwqInit>:
HAL_DwqInit():
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:275
History:
    20140915   Victor Zhang  Create
========================================================================*/

void HAL_DwqInit(void)
{
2000a5e4:	f0c112        	addi	a1, a1, -16
2000a5e7:	0109      	s32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
2000a5e9:	03eb30        	rsr.prid	a3
2000a5ec:	d84c01        	l32r	a0, 2000071c <_stext+0x1c>
2000a5ef:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:276
    if(MCU0_ID == HAL_GetMcuId())
2000a5f1:	241366        	bnei	a3, 1, 2000a619 <HAL_DwqInit+0x35>
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:279
    {
        l_pDwqStatus    = (DRQ_DWQ_REG*)&(rDwqMcu0Status); 
        l_ulDwqBaseAddr = DWQ_BASE_ADDR_MCU0; 
2000a5f4:	d99441        	l32r	a4, 20000c44 <_stext+0x544>
2000a5f7:	430c      	movi.n	a3, 4
2000a5f9:	7a6042        	s32i	a4, a0, 0x1e8
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:299
    else
    {
        DBG_Getch();
    }

}
2000a5fc:	0108      	l32i.n	a0, a1, 0
2000a5fe:	12a376        	loopgtz	a3, 2000a614 <HAL_DwqInit+0x30>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:65
2000a601:	0429      	s32i.n	a2, a4, 0
2000a603:	1429      	s32i.n	a2, a4, 4
2000a605:	2429      	s32i.n	a2, a4, 8
2000a607:	3429      	s32i.n	a2, a4, 12
2000a609:	4429      	s32i.n	a2, a4, 16
2000a60b:	5429      	s32i.n	a2, a4, 20
2000a60d:	6429      	s32i.n	a2, a4, 24
2000a60f:	7429      	s32i.n	a2, a4, 28
2000a611:	20c442        	addi	a4, a4, 32

2000a614 <HAL_DwqInit+0x30>:
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:299
2000a614:	10c112        	addi	a1, a1, 16
2000a617:	f00d      	ret.n

2000a619 <HAL_DwqInit+0x35>:
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
2000a619:	03eb50        	rsr.prid	a5
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:282
    {
        l_pDwqStatus    = (DRQ_DWQ_REG*)&(rDwqMcu0Status); 
        l_ulDwqBaseAddr = DWQ_BASE_ADDR_MCU0; 
        COM_MemZero((U32 *)l_ulDwqBaseAddr,DWQ_DEPTH_MCU0);
    }
    else if(MCU1_ID == HAL_GetMcuId())
2000a61c:	252566        	bnei	a5, 2, 2000a645 <HAL_DwqInit+0x61>
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:285
    {
        l_pDwqStatus    = (DRQ_DWQ_REG*)&(rDwqMcu1Status); 
        l_ulDwqBaseAddr = DWQ_BASE_ADDR_MCU1; 
2000a61f:	d98a61        	l32r	a6, 20000c48 <_stext+0x548>
2000a622:	830c      	movi.n	a3, 8
2000a624:	7a6062        	s32i	a6, a0, 0x1e8
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:299
    else
    {
        DBG_Getch();
    }

}
2000a627:	0108      	l32i.n	a0, a1, 0
2000a629:	12a376        	loopgtz	a3, 2000a63f <HAL_DwqInit+0x5b>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:65
2000a62c:	0629      	s32i.n	a2, a6, 0
2000a62e:	1629      	s32i.n	a2, a6, 4
2000a630:	2629      	s32i.n	a2, a6, 8
2000a632:	3629      	s32i.n	a2, a6, 12
2000a634:	4629      	s32i.n	a2, a6, 16
2000a636:	5629      	s32i.n	a2, a6, 20
2000a638:	6629      	s32i.n	a2, a6, 24
2000a63a:	7629      	s32i.n	a2, a6, 28
2000a63c:	20c662        	addi	a6, a6, 32

2000a63f <HAL_DwqInit+0x5b>:
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:299
2000a63f:	10c112        	addi	a1, a1, 16
2000a642:	f00d      	ret.n

2000a644 <HAL_DwqInit+0x60>:
	...

2000a645 <HAL_DwqInit+0x61>:
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
2000a645:	03eb70        	rsr.prid	a7
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:288
    {
        l_pDwqStatus    = (DRQ_DWQ_REG*)&(rDwqMcu1Status); 
        l_ulDwqBaseAddr = DWQ_BASE_ADDR_MCU1; 
        COM_MemZero((U32 *)l_ulDwqBaseAddr,DWQ_DEPTH_MCU1);
    }
    else if(MCU2_ID == HAL_GetMcuId())
2000a648:	243766        	bnei	a7, 3, 2000a670 <HAL_DwqInit+0x8c>
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:291
    {
        l_pDwqStatus    = (DRQ_DWQ_REG*)&(rDwqMcu2Status);
        l_ulDwqBaseAddr = DWQ_BASE_ADDR_MCU2;
2000a64b:	d98081        	l32r	a8, 20000c4c <_stext+0x54c>
2000a64e:	830c      	movi.n	a3, 8
2000a650:	7a6082        	s32i	a8, a0, 0x1e8
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:299
    else
    {
        DBG_Getch();
    }

}
2000a653:	0108      	l32i.n	a0, a1, 0
2000a655:	12a376        	loopgtz	a3, 2000a66b <HAL_DwqInit+0x87>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:65
2000a658:	0829      	s32i.n	a2, a8, 0
2000a65a:	1829      	s32i.n	a2, a8, 4
2000a65c:	2829      	s32i.n	a2, a8, 8
2000a65e:	3829      	s32i.n	a2, a8, 12
2000a660:	4829      	s32i.n	a2, a8, 16
2000a662:	5829      	s32i.n	a2, a8, 20
2000a664:	6829      	s32i.n	a2, a8, 24
2000a666:	7829      	s32i.n	a2, a8, 28
2000a668:	20c882        	addi	a8, a8, 32

2000a66b <HAL_DwqInit+0x87>:
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:299
2000a66b:	10c112        	addi	a1, a1, 16
2000a66e:	f00d      	ret.n

2000a670 <HAL_DwqInit+0x8c>:
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:296
        l_ulDwqBaseAddr = DWQ_BASE_ADDR_MCU2;
        COM_MemZero((U32 *)l_ulDwqBaseAddr,DWQ_DEPTH_MCU2);
    }
    else
    {
        DBG_Getch();
2000a670:	d82a01        	l32r	a0, 20000718 <_stext+0x18>
2000a673:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:299
    }

}
2000a676:	0108      	l32i.n	a0, a1, 0
2000a678:	10c112        	addi	a1, a1, 16
2000a67b:	f00d      	ret.n

2000a67d <HAL_DwqInit+0x99>:
2000a67d:	000000                                        ...

2000a680 <HAL_DrqInit>:
HAL_DrqInit():
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:147
History:
    20140915   Victor Zhang  Create
========================================================================*/

void HAL_DrqInit(void)
{
2000a680:	f0c112        	addi	a1, a1, -16
2000a683:	0109      	s32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
2000a685:	03eb30        	rsr.prid	a3
2000a688:	d82501        	l32r	a0, 2000071c <_stext+0x1c>
2000a68b:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:148
    if(MCU0_ID == HAL_GetMcuId())
2000a68d:	241366        	bnei	a3, 1, 2000a6b5 <HAL_DrqInit+0x35>
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:151
    {
        l_pDrqStatus    = (DRQ_DWQ_REG*)&(rDrqMcu0Status);
        l_ulDrqBaseAddr = DRQ_BASE_ADDR_MCU0;
2000a690:	d97041        	l32r	a4, 20000c50 <_stext+0x550>
2000a693:	430c      	movi.n	a3, 4
2000a695:	796042        	s32i	a4, a0, 0x1e4
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:170
    }
    else
    {
        DBG_Getch();
    }
}
2000a698:	0108      	l32i.n	a0, a1, 0
2000a69a:	12a376        	loopgtz	a3, 2000a6b0 <HAL_DrqInit+0x30>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:65
2000a69d:	0429      	s32i.n	a2, a4, 0
2000a69f:	1429      	s32i.n	a2, a4, 4
2000a6a1:	2429      	s32i.n	a2, a4, 8
2000a6a3:	3429      	s32i.n	a2, a4, 12
2000a6a5:	4429      	s32i.n	a2, a4, 16
2000a6a7:	5429      	s32i.n	a2, a4, 20
2000a6a9:	6429      	s32i.n	a2, a4, 24
2000a6ab:	7429      	s32i.n	a2, a4, 28
2000a6ad:	20c442        	addi	a4, a4, 32

2000a6b0 <HAL_DrqInit+0x30>:
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:170
2000a6b0:	10c112        	addi	a1, a1, 16
2000a6b3:	f00d      	ret.n

2000a6b5 <HAL_DrqInit+0x35>:
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
2000a6b5:	03eb50        	rsr.prid	a5
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:154
    {
        l_pDrqStatus    = (DRQ_DWQ_REG*)&(rDrqMcu0Status);
        l_ulDrqBaseAddr = DRQ_BASE_ADDR_MCU0;
        COM_MemZero((U32 *)l_ulDrqBaseAddr,DRQ_DEPTH_MCU0);
    }
    else if(MCU1_ID == HAL_GetMcuId())
2000a6b8:	252566        	bnei	a5, 2, 2000a6e1 <HAL_DrqInit+0x61>
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:157
    {
        l_pDrqStatus    = (DRQ_DWQ_REG*)&(rDrqMcu1Status);
        l_ulDrqBaseAddr = DRQ_BASE_ADDR_MCU1;
2000a6bb:	d96661        	l32r	a6, 20000c54 <_stext+0x554>
2000a6be:	430c      	movi.n	a3, 4
2000a6c0:	796062        	s32i	a6, a0, 0x1e4
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:170
    }
    else
    {
        DBG_Getch();
    }
}
2000a6c3:	0108      	l32i.n	a0, a1, 0
2000a6c5:	12a376        	loopgtz	a3, 2000a6db <HAL_DrqInit+0x5b>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:65
2000a6c8:	0629      	s32i.n	a2, a6, 0
2000a6ca:	1629      	s32i.n	a2, a6, 4
2000a6cc:	2629      	s32i.n	a2, a6, 8
2000a6ce:	3629      	s32i.n	a2, a6, 12
2000a6d0:	4629      	s32i.n	a2, a6, 16
2000a6d2:	5629      	s32i.n	a2, a6, 20
2000a6d4:	6629      	s32i.n	a2, a6, 24
2000a6d6:	7629      	s32i.n	a2, a6, 28
2000a6d8:	20c662        	addi	a6, a6, 32

2000a6db <HAL_DrqInit+0x5b>:
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:170
2000a6db:	10c112        	addi	a1, a1, 16
2000a6de:	f00d      	ret.n

2000a6e0 <HAL_DrqInit+0x60>:
	...

2000a6e1 <HAL_DrqInit+0x61>:
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
2000a6e1:	03eb70        	rsr.prid	a7
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:160
    {
        l_pDrqStatus    = (DRQ_DWQ_REG*)&(rDrqMcu1Status);
        l_ulDrqBaseAddr = DRQ_BASE_ADDR_MCU1;
        COM_MemZero((U32 *)l_ulDrqBaseAddr,DRQ_DEPTH_MCU1);
    }
    else if(MCU2_ID == HAL_GetMcuId())
2000a6e4:	243766        	bnei	a7, 3, 2000a70c <HAL_DrqInit+0x8c>
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:163
    {
        l_pDrqStatus    = (DRQ_DWQ_REG*)&(rDrqMcu2Status);
        l_ulDrqBaseAddr = DRQ_BASE_ADDR_MCU2;
2000a6e7:	d95c81        	l32r	a8, 20000c58 <_stext+0x558>
2000a6ea:	430c      	movi.n	a3, 4
2000a6ec:	796082        	s32i	a8, a0, 0x1e4
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:170
    }
    else
    {
        DBG_Getch();
    }
}
2000a6ef:	0108      	l32i.n	a0, a1, 0
2000a6f1:	12a376        	loopgtz	a3, 2000a707 <HAL_DrqInit+0x87>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:65
2000a6f4:	0829      	s32i.n	a2, a8, 0
2000a6f6:	1829      	s32i.n	a2, a8, 4
2000a6f8:	2829      	s32i.n	a2, a8, 8
2000a6fa:	3829      	s32i.n	a2, a8, 12
2000a6fc:	4829      	s32i.n	a2, a8, 16
2000a6fe:	5829      	s32i.n	a2, a8, 20
2000a700:	6829      	s32i.n	a2, a8, 24
2000a702:	7829      	s32i.n	a2, a8, 28
2000a704:	20c882        	addi	a8, a8, 32

2000a707 <HAL_DrqInit+0x87>:
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:170
2000a707:	10c112        	addi	a1, a1, 16
2000a70a:	f00d      	ret.n

2000a70c <HAL_DrqInit+0x8c>:
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:168
        l_ulDrqBaseAddr = DRQ_BASE_ADDR_MCU2;
        COM_MemZero((U32 *)l_ulDrqBaseAddr,DRQ_DEPTH_MCU2);
    }
    else
    {
        DBG_Getch();
2000a70c:	d80301        	l32r	a0, 20000718 <_stext+0x18>
2000a70f:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\SGE/HAL_SGE.c:170
    }
}
2000a712:	0108      	l32i.n	a0, a1, 0
2000a714:	10c112        	addi	a1, a1, 16
2000a717:	f00d      	ret.n

2000a719 <HAL_DrqInit+0x99>:
2000a719:	000000                                        ...

2000a71c <HAL_HsgInit>:
HAL_HsgInit():
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
2000a71c:	03eb30        	rsr.prid	a3
2000a71f:	d7ff61        	l32r	a6, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:65
        /*TempFix:Set SoftReset ISR before access in 3533*/
        rGLB(0x1c) &= ~(1<<18);
       l_pHsgReport = (pHSG_REPORT_MCU)(&rHsgReportMcu0);
       
    }  
    else  if (MCU1_ID == l_ulMcuID)
2000a722:	d94e81        	l32r	a8, 20000c5c <_stext+0x55c>
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:57
History:
    201409011    Tobey   uniform coding style
------------------------------------------------------------------------------*/
void HAL_HsgInit(void)
{
    l_ulMcuID = HAL_GetMcuId();
2000a725:	746632        	s32i	a3, a6, 0x1d0
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:58
    if (MCU0_ID == l_ulMcuID)
2000a728:	211326        	beqi	a3, 1, 2000a74d <HAL_HsgInit+0x31>
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:65
        /*TempFix:Set SoftReset ISR before access in 3533*/
        rGLB(0x1c) &= ~(1<<18);
       l_pHsgReport = (pHSG_REPORT_MCU)(&rHsgReportMcu0);
       
    }  
    else  if (MCU1_ID == l_ulMcuID)
2000a72b:	d94d71        	l32r	a7, 20000c60 <_stext+0x560>
2000a72e:	fec392        	addi	a9, a3, -2
2000a731:	837890        	moveqz	a7, a8, a9
2000a734:	756672        	s32i	a7, a6, 0x1d4
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:76
        l_pHsgReport = (pHSG_REPORT_MCU)(&rHsgReportMcu2);
    } 


    /*set HSG_MODE other than SATA_DSG_MODE*/
    rSGESataMode &= ~1;
2000a737:	e57c      	movi.n	a5, -2
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:65
        /*TempFix:Set SoftReset ISR before access in 3533*/
        rGLB(0x1c) &= ~(1<<18);
       l_pHsgReport = (pHSG_REPORT_MCU)(&rHsgReportMcu0);
       
    }  
    else  if (MCU1_ID == l_ulMcuID)
2000a739:	d7f141        	l32r	a4, 20000700 <_stext>
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:76
        l_pHsgReport = (pHSG_REPORT_MCU)(&rHsgReportMcu2);
    } 


    /*set HSG_MODE other than SATA_DSG_MODE*/
    rSGESataMode &= ~1;
2000a73c:	0020c0        	memw
2000a73f:	472422        	l32i	a2, a4, 0x11c
2000a742:	102250        	and	a2, a2, a5
2000a745:	0020c0        	memw
2000a748:	476422        	s32i	a2, a4, 0x11c
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:78
    
    return;
2000a74b:	f00d      	ret.n

2000a74d <HAL_HsgInit+0x31>:
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:61
{
    l_ulMcuID = HAL_GetMcuId();
    if (MCU0_ID == l_ulMcuID)
    {
        /*TempFix:Set SoftReset ISR before access in 3533*/
        rGLB(0x1c) &= ~(1<<18);
2000a74d:	d94571        	l32r	a7, 20000c64 <_stext+0x564>
2000a750:	d80a51        	l32r	a5, 20000778 <_stext+0x78>
2000a753:	0020c0        	memw
2000a756:	872542        	l32i	a4, a5, 0x21c
2000a759:	104470        	and	a4, a4, a7
2000a75c:	0020c0        	memw
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:62
       l_pHsgReport = (pHSG_REPORT_MCU)(&rHsgReportMcu0);
2000a75f:	d94231        	l32r	a3, 20000c68 <_stext+0x568>
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:61
{
    l_ulMcuID = HAL_GetMcuId();
    if (MCU0_ID == l_ulMcuID)
    {
        /*TempFix:Set SoftReset ISR before access in 3533*/
        rGLB(0x1c) &= ~(1<<18);
2000a762:	876542        	s32i	a4, a5, 0x21c
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:62
       l_pHsgReport = (pHSG_REPORT_MCU)(&rHsgReportMcu0);
2000a765:	756632        	s32i	a3, a6, 0x1d4
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:76
        l_pHsgReport = (pHSG_REPORT_MCU)(&rHsgReportMcu2);
    } 


    /*set HSG_MODE other than SATA_DSG_MODE*/
    rSGESataMode &= ~1;
2000a768:	e27c      	movi.n	a2, -2
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:65
        /*TempFix:Set SoftReset ISR before access in 3533*/
        rGLB(0x1c) &= ~(1<<18);
       l_pHsgReport = (pHSG_REPORT_MCU)(&rHsgReportMcu0);
       
    }  
    else  if (MCU1_ID == l_ulMcuID)
2000a76a:	d7e5b1        	l32r	a11, 20000700 <_stext>
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:76
        l_pHsgReport = (pHSG_REPORT_MCU)(&rHsgReportMcu2);
    } 


    /*set HSG_MODE other than SATA_DSG_MODE*/
    rSGESataMode &= ~1;
2000a76d:	0020c0        	memw
2000a770:	472ba2        	l32i	a10, a11, 0x11c
2000a773:	10aa20        	and	a10, a10, a2
2000a776:	0020c0        	memw
2000a779:	476ba2        	s32i	a10, a11, 0x11c
D:\IM_3D_TLC\firmware\HAL\HSG/HAL_HSG.c:78
    
    return;
2000a77c:	f00d      	ret.n

2000a77e <HAL_HsgInit+0x62>:
	...

2000a780 <HAL_NormalDsgInit>:
HAL_NormalDsgInit():
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:119
    any other normal DSG functions can be called after this function finished.
History:
    201409011    Tobey   uniform coding style
------------------------------------------------------------------------------*/
void HAL_NormalDsgInit(void)
{
2000a780:	e0c112        	addi	a1, a1, -32
2000a783:	0109      	s32i.n	a0, a1, 0
2000a785:	41f9      	s32i.n	a15, a1, 16
2000a787:	31e9      	s32i.n	a14, a1, 12
2000a789:	21d9      	s32i.n	a13, a1, 8
2000a78b:	11c9      	s32i.n	a12, a1, 4
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
2000a78d:	03eb30        	rsr.prid	a3
2000a790:	d7e321        	l32r	a2, 2000071c <_stext+0x1c>
2000a793:	030b      	addi.n	a0, a3, -1
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:120
    l_ulMcuID = HAL_GetMcuId();
2000a795:	376232        	s32i	a3, a2, 220
2000a798:	0a9016        	beqz	a0, 2000a845 <HAL_NormalDsgInit+0xc5>
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:125
    if (MCU0_ID == l_ulMcuID)
    {
        l_pDsgReport = (pDSG_REPORT_MCU)(&rDsgReportMcu0);
    }
    else if (MCU1_ID == l_ulMcuID)
2000a79b:	d7e041        	l32r	a4, 2000071c <_stext+0x1c>
2000a79e:	d93351        	l32r	a5, 20000c6c <_stext+0x56c>
2000a7a1:	d93301        	l32r	a0, 20000c70 <_stext+0x570>
2000a7a4:	fec362        	addi	a6, a3, -2
2000a7a7:	830560        	moveqz	a0, a5, a6
2000a7aa:	386402        	s32i	a0, a4, 224

2000a7ad <HAL_NormalDsgInit+0x2d>:
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:52

LOCAL void HAL_NormalDsgFifoInit(void)
{
    U16 usDsgId, usIdx = 0;
    
    while (usIdx < NORMAL_DSG_FIFO_DEPTH)
2000a7ad:	0e0c      	movi.n	a14, 0
2000a7af:	d7f2d1        	l32r	a13, 20000778 <_stext+0x78>
2000a7b2:	000086        	j	2000a7b8 <HAL_NormalDsgInit+0x38>

2000a7b5 <HAL_NormalDsgInit+0x35>:
2000a7b5:	70cef6        	bgeui	a14, 32, 2000a829 <HAL_NormalDsgInit+0xa9>
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:241
    201409011    Tobey   uniform coding style
------------------------------------------------------------------------------*/
BOOL HAL_GetCurNormalDsg(U16 *pDsgId)
{
    BOOL bStsFlag;
    if (TRUE == l_pDsgReport->bsDsgValidEn)
2000a7b8:	0020c0        	memw
2000a7bb:	002022        	l32i	a2, a0, 0
2000a7be:	f372f7        	bbci	a2, 31, 2000a7b5 <HAL_NormalDsgInit+0x35>
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:243
    {
        *pDsgId = l_pDsgReport->bsDsgId;
2000a7c1:	0020c0        	memw
2000a7c4:	d80d21        	l32r	a2, 200007f8 <_stext+0xf8>
2000a7c7:	0020f2        	l32i	a15, a0, 0
2000a7ca:	10ff20        	and	a15, a15, a2
2000a7cd:	a5f5f0        	extui	a15, a15, 21, 11
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
2000a7d0:	03ebc0        	rsr.prid	a12
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:149
#ifndef SIM
    U32 ulMcuID;
    U32 ulLockValue;
        
    ulMcuID = HAL_GetMcuId();
    if ((MCU0_ID == ulMcuID) || (MCU1_ID == ulMcuID) || (MCU2_ID == ulMcuID))
2000a7d3:	051c26        	beqi	a12, 1, 2000a7dc <HAL_NormalDsgInit+0x5c>
2000a7d6:	022c26        	beqi	a12, 2, 2000a7dc <HAL_NormalDsgInit+0x5c>
2000a7d9:	083c66        	bnei	a12, 3, 2000a7e5 <HAL_NormalDsgInit+0x65>
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:151
    {
        *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4) = ulMcuID;
2000a7dc:	0020c0        	memw
2000a7df:	ce6dc2        	s32i	a12, a13, 0x338
2000a7e2:	000146        	j	2000a7eb <HAL_NormalDsgInit+0x6b>

2000a7e5 <HAL_NormalDsgInit+0x65>:
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:155
    }
    else
    {
        DBG_Getch();
2000a7e5:	d7cc01        	l32r	a0, 20000718 <_stext+0x18>
2000a7e8:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:158
    }

    ulLockValue = *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4);
2000a7eb:	0020c0        	memw
2000a7ee:	ce2d32        	l32i	a3, a13, 0x338
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:187
{
    BOOL bSts = FALSE;
    do
    {
        bSts = HAL_MultiCoreGetSpinLock(ucLockId);
    }while (FALSE == bSts);
2000a7f1:	db9c37        	bne	a12, a3, 2000a7d0 <HAL_NormalDsgInit+0x50>
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:278

#ifdef PATCH_HW_BUG_IN_ALLC_DSG_OR_HSG
    HAL_MultiCoreGetSpinLockWait(SPINLOCKID_ALLC_DSG_OR_HSG);
#endif

    l_pDsgReport->bsDsgTrigger = TRUE;
2000a7f4:	d7ca01        	l32r	a0, 2000071c <_stext+0x1c>
2000a7f7:	382002        	l32i	a0, a0, 224
2000a7fa:	0020c0        	memw
2000a7fd:	d7d151        	l32r	a5, 20000744 <_stext+0x44>
2000a800:	0048      	l32i.n	a4, a0, 0
2000a802:	104450        	and	a4, a4, a5
2000a805:	d7e751        	l32r	a5, 200007a4 <_stext+0xa4>
2000a808:	204450        	or	a4, a4, a5
2000a80b:	0020c0        	memw
2000a80e:	0049      	s32i.n	a4, a0, 0
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
History:
    20140917    Tobey  uniform coding style
------------------------------------------------------------------------------*/
void MULTI_CORE_TEXT_ATTR HAL_MultiCoreReleaseSpinLock(U8 ucLockId)
{
    *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4) = 0;
2000a810:	0020c0        	memw
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:57
    while (usIdx < NORMAL_DSG_FIFO_DEPTH)
    {
        if (TRUE == HAL_GetCurNormalDsg(&usDsgId))
        {
            HAL_TriggerNormalDsg();  
            g_aNormalDsgFifo[usIdx] = usDsgId;
2000a813:	d7fb31        	l32r	a3, 20000800 <_stext+0x100>
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
2000a816:	020c      	movi.n	a2, 0
2000a818:	ce6d22        	s32i	a2, a13, 0x338
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:57
2000a81b:	903e30        	addx2	a3, a14, a3
2000a81e:	7e53f2        	s16i	a15, a3, 252
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:59
            //DBG_Printf("HAL_NormalDsgFifoInit usIdx %d. usDsgId %d\n", usIdx,usDsgId);
            usIdx++;
2000a821:	ee1b      	addi.n	a14, a14, 1
2000a823:	f4e0e0        	extui	a14, a14, 0, 16
2000a826:	ffe2c6        	j	2000a7b5 <HAL_NormalDsgInit+0x35>

2000a829 <HAL_NormalDsgInit+0xa9>:
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:138

    #ifdef PATCH_HW_NORMAL_DSG_POOL
    HAL_NormalDsgFifoInit();
    #endif
        
    return;
2000a829:	0108      	l32i.n	a0, a1, 0
2000a82b:	11c8      	l32i.n	a12, a1, 4
2000a82d:	21d8      	l32i.n	a13, a1, 8
2000a82f:	31e8      	l32i.n	a14, a1, 12
2000a831:	41f8      	l32i.n	a15, a1, 16
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:64
            usIdx++;
        }              
    }

    g_NormalDsgFifoHead = 0;
    g_NormalDsgFifoTail = NORMAL_DSG_FIFO_DEPTH - 1;    
2000a833:	f41c      	movi.n	a4, 31
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:63
            //DBG_Printf("HAL_NormalDsgFifoInit usIdx %d. usDsgId %d\n", usIdx,usDsgId);
            usIdx++;
        }              
    }

    g_NormalDsgFifoHead = 0;
2000a835:	d7b951        	l32r	a5, 2000071c <_stext+0x1c>
2000a838:	060c      	movi.n	a6, 0
2000a83a:	6b5562        	s16i	a6, a5, 214
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:64
    g_NormalDsgFifoTail = NORMAL_DSG_FIFO_DEPTH - 1;    
2000a83d:	6c5542        	s16i	a4, a5, 216
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:138

    #ifdef PATCH_HW_NORMAL_DSG_POOL
    HAL_NormalDsgFifoInit();
    #endif
        
    return;
2000a840:	20c112        	addi	a1, a1, 32
2000a843:	f00d      	ret.n

2000a845 <HAL_NormalDsgInit+0xc5>:
D:\IM_3D_TLC\firmware\HAL\DSG/HAL_NormalDSG.c:123
void HAL_NormalDsgInit(void)
{
    l_ulMcuID = HAL_GetMcuId();
    if (MCU0_ID == l_ulMcuID)
    {
        l_pDsgReport = (pDSG_REPORT_MCU)(&rDsgReportMcu0);
2000a845:	d7b571        	l32r	a7, 2000071c <_stext+0x1c>
2000a848:	d90b01        	l32r	a0, 20000c74 <_stext+0x574>
2000a84b:	386702        	s32i	a0, a7, 224
2000a84e:	ffd6c6        	j	2000a7ad <HAL_NormalDsgInit+0x2d>

2000a851 <HAL_NormalDsgInit+0xd1>:
2000a851:	000000                                        ...

2000a854 <HAL_TemperatureSensor_Init>:
HAL_TemperatureSensor_Init():
D:\IM_3D_TLC\firmware\HAL\IIC/HAL_TemperatureSensor.c:51
    before write or read temperature sensor register  
History:
20151228    William    create
------------------------------------------------------------------------------*/
BOOL HAL_TemperatureSensor_Init(void)
{
2000a854:	f0c112        	addi	a1, a1, -16
2000a857:	0109      	s32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
2000a859:	03eb00        	rsr.prid	a0
D:\IM_3D_TLC\firmware\HAL\IIC/HAL_TemperatureSensor.c:76
            bInit = TRUE;
            //DBG_Printf("HAL_TemperatureSensor_Init: Init done, ulMCUID %d! \n", ulMCUID);
        }
    }

    return TRUE;
2000a85c:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\firmware\HAL\IIC/HAL_TemperatureSensor.c:57
    TEMPERATURE_SENSOR_I2C *pTempSensor;
    U32 ulMCUID;
    static BOOL bInit = FALSE;

    ulMCUID = HAL_GetMcuId();
    if (((MCU1_ID == ulMCUID) || (MCU0_ID == ulMCUID)) && (bInit == FALSE)) 
2000a85e:	0b2026        	beqi	a0, 2, 2000a86d <HAL_TemperatureSensor_Init+0x19>
2000a861:	081026        	beqi	a0, 1, 2000a86d <HAL_TemperatureSensor_Init+0x19>

2000a864 <HAL_TemperatureSensor_Init+0x10>:
D:\IM_3D_TLC\firmware\HAL\IIC/HAL_TemperatureSensor.c:76
            bInit = TRUE;
            //DBG_Printf("HAL_TemperatureSensor_Init: Init done, ulMCUID %d! \n", ulMCUID);
        }
    }

    return TRUE;
2000a864:	0108      	l32i.n	a0, a1, 0
2000a866:	10c112        	addi	a1, a1, 16
2000a869:	f00d      	ret.n

2000a86b <HAL_TemperatureSensor_Init+0x17>:
	...

2000a86d <HAL_TemperatureSensor_Init+0x19>:
D:\IM_3D_TLC\firmware\HAL\IIC/HAL_TemperatureSensor.c:57
    TEMPERATURE_SENSOR_I2C *pTempSensor;
    U32 ulMCUID;
    static BOOL bInit = FALSE;

    ulMCUID = HAL_GetMcuId();
    if (((MCU1_ID == ulMCUID) || (MCU0_ID == ulMCUID)) && (bInit == FALSE)) 
2000a86d:	d90251        	l32r	a5, 20000c78 <_stext+0x578>
2000a870:	0508      	l32i.n	a0, a5, 0
2000a872:	fee056        	bnez	a0, 2000a864 <HAL_TemperatureSensor_Init+0x10>
D:\IM_3D_TLC\firmware\HAL\IIC/HAL_TemperatureSensor.c:59
    {    
        pTempSensor = HAL_GetTemperatureSensorI2C();
2000a875:	d90101        	l32r	a0, 20000c7c <_stext+0x57c>
D:\IM_3D_TLC\firmware\HAL\IIC/HAL_TemperatureSensor.c:61
        g_IICSensorParam.ucDevAddr = pTempSensor->bsI2CAddr;
        g_IICSensorParam.ucDevClock = pTempSensor->bsI2CClock;
2000a878:	0028      	l32i.n	a2, a0, 0
D:\IM_3D_TLC\firmware\HAL\IIC/HAL_TemperatureSensor.c:59
    static BOOL bInit = FALSE;

    ulMCUID = HAL_GetMcuId();
    if (((MCU1_ID == ulMCUID) || (MCU0_ID == ulMCUID)) && (bInit == FALSE)) 
    {    
        pTempSensor = HAL_GetTemperatureSensorI2C();
2000a87a:	d7a841        	l32r	a4, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\firmware\HAL\IIC/HAL_TemperatureSensor.c:62
        g_IICSensorParam.ucDevAddr = pTempSensor->bsI2CAddr;
        g_IICSensorParam.ucDevClock = pTempSensor->bsI2CClock;
        g_IICSensorParam.ucDeviceType = pTempSensor->bsTemperatureSensorType;
2000a87d:	343020        	extui	a3, a2, 0, 4
2000a880:	740820        	extui	a0, a2, 8, 8
D:\IM_3D_TLC\firmware\HAL\IIC/HAL_TemperatureSensor.c:60

    ulMCUID = HAL_GetMcuId();
    if (((MCU1_ID == ulMCUID) || (MCU0_ID == ulMCUID)) && (bInit == FALSE)) 
    {    
        pTempSensor = HAL_GetTemperatureSensorI2C();
        g_IICSensorParam.ucDevAddr = pTempSensor->bsI2CAddr;
2000a883:	a54402        	s8i	a0, a4, 165
D:\IM_3D_TLC\firmware\HAL\IIC/HAL_TemperatureSensor.c:62
        g_IICSensorParam.ucDevClock = pTempSensor->bsI2CClock;
        g_IICSensorParam.ucDeviceType = pTempSensor->bsTemperatureSensorType;
2000a886:	a44432        	s8i	a3, a4, 164
D:\IM_3D_TLC\firmware\HAL\IIC/HAL_TemperatureSensor.c:61
    ulMCUID = HAL_GetMcuId();
    if (((MCU1_ID == ulMCUID) || (MCU0_ID == ulMCUID)) && (bInit == FALSE)) 
    {    
        pTempSensor = HAL_GetTemperatureSensorI2C();
        g_IICSensorParam.ucDevAddr = pTempSensor->bsI2CAddr;
        g_IICSensorParam.ucDevClock = pTempSensor->bsI2CClock;
2000a889:	342420        	extui	a2, a2, 4, 4
2000a88c:	a64422        	s8i	a2, a4, 166
D:\IM_3D_TLC\firmware\HAL\IIC/HAL_TemperatureSensor.c:63
        g_IICSensorParam.ucDeviceType = pTempSensor->bsTemperatureSensorType;
        if ((g_IICSensorParam.ucDeviceType >= 5) || (g_IICSensorParam.ucDevClock >= 3)
2000a88f:	1153f6        	bgeui	a3, 5, 2000a8a4 <HAL_TemperatureSensor_Init+0x50>
2000a892:	0e32f6        	bgeui	a2, 3, 2000a8a4 <HAL_TemperatureSensor_Init+0x50>
2000a895:	824c      	movi.n	a2, 72
2000a897:	1e1027        	beq	a0, a2, 2000a8b9 <HAL_TemperatureSensor_Init+0x65>
2000a89a:	a34c      	movi.n	a3, 74
2000a89c:	191037        	beq	a0, a3, 2000a8b9 <HAL_TemperatureSensor_Init+0x65>
2000a89f:	944c      	movi.n	a4, 73
2000a8a1:	141047        	beq	a0, a4, 2000a8b9 <HAL_TemperatureSensor_Init+0x65>
D:\IM_3D_TLC\firmware\HAL\IIC/HAL_TemperatureSensor.c:66
          || ((g_IICSensorParam.ucDevAddr != 0x48) && (g_IICSensorParam.ucDevAddr != 0x4A) && (g_IICSensorParam.ucDevAddr != 0x49))) 
        {
            DBG_Printf("HAL_TemperatureSensor_Init: sensor parameter is not correct! \n");
2000a8a4:	d8f721        	l32r	a2, 20000c80 <_stext+0x580>
2000a8a7:	003bc5        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\HAL\IIC/HAL_TemperatureSensor.c:67
            DBG_Getch();
2000a8aa:	d79b01        	l32r	a0, 20000718 <_stext+0x18>
2000a8ad:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\IIC/HAL_TemperatureSensor.c:76
            bInit = TRUE;
            //DBG_Printf("HAL_TemperatureSensor_Init: Init done, ulMCUID %d! \n", ulMCUID);
        }
    }

    return TRUE;
2000a8b0:	120c      	movi.n	a2, 1
2000a8b2:	0108      	l32i.n	a0, a1, 0
2000a8b4:	10c112        	addi	a1, a1, 16
2000a8b7:	f00d      	ret.n

2000a8b9 <HAL_TemperatureSensor_Init+0x65>:
2000a8b9:	0108      	l32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\HAL\IIC/HAL_TemperatureSensor.c:71
            DBG_Printf("HAL_TemperatureSensor_Init: sensor parameter is not correct! \n");
            DBG_Getch();
        } 
        else 
        {
            bInit = TRUE;
2000a8bb:	120c      	movi.n	a2, 1
2000a8bd:	0529      	s32i.n	a2, a5, 0
D:\IM_3D_TLC\firmware\HAL\IIC/HAL_TemperatureSensor.c:76
            //DBG_Printf("HAL_TemperatureSensor_Init: Init done, ulMCUID %d! \n", ulMCUID);
        }
    }

    return TRUE;
2000a8bf:	10c112        	addi	a1, a1, 16
2000a8c2:	f00d      	ret.n

2000a8c4 <HAL_HwDebugInit>:
HAL_HwDebugInit():
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:114
    FW call this function in boot stage;
History:
    20140729    Gavin   created
------------------------------------------------------------------------------*/
void HAL_HwDebugInit(void)
{
2000a8c4:	d79031        	l32r	a3, 20000704 <_stext+0x4>
2000a8c7:	f0c112        	addi	a1, a1, -16
2000a8ca:	0109      	s32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:118
    U32 ulMcuId;
    PTABLE *pPTable;

    l_pHwDebugInfo = (HW_DEBUG_INFO *)DRAM_FW_HAL_TRACE_BASE;
2000a8cc:	d8ee01        	l32r	a0, 20000c84 <_stext+0x584>
2000a8cf:	1f6302        	s32i	a0, a3, 124
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
2000a8d2:	03eb00        	rsr.prid	a0
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:137
        DBG_Printf("HAL_HwDebug DRAM offset = 0x%x\n", DRAM_FW_HAL_TRACE_BASE - DRAM_START_ADDRESS);
        DBG_Printf("HAL_HwDebug memory size = 0x%x\n", sizeof(HW_DEBUG_INFO));
    }

    pPTable = HAL_GetPTableAddr();
    l_bHwDebugTraceEn = (pPTable->tHALFeature.ulFeatureBitMap & 0x1) ? TRUE : FALSE;
2000a8d5:	d8ec41        	l32r	a4, 20000c88 <_stext+0x588>
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:121
    PTABLE *pPTable;

    l_pHwDebugInfo = (HW_DEBUG_INFO *)DRAM_FW_HAL_TRACE_BASE;

    ulMcuId = HAL_GetMcuId();
    if (MCU0_ID == ulMcuId)
2000a8d8:	181026        	beqi	a0, 1, 2000a8f4 <HAL_HwDebugInit+0x30>
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:127
    {
        l_ucMyMcuIndex = 0;
    }
    else
    {
        l_ucMyMcuIndex = ulMcuId - MCU1_ID;
2000a8db:	fec022        	addi	a2, a0, -2
2000a8de:	804322        	s8i	a2, a3, 128
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:130
    }

    if (MCU1_ID == ulMcuId)//only MCU1 print the information
2000a8e1:	172026        	beqi	a0, 2, 2000a8fc <HAL_HwDebugInit+0x38>

2000a8e4 <HAL_HwDebugInit+0x20>:
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:139
    }

    pPTable = HAL_GetPTableAddr();
    l_bHwDebugTraceEn = (pPTable->tHALFeature.ulFeatureBitMap & 0x1) ? TRUE : FALSE;
    
    return;
2000a8e4:	0108      	l32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:137
        DBG_Printf("HAL_HwDebug DRAM offset = 0x%x\n", DRAM_FW_HAL_TRACE_BASE - DRAM_START_ADDRESS);
        DBG_Printf("HAL_HwDebug memory size = 0x%x\n", sizeof(HW_DEBUG_INFO));
    }

    pPTable = HAL_GetPTableAddr();
    l_bHwDebugTraceEn = (pPTable->tHALFeature.ulFeatureBitMap & 0x1) ? TRUE : FALSE;
2000a8e6:	612442        	l32i	a4, a4, 0x184
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:139
    
    return;
2000a8e9:	10c112        	addi	a1, a1, 16
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:137
        DBG_Printf("HAL_HwDebug DRAM offset = 0x%x\n", DRAM_FW_HAL_TRACE_BASE - DRAM_START_ADDRESS);
        DBG_Printf("HAL_HwDebug memory size = 0x%x\n", sizeof(HW_DEBUG_INFO));
    }

    pPTable = HAL_GetPTableAddr();
    l_bHwDebugTraceEn = (pPTable->tHALFeature.ulFeatureBitMap & 0x1) ? TRUE : FALSE;
2000a8ec:	044040        	extui	a4, a4, 0, 1
2000a8ef:	216342        	s32i	a4, a3, 132
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:139
    
    return;
2000a8f2:	f00d      	ret.n

2000a8f4 <HAL_HwDebugInit+0x30>:
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:123
    l_pHwDebugInfo = (HW_DEBUG_INFO *)DRAM_FW_HAL_TRACE_BASE;

    ulMcuId = HAL_GetMcuId();
    if (MCU0_ID == ulMcuId)
    {
        l_ucMyMcuIndex = 0;
2000a8f4:	050c      	movi.n	a5, 0
2000a8f6:	804352        	s8i	a5, a3, 128
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:130
    else
    {
        l_ucMyMcuIndex = ulMcuId - MCU1_ID;
    }

    if (MCU1_ID == ulMcuId)//only MCU1 print the information
2000a8f9:	e72066        	bnei	a0, 2, 2000a8e4 <HAL_HwDebugInit+0x20>
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:132
    {        
        DBG_Printf("HAL_HwDebug DRAM offset = 0x%x\n", DRAM_FW_HAL_TRACE_BASE - DRAM_START_ADDRESS);
2000a8fc:	d8e421        	l32r	a2, 20000c8c <_stext+0x58c>
2000a8ff:	d8e431        	l32r	a3, 20000c90 <_stext+0x590>
2000a902:	003605        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:133
        DBG_Printf("HAL_HwDebug memory size = 0x%x\n", sizeof(HW_DEBUG_INFO));
2000a905:	d8e321        	l32r	a2, 20000c94 <_stext+0x594>
2000a908:	d8e431        	l32r	a3, 20000c98 <_stext+0x598>
2000a90b:	003585        	call0	2000ac64 <dbg_printf>
2000a90e:	d77d31        	l32r	a3, 20000704 <_stext+0x4>
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:137
    }

    pPTable = HAL_GetPTableAddr();
    l_bHwDebugTraceEn = (pPTable->tHALFeature.ulFeatureBitMap & 0x1) ? TRUE : FALSE;
2000a911:	d8dd41        	l32r	a4, 20000c88 <_stext+0x588>
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:139
    
    return;
2000a914:	0108      	l32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:137
        DBG_Printf("HAL_HwDebug DRAM offset = 0x%x\n", DRAM_FW_HAL_TRACE_BASE - DRAM_START_ADDRESS);
        DBG_Printf("HAL_HwDebug memory size = 0x%x\n", sizeof(HW_DEBUG_INFO));
    }

    pPTable = HAL_GetPTableAddr();
    l_bHwDebugTraceEn = (pPTable->tHALFeature.ulFeatureBitMap & 0x1) ? TRUE : FALSE;
2000a916:	612442        	l32i	a4, a4, 0x184
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:139
    
    return;
2000a919:	10c112        	addi	a1, a1, 16
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:137
        DBG_Printf("HAL_HwDebug DRAM offset = 0x%x\n", DRAM_FW_HAL_TRACE_BASE - DRAM_START_ADDRESS);
        DBG_Printf("HAL_HwDebug memory size = 0x%x\n", sizeof(HW_DEBUG_INFO));
    }

    pPTable = HAL_GetPTableAddr();
    l_bHwDebugTraceEn = (pPTable->tHALFeature.ulFeatureBitMap & 0x1) ? TRUE : FALSE;
2000a91c:	044040        	extui	a4, a4, 0, 1
2000a91f:	216342        	s32i	a4, a3, 132
D:\IM_3D_TLC\firmware\HAL\HwDebug/HAL_HwDebug.c:139
    
    return;
2000a922:	f00d      	ret.n

2000a924 <HAL_SEInit>:
HAL_SEInit():
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:219
History:
20140915    Kristin    1. Coding style uniform
                       2. add A0 support -- don't allocate SE to MCU0
------------------------------------------------------------------------------*/
void HAL_SEInit(void)
{
2000a924:	e0c112        	addi	a1, a1, -32
2000a927:	11c9      	s32i.n	a12, a1, 4
2000a929:	21d9      	s32i.n	a13, a1, 8
2000a92b:	31e9      	s32i.n	a14, a1, 12
2000a92d:	41f9      	s32i.n	a15, a1, 16
2000a92f:	0109      	s32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
2000a931:	03eb30        	rsr.prid	a3
2000a934:	d7c8f1        	l32r	a15, 20000854 <_stext+0x154>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:223
    U8 ucMCUID;

    ucMCUID = HAL_GetMcuId();
    switch(ucMCUID)
2000a937:	743030        	extui	a3, a3, 0, 8
2000a93a:	030b      	addi.n	a0, a3, -1
2000a93c:	0d2016        	beqz	a0, 2000aa12 <HAL_SEInit+0xee>
2000a93f:	fec342        	addi	a4, a3, -2
2000a942:	0eb416        	beqz	a4, 2000aa31 <HAL_SEInit+0x10d>
2000a945:	023366        	bnei	a3, 3, 2000a94b <HAL_SEInit+0x27>
2000a948:	002206        	j	2000a9d4 <HAL_SEInit+0xb0>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:256
    case MCU2_ID:
        l_ucSEID = SE2;
        break;

    default:
        DBG_Printf("HAL_SEInit: MCU ID error %d\n", ucMCUID);
2000a94b:	d8d421        	l32r	a2, 20000c9c <_stext+0x59c>
2000a94e:	003145        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:257
        DBG_Getch();
2000a951:	d77101        	l32r	a0, 20000718 <_stext+0x18>
2000a954:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:258
        break;
2000a957:	800fe2        	l8ui	a14, a15, 128

2000a95a <HAL_SEInit+0x36>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:96
20140915    Kristin    1. Coding style uniform
                       2. Input Param void -> U8
------------------------------------------------------------------------------*/
void HAL_SEClockDisable(U8 ucSEID)
{
    HAL_MultiCoreGetSpinLockWait(SPINLOCKID_CLKGATING);
2000a95a:	d787d1        	l32r	a13, 20000778 <_stext+0x78>
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
2000a95d:	03ebc0        	rsr.prid	a12
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:149
#ifndef SIM
    U32 ulMcuID;
    U32 ulLockValue;
        
    ulMcuID = HAL_GetMcuId();
    if ((MCU0_ID == ulMcuID) || (MCU1_ID == ulMcuID) || (MCU2_ID == ulMcuID))
2000a960:	051c26        	beqi	a12, 1, 2000a969 <HAL_SEInit+0x45>
2000a963:	022c26        	beqi	a12, 2, 2000a969 <HAL_SEInit+0x45>
2000a966:	0b3c66        	bnei	a12, 3, 2000a975 <HAL_SEInit+0x51>
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:151
    {
        *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4) = ulMcuID;
2000a969:	0020c0        	memw
2000a96c:	cc6dc2        	s32i	a12, a13, 0x330
2000a96f:	000206        	j	2000a97b <HAL_SEInit+0x57>

2000a972 <HAL_SEInit+0x4e>:
2000a972:	000000                                        ...

2000a975 <HAL_SEInit+0x51>:
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:155
    }
    else
    {
        DBG_Getch();
2000a975:	d76801        	l32r	a0, 20000718 <_stext+0x18>
2000a978:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:158
    }

    ulLockValue = *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4);
2000a97b:	0020c0        	memw
2000a97e:	cc2d52        	l32i	a5, a13, 0x330
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:187
{
    BOOL bSts = FALSE;
    do
    {
        bSts = HAL_MultiCoreGetSpinLock(ucLockId);
    }while (FALSE == bSts);
2000a981:	d89c57        	bne	a12, a5, 2000a95d <HAL_SEInit+0x39>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:97
    if (SE0 == ucSEID)
2000a984:	094e16        	beqz	a14, 2000aa1c <HAL_SEInit+0xf8>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:101
    {
        rGlbClkGating &= (~MSK_EN_SE0_CLK);
    }
    else if (SE1 == ucSEID)
2000a987:	721e26        	beqi	a14, 1, 2000a9fd <HAL_SEInit+0xd9>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:107
    {
        rGlbClkGating &= (~MSK_EN_SE1_CLK); 
    }
    else
    {
        rGlbClkGating &= (~MSK_EN_SE2_CLK); 
2000a98a:	d7c771        	l32r	a7, 200008a8 <_stext+0x1a8>
2000a98d:	0020c0        	memw
2000a990:	852d62        	l32i	a6, a13, 0x214
2000a993:	106670        	and	a6, a6, a7
2000a996:	0020c0        	memw
2000a999:	856d62        	s32i	a6, a13, 0x214
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
History:
    20140917    Tobey  uniform coding style
------------------------------------------------------------------------------*/
void MULTI_CORE_TEXT_ATTR HAL_MultiCoreReleaseSpinLock(U8 ucLockId)
{
    *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4) = 0;
2000a99c:	080c      	movi.n	a8, 0
2000a99e:	0020c0        	memw
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:264
#endif
    }

    HAL_SEClockDisable(l_ucSEID);

    l_pSETrigSizeReg = (volatile SE_TRIGGER_SIZE_REG *)&rSE_TRIGGER_SIZE_REG(l_ucSEID);
2000a9a1:	800fe2        	l8ui	a14, a15, 128
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
2000a9a4:	cc6d82        	s32i	a8, a13, 0x330
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:264
2000a9a7:	312e26        	beqi	a14, 2, 2000a9dc <HAL_SEInit+0xb8>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:268
    l_pSETypeReg = (volatile SE_TYPE_REG *)&rSE_TYPE_REG(l_ucSEID);
    l_pSEStatusReg = (volatile SE_STATUS_REG *)&rSE_STATUS_REG(l_ucSEID);

    return;
2000a9aa:	21d8      	l32i.n	a13, a1, 8
2000a9ac:	0108      	l32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:266

    HAL_SEClockDisable(l_ucSEID);

    l_pSETrigSizeReg = (volatile SE_TRIGGER_SIZE_REG *)&rSE_TRIGGER_SIZE_REG(l_ucSEID);
    l_pSETypeReg = (volatile SE_TYPE_REG *)&rSE_TYPE_REG(l_ucSEID);
    l_pSEStatusReg = (volatile SE_STATUS_REG *)&rSE_STATUS_REG(l_ucSEID);
2000a9ae:	d8bea1        	l32r	a10, 20000ca8 <_stext+0x5a8>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:265
    }

    HAL_SEClockDisable(l_ucSEID);

    l_pSETrigSizeReg = (volatile SE_TRIGGER_SIZE_REG *)&rSE_TRIGGER_SIZE_REG(l_ucSEID);
    l_pSETypeReg = (volatile SE_TYPE_REG *)&rSE_TYPE_REG(l_ucSEID);
2000a9b1:	d8bcb1        	l32r	a11, 20000ca4 <_stext+0x5a4>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:264
#endif
    }

    HAL_SEClockDisable(l_ucSEID);

    l_pSETrigSizeReg = (volatile SE_TRIGGER_SIZE_REG *)&rSE_TRIGGER_SIZE_REG(l_ucSEID);
2000a9b4:	119e80        	slli	a9, a14, 8
2000a9b7:	d8bac1        	l32r	a12, 20000ca0 <_stext+0x5a0>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:268
    l_pSETypeReg = (volatile SE_TYPE_REG *)&rSE_TYPE_REG(l_ucSEID);
    l_pSEStatusReg = (volatile SE_STATUS_REG *)&rSE_STATUS_REG(l_ucSEID);

    return;
2000a9ba:	31e8      	l32i.n	a14, a1, 12
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:264
#endif
    }

    HAL_SEClockDisable(l_ucSEID);

    l_pSETrigSizeReg = (volatile SE_TRIGGER_SIZE_REG *)&rSE_TRIGGER_SIZE_REG(l_ucSEID);
2000a9bc:	c9ca      	add.n	a12, a9, a12
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:265
    l_pSETypeReg = (volatile SE_TYPE_REG *)&rSE_TYPE_REG(l_ucSEID);
2000a9be:	b9ba      	add.n	a11, a9, a11
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:266
    l_pSEStatusReg = (volatile SE_STATUS_REG *)&rSE_STATUS_REG(l_ucSEID);
2000a9c0:	226fb2        	s32i	a11, a15, 136
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:264
#endif
    }

    HAL_SEClockDisable(l_ucSEID);

    l_pSETrigSizeReg = (volatile SE_TRIGGER_SIZE_REG *)&rSE_TRIGGER_SIZE_REG(l_ucSEID);
2000a9c3:	216fc2        	s32i	a12, a15, 132
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:266
    l_pSETypeReg = (volatile SE_TYPE_REG *)&rSE_TYPE_REG(l_ucSEID);
    l_pSEStatusReg = (volatile SE_STATUS_REG *)&rSE_STATUS_REG(l_ucSEID);
2000a9c6:	99aa      	add.n	a9, a9, a10
2000a9c8:	236f92        	s32i	a9, a15, 140
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:268

    return;
2000a9cb:	11c8      	l32i.n	a12, a1, 4
2000a9cd:	41f8      	l32i.n	a15, a1, 16
2000a9cf:	20c112        	addi	a1, a1, 32
2000a9d2:	f00d      	ret.n

2000a9d4 <HAL_SEInit+0xb0>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:252
    case MCU1_ID:
        l_ucSEID = SE1;
        break;

    case MCU2_ID:
        l_ucSEID = SE2;
2000a9d4:	2e0c      	movi.n	a14, 2
2000a9d6:	804fe2        	s8i	a14, a15, 128
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:253
        break;
2000a9d9:	ffdf46        	j	2000a95a <HAL_SEInit+0x36>

2000a9dc <HAL_SEInit+0xb8>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:268

    l_pSETrigSizeReg = (volatile SE_TRIGGER_SIZE_REG *)&rSE_TRIGGER_SIZE_REG(l_ucSEID);
    l_pSETypeReg = (volatile SE_TYPE_REG *)&rSE_TYPE_REG(l_ucSEID);
    l_pSEStatusReg = (volatile SE_STATUS_REG *)&rSE_STATUS_REG(l_ucSEID);

    return;
2000a9dc:	11c8      	l32i.n	a12, a1, 4
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:266

    HAL_SEClockDisable(l_ucSEID);

    l_pSETrigSizeReg = (volatile SE_TRIGGER_SIZE_REG *)&rSE_TRIGGER_SIZE_REG(l_ucSEID);
    l_pSETypeReg = (volatile SE_TYPE_REG *)&rSE_TYPE_REG(l_ucSEID);
    l_pSEStatusReg = (volatile SE_STATUS_REG *)&rSE_STATUS_REG(l_ucSEID);
2000a9de:	d8b5d1        	l32r	a13, 20000cb4 <_stext+0x5b4>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:265
    }

    HAL_SEClockDisable(l_ucSEID);

    l_pSETrigSizeReg = (volatile SE_TRIGGER_SIZE_REG *)&rSE_TRIGGER_SIZE_REG(l_ucSEID);
    l_pSETypeReg = (volatile SE_TYPE_REG *)&rSE_TYPE_REG(l_ucSEID);
2000a9e1:	d8b201        	l32r	a0, 20000cac <_stext+0x5ac>
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:266
    l_pSEStatusReg = (volatile SE_STATUS_REG *)&rSE_STATUS_REG(l_ucSEID);
2000a9e4:	d8b3e1        	l32r	a14, 20000cb0 <_stext+0x5b0>
2000a9e7:	226fe2        	s32i	a14, a15, 136
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:265
    }

    HAL_SEClockDisable(l_ucSEID);

    l_pSETrigSizeReg = (volatile SE_TRIGGER_SIZE_REG *)&rSE_TRIGGER_SIZE_REG(l_ucSEID);
    l_pSETypeReg = (volatile SE_TYPE_REG *)&rSE_TYPE_REG(l_ucSEID);
2000a9ea:	216f02        	s32i	a0, a15, 132
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:266
    l_pSEStatusReg = (volatile SE_STATUS_REG *)&rSE_STATUS_REG(l_ucSEID);
2000a9ed:	236fd2        	s32i	a13, a15, 140
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:268

    return;
2000a9f0:	0108      	l32i.n	a0, a1, 0
2000a9f2:	21d8      	l32i.n	a13, a1, 8
2000a9f4:	31e8      	l32i.n	a14, a1, 12
2000a9f6:	41f8      	l32i.n	a15, a1, 16
2000a9f8:	20c112        	addi	a1, a1, 32
2000a9fb:	f00d      	ret.n

2000a9fd <HAL_SEInit+0xd9>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:103
    {
        rGlbClkGating &= (~MSK_EN_SE0_CLK);
    }
    else if (SE1 == ucSEID)
    {
        rGlbClkGating &= (~MSK_EN_SE1_CLK); 
2000a9fd:	d7b531        	l32r	a3, 200008d4 <_stext+0x1d4>
2000aa00:	0020c0        	memw
2000aa03:	852d22        	l32i	a2, a13, 0x214
2000aa06:	102230        	and	a2, a2, a3
2000aa09:	0020c0        	memw
2000aa0c:	856d22        	s32i	a2, a13, 0x214
2000aa0f:	ffe246        	j	2000a99c <HAL_SEInit+0x78>

2000aa12 <HAL_SEInit+0xee>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:244
        DBG_Printf("HAL_SEInit: MCU ID error %d\n", ucMCUID);
        DBG_Getch();
        break;
#else
    case MCU0_ID:
        l_ucSEID = SE0;
2000aa12:	0e0c      	movi.n	a14, 0
2000aa14:	804fe2        	s8i	a14, a15, 128
2000aa17:	ffcfc6        	j	2000a95a <HAL_SEInit+0x36>

2000aa1a <HAL_SEInit+0xf6>:
	...

2000aa1c <HAL_SEInit+0xf8>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:99
void HAL_SEClockDisable(U8 ucSEID)
{
    HAL_MultiCoreGetSpinLockWait(SPINLOCKID_CLKGATING);
    if (SE0 == ucSEID)
    {
        rGlbClkGating &= (~MSK_EN_SE0_CLK);
2000aa1c:	d74a51        	l32r	a5, 20000744 <_stext+0x44>
2000aa1f:	0020c0        	memw
2000aa22:	852d42        	l32i	a4, a13, 0x214
2000aa25:	104450        	and	a4, a4, a5
2000aa28:	0020c0        	memw
2000aa2b:	856d42        	s32i	a4, a13, 0x214
2000aa2e:	ffda86        	j	2000a99c <HAL_SEInit+0x78>

2000aa31 <HAL_SEInit+0x10d>:
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:248
    case MCU0_ID:
        l_ucSEID = SE0;
        break;

    case MCU1_ID:
        l_ucSEID = SE1;
2000aa31:	1e0c      	movi.n	a14, 1
2000aa33:	804fe2        	s8i	a14, a15, 128
D:\IM_3D_TLC\firmware\HAL\SE/HAL_SearchEngine.c:249
        break;
2000aa36:	ffc806        	j	2000a95a <HAL_SEInit+0x36>

2000aa39 <HAL_SEInit+0x115>:
2000aa39:	000000                                        ...

2000aa3c <HAL_DMAEInit>:
HAL_DMAEInit():
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:173
History:
20140912    Kristin    Coding style uniform
------------------------------------------------------------------------------*/
void DMAE_TEXT_ATTR HAL_DMAEInit(void)
{
    rDMAE_REQ_PRIORITY &=  (~MASK_DMAE_REQ_PRIORITY);
2000aa3c:	c57c      	movi.n	a5, -4
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:172
    HW initialize  
History:
20140912    Kristin    Coding style uniform
------------------------------------------------------------------------------*/
void DMAE_TEXT_ATTR HAL_DMAEInit(void)
{
2000aa3e:	d89e31        	l32r	a3, 20000cb8 <_stext+0x5b8>
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:173
    rDMAE_REQ_PRIORITY &=  (~MASK_DMAE_REQ_PRIORITY);
2000aa41:	0020c0        	memw
2000aa44:	c02342        	l32i	a4, a3, 0x300
2000aa47:	104450        	and	a4, a4, a5
2000aa4a:	0020c0        	memw
2000aa4d:	c06342        	s32i	a4, a3, 0x300
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:174
    rDMAE_REQ_PRIORITY |= DMAE_REQ_PRIORITY_LOW;
2000aa50:	0020c0        	memw
2000aa53:	c02322        	l32i	a2, a3, 0x300
2000aa56:	0020c0        	memw
2000aa59:	c06322        	s32i	a2, a3, 0x300
D:\IM_3D_TLC\firmware\HAL\DMAE/HAL_Dmae.c:176

    return;
2000aa5c:	f00d      	ret.n

2000aa5e <HAL_DMAEInit+0x22>:
	...

2000aa60 <HAL_InitGlobalPUNum>:
HAL_InitGlobalPUNum():
D:\IM_3D_TLC\firmware\HAL\ParamTable/HAL_ParamTable.c:132
    PTABLE * pPTable;
    BOOTLOADER_FILE * pBootLoaderFile;

    pBootLoaderFile = HalGetBootLoaderFileBase();
    pPTable = &pBootLoaderFile->tSysParameterTable;
    g_ulPuNum = pPTable->ulSubSysCeNum;
2000aa60:	d88a21        	l32r	a2, 20000c88 <_stext+0x588>
2000aa63:	d72e31        	l32r	a3, 2000071c <_stext+0x1c>
2000aa66:	262222        	l32i	a2, a2, 152
2000aa69:	e329      	s32i.n	a2, a3, 56
D:\IM_3D_TLC\firmware\HAL\ParamTable/HAL_ParamTable.c:134

    return;
2000aa6b:	f00d      	ret.n

2000aa6d <HAL_InitGlobalPUNum+0xd>:
2000aa6d:	000000                                        ...

2000aa70 <L2_SearchEngineSWInit>:
L2_SearchEngineSWInit():
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:91
 *****************************************************************************/
void L2_SearchEngineSWInit(void)
{
    U32 ulSearchCase;

    for (ulSearchCase = 0; ulSearchCase < SEARCH_CASE_MAX; ulSearchCase++)
2000aa70:	d861a1        	l32r	a10, 20000bf4 <_stext+0x4f4>
2000aa73:	d89291        	l32r	a9, 20000cbc <_stext+0x5bc>
2000aa76:	d89281        	l32r	a8, 20000cc0 <_stext+0x5c0>
2000aa79:	020c      	movi.n	a2, 0
2000aa7b:	d75771        	l32r	a7, 200007d8 <_stext+0xd8>
2000aa7e:	d77461        	l32r	a6, 20000850 <_stext+0x150>
2000aa81:	d891b1        	l32r	a11, 20000cc8 <_stext+0x5c8>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:88
 Modification : Created function
 2016/05/26  Kristin modify

 *****************************************************************************/
void L2_SearchEngineSWInit(void)
{
2000aa84:	d0c112        	addi	a1, a1, -48
2000aa87:	3109      	s32i.n	a0, a1, 12
2000aa89:	41c9      	s32i.n	a12, a1, 16
2000aa8b:	61e9      	s32i.n	a14, a1, 24
2000aa8d:	71f9      	s32i.n	a15, a1, 28
2000aa8f:	51d9      	s32i.n	a13, a1, 20
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:91
    U32 ulSearchCase;

    for (ulSearchCase = 0; ulSearchCase < SEARCH_CASE_MAX; ulSearchCase++)
2000aa91:	ffa8f2        	movi	a15, 0xfffff8ff
2000aa94:	d88cd1        	l32r	a13, 20000cc4 <_stext+0x5c4>
2000aa97:	24a2e2        	movi	a14, 0x224
2000aa9a:	01b9      	s32i.n	a11, a1, 0
2000aa9c:	d88cc1        	l32r	a12, 20000ccc <_stext+0x5cc>
2000aa9f:	c4cb52        	addi	a5, a11, -60
2000aaa2:	88cb42        	addi	a4, a11, -120
2000aaa5:	2149      	s32i.n	a4, a1, 8
2000aaa7:	1159      	s32i.n	a5, a1, 4
2000aaa9:	78cc32        	addi	a3, a12, 120
2000aaac:	3ccc02        	addi	a0, a12, 60
2000aaaf:	9109      	s32i.n	a0, a1, 36
2000aab1:	3ccbb2        	addi	a11, a11, 60
2000aab4:	8139      	s32i.n	a3, a1, 32
2000aab6:	0c5d      	mov.n	a5, a12
2000aab8:	330c      	movi.n	a3, 3
2000aaba:	000d86        	j	2000aaf4 <L2_SearchEngineSWInit+0x84>

2000aabd <L2_SearchEngineSWInit+0x4d>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:100

        /* set parameters for the search case */
        switch (ulSearchCase)
        {
        case FREE_ERASE_CNT_MAX:
            g_SearchEngineParam[FREE_ERASE_CNT_MAX].ulItemCnt = (BLK_PER_PLN + RSV_BLK_PER_PLN);
2000aabd:	d88431        	l32r	a3, 20000cd0 <_stext+0x5d0>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:107
            g_SearchEngineParam[FREE_ERASE_CNT_MAX].ulFieldMaskLow = 0xFFFF0000;
            g_SearchEngineParam[FREE_ERASE_CNT_MAX].ulFieldMaskHigh = 0x0;         //EraseCnt MSK
            g_SearchEngineParam[FREE_ERASE_CNT_MAX].ulXorFieldMaskLow = 0x0;
            g_SearchEngineParam[FREE_ERASE_CNT_MAX].ulXorFieldMaskHigh = 0x180B;   //bFree,bError,bBackup,bLock,bTLC 
            g_SearchEngineParam[FREE_ERASE_CNT_MAX].ulXorValueMaskLow = 0x0;
            g_SearchEngineParam[FREE_ERASE_CNT_MAX].ulXorValueMaskHigh = 0x1;      //bFree=TRUE
2000aac0:	140c      	movi.n	a4, 1
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:100

        /* set parameters for the search case */
        switch (ulSearchCase)
        {
        case FREE_ERASE_CNT_MAX:
            g_SearchEngineParam[FREE_ERASE_CNT_MAX].ulItemCnt = (BLK_PER_PLN + RSV_BLK_PER_PLN);
2000aac2:	33e9      	s32i.n	a14, a3, 12
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:102

            g_SearchEngineParam[FREE_ERASE_CNT_MAX].ulFieldMaskLow = 0xFFFF0000;
2000aac4:	83a9      	s32i.n	a10, a3, 32
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:103
            g_SearchEngineParam[FREE_ERASE_CNT_MAX].ulFieldMaskHigh = 0x0;         //EraseCnt MSK
2000aac6:	9329      	s32i.n	a2, a3, 36
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:104
            g_SearchEngineParam[FREE_ERASE_CNT_MAX].ulXorFieldMaskLow = 0x0;
2000aac8:	a329      	s32i.n	a2, a3, 40
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:105
            g_SearchEngineParam[FREE_ERASE_CNT_MAX].ulXorFieldMaskHigh = 0x180B;   //bFree,bError,bBackup,bLock,bTLC 
2000aaca:	b3d9      	s32i.n	a13, a3, 44
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:106
            g_SearchEngineParam[FREE_ERASE_CNT_MAX].ulXorValueMaskLow = 0x0;
2000aacc:	c329      	s32i.n	a2, a3, 48
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:109
            g_SearchEngineParam[FREE_ERASE_CNT_MAX].ulXorValueMaskHigh = 0x1;      //bFree=TRUE

            g_SearchEngineParam[FREE_ERASE_CNT_MAX].ucPitchQW = 0;
2000aace:	404322        	s8i	a2, a3, 64
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:110
            g_SearchEngineParam[FREE_ERASE_CNT_MAX].bsSearchType = SEARCH_TYPE_MAX;
2000aad1:	102302        	l32i	a0, a3, 64
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:107
            g_SearchEngineParam[FREE_ERASE_CNT_MAX].ulFieldMaskLow = 0xFFFF0000;
            g_SearchEngineParam[FREE_ERASE_CNT_MAX].ulFieldMaskHigh = 0x0;         //EraseCnt MSK
            g_SearchEngineParam[FREE_ERASE_CNT_MAX].ulXorFieldMaskLow = 0x0;
            g_SearchEngineParam[FREE_ERASE_CNT_MAX].ulXorFieldMaskHigh = 0x180B;   //bFree,bError,bBackup,bLock,bTLC 
            g_SearchEngineParam[FREE_ERASE_CNT_MAX].ulXorValueMaskLow = 0x0;
            g_SearchEngineParam[FREE_ERASE_CNT_MAX].ulXorValueMaskHigh = 0x1;      //bFree=TRUE
2000aad4:	0d6342        	s32i	a4, a3, 52
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:110

            g_SearchEngineParam[FREE_ERASE_CNT_MAX].ucPitchQW = 0;
            g_SearchEngineParam[FREE_ERASE_CNT_MAX].bsSearchType = SEARCH_TYPE_MAX;
2000aad7:	1000f0        	and	a0, a0, a15
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:111
            g_SearchEngineParam[FREE_ERASE_CNT_MAX].bsCondType = 0;
2000aada:	100070        	and	a0, a0, a7
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:112
            g_SearchEngineParam[FREE_ERASE_CNT_MAX].bsItemSizeDW = FALSE; //item size is QWORD
2000aadd:	100060        	and	a0, a0, a6
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:113
            g_SearchEngineParam[FREE_ERASE_CNT_MAX].bsXorEn = TRUE;
2000aae0:	200080        	or	a0, a0, a8
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:114
            g_SearchEngineParam[FREE_ERASE_CNT_MAX].bsOTFB = FALSE;
2000aae3:	100090        	and	a0, a0, a9
2000aae6:	106302        	s32i	a0, a3, 64
2000aae9:	330c      	movi.n	a3, 3
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:91
 *****************************************************************************/
void L2_SearchEngineSWInit(void)
{
    U32 ulSearchCase;

    for (ulSearchCase = 0; ulSearchCase < SEARCH_CASE_MAX; ulSearchCase++)
2000aaeb:	3cc552        	addi	a5, a5, 60
2000aaee:	c005b0        	sub	a0, a5, a11
2000aaf1:	0b7016        	beqz	a0, 2000abac <L2_SearchEngineSWInit+0x13c>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:94
    {
        /* clear structure */
        COM_MemZero((U32*)&g_SearchEngineParam[ulSearchCase], sizeof(SE_SEARCH_VALUE_PARAM) / 4);
2000aaf4:	050d      	mov.n	a0, a5
2000aaf6:	03a376        	loopgtz	a3, 2000aafd <L2_SearchEngineSWInit+0x8d>
D:\IM_3D_TLC\firmware\COM/COM_Memory.c:65
2000aaf9:	0029      	s32i.n	a2, a0, 0
2000aafb:	004b      	addi.n	a0, a0, 4

2000aafd <L2_SearchEngineSWInit+0x8d>:
2000aafd:	330c      	movi.n	a3, 3
2000aaff:	0aa376        	loopgtz	a3, 2000ab0d <L2_SearchEngineSWInit+0x9d>
2000ab02:	0029      	s32i.n	a2, a0, 0
2000ab04:	1029      	s32i.n	a2, a0, 4
2000ab06:	2029      	s32i.n	a2, a0, 8
2000ab08:	3029      	s32i.n	a2, a0, 12
2000ab0a:	10c002        	addi	a0, a0, 16
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:97

        /* set parameters for the search case */
        switch (ulSearchCase)
2000ab0d:	ac15c7        	beq	a5, a12, 2000aabd <L2_SearchEngineSWInit+0x4d>
2000ab10:	9148      	l32i.n	a4, a1, 36
2000ab12:	8108      	l32i.n	a0, a1, 32
2000ab14:	591547        	beq	a5, a4, 2000ab71 <L2_SearchEngineSWInit+0x101>
2000ab17:	029507        	bne	a5, a0, 2000ab1d <L2_SearchEngineSWInit+0xad>
2000ab1a:	002786        	j	2000abbc <L2_SearchEngineSWInit+0x14c>
2000ab1d:	2138      	l32i.n	a3, a1, 8
2000ab1f:	1148      	l32i.n	a4, a1, 4
2000ab21:	c03530        	sub	a3, a5, a3
2000ab24:	0c9316        	beqz	a3, 2000abf1 <L2_SearchEngineSWInit+0x181>
2000ab27:	c04540        	sub	a4, a5, a4
2000ab2a:	0fe416        	beqz	a4, 2000ac2c <L2_SearchEngineSWInit+0x1bc>
2000ab2d:	0108      	l32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:195
            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].bsOTFB = FALSE;

            break;

        case BROKEN_ERASE_CNT_MIN:
            g_SearchEngineParam[BACKUP_ERASE_CNT_MIN].ulItemCnt = (BLK_PER_PLN + RSV_BLK_PER_PLN);
2000ab2f:	d86941        	l32r	a4, 20000cd4 <_stext+0x5d4>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:97
    {
        /* clear structure */
        COM_MemZero((U32*)&g_SearchEngineParam[ulSearchCase], sizeof(SE_SEARCH_VALUE_PARAM) / 4);

        /* set parameters for the search case */
        switch (ulSearchCase)
2000ab32:	b39507        	bne	a5, a0, 2000aae9 <L2_SearchEngineSWInit+0x79>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:195
            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].bsOTFB = FALSE;

            break;

        case BROKEN_ERASE_CNT_MIN:
            g_SearchEngineParam[BACKUP_ERASE_CNT_MIN].ulItemCnt = (BLK_PER_PLN + RSV_BLK_PER_PLN);
2000ab35:	1264e2        	s32i	a14, a4, 72
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:197

            g_SearchEngineParam[BROKEN_ERASE_CNT_MIN].ulFieldMaskLow = 0xFFFF0000;
2000ab38:	3564a2        	s32i	a10, a4, 212
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:198
            g_SearchEngineParam[BROKEN_ERASE_CNT_MIN].ulFieldMaskHigh = 0x0;         //EraseCnt MSK
2000ab3b:	366422        	s32i	a2, a4, 216
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:199
            g_SearchEngineParam[BROKEN_ERASE_CNT_MIN].ulXorFieldMaskLow = 0x0;
2000ab3e:	376422        	s32i	a2, a4, 220
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:201
            g_SearchEngineParam[BROKEN_ERASE_CNT_MIN].ulXorFieldMaskHigh = 0x3003;   //bFree,bError,bTLC,bBroken
            g_SearchEngineParam[BROKEN_ERASE_CNT_MIN].ulXorValueMaskLow = 0x0;
2000ab41:	396422        	s32i	a2, a4, 228
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:204
            g_SearchEngineParam[BROKEN_ERASE_CNT_MIN].ulXorValueMaskHigh = 0x2001;   //bFree=TRUE,bBroken=TRUE

            g_SearchEngineParam[BROKEN_ERASE_CNT_MIN].ucPitchQW = 0;
2000ab44:	f44422        	s8i	a2, a4, 244
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:202
            g_SearchEngineParam[BROKEN_ERASE_CNT_MIN].ulFieldMaskLow = 0xFFFF0000;
            g_SearchEngineParam[BROKEN_ERASE_CNT_MIN].ulFieldMaskHigh = 0x0;         //EraseCnt MSK
            g_SearchEngineParam[BROKEN_ERASE_CNT_MIN].ulXorFieldMaskLow = 0x0;
            g_SearchEngineParam[BROKEN_ERASE_CNT_MIN].ulXorFieldMaskHigh = 0x3003;   //bFree,bError,bTLC,bBroken
            g_SearchEngineParam[BROKEN_ERASE_CNT_MIN].ulXorValueMaskLow = 0x0;
            g_SearchEngineParam[BROKEN_ERASE_CNT_MIN].ulXorValueMaskHigh = 0x2001;   //bFree=TRUE,bBroken=TRUE
2000ab47:	d86501        	l32r	a0, 20000cdc <_stext+0x5dc>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:200
            g_SearchEngineParam[BACKUP_ERASE_CNT_MIN].ulItemCnt = (BLK_PER_PLN + RSV_BLK_PER_PLN);

            g_SearchEngineParam[BROKEN_ERASE_CNT_MIN].ulFieldMaskLow = 0xFFFF0000;
            g_SearchEngineParam[BROKEN_ERASE_CNT_MIN].ulFieldMaskHigh = 0x0;         //EraseCnt MSK
            g_SearchEngineParam[BROKEN_ERASE_CNT_MIN].ulXorFieldMaskLow = 0x0;
            g_SearchEngineParam[BROKEN_ERASE_CNT_MIN].ulXorFieldMaskHigh = 0x3003;   //bFree,bError,bTLC,bBroken
2000ab4a:	d86331        	l32r	a3, 20000cd8 <_stext+0x5d8>
2000ab4d:	386432        	s32i	a3, a4, 224
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:202
            g_SearchEngineParam[BROKEN_ERASE_CNT_MIN].ulXorValueMaskLow = 0x0;
            g_SearchEngineParam[BROKEN_ERASE_CNT_MIN].ulXorValueMaskHigh = 0x2001;   //bFree=TRUE,bBroken=TRUE
2000ab50:	3a6402        	s32i	a0, a4, 232
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:205

            g_SearchEngineParam[BROKEN_ERASE_CNT_MIN].ucPitchQW = 0;
            g_SearchEngineParam[BROKEN_ERASE_CNT_MIN].bsSearchType = SEARCH_TYPE_MIN;
2000ab53:	3d2432        	l32i	a3, a4, 244
2000ab56:	00a102        	movi	a0, 0x100
2000ab59:	1033f0        	and	a3, a3, a15
2000ab5c:	203300        	or	a3, a3, a0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:206
            g_SearchEngineParam[BROKEN_ERASE_CNT_MIN].bsCondType = 0;
2000ab5f:	103370        	and	a3, a3, a7
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:207
            g_SearchEngineParam[BROKEN_ERASE_CNT_MIN].bsItemSizeDW = FALSE; ////item size is QWORD
2000ab62:	103360        	and	a3, a3, a6
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:208
            g_SearchEngineParam[BROKEN_ERASE_CNT_MIN].bsXorEn = TRUE;
2000ab65:	203380        	or	a3, a3, a8
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:209
            g_SearchEngineParam[BROKEN_ERASE_CNT_MIN].bsOTFB = FALSE;
2000ab68:	103390        	and	a3, a3, a9
2000ab6b:	3d6432        	s32i	a3, a4, 244
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:211

            break;
2000ab6e:	ffddc6        	j	2000aae9 <L2_SearchEngineSWInit+0x79>

2000ab71 <L2_SearchEngineSWInit+0x101>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:119
            g_SearchEngineParam[FREE_ERASE_CNT_MAX].bsOTFB = FALSE;

            break;

        case FREE_ERASE_CNT_MIN:
            g_SearchEngineParam[FREE_ERASE_CNT_MIN].ulItemCnt = (BLK_PER_PLN + RSV_BLK_PER_PLN);
2000ab71:	d85701        	l32r	a0, 20000cd0 <_stext+0x5d0>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:126
            g_SearchEngineParam[FREE_ERASE_CNT_MIN].ulFieldMaskLow = 0xFFFF0000;
            g_SearchEngineParam[FREE_ERASE_CNT_MIN].ulFieldMaskHigh = 0x0;         //EraseCnt MSK
            g_SearchEngineParam[FREE_ERASE_CNT_MIN].ulXorFieldMaskLow = 0x0;
            g_SearchEngineParam[FREE_ERASE_CNT_MIN].ulXorFieldMaskHigh = 0x180B;   //bFree,bError,bBackup,bLock,bTLC 
            g_SearchEngineParam[FREE_ERASE_CNT_MIN].ulXorValueMaskLow = 0x0;
            g_SearchEngineParam[FREE_ERASE_CNT_MIN].ulXorValueMaskHigh = 0x1;      //bFree=TRUE
2000ab74:	130c      	movi.n	a3, 1
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:119
            g_SearchEngineParam[FREE_ERASE_CNT_MAX].bsOTFB = FALSE;

            break;

        case FREE_ERASE_CNT_MIN:
            g_SearchEngineParam[FREE_ERASE_CNT_MIN].ulItemCnt = (BLK_PER_PLN + RSV_BLK_PER_PLN);
2000ab76:	1260e2        	s32i	a14, a0, 72
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:121

            g_SearchEngineParam[FREE_ERASE_CNT_MIN].ulFieldMaskLow = 0xFFFF0000;
2000ab79:	1760a2        	s32i	a10, a0, 92
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:122
            g_SearchEngineParam[FREE_ERASE_CNT_MIN].ulFieldMaskHigh = 0x0;         //EraseCnt MSK
2000ab7c:	186022        	s32i	a2, a0, 96
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:123
            g_SearchEngineParam[FREE_ERASE_CNT_MIN].ulXorFieldMaskLow = 0x0;
2000ab7f:	196022        	s32i	a2, a0, 100
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:124
            g_SearchEngineParam[FREE_ERASE_CNT_MIN].ulXorFieldMaskHigh = 0x180B;   //bFree,bError,bBackup,bLock,bTLC 
2000ab82:	1a60d2        	s32i	a13, a0, 104
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:125
            g_SearchEngineParam[FREE_ERASE_CNT_MIN].ulXorValueMaskLow = 0x0;
2000ab85:	1b6022        	s32i	a2, a0, 108
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:126
            g_SearchEngineParam[FREE_ERASE_CNT_MIN].ulXorValueMaskHigh = 0x1;      //bFree=TRUE
2000ab88:	1c6032        	s32i	a3, a0, 112
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:128

            g_SearchEngineParam[FREE_ERASE_CNT_MIN].ucPitchQW = 0;
2000ab8b:	7c4022        	s8i	a2, a0, 124
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:129
            g_SearchEngineParam[FREE_ERASE_CNT_MIN].bsSearchType = SEARCH_TYPE_MIN;
2000ab8e:	1f2042        	l32i	a4, a0, 124
2000ab91:	00a132        	movi	a3, 0x100
2000ab94:	1044f0        	and	a4, a4, a15
2000ab97:	204430        	or	a4, a4, a3
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:130
            g_SearchEngineParam[FREE_ERASE_CNT_MIN].bsCondType = 0;
2000ab9a:	104470        	and	a4, a4, a7
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:131
            g_SearchEngineParam[FREE_ERASE_CNT_MIN].bsItemSizeDW = FALSE; //item size is QWORD
2000ab9d:	104460        	and	a4, a4, a6
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:132
            g_SearchEngineParam[FREE_ERASE_CNT_MIN].bsXorEn = TRUE;
2000aba0:	204480        	or	a4, a4, a8
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:133
            g_SearchEngineParam[FREE_ERASE_CNT_MIN].bsOTFB = FALSE;
2000aba3:	104490        	and	a4, a4, a9
2000aba6:	1f6042        	s32i	a4, a0, 124
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:135

            break;
2000aba9:	ffcf06        	j	2000aae9 <L2_SearchEngineSWInit+0x79>

2000abac <L2_SearchEngineSWInit+0x13c>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:218
        default:

            break;
        }
    }
}
2000abac:	41c8      	l32i.n	a12, a1, 16
2000abae:	51d8      	l32i.n	a13, a1, 20
2000abb0:	61e8      	l32i.n	a14, a1, 24
2000abb2:	71f8      	l32i.n	a15, a1, 28
2000abb4:	3108      	l32i.n	a0, a1, 12
2000abb6:	30c112        	addi	a1, a1, 48
2000abb9:	f00d      	ret.n

2000abbb <L2_SearchEngineSWInit+0x14b>:
	...

2000abbc <L2_SearchEngineSWInit+0x14c>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:138
            g_SearchEngineParam[FREE_ERASE_CNT_MIN].bsOTFB = FALSE;

            break;

        case BACKUP_ERASE_CNT_MAX:
            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].ulItemCnt = (BLK_PER_PLN + RSV_BLK_PER_PLN);
2000abbc:	d84501        	l32r	a0, 20000cd0 <_stext+0x5d0>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:143

            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].ulFieldMaskLow = 0xFFFF0000;
            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].ulFieldMaskHigh = 0x0;         //EraseCnt MSK
            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].ulXorFieldMaskLow = 0x0;
            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].ulXorFieldMaskHigh = 0x9;      //bBackup, bFree
2000abbf:	930c      	movi.n	a3, 9
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:138
            g_SearchEngineParam[FREE_ERASE_CNT_MIN].bsOTFB = FALSE;

            break;

        case BACKUP_ERASE_CNT_MAX:
            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].ulItemCnt = (BLK_PER_PLN + RSV_BLK_PER_PLN);
2000abc1:	2160e2        	s32i	a14, a0, 132
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:140

            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].ulFieldMaskLow = 0xFFFF0000;
2000abc4:	2660a2        	s32i	a10, a0, 152
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:141
            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].ulFieldMaskHigh = 0x0;         //EraseCnt MSK
2000abc7:	276022        	s32i	a2, a0, 156
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:142
            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].ulXorFieldMaskLow = 0x0;
2000abca:	286022        	s32i	a2, a0, 160
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:143
            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].ulXorFieldMaskHigh = 0x9;      //bBackup, bFree
2000abcd:	296032        	s32i	a3, a0, 164
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:144
            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].ulXorValueMaskLow = 0x0;
2000abd0:	2a6022        	s32i	a2, a0, 168
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:147
            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].ulXorValueMaskHigh = 0x9;      //bFree=TRUE,bBackup=TRUE

            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].ucPitchQW = 0;
2000abd3:	b84022        	s8i	a2, a0, 184
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:148
            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].bsSearchType = SEARCH_TYPE_MAX;
2000abd6:	2e2042        	l32i	a4, a0, 184
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:145
            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].ulFieldMaskLow = 0xFFFF0000;
            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].ulFieldMaskHigh = 0x0;         //EraseCnt MSK
            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].ulXorFieldMaskLow = 0x0;
            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].ulXorFieldMaskHigh = 0x9;      //bBackup, bFree
            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].ulXorValueMaskLow = 0x0;
            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].ulXorValueMaskHigh = 0x9;      //bFree=TRUE,bBackup=TRUE
2000abd9:	2b6032        	s32i	a3, a0, 172
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:148

            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].ucPitchQW = 0;
            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].bsSearchType = SEARCH_TYPE_MAX;
2000abdc:	1044f0        	and	a4, a4, a15
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:149
            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].bsCondType = 0;
2000abdf:	104470        	and	a4, a4, a7
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:150
            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].bsItemSizeDW = FALSE; ////item size is QWORD
2000abe2:	104460        	and	a4, a4, a6
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:151
            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].bsXorEn = TRUE;
2000abe5:	204480        	or	a4, a4, a8
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:152
            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].bsOTFB = FALSE;
2000abe8:	104490        	and	a4, a4, a9
2000abeb:	2e6042        	s32i	a4, a0, 184
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:154

            break;
2000abee:	ffbdc6        	j	2000aae9 <L2_SearchEngineSWInit+0x79>

2000abf1 <L2_SearchEngineSWInit+0x181>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:157

        case BACKUP_ERASE_CNT_MIN:
            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].ulItemCnt = (BLK_PER_PLN + RSV_BLK_PER_PLN);
2000abf1:	d83701        	l32r	a0, 20000cd0 <_stext+0x5d0>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:162

            g_SearchEngineParam[BACKUP_ERASE_CNT_MIN].ulFieldMaskLow = 0xFFFF0000;
            g_SearchEngineParam[BACKUP_ERASE_CNT_MIN].ulFieldMaskHigh = 0x0;         //EraseCnt MSK
            g_SearchEngineParam[BACKUP_ERASE_CNT_MIN].ulXorFieldMaskLow = 0x0;
            g_SearchEngineParam[BACKUP_ERASE_CNT_MIN].ulXorFieldMaskHigh = 0x9;      //bBackup, bFree
2000abf4:	930c      	movi.n	a3, 9
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:157
            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].bsOTFB = FALSE;

            break;

        case BACKUP_ERASE_CNT_MIN:
            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].ulItemCnt = (BLK_PER_PLN + RSV_BLK_PER_PLN);
2000abf6:	2160e2        	s32i	a14, a0, 132
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:159

            g_SearchEngineParam[BACKUP_ERASE_CNT_MIN].ulFieldMaskLow = 0xFFFF0000;
2000abf9:	3560a2        	s32i	a10, a0, 212
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:160
            g_SearchEngineParam[BACKUP_ERASE_CNT_MIN].ulFieldMaskHigh = 0x0;         //EraseCnt MSK
2000abfc:	366022        	s32i	a2, a0, 216
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:161
            g_SearchEngineParam[BACKUP_ERASE_CNT_MIN].ulXorFieldMaskLow = 0x0;
2000abff:	376022        	s32i	a2, a0, 220
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:163
            g_SearchEngineParam[BACKUP_ERASE_CNT_MIN].ulXorFieldMaskHigh = 0x9;      //bBackup, bFree
            g_SearchEngineParam[BACKUP_ERASE_CNT_MIN].ulXorValueMaskLow = 0x0;
2000ac02:	396022        	s32i	a2, a0, 228
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:162
            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].ulItemCnt = (BLK_PER_PLN + RSV_BLK_PER_PLN);

            g_SearchEngineParam[BACKUP_ERASE_CNT_MIN].ulFieldMaskLow = 0xFFFF0000;
            g_SearchEngineParam[BACKUP_ERASE_CNT_MIN].ulFieldMaskHigh = 0x0;         //EraseCnt MSK
            g_SearchEngineParam[BACKUP_ERASE_CNT_MIN].ulXorFieldMaskLow = 0x0;
            g_SearchEngineParam[BACKUP_ERASE_CNT_MIN].ulXorFieldMaskHigh = 0x9;      //bBackup, bFree
2000ac05:	386032        	s32i	a3, a0, 224
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:164
            g_SearchEngineParam[BACKUP_ERASE_CNT_MIN].ulXorValueMaskLow = 0x0;
            g_SearchEngineParam[BACKUP_ERASE_CNT_MIN].ulXorValueMaskHigh = 0x9;      //bFree=TRUE,bBackup=TRUE
2000ac08:	3a6032        	s32i	a3, a0, 232
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:166

            g_SearchEngineParam[BACKUP_ERASE_CNT_MIN].ucPitchQW = 0;
2000ac0b:	f44022        	s8i	a2, a0, 244
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:167
            g_SearchEngineParam[BACKUP_ERASE_CNT_MIN].bsSearchType = SEARCH_TYPE_MIN;
2000ac0e:	3d2042        	l32i	a4, a0, 244
2000ac11:	00a132        	movi	a3, 0x100
2000ac14:	1044f0        	and	a4, a4, a15
2000ac17:	204430        	or	a4, a4, a3
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:168
            g_SearchEngineParam[BACKUP_ERASE_CNT_MIN].bsCondType = 0;
2000ac1a:	104470        	and	a4, a4, a7
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:169
            g_SearchEngineParam[BACKUP_ERASE_CNT_MIN].bsItemSizeDW = FALSE; ////item size is QWORD
2000ac1d:	104460        	and	a4, a4, a6
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:170
            g_SearchEngineParam[BACKUP_ERASE_CNT_MIN].bsXorEn = TRUE;
2000ac20:	204480        	or	a4, a4, a8
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:171
            g_SearchEngineParam[BACKUP_ERASE_CNT_MIN].bsOTFB = FALSE;
2000ac23:	104490        	and	a4, a4, a9
2000ac26:	3d6042        	s32i	a4, a0, 244
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:173

            break;
2000ac29:	ffaf06        	j	2000aae9 <L2_SearchEngineSWInit+0x79>

2000ac2c <L2_SearchEngineSWInit+0x1bc>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:176

        case BROKEN_ERASE_CNT_MAX:
            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].ulItemCnt = (BLK_PER_PLN + RSV_BLK_PER_PLN);
2000ac2c:	d82a01        	l32r	a0, 20000cd4 <_stext+0x5d4>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:181

            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].ulFieldMaskLow = 0xFFFF0000;
            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].ulFieldMaskHigh = 0x0;         //EraseCnt MSK
            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].ulXorFieldMaskLow = 0x0;
            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].ulXorFieldMaskHigh = 0x3003;   //bFree,bError,bTLC,bBroken
2000ac2f:	d82a31        	l32r	a3, 20000cd8 <_stext+0x5d8>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:176
            g_SearchEngineParam[BACKUP_ERASE_CNT_MIN].bsOTFB = FALSE;

            break;

        case BROKEN_ERASE_CNT_MAX:
            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].ulItemCnt = (BLK_PER_PLN + RSV_BLK_PER_PLN);
2000ac32:	30e9      	s32i.n	a14, a0, 12
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:178

            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].ulFieldMaskLow = 0xFFFF0000;
2000ac34:	2660a2        	s32i	a10, a0, 152
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:179
            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].ulFieldMaskHigh = 0x0;         //EraseCnt MSK
2000ac37:	276022        	s32i	a2, a0, 156
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:180
            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].ulXorFieldMaskLow = 0x0;
2000ac3a:	286022        	s32i	a2, a0, 160
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:182
            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].ulXorFieldMaskHigh = 0x3003;   //bFree,bError,bTLC,bBroken
            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].ulXorValueMaskLow = 0x0;
2000ac3d:	2a6022        	s32i	a2, a0, 168
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:185
            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].ulXorValueMaskHigh = 0x2001;   //bFree=TRUE,bBroken=TRUE

            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].ucPitchQW = 0;
2000ac40:	b84022        	s8i	a2, a0, 184
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:186
            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].bsSearchType = SEARCH_TYPE_MAX;
2000ac43:	2e2042        	l32i	a4, a0, 184
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:181
            g_SearchEngineParam[BACKUP_ERASE_CNT_MAX].ulItemCnt = (BLK_PER_PLN + RSV_BLK_PER_PLN);

            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].ulFieldMaskLow = 0xFFFF0000;
            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].ulFieldMaskHigh = 0x0;         //EraseCnt MSK
            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].ulXorFieldMaskLow = 0x0;
            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].ulXorFieldMaskHigh = 0x3003;   //bFree,bError,bTLC,bBroken
2000ac46:	296032        	s32i	a3, a0, 164
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:186
            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].ulXorValueMaskLow = 0x0;
            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].ulXorValueMaskHigh = 0x2001;   //bFree=TRUE,bBroken=TRUE

            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].ucPitchQW = 0;
            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].bsSearchType = SEARCH_TYPE_MAX;
2000ac49:	1044f0        	and	a4, a4, a15
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:187
            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].bsCondType = 0;
2000ac4c:	104470        	and	a4, a4, a7
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:188
            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].bsItemSizeDW = FALSE; ////item size is QWORD
2000ac4f:	104460        	and	a4, a4, a6
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:189
            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].bsXorEn = TRUE;
2000ac52:	204480        	or	a4, a4, a8
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:190
            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].bsOTFB = FALSE;
2000ac55:	104490        	and	a4, a4, a9
2000ac58:	2e6042        	s32i	a4, a0, 184
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:183
            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].ulFieldMaskLow = 0xFFFF0000;
            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].ulFieldMaskHigh = 0x0;         //EraseCnt MSK
            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].ulXorFieldMaskLow = 0x0;
            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].ulXorFieldMaskHigh = 0x3003;   //bFree,bError,bTLC,bBroken
            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].ulXorValueMaskLow = 0x0;
            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].ulXorValueMaskHigh = 0x2001;   //bFree=TRUE,bBroken=TRUE
2000ac5b:	d82041        	l32r	a4, 20000cdc <_stext+0x5dc>
2000ac5e:	2b6042        	s32i	a4, a0, 172
D:\IM_3D_TLC\firmware\algorithm\L2/L2_SearchEngine.c:192
            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].bsCondType = 0;
            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].bsItemSizeDW = FALSE; ////item size is QWORD
            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].bsXorEn = TRUE;
            g_SearchEngineParam[BROKEN_ERASE_CNT_MAX].bsOTFB = FALSE;

            break;
2000ac61:	ffa106        	j	2000aae9 <L2_SearchEngineSWInit+0x79>

2000ac64 <dbg_printf>:
dbg_printf():
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:278
}
#if defined(FPGA)
U8 g_printf_flag;
#endif
void dbg_printf(const char *fmt, ...)
{
2000ac64:	a0c112        	addi	a1, a1, -96
2000ac67:	b1c9      	s32i.n	a12, a1, 44
2000ac69:	a109      	s32i.n	a0, a1, 40
2000ac6b:	106122        	s32i	a2, a1, 64
2000ac6e:	116132        	s32i	a3, a1, 68
2000ac71:	126142        	s32i	a4, a1, 72
2000ac74:	136152        	s32i	a5, a1, 76
2000ac77:	146162        	s32i	a6, a1, 80
2000ac7a:	156172        	s32i	a7, a1, 84
2000ac7d:	d1e9      	s32i.n	a14, a1, 52
2000ac7f:	0c61d2        	s32i	a13, a1, 48
2000ac82:	20e220        	or	a14, a2, a2
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:285
    const char *s;
    int d;
    char buf[16];
    va_list ap;

    HAL_MultiCoreGetSpinLockWait(SPINLOCKID_SUBSYS_PRINT);
2000ac85:	d6bcd1        	l32r	a13, 20000778 <_stext+0x78>

2000ac88 <dbg_printf+0x24>:
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
2000ac88:	03ebc0        	rsr.prid	a12
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:149
#ifndef SIM
    U32 ulMcuID;
    U32 ulLockValue;
        
    ulMcuID = HAL_GetMcuId();
    if ((MCU0_ID == ulMcuID) || (MCU1_ID == ulMcuID) || (MCU2_ID == ulMcuID))
2000ac8b:	051c26        	beqi	a12, 1, 2000ac94 <dbg_printf+0x30>
2000ac8e:	022c26        	beqi	a12, 2, 2000ac94 <dbg_printf+0x30>
2000ac91:	083c66        	bnei	a12, 3, 2000ac9d <dbg_printf+0x39>
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:151
    {
        *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4) = ulMcuID;
2000ac94:	0020c0        	memw
2000ac97:	c06dc2        	s32i	a12, a13, 0x300
2000ac9a:	000146        	j	2000aca3 <dbg_printf+0x3f>

2000ac9d <dbg_printf+0x39>:
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:155
    }
    else
    {
        DBG_Getch();
2000ac9d:	d69e01        	l32r	a0, 20000718 <_stext+0x18>
2000aca0:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:158
    }

    ulLockValue = *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4);
2000aca3:	0020c0        	memw
2000aca6:	c02d22        	l32i	a2, a13, 0x300
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:187
{
    BOOL bSts = FALSE;
    do
    {
        bSts = HAL_MultiCoreGetSpinLock(ucLockId);
    }while (FALSE == bSts);
2000aca9:	db9c27        	bne	a12, a2, 2000ac88 <dbg_printf+0x24>
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:286
    if(FALSE == HAL_UartIsMp())
2000acac:	d7f731        	l32r	a3, 20000c88 <_stext+0x588>
2000acaf:	6338      	l32i.n	a3, a3, 24
2000acb1:	53e397        	bbsi	a3, 9, 2000ad08 <dbg_printf+0xa4>
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:288
    {
        va_start(ap, fmt);
2000acb4:	4b0c      	movi.n	a11, 4
2000acb6:	40c142        	addi	a4, a1, 64
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:289
        while (*fmt) {
2000acb9:	000e02        	l8ui	a0, a14, 0
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:288
    va_list ap;

    HAL_MultiCoreGetSpinLockWait(SPINLOCKID_SUBSYS_PRINT);
    if(FALSE == HAL_UartIsMp())
    {
        va_start(ap, fmt);
2000acbc:	9149      	s32i.n	a4, a1, 36
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:289
        while (*fmt) {
2000acbe:	046016        	beqz	a0, 2000ad08 <dbg_printf+0xa4>
2000acc1:	d80751        	l32r	a5, 20000ce0 <_stext+0x5e0>
2000acc4:	d80871        	l32r	a7, 20000ce4 <_stext+0x5e4>
2000acc7:	5a2c      	movi.n	a10, 37
2000acc9:	11c132        	addi	a3, a1, 17
2000accc:	8139      	s32i.n	a3, a1, 32
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:290
            if (*fmt != '%') {
2000acce:	0f10a7        	beq	a0, a10, 2000ace1 <dbg_printf+0x7d>
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:291
                dbg_putchar(*fmt++);
2000acd1:	ee1b      	addi.n	a14, a14, 1
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:272

//static void dbg_putchar(char c)
void dbg_putchar(char c)
{
    //  uart_putchar(c);
    rUART_TXR = c;
2000acd3:	0020c0        	memw
2000acd6:	844702        	s8i	a0, a7, 132
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:289

    HAL_MultiCoreGetSpinLockWait(SPINLOCKID_SUBSYS_PRINT);
    if(FALSE == HAL_UartIsMp())
    {
        va_start(ap, fmt);
        while (*fmt) {
2000acd9:	000e02        	l8ui	a0, a14, 0
2000acdc:	80ac      	beqz.n	a0, 2000ad08 <dbg_printf+0xa4>
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:290
            if (*fmt != '%') {
2000acde:	ef90a7        	bne	a0, a10, 2000acd1 <dbg_printf+0x6d>
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:294
                dbg_putchar(*fmt++);
                continue;
            }
            switch (*++fmt) {
2000ace1:	ce1b      	addi.n	a12, a14, 1
2000ace3:	40c122        	addi	a2, a1, 64
2000ace6:	010e02        	l8ui	a0, a14, 1
2000ace9:	64a062        	movi	a6, 100
2000acec:	2e1067        	beq	a0, a6, 2000ad1e <dbg_printf+0xba>
2000acef:	8dc032        	addi	a3, a0, -115
2000acf2:	0a7316        	beqz	a3, 2000ad9d <dbg_printf+0x139>
2000acf5:	88c042        	addi	a4, a0, -120
2000acf8:	0d5416        	beqz	a4, 2000add1 <dbg_printf+0x16d>
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:320
                        //  dbg_putchar(*s);
                    }
                    break;

                default:
                    rUART_TXR = *fmt;
2000acfb:	0020c0        	memw
2000acfe:	844702        	s8i	a0, a7, 132
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:324
                    //dbg_putchar(*fmt);
                    break;
            }
            fmt++;
2000ad01:	ec1b      	addi.n	a14, a12, 1
2000ad03:	fff486        	j	2000acd9 <dbg_printf+0x75>

2000ad06 <dbg_printf+0xa2>:
	...

2000ad08 <dbg_printf+0xa4>:
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
History:
    20140917    Tobey  uniform coding style
------------------------------------------------------------------------------*/
void MULTI_CORE_TEXT_ATTR HAL_MultiCoreReleaseSpinLock(U8 ucLockId)
{
    *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4) = 0;
2000ad08:	0020c0        	memw
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:329
        }
        va_end(ap);
    }
    HAL_MultiCoreReleaseSpinLock(SPINLOCKID_SUBSYS_PRINT);
}
2000ad0b:	a108      	l32i.n	a0, a1, 40
2000ad0d:	b1c8      	l32i.n	a12, a1, 44
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
2000ad0f:	070c      	movi.n	a7, 0
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:329
2000ad11:	d1e8      	l32i.n	a14, a1, 52
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
2000ad13:	c06d72        	s32i	a7, a13, 0x300
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:329
2000ad16:	c1d8      	l32i.n	a13, a1, 48
2000ad18:	60c112        	addi	a1, a1, 96
2000ad1b:	f00d      	ret.n

2000ad1d <dbg_printf+0xb9>:
	...

2000ad1e <dbg_printf+0xba>:
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:303
                        //  dbg_putchar(*s);    
                        rUART_TXR = *s;
                    }
                    break;
                case 'd':
                    d = va_arg(ap, int);
2000ad1e:	881c      	movi.n	a8, 24
2000ad20:	0b0d      	mov.n	a0, a11
2000ad22:	bb4b      	addi.n	a11, a11, 4
2000ad24:	08a8b7        	bge	a8, a11, 2000ad30 <dbg_printf+0xcc>
2000ad27:	891c      	movi.n	a9, 24
2000ad29:	012907        	blt	a9, a0, 2000ad2e <dbg_printf+0xca>
2000ad2c:	4b2c      	movi.n	a11, 36
2000ad2e:	9128      	l32i.n	a2, a1, 36
2000ad30:	0b2a      	add.n	a0, a11, a2
2000ad32:	ffd002        	addmi	a0, a0, 0xffffff00
2000ad35:	3f2002        	l32i	a0, a0, 252
2000ad38:	203000        	or	a3, a0, a0
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:218
    {
        *ptr = 0;
        return string;
    }

    if (!value)
2000ad3b:	109016        	beqz	a0, 2000ae48 <dbg_printf+0x1e4>
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:225
        *ptr++ = 0x30;
        *ptr = 0;
        return string;
    }

    if (value < 0)
2000ad3e:	11a096        	bltz	a0, 2000ae5c <dbg_printf+0x1f8>
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:229
    {
        *ptr++ = '-';

        value *= -1;
2000ad41:	10c142        	addi	a4, a1, 16
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:232
    }

    for (i = 100000000; i > 0; i /= 10)
2000ad44:	d7e921        	l32r	a2, 20000ce8 <_stext+0x5e8>
2000ad47:	090c      	movi.n	a9, 0
2000ad49:	1d8076        	loop	a0, 2000ad6a <dbg_printf+0x106>
2000ad4c:	ae0c      	movi.n	a14, 10
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:236
    {
        d = value / i;

        if (d || flag)
2000ad4e:	d20320        	quos	a0, a3, a2
2000ad51:	018016        	beqz	a0, 2000ad6d <dbg_printf+0x109>
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:239
        {
            *ptr++ = (char)(d + 0x30);
            value -= (d * i);
2000ad54:	190c      	movi.n	a9, 1
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:238
    {
        d = value / i;

        if (d || flag)
        {
            *ptr++ = (char)(d + 0x30);
2000ad56:	30c082        	addi	a8, a0, 48
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:239
            value -= (d * i);
2000ad59:	826020        	mull	a6, a0, a2
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:238
    {
        d = value / i;

        if (d || flag)
        {
            *ptr++ = (char)(d + 0x30);
2000ad5c:	004482        	s8i	a8, a4, 0
2000ad5f:	441b      	addi.n	a4, a4, 1
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:239
            value -= (d * i);
2000ad61:	c03360        	sub	a3, a3, a6
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:232
        *ptr++ = '-';

        value *= -1;
    }

    for (i = 100000000; i > 0; i /= 10)
2000ad64:	d222e0        	quos	a2, a2, a14
2000ad67:	0a12a6        	blti	a2, 1, 2000ad75 <dbg_printf+0x111>

2000ad6a <dbg_printf+0x106>:
2000ad6a:	fff6c6        	j	2000ad49 <dbg_printf+0xe5>

2000ad6d <dbg_printf+0x109>:
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:236
    {
        d = value / i;

        if (d || flag)
2000ad6d:	fe3956        	bnez	a9, 2000ad54 <dbg_printf+0xf0>
2000ad70:	fffc06        	j	2000ad64 <dbg_printf+0x100>

2000ad73 <dbg_printf+0x10f>:
	...

2000ad75 <dbg_printf+0x111>:
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:244
            value -= (d * i);
            flag = 1;
        }
    }

    *ptr = 0;
2000ad75:	10c102        	addi	a0, a1, 16
2000ad78:	020c      	movi.n	a2, 0
2000ad7a:	004422        	s8i	a2, a4, 0
2000ad7d:	000002        	l8ui	a0, a0, 0
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:305
                    }
                    break;
                case 'd':
                    d = va_arg(ap, int);
                    my_itoa(d, buf, 10);
                    for (s = buf; *s; s++) {
2000ad80:	f7d016        	beqz	a0, 2000ad01 <dbg_printf+0x9d>
2000ad83:	10c122        	addi	a2, a1, 16
2000ad86:	108076        	loop	a0, 2000ad9a <dbg_printf+0x136>
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:307
                        //  dbg_putchar(*s);
                        rUART_TXR = *s;
2000ad89:	000242        	l8ui	a4, a2, 0
2000ad8c:	0020c0        	memw
2000ad8f:	844742        	s8i	a4, a7, 132
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:305
                    }
                    break;
                case 'd':
                    d = va_arg(ap, int);
                    my_itoa(d, buf, 10);
                    for (s = buf; *s; s++) {
2000ad92:	010232        	l8ui	a3, a2, 1
2000ad95:	221b      	addi.n	a2, a2, 1
2000ad97:	f66316        	beqz	a3, 2000ad01 <dbg_printf+0x9d>

2000ad9a <dbg_printf+0x136>:
2000ad9a:	fffa06        	j	2000ad86 <dbg_printf+0x122>

2000ad9d <dbg_printf+0x139>:
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:296
                dbg_putchar(*fmt++);
                continue;
            }
            switch (*++fmt) {
                case 's':
                    s = va_arg(ap, const char *);
2000ad9d:	861c      	movi.n	a6, 24
2000ad9f:	0b0d      	mov.n	a0, a11
2000ada1:	bb4b      	addi.n	a11, a11, 4
2000ada3:	09a6b7        	bge	a6, a11, 2000adb0 <dbg_printf+0x14c>
2000ada6:	881c      	movi.n	a8, 24
2000ada8:	022807        	blt	a8, a0, 2000adae <dbg_printf+0x14a>
2000adab:	24a0b2        	movi	a11, 36
2000adae:	9128      	l32i.n	a2, a1, 36
2000adb0:	2b2a      	add.n	a2, a11, a2
2000adb2:	ffd222        	addmi	a2, a2, 0xffffff00
2000adb5:	3f2222        	l32i	a2, a2, 252
2000adb8:	f03d      	nop.n
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:297
                    for ( ; *s; s++) {
2000adba:	000202        	l8ui	a0, a2, 0
2000adbd:	f40016        	beqz	a0, 2000ad01 <dbg_printf+0x9d>
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:299
                        //  dbg_putchar(*s);    
                        rUART_TXR = *s;
2000adc0:	0020c0        	memw
2000adc3:	844702        	s8i	a0, a7, 132
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:297
                continue;
            }
            switch (*++fmt) {
                case 's':
                    s = va_arg(ap, const char *);
                    for ( ; *s; s++) {
2000adc6:	010202        	l8ui	a0, a2, 1
2000adc9:	221b      	addi.n	a2, a2, 1
2000adcb:	ff1056        	bnez	a0, 2000adc0 <dbg_printf+0x15c>
2000adce:	ffcbc6        	j	2000ad01 <dbg_printf+0x9d>

2000add1 <dbg_printf+0x16d>:
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:311
                        //  dbg_putchar(*s);
                        rUART_TXR = *s;
                    }
                    break;
                case 'x':
                    d = va_arg(ap, int);
2000add1:	831c      	movi.n	a3, 24
2000add3:	0b0d      	mov.n	a0, a11
2000add5:	bb4b      	addi.n	a11, a11, 4
2000add7:	0623b7        	blt	a3, a11, 2000ade1 <dbg_printf+0x17d>
2000adda:	020d      	mov.n	a0, a2
2000addc:	000286        	j	2000adea <dbg_printf+0x186>

2000addf <dbg_printf+0x17b>:
	...

2000ade1 <dbg_printf+0x17d>:
2000ade1:	841c      	movi.n	a4, 24
2000ade3:	012407        	blt	a4, a0, 2000ade8 <dbg_printf+0x184>
2000ade6:	4b2c      	movi.n	a11, 36
2000ade8:	9108      	l32i.n	a0, a1, 36
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:257
char *utohex(unsigned int value, char *string, int radix)
{
    int i,p;
    int oupt;
    oupt = 0;
    for (i=0;i<32;i+=4)
2000adea:	10c142        	addi	a4, a1, 16
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:311
                        //  dbg_putchar(*s);
                        rUART_TXR = *s;
                    }
                    break;
                case 'x':
                    d = va_arg(ap, int);
2000aded:	6b0a      	add.n	a6, a11, a0
2000adef:	420c      	movi.n	a2, 4
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:257
char *utohex(unsigned int value, char *string, int radix)
{
    int i,p;
    int oupt;
    oupt = 0;
    for (i=0;i<32;i+=4)
2000adf1:	c01c      	movi.n	a0, 28
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:311
                        //  dbg_putchar(*s);
                        rUART_TXR = *s;
                    }
                    break;
                case 'x':
                    d = va_arg(ap, int);
2000adf3:	ffd662        	addmi	a6, a6, 0xffffff00
2000adf6:	3f2662        	l32i	a6, a6, 252
2000adf9:	29a276        	loopgtz	a2, 2000ae26 <dbg_printf+0x1c2>
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:260
    int oupt;
    oupt = 0;
    for (i=0;i<32;i+=4)
    {
        p = (value >> (28 - i))&0xf;
        string[oupt++]=mc[p];
2000adfc:	400000        	ssr	a0
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:257
char *utohex(unsigned int value, char *string, int radix)
{
    int i,p;
    int oupt;
    oupt = 0;
    for (i=0;i<32;i+=4)
2000adff:	fcc032        	addi	a3, a0, -4
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:260
    {
        p = (value >> (28 - i))&0xf;
        string[oupt++]=mc[p];
2000ae02:	912060        	srl	a2, a6
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:257
char *utohex(unsigned int value, char *string, int radix)
{
    int i,p;
    int oupt;
    oupt = 0;
    for (i=0;i<32;i+=4)
2000ae05:	f8c002        	addi	a0, a0, -8
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:260
    {
        p = (value >> (28 - i))&0xf;
        string[oupt++]=mc[p];
2000ae08:	342020        	extui	a2, a2, 0, 4
2000ae0b:	400300        	ssr	a3
2000ae0e:	352a      	add.n	a3, a5, a2
2000ae10:	912060        	srl	a2, a6
2000ae13:	800332        	l8ui	a3, a3, 128
2000ae16:	342020        	extui	a2, a2, 0, 4
2000ae19:	004432        	s8i	a3, a4, 0
2000ae1c:	352a      	add.n	a3, a5, a2
2000ae1e:	800332        	l8ui	a3, a3, 128
2000ae21:	014432        	s8i	a3, a4, 1
2000ae24:	442b      	addi.n	a4, a4, 2

2000ae26 <dbg_printf+0x1c2>:
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:263
    }

    string[oupt] = (char)NULL;
2000ae26:	090c      	movi.n	a9, 0
2000ae28:	10c102        	addi	a0, a1, 16
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:313
                    }
                    break;
                case 'x':
                    d = va_arg(ap, int);
                    utohex(d, buf, 16);
                    for (s = buf; *s; s++) {
2000ae2b:	000082        	l8ui	a8, a0, 0
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:263
    {
        p = (value >> (28 - i))&0xf;
        string[oupt++]=mc[p];
    }

    string[oupt] = (char)NULL;
2000ae2e:	084092        	s8i	a9, a0, 8
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:313
                    }
                    break;
                case 'x':
                    d = va_arg(ap, int);
                    utohex(d, buf, 16);
                    for (s = buf; *s; s++) {
2000ae31:	ecc816        	beqz	a8, 2000ad01 <dbg_printf+0x9d>

2000ae34 <dbg_printf+0x1d0>:
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:314
                        rUART_TXR = *s;
2000ae34:	000022        	l8ui	a2, a0, 0
2000ae37:	0020c0        	memw
2000ae3a:	844722        	s8i	a2, a7, 132
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:313
                    }
                    break;
                case 'x':
                    d = va_arg(ap, int);
                    utohex(d, buf, 16);
                    for (s = buf; *s; s++) {
2000ae3d:	0100e2        	l8ui	a14, a0, 1
2000ae40:	001b      	addi.n	a0, a0, 1
2000ae42:	feee56        	bnez	a14, 2000ae34 <dbg_printf+0x1d0>
2000ae45:	ffae06        	j	2000ad01 <dbg_printf+0x9d>

2000ae48 <dbg_printf+0x1e4>:
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:220
        return string;
    }

    if (!value)
    {
        *ptr++ = 0x30;
2000ae48:	003c      	movi.n	a0, 48
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:221
        *ptr = 0;
2000ae4a:	030c      	movi.n	a3, 0
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:220
        return string;
    }

    if (!value)
    {
        *ptr++ = 0x30;
2000ae4c:	10c142        	addi	a4, a1, 16
2000ae4f:	063c      	movi.n	a6, 48
2000ae51:	004462        	s8i	a6, a4, 0
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:221
        *ptr = 0;
2000ae54:	014432        	s8i	a3, a4, 1
2000ae57:	ffc946        	j	2000ad80 <dbg_printf+0x11c>

2000ae5a <dbg_printf+0x1f6>:
	...

2000ae5c <dbg_printf+0x1f8>:
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:229

    if (value < 0)
    {
        *ptr++ = '-';

        value *= -1;
2000ae5c:	603000        	neg	a3, a0
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:227
        return string;
    }

    if (value < 0)
    {
        *ptr++ = '-';
2000ae5f:	8148      	l32i.n	a4, a1, 32
2000ae61:	10c192        	addi	a9, a1, 16
2000ae64:	d82c      	movi.n	a8, 45
2000ae66:	004982        	s8i	a8, a9, 0
D:\IM_3D_TLC\firmware\HAL\UART/uart.c:229

        value *= -1;
2000ae69:	ffb5c6        	j	2000ad44 <dbg_printf+0xe0>

2000ae6c <TEST_NfcMCU2Main>:
TEST_NfcMCU2Main():
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:712
History       :
    20151112    abby    create
    20160904    abby    improve to 2.0
****************************************************************************/
void TEST_NfcMCU2Main(void)
{ 
2000ae6c:	f0c112        	addi	a1, a1, -16
2000ae6f:	0109      	s32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Event.c:161
2000ae71:	d63301        	l32r	a0, 20000740 <_stext+0x40>
2000ae74:	6008      	l32i.n	a0, a0, 24
2000ae76:	b08c      	beqz.n	a0, 2000ae85 <TEST_NfcMCU2Main+0x19>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:692
{
    COMMON_EVENT NFC_Event;

    if (COMM_EVENT_STATUS_SUCCESS_NOEVENT != CommCheckEvent(COMM_EVENT_OWNER_L3, &NFC_Event))
    {
        if (!NFC_Event.EventBoot)
2000ae78:	506057        	bbci	a0, 5, 2000aecc <TEST_NfcMCU2Main+0x60>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:716
void TEST_NfcMCU2Main(void)
{ 
    /* waiting event clear by MCU1 */
    if (FALSE == TEST_NfcMCU2EventCheck())
    {
        return;
2000ae7b:	0108      	l32i.n	a0, a1, 0
2000ae7d:	10c112        	addi	a1, a1, 16
2000ae80:	f00d      	ret.n

2000ae82 <TEST_NfcMCU2Main+0x16>:
2000ae82:	000000                                        ...

2000ae85 <TEST_NfcMCU2Main+0x19>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:736

    rNfcDbgSigGrpChg0  = 0x5555;//0xCCCC;//0x0000;//IFC:00 ICB:0C
    rNfcDbgSigGrpChg1  = (0x0<<28)|(0xB<<16)|(0x0<<12)|(0xA);//0x240004;//0x240023;//0x2b0004;
    rNfcDbgSigGrpChg2  = (0x1<<28)|(0xB<<16)|(0x1<<12)|(0xA);//0x26000c;//0x260025;//0x150001;//0x150017;
#else//DRAM
    rGLB(0x50) = (0x1E<<22);//B0 of NFC
2000ae85:	d752a1        	l32r	a10, 20000bd0 <_stext+0x4d0>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:719
    if (FALSE == TEST_NfcMCU2EventCheck())
    {
        return;
    }

    U8 ucFileType = TEST_NfcGetCheckListFileType();;
2000ae88:	d62541        	l32r	a4, 2000071c <_stext+0x1c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:93
2000ae8b:	d750b1        	l32r	a11, 20000bcc <_stext+0x4cc>
2000ae8e:	5e64b2        	s32i	a11, a4, 0x178
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:719
2000ae91:	d75031        	l32r	a3, 20000bd4 <_stext+0x4d4>
2000ae94:	d71261        	l32r	a6, 20000adc <_stext+0x3dc>
2000ae97:	d63891        	l32r	a9, 20000778 <_stext+0x78>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:736

    rNfcDbgSigGrpChg0  = 0x5555;//0xCCCC;//0x0000;//IFC:00 ICB:0C
    rNfcDbgSigGrpChg1  = (0x0<<28)|(0xB<<16)|(0x0<<12)|(0xA);//0x240004;//0x240023;//0x2b0004;
    rNfcDbgSigGrpChg2  = (0x1<<28)|(0xB<<16)|(0x1<<12)|(0xA);//0x26000c;//0x260025;//0x150001;//0x150017;
#else//DRAM
    rGLB(0x50) = (0x1E<<22);//B0 of NFC
2000ae9a:	0020c0        	memw
2000ae9d:	9469a2        	s32i	a10, a9, 0x250
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:737
    rGLB(0x54) = (1<<28)|(0xE0<<18); //B1 of NFC
2000aea0:	d74e81        	l32r	a8, 20000bd8 <_stext+0x4d8>
2000aea3:	0020c0        	memw
2000aea6:	956982        	s32i	a8, a9, 0x254
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:738
    rNfcDbgSigGrpChg0  = 0x5500;
2000aea9:	d74c71        	l32r	a7, 20000bdc <_stext+0x4dc>
2000aeac:	0020c0        	memw
2000aeaf:	886672        	s32i	a7, a6, 0x220
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:739
    rNfcDbgSigGrpChg1  = (0x2<<28)|(0xB<<16)|(0x2<<12)|(0x20);//(0x2<<28)|(0xB<<16)|(0x2<<12)|(0xA);
2000aeb2:	d74b51        	l32r	a5, 20000be0 <_stext+0x4e0>
2000aeb5:	0020c0        	memw
2000aeb8:	896652        	s32i	a5, a6, 0x224
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcPerformance.c:39
GLOBAL MCU12_VAR_ATTR U32 g_aStartTimer[PERF_TYPE_CNT];
GLOBAL MCU12_VAR_ATTR U32 g_aEndTimer[PERF_TYPE_CNT];

void TEST_NfcInitLLFFlag(void)
{
    g_pLLFDone = (U32*)(DRAM_START_ADDRESS + 0x8000000);//multi-use LLF status address
2000aebb:	5f6432        	s32i	a3, a4, 0x17c
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcPerformance.c:40
    *g_pLLFDone = 0;
2000aebe:	020c      	movi.n	a2, 0
2000aec0:	0020c0        	memw
2000aec3:	0329      	s32i.n	a2, a3, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:760
        {
            TEST_NfcBasicPattRun();
        }
        else//ext file
        {
            TEST_NfcExtPattRun();
2000aec5:	fec5c5        	call0	20009b24 <TEST_NfcExtPattRun>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:762
        }
    }
2000aec8:	fffe46        	j	2000aec5 <TEST_NfcMCU2Main+0x59>

2000aecb <TEST_NfcMCU2Main+0x5f>:
	...

2000aecc <TEST_NfcMCU2Main+0x60>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:694

    if (COMM_EVENT_STATUS_SUCCESS_NOEVENT != CommCheckEvent(COMM_EVENT_OWNER_L3, &NFC_Event))
    {
        if (!NFC_Event.EventBoot)
        {
            DBG_Printf("MCU2 Event Invalid!\n");
2000aecc:	d73f21        	l32r	a2, 20000bc8 <_stext+0x4c8>
2000aecf:	ffd945        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:716
void TEST_NfcMCU2Main(void)
{ 
    /* waiting event clear by MCU1 */
    if (FALSE == TEST_NfcMCU2EventCheck())
    {
        return;
2000aed2:	0108      	l32i.n	a0, a1, 0
2000aed4:	10c112        	addi	a1, a1, 16
2000aed7:	f00d      	ret.n

2000aed9 <TEST_NfcMCU2Main+0x6d>:
2000aed9:	000000                                        ...

2000aedc <CommSetEvent>:
CommSetEvent():
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Event.c:88
    U32 EventEN;

    EventEN = ( 1 << EventID );

    /* An event of the same type is already pending. */
    if (0 != (ModuleEvent[EventOwner].Event & EventEN))
2000aedc:	401300        	ssl	a3
2000aedf:	1162e0        	slli	a6, a2, 2
2000aee2:	d61771        	l32r	a7, 20000740 <_stext+0x40>
2000aee5:	120c      	movi.n	a2, 1
2000aee7:	667a      	add.n	a6, a6, a7
2000aee9:	4638      	l32i.n	a3, a6, 16
2000aeeb:	a17200        	sll	a7, a2
2000aeee:	020377        	bnone	a3, a7, 2000aef4 <CommSetEvent+0x18>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Event.c:94
        return COMM_EVENT_STATUS_SEND_BUSY;

    /* Sets the event. */
    ModuleEvent[EventOwner].Event |= EventEN;

    return COMM_EVENT_STATUS_SUCCESS_NOEVENT;
2000aef1:	f00d      	ret.n

2000aef3 <CommSetEvent+0x17>:
	...

2000aef4 <CommSetEvent+0x18>:
2000aef4:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Event.c:92
    /* An event of the same type is already pending. */
    if (0 != (ModuleEvent[EventOwner].Event & EventEN))
        return COMM_EVENT_STATUS_SEND_BUSY;

    /* Sets the event. */
    ModuleEvent[EventOwner].Event |= EventEN;
2000aef6:	208730        	or	a8, a7, a3
2000aef9:	4689      	s32i.n	a8, a6, 16
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Event.c:94

    return COMM_EVENT_STATUS_SUCCESS_NOEVENT;
2000aefb:	f00d      	ret.n

2000aefd <CommSetEvent+0x21>:
2000aefd:	000000                                        ...

2000af00 <main>:
main():
D:\IM_3D_TLC\firmware/MCU2_Main.c:187
main since main is occupied by simulation program for Windows environment.
Others      :
Modify      :
****************************************************************************/
int main(void)
{
2000af00:	f0c112        	addi	a1, a1, -16
D:\IM_3D_TLC\firmware/MCU2_Main.c:99
    return;
}

void BackEnd_Init(void)
{
    DiskConfig_Init();
2000af03:	d78901        	l32r	a0, 20000d28 <_stext+0x628>
2000af06:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:440
History:
20150709    Kristin   created
------------------------------------------------------------------------------*/
INLINE void HAL_EnableDramAddrHigh(void)
{
    HAL_MultiCoreGetSpinLockWait(SPINLOCKID_GLB40);
2000af09:	d61bc1        	l32r	a12, 20000778 <_stext+0x78>

2000af0c <main+0xc>:
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
    20141028    Gavin   change attribute to "INLINE"
------------------------------------------------------------------------------*/
INLINE U32 HAL_GetMcuId(void)
{
    U32 ulMcuId;
    ulMcuId = XT_RSR_PRID();
2000af0c:	03ebd0        	rsr.prid	a13
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:149
#ifndef SIM
    U32 ulMcuID;
    U32 ulLockValue;
        
    ulMcuID = HAL_GetMcuId();
    if ((MCU0_ID == ulMcuID) || (MCU1_ID == ulMcuID) || (MCU2_ID == ulMcuID))
2000af0f:	051d26        	beqi	a13, 1, 2000af18 <main+0x18>
2000af12:	022d26        	beqi	a13, 2, 2000af18 <main+0x18>
2000af15:	083d66        	bnei	a13, 3, 2000af21 <main+0x21>
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:151
    {
        *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4) = ulMcuID;
2000af18:	0020c0        	memw
2000af1b:	c56cd2        	s32i	a13, a12, 0x314
2000af1e:	000146        	j	2000af27 <main+0x27>

2000af21 <main+0x21>:
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:155
    }
    else
    {
        DBG_Getch();
2000af21:	d5fd01        	l32r	a0, 20000718 <_stext+0x18>
2000af24:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:158
    }

    ulLockValue = *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4);
2000af27:	0020c0        	memw
2000af2a:	c52c02        	l32i	a0, a12, 0x314
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:187
{
    BOOL bSts = FALSE;
    do
    {
        bSts = HAL_MultiCoreGetSpinLock(ucLockId);
    }while (FALSE == bSts);
2000af2d:	db9d07        	bne	a13, a0, 2000af0c <main+0xc>
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:440
History:
20150709    Kristin   created
------------------------------------------------------------------------------*/
INLINE void HAL_EnableDramAddrHigh(void)
{
    HAL_MultiCoreGetSpinLockWait(SPINLOCKID_GLB40);
2000af30:	d63e01        	l32r	a0, 20000828 <_stext+0x128>
2000af33:	040c      	movi.n	a4, 0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:441
    rGlbMCUMisc |= 1 << 24;
2000af35:	0020c0        	memw
2000af38:	902c32        	l32i	a3, a12, 0x240
2000af3b:	203300        	or	a3, a3, a0
2000af3e:	0020c0        	memw
2000af41:	906c32        	s32i	a3, a12, 0x240
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
History:
    20140917    Tobey  uniform coding style
------------------------------------------------------------------------------*/
void MULTI_CORE_TEXT_ATTR HAL_MultiCoreReleaseSpinLock(U8 ucLockId)
{
    *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4) = 0;
2000af44:	0020c0        	memw
2000af47:	c56c42        	s32i	a4, a12, 0x314
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
    20141028    Gavin   change attribute to "INLINE"
------------------------------------------------------------------------------*/
INLINE U32 HAL_GetMcuId(void)
{
    U32 ulMcuId;
    ulMcuId = XT_RSR_PRID();
2000af4a:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware/MCU2_Main.c:104
#ifdef DCACHE
    HAL_EnableDramAddrHigh();
#endif
    /* check is current MCU Enable */
    if (FALSE == HAL_IsMCUEnable(HAL_GetMcuId()))
2000af4d:	d74e21        	l32r	a2, 20000c88 <_stext+0x588>
2000af50:	7228      	l32i.n	a2, a2, 28
2000af52:	330b      	addi.n	a3, a3, -1
2000af54:	0dd237        	bbs	a2, a3, 2000af65 <main+0x65>
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
2000af57:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware/MCU2_Main.c:106
    {
        DBG_Printf("MCU %d Disabled: enter forever loop!\n", HAL_GetMcuId());
2000af5a:	d76421        	l32r	a2, 20000cec <_stext+0x5ec>
2000af5d:	ffd045        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware/MCU2_Main.c:107
        while(TRUE);
2000af60:	ffff06        	j	2000af60 <main+0x60>

2000af63 <main+0x63>:
	...

2000af65 <main+0x65>:
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
2000af65:	03eb70        	rsr.prid	a7
2000af68:	d5ed61        	l32r	a6, 2000071c <_stext+0x1c>
2000af6b:	d76151        	l32r	a5, 20000cf0 <_stext+0x5f0>
2000af6e:	d76131        	l32r	a3, 20000cf4 <_stext+0x5f4>
2000af71:	fec772        	addi	a7, a7, -2
2000af74:	0fc716        	beqz	a7, 2000b074 <main+0x174>
D:\IM_3D_TLC\firmware\config/Disk_Config.c:212
    }
    else
    {
        g_pMCU1DramEndBase = (U32*)DRAM_MCU1_DRAM_END_POINTER_BASE;

        g_FreeMemBase.ulFreeSRAM0Base = DSRAM0_MCU2_BASE;
2000af77:	2659      	s32i.n	a5, a6, 8
D:\IM_3D_TLC\firmware\config/Disk_Config.c:214
        g_FreeMemBase.ulFreeSRAM1Base = DSRAM1_MCU2_BASE;
        g_FreeMemBase.ulDRAMBase = DRAM_DATA_BUFF_MCU2_BASE;
2000af79:	d61091        	l32r	a9, 200007bc <_stext+0xbc>
2000af7c:	0388      	l32i.n	a8, a3, 0
D:\IM_3D_TLC\firmware\config/Disk_Config.c:215
        g_FreeMemBase.ulFreeOTFBBase = OTFB_FW_DATA_MCU2_BASE;
2000af7e:	d75fa1        	l32r	a10, 20000cfc <_stext+0x5fc>
D:\IM_3D_TLC\firmware\config/Disk_Config.c:213
    else
    {
        g_pMCU1DramEndBase = (U32*)DRAM_MCU1_DRAM_END_POINTER_BASE;

        g_FreeMemBase.ulFreeSRAM0Base = DSRAM0_MCU2_BASE;
        g_FreeMemBase.ulFreeSRAM1Base = DSRAM1_MCU2_BASE;
2000af81:	d75db1        	l32r	a11, 20000cf8 <_stext+0x5f8>
2000af84:	36b9      	s32i.n	a11, a6, 12
D:\IM_3D_TLC\firmware\config/Disk_Config.c:215
        g_FreeMemBase.ulDRAMBase = DRAM_DATA_BUFF_MCU2_BASE;
        g_FreeMemBase.ulFreeOTFBBase = OTFB_FW_DATA_MCU2_BASE;
2000af86:	46a9      	s32i.n	a10, a6, 16
D:\IM_3D_TLC\firmware\config/Disk_Config.c:214
    {
        g_pMCU1DramEndBase = (U32*)DRAM_MCU1_DRAM_END_POINTER_BASE;

        g_FreeMemBase.ulFreeSRAM0Base = DSRAM0_MCU2_BASE;
        g_FreeMemBase.ulFreeSRAM1Base = DSRAM1_MCU2_BASE;
        g_FreeMemBase.ulDRAMBase = DRAM_DATA_BUFF_MCU2_BASE;
2000af88:	889a      	add.n	a8, a8, a9
2000af8a:	6689      	s32i.n	a8, a6, 24
D:\IM_3D_TLC\firmware\config/Disk_Config.c:215
        g_FreeMemBase.ulFreeOTFBBase = OTFB_FW_DATA_MCU2_BASE;
2000af8c:	2659      	s32i.n	a5, a6, 8
2000af8e:	0639      	s32i.n	a3, a6, 0
D:\IM_3D_TLC\firmware\config/Disk_Config.c:228

    // FCMDQ Status
    g_FreeMemBase.ulSsuInOtfbSharedBase = OTFB_SSU0_MCU12_SHARE_BASE;

    // normally, disable
    g_FreeMemBase.ulSsuInDramSharedBase = DRAM_SSU0_MCU12_SHARE_BASE;
2000af90:	d75f01        	l32r	a0, 20000d0c <_stext+0x60c>
D:\IM_3D_TLC\firmware\config/Disk_Config.c:234

    // normally, FCMDQ Entry
    g_FreeMemBase.ulFreeSRAM1SharedBase = DSRAM1_MCU12_SHARE_BASE;

    // normally, the left l2 and l3 shared variables. 
    g_FreeMemBase.ulFreeDRAMSharedBase = DRAM_DATA_BUFF_MCU12_BASE;    
2000af93:	d75fd1        	l32r	a13, 20000d10 <_stext+0x610>
D:\IM_3D_TLC\firmware\config/Disk_Config.c:231

    // normally, disable
    g_FreeMemBase.ulSsuInDramSharedBase = DRAM_SSU0_MCU12_SHARE_BASE;

    // normally, FCMDQ Entry
    g_FreeMemBase.ulFreeSRAM1SharedBase = DSRAM1_MCU12_SHARE_BASE;
2000af96:	d72ae1        	l32r	a14, 20000c40 <_stext+0x540>
D:\IM_3D_TLC\firmware\config/Disk_Config.c:225

    // normally, enable when xore enable;
    g_FreeMemBase.ulRedInDramSharedBase = DRAM_RED_MCU12_SHARE_BASE;    

    // FCMDQ Status
    g_FreeMemBase.ulSsuInOtfbSharedBase = OTFB_SSU0_MCU12_SHARE_BASE;
2000af99:	d75b21        	l32r	a2, 20000d08 <_stext+0x608>
D:\IM_3D_TLC\firmware\config/Disk_Config.c:219
        g_FreeMemBase.ulDRAMBase = DRAM_DATA_BUFF_MCU2_BASE;
        g_FreeMemBase.ulFreeOTFBBase = OTFB_FW_DATA_MCU2_BASE;
    }
    
    // normally, enable when xore disable; 
    g_FreeMemBase.ulRedInOtfbSharedBase = OTFB_RED_MCU12_SHARE_BASE;
2000af9c:	d75941        	l32r	a4, 20000d00 <_stext+0x600>
2000af9f:	a649      	s32i.n	a4, a6, 40
D:\IM_3D_TLC\firmware\config/Disk_Config.c:225

    // normally, enable when xore enable;
    g_FreeMemBase.ulRedInDramSharedBase = DRAM_RED_MCU12_SHARE_BASE;    

    // FCMDQ Status
    g_FreeMemBase.ulSsuInOtfbSharedBase = OTFB_SSU0_MCU12_SHARE_BASE;
2000afa1:	c629      	s32i.n	a2, a6, 48
D:\IM_3D_TLC\firmware\config/Disk_Config.c:231

    // normally, disable
    g_FreeMemBase.ulSsuInDramSharedBase = DRAM_SSU0_MCU12_SHARE_BASE;

    // normally, FCMDQ Entry
    g_FreeMemBase.ulFreeSRAM1SharedBase = DSRAM1_MCU12_SHARE_BASE;
2000afa3:	76e9      	s32i.n	a14, a6, 28
D:\IM_3D_TLC\firmware\config/Disk_Config.c:234

    // normally, the left l2 and l3 shared variables. 
    g_FreeMemBase.ulFreeDRAMSharedBase = DRAM_DATA_BUFF_MCU12_BASE;    
2000afa5:	86d9      	s32i.n	a13, a6, 32
D:\IM_3D_TLC\firmware\config/Disk_Config.c:228

    // FCMDQ Status
    g_FreeMemBase.ulSsuInOtfbSharedBase = OTFB_SSU0_MCU12_SHARE_BASE;

    // normally, disable
    g_FreeMemBase.ulSsuInDramSharedBase = DRAM_SSU0_MCU12_SHARE_BASE;
2000afa7:	b609      	s32i.n	a0, a6, 44
D:\IM_3D_TLC\firmware\config/Disk_Config.c:222
    
    // normally, enable when xore disable; 
    g_FreeMemBase.ulRedInOtfbSharedBase = OTFB_RED_MCU12_SHARE_BASE;

    // normally, enable when xore enable;
    g_FreeMemBase.ulRedInDramSharedBase = DRAM_RED_MCU12_SHARE_BASE;    
2000afa9:	d75631        	l32r	a3, 20000d04 <_stext+0x604>
2000afac:	9639      	s32i.n	a3, a6, 36
D:\IM_3D_TLC\firmware/MCU2_Main.c:112
    }
    
    BootUpInitMultiCore();

    if (TRUE == DiskConfig_IsColdStart())
2000afae:	d75f01        	l32r	a0, 20000d2c <_stext+0x62c>
2000afb1:	0000c0        	callx0	a0
2000afb4:	231266        	bnei	a2, 1, 2000afdb <main+0xdb>
D:\IM_3D_TLC\firmware/MCU2_Main.c:114
    {
        HAL_CommInit();
2000afb7:	d75e01        	l32r	a0, 20000d30 <_stext+0x630>
2000afba:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware/MCU2_Main.c:119

        #ifdef HOST_SATA
        HAL_SATAInit();
        #else
        HAL_AHCIInit();
2000afbd:	d75d01        	l32r	a0, 20000d34 <_stext+0x634>
2000afc0:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware/MCU2_Main.c:122
        #endif

        FW_InitSMSG();
2000afc3:	d75d01        	l32r	a0, 20000d38 <_stext+0x638>
2000afc6:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware/MCU2_Main.c:123
        FW_InitMSD();
2000afc9:	d75c01        	l32r	a0, 20000d3c <_stext+0x63c>
2000afcc:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware/MCU2_Main.c:126

        #ifdef SEARCH_ENGINE
        L2_SearchEngineSWInit();
2000afcf:	ffaa05        	call0	2000aa70 <L2_SearchEngineSWInit>
D:\IM_3D_TLC\firmware/MCU2_Main.c:130
        #endif

        #ifndef HAL_UNIT_TEST
        L3_TaskInit( &g_FreeMemBase );
2000afd2:	d6f621        	l32r	a2, 20000bac <_stext+0x4ac>
2000afd5:	d75a01        	l32r	a0, 20000d40 <_stext+0x640>
2000afd8:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware/MCU2_Main.c:138
        #ifndef HAL_NFC_TEST
        MCU2_AllocateTraceLogMemory(&g_FreeMemBase.ulDRAMBase);
        #endif
    }

    HAL_FlashInit();
2000afdb:	d75a01        	l32r	a0, 20000d44 <_stext+0x644>
2000afde:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware/MCU2_Main.c:141

    /* move LDPC DL HMatrix from BL */
    HAL_LdpcDownloadHMatix();
2000afe1:	d75901        	l32r	a0, 20000d48 <_stext+0x648>
2000afe4:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware/MCU2_Main.c:144

    /*  LDPC SoftDEC init  */
    HAL_LdpcSInit();
2000afe7:	d75901        	l32r	a0, 20000d4c <_stext+0x64c>
2000afea:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
2000afed:	03eb00        	rsr.prid	a0
2000aff0:	500b      	addi.n	a5, a0, -1
2000aff2:	097516        	beqz	a5, 2000b08d <main+0x18d>
2000aff5:	fec062        	addi	a6, a0, -2
2000aff8:	098616        	beqz	a6, 2000b094 <main+0x194>
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:478
    {
        ulBuf |= 1 << 19; // wire RMCU1_RDCache_EN = REGGLB_40[19];  
    }
    else //MCU2_ID
    {
        ulBuf |= 1 << 21; // wire RMCU2_RDCache_EN = REGGLB_40[21];
2000affb:	d63ae1        	l32r	a14, 200008e4 <_stext+0x1e4>
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
    20141028    Gavin   change attribute to "INLINE"
------------------------------------------------------------------------------*/
INLINE U32 HAL_GetMcuId(void)
{
    U32 ulMcuId;
    ulMcuId = XT_RSR_PRID();
2000affe:	03ebd0        	rsr.prid	a13
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:149
#ifndef SIM
    U32 ulMcuID;
    U32 ulLockValue;
        
    ulMcuID = HAL_GetMcuId();
    if ((MCU0_ID == ulMcuID) || (MCU1_ID == ulMcuID) || (MCU2_ID == ulMcuID))
2000b001:	051d26        	beqi	a13, 1, 2000b00a <main+0x10a>
2000b004:	022d26        	beqi	a13, 2, 2000b00a <main+0x10a>
2000b007:	0a3d66        	bnei	a13, 3, 2000b015 <main+0x115>
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:151
    {
        *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4) = ulMcuID;
2000b00a:	0020c0        	memw
2000b00d:	c56cd2        	s32i	a13, a12, 0x314
2000b010:	0001c6        	j	2000b01b <main+0x11b>

2000b013 <main+0x113>:
	...

2000b015 <main+0x115>:
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:155
    }
    else
    {
        DBG_Getch();
2000b015:	d5c001        	l32r	a0, 20000718 <_stext+0x18>
2000b018:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:158
    }

    ulLockValue = *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4);
2000b01b:	0020c0        	memw
2000b01e:	c52c72        	l32i	a7, a12, 0x314
2000b021:	f03d      	nop.n
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:187
{
    BOOL bSts = FALSE;
    do
    {
        bSts = HAL_MultiCoreGetSpinLock(ucLockId);
    }while (FALSE == bSts);
2000b023:	d79d77        	bne	a13, a7, 2000affe <main+0xfe>
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:482
    {
        ulBuf |= 1 << 21; // wire RMCU2_RDCache_EN = REGGLB_40[21];
    }
    ulBuf |= 1 << 24;
    HAL_MultiCoreGetSpinLockWait(SPINLOCKID_GLB40);
    rGlbMCUMisc |= ulBuf;
2000b026:	0020c0        	memw
2000b029:	902c92        	l32i	a9, a12, 0x240
2000b02c:	d5ffa1        	l32r	a10, 20000828 <_stext+0x128>
2000b02f:	2099e0        	or	a9, a9, a14
2000b032:	2099a0        	or	a9, a9, a10
2000b035:	0020c0        	memw
2000b038:	906c92        	s32i	a9, a12, 0x240
D:\IM_3D_TLC\firmware\HAL\MultiCore/HAL_MultiCore.c:122
History:
    20140917    Tobey  uniform coding style
------------------------------------------------------------------------------*/
void MULTI_CORE_TEXT_ATTR HAL_MultiCoreReleaseSpinLock(U8 ucLockId)
{
    *(volatile U32*)(SPINLOCK_BASE_ADDRESS + ucLockId*4) = 0;
2000b03b:	0020c0        	memw
2000b03e:	080c      	movi.n	a8, 0
2000b040:	c56c82        	s32i	a8, a12, 0x314
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:485
    HAL_MultiCoreReleaseSpinLock(SPINLOCKID_GLB40);
#ifndef SIM
    xthal_dcache_all_unlock();
2000b043:	003985        	call0	2000b3dc <xthal_dcache_all_unlock>
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:486
    xthal_dcache_all_invalidate();
2000b046:	003785        	call0	2000b3c0 <xthal_dcache_all_invalidate>
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:494
    512MB is assigned by a 4-bit value.
    1 : cached, write thru
    2 : bypass cache
    4 : cached, write back
    */
    xthal_set_dcacheattr(0x22112222);
2000b049:	d73221        	l32r	a2, 20000d14 <_stext+0x614>
2000b04c:	001845        	call0	2000b1d4 <xthal_set_dcacheattr>
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:495
    xthal_dcache_sync();
2000b04f:	003a85        	call0	2000b3f8 <xthal_dcache_sync>
D:\IM_3D_TLC\firmware/MCU2_Main.c:156
    U32 aIV[4] = {0x12121212, 0x34343434, 0x56565656, 0x78787878};
    HAL_EMInit(EM_KEY_SIZE_256BIT, EM_MODE_XTS, aIV);
#endif

    #ifdef DCACHE
    HAL_EnableDCache(HAL_GetMcuId());
2000b052:	d5bb31        	l32r	a3, 20000740 <_stext+0x40>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Event.c:139
    U32 EventEN;

    EventEN = ( 1 << EventID );

    /* Clears the event. */
    ModuleEvent[EventOwner].Event &= ~EventEN;
2000b055:	ec7c      	movi.n	a12, -2
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Event.c:88
    U32 EventEN;

    EventEN = ( 1 << EventID );

    /* An event of the same type is already pending. */
    if (0 != (ModuleEvent[EventOwner].Event & EventEN))
2000b057:	6308      	l32i.n	a0, a3, 24
D:\IM_3D_TLC\firmware/MCU2_Main.c:156
2000b059:	20a042        	movi	a4, 32
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Event.c:88
2000b05c:	05e057        	bbsi	a0, 5, 2000b065 <main+0x165>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Event.c:92
        return COMM_EVENT_STATUS_SEND_BUSY;

    /* Sets the event. */
    ModuleEvent[EventOwner].Event |= EventEN;
2000b05f:	20a040        	or	a10, a0, a4
2000b062:	0663a2        	s32i	a10, a3, 24
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Event.c:139
    U32 EventEN;

    EventEN = ( 1 << EventID );

    /* Clears the event. */
    ModuleEvent[EventOwner].Event &= ~EventEN;
2000b065:	53b8      	l32i.n	a11, a3, 20
2000b067:	f03d      	nop.n
2000b069:	10bbc0        	and	a11, a11, a12
2000b06c:	53b9      	s32i.n	a11, a3, 20
D:\IM_3D_TLC\firmware/MCU2_Main.c:199
    /* clear MCU1 event after backend init done to enable MCU1 */
    CommClearEvent(COMM_EVENT_OWNER_L2, COMM_EVENT_OFFSET_INIT);

    while (TRUE)
    {
        TEST_NfcMCU2Main();
2000b06e:	ffdfc5        	call0	2000ae6c <TEST_NfcMCU2Main>
D:\IM_3D_TLC\firmware/MCU2_Main.c:200
    }
2000b071:	fffe46        	j	2000b06e <main+0x16e>

2000b074 <main+0x174>:
D:\IM_3D_TLC\firmware\config/Disk_Config.c:202
{
    if (MCU1_ID == HAL_GetMcuId())
    {
        g_pMCU1DramEndBase = (U32*)DRAM_MCU1_DRAM_END_POINTER_BASE;

        g_FreeMemBase.ulFreeSRAM0Base = DSRAM0_MCU1_BASE;
2000b074:	2659      	s32i.n	a5, a6, 8
D:\IM_3D_TLC\firmware\config/Disk_Config.c:206
        g_FreeMemBase.ulFreeSRAM1Base = DSRAM1_MCU1_BASE;
        g_FreeMemBase.ulDRAMBase = DRAM_DATA_BUFF_MCU1_BASE;
        g_FreeMemBase.ulFreeOTFBBase = OTFB_FW_DATA_MCU1_BASE;
        g_FreeMemBase.ulFreeCacheStatusBase = OTFB_SSU1_MCU12_SHARE_BASE;  
2000b076:	d6cbd1        	l32r	a13, 20000ba4 <_stext+0x4a4>
D:\IM_3D_TLC\firmware\config/Disk_Config.c:205
        g_pMCU1DramEndBase = (U32*)DRAM_MCU1_DRAM_END_POINTER_BASE;

        g_FreeMemBase.ulFreeSRAM0Base = DSRAM0_MCU1_BASE;
        g_FreeMemBase.ulFreeSRAM1Base = DSRAM1_MCU1_BASE;
        g_FreeMemBase.ulDRAMBase = DRAM_DATA_BUFF_MCU1_BASE;
        g_FreeMemBase.ulFreeOTFBBase = OTFB_FW_DATA_MCU1_BASE;
2000b079:	d729e1        	l32r	a14, 20000d20 <_stext+0x620>
D:\IM_3D_TLC\firmware\config/Disk_Config.c:204
    {
        g_pMCU1DramEndBase = (U32*)DRAM_MCU1_DRAM_END_POINTER_BASE;

        g_FreeMemBase.ulFreeSRAM0Base = DSRAM0_MCU1_BASE;
        g_FreeMemBase.ulFreeSRAM1Base = DSRAM1_MCU1_BASE;
        g_FreeMemBase.ulDRAMBase = DRAM_DATA_BUFF_MCU1_BASE;
2000b07c:	d72801        	l32r	a0, 20000d1c <_stext+0x61c>
D:\IM_3D_TLC\firmware\config/Disk_Config.c:203
    if (MCU1_ID == HAL_GetMcuId())
    {
        g_pMCU1DramEndBase = (U32*)DRAM_MCU1_DRAM_END_POINTER_BASE;

        g_FreeMemBase.ulFreeSRAM0Base = DSRAM0_MCU1_BASE;
        g_FreeMemBase.ulFreeSRAM1Base = DSRAM1_MCU1_BASE;
2000b07f:	d72621        	l32r	a2, 20000d18 <_stext+0x618>
2000b082:	3629      	s32i.n	a2, a6, 12
D:\IM_3D_TLC\firmware\config/Disk_Config.c:204
        g_FreeMemBase.ulDRAMBase = DRAM_DATA_BUFF_MCU1_BASE;
2000b084:	6609      	s32i.n	a0, a6, 24
D:\IM_3D_TLC\firmware\config/Disk_Config.c:205
        g_FreeMemBase.ulFreeOTFBBase = OTFB_FW_DATA_MCU1_BASE;
2000b086:	46e9      	s32i.n	a14, a6, 16
D:\IM_3D_TLC\firmware\config/Disk_Config.c:206
        g_FreeMemBase.ulFreeCacheStatusBase = OTFB_SSU1_MCU12_SHARE_BASE;  
2000b088:	56d9      	s32i.n	a13, a6, 20
2000b08a:	ffbf86        	j	2000af8c <main+0x8c>

2000b08d <main+0x18d>:
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:468
INLINE void HAL_EnableDCache(U32 ulMcuId)
{
    U32 ulBuf = 0;
    
    /* Dcache open */                                                           
    if (MCU0_ID == ulMcuId)
2000b08d:	d5bbe1        	l32r	a14, 2000077c <_stext+0x7c>
2000b090:	ffda86        	j	2000affe <main+0xfe>

2000b093 <main+0x193>:
	...

2000b094 <main+0x194>:
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:472
    {
        ulBuf |= 1 << 17; // wire RMCU0_RDCache_EN = REGGLB_40[17]; 
    }
    else if (MCU1_ID == ulMcuId)
2000b094:	d724e1        	l32r	a14, 20000d24 <_stext+0x624>
2000b097:	ffd8c6        	j	2000affe <main+0xfe>

2000b09a <main+0x19a>:
	...

2000b09c <_start>:
_start():
2000b09c:	000c      	movi.n	a0, 0
2000b09e:	d72c11        	l32r	a1, 20000d50 <_stext+0x650>
2000b0a1:	032c      	movi.n	a3, 32
2000b0a3:	13e630        	wsr.ps	a3
2000b0a6:	002010        	rsync

2000b0a9 <_clear_bss>:
2000b0a9:	d72a61        	l32r	a6, 20000d54 <_stext+0x654>
2000b0ac:	0678      	l32i.n	a7, a6, 0
2000b0ae:	07fc      	bnez.n	a7, 2000b0e2 <_clear_bss+0x39>
2000b0b0:	d72a61        	l32r	a6, 20000d58 <_stext+0x658>
2000b0b3:	d70f71        	l32r	a7, 20000cf0 <_stext+0x5f0>
2000b0b6:	080c      	movi.n	a8, 0
2000b0b8:	c07760        	sub	a7, a7, a6
2000b0bb:	417270        	srli	a7, a7, 2
2000b0be:	038776        	loop	a7, 2000b0c5 <_clear_bss+0x1c>
2000b0c1:	0689      	s32i.n	a8, a6, 0
2000b0c3:	664b      	addi.n	a6, a6, 4

2000b0c5 <_clear_bss+0x1c>:
2000b0c5:	03eb70        	rsr.prid	a7
2000b0c8:	fec772        	addi	a7, a7, -2
2000b0cb:	37dc      	bnez.n	a7, 2000b0e2 <_clear_bss+0x39>
2000b0cd:	d72361        	l32r	a6, 20000d5c <_stext+0x65c>
2000b0d0:	d72471        	l32r	a7, 20000d60 <_stext+0x660>
2000b0d3:	080c      	movi.n	a8, 0
2000b0d5:	c07760        	sub	a7, a7, a6
2000b0d8:	417270        	srli	a7, a7, 2
2000b0db:	038776        	loop	a7, 2000b0e2 <_clear_bss+0x39>
2000b0de:	0689      	s32i.n	a8, a6, 0
2000b0e0:	664b      	addi.n	a6, a6, 4

2000b0e2 <_clear_bss+0x39>:
2000b0e2:	ffe1c5        	call0	2000af00 <main>

2000b0e5 <_clear_bss+0x3c>:
2000b0e5:	0041f0        	break	1, 15
2000b0e8:	fffe46        	j	2000b0e5 <_clear_bss+0x3c>

2000b0eb <_clear_bss+0x42>:
	...

2000b0ec <READ_PS>:
READ_PS():
2000b0ec:	03e620        	rsr.ps	a2
2000b0ef:	f00d      	ret.n

2000b0f1 <READ_PS+0x5>:
2000b0f1:	000000                                        ...

2000b0f4 <rand>:
rand():
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\source/rand.c:26
2000b0f4:	d71d71        	l32r	a7, 20000d68 <_stext+0x668>
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\source/rand.c:29
2000b0f7:	d71b81        	l32r	a8, 20000d64 <_stext+0x664>
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\source/rand.c:26
2000b0fa:	f0c112        	addi	a1, a1, -16
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\source/rand.c:29
2000b0fd:	0888      	l32i.n	a8, a8, 0
2000b0ff:	0109      	s32i.n	a0, a1, 0
2000b101:	6cc8b2        	addi	a11, a8, 108
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\source/rand.c:30
2000b104:	70c8a2        	addi	a10, a8, 112
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\source/rand.c:40
2000b107:	680802        	l8ui	a0, a8, 104
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\source/rand.c:31
2000b10a:	74c892        	addi	a9, a8, 116
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\source/rand.c:40
2000b10d:	f0fc      	bnez.n	a0, 2000b150 <rand+0x5c>
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\source/rand.c:43
2000b10f:	d71751        	l32r	a5, 20000d6c <_stext+0x66c>
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\source/rand.c:42
2000b112:	1b2802        	l32i	a0, a8, 108
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\source/rand.c:43
2000b115:	820050        	mull	a0, a0, a5
2000b118:	720c      	movi.n	a2, 7
2000b11a:	800070        	add	a0, a0, a7
2000b11d:	07a276        	loopgtz	a2, 2000b128 <rand+0x34>
2000b120:	822050        	mull	a2, a0, a5
2000b123:	1b6802        	s32i	a0, a8, 108
2000b126:	027a      	add.n	a0, a2, a7

2000b128 <rand+0x34>:
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\source/rand.c:45
2000b128:	d71151        	l32r	a5, 20000d6c <_stext+0x66c>
2000b12b:	082d      	mov.n	a2, a8
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\source/rand.c:43
2000b12d:	1b6802        	s32i	a0, a8, 108
2000b130:	002c      	movi.n	a0, 32
2000b132:	0fa076        	loopgtz	a0, 2000b145 <rand+0x51>
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\source/rand.c:45
2000b135:	1b2802        	l32i	a0, a8, 108
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\source/rand.c:44
2000b138:	224b      	addi.n	a2, a2, 4
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\source/rand.c:45
2000b13a:	820050        	mull	a0, a0, a5
2000b13d:	007a      	add.n	a0, a0, a7
2000b13f:	1b6802        	s32i	a0, a8, 108
2000b142:	1c6202        	s32i	a0, a2, 112
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\source/rand.c:47
2000b145:	120c      	movi.n	a2, 1
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\source/rand.c:46
2000b147:	3c2832        	l32i	a3, a8, 240
2000b14a:	1c6832        	s32i	a3, a8, 112
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\source/rand.c:47
2000b14d:	684822        	s8i	a2, a8, 104

2000b150 <rand+0x5c>:
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\source/rand.c:49
2000b150:	d70781        	l32r	a8, 20000d6c <_stext+0x66c>
2000b153:	0b68      	l32i.n	a6, a11, 0
2000b155:	826680        	mull	a6, a6, a8
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\source/rand.c:55
2000b158:	d59031        	l32r	a3, 20000798 <_stext+0x98>
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\source/rand.c:49
2000b15b:	667a      	add.n	a6, a6, a7
2000b15d:	0b69      	s32i.n	a6, a11, 0
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\source/rand.c:50
2000b15f:	0a58      	l32i.n	a5, a10, 0
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\source/rand.c:55
2000b161:	0108      	l32i.n	a0, a1, 0
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\source/rand.c:50
2000b163:	445050        	extui	a5, a5, 0, 5
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\source/rand.c:51
2000b166:	a05590        	addx4	a5, a5, a9
2000b169:	0568      	l32i.n	a6, a5, 0
2000b16b:	0a69      	s32i.n	a6, a10, 0
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\source/rand.c:52
2000b16d:	0b48      	l32i.n	a4, a11, 0
2000b16f:	0549      	s32i.n	a4, a5, 0
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\source/rand.c:55
2000b171:	0a28      	l32i.n	a2, a10, 0
2000b173:	10c112        	addi	a1, a1, 16
2000b176:	102230        	and	a2, a2, a3
2000b179:	f00d      	ret.n

2000b17b <rand+0x87>:
	...

2000b17c <_init_reent>:
_init_reent():
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\tensilica/reent.c:42
2000b17c:	00a032        	movi	a3, 0
2000b17f:	f4a042        	movi	a4, 244
2000b182:	f0c112        	addi	a1, a1, -16
2000b185:	0161c2        	s32i	a12, a1, 4
2000b188:	006102        	s32i	a0, a1, 0
2000b18b:	02cd      	mov.n	a12, a2
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\tensilica/reent.c:43
2000b18d:	001bc5        	call0	2000b34c <memset>
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\tensilica/reent.c:47
2000b190:	d6f801        	l32r	a0, 20000d70 <_stext+0x670>
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\tensilica/reent.c:46
2000b193:	120c      	movi.n	a2, 1
2000b195:	1b6c22        	s32i	a2, a12, 108
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\tensilica/reent.c:47
2000b198:	1c09      	s32i.n	a0, a12, 4
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\tensilica/reent.c:48
2000b19a:	11c8      	l32i.n	a12, a1, 4
2000b19c:	0108      	l32i.n	a0, a1, 0
2000b19e:	10c112        	addi	a1, a1, 16
2000b1a1:	f00d      	ret.n

2000b1a3 <_init_reent+0x27>:
	...

2000b1a4 <_init_reent_bss>:
_init_reent_bss():
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\tensilica/reent.c:56
2000b1a4:	d6f321        	l32r	a2, 20000d70 <_stext+0x670>
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\tensilica/reent.c:54
2000b1a7:	d6f331        	l32r	a3, 20000d74 <_stext+0x674>
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\tensilica/reent.c:55
2000b1aa:	140c      	movi.n	a4, 1
2000b1ac:	1b6342        	s32i	a4, a3, 108
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\tensilica/reent.c:56
2000b1af:	1329      	s32i.n	a2, a3, 4
\build\tree\RF-2014.1_kuma\p4root\Xtensa\Target-libs\xclib\tensilica/reent.c:57
2000b1b1:	f00d      	ret.n

2000b1b3 <_init_reent_bss+0xf>:
	...

2000b1b4 <xthal_get_cacheattr>:
xthal_get_dcacheattr():
C:/././build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/include/xtensa/cacheattrasm.h:112
2000b1b4:	d6f151        	l32r	a5, 20000d78 <_stext+0x678>
2000b1b7:	020c      	movi.n	a2, 0
2000b1b9:	00a032        	movi	a3, 0

2000b1bc <xthal_get_cacheattr+0x8>:
2000b1bc:	335a      	add.n	a3, a3, a5
2000b1be:	50f340        	rdtlb1	a4, a3
2000b1c1:	002030        	dsync
2000b1c4:	1122c0        	slli	a2, a2, 4
2000b1c7:	344040        	extui	a4, a4, 0, 4
2000b1ca:	202240        	or	a2, a2, a4
2000b1cd:	ebb3f6        	bgeui	a3, 16, 2000b1bc <xthal_get_cacheattr+0x8>
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/hal/cache_asm.S:71
2000b1d0:	f00d      	ret.n

2000b1d2 <xthal_get_cacheattr+0x1e>:
	...

2000b1d4 <xthal_set_dcacheattr>:
xthal_set_dcacheattr():
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/hal/cache_asm.S:182
2000b1d4:	d6e951        	l32r	a5, 20000d78 <_stext+0x678>
2000b1d7:	030c      	movi.n	a3, 0
2000b1d9:	207220        	or	a7, a2, a2

2000b1dc <xthal_set_dcacheattr+0x8>:
2000b1dc:	344070        	extui	a4, a7, 0, 4
C:/././build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/include/xtensa/cacheattrasm.h:372
2000b1df:	50e340        	wdtlb	a4, a3
2000b1e2:	c03350        	sub	a3, a3, a5
2000b1e5:	417470        	srli	a7, a7, 4
2000b1e8:	f0b3f6        	bgeui	a3, 16, 2000b1dc <xthal_set_dcacheattr+0x8>
2000b1eb:	002030        	dsync
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/hal/cache_asm.S:183
2000b1ee:	f00d      	ret.n

2000b1f0 <__memcpy_aux>:
	...

2000b1f1 <__memcpy_aux+0x1>:
__memcpy_aux():
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:68
2000b1f1:	099476        	loopnez	a4, 2000b1fe <__memcpy_aux+0xe>
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:73
2000b1f4:	000362        	l8ui	a6, a3, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:74
2000b1f7:	331b      	addi.n	a3, a3, 1
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:75
2000b1f9:	004562        	s8i	a6, a5, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:76
2000b1fc:	551b      	addi.n	a5, a5, 1

2000b1fe <__memcpy_aux+0xe>:
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:80
2000b1fe:	f00d      	ret.n

2000b200 <__memcpy_aux+0x10>:
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:89
2000b200:	ed74b6        	bltui	a4, 7, 2000b1f1 <__memcpy_aux+0x1>
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:92
2000b203:	000362        	l8ui	a6, a3, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:93
2000b206:	331b      	addi.n	a3, a3, 1
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:94
2000b208:	ffc442        	addi	a4, a4, -1
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:95
2000b20b:	004562        	s8i	a6, a5, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:96
2000b20e:	01c552        	addi	a5, a5, 1
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:99
2000b211:	236517        	bbci	a5, 1, 2000b238 <memcpy+0x8>
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:104
2000b214:	d964b6        	bltui	a4, 6, 2000b1f1 <__memcpy_aux+0x1>
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:107
2000b217:	000362        	l8ui	a6, a3, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:108
2000b21a:	010372        	l8ui	a7, a3, 1
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:109
2000b21d:	332b      	addi.n	a3, a3, 2
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:110
2000b21f:	fec442        	addi	a4, a4, -2
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:111
2000b222:	004562        	s8i	a6, a5, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:112
2000b225:	014572        	s8i	a7, a5, 1
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:113
2000b228:	552b      	addi.n	a5, a5, 2
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:116
2000b22a:	000286        	j	2000b238 <memcpy+0x8>

2000b22d <__memcpy_aux+0x3d>:
2000b22d:	000000                                        ...

2000b230 <memcpy>:
memcpy():
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:126
2000b230:	025d      	mov.n	a5, a2
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:127
2000b232:	cae207        	bbsi	a2, 0, 2000b200 <__memcpy_aux+0x10>
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:128
2000b235:	dbe217        	bbsi	a2, 1, 2000b214 <__memcpy_aux+0x24>

2000b238 <memcpy+0x8>:
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:132
2000b238:	417440        	srli	a7, a4, 4
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:135
2000b23b:	018320        	slli	a8, a3, 30

2000b23e <memcpy+0xe>:
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:136
2000b23e:	05a856        	bnez	a8, 2000b29c <memcpy+0x6c>
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:140
2000b241:	159776        	loopnez	a7, 2000b25a <memcpy+0x2a>
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:146
2000b244:	0368      	l32i.n	a6, a3, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:147
2000b246:	1378      	l32i.n	a7, a3, 4
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:148
2000b248:	0569      	s32i.n	a6, a5, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:149
2000b24a:	2368      	l32i.n	a6, a3, 8
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:150
2000b24c:	1579      	s32i.n	a7, a5, 4
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:151
2000b24e:	3378      	l32i.n	a7, a3, 12
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:152
2000b250:	2569      	s32i.n	a6, a5, 8
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:153
2000b252:	10c332        	addi	a3, a3, 16
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:154
2000b255:	3579      	s32i.n	a7, a5, 12
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:155
2000b257:	10c552        	addi	a5, a5, 16

2000b25a <memcpy+0x2a>:
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:161
2000b25a:	0b6437        	bbci	a4, 3, 2000b269 <memcpy+0x39>
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:164
2000b25d:	0368      	l32i.n	a6, a3, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:165
2000b25f:	1378      	l32i.n	a7, a3, 4
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:166
2000b261:	338b      	addi.n	a3, a3, 8
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:167
2000b263:	0569      	s32i.n	a6, a5, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:168
2000b265:	1579      	s32i.n	a7, a5, 4
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:169
2000b267:	558b      	addi.n	a5, a5, 8

2000b269 <memcpy+0x39>:
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:171
2000b269:	07e427        	bbsi	a4, 2, 2000b274 <memcpy+0x44>
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:172
2000b26c:	14e417        	bbsi	a4, 1, 2000b284 <memcpy+0x54>
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:173
2000b26f:	21e407        	bbsi	a4, 0, 2000b294 <memcpy+0x64>
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:174
2000b272:	f00d      	ret.n

2000b274 <memcpy+0x44>:
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:178
2000b274:	0368      	l32i.n	a6, a3, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:179
2000b276:	334b      	addi.n	a3, a3, 4
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:180
2000b278:	0569      	s32i.n	a6, a5, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:181
2000b27a:	554b      	addi.n	a5, a5, 4
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:182
2000b27c:	04e417        	bbsi	a4, 1, 2000b284 <memcpy+0x54>
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:183
2000b27f:	11e407        	bbsi	a4, 0, 2000b294 <memcpy+0x64>
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:184
2000b282:	f00d      	ret.n

2000b284 <memcpy+0x54>:
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:187
2000b284:	001362        	l16ui	a6, a3, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:188
2000b287:	332b      	addi.n	a3, a3, 2
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:189
2000b289:	005562        	s16i	a6, a5, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:190
2000b28c:	552b      	addi.n	a5, a5, 2
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:191
2000b28e:	02e407        	bbsi	a4, 0, 2000b294 <memcpy+0x64>
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:192
2000b291:	f00d      	ret.n

2000b293 <memcpy+0x63>:
	...

2000b294 <memcpy+0x64>:
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:195
2000b294:	000362        	l8ui	a6, a3, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:196
2000b297:	004562        	s8i	a6, a5, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:199
2000b29a:	f00d      	ret.n

2000b29c <memcpy+0x6c>:
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:207
2000b29c:	ffa416        	beqz	a4, 2000b29a <memcpy+0x6a>

2000b29f <memcpy+0x6f>:
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:211
2000b29f:	402300        	ssa8l	a3
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:213
2000b2a2:	15be80        	extui	a11, a8, 30, 2
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:214
2000b2a5:	c033b0        	sub	a3, a3, a11
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:216
2000b2a8:	0368      	l32i.n	a6, a3, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:218
2000b2aa:	219776        	loopnez	a7, 2000b2cf <memcpy+0x9f>
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:224
2000b2ad:	1378      	l32i.n	a7, a3, 4
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:225
2000b2af:	2388      	l32i.n	a8, a3, 8
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:226
2000b2b1:	816760        	src	a6, a7, a6
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:227
2000b2b4:	0569      	s32i.n	a6, a5, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:228
2000b2b6:	3398      	l32i.n	a9, a3, 12
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:229
2000b2b8:	817870        	src	a7, a8, a7
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:230
2000b2bb:	1579      	s32i.n	a7, a5, 4
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:231
2000b2bd:	4368      	l32i.n	a6, a3, 16
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:232
2000b2bf:	818980        	src	a8, a9, a8
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:233
2000b2c2:	2589      	s32i.n	a8, a5, 8
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:234
2000b2c4:	10c332        	addi	a3, a3, 16
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:235
2000b2c7:	819690        	src	a9, a6, a9
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:236
2000b2ca:	3599      	s32i.n	a9, a5, 12
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:237
2000b2cc:	10c552        	addi	a5, a5, 16

2000b2cf <memcpy+0x9f>:
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:242
2000b2cf:	156437        	bbci	a4, 3, 2000b2e8 <memcpy+0xb8>
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:245
2000b2d2:	1378      	l32i.n	a7, a3, 4
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:246
2000b2d4:	2388      	l32i.n	a8, a3, 8
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:247
2000b2d6:	816760        	src	a6, a7, a6
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:248
2000b2d9:	0569      	s32i.n	a6, a5, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:249
2000b2db:	338b      	addi.n	a3, a3, 8
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:250
2000b2dd:	817870        	src	a7, a8, a7
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:251
2000b2e0:	1579      	s32i.n	a7, a5, 4
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:252
2000b2e2:	08c552        	addi	a5, a5, 8
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:253
2000b2e5:	206880        	or	a6, a8, a8

2000b2e8 <memcpy+0xb8>:
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:255
2000b2e8:	0c6427        	bbci	a4, 2, 2000b2f8 <memcpy+0xc8>
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:258
2000b2eb:	1378      	l32i.n	a7, a3, 4
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:259
2000b2ed:	334b      	addi.n	a3, a3, 4
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:260
2000b2ef:	816760        	src	a6, a7, a6
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:261
2000b2f2:	0569      	s32i.n	a6, a5, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:262
2000b2f4:	554b      	addi.n	a5, a5, 4
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:263
2000b2f6:	076d      	mov.n	a6, a7
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:266
2000b2f8:	33ba      	add.n	a3, a3, a11
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:268
2000b2fa:	06e417        	bbsi	a4, 1, 2000b304 <memcpy+0xd4>
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:269
2000b2fd:	18e407        	bbsi	a4, 0, 2000b319 <memcpy+0xe9>
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:270
2000b300:	f00d      	ret.n

2000b302 <memcpy+0xd2>:
	...

2000b304 <memcpy+0xd4>:
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:273
2000b304:	000362        	l8ui	a6, a3, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:274
2000b307:	010372        	l8ui	a7, a3, 1
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:275
2000b30a:	332b      	addi.n	a3, a3, 2
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:276
2000b30c:	004562        	s8i	a6, a5, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:277
2000b30f:	014572        	s8i	a7, a5, 1
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:278
2000b312:	552b      	addi.n	a5, a5, 2
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:279
2000b314:	01e407        	bbsi	a4, 0, 2000b319 <memcpy+0xe9>
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:280
2000b317:	f00d      	ret.n

2000b319 <memcpy+0xe9>:
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:283
2000b319:	000362        	l8ui	a6, a3, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:284
2000b31c:	004562        	s8i	a6, a5, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memcpy.S:285
2000b31f:	f00d      	ret.n

2000b321 <memcpy+0xf1>:
2000b321:	000000                                        ...

2000b324 <__memset_aux>:
	...

2000b325 <__memset_aux+0x1>:
__memset_aux():
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:58
2000b325:	049476        	loopnez	a4, 2000b32d <__memset_aux+0x9>
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:63
2000b328:	004532        	s8i	a3, a5, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:64
2000b32b:	551b      	addi.n	a5, a5, 1

2000b32d <__memset_aux+0x9>:
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:68
2000b32d:	f00d      	ret.n

2000b32f <__memset_aux+0xb>:
	...

2000b330 <__memset_aux+0xc>:
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:78
2000b330:	f184b6        	bltui	a4, 8, 2000b325 <__memset_aux+0x1>
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:81
2000b333:	004532        	s8i	a3, a5, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:82
2000b336:	551b      	addi.n	a5, a5, 1
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:83
2000b338:	440b      	addi.n	a4, a4, -1

2000b33a <__memset_aux+0x16>:
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:86
2000b33a:	266517        	bbci	a5, 1, 2000b364 <memset+0x18>

2000b33d <__memset_aux+0x19>:
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:91
2000b33d:	e484b6        	bltui	a4, 8, 2000b325 <__memset_aux+0x1>
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:94
2000b340:	005532        	s16i	a3, a5, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:95
2000b343:	552b      	addi.n	a5, a5, 2
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:96
2000b345:	fec442        	addi	a4, a4, -2
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:99
2000b348:	000606        	j	2000b364 <memset+0x18>

2000b34b <__memset_aux+0x27>:
	...

2000b34c <memset>:
memset():
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:110
2000b34c:	743030        	extui	a3, a3, 0, 8
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:111
2000b34f:	117380        	slli	a7, a3, 8
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:112
2000b352:	203370        	or	a3, a3, a7
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:113
2000b355:	117300        	slli	a7, a3, 16
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:114
2000b358:	203370        	or	a3, a3, a7
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:116
2000b35b:	205220        	or	a5, a2, a2
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:119
2000b35e:	cee207        	bbsi	a2, 0, 2000b330 <__memset_aux+0xc>
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:120
2000b361:	d8e217        	bbsi	a2, 1, 2000b33d <__memset_aux+0x19>

2000b364 <memset+0x18>:
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:124
2000b364:	417440        	srli	a7, a4, 4
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:128
2000b367:	0a9776        	loopnez	a7, 2000b375 <memset+0x29>
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:135
2000b36a:	0539      	s32i.n	a3, a5, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:136
2000b36c:	1539      	s32i.n	a3, a5, 4
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:137
2000b36e:	2539      	s32i.n	a3, a5, 8
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:138
2000b370:	3539      	s32i.n	a3, a5, 12
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:139
2000b372:	10c552        	addi	a5, a5, 16

2000b375 <memset+0x29>:
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:145
2000b375:	086437        	bbci	a4, 3, 2000b381 <memset+0x35>
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:148
2000b378:	006532        	s32i	a3, a5, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:149
2000b37b:	016532        	s32i	a3, a5, 4
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:150
2000b37e:	08c552        	addi	a5, a5, 8

2000b381 <memset+0x35>:
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:152
2000b381:	036427        	bbci	a4, 2, 2000b388 <memset+0x3c>
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:155
2000b384:	0539      	s32i.n	a3, a5, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:156
2000b386:	554b      	addi.n	a5, a5, 4
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:158
2000b388:	046417        	bbci	a4, 1, 2000b390 <memset+0x44>
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:161
2000b38b:	005532        	s16i	a3, a5, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:162
2000b38e:	552b      	addi.n	a5, a5, 2
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:164
2000b390:	026407        	bbci	a4, 0, 2000b396 <memset+0x4a>
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:167
2000b393:	004532        	s8i	a3, a5, 0
/build/tree/RF-2014.1_kuma/p4root/Xtensa/Target-libs/xclib/tensilica/memset.S:168
2000b396:	f00d      	ret.n

2000b398 <_xtos_syscall_handler>:
_xtos_syscall_handler():
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/xtos/exc-syscall-handler.S:88
2000b398:	03b130        	rsr.epc1	a3
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/xtos/exc-syscall-handler.S:94
2000b39b:	030120        	rsr.lend	a2
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/xtos/exc-syscall-handler.S:95
2000b39e:	333b      	addi.n	a3, a3, 3
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/xtos/exc-syscall-handler.S:96
2000b3a0:	0c9237        	bne	a2, a3, 2000b3b0 <_xtos_syscall_handler+0x18>
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/xtos/exc-syscall-handler.S:97
2000b3a3:	030220        	rsr.lcount	a2
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/xtos/exc-syscall-handler.S:98
2000b3a6:	628c      	beqz.n	a2, 2000b3b0 <_xtos_syscall_handler+0x18>
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/xtos/exc-syscall-handler.S:99
2000b3a8:	220b      	addi.n	a2, a2, -1
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/xtos/exc-syscall-handler.S:100
2000b3aa:	130220        	wsr.lcount	a2
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/xtos/exc-syscall-handler.S:101
2000b3ad:	030030        	rsr.lbeg	a3

2000b3b0 <_xtos_syscall_handler+0x18>:
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/xtos/exc-syscall-handler.S:102
2000b3b0:	5128      	l32i.n	a2, a1, 20
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/xtos/exc-syscall-handler.S:108
2000b3b2:	13b130        	wsr.epc1	a3
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/xtos/exc-syscall-handler.S:109
2000b3b5:	6138      	l32i.n	a3, a1, 24
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/xtos/exc-syscall-handler.S:184
2000b3b7:	f27c      	movi.n	a2, -1
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/xtos/exc-syscall-handler.S:185
2000b3b9:	01d112        	addmi	a1, a1, 0x100
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/xtos/exc-syscall-handler.S:186
2000b3bc:	003000        	rfe

2000b3bf <_xtos_syscall_handler+0x27>:
	...

2000b3c0 <xthal_dcache_all_invalidate>:
xthal_dcache_all_invalidate():
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/hal/cache_asm.S:367
2000b3c0:	022c      	movi.n	a2, 32
2000b3c2:	00a032        	movi	a3, 0
2000b3c5:	0e8276        	loop	a2, 2000b3d7 <xthal_dcache_all_invalidate+0x17>
2000b3c8:	007372        	dii	a3, 0
2000b3cb:	047372        	dii	a3, 16
2000b3ce:	087372        	dii	a3, 32
2000b3d1:	0c7372        	dii	a3, 48
2000b3d4:	40c332        	addi	a3, a3, 64

2000b3d7 <xthal_dcache_all_invalidate+0x17>:
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/hal/cache_asm.S:368
2000b3d7:	f00d      	ret.n

2000b3d9 <xthal_dcache_all_invalidate+0x19>:
2000b3d9:	000000                                        ...

2000b3dc <xthal_dcache_all_unlock>:
xthal_dcache_all_unlock():
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/hal/cache_asm.S:463
2000b3dc:	80a022        	movi	a2, 128
2000b3df:	030c      	movi.n	a3, 0
2000b3e1:	0e8276        	loop	a2, 2000b3f3 <xthal_dcache_all_unlock+0x17>
2000b3e4:	037382        	diu	a3, 0
2000b3e7:	137382        	diu	a3, 16
2000b3ea:	237382        	diu	a3, 32
2000b3ed:	337382        	diu	a3, 48
2000b3f0:	40c332        	addi	a3, a3, 64

2000b3f3 <xthal_dcache_all_unlock+0x17>:
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/hal/cache_asm.S:464
2000b3f3:	f00d      	ret.n

2000b3f5 <xthal_dcache_all_unlock+0x19>:
2000b3f5:	000000                                        ...

2000b3f8 <xthal_dcache_sync>:
xthal_dcache_sync():
/build/tree/RF-2014.1_kuma/tools/swtools-MSWin32-x86/xtensa-elf/src/hal/cache_asm.S:899
2000b3f8:	f00d      	ret.n

Disassembly of section .mcu1dram.literal:

2000b3fc <.mcu1dram.literal>:
2000b3fc:	1ffa1200                                ....

2000b400 <.mcu1dram.literal+0x4>:
2000b400:	06400000 400a1f24 bfbe8000 005ffffb     ..@.$..@......_.
2000b410:	400a22a4 005ffffc 400a226c 400a8110     .".@.._.l".@...@

Disassembly of section .mcu1dram.text:

2000b420 <L2_PBIT_Set_TLC>:
L2_PBIT_Set_TLC():
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:383
{
    return pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bTLC;
}
void MCU1_DRAM_TEXT L2_PBIT_Set_TLC(U8 ucSuperPu, U8 ucLunInSuperPu, U16 PBN, U8 bTrue)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bTLC = bTrue;
2000b420:	fff791        	l32r	a9, 2000b3fc <_text_end+0x2>
2000b423:	1182e0        	slli	a8, a2, 2
2000b426:	24a272        	movi	a7, 0x224
2000b429:	d17730        	mul16s	a7, a7, a3
2000b42c:	889a      	add.n	a8, a8, a9
2000b42e:	7c2882        	l32i	a8, a8, 0x1f0
2000b431:	747a      	add.n	a7, a4, a7
2000b433:	b07780        	addx8	a7, a7, a8
2000b436:	1768      	l32i.n	a6, a7, 4
2000b438:	60c564        	insbits	a6, a5, 12, 12
2000b43b:	1769      	s32i.n	a6, a7, 4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:384
}
2000b43d:	f00d      	ret.n

2000b43f <L2_PBIT_Set_TLC+0x1f>:
	...

2000b440 <TEST_NfcCheckListAllocDram>:
TEST_NfcCheckListAllocDram():
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:56
GLOBAL U32 l_ulDramSize = 0;
/*------------------------------------------------------------------------------
    MAIN FUNCTIONS
------------------------------------------------------------------------------*/
void MCU1_DRAM_TEXT TEST_NfcCheckListAllocDram(U32 *pFreeDRAMBase)
{
2000b440:	f0c112        	addi	a1, a1, -16
2000b443:	21c9      	s32i.n	a12, a1, 8
2000b445:	1109      	s32i.n	a0, a1, 4
2000b447:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:61
    U32 ulDramOffSet = 0;
    U32 ulFreeBase, ulBaseDram, ulDramSize;
        
    /*  allocation share DRAM memory for checklist  */
    ulFreeBase = *pFreeDRAMBase;
2000b449:	0208      	l32i.n	a0, a2, 0
2000b44b:	0109      	s32i.n	a0, a1, 0
2000b44d:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:62
    COM_MemAddr16DWAlign(&ulFreeBase);
2000b44f:	ff0a85        	call0	2000a4f8 <COM_MemAddr16DWAlign>
2000b452:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:68
#ifdef DCACHE
    ulDramOffSet = DRAM_HIGH_ADDR_OFFSET;
#endif   

    g_pFileBaseInDram = (U32*)(ulFreeBase + ulDramOffSet);
    COM_MemIncBaseAddr(&ulFreeBase, CHECK_LIST_DRAM_SZ);
2000b454:	ffeb31        	l32r	a3, 2000b400 <_text_end+0x6>
2000b457:	ff0985        	call0	2000a4f0 <COM_MemIncBaseAddr>
2000b45a:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:69
    COM_MemAddr16DWAlign(&ulFreeBase);
2000b45c:	ff0985        	call0	2000a4f8 <COM_MemAddr16DWAlign>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:74

    l_ulBaseDram = DRAM_DATA_BUFF_MCU1_BASE;
    l_ulDramSize = DATA_BUFF_MCU1_SIZE;
    
    ASSERT((ulFreeBase - ulDramSize) <= ulDramSize);
2000b45f:	0168      	l32i.n	a6, a1, 0
2000b461:	c02600        	sub	a2, a6, a0
2000b464:	243027        	bltu	a0, a2, 2000b48c <TEST_NfcCheckListAllocDram+0x4c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:76
    
    DBG_Printf("NFC Alloc checklist files Dram size %d MB, Rsvd %d MB.\n"
2000b467:	0c38      	l32i.n	a3, a12, 0
2000b469:	ffe621        	l32r	a2, 2000b404 <_text_end+0xa>
2000b46c:	c04360        	sub	a4, a3, a6
2000b46f:	404a      	add.n	a4, a0, a4
2000b471:	c03630        	sub	a3, a6, a3
2000b474:	b53430        	extui	a3, a3, 20, 12
2000b477:	b54440        	extui	a4, a4, 20, 12
2000b47a:	ff7e85        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:79
    ,(ulFreeBase - *pFreeDRAMBase)/(1024*1024), (ulDramSize - (ulFreeBase - *pFreeDRAMBase))/(1024*1024));

    *pFreeDRAMBase = ulFreeBase;
2000b47d:	0148      	l32i.n	a4, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:80
}
2000b47f:	1108      	l32i.n	a0, a1, 4
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:79
    ASSERT((ulFreeBase - ulDramSize) <= ulDramSize);
    
    DBG_Printf("NFC Alloc checklist files Dram size %d MB, Rsvd %d MB.\n"
    ,(ulFreeBase - *pFreeDRAMBase)/(1024*1024), (ulDramSize - (ulFreeBase - *pFreeDRAMBase))/(1024*1024));

    *pFreeDRAMBase = ulFreeBase;
2000b481:	0c49      	s32i.n	a4, a12, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:80
}
2000b483:	21c8      	l32i.n	a12, a1, 8
2000b485:	10c112        	addi	a1, a1, 16
2000b488:	f00d      	ret.n

2000b48a <TEST_NfcCheckListAllocDram+0x4a>:
	...

2000b48c <TEST_NfcCheckListAllocDram+0x4c>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcCheckList.c:74
    COM_MemAddr16DWAlign(&ulFreeBase);

    l_ulBaseDram = DRAM_DATA_BUFF_MCU1_BASE;
    l_ulDramSize = DATA_BUFF_MCU1_SIZE;
    
    ASSERT((ulFreeBase - ulDramSize) <= ulDramSize);
2000b48c:	ffff06        	j	2000b48c <TEST_NfcCheckListAllocDram+0x4c>

2000b48f <TEST_NfcCheckListAllocDram+0x4f>:
	...

2000b490 <L2_SharedMemMap>:
L2_SharedMemMap():
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:267

    return;
}

void MCU1_DRAM_TEXT L2_SharedMemMap(SUBSYSTEM_MEM_BASE * pFreeMemBase)
{    
2000b490:	f0c112        	addi	a1, a1, -16
2000b493:	11c9      	s32i.n	a12, a1, 4
2000b495:	0109      	s32i.n	a0, a1, 0
2000b497:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:268
    L2_SharedDSRAM1MemMap(&pFreeMemBase->ulFreeSRAM1SharedBase);
2000b499:	14c222        	addi	a2, a2, 20
2000b49c:	fef885        	call0	2000a428 <L2_SharedDSRAM1MemMap..PD_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:269
    L2_SharedOTFBSsuMemMap(&pFreeMemBase->ulSsuInOtfbSharedBase);
2000b49f:	28cc22        	addi	a2, a12, 40
2000b4a2:	fef085        	call0	2000a3ac <L2_SharedOTFBSsuMemMap..AE_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:270
    L2_SharedOTFBRedMemMap(&pFreeMemBase->ulRedInOtfbSharedBase);
2000b4a5:	20cc22        	addi	a2, a12, 32
2000b4a8:	feee85        	call0	2000a394 <L2_SharedOTFBRedMemMap..BE_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:271
    L2_SharedDRAMRedMemMap(&pFreeMemBase->ulRedInDramSharedBase);
2000b4ab:	1ccc22        	addi	a2, a12, 28
2000b4ae:	fee705        	call0	2000a320 <L2_SharedDRAMRedMemMap..CE_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:272
    L2_Shared16DWAlignDramMemMap(&pFreeMemBase->ulFreeDRAMSharedBase);
2000b4b1:	18ccc2        	addi	a12, a12, 24
2000b4b4:	0c2d      	mov.n	a2, a12
2000b4b6:	fed9c5        	call0	2000a254 <L2_Shared16DWAlignDramMemMap..DE_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:273
    L2_SharedBuffAlignDramMemMap(&pFreeMemBase->ulFreeDRAMSharedBase);
2000b4b9:	0c2d      	mov.n	a2, a12
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:274
    return;
2000b4bb:	11c8      	l32i.n	a12, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:273
    L2_SharedDSRAM1MemMap(&pFreeMemBase->ulFreeSRAM1SharedBase);
    L2_SharedOTFBSsuMemMap(&pFreeMemBase->ulSsuInOtfbSharedBase);
    L2_SharedOTFBRedMemMap(&pFreeMemBase->ulRedInOtfbSharedBase);
    L2_SharedDRAMRedMemMap(&pFreeMemBase->ulRedInDramSharedBase);
    L2_Shared16DWAlignDramMemMap(&pFreeMemBase->ulFreeDRAMSharedBase);
    L2_SharedBuffAlignDramMemMap(&pFreeMemBase->ulFreeDRAMSharedBase);
2000b4bd:	fecf85        	call0	2000a1b8 <L2_SharedBuffAlignDramMemMap..EE_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:274
    return;
2000b4c0:	0108      	l32i.n	a0, a1, 0
2000b4c2:	10c112        	addi	a1, a1, 16
2000b4c5:	f00d      	ret.n

2000b4c7 <L2_SharedMemMap+0x37>:
	...

2000b4c8 <L1_SharedMemMap>:
L1_SharedMemMap():
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:245
    return;
}


void MCU1_DRAM_TEXT L1_SharedMemMap(SUBSYSTEM_MEM_BASE * pFreeMemBase)
{
2000b4c8:	f0c112        	addi	a1, a1, -16
2000b4cb:	0261c2        	s32i	a12, a1, 8
2000b4ce:	1109      	s32i.n	a0, a1, 4
2000b4d0:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:246
    U32 ulFreeBase = pFreeMemBase->ulFreeDRAMSharedBase;
2000b4d2:	6208      	l32i.n	a0, a2, 24
2000b4d4:	0109      	s32i.n	a0, a1, 0
2000b4d6:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:247
    COM_MemAddr16DWAlign(&ulFreeBase);
2000b4d8:	ff01c5        	call0	2000a4f8 <COM_MemAddr16DWAlign>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:249
    
    g_pSubSystemDevParamPage = (DEVICE_PARAM_PAGE *)ulFreeBase;
2000b4db:	ffc831        	l32r	a3, 2000b3fc <_text_end+0x2>
2000b4de:	0128      	l32i.n	a2, a1, 0
2000b4e0:	196322        	s32i	a2, a3, 100
2000b4e3:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:250
    COM_MemIncBaseAddr(&ulFreeBase, sizeof(DEVICE_PARAM_PAGE));
2000b4e5:	60a032        	movi	a3, 96
2000b4e8:	ff0045        	call0	2000a4f0 <COM_MemIncBaseAddr>
2000b4eb:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:251
    COM_MemAddr16DWAlign(&ulFreeBase);
2000b4ed:	ff0085        	call0	2000a4f8 <COM_MemAddr16DWAlign>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:253
    
    if (ulFreeBase - DRAM_DATA_BUFF_MCU12_BASE >= DRAM_BUFF_MCU12_SIZE)
2000b4f0:	ffc651        	l32r	a5, 2000b408 <_text_end+0xe>
2000b4f3:	0108      	l32i.n	a0, a1, 0
2000b4f5:	ffc541        	l32r	a4, 2000b40c <_text_end+0x12>
2000b4f8:	505a      	add.n	a5, a0, a5
2000b4fa:	2b3457        	bltu	a4, a5, 2000b529 <L1_SharedMemMap+0x61>

2000b4fd <L1_SharedMemMap+0x35>:
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
    20141028    Gavin   change attribute to "INLINE"
------------------------------------------------------------------------------*/
INLINE U32 HAL_GetMcuId(void)
{
    U32 ulMcuId;
    ulMcuId = XT_RSR_PRID();
2000b4fd:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:259
    {
        DBG_Printf("MCU#%d Shared Dram Mem OverFlow in L1_SharedMemMap.\n", HAL_GetMcuId());
        DBG_Getch();
    }

    DBG_Printf("MCU#%d L1 allocate the shared Dram size 0x%x KB, Rsvd 0x%x KB\n", HAL_GetMcuId(), (ulFreeBase-pFreeMemBase->ulFreeDRAMSharedBase)/1024, (DRAM_BUFF_MCU12_SIZE - (ulFreeBase-pFreeMemBase->ulFreeDRAMSharedBase))/1024);
2000b500:	ffc421        	l32r	a2, 2000b410 <_text_end+0x16>
2000b503:	062c42        	l32i	a4, a12, 24
2000b506:	ffc361        	l32r	a6, 2000b414 <_text_end+0x1a>
2000b509:	c05400        	sub	a5, a4, a0
2000b50c:	805560        	add	a5, a5, a6
2000b50f:	c04040        	sub	a4, a0, a4
2000b512:	414a40        	srli	a4, a4, 10
2000b515:	415a50        	srli	a5, a5, 10
2000b518:	ff7485        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:261
    
    pFreeMemBase->ulFreeDRAMSharedBase = ulFreeBase;
2000b51b:	002152        	l32i	a5, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:263

    return;
2000b51e:	1108      	l32i.n	a0, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:261
        DBG_Getch();
    }

    DBG_Printf("MCU#%d L1 allocate the shared Dram size 0x%x KB, Rsvd 0x%x KB\n", HAL_GetMcuId(), (ulFreeBase-pFreeMemBase->ulFreeDRAMSharedBase)/1024, (DRAM_BUFF_MCU12_SIZE - (ulFreeBase-pFreeMemBase->ulFreeDRAMSharedBase))/1024);
    
    pFreeMemBase->ulFreeDRAMSharedBase = ulFreeBase;
2000b520:	6c59      	s32i.n	a5, a12, 24
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:263

    return;
2000b522:	21c8      	l32i.n	a12, a1, 8
2000b524:	10c112        	addi	a1, a1, 16
2000b527:	f00d      	ret.n

2000b529 <L1_SharedMemMap+0x61>:
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
2000b529:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:255
    COM_MemIncBaseAddr(&ulFreeBase, sizeof(DEVICE_PARAM_PAGE));
    COM_MemAddr16DWAlign(&ulFreeBase);
    
    if (ulFreeBase - DRAM_DATA_BUFF_MCU12_BASE >= DRAM_BUFF_MCU12_SIZE)
    {
        DBG_Printf("MCU#%d Shared Dram Mem OverFlow in L1_SharedMemMap.\n", HAL_GetMcuId());
2000b52c:	ffbb21        	l32r	a2, 2000b418 <_text_end+0x1e>
2000b52f:	ff7345        	call0	2000ac64 <dbg_printf>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:256
        DBG_Getch();
2000b532:	ffba01        	l32r	a0, 2000b41c <_text_end+0x22>
2000b535:	0000c0        	callx0	a0
2000b538:	0108      	l32i.n	a0, a1, 0
2000b53a:	ffefc6        	j	2000b4fd <L1_SharedMemMap+0x35>

Disassembly of section .rodata:

400a0000 <__switchjump_table_xp_temp_9_1049_24-0xa0>:
400a0000:	00000000                                ....

400a0004 <__switchjump_table_xp_temp_9_1049_24-0x9c>:
	...

400a0018 <__switchjump_table_xp_temp_9_1049_24-0x88>:
	...

400a0019 <__switchjump_table_xp_temp_9_1049_24-0x87>:
	...

400a0024 <__switchjump_table_xp_temp_9_1049_24-0x7c>:
	...

400a0025 <__switchjump_table_xp_temp_9_1049_24-0x7b>:
	...

400a0034 <__switchjump_table_xp_temp_9_1049_24-0x6c>:
	...

400a0035 <__switchjump_table_xp_temp_9_1049_24-0x6b>:
400a0035:	00000000 00000000                                .......

400a003c <__switchjump_table_xp_temp_9_1049_24-0x64>:
	...

400a003d <__switchjump_table_xp_temp_9_1049_24-0x63>:
400a003d:	00000000 00000000                                .......

400a0044 <__switchjump_table_xp_temp_9_1049_24-0x5c>:
	...

400a0045 <__switchjump_table_xp_temp_9_1049_24-0x5b>:
400a0045:	00000000 00000000                                .......

400a004c <__switchjump_table_xp_temp_9_1049_24-0x54>:
	...

400a004d <__switchjump_table_xp_temp_9_1049_24-0x53>:
400a004d:	00000000 00000000                                .......

400a0054 <__switchjump_table_xp_temp_9_1049_24-0x4c>:
	...

400a0055 <__switchjump_table_xp_temp_9_1049_24-0x4b>:
400a0055:	00000000 00000000                                .......

400a005c <__switchjump_table_xp_temp_9_1049_24-0x44>:
	...

400a005d <__switchjump_table_xp_temp_9_1049_24-0x43>:
400a005d:	00000000 00000000                                .......

400a0064 <__switchjump_table_xp_temp_9_1049_24-0x3c>:
	...

400a0065 <__switchjump_table_xp_temp_9_1049_24-0x3b>:
400a0065:	00000000 00000000                                .......

400a006c <__switchjump_table_xp_temp_9_1049_24-0x34>:
	...

400a006d <__switchjump_table_xp_temp_9_1049_24-0x33>:
400a006d:	00000000 00000000                                .......

400a0074 <__switchjump_table_xp_temp_9_1049_24-0x2c>:
	...

400a0075 <__switchjump_table_xp_temp_9_1049_24-0x2b>:
	...

400a0090 <__switchjump_table_xp_temp_9_1049_24-0x10>:
	...

400a0091 <__switchjump_table_xp_temp_9_1049_24-0xf>:
	...

400a00a0 <__switchjump_table_xp_temp_9_1049_24>:
400a00a0:	200098a0 20009aa9 20009a9a 20009a80     ... ... ... ... 
400a00b0:	20009a6e 20009a5e 20009a4e 20009a3e     n.. ^.. N.. >.. 
400a00c0:	200099be 200099ae 2000999f 20009941     ... ... ... A.. 
400a00d0:	20009855 200098cd 200098bb              U.. ... ... 

400a00dc <__switchjump_table_xp_temp_9_1049_24+0x3c>:
400a00dc:	00000000                                ....

400a00e0 <__switchjump_table_xp_temp_9_1049_24+0x40>:
	...

400a00e1 <__switchjump_table_xp_temp_9_1049_24+0x41>:
400a00e1:	00000000 00000000                                .......

400a00e8 <__switchjump_table_xp_temp_9_1049_24+0x48>:
	...

400a00e9 <__switchjump_table_xp_temp_9_1049_24+0x49>:
	...

400a0100 <.rodata_symbol_1482204275>:
.rodata_symbol_1482204275():
400a0100:	535f334c 61636570 303a6c69 0a782578     L3_Specail:0x%x.
	...

400a0111 <.rodata_symbol_1482204275+0x11>:
400a0111:	000000                                        ...

400a0114 <.rodata_symbol_1482204275+0x14>:
400a0114:	415f334c 74706164 20317265 78257830     L3_Adapter1 0x%x
400a0124:	0000000a                                         ..

400a0126 <.rodata_symbol_1482204275+0x26>:
	...

400a0128 <.rodata_symbol_1482204275+0x28>:
400a0128:	415f334c 74706164 20327265 78257830     L3_Adapter2 0x%x
400a0138:	0000000a                                         ..

400a013a <.rodata_symbol_1482204275+0x3a>:
	...

400a013c <.rodata_symbol_1482204275+0x3c>:
400a013c:	535f334c 6d617263 53656c62 302e7465     L3_ScrambleSet.0
400a014c:	2e782578 0000000a                                x%x...

400a0152 <.rodata_symbol_1482204275+0x52>:
	...

400a0154 <.rodata_symbol_1482204275+0x54>:
400a0154:	20737453 6d746942 54207061 20657079     Sts Bitmap Type 
400a0164:	45206425 726f7272 00000a2e                       %d Error...

400a016f <.rodata_symbol_1482204275+0x6f>:
	...

400a0170 <.rodata_symbol_1482204275+0x70>:
400a0170:	42627241 616d7469 79542070 45206570     ArbBitmap Type E
400a0180:	726f7272 2e642520 0000000a                       rror %d...

400a018a <.rodata_symbol_1482204275+0x8a>:
	...

400a018c <.rodata_symbol_1482204275+0x8c>:
400a018c:	6e754c54 46206425 54646d43 25657079     TLun%d FCmdType%
400a019c:	72452064 2e726f72 0000000a                       d Error...

400a01a6 <.rodata_symbol_1482204275+0xa6>:
	...

400a01a8 <l_kXorStripeIdBits_690>:
400a01a8:	04                                                  .

400a01a9 <l_kXorProtectRatio_698>:
400a01a9:	04                                                  .

400a01aa <l_kXorProtectRatio_698+0x1>:
	...

400a01ab <l_kXorProtectRatio_698+0x2>:
	...

400a01ac <l_kXorProtectRatio_698+0x3>:
	...

400a01ad <l_kXorProtectRatio_698+0x4>:
400a01ad:	00000000 00000000                                .......

400a01b4 <l_kXorProtectRatio_698+0xb>:
400a01b4:	00000000                                ....

400a01b8 <l_kXorProtectRatio_698+0xf>:
	...

400a01c0 <l_kXorProtectRatio_698+0x17>:
400a01c0:	00000000                                ....

400a01c4 <l_kXorProtectRatio_698+0x1b>:
	...

400a01d0 <l_kXorProtectRatio_698+0x27>:
	...

400a01d1 <l_kXorProtectRatio_698+0x28>:
400a01d1:	00000000 00000000                                .......

400a01d8 <l_kXorProtectRatio_698+0x2f>:
	...

400a01d9 <l_kXorProtectRatio_698+0x30>:
400a01d9:	00000000 00000000                                .......

400a01e0 <l_kXorProtectRatio_698+0x37>:
	...

400a01e2 <l_kXorProtectRatio_698+0x39>:
	...

400a01f8 <l_kXorProtectRatio_698+0x4f>:
	...

400a01f9 <l_kXorProtectRatio_698+0x50>:
400a01f9:	00000000 00000000                                .......

400a0200 <l_kXorProtectRatio_698+0x57>:
	...

400a0201 <l_kXorProtectRatio_698+0x58>:
400a0201:	00000000 00000000                                .......

400a0208 <l_kXorProtectRatio_698+0x5f>:
	...

400a0209 <l_kXorProtectRatio_698+0x60>:
400a0209:	00000000 00000000                                .......

400a0210 <l_aSetInt>:
	...
400a0228:	00000001 00000004 00000000 00000010     ................
400a0238:	00000000 00000040 00000000 00000100     ....@...........
400a0248:	00000400 00000000                       ........

400a0250 <l_aClearInt>:
	...
400a0268:	00000002 00000008 00000000 00000020     ............ ...
400a0278:	00000000 00000080 00000000 00000200     ................
400a0288:	00000800 00000000                       ........

400a0290 <mc>:
400a0290:	33323130 37363534 62613938 66656463     0123456789abcdef
	...

400a02a1 <mc+0x11>:
	...

400a02b0 <l_aCodeWordCntValueSets_1314>:
400a02b0:	08040201 40302010 20646461 696e6966     ..... 0@add fini
400a02c0:	73206873 6f746365 6f632072 20746e75     sh sector count 
400a02d0:	2075636d 65206469 726f7272 0000000a     mcu id error....
400a02e0:	6e756c54 20642520 6f727265 00000a72     Tlun %d error...
400a02f0:	204e4250 20642520 6f727265 00000a72     PBN  %d error...
400a0300:	6e616c70 64252065 72726520 000a726f     plane %d error..
400a0310:	33204d49 4c542d44 6f642043 746f6e20     IM 3D-TLC do not
400a0320:	70757320 74726f70 746e6920 616e7265      support interna
400a0330:	6f63206c 000a7970 20746547 65707075     l copy..Get uppe
400a0340:	61702072 65206567 726f7272 0a212121     r page error!!!.
400a0350:	00000000 5f4c4148 45414d44 4d6c6553     ....HAL_DMAESelM
400a0360:	203a5543 20746567 2055434d 25204449     CU: get MCU ID %
400a0370:	72652064 00726f72 204e4250 646e6962     d error.PBN bind
400a0380:	20676e69 6c626174 6f6e2065 65722074     ing table not re
400a0390:	0a796461 00000000 61746146 7245206c     ady.....Fatal Er
400a03a0:	2c726f72 55434d20 20642520 5f474244     ror, MCU %d DBG_
400a03b0:	63746547 21212168 0000000a 68506375     Getch!!!....ucPh
400a03c0:	20755079 69207369 6c61766e 000a6469     yPu is invalid..
400a03d0:	253d5550 4c472064 38325f42 0000000a     PU=%d GLB_28....
400a03e0:	5f4c4148 45414d44 56746553 65756c61     HAL_DMAESetValue
400a03f0:	72617020 74656d61 65207265 726f7272      parameter error
400a0400:	6c75203a 41736544 3d726464 78257830     : ulDesAddr=0x%x
400a0410:	6c75202c 426e654c 3d657479 78257830     , ulLenByte=0x%x
400a0420:	0000000a 475f334c 68507465 67615079     ....L3_GetPhyPag
400a0430:	30202e65 0a782578 00000000 656e694c     e. 0x%x.....Line
400a0440:	002e6425 535f324c 61655345 42686372     %d..L2_SESearchB
400a0450:	6b636f6c 6c75203a 72616553 61436863     lock: ulSearchCa
400a0460:	3d206573 2c642520 52524520 0a21524f     se = %d, ERROR!.
400a0470:	00000000 6e754c54 42206425 64256b6c     ....TLun%d Blk%d
400a0480:	2064255f 65676150 45206425 2d487478     _%d Page%d ExtH-
400a0490:	74697257 73614c65 67615074 61462d65     WriteLastPage-Fa
400a04a0:	000a6c69 6e754c54 42206425 64256b6c     il..TLun%d Blk%d
400a04b0:	2064255f 65676150 45206425 2d487478     _%d Page%d ExtH-
400a04c0:	74697257 73614c65 67615074 75532d65     WriteLastPage-Su
400a04d0:	73656363 00000a73 48747845 69725720     ccess...ExtH Wri
400a04e0:	614c6574 61507473 53206567 74536275     teLastPage SubSt
400a04f0:	20656761 6f727245 78302e72 000a7825     age Error.0x%x..
400a0500:	6e754c54 42206425 64256b6c 5f64255f     TLun%d Blk%d_%d_
400a0510:	50206425 25656761 64255f64 74784520     %d Page%d_%d Ext
400a0520:	72572d48 4c657469 50747361 2d656761     H-WriteLastPage-
400a0530:	656e6f44 0000000a 6e754c54 42206425     Done....TLun%d B
400a0540:	64256b6c 5f64255f 50206425 25656761     lk%d_%d_%d Page%
400a0550:	64255f64 74784520 70432d48 74614479     d_%d ExtH-CpyDat
400a0560:	74532d61 0a747261 00000000 6e754c54     a-Start.....TLun
400a0570:	42206425 64256b6c 5f64255f 50206425     %d Blk%d_%d_%d P
400a0580:	25656761 64255f64 74784520 70432d48     age%d_%d ExtH-Cp
400a0590:	74614479 6c412d61 46636f6c 0a6c6961     yData-AllocFail.
400a05a0:	00000000 6e754c54 42206425 64256b6c     ....TLun%d Blk%d
400a05b0:	2064255f 65676150 45206425 2d487478     _%d Page%d ExtH-
400a05c0:	44797043 2d617461 452d6452 7974706d     CpyData-Rd-Empty
400a05d0:	65676150 0000000a 6e754c54 42206425     Page....TLun%d B
400a05e0:	64256b6c 2064255f 65676150 45206425     lk%d_%d Page%d E
400a05f0:	2d487478 44797043 2d617461 462d6452     xtH-CpyData-Rd-F
400a0600:	0a6c6961 00000000 6e754c54 42206425     ail.....TLun%d B
400a0610:	64256b6c 2064255f 65676150 45206425     lk%d_%d Page%d E
400a0620:	2d487478 44797043 2d617461 462d7257     xtH-CpyData-Wr-F
400a0630:	0a6c6961 00000000 6e754c54 42206425     ail.....TLun%d B
400a0640:	64256b6c 2064255f 65676150 45206425     lk%d_%d Page%d E
400a0650:	2d487478 44797043 2d617461 442d7257     xtH-CpyData-Wr-D
400a0660:	0a656e6f 00000000 79706f43 61746144     one.....CopyData
400a0670:	61745320 45206567 726f7272 2578302e      Stage Error.0x%
400a0680:	00000a78 6e754c54 42206425 64256b6c     x...TLun%d Blk%d
400a0690:	5f64255f 50206425 25656761 64255f64     _%d_%d Page%d_%d
400a06a0:	74784520 70432d48 74614479 69462d61      ExtH-CpyData-Fi
400a06b0:	6873696e 0000000a 6e754c54 42206425     nish....TLun%d B
400a06c0:	64256b6c 2064255f 65676150 255f6425     lk%d_%d Page%d_%
400a06d0:	6d432064 70795464 5f642565 4c206425     d CmdType%d_%d L
400a06e0:	303d4142 20782578 48747845 4752505f     BA=0x%x ExtH_PRG
400a06f0:	61745320 000a7472 6e754c54 42206425      Start..TLun%d B
400a0700:	64256b6c 2064255f 65676150 255f6425     lk%d_%d Page%d_%
400a0710:	6d432064 70795464 5f642565 4c206425     d CmdType%d_%d L
400a0720:	303d4142 20782578 48747845 4752505f     BA=0x%x ExtH_PRG
400a0730:	6c6c4120 6c42636f 64255b6b 6425202c      AllocBlk[%d, %d
400a0740:	00000a5d 6e754c54 42206425 64256b6c     ]...TLun%d Blk%d
400a0750:	2064255f 65676150 255f6425 6d432064     _%d Page%d_%d Cm
400a0760:	70795464 5f642565 53206425 61526365     dType%d_%d SecRa
400a0770:	3d65676e 255f6425 64255f64 41424c20     nge=%d_%d_%d LBA
400a0780:	2578303d 78452078 505f4874 43204752     =0x%x ExtH_PRG C
400a0790:	4479706f 20617461 6c696146 0000000a     opyData Fail....
400a07a0:	6e754c54 42206425 64256b6c 2064255f     TLun%d Blk%d_%d 
400a07b0:	65676150 255f6425 6d432064 70795464     Page%d_%d CmdTyp
400a07c0:	5f642565 4c206425 303d4142 20782578     e%d_%d LBA=0x%x 
400a07d0:	48747845 4752505f 706f4320 74614479     ExtH_PRG CopyDat
400a07e0:	75532061 73656363 64255b73 206f7420     a Success[%d to 
400a07f0:	0a5d6425 00000000 6e754c54 42206425     %d].....TLun%d B
400a0800:	64256b6c 2064255f 65676150 255f6425     lk%d_%d Page%d_%
400a0810:	6d432064 70795464 5f642565 4c206425     d CmdType%d_%d L
400a0820:	303d4142 20782578 48747845 4752505f     BA=0x%x ExtH_PRG
400a0830:	69725720 614c6574 61507473 46206567      WriteLastPage F
400a0840:	206c6961 2064255b 25206f74 000a5d64     ail [%d to %d]..
400a0850:	6e754c54 42206425 64256b6c 2064255f     TLun%d Blk%d_%d 
400a0860:	65676150 255f6425 6d432064 70795464     Page%d_%d CmdTyp
400a0870:	5f642565 4c206425 303d4142 20782578     e%d_%d LBA=0x%x 
400a0880:	48747845 4752505f 69725720 614c6574     ExtH_PRG WriteLa
400a0890:	61507473 53206567 65636375 255b7373     stPage Success[%
400a08a0:	6f742064 5d642520 0000000a 6e754c54     d to %d]....TLun
400a08b0:	42206425 64256b6c 2064255f 65676150     %d Blk%d_%d Page
400a08c0:	255f6425 6d432064 70795464 5f642565     %d_%d CmdType%d_
400a08d0:	4c206425 303d4142 20782578 48747845     %d LBA=0x%x ExtH
400a08e0:	4752505f 6e6f4420 00000a65 48747845     _PRG Done...ExtH
400a08f0:	47525020 61745320 45206567 726f7272      PRG Stage Error
400a0900:	2578302e 00000a78 6e754c54 42206425     .0x%x...TLun%d B
400a0910:	64256b6c 2064255f 65676150 255f6425     lk%d_%d Page%d_%
400a0920:	6d432064 70795464 5f642565 53206425     d CmdType%d_%d S
400a0930:	61526365 3d65676e 255f6425 64255f64     ecRange=%d_%d_%d
400a0940:	41424c20 2578303d 78452078 555f4874      LBA=0x%x ExtH_U
400a0950:	20434345 72617453 00000a74 6e754c54     ECC Start...TLun
400a0960:	42206425 64256b6c 2064255f 65676150     %d Blk%d_%d Page
400a0970:	255f6425 6d432064 70795464 5f642565     %d_%d CmdType%d_
400a0980:	53206425 61526365 3d65676e 255f6425     %d SecRange=%d_%
400a0990:	64255f64 41424c20 2578303d 78452078     d_%d LBA=0x%x Ex
400a09a0:	555f4874 20434345 6f6c6c41 6b6c4263     tH_UECC AllocBlk
400a09b0:	2c64255b 5d642520 0000000a 6e754c54     [%d, %d]....TLun
400a09c0:	42206425 64256b6c 2064255f 65676150     %d Blk%d_%d Page
400a09d0:	255f6425 6d432064 70795464 5f642565     %d_%d CmdType%d_
400a09e0:	53206425 61526365 3d65676e 255f6425     %d SecRange=%d_%
400a09f0:	64255f64 41424c20 2578303d 78452078     d_%d LBA=0x%x Ex
400a0a00:	555f4874 20434345 79706f43 61746144     tH_UECC CopyData
400a0a10:	69614620 00000a6c 6e754c54 42206425      Fail...TLun%d B
400a0a20:	64256b6c 2064255f 65676150 255f6425     lk%d_%d Page%d_%
400a0a30:	6d432064 70795464 5f642565 53206425     d CmdType%d_%d S
400a0a40:	61526365 3d65676e 255f6425 64255f64     ecRange=%d_%d_%d
400a0a50:	41424c20 2578303d 78452078 555f4874      LBA=0x%x ExtH_U
400a0a60:	20434345 79706f43 61746144 63755320     ECC CopyData Suc
400a0a70:	73736563 2064255b 25206f74 000a5d64     cess[%d to %d]..
400a0a80:	6e754c54 42206425 64256b6c 2064255f     TLun%d Blk%d_%d 
400a0a90:	65676150 255f6425 6d432064 70795464     Page%d_%d CmdTyp
400a0aa0:	5f642565 53206425 61526365 3d65676e     e%d_%d SecRange=
400a0ab0:	255f6425 64255f64 41424c20 2578303d     %d_%d_%d LBA=0x%
400a0ac0:	78452078 555f4874 20434345 656e6f44     x ExtH_UECC Done
400a0ad0:	0000000a 48747845 43455520 74532043     ....ExtH UECC St
400a0ae0:	20656761 6f727245 78302e72 000a7825     age Error.0x%x..
400a0af0:	48747845 65656d20 6e207374 75732d6f     ExtH meets no-su
400a0b00:	726f7070 72452074 646f4372 30202e65     pport ErrCode. 0
400a0b10:	00782578 6e754c54 45206425 6f437272     x%x.TLun%d ErrCo
400a0b20:	64256564 72724520 0a2e726f 00000000     de%d Error......
400a0b30:	6f6c6c41 65746163 69614620 000a216c     Allocate Fail!..
400a0b40:	425f324c 6c415f4d 61636f6c 72466574     L2_BM_AllocateFr
400a0b50:	6c426565 3a6b636f 65707553 20755072     eeBlock:SuperPu 
400a0b60:	202c6425 754c6375 536e496e 72657075     %d, ucLunInSuper
400a0b70:	25207550 6c412c64 61636f6c 79546574     Pu %d,AllocateTy
400a0b80:	25206570 75202c64 434c5463 206b6c42     pe %d, ucTLCBlk 
400a0b90:	202c6425 65646e49 78302078 200a7825     %d, Index 0x%x. 
400a0ba0:	00000000 6e754c54 52206425 74657365     ....TLun%d Reset
400a0bb0:	69614620 000a2e6c 6e754c54 52206425      Fail...TLun%d R
400a0bc0:	74657365 69615720 61462074 0a2e6c69     eset Wait Fail..
400a0bd0:	00000000 6f727245 73522072 72614d70     ....Error RspMar
400a0be0:	2e72656b 44495550 29642528 203d2120     ker.PUID(%d) != 
400a0bf0:	74696157 20676e69 44495550 29642528     Waiting PUID(%d)
400a0c00:	0000000a 64616552 4d505220 61702054     ....Read RPMT pa
400a0c10:	75206567 20636365 6c696166 6572202c     ge uecc fail, re
400a0c20:	6e727574 61747320 20737574 4c206f74     turn status to L
400a0c30:	00000a32 6e754c54 53206425 61507465     2...TLun%d SetPa
400a0c40:	656d6172 20726574 646e6553 69614620     rameter Send Fai
400a0c50:	000a2e6c 6e754c54 53206425 61507465     l...TLun%d SetPa
400a0c60:	656d6172 20726574 74696157 69614620     rameter Wait Fai
400a0c70:	000a2e6c 6e754c54 53206425 65527465     l...TLun%d SetRe
400a0c80:	45797274 6157206e 46207469 2e6c6961     tryEn Wait Fail.
400a0c90:	0000000a 6e754c54 50206425 6f436572     ....TLun%d PreCo
400a0ca0:	7469646e 206e6f69 74696157 69614620     ndition Wait Fai
400a0cb0:	000a2e6c 74736f48 61655220 6d652064     l...Host Read em
400a0cc0:	70797470 20656761 65646552 74636574     ptypage Redetect
400a0cd0:	6e657020 676e6964 000a2e2e 61746144      pending....Data
400a0ce0:	6f636552 79726576 6e655020 676e6964     Recovery Pending
400a0cf0:	0a2e2e2e 00000000 6e754c54 42206425     ........TLun%d B
400a0d00:	64256b6c 2064255f 65676150 255f6425     lk%d_%d Page%d_%
400a0d10:	6d432064 70795464 5f642565 53206425     d CmdType%d_%d S
400a0d20:	61526365 3d65676e 255f6425 64255f64     ecRange=%d_%d_%d
400a0d30:	41424c20 2578303d 72502078 6e6f4365      LBA=0x%x PreCon
400a0d40:	69746964 000a6e6f 6e754c54 42206425     dition..TLun%d B
400a0d50:	64256b6c 2064255f 65676150 255f6425     lk%d_%d Page%d_%
400a0d60:	6d432064 70795464 5f642565 53206425     d CmdType%d_%d S
400a0d70:	61526365 3d65676e 255f6425 64255f64     ecRange=%d_%d_%d
400a0d80:	41424c20 2578303d 68532078 52746669      LBA=0x%x ShiftR
400a0d90:	68745664 0a64253d 00000000 6e754c54     dVth=%d.....TLun
400a0da0:	42206425 64256b6c 2064255f 65676150     %d Blk%d_%d Page
400a0db0:	255f6425 6d432064 70795464 5f642565     %d_%d CmdType%d_
400a0dc0:	53206425 61526365 3d65676e 255f6425     %d SecRange=%d_%
400a0dd0:	64255f64 41424c20 2578303d 68532078     d_%d LBA=0x%x Sh
400a0de0:	52746669 68745664 2064253d 63637553     iftRdVth=%d Succ
400a0df0:	2e737365 0000000a 6e754c54 42206425     ess.....TLun%d B
400a0e00:	64256b6c 2064255f 65676150 255f6425     lk%d_%d Page%d_%
400a0e10:	6d432064 70795464 5f642565 53206425     d CmdType%d_%d S
400a0e20:	61526365 3d65676e 255f6425 64255f64     ecRange=%d_%d_%d
400a0e30:	41424c20 2578303d 65522078 54797274      LBA=0x%x RetryT
400a0e40:	3d656d69 000a6425 6e754c54 42206425     ime=%d..TLun%d B
400a0e50:	64256b6c 2064255f 65676150 255f6425     lk%d_%d Page%d_%
400a0e60:	6d432064 70795464 5f642565 53206425     d CmdType%d_%d S
400a0e70:	61526365 3d65676e 255f6425 64255f64     ecRange=%d_%d_%d
400a0e80:	41424c20 2578303d 65522078 54797274      LBA=0x%x RetryT
400a0e90:	3d656d69 46206425 2e6c6961 0000000a     ime=%d Fail.....
400a0ea0:	6e754c54 42206425 64256b6c 2064255f     TLun%d Blk%d_%d 
400a0eb0:	65676150 255f6425 6d432064 70795464     Page%d_%d CmdTyp
400a0ec0:	5f642565 53206425 61526365 3d65676e     e%d_%d SecRange=
400a0ed0:	255f6425 64255f64 41424c20 2578303d     %d_%d_%d LBA=0x%
400a0ee0:	65522078 54797274 3d656d69 53206425     x RetryTime=%d S
400a0ef0:	65636375 0a2e7373 00000000 64616552     uccess......Read
400a0f00:	72746552 74532079 20656761 6f727245     Retry Stage Erro
400a0f10:	78302e72 000a7825 6e754c54 42206425     r.0x%x..TLun%d B
400a0f20:	64256b6c 5b64255f 255f6425 64255f64     lk%d_%d[%d_%d_%d
400a0f30:	5d64255f 6e6c5020 50206425 25656761     _%d] Pln%d Page%
400a0f40:	64255f64 63655320 676e6152 64253d65     d_%d SecRange=%d
400a0f50:	5f64255f 4d206425 65677265 253d6452     _%d_%d MergeRd=%
400a0f60:	6f482064 64527473 706d4520 61507974     d HostRd EmptyPa
400a0f70:	000a6567 6e754c54 42206425 64256b6c     ge..TLun%d Blk%d
400a0f80:	2064255f 256e6c50 61502064 64256567     _%d Pln%d Page%d
400a0f90:	2064255f 52636553 65676e61 5f64253d     _%d SecRange=%d_
400a0fa0:	255f6425 6f482064 64527473 2064253d     %d_%d HostRd=%d 
400a0fb0:	6772654d 3d645265 45206425 7974706d     MergeRd=%d Empty
400a0fc0:	65676150 0000000a 6e754c54 42206425     Page....TLun%d B
400a0fd0:	64256b6c 5b64255f 255f6425 64255f64     lk%d_%d[%d_%d_%d
400a0fe0:	5d64255f 67615020 5f642565 43206425     _%d] Page%d_%d C
400a0ff0:	7954646d 64256570 2064255f 52636553     mdType%d_%d SecR
400a1000:	65676e61 5f64253d 255f6425 424c2064     ange=%d_%d_%d LB
400a1010:	78303d41 55207825 48636365 6c646e61     A=0x%x UeccHandl
400a1020:	20676e69 6c696146 74784520 64253d48     ing Fail ExtH=%d
400a1030:	2e64255f 0000000a 6e754c54 46206425     _%d.....TLun%d F
400a1040:	4c6c6961 4520676f 6f437272 253d6564     ailLog ErrCode=%
400a1050:	72452064 000a2e72 6e754c54 54206425     d Err...TLun%d T
400a1060:	696d7265 6574616e 69615720 61462074     erminate Wait Fa
400a1070:	0a2e6c69 00000000 43727245 3d65646f     il......ErrCode=
400a1080:	46206425 54646d43 3d657079 52206425     %d FCmdType=%d R
400a1090:	2d646165 2173694d 0000000a 43727245     ead-Mis!....ErrC
400a10a0:	3d65646f 46206425 54646d43 3d657079     ode=%d FCmdType=
400a10b0:	57206425 65746972 73694d2d 00000a21     %d Write-Mis!...
400a10c0:	43727245 3d65646f 46206425 54646d43     ErrCode=%d FCmdT
400a10d0:	3d657079 45206425 65736172 73694d2d     ype=%d Erase-Mis
400a10e0:	00000a21 455f334c 41487272 72657373     !...L3_ErrHAsser
400a10f0:	646d4374 72724520 65646f43 2064253d     tCmd ErrCode=%d 
400a1100:	2e727245 0000000a 65446f4e 61462076     Err.....NoDev Fa
400a1110:	50206c69 69646e65 2e2e676e 00000a2e     il Pending......
400a1120:	6e754c54 42206425 64256b6c 2064255f     TLun%d Blk%d_%d 
400a1130:	256e6c50 72452064 20657361 6c696146     Pln%d Erase Fail
400a1140:	456f4e20 0a487478 00000000 6e754c54      NoExtH.....TLun
400a1150:	42206425 64256b6c 5f64255f 45206425     %d Blk%d_%d_%d E
400a1160:	65736172 69614620 6957206c 78456874     rase Fail WithEx
400a1170:	5b204874 252c6425 5b2d5d64 252c6425     tH [%d,%d]-[%d,%
400a1180:	000a5d64 6e754c54 42206425 64256b6c     d]..TLun%d Blk%d
400a1190:	5b64255f 255f6425 64255f64 5d64255f     _%d[%d_%d_%d_%d]
400a11a0:	67615020 5f642565 43206425 7954646d      Page%d_%d CmdTy
400a11b0:	64256570 2064255f 4d6b6c42 2065646f     pe%d_%d BlkMode 
400a11c0:	4c206425 303d4142 20782578 48677250     %d LBA=0x%x PrgH
400a11d0:	6c646e61 20676e69 48747845 2e64253d     andling ExtH=%d.
400a11e0:	0000000a 4341424c 46206b68 3a6c6961     ....LBAChk Fail:
400a11f0:	6e614820 20656c64 61207469 65752073      Handle it as ue
400a1200:	65206363 726f7272 6e656820 6e696c64     cc error hendlin
400a1210:	2e2e2e67 0000000a 43524344 69614620     g.......DCRC Fai
400a1220:	72203a6c 726f7065 68742074 63207369     l: report this c
400a1230:	65206372 726f7272 206f7420 20656874     rc error to the 
400a1240:	6c6c6163 2e2e7265 00000a2e 43434555     caller......UECC
400a1250:	72724520 74532048 20656761 6f727245      ErrH Stage Erro
400a1260:	78302072 000a7825 74666f53 6f636544     r 0x%x..SoftDeco
400a1270:	20726564 646e6550 2e676e69 000a2e2e     der Pending.....
400a1280:	6e754c54 42206425 64256b6c 2064255f     TLun%d Blk%d_%d 
400a1290:	65676150 255f6425 6d432064 70795464     Page%d_%d CmdTyp
400a12a0:	5f642565 53206425 61526365 3d65676e     e%d_%d SecRange=
400a12b0:	255f6425 64255f64 41424c20 2578303d     %d_%d_%d LBA=0x%
400a12c0:	65522078 54797274 3d656d69 52206425     x RetryTime=%d R
400a12d0:	2e636365 0000000a 6e754c54 52206425     ecc.....TLun%d R
400a12e0:	79727465 7465654d 706d4573 61507974     etryMeetsEmptyPa
400a12f0:	302e6567 0a782578 00000000 43727245     ge.0x%x.....ErrC
400a1300:	2065646f 6f727245 30202e72 0a782578     ode Error. 0x%x.
400a1310:	00000000 20746f4e 70707553 2074726f     ....Not Support 
400a1320:	75626544 76452067 2e746e65 0000000a     Debug Event.....
400a1330:	2355434d 4c206425 76455f33 48746e65     MCU#%d L3_EventH
400a1340:	6c646e61 0a2e7265 00000000 25205550     andler......PU %
400a1350:	554c2064 2064254e 636f6c42 6425206b     d LUN%d Block %d
400a1360:	67615020 64252065 74614420 694d2061      Page %d Data Mi
400a1370:	632d7373 61706d6f 0a216572 00000000     ss-compare!.....
400a1380:	64616452 303a7264 20782578 75427457     Rdaddr:0x%x WtBu
400a1390:	74536666 41747261 3a726464 78257830     ffStartAddr:0x%x
400a13a0:	736c7520 303a6365 20782578 74616452      ulsec:0x%x Rdat
400a13b0:	78303a61 57207825 61746164 2578303a     a:0x%x Wdata:0x%
400a13c0:	00000a78 25205550 6c422064 206b636f     x...PU %d Block 
400a13d0:	50206425 20656761 45206425 726f7272     %d Page %d Error
400a13e0:	20574420 6e756f43 64252074 0000000a      DW Count %d....
400a13f0:	25205550 65522064 65526461 2d797274     PU %d ReadRetry-
400a1400:	43727245 2065646f 6e616843 20646567     ErrCode Changed 
400a1410:	25206f54 000a2e64 20555020 52206425     To %d... PU %d R
400a1420:	52646165 79727465 72655420 616e696d     eadRetry Termina
400a1430:	77206574 676e6f72 00000a21 25207550     te wrong!...Pu %
400a1440:	554c2064 6425204e 4b4c4220 50206425     d LUN %d BLK%d P
400a1450:	20642547 64616552 74655220 46207972     G%d Read Retry F
400a1460:	216c6961 0000000a 25205550 6c422064     ail!....PU %d Bl
400a1470:	206b636f 50206425 20656761 72206425     ock %d Page %d r
400a1480:	20646165 43434555 00000a21 61726353     ead UECC!...Scra
400a1490:	656c626d 6e6f6320 75676966 74206572     mble configure t
400a14a0:	20657079 6f727265 000a2172 64255550     ype error!..PU%d
400a14b0:	4e554c20 50206425 25656761 72572064      LUN%d Page%d Wr
400a14c0:	20657469 656a6e49 45207463 726f7272     ite Inject Error
400a14d0:	616c4620 53206873 75746174 78303a73      Flash Status:0x
400a14e0:	41207825 61757463 6c46206c 20687361     %x Actual Flash 
400a14f0:	74617453 303a7375 0a782578 00000000     Status:0x%x.....
400a1500:	64255550 4e554c20 49206425 63656a6e     PU%d LUN%d Injec
400a1510:	6c462074 20687361 64616572 61747320     t Flash read sta
400a1520:	20737574 756c6176 4b4f2065 7830203a     tus value OK: 0x
400a1530:	000a7825 676e6953 7020656c 656e616c     %x..Single plane
400a1540:	65706f20 69746172 6f206e6f 20796c6e      operation only 
400a1550:	70707573 2074726f 20434c53 65646f6d     support SLC mode
400a1560:	206e6920 73696874 616c6620 74206873      in this flash t
400a1570:	21657079 0000000a 64616552 72726520     ype!....Read err
400a1580:	74696220 6a6e6920 61747320 203a7472      bit inj start: 
400a1590:	74537743 25747261 77432064 256e654c     CwStart%d CwLen%
400a15a0:	72452064 74694272 43726550 0a642577     d ErrBitPerCw%d.
400a15b0:	00000000 6e456375 49797274 7865646e     ....ucEntryIndex
400a15c0:	20642520 6d436375 646e4964 25207865      %d ucCmdIndex %
400a15d0:	45442064 49462043 53204f46 203a5354     d DEC FIFO STS: 
400a15e0:	0000000a 65446c75 676e4563 4d746942     ....ulDecEngBitM
400a15f0:	303d7061 20782578 72457362 746e4372     ap=0x%x bsErrCnt
400a1600:	30636341 303d3154 20782578 72457362     Acc0T1=0x%x bsEr
400a1610:	746e4372 3d636341 78257830 0000000a     rCntAcc=0x%x....
400a1620:	644c7362 65446370 72744963 2578303d     bsLdpcDecItr=0x%
400a1630:	73622078 4e6e6c50 303d6d75 20782578     x bsPlnNum=0x%x 
400a1640:	6d437362 646e4964 303d7865 0a782578     bsCmdIndex=0x%x.
400a1650:	0000000a 20444d43 65646e69 696d2078     ....CMD index mi
400a1660:	6d207373 68637461 0a212121 6d436375     ss match!!!.ucCm
400a1670:	646e4964 73207865 6c756f68 65622064     dIndex should be
400a1680:	2c642520 74756220 206e6920 20434544      %d, but in DEC 
400a1690:	4f464946 746e4520 6e497972 20786564     FIFO EntryIndex 
400a16a0:	6425203d 65447420 66694663 7374536f     = %d tDecFifoSts
400a16b0:	4373622e 6e49646d 20786564 6425203d     .bsCmdIndex = %d
400a16c0:	0000000a 206a6e49 43727245 6341746e     ....Inj ErrCntAc
400a16d0:	696d2063 6d207373 68637461 0a212121     c miss match!!!.
400a16e0:	49646d43 7865646e 20642520 456a6e49     CmdIndex %d InjE
400a16f0:	6e437272 63634174 6f687320 20646c75     rrCntAcc should 
400a1700:	25206562 62202c64 69207475 4544206e     be %d, but in DE
400a1710:	49462043 45204f46 7972746e 65646e49     C FIFO EntryInde
400a1720:	64252078 72724520 41746e43 3d206363     x %d ErrCntAcc =
400a1730:	0a642520 00000000 206a6e49 43727245      %d.....Inj ErrC
400a1740:	6341746e 54302063 696d2031 6d207373     ntAcc 0T1 miss m
400a1750:	68637461 0a212121 49646d43 7865646e     atch!!!.CmdIndex
400a1760:	20642520 456a6e49 6e437272 63634174      %d InjErrCntAcc
400a1770:	20315430 756f6873 6220646c 64252065     0T1 should be %d
400a1780:	7562202c 6e692074 43454420 46494620     , but in DEC FIF
400a1790:	6e45204f 20797274 45206425 6e437272     O Entry %d ErrCn
400a17a0:	63634174 20315430 6425203d 0000000a     tAcc0T1 = %d....
400a17b0:	434e5953 73655220 50207465 64253a55     SYNC Reset PU:%d
400a17c0:	69616620 000a216c 434e5953 73655220      fail!..SYNC Res
400a17d0:	50207465 64253a55 214b4f20 0000000a     et PU:%d OK!....
400a17e0:	20746573 74616566 20657275 6c696166     set feature fail
400a17f0:	3a555020 41206425 30726464 20782578      PU:%d Addr0x%x 
400a1800:	61746144 78257830 0000000a 20746573     Data0x%x....set 
400a1810:	74616566 20657275 50204b4f 64253a55     feature OK PU:%d
400a1820:	64644120 25783072 61442078 78306174      Addr0x%x Data0x
400a1830:	000a7825 64255550 4e554c20 20642520     %x..PU%d LUN %d 
400a1840:	254b4c42 72452064 20657361 6c696146     BLK%d Erase Fail
400a1850:	00000a21 25207550 6c422064 206b636f     !...Pu %d Block 
400a1860:	50206425 20656761 57206425 65746972     %d Page %d Write
400a1870:	69614620 000a216c 64255550 4e554c20      Fail!..PU%d LUN
400a1880:	45206425 65736172 6a6e4920 20746365     %d Erase Inject 
400a1890:	6f727245 79542072 253a6570 63412064     Error Type:%d Ac
400a18a0:	6c617574 72724520 4320726f 3a65646f     tual Error Code:
400a18b0:	000a6425 64255550 67615020 20642565     %d..PU%d Page%d 
400a18c0:	65676170 65707954 44206425 46204345     pageType%d DEC F
400a18d0:	204f4649 65646e69 203d2078 000a6425     IFO index = %d..
400a18e0:	25207550 554c2064 6425204e 61655220     Pu %d LUN %d Rea
400a18f0:	61462064 202c6c69 54727245 3a657079     d Fail, ErrType:
400a1900:	000a6425 25205550 554c2064 6425204e     %d..PU %d LUN %d
400a1910:	20736920 79737542 66656220 2065726f      is Busy before 
400a1920:	67697274 646d6320 554c202c 6942204e     trig cmd, LUN Bi
400a1930:	70614d74 30203d20 0a782578 00000000     tMap = 0x%x.....
400a1940:	68676952 54532074 50202153 64252055     Right STS! PU %d
400a1950:	4e554c20 20642520 42207369 20797375      LUN %d is Busy 
400a1960:	65746661 72742072 63206769 202c646d     after trig cmd, 
400a1970:	204e554c 4d746942 3d207061 25783020     LUN BitMap = 0x%
400a1980:	00000a78 25205550 554c2064 6425204e     x...PU %d LUN %d
400a1990:	20736920 20746f6e 74706d65 65622079      is not empty be
400a19a0:	65726f66 69727420 6d632067 4c202c64     fore trig cmd, L
400a19b0:	42204e55 614d7469 203d2070 78257830     UN BitMap = 0x%x
400a19c0:	0000000a 68676952 54532074 50202153     ....Right STS! P
400a19d0:	64252055 4e554c20 20642520 6e207369     U %d LUN %d is n
400a19e0:	4520746f 7974706d 74666120 74207265     ot Empty after t
400a19f0:	20676972 2c646d63 4e554c20 74694220     rig cmd, LUN Bit
400a1a00:	2070614d 7830203d 000a7825 25205550     Map = 0x%x..PU %
400a1a10:	554c2064 6425204e 20736920 6c6c7546     d LUN %d is Full
400a1a20:	66656220 2065726f 67697274 646d6320      before trig cmd
400a1a30:	554c202c 6942204e 70614d74 30203d20     , LUN BitMap = 0
400a1a40:	0a782578 00000000 68676952 54532074     x%x.....Right ST
400a1a50:	50202153 64252055 4e554c20 20642520     S! PU %d LUN %d 
400a1a60:	46207369 206c6c75 65746661 72742072     is Full after tr
400a1a70:	25206769 6d632064 4c202c64 42204e55     ig %d cmd, LUN B
400a1a80:	614d7469 203d2070 78257830 0000000a     itMap = 0x%x....
400a1a90:	6e6f7257 54532067 50202153 64252055     Wrong STS! PU %d
400a1aa0:	20736920 79737542 66656220 2065726f      is Busy before 
400a1ab0:	67697274 646d6320 5550202c 74694220     trig cmd, PU Bit
400a1ac0:	2070614d 7830203d 000a7825 68676952     Map = 0x%x..Righ
400a1ad0:	54532074 50202153 64252055 20736920     t STS! PU %d is 
400a1ae0:	79737542 74666120 74207265 20676972     Busy after trig 
400a1af0:	2c646d63 20555020 4d746942 3d207061     cmd, PU BitMap =
400a1b00:	25783020 00000a78 6e6f7257 54532067      0x%x...Wrong ST
400a1b10:	50202153 64252055 20736920 20746f6e     S! PU %d is not 
400a1b20:	74706d65 65622079 65726f66 69727420     empty before tri
400a1b30:	6d632067 50202c64 69422055 70614d74     g cmd, PU BitMap
400a1b40:	30203d20 0a782578 00000000 68676952      = 0x%x.....Righ
400a1b50:	54532074 50202153 64252055 20736920     t STS! PU %d is 
400a1b60:	20746f6e 74706d45 66612079 20726574     not Empty after 
400a1b70:	67697274 646d6320 5550202c 74694220     trig cmd, PU Bit
400a1b80:	2070614d 7830203d 000a7825 6e6f7257     Map = 0x%x..Wron
400a1b90:	54532067 50202153 64252055 20736920     g STS! PU %d is 
400a1ba0:	6c6c7546 66656220 2065726f 67697274     Full before trig
400a1bb0:	646d6320 5550202c 74694220 2070614d      cmd, PU BitMap 
400a1bc0:	7830203d 000a7825 68676952 54532074     = 0x%x..Right ST
400a1bd0:	50202153 64252055 20736920 6c6c7546     S! PU %d is Full
400a1be0:	74666120 74207265 20676972 63206425      after trig %d c
400a1bf0:	202c646d 42205550 614d7469 203d2070     md, PU BitMap = 
400a1c00:	78257830 0000000a 474e4953 4e4c505f     0x%x....SING_PLN
400a1c10:	4145525f 65522044 79442064 696d616e     _READ Red Dynami
400a1c20:	6c6c6163 70552079 65746164 214b4f20     cally Update OK!
400a1c30:	0000000a 4c4c5546 4741505f 45525f45     ....FULL_PAGE_RE
400a1c40:	52204441 44206465 6d616e79 6c616369     AD Red Dynamical
400a1c50:	5520796c 74616470 4b4f2065 00000a21     ly Update OK!...
400a1c60:	5f444552 594c4e4f 4145525f 65522044     RED_ONLY_READ Re
400a1c70:	79442064 696d616e 6c6c6163 70552079     d Dynamically Up
400a1c80:	65746164 214b4f20 0000000a 4e414843     date OK!....CHAN
400a1c90:	435f4547 525f4c4f 20444145 20646552     GE_COL_READ Red 
400a1ca0:	616e7944 6163696d 20796c6c 61647055     Dynamically Upda
400a1cb0:	4f206574 000a214b 676e6953 7020656c     te OK!..Single p
400a1cc0:	656e616c 65706f20 69746172 6f206e6f     lane operation o
400a1cd0:	20796c6e 70707573 2074726f 20434c53     nly support SLC 
400a1ce0:	65646f6d 206e6920 66204433 6873616c     mode in 3D flash
400a1cf0:	00000a21 676e6953 5020656c 656e616c     !...Single Plane
400a1d00:	61655220 65522064 20797274 656e6f44      Read Retry Done
400a1d10:	00000a21 6c6c7546 616c5020 5220656e     !...Full Plane R
400a1d20:	20646165 72746552 6f442079 0a21656e     ead Retry Done!.
400a1d30:	00000000 676e6953 5020656c 656e616c     ....Single Plane
400a1d40:	52574520 73615020 0a0a2173 00000000      EWR Pass!......
400a1d50:	746c754d 6c502069 20656e61 20525745     Multi Plane EWR 
400a1d60:	73736150 000a0a21 74726150 206c6169     Pass!...Partial 
400a1d70:	64616552 73615020 0a0a2173 00000000     Read Pass!......
400a1d80:	676e6953 5020656c 656e616c 61684320     Single Plane Cha
400a1d90:	2065676e 756c6f43 52206e6d 20646165     nge Column Read 
400a1da0:	73736150 000a0a21 6e616843 43206567     Pass!...Change C
400a1db0:	6d756c6f 6552206e 50206461 21737361     olumn Read Pass!
400a1dc0:	00000a0a 20444552 796c6e4f 61655220     ....RED Only Rea
400a1dd0:	61502064 0a217373 0000000a 20555353     d Pass!.....SSU 
400a1de0:	61432026 20656863 74617453 43207375     & Cache Status C
400a1df0:	6b636568 73615020 0a0a2173 00000000     heck Pass!......
400a1e00:	20555353 616e7944 6163696d 20796c6c     SSU Dynamically 
400a1e10:	61647055 74206574 5244206f 43204d41     Update to DRAM C
400a1e20:	6b636568 73615020 0a0a2173 00000000     heck Pass!......
400a1e30:	20646552 616e7944 6163696d 20796c6c     Red Dynamically 
400a1e40:	61647055 74206574 5244206f 6f204d41     Update to DRAM o
400a1e50:	544f2072 50204246 21737361 00000a0a     r OTFB Pass!....
400a1e60:	53205550 75746174 69422073 70614d74     PU Status BitMap
400a1e70:	73615020 0a0a2173 00000000 204e554c      Pass!......LUN 
400a1e80:	74617453 42207375 614d7469 61502070     Status BitMap Pa
400a1e90:	0a217373 0000000a 64616552 74655220     ss!.....Read Ret
400a1ea0:	50207972 21737361 00000a0a 44414552     ry Pass!....READ
400a1eb0:	53545320 73615020 0a0a2173 00000000      STS Pass!......
400a1ec0:	20727245 206a6e49 20646e61 20434544     Err Inj and DEC 
400a1ed0:	20535453 6f706552 50207472 21737361     STS Report Pass!
400a1ee0:	00000a0a 20746f4e 70707573 2074726f     ....Not support 
400a1ef0:	74746170 206e7265 25204449 00000a64     pattern ID %d...
400a1f00:	2043464e 204c4148 54534554 53415020     NFC HAL TEST PAS
400a1f10:	64252053 53414220 50204349 21545441     S %d BASIC PATT!
400a1f20:	00000a0a 2043464e 6f6c6c41 68632063     ....NFC Alloc ch
400a1f30:	6c6b6365 20747369 656c6966 72442073     ecklist files Dr
400a1f40:	73206d61 20657a69 4d206425 52202c42     am size %d MB, R
400a1f50:	20647673 4d206425 000a2e42 2043464e     svd %d MB...NFC 
400a1f60:	49534142 54552043 6c6c4120 7320636f     BASIC UT Alloc s
400a1f70:	65726168 52532064 20314d41 78257830     hared SRAM1 0x%x
400a1f80:	202c4220 64767352 25783020 2e422078      B, Rsvd 0x%x B.
400a1f90:	0000000a 52415453 55425f54 52454646     ....START_BUFFER
400a1fa0:	3a44495f 25783020 00000a78 52415453     _ID: 0x%x...STAR
400a1fb0:	42575f54 495f4655 30203a44 0a782578     T_WBUF_ID: 0x%x.
400a1fc0:	00000000 52415453 42525f54 495f4655     ....START_RBUF_I
400a1fd0:	30203a44 0a782578 00000000 52415453     D: 0x%x.....STAR
400a1fe0:	52575f54 415f4445 3a524444 25783020     T_WRED_ADDR: 0x%
400a1ff0:	00000a78 52415453 52525f54 425f4445     x...START_RRED_B
400a2000:	3a455341 25783020 00000a78 52415453     ASE: 0x%x...STAR
400a2010:	52525f54 415f4445 3a524444 25783020     T_RRED_ADDR: 0x%
400a2020:	00000a78 2043464e 69736142 54552063     x...NFC Basic UT
400a2030:	696e4920 6f442074 0a21656e 0000000a      Init Done!.....
400a2040:	3255434d 65764520 4920746e 6c61766e     MCU2 Event Inval
400a2050:	0a216469 00000000 4c41480a 43464e20     id!......HAL NFC
400a2060:	494e5520 45542054 53205453 54524154      UNIT TEST START
400a2070:	00000a21 4c41480a 43464e20 494e5520     !....HAL NFC UNI
400a2080:	45542054 45205453 0a21444e 0000000a     T TEST END!.....
400a2090:	2355434d 41206425 636f6c6c 20657461     MCU#%d Allocate 
400a20a0:	72616853 44206465 206d6172 7265764f     Shared Dram Over
400a20b0:	776f6c46 206e6920 535f324c 65726168     Flow in L2_Share
400a20c0:	66754264 696c4166 72446e67 654d6d61     dBuffAlignDramMe
400a20d0:	70614d6d 00000a2e 2355434d 4c206425     mMap....MCU#%d L
400a20e0:	6c612032 61636f6c 74206574 73206568     2 allocate the s
400a20f0:	65726168 75422d64 6c416666 206e6769     hared-BuffAlign 
400a2100:	6d617244 7a697320 64252065 2c424b20     Dram size %d KB,
400a2110:	76735220 64252064 0a2e4d20 00000000      Rsvd %d M......
400a2120:	2355434d 41206425 636f6c6c 20657461     MCU#%d Allocate 
400a2130:	72616853 44206465 206d6172 7265764f     Shared Dram Over
400a2140:	776f6c46 206e6920 535f324c 65726168     Flow in L2_Share
400a2150:	44363164 696c4157 72446e67 654d6d61     d16DWAlignDramMe
400a2160:	70614d6d 00000a2e 2355434d 4c206425     mMap....MCU#%d L
400a2170:	6c612032 61636f6c 74206574 73206568     2 allocate the s
400a2180:	65726168 36312d64 6c417744 206e6769     hared-16DwAlign 
400a2190:	6d617244 7a697320 64252065 2c424b20     Dram size %d KB,
400a21a0:	76735220 64252064 0a2e4d20 00000000      Rsvd %d M......
400a21b0:	2355434d 53206425 65726168 46544f64     MCU#%d SharedOTF
400a21c0:	764f2042 6c467265 4c20776f 68535f32     B OverFlow L2_Sh
400a21d0:	64657261 4246544f 4d757353 614d6d65     aredOTFBSsuMemMa
400a21e0:	000a2e70 2355434d 4c206425 68535f32     p...MCU#%d L2_Sh
400a21f0:	64657261 4246544f 4d757353 614d6d65     aredOTFBSsuMemMa
400a2200:	64252070 2c424b20 76735220 64252064     p %d KB, Rsvd %d
400a2210:	2e426b20 0000000a 2355434d 53206425      kB.....MCU#%d S
400a2220:	65726168 52534464 20314d41 7265766f     haredDSRAM1 over
400a2230:	776f6c66 4b642520 00000a21 2355434d     flow %dK!...MCU#
400a2240:	41206425 636f6c6c 61687320 20646572     %d Alloc shared 
400a2250:	4d415253 64252031 2c424b20 76735220     SRAM1 %d KB, Rsv
400a2260:	64252064 2e424b20 0000000a 2355434d     d %d KB.....MCU#
400a2270:	53206425 65726168 72442064 4d206d61     %d Shared Dram M
400a2280:	4f206d65 46726576 20776f6c 4c206e69     em OverFlow in L
400a2290:	68535f31 64657261 4d6d654d 0a2e7061     1_SharedMemMap..
400a22a0:	00000000 2355434d 4c206425 6c612031     ....MCU#%d L1 al
400a22b0:	61636f6c 74206574 73206568 65726168     locate the share
400a22c0:	72442064 73206d61 20657a69 78257830     d Dram size 0x%x
400a22d0:	2c424b20 76735220 78302064 4b207825      KB, Rsvd 0x%x K
400a22e0:	00000a42 203a334c 444d4346 6c6c4151     B...L3: FCMDQAll
400a22f0:	41525363 2520304d 2c424b64 203e2d20     cSRAM0 %dKB, -> 
400a2300:	424b6425 203e2d20 61746f74 4152536c     %dKB -> totalSRA
400a2310:	2520304d 0a424b64 00000000 203a334c     M0 %dKB.....L3: 
400a2320:	6c414d46 5253636c 20304d41 424b6425     FMAllcSRAM0 %dKB
400a2330:	3e2d202c 4b642520 3e2d2042 746f7420     , -> %dKB -> tot
400a2340:	52536c61 20304d41 424b6425 0000000a     alSRAM0 %dKB....
400a2350:	5f4c4148 706d6554 74617265 53657275     HAL_TemperatureS
400a2360:	6f736e65 6e495f72 203a7469 736e6573     ensor_Init: sens
400a2370:	7020726f 6d617261 72657465 20736920     or parameter is 
400a2380:	20746f6e 72726f63 21746365 00000a20     not correct! ...
400a2390:	5f4c4148 65447748 20677562 4d415244     HAL_HwDebug DRAM
400a23a0:	66666f20 20746573 7830203d 000a7825      offset = 0x%x..
400a23b0:	5f4c4148 65447748 20677562 6f6d656d     HAL_HwDebug memo
400a23c0:	73207972 20657a69 7830203d 000a7825     ry size = 0x%x..
400a23d0:	5f4c4148 6e494553 203a7469 2055434d     HAL_SEInit: MCU 
400a23e0:	65204449 726f7272 0a642520 00000000     ID error %d.....
400a23f0:	2055434d 44206425 62617369 3a64656c     MCU %d Disabled:
400a2400:	746e6520 66207265 7665726f 6c207265      enter forever l
400a2410:	21706f6f 0000000a 1ffa11f0 1ffa2038     oop!........8 ..
400a2420:	1ffd7c00 1ffd7c70                       .|..p|..

Disassembly of section .mcu2dram.text:

400a2800 <FW_DbgShowAll-0x4a4>:
400a2800:	1ff83a00 00010300 00010000 00010200     .:..............
400a2810:	00010100 00010101 20000d90 20000d80     ........... ... 
400a2820:	20000d7c 400a0378 400a0398 20003508     |.. x..@...@.5. 
400a2830:	20004380 20001d44 2000ac64 1ffa1200     .C. D.. d.. ....
400a2840:	400a04d8 400a0474 400a04a4 ffe3ffff     ...@t..@...@....
400a2850:	ff1fffff 00200000 0000ffff 00018000     ...... .........
400a2860:	cfffffff 10000000 00000800 400a0500     ...............@
400a2870:	2000391c 200052b0 200061ac 2000493c     .9. .R. .a. <I. 
400a2880:	400a0668 400a0608 400a0538 400a0684     h..@...@8..@...@
400a2890:	400a056c 00040000 400a0638 400a05a4     l..@....8..@...@
400a28a0:	400a05d8 20003a70 20003a64 20003694     ...@p:. d:. .6. 
400a28b0:	20003964 20003798 20003518 20003900     d9. .7. .5. .9. 
400a28c0:	20003680 400a08ec 400a06b8 400a06f8     .6. ...@...@...@
400a28d0:	400a08ac 400a07f8 400a0744 1ffd7c00     ...@...@D..@.|..
400a28e0:	400a0850 400a07a0 20004070 20004d38     P..@...@p@. 8M. 
400a28f0:	20004cbc 2000463c 2000b420 400a0ad4     .L. <F.  .. ...@
400a2900:	400a0908 400a095c 400a0a80 400a09bc     ...@\..@...@...@
400a2910:	400a0a18 400a0af0 200045e4 20004f9c     ...@...@.E. .O. 
400a2920:	400a0b14 00000890 400a0378 400a0398     ...@....x..@...@
400a2930:	400a0018 ffefffff 400a0bb8 400a0ba4     ...@.......@...@
400a2940:	2000a150 2000a124 2000a550 20006ef0     P.. $.. P.. .n. 
400a2950:	2000a114 2000a07c 20006f0c 400a0c04     ... |.. .o. ...@
400a2960:	400a88b0 400a0c34 400a0c54 400a0c74     ...@4..@T..@t..@
400a2970:	400a0c94 200041dc 2000436c 400a0cb4     ...@.A. lC. ...@
400a2980:	400a0efc 400a0cf8 400a0d48 400a0df8     ...@...@H..@...@
400a2990:	00004000 400a0d9c 400a0ea0 400a0e48     .@.....@...@H..@
400a29a0:	20004e58 200044a0 400a0f18 400a0f74     XN. .D. ...@t..@
400a29b0:	20004418 400a0fc8 200042d8 20004f88     .D. ...@.B. .O. 
400a29c0:	200041a8 20004194 20004f00 20004fc0     .A. .A. .O. .O. 
400a29d0:	20004f10 200041b8 400a1038 2000405c     .O. .A. 8..@\@. 
400a29e0:	20004048 400a01ac 400a1058 400a10e4     H@. ...@X..@...@
400a29f0:	400a109c 400a1078 400a10c0 400a1108     ...@x..@...@...@
400a2a00:	400a114c 400a1120 400a1184 400a11e4     L..@ ..@...@...@
400a2a10:	400a1218 400a124c 400a1268 20004480     ...@L..@h..@.D. 
400a2a20:	400a1280 200045d8 1ffa1750 0001ffff     ...@.E. P.......
400a2a30:	000023ba 00002665 400a12d8 20006784     .#..e&.....@.g. 
400a2a40:	400a12fc 200044d4 200046f0 200046c4     ...@.D. .F. .F. 
400a2a50:	200045f8 20004fd4 200034e0 20006220     .E. .O. .4.  b. 
400a2a60:	2000b230 ffffc7ff 20006240 20006174     0.. ....@b. ta. 
400a2a70:	200061fc 20005f30 20005960 20006614     .a. 0_. `Y. .f. 
400a2a80:	2000626c 20005f04 20005ef4 20005eb4     lb. ._. .^. .^. 
400a2a90:	ff81ffff 20005da8 20005d28 20005e98     .....]. (]. .^. 
400a2aa0:	20005e7c 20005e58 1ff81370 200063fc     |^. X^. p....c. 
400a2ab0:	00020000 20006400 1ff81174 00003c00     .....d. t....<..
400a2ac0:	2000635c 400a003c 400a0064 e002e200     \c. <..@d..@....
400a2ad0:	00006200 400a1f5c 2000a4f8 2000a4f0     .b..\..@... ... 
400a2ae0:	2000b440 fff00000 1ff8101c 40000000     @.. ...........@
400a2af0:	2000aedc 400a00e8 400a00f0 400a89e0     ... ...@...@...@
400a2b00:	1ffa0800 400a8858 1ff81050 1ff90000     ....X..@P.......
400a2b10:	1ff81100 1ff81300 1ff813b0 1ff83f00     .............?..
400a2b20:	400a89a0 1ff81280 1ff81254 1ff81330     ...@....T...0...
400a2b30:	1ff812c4 1ff8e000 400a86b0 1ff81010     ...........@....
400a2b40:	00142000 fff03c00 00100000 c0000000     . ...<..........
400a2b50:	c0010000 3fff0000 ffff0000 1ffa2038     .......?....8 ..
400a2b60:	1ffa8000 400a22e4 400a231c 000c0000     .....".@.#.@....
400a2b70:	2000a4d4 2000b4c8 2000b490 400a0398     ... ... ... ...@
400a2b80:	ffe0ffff 1ff8190c 1ff81908 400a8ad8     ...............@
400a2b90:	1ff81904 ff9fffff 0a000000 807fffff     ................
400a2ba0:	1ff94000 400a8ce0 400a8ac0 400a9d40     .@.....@...@@..@
400a2bb0:	fffff000 400a9000 400ac380 1ff8191c     .......@...@....
400a2bc0:	400a88b8 1ff81918 40a18000 1ff8109c     ...@.......@....
400a2bd0:	1ff8a000 1ff8f000 1ff81400 1ff81440     ............@...
400a2be0:	1ff81480 f3ffffff f000ffff 1ff80e00     ................
400a2bf0:	1ff7fe00 1ff81000 80000000 fdffffff     ................
400a2c00:	ffff7fff 00008000 fffff7ff 00172000     ............. ..
400a2c10:	0fff0000 01ff0000 1ffa1a44 1ffa19e0     ........D.......
400a2c20:	2000a198 2000a190 1ffa14e4 1ffa16f0     ... ... ........
400a2c30:	1ffa1780 2000a52c 2000a510 1ffd0e64     ....,.. ... d...
400a2c40:	1ffd0e54 1ffd0e0c 2000a780 2000a71c     T.......... ... 
400a2c50:	2000a680 2000a5e4 2000a5c4 2000a58c     ... ... ... ... 
400a2c60:	c1ffffff fe0fffff fffdffff 00800000     ................
400a2c70:	12000000 ffff83ff 00001000 fff07fff     ................
400a2c80:	00028000 00600000 0e000000 2000aa3c     ......`.....<.. 
400a2c90:	2000a924 2000a8c4 2000a854 fff02bd4     $.. ... T.. .+..
400a2ca0:	2000aa60                                `.. 

400a2ca4 <FW_DbgShowAll>:
FW_DbgShowAll():
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:388
Description :.
Others      :
Modify      :
****************************************************************************/
void MCU12_DRAM_TEXT FW_DbgShowAll(void)
{
400a2ca4:	c0c112        	addi	a1, a1, -64
400a2ca7:	b1c9      	s32i.n	a12, a1, 44
400a2ca9:	c1d9      	s32i.n	a13, a1, 48
400a2cab:	0a6102        	s32i	a0, a1, 40
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:128
****************************************************************************/
void MCU12_DRAM_TEXT HAL_SGEAllEngStatus(void)
{
    BOOL ulAllTransFinish,ulAllEngIdle;

    ulAllEngIdle = HAL_SgeGetAllEngIdle();
400a2cae:	feda01        	l32r	a0, 400a2818 <_mcu2dram_text_start+0x18>
400a2cb1:	0000c0        	callx0	a0
400a2cb4:	0129      	s32i.n	a2, a1, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:129
    ulAllTransFinish = HAL_SgeGetAllTransFsh();
400a2cb6:	fed901        	l32r	a0, 400a281c <_mcu2dram_text_start+0x1c>
400a2cb9:	0000c0        	callx0	a0
400a2cbc:	1129      	s32i.n	a2, a1, 4
400a2cbe:	013d      	mov.n	a3, a1
400a2cc0:	83a022        	movi	a2, 131
400a2cc3:	fed701        	l32r	a0, 400a2820 <_mcu2dram_text_start+0x20>
400a2cc6:	0000c0        	callx0	a0
400a2cc9:	84a022        	movi	a2, 132
400a2ccc:	314b      	addi.n	a3, a1, 4
400a2cce:	fed401        	l32r	a0, 400a2820 <_mcu2dram_text_start+0x20>
400a2cd1:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:341
Modify      :
****************************************************************************/
void MCU12_DRAM_TEXT HAL_SGEDbgShowAll(void)
{

    HAL_SGEAllEngStatus();
400a2cd4:	fecbc1        	l32r	a12, 400a2800 <_mcu2dram_text_start>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:151
void MCU12_DRAM_TEXT HAL_DRQDWQStatus(void)
{

    volatile DRQ_DWQ_REG tQStaus;
    
     tQStaus.ulValue = rDrqMcu0Status;
400a2cd7:	0020c0        	memw
400a2cda:	602c02        	l32i	a0, a12, 0x180
400a2cdd:	0020c0        	memw
400a2ce0:	98a022        	movi	a2, 152
400a2ce3:	318b      	addi.n	a3, a1, 8
400a2ce5:	2109      	s32i.n	a0, a1, 8
400a2ce7:	fece01        	l32r	a0, 400a2820 <_mcu2dram_text_start+0x20>
400a2cea:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:154
    TRACE_LOG((void*)&tQStaus, sizeof(DRQ_DWQ_REG), DRQ_DWQ_REG, 0, "[SGE] DrqMcu0:");

    tQStaus.ulValue = rDwqMcu0Status;
400a2ced:	0020c0        	memw
400a2cf0:	612c22        	l32i	a2, a12, 0x184
400a2cf3:	0020c0        	memw
400a2cf6:	026122        	s32i	a2, a1, 8
400a2cf9:	08c132        	addi	a3, a1, 8
400a2cfc:	9ba022        	movi	a2, 155
400a2cff:	fec801        	l32r	a0, 400a2820 <_mcu2dram_text_start+0x20>
400a2d02:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:157
    TRACE_LOG((void*)&tQStaus, sizeof(DRQ_DWQ_REG), DRQ_DWQ_REG, 0, "[SGE] DwqMcu0:");

    tQStaus.ulValue = rDrqMcu1Status;
400a2d05:	0020c0        	memw
400a2d08:	492c32        	l32i	a3, a12, 0x124
400a2d0b:	0020c0        	memw
400a2d0e:	026132        	s32i	a3, a1, 8
400a2d11:	9ea022        	movi	a2, 158
400a2d14:	08c132        	addi	a3, a1, 8
400a2d17:	fec201        	l32r	a0, 400a2820 <_mcu2dram_text_start+0x20>
400a2d1a:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:160
    TRACE_LOG((void*)&tQStaus, sizeof(DRQ_DWQ_REG), DRQ_DWQ_REG, 0, "[SGE] DrqMcu1:");

    tQStaus.ulValue = rDwqMcu1Status;
400a2d1d:	0020c0        	memw
400a2d20:	4a2c42        	l32i	a4, a12, 0x128
400a2d23:	0020c0        	memw
400a2d26:	026142        	s32i	a4, a1, 8
400a2d29:	a1a022        	movi	a2, 161
400a2d2c:	08c132        	addi	a3, a1, 8
400a2d2f:	febc01        	l32r	a0, 400a2820 <_mcu2dram_text_start+0x20>
400a2d32:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:163
    TRACE_LOG((void*)&tQStaus, sizeof(DRQ_DWQ_REG), DRQ_DWQ_REG, 0, "[SGE] DwqMcu1:");

    tQStaus.ulValue = rDrqMcu2Status;
400a2d35:	0020c0        	memw
400a2d38:	4b2c52        	l32i	a5, a12, 0x12c
400a2d3b:	0020c0        	memw
400a2d3e:	026152        	s32i	a5, a1, 8
400a2d41:	a4a022        	movi	a2, 164
400a2d44:	08c132        	addi	a3, a1, 8
400a2d47:	feb601        	l32r	a0, 400a2820 <_mcu2dram_text_start+0x20>
400a2d4a:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:166
    TRACE_LOG((void*)&tQStaus, sizeof(DRQ_DWQ_REG), DRQ_DWQ_REG, 0, "[SGE] DrqMcu2:");

    tQStaus.ulValue = rDwqMcu2Status;
400a2d4d:	0020c0        	memw
400a2d50:	4c2c62        	l32i	a6, a12, 0x130
400a2d53:	0020c0        	memw
400a2d56:	026162        	s32i	a6, a1, 8
400a2d59:	a7a022        	movi	a2, 167
400a2d5c:	08c132        	addi	a3, a1, 8
400a2d5f:	feb001        	l32r	a0, 400a2820 <_mcu2dram_text_start+0x20>
400a2d62:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:189
{
    SGE_OTFB_TIG_STATUS tOtfbTigStatus;
    U32 ulDebugValue,ulCmdSlotGroup;

    ulDebugValue  = SGE_DEBUG_OTFB_ACTIVE_BITMAP;
    for(ulCmdSlotGroup = 0; ulCmdSlotGroup < 7;ulCmdSlotGroup ++)
400a2d65:	fea7d1        	l32r	a13, 400a2804 <_mcu2dram_text_start+0x4>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:343
void MCU12_DRAM_TEXT HAL_SGEDbgShowAll(void)
{

    HAL_SGEAllEngStatus();

    HAL_DRQDWQStatus();
400a2d68:	070c      	movi.n	a7, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:189
{
    SGE_OTFB_TIG_STATUS tOtfbTigStatus;
    U32 ulDebugValue,ulCmdSlotGroup;

    ulDebugValue  = SGE_DEBUG_OTFB_ACTIVE_BITMAP;
    for(ulCmdSlotGroup = 0; ulCmdSlotGroup < 7;ulCmdSlotGroup ++)
400a2d6a:	036172        	s32i	a7, a1, 12

400a2d6d <FW_DbgShowAll+0xc9>:
400a2d6d:	bfa022        	movi	a2, 191
400a2d70:	31cb      	addi.n	a3, a1, 12
400a2d72:	feab01        	l32r	a0, 400a2820 <_mcu2dram_text_start+0x20>
400a2d75:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:193
    {
        TRACE_LOG((void*)&ulCmdSlotGroup, sizeof(U32), U32, 0, "[SGE] OtfbActive Group:");

        rSgeDebugInput = (ulDebugValue + ulCmdSlotGroup);
400a2d78:	3198      	l32i.n	a9, a1, 12
400a2d7a:	8099d0        	add	a9, a9, a13
400a2d7d:	0020c0        	memw
400a2d80:	596c92        	s32i	a9, a12, 0x164
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:195
        
        tOtfbTigStatus.ulValue = rSgeDebugOutput0;
400a2d83:	0020c0        	memw
400a2d86:	c4a022        	movi	a2, 196
400a2d89:	10c132        	addi	a3, a1, 16
400a2d8c:	5a2c82        	l32i	a8, a12, 0x168
400a2d8f:	046182        	s32i	a8, a1, 16
400a2d92:	fea301        	l32r	a0, 400a2820 <_mcu2dram_text_start+0x20>
400a2d95:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:198
        TRACE_LOG((void*)&tOtfbTigStatus, sizeof(SGE_OTFB_TIG_STATUS), SGE_OTFB_TIG_STATUS, 0, "[SGE] ActiveBitmap0:");

        tOtfbTigStatus.ulValue = rSgeDebugOutput1;
400a2d98:	0020c0        	memw
400a2d9b:	c7a022        	movi	a2, 199
400a2d9e:	10c132        	addi	a3, a1, 16
400a2da1:	5b2ca2        	l32i	a10, a12, 0x16c
400a2da4:	41a9      	s32i.n	a10, a1, 16
400a2da6:	fe9e01        	l32r	a0, 400a2820 <_mcu2dram_text_start+0x20>
400a2da9:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:201
        TRACE_LOG((void*)&tOtfbTigStatus, sizeof(SGE_OTFB_TIG_STATUS), SGE_OTFB_TIG_STATUS, 0, "[SGE] ActiveBitmap1:");

        tOtfbTigStatus.ulValue = rSgeDebugOutput2;
400a2dac:	0020c0        	memw
400a2daf:	caa022        	movi	a2, 202
400a2db2:	10c132        	addi	a3, a1, 16
400a2db5:	5c2cb2        	l32i	a11, a12, 0x170
400a2db8:	41b9      	s32i.n	a11, a1, 16
400a2dba:	fe9901        	l32r	a0, 400a2820 <_mcu2dram_text_start+0x20>
400a2dbd:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:204
        TRACE_LOG((void*)&tOtfbTigStatus, sizeof(SGE_OTFB_TIG_STATUS), SGE_OTFB_TIG_STATUS, 0, "[SGE] ActiveBitmap2:");

        tOtfbTigStatus.ulValue = rSgeDebugOutput3;
400a2dc0:	0020c0        	memw
400a2dc3:	cda022        	movi	a2, 205
400a2dc6:	10c132        	addi	a3, a1, 16
400a2dc9:	5d2c02        	l32i	a0, a12, 0x174
400a2dcc:	4109      	s32i.n	a0, a1, 16
400a2dce:	fe9401        	l32r	a0, 400a2820 <_mcu2dram_text_start+0x20>
400a2dd1:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:189
{
    SGE_OTFB_TIG_STATUS tOtfbTigStatus;
    U32 ulDebugValue,ulCmdSlotGroup;

    ulDebugValue  = SGE_DEBUG_OTFB_ACTIVE_BITMAP;
    for(ulCmdSlotGroup = 0; ulCmdSlotGroup < 7;ulCmdSlotGroup ++)
400a2dd4:	3128      	l32i.n	a2, a1, 12
400a2dd6:	221b      	addi.n	a2, a2, 1
400a2dd8:	3129      	s32i.n	a2, a1, 12
400a2dda:	8f72b6        	bltui	a2, 7, 400a2d6d <FW_DbgShowAll+0xc9>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:227
{
    SGE_HID_CHAIN_NUM tChainCntStatus;
    U32 ulDebugValue,ulCmdSlotGroup;

    ulDebugValue  = SGE_DEBUG_HID_CHAIN_NUM;
    for(ulCmdSlotGroup = 0; ulCmdSlotGroup < (MAX_SLOT_NUM / 4);ulCmdSlotGroup ++)
400a2ddd:	fe8ad1        	l32r	a13, 400a2808 <_mcu2dram_text_start+0x8>
400a2de0:	030c      	movi.n	a3, 0
400a2de2:	5139      	s32i.n	a3, a1, 20
400a2de4:	e5a022        	movi	a2, 229
400a2de7:	14c132        	addi	a3, a1, 20
400a2dea:	fe8d01        	l32r	a0, 400a2820 <_mcu2dram_text_start+0x20>
400a2ded:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:231
    {
        TRACE_LOG((void*)&ulCmdSlotGroup, sizeof(U32), U32, 0, "[SGE] ChainCntStatus Group:");

        rSgeDebugInput = (ulDebugValue + ulCmdSlotGroup);
400a2df0:	5158      	l32i.n	a5, a1, 20
400a2df2:	8055d0        	add	a5, a5, a13
400a2df5:	0020c0        	memw
400a2df8:	596c52        	s32i	a5, a12, 0x164
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:233
        
        tChainCntStatus.ulValue = rSgeDebugOutput0;
400a2dfb:	0020c0        	memw
400a2dfe:	eaa022        	movi	a2, 234
400a2e01:	18c132        	addi	a3, a1, 24
400a2e04:	5a2c42        	l32i	a4, a12, 0x168
400a2e07:	066142        	s32i	a4, a1, 24
400a2e0a:	fe8501        	l32r	a0, 400a2820 <_mcu2dram_text_start+0x20>
400a2e0d:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:236
        TRACE_LOG((void*)&tChainCntStatus, sizeof(SGE_HID_CHAIN_NUM), SGE_HID_CHAIN_NUM, 0, "[SGE] ChainCntStatus0:");

        tChainCntStatus.ulValue = rSgeDebugOutput1;
400a2e10:	0020c0        	memw
400a2e13:	eda022        	movi	a2, 237
400a2e16:	18c132        	addi	a3, a1, 24
400a2e19:	5b2c62        	l32i	a6, a12, 0x16c
400a2e1c:	6169      	s32i.n	a6, a1, 24
400a2e1e:	fe8001        	l32r	a0, 400a2820 <_mcu2dram_text_start+0x20>
400a2e21:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:239
        TRACE_LOG((void*)&tChainCntStatus, sizeof(SGE_HID_CHAIN_NUM), SGE_HID_CHAIN_NUM, 0, "[SGE] ChainCntStatus1:");

        tChainCntStatus.ulValue = rSgeDebugOutput2;
400a2e24:	0020c0        	memw
400a2e27:	f0a022        	movi	a2, 240
400a2e2a:	18c132        	addi	a3, a1, 24
400a2e2d:	5c2c72        	l32i	a7, a12, 0x170
400a2e30:	6179      	s32i.n	a7, a1, 24
400a2e32:	fe7b01        	l32r	a0, 400a2820 <_mcu2dram_text_start+0x20>
400a2e35:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:242
        TRACE_LOG((void*)&tChainCntStatus, sizeof(SGE_HID_CHAIN_NUM), SGE_HID_CHAIN_NUM, 0, "[SGE] ChainCntStatus2:");

        tChainCntStatus.ulValue = rSgeDebugOutput3;
400a2e38:	0020c0        	memw
400a2e3b:	f3a022        	movi	a2, 243
400a2e3e:	18c132        	addi	a3, a1, 24
400a2e41:	5d2c82        	l32i	a8, a12, 0x174
400a2e44:	6189      	s32i.n	a8, a1, 24
400a2e46:	fe7601        	l32r	a0, 400a2820 <_mcu2dram_text_start+0x20>
400a2e49:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:227
{
    SGE_HID_CHAIN_NUM tChainCntStatus;
    U32 ulDebugValue,ulCmdSlotGroup;

    ulDebugValue  = SGE_DEBUG_HID_CHAIN_NUM;
    for(ulCmdSlotGroup = 0; ulCmdSlotGroup < (MAX_SLOT_NUM / 4);ulCmdSlotGroup ++)
400a2e4c:	5198      	l32i.n	a9, a1, 20
400a2e4e:	991b      	addi.n	a9, a9, 1
400a2e50:	5199      	s32i.n	a9, a1, 20
400a2e52:	8eb9b6        	bltui	a9, 16, 400a2de4 <FW_DbgShowAll+0x140>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:264
{
    SGE_OTFB_TRANS_ENG tOtfbTransStatus;
    U32 ulDebugValue,ulCmdSlotGroup;

    ulDebugValue  = SGE_DEBUG_OTFB_TRANS;
    for(ulCmdSlotGroup = 0; ulCmdSlotGroup < 7;ulCmdSlotGroup ++)
400a2e55:	fe6dd1        	l32r	a13, 400a280c <_mcu2dram_text_start+0xc>
400a2e58:	0a0c      	movi.n	a10, 0
400a2e5a:	71a9      	s32i.n	a10, a1, 28
400a2e5c:	0aa122        	movi	a2, 0x10a
400a2e5f:	1cc132        	addi	a3, a1, 28
400a2e62:	fe6f01        	l32r	a0, 400a2820 <_mcu2dram_text_start+0x20>
400a2e65:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:268
    {
        TRACE_LOG((void*)&ulCmdSlotGroup, sizeof(U32), U32, 0, "[SGE] OTFB TxOnGoing Group:");

        rSgeDebugInput = (ulDebugValue + ulCmdSlotGroup);
400a2e68:	7108      	l32i.n	a0, a1, 28
400a2e6a:	8000d0        	add	a0, a0, a13
400a2e6d:	0020c0        	memw
400a2e70:	596c02        	s32i	a0, a12, 0x164
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:270
        
        tOtfbTransStatus.ulValue = rSgeDebugOutput0;
400a2e73:	0020c0        	memw
400a2e76:	0fa122        	movi	a2, 0x10f
400a2e79:	20c132        	addi	a3, a1, 32
400a2e7c:	5a2cb2        	l32i	a11, a12, 0x168
400a2e7f:	0861b2        	s32i	a11, a1, 32
400a2e82:	fe6701        	l32r	a0, 400a2820 <_mcu2dram_text_start+0x20>
400a2e85:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:273
        TRACE_LOG((void*)&tOtfbTransStatus, sizeof(SGE_OTFB_TRANS_ENG), SGE_OTFB_TRANS_ENG, 0, "[SGE] TxOnGoing0:");

        tOtfbTransStatus.ulValue = rSgeDebugOutput1;
400a2e88:	0020c0        	memw
400a2e8b:	5b2c22        	l32i	a2, a12, 0x16c
400a2e8e:	20c132        	addi	a3, a1, 32
400a2e91:	8129      	s32i.n	a2, a1, 32
400a2e93:	12a122        	movi	a2, 0x112
400a2e96:	fe6201        	l32r	a0, 400a2820 <_mcu2dram_text_start+0x20>
400a2e99:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:276
        TRACE_LOG((void*)&tOtfbTransStatus, sizeof(SGE_OTFB_TRANS_ENG), SGE_OTFB_TRANS_ENG, 0, "[SGE] TxOnGoing1:");

        tOtfbTransStatus.ulValue = rSgeDebugOutput2;
400a2e9c:	0020c0        	memw
400a2e9f:	5c2c32        	l32i	a3, a12, 0x170
400a2ea2:	15a122        	movi	a2, 0x115
400a2ea5:	8139      	s32i.n	a3, a1, 32
400a2ea7:	20c132        	addi	a3, a1, 32
400a2eaa:	fe5d01        	l32r	a0, 400a2820 <_mcu2dram_text_start+0x20>
400a2ead:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:279
        TRACE_LOG((void*)&tOtfbTransStatus, sizeof(SGE_OTFB_TRANS_ENG), SGE_OTFB_TRANS_ENG, 0, "[SGE] TxOnGoing2:");

        tOtfbTransStatus.ulValue = rSgeDebugOutput3;
400a2eb0:	0020c0        	memw
400a2eb3:	18a122        	movi	a2, 0x118
400a2eb6:	20c132        	addi	a3, a1, 32
400a2eb9:	5d2c42        	l32i	a4, a12, 0x174
400a2ebc:	8149      	s32i.n	a4, a1, 32
400a2ebe:	fe5801        	l32r	a0, 400a2820 <_mcu2dram_text_start+0x20>
400a2ec1:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:264
{
    SGE_OTFB_TRANS_ENG tOtfbTransStatus;
    U32 ulDebugValue,ulCmdSlotGroup;

    ulDebugValue  = SGE_DEBUG_OTFB_TRANS;
    for(ulCmdSlotGroup = 0; ulCmdSlotGroup < 7;ulCmdSlotGroup ++)
400a2ec4:	7158      	l32i.n	a5, a1, 28
400a2ec6:	01c552        	addi	a5, a5, 1
400a2ec9:	7159      	s32i.n	a5, a1, 28
400a2ecb:	8d75b6        	bltui	a5, 7, 400a2e5c <FW_DbgShowAll+0x1b8>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:302
{
    SGE_DRAM_TRANS_ENG tDramTransStatus;
    U32 ulDebugValue;

    ulDebugValue  = SGE_DEBUG_DRAM_TRANS;
    rSgeDebugInput = ulDebugValue;
400a2ece:	fe5071        	l32r	a7, 400a2810 <_mcu2dram_text_start+0x10>
400a2ed1:	0020c0        	memw
400a2ed4:	596c72        	s32i	a7, a12, 0x164
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:304
    
    tDramTransStatus.ulValue = rSgeDebugOutput0;
400a2ed7:	0020c0        	memw
400a2eda:	31a122        	movi	a2, 0x131
400a2edd:	24c132        	addi	a3, a1, 36
400a2ee0:	5a2c62        	l32i	a6, a12, 0x168
400a2ee3:	096162        	s32i	a6, a1, 36
400a2ee6:	fe4e01        	l32r	a0, 400a2820 <_mcu2dram_text_start+0x20>
400a2ee9:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:307
    TRACE_LOG((void*)&tDramTransStatus, sizeof(SGE_DRAM_TRANS_ENG), SGE_DRAM_TRANS_ENG, 0, "[SGE] MCU1DR TxOnGoing:");

    tDramTransStatus.ulValue = rSgeDebugOutput1;
400a2eec:	0020c0        	memw
400a2eef:	34a122        	movi	a2, 0x134
400a2ef2:	24c132        	addi	a3, a1, 36
400a2ef5:	5b2c82        	l32i	a8, a12, 0x16c
400a2ef8:	9189      	s32i.n	a8, a1, 36
400a2efa:	fe4901        	l32r	a0, 400a2820 <_mcu2dram_text_start+0x20>
400a2efd:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:310
    TRACE_LOG((void*)&tDramTransStatus, sizeof(SGE_DRAM_TRANS_ENG), SGE_DRAM_TRANS_ENG, 0, "[SGE] MCU2DR TxOnGoing:");

    tDramTransStatus.ulValue = rSgeDebugOutput2;
400a2f00:	0020c0        	memw
400a2f03:	37a122        	movi	a2, 0x137
400a2f06:	24c132        	addi	a3, a1, 36
400a2f09:	5c2c92        	l32i	a9, a12, 0x170
400a2f0c:	9199      	s32i.n	a9, a1, 36
400a2f0e:	fe4401        	l32r	a0, 400a2820 <_mcu2dram_text_start+0x20>
400a2f11:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:313
    TRACE_LOG((void*)&tDramTransStatus, sizeof(SGE_DRAM_TRANS_ENG), SGE_DRAM_TRANS_ENG, 0, "[SGE] MCU1DW TxOnGoing:");

    tDramTransStatus.ulValue = rSgeDebugOutput3;
400a2f14:	0020c0        	memw
400a2f17:	3aa122        	movi	a2, 0x13a
400a2f1a:	24c132        	addi	a3, a1, 36
400a2f1d:	5d2ca2        	l32i	a10, a12, 0x174
400a2f20:	91a9      	s32i.n	a10, a1, 36
400a2f22:	fe3f01        	l32r	a0, 400a2820 <_mcu2dram_text_start+0x20>
400a2f25:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:317
    TRACE_LOG((void*)&tDramTransStatus, sizeof(SGE_DRAM_TRANS_ENG), SGE_DRAM_TRANS_ENG, 0, "[SGE] MCU2DW TxOnGoing:");

    ulDebugValue  = (SGE_DEBUG_DRAM_TRANS + 1);
    rSgeDebugInput = ulDebugValue;
400a2f28:	fe3bd1        	l32r	a13, 400a2814 <_mcu2dram_text_start+0x14>
400a2f2b:	0020c0        	memw
400a2f2e:	596cd2        	s32i	a13, a12, 0x164
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:319
    
    tDramTransStatus.ulValue = rSgeDebugOutput0;
400a2f31:	0020c0        	memw
400a2f34:	40a122        	movi	a2, 0x140
400a2f37:	24c132        	addi	a3, a1, 36
400a2f3a:	5a2cb2        	l32i	a11, a12, 0x168
400a2f3d:	91b9      	s32i.n	a11, a1, 36
400a2f3f:	fe3801        	l32r	a0, 400a2820 <_mcu2dram_text_start+0x20>
400a2f42:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:322
    TRACE_LOG((void*)&tDramTransStatus, sizeof(SGE_DRAM_TRANS_ENG), SGE_DRAM_TRANS_ENG, 0, "[SGE] MCU3DR TxOnGoing:");

    tDramTransStatus.ulValue = rSgeDebugOutput2;
400a2f45:	0020c0        	memw
400a2f48:	43a122        	movi	a2, 0x143
400a2f4b:	24c132        	addi	a3, a1, 36
400a2f4e:	5c2c02        	l32i	a0, a12, 0x170
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:399
    //L2_DbgShowAll();

    //L3_DbgShowAll();
#endif

    return;
400a2f51:	c1d8      	l32i.n	a13, a1, 48
400a2f53:	b1c8      	l32i.n	a12, a1, 44
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:322
    rSgeDebugInput = ulDebugValue;
    
    tDramTransStatus.ulValue = rSgeDebugOutput0;
    TRACE_LOG((void*)&tDramTransStatus, sizeof(SGE_DRAM_TRANS_ENG), SGE_DRAM_TRANS_ENG, 0, "[SGE] MCU3DR TxOnGoing:");

    tDramTransStatus.ulValue = rSgeDebugOutput2;
400a2f55:	9109      	s32i.n	a0, a1, 36
400a2f57:	fe3201        	l32r	a0, 400a2820 <_mcu2dram_text_start+0x20>
400a2f5a:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:399
    //L2_DbgShowAll();

    //L3_DbgShowAll();
#endif

    return;
400a2f5d:	a108      	l32i.n	a0, a1, 40
400a2f5f:	40c112        	addi	a1, a1, 64
400a2f62:	f00d      	ret.n

400a2f64 <L2_BbtIsGBbtBadBlock>:
L2_BbtIsGBbtBadBlock():
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:773
History    :
1. 2014.10.13 steven create
2. 2015.05.25 Jason refactoring
==============================================================================*/
GLOBAL BOOL L2_BbtIsGBbtBadBlock(U8 ucTLun, U16 usPhyBlk)
{
400a2f64:	f0c112        	addi	a1, a1, -16
400a2f67:	11c9      	s32i.n	a12, a1, 4
400a2f69:	0109      	s32i.n	a0, a1, 0
400a2f6b:	21d9      	s32i.n	a13, a1, 8
400a2f6d:	31e9      	s32i.n	a14, a1, 12
400a2f6f:	02dd      	mov.n	a13, a2
400a2f71:	03ed      	mov.n	a14, a3
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:777
    U8 ucPln;
    BOOL bBadBlk = FALSE;

    if(L2_BbtIsPbnBindingTableEnable() == FALSE)
400a2f73:	fe2e01        	l32r	a0, 400a282c <_mcu2dram_text_start+0x2c>
400a2f76:	0000c0        	callx0	a0
400a2f79:	044216        	beqz	a2, 400a2fc1 <L2_BbtIsGBbtBadBlock+0x5d>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:782
    {
        DBG_Printf("PBN binding table not ready\n");
        DBG_Getch();
    }
    for (ucPln = 0; ucPln < PLN_PER_LUN; ucPln++)
400a2f7c:	0c0c      	movi.n	a12, 0

400a2f7e <L2_BbtIsGBbtBadBlock+0x1a>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:786
    {
        // look up the PBN binding table to find out the plane block
        // current PBN maps to in the plane
        U16 usTargetPlaneBlock = L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, ucPln);
400a2f7e:	0e3d      	mov.n	a3, a14
400a2f80:	0d2d      	mov.n	a2, a13
400a2f82:	0c4d      	mov.n	a4, a12
400a2f84:	fe2b01        	l32r	a0, 400a2830 <_mcu2dram_text_start+0x30>
400a2f87:	0000c0        	callx0	a0
400a2f8a:	024d      	mov.n	a4, a2
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:787
        if (TRUE == L2_BbtGetGBbtBadBlkBit(ucTLun, ucPln, usTargetPlaneBlock))
400a2f8c:	203cc0        	or	a3, a12, a12
400a2f8f:	202dd0        	or	a2, a13, a13
400a2f92:	fe2801        	l32r	a0, 400a2834 <_mcu2dram_text_start+0x34>
400a2f95:	0000c0        	callx0	a0
400a2f98:	161226        	beqi	a2, 1, 400a2fb2 <L2_BbtIsGBbtBadBlock+0x4e>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:782
    if(L2_BbtIsPbnBindingTableEnable() == FALSE)
    {
        DBG_Printf("PBN binding table not ready\n");
        DBG_Getch();
    }
    for (ucPln = 0; ucPln < PLN_PER_LUN; ucPln++)
400a2f9b:	cc1b      	addi.n	a12, a12, 1
400a2f9d:	74c0c0        	extui	a12, a12, 0, 8
400a2fa0:	da4c66        	bnei	a12, 4, 400a2f7e <L2_BbtIsGBbtBadBlock+0x1a>
400a2fa3:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:794
            bBadBlk = TRUE;
            break;
        }
    }

    return bBadBlk;
400a2fa5:	11c8      	l32i.n	a12, a1, 4
400a2fa7:	21d8      	l32i.n	a13, a1, 8
400a2fa9:	31e8      	l32i.n	a14, a1, 12
400a2fab:	0108      	l32i.n	a0, a1, 0
400a2fad:	10c112        	addi	a1, a1, 16
400a2fb0:	f00d      	ret.n

400a2fb2 <L2_BbtIsGBbtBadBlock+0x4e>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:790
        // current PBN maps to in the plane
        U16 usTargetPlaneBlock = L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, ucPln);
        if (TRUE == L2_BbtGetGBbtBadBlkBit(ucTLun, ucPln, usTargetPlaneBlock))
        {
            bBadBlk = TRUE;
            break;
400a2fb2:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:794
        }
    }

    return bBadBlk;
400a2fb4:	11c8      	l32i.n	a12, a1, 4
400a2fb6:	21d8      	l32i.n	a13, a1, 8
400a2fb8:	31e8      	l32i.n	a14, a1, 12
400a2fba:	0108      	l32i.n	a0, a1, 0
400a2fbc:	10c112        	addi	a1, a1, 16
400a2fbf:	f00d      	ret.n

400a2fc1 <L2_BbtIsGBbtBadBlock+0x5d>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:779
    U8 ucPln;
    BOOL bBadBlk = FALSE;

    if(L2_BbtIsPbnBindingTableEnable() == FALSE)
    {
        DBG_Printf("PBN binding table not ready\n");
400a2fc1:	fe1821        	l32r	a2, 400a2824 <_mcu2dram_text_start+0x24>
400a2fc4:	fe1d01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a2fc7:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a2fca:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:89
****************************************************************************/
void MCU12_DRAM_TEXT DBG_Getch()
{
    U32 ulMcuId = HAL_GetMcuId();

    DBG_Printf("Fatal Error, MCU %d DBG_Getch!!!\n", ulMcuId);  while(1);
400a2fcd:	fe1621        	l32r	a2, 400a2828 <_mcu2dram_text_start+0x28>
400a2fd0:	fe1a01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a2fd3:	0000c0        	callx0	a0
400a2fd6:	ffff06        	j	400a2fd6 <L2_BbtIsGBbtBadBlock+0x72>

400a2fd9 <L2_BbtIsGBbtBadBlock+0x75>:
400a2fd9:	000000                                        ...

400a2fdc <L3_ExtHWriteLastPage..EJ_1482204275>:
L3_ExtHWriteLastPage():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:392
Usage      : 
History    : 
    1. 2016.8.16 JasonGuo create function
==============================================================================*/
LOCAL U32 MCU2_DRAM_TEXT L3_ExtHWriteLastPage(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a2fdc:	fe18b1        	l32r	a11, 400a283c <_mcu2dram_text_start+0x3c>
400a2fdf:	0fafa2        	movi	a10, -241
400a2fe2:	023d      	mov.n	a3, a2
400a2fe4:	c0c112        	addi	a1, a1, -64
400a2fe7:	d109      	s32i.n	a0, a1, 52
400a2fe9:	f1d9      	s32i.n	a13, a1, 60
400a2feb:	e1c9      	s32i.n	a12, a1, 56
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:406
    ucTLun = ptReqEntry->bsTLun;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usNewPhyBlk = ptExtHCtrl->bsNewPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    usPhyPage = ptCtrlEntry->bsPhyPage;
400a2fed:	021272        	l16ui	a7, a2, 4
400a2ff0:	9179      	s32i.n	a7, a1, 36
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:397
{
    U8 ucTLun;
    U16 usVirBlk, usPhyBlk, usNewPhyBlk, usVirPage, usPhyPage;
    U32 ulWriteDone;
    BOOL bResult;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
400a2ff2:	0228      	l32i.n	a2, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:398
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
400a2ff4:	93c8      	l32i.n	a12, a3, 36
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:401
    EXTD_ERRH_CTRL *ptExtHCtrl = &ptErrHEntry->tExtHCtrl;

    ucTLun = ptReqEntry->bsTLun;
400a2ff6:	0002d2        	l8ui	a13, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:408
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usNewPhyBlk = ptExtHCtrl->bsNewPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    usPhyPage = ptCtrlEntry->bsPhyPage;

    switch (ptExtHCtrl->bsSubStage)
400a2ff9:	fc98      	l32i.n	a9, a12, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:402
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
    EXTD_ERRH_CTRL *ptExtHCtrl = &ptErrHEntry->tExtHCtrl;

    ucTLun = ptReqEntry->bsTLun;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
400a2ffb:	3208      	l32i.n	a0, a2, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:404
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usNewPhyBlk = ptExtHCtrl->bsNewPhyBlk;
400a2ffd:	221c62        	l16ui	a6, a12, 68
400a3000:	b169      	s32i.n	a6, a1, 44
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:403
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
    EXTD_ERRH_CTRL *ptExtHCtrl = &ptErrHEntry->tExtHCtrl;

    ucTLun = ptReqEntry->bsTLun;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
400a3002:	944a00        	extui	a4, a0, 10, 10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:402
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
    EXTD_ERRH_CTRL *ptExtHCtrl = &ptErrHEntry->tExtHCtrl;

    ucTLun = ptReqEntry->bsTLun;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
400a3005:	945000        	extui	a5, a0, 0, 10
400a3008:	a159      	s32i.n	a5, a1, 40
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:403
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
400a300a:	8149      	s32i.n	a4, a1, 32
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:405
    usNewPhyBlk = ptExtHCtrl->bsNewPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
400a300c:	a50400        	extui	a0, a0, 20, 11
400a300f:	c109      	s32i.n	a0, a1, 48
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:408
    usPhyPage = ptCtrlEntry->bsPhyPage;

    switch (ptExtHCtrl->bsSubStage)
400a3011:	340490        	extui	a0, a9, 4, 4
400a3014:	06a016        	beqz	a0, 400a3082 <L3_ExtHWriteLastPage..EJ_1482204275+0xa6>
400a3017:	076122        	s32i	a2, a1, 28
400a301a:	fdc082        	addi	a8, a0, -3
400a301d:	096816        	beqz	a8, 400a30b7 <L3_ExtHWriteLastPage..EJ_1482204275+0xdb>
400a3020:	184026        	beqi	a0, 4, 400a303c <L3_ExtHWriteLastPage..EJ_1482204275+0x60>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:477
            }
            break;
        }
        default:
        {
            DBG_Printf("ExtH WriteLastPage SubStage Error.0x%x\n", (U32)ptCtrlEntry);
400a3023:	fe0721        	l32r	a2, 400a2840 <_mcu2dram_text_start+0x40>
400a3026:	fe0401        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a3029:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a302c:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:89
400a302f:	fdfe21        	l32r	a2, 400a2828 <_mcu2dram_text_start+0x28>
400a3032:	fe0101        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a3035:	0000c0        	callx0	a0

400a3038 <L3_ExtHWriteLastPage..EJ_1482204275+0x5c>:
400a3038:	ffff06        	j	400a3038 <L3_ExtHWriteLastPage..EJ_1482204275+0x5c>

400a303b <L3_ExtHWriteLastPage..EJ_1482204275+0x5f>:
	...

400a303c <L3_ExtHWriteLastPage..EJ_1482204275+0x60>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:459
            //DBG_Printf("TLun%d Blk%d_%d Page%d ExtH-WriteLastPage\n", ucTLun, usVirBlk, usNewPhyBlk, usVirPage);
            break;
        }
        case EXTH_SUB_WRITE_CHK:
        {
            bResult = *(U8*)ptExtHCtrl->ulStatusAddr;
400a303c:	122c02        	l32i	a0, a12, 72
400a303f:	000002        	l8ui	a0, a0, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:462
            if (SUBSYSTEM_STATUS_PENDING != bResult)
            {
                if (SUBSYSTEM_STATUS_SUCCESS != bResult)
400a3042:	1029a0        	and	a2, a9, a10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:460
            break;
        }
        case EXTH_SUB_WRITE_CHK:
        {
            bResult = *(U8*)ptExtHCtrl->ulStatusAddr;
            if (SUBSYSTEM_STATUS_PENDING != bResult)
400a3045:	1d1026        	beqi	a0, 1, 400a3066 <L3_ExtHWriteLastPage..EJ_1482204275+0x8a>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:462
            {
                if (SUBSYSTEM_STATUS_SUCCESS != bResult)
400a3048:	04d016        	beqz	a0, 400a3099 <L3_ExtHWriteLastPage..EJ_1482204275+0xbd>
400a304b:	054d      	mov.n	a4, a5
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:464
                {
                    ptExtHCtrl->bsSubStage = EXTH_SUB_FAIL;
400a304d:	80a032        	movi	a3, 128
400a3050:	202230        	or	a2, a2, a3
400a3053:	065d      	mov.n	a5, a6
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:465
                    DBG_Printf("TLun%d Blk%d_%d Page%d ExtH-WriteLastPage-Fail\n", ucTLun, usVirBlk, usNewPhyBlk, usVirPage);
400a3055:	0d3d      	mov.n	a3, a13
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:464
            bResult = *(U8*)ptExtHCtrl->ulStatusAddr;
            if (SUBSYSTEM_STATUS_PENDING != bResult)
            {
                if (SUBSYSTEM_STATUS_SUCCESS != bResult)
                {
                    ptExtHCtrl->bsSubStage = EXTH_SUB_FAIL;
400a3057:	0f6c22        	s32i	a2, a12, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:465
                    DBG_Printf("TLun%d Blk%d_%d Page%d ExtH-WriteLastPage-Fail\n", ucTLun, usVirBlk, usNewPhyBlk, usVirPage);
400a305a:	0c2162        	l32i	a6, a1, 48
400a305d:	fdf921        	l32r	a2, 400a2844 <_mcu2dram_text_start+0x44>
400a3060:	fdf601        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a3063:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:473
                {
                    ptExtHCtrl->bsSubStage = EXTH_SUB_SUCCESS;
                    DBG_Printf("TLun%d Blk%d_%d Page%d ExtH-WriteLastPage-Success\n", ucTLun, usVirBlk, usNewPhyBlk, usVirPage);
                }
            }
            break;
400a3066:	fc08      	l32i.n	a0, a12, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:482
            DBG_Printf("ExtH WriteLastPage SubStage Error.0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    ulWriteDone = ptExtHCtrl->bsSubStage;
400a3068:	342400        	extui	a2, a0, 4, 4
400a306b:	f9c242        	addi	a4, a2, -7
400a306e:	120416        	beqz	a4, 400a3192 <L3_ExtHWriteLastPage..EJ_1482204275+0x1b6>
400a3071:	f8c252        	addi	a5, a2, -8
400a3074:	11a516        	beqz	a5, 400a3192 <L3_ExtHWriteLastPage..EJ_1482204275+0x1b6>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:489
    {
        ulWriteDone = EXTH_SUB_DONE;
        DBG_Printf("TLun%d Blk%d_%d_%d Page%d_%d ExtH-WriteLastPage-Done\n", ucTLun, usVirBlk, usPhyBlk, usNewPhyBlk, usVirPage, usPhyPage);
    }

    return ulWriteDone;
400a3077:	e1c8      	l32i.n	a12, a1, 56
400a3079:	f1d8      	l32i.n	a13, a1, 60
400a307b:	d108      	l32i.n	a0, a1, 52
400a307d:	40c112        	addi	a1, a1, 64
400a3080:	f00d      	ret.n

400a3082 <L3_ExtHWriteLastPage..EJ_1482204275+0xa6>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:413
    switch (ptExtHCtrl->bsSubStage)
    {
        case EXTH_SUB_INIT:
        {
            ptExtHCtrl->ulStatusAddr = (U32)&l_aExtHFlashStatus[ucTLun];
            ptExtHCtrl->bsSubStage = EXTH_SUB_WRITE;
400a3082:	023c      	movi.n	a2, 48
400a3084:	1009a0        	and	a0, a9, a10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:412

    switch (ptExtHCtrl->bsSubStage)
    {
        case EXTH_SUB_INIT:
        {
            ptExtHCtrl->ulStatusAddr = (U32)&l_aExtHFlashStatus[ucTLun];
400a3087:	f0a532        	movi	a3, 0x5f0
400a308a:	3b3a      	add.n	a3, a11, a3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:413
            ptExtHCtrl->bsSubStage = EXTH_SUB_WRITE;
400a308c:	200020        	or	a0, a0, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:412

    switch (ptExtHCtrl->bsSubStage)
    {
        case EXTH_SUB_INIT:
        {
            ptExtHCtrl->ulStatusAddr = (U32)&l_aExtHFlashStatus[ucTLun];
400a308f:	3d3a      	add.n	a3, a13, a3
400a3091:	126c32        	s32i	a3, a12, 72
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:413
            ptExtHCtrl->bsSubStage = EXTH_SUB_WRITE;
400a3094:	fc09      	s32i.n	a0, a12, 60
400a3096:	fff386        	j	400a3068 <L3_ExtHWriteLastPage..EJ_1482204275+0x8c>

400a3099 <L3_ExtHWriteLastPage..EJ_1482204275+0xbd>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:469
                    ptExtHCtrl->bsSubStage = EXTH_SUB_FAIL;
                    DBG_Printf("TLun%d Blk%d_%d Page%d ExtH-WriteLastPage-Fail\n", ucTLun, usVirBlk, usNewPhyBlk, usVirPage);
                }
                else
                {
                    ptExtHCtrl->bsSubStage = EXTH_SUB_SUCCESS;
400a3099:	70a042        	movi	a4, 112
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:470
                    DBG_Printf("TLun%d Blk%d_%d Page%d ExtH-WriteLastPage-Success\n", ucTLun, usVirBlk, usNewPhyBlk, usVirPage);
400a309c:	0d3d      	mov.n	a3, a13
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:469
                    ptExtHCtrl->bsSubStage = EXTH_SUB_FAIL;
                    DBG_Printf("TLun%d Blk%d_%d Page%d ExtH-WriteLastPage-Fail\n", ucTLun, usVirBlk, usNewPhyBlk, usVirPage);
                }
                else
                {
                    ptExtHCtrl->bsSubStage = EXTH_SUB_SUCCESS;
400a309e:	204240        	or	a4, a2, a4
400a30a1:	fc49      	s32i.n	a4, a12, 60
400a30a3:	054d      	mov.n	a4, a5
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:470
                    DBG_Printf("TLun%d Blk%d_%d Page%d ExtH-WriteLastPage-Success\n", ucTLun, usVirBlk, usNewPhyBlk, usVirPage);
400a30a5:	fde821        	l32r	a2, 400a2848 <_mcu2dram_text_start+0x48>
400a30a8:	205660        	or	a5, a6, a6
400a30ab:	0c2162        	l32i	a6, a1, 48
400a30ae:	fde201        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a30b1:	0000c0        	callx0	a0
400a30b4:	ffeb86        	j	400a3066 <L3_ExtHWriteLastPage..EJ_1482204275+0x8a>

400a30b7 <L3_ExtHWriteLastPage..EJ_1482204275+0xdb>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:420
            break;
        }
        case EXTH_SUB_WRITE:
        {
            U32 ulTargetRed;
            FCMD_REQ_ENTRY *ptTmpReqEntry = L3_FCMDQAllocTmpReqEntry(ucTLun);
400a30b7:	0d2d      	mov.n	a2, a13
400a30b9:	fded01        	l32r	a0, 400a2870 <_mcu2dram_text_start+0x70>
400a30bc:	0000c0        	callx0	a0
400a30bf:	6129      	s32i.n	a2, a1, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:421
            FCMD_INTR_CTRL_ENTRY *ptNewCtrlEntry = L3_FCMDQAllocIntrEntry(ucTLun);
400a30c1:	202dd0        	or	a2, a13, a13
400a30c4:	fdec01        	l32r	a0, 400a2874 <_mcu2dram_text_start+0x74>
400a30c7:	0000c0        	callx0	a0
400a30ca:	4129      	s32i.n	a2, a1, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:429
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_WRITE;
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
            ptTmpReqEntry->tFlashDesc.bsPhyBlk = usNewPhyBlk;
            ptTmpReqEntry->tFlashDesc.bsVirPage = usVirPage;
            ptTmpReqEntry->tFlashDesc.bsBlkMod = ptReqEntry->tFlashDesc.bsBlkMod;
400a30cc:	7138      	l32i.n	a3, a1, 28
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:428
            // Alloc a temp write request entry and Fill it.
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_WRITE;
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
            ptTmpReqEntry->tFlashDesc.bsPhyBlk = usNewPhyBlk;
            ptTmpReqEntry->tFlashDesc.bsVirPage = usVirPage;
400a30ce:	c168      	l32i.n	a6, a1, 48
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:425
            FCMD_REQ_ENTRY *ptTmpReqEntry = L3_FCMDQAllocTmpReqEntry(ucTLun);
            FCMD_INTR_CTRL_ENTRY *ptNewCtrlEntry = L3_FCMDQAllocIntrEntry(ucTLun);

            // Alloc a temp write request entry and Fill it.
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_WRITE;
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
400a30d0:	fde001        	l32r	a0, 400a2850 <_mcu2dram_text_start+0x50>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:427
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
            ptTmpReqEntry->tFlashDesc.bsPhyBlk = usNewPhyBlk;
400a30d3:	b178      	l32i.n	a7, a1, 44
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:426
            FCMD_INTR_CTRL_ENTRY *ptNewCtrlEntry = L3_FCMDQAllocIntrEntry(ucTLun);

            // Alloc a temp write request entry and Fill it.
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_WRITE;
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
400a30d5:	a198      	l32i.n	a9, a1, 40
400a30d7:	6188      	l32i.n	a8, a1, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:424
            U32 ulTargetRed;
            FCMD_REQ_ENTRY *ptTmpReqEntry = L3_FCMDQAllocTmpReqEntry(ucTLun);
            FCMD_INTR_CTRL_ENTRY *ptNewCtrlEntry = L3_FCMDQAllocIntrEntry(ucTLun);

            // Alloc a temp write request entry and Fill it.
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_WRITE;
400a30d9:	fddcb1        	l32r	a11, 400a284c <_mcu2dram_text_start+0x4c>
400a30dc:	08a8      	l32i.n	a10, a8, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:426
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
400a30de:	3858      	l32i.n	a5, a8, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:424
            U32 ulTargetRed;
            FCMD_REQ_ENTRY *ptTmpReqEntry = L3_FCMDQAllocTmpReqEntry(ucTLun);
            FCMD_INTR_CTRL_ENTRY *ptNewCtrlEntry = L3_FCMDQAllocIntrEntry(ucTLun);

            // Alloc a temp write request entry and Fill it.
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_WRITE;
400a30e0:	10aab0        	and	a10, a10, a11
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:426
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
400a30e3:	410954        	insbits	a5, a9, 0, 9
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:425
            FCMD_REQ_ENTRY *ptTmpReqEntry = L3_FCMDQAllocTmpReqEntry(ucTLun);
            FCMD_INTR_CTRL_ENTRY *ptNewCtrlEntry = L3_FCMDQAllocIntrEntry(ucTLun);

            // Alloc a temp write request entry and Fill it.
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_WRITE;
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
400a30e6:	fddbb1        	l32r	a11, 400a2854 <_mcu2dram_text_start+0x54>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:427
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
            ptTmpReqEntry->tFlashDesc.bsPhyBlk = usNewPhyBlk;
400a30e9:	83a754        	insbits	a5, a7, 10, 19
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:425
            FCMD_REQ_ENTRY *ptTmpReqEntry = L3_FCMDQAllocTmpReqEntry(ucTLun);
            FCMD_INTR_CTRL_ENTRY *ptNewCtrlEntry = L3_FCMDQAllocIntrEntry(ucTLun);

            // Alloc a temp write request entry and Fill it.
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_WRITE;
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
400a30ec:	10aa00        	and	a10, a10, a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:435
            ptTmpReqEntry->tFlashDesc.bsSecStart = 0;
            ptTmpReqEntry->tFlashDesc.bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[0].bsBufID = ptReqEntry->atBufDesc[0].bsBufID;
            ptTmpReqEntry->atBufDesc[0].bsSecStart = 0;
            ptTmpReqEntry->atBufDesc[0].bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[1].bsBufID = INVALID_4F;
400a30ef:	fdda71        	l32r	a7, 400a2858 <_mcu2dram_text_start+0x58>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:429
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_WRITE;
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
            ptTmpReqEntry->tFlashDesc.bsPhyBlk = usNewPhyBlk;
            ptTmpReqEntry->tFlashDesc.bsVirPage = usVirPage;
            ptTmpReqEntry->tFlashDesc.bsBlkMod = ptReqEntry->tFlashDesc.bsBlkMod;
400a30f2:	4808      	l32i.n	a0, a8, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:428
            // Alloc a temp write request entry and Fill it.
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_WRITE;
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
            ptTmpReqEntry->tFlashDesc.bsPhyBlk = usNewPhyBlk;
            ptTmpReqEntry->tFlashDesc.bsVirPage = usVirPage;
400a30f4:	f24654        	insbits	a5, a6, 20, 30
400a30f7:	3859      	s32i.n	a5, a8, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:425
            FCMD_REQ_ENTRY *ptTmpReqEntry = L3_FCMDQAllocTmpReqEntry(ucTLun);
            FCMD_INTR_CTRL_ENTRY *ptNewCtrlEntry = L3_FCMDQAllocIntrEntry(ucTLun);

            // Alloc a temp write request entry and Fill it.
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_WRITE;
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
400a30f9:	20aab0        	or	a10, a10, a11
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:436
            ptTmpReqEntry->tFlashDesc.bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[0].bsBufID = ptReqEntry->atBufDesc[0].bsBufID;
            ptTmpReqEntry->atBufDesc[0].bsSecStart = 0;
            ptTmpReqEntry->atBufDesc[0].bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[1].bsBufID = INVALID_4F;
            ulTargetRed = RED_ABSOLUTE_ADDR(MCU2_ID, ucTLun, ptNewCtrlEntry->bsCtrlPtr);
400a30fc:	115de0        	slli	a5, a13, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:421
        }
        case EXTH_SUB_WRITE:
        {
            U32 ulTargetRed;
            FCMD_REQ_ENTRY *ptTmpReqEntry = L3_FCMDQAllocTmpReqEntry(ucTLun);
            FCMD_INTR_CTRL_ENTRY *ptNewCtrlEntry = L3_FCMDQAllocIntrEntry(ucTLun);
400a30ff:	80afb2        	movi	a11, -128
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:425

            // Alloc a temp write request entry and Fill it.
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_WRITE;
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
400a3102:	08a9      	s32i.n	a10, a8, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:429
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
            ptTmpReqEntry->tFlashDesc.bsPhyBlk = usNewPhyBlk;
            ptTmpReqEntry->tFlashDesc.bsVirPage = usVirPage;
            ptTmpReqEntry->tFlashDesc.bsBlkMod = ptReqEntry->tFlashDesc.bsBlkMod;
400a3104:	4348      	l32i.n	a4, a3, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:421
        }
        case EXTH_SUB_WRITE:
        {
            U32 ulTargetRed;
            FCMD_REQ_ENTRY *ptTmpReqEntry = L3_FCMDQAllocTmpReqEntry(ucTLun);
            FCMD_INTR_CTRL_ENTRY *ptNewCtrlEntry = L3_FCMDQAllocIntrEntry(ucTLun);
400a3106:	0a0c      	movi.n	a10, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:429
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_WRITE;
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
            ptTmpReqEntry->tFlashDesc.bsPhyBlk = usNewPhyBlk;
            ptTmpReqEntry->tFlashDesc.bsVirPage = usVirPage;
            ptTmpReqEntry->tFlashDesc.bsBlkMod = ptReqEntry->tFlashDesc.bsBlkMod;
400a3108:	f54040        	extui	a4, a4, 16, 16
400a310b:	910404        	insbits	a0, a4, 16, 17
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:436
            ptTmpReqEntry->tFlashDesc.bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[0].bsBufID = ptReqEntry->atBufDesc[0].bsBufID;
            ptTmpReqEntry->atBufDesc[0].bsSecStart = 0;
            ptTmpReqEntry->atBufDesc[0].bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[1].bsBufID = INVALID_4F;
            ulTargetRed = RED_ABSOLUTE_ADDR(MCU2_ID, ucTLun, ptNewCtrlEntry->bsCtrlPtr);
400a310e:	fdd341        	l32r	a4, 400a285c <_mcu2dram_text_start+0x5c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:429
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_WRITE;
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
            ptTmpReqEntry->tFlashDesc.bsPhyBlk = usNewPhyBlk;
            ptTmpReqEntry->tFlashDesc.bsVirPage = usVirPage;
            ptTmpReqEntry->tFlashDesc.bsBlkMod = ptReqEntry->tFlashDesc.bsBlkMod;
400a3111:	4809      	s32i.n	a0, a8, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:431
            ptTmpReqEntry->tFlashDesc.bsSecStart = 0;
            ptTmpReqEntry->tFlashDesc.bsSecLen = SEC_PER_BUF;
400a3113:	1148b2        	s8i	a11, a8, 17
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:430
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
            ptTmpReqEntry->tFlashDesc.bsPhyBlk = usNewPhyBlk;
            ptTmpReqEntry->tFlashDesc.bsVirPage = usVirPage;
            ptTmpReqEntry->tFlashDesc.bsBlkMod = ptReqEntry->tFlashDesc.bsBlkMod;
            ptTmpReqEntry->tFlashDesc.bsSecStart = 0;
400a3116:	1048a2        	s8i	a10, a8, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:432
            ptTmpReqEntry->tFlashDesc.bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[0].bsBufID = ptReqEntry->atBufDesc[0].bsBufID;
400a3119:	0a1392        	l16ui	a9, a3, 20
400a311c:	0a5892        	s16i	a9, a8, 20
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:435
            ptTmpReqEntry->atBufDesc[0].bsSecStart = 0;
            ptTmpReqEntry->atBufDesc[0].bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[1].bsBufID = INVALID_4F;
400a311f:	0c5872        	s16i	a7, a8, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:434
            ptTmpReqEntry->tFlashDesc.bsBlkMod = ptReqEntry->tFlashDesc.bsBlkMod;
            ptTmpReqEntry->tFlashDesc.bsSecStart = 0;
            ptTmpReqEntry->tFlashDesc.bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[0].bsBufID = ptReqEntry->atBufDesc[0].bsBufID;
            ptTmpReqEntry->atBufDesc[0].bsSecStart = 0;
            ptTmpReqEntry->atBufDesc[0].bsSecLen = SEC_PER_BUF;
400a3122:	1748b2        	s8i	a11, a8, 23
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:433
            ptTmpReqEntry->tFlashDesc.bsVirPage = usVirPage;
            ptTmpReqEntry->tFlashDesc.bsBlkMod = ptReqEntry->tFlashDesc.bsBlkMod;
            ptTmpReqEntry->tFlashDesc.bsSecStart = 0;
            ptTmpReqEntry->tFlashDesc.bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[0].bsBufID = ptReqEntry->atBufDesc[0].bsBufID;
            ptTmpReqEntry->atBufDesc[0].bsSecStart = 0;
400a3125:	1648a2        	s8i	a10, a8, 22
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:437
            ptTmpReqEntry->atBufDesc[0].bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[1].bsBufID = INVALID_4F;
            ulTargetRed = RED_ABSOLUTE_ADDR(MCU2_ID, ucTLun, ptNewCtrlEntry->bsCtrlPtr);
            COM_MemCpy((U32*)ulTargetRed, (U32*)ptReqEntry->ulSpareAddr, RED_SW_SZ_DW);
400a3128:	2338      	l32i.n	a3, a3, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:436
            ptTmpReqEntry->tFlashDesc.bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[0].bsBufID = ptReqEntry->atBufDesc[0].bsBufID;
            ptTmpReqEntry->atBufDesc[0].bsSecStart = 0;
            ptTmpReqEntry->atBufDesc[0].bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[1].bsBufID = INVALID_4F;
            ulTargetRed = RED_ABSOLUTE_ADDR(MCU2_ID, ucTLun, ptNewCtrlEntry->bsCtrlPtr);
400a312a:	1268      	l32i.n	a6, a2, 4
400a312c:	fdc421        	l32r	a2, 400a283c <_mcu2dram_text_start+0x3c>
400a312f:	356c60        	extui	a6, a6, 28, 4
400a3132:	162222        	l32i	a2, a2, 88
400a3135:	010654        	insbits	a5, a6, 0, 1
400a3138:	115570        	slli	a5, a5, 9
400a313b:	225a      	add.n	a2, a2, a5
400a313d:	224a      	add.n	a2, a2, a4
400a313f:	5129      	s32i.n	a2, a1, 20
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:437
            COM_MemCpy((U32*)ulTargetRed, (U32*)ptReqEntry->ulSpareAddr, RED_SW_SZ_DW);
400a3141:	044c      	movi.n	a4, 64
400a3143:	fdcd01        	l32r	a0, 400a2878 <_mcu2dram_text_start+0x78>
400a3146:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:444
            *(U8*)ptExtHCtrl->ulStatusAddr = SUBSYSTEM_STATUS_PENDING;
            ptTmpReqEntry->ulReqStsAddr = ptExtHCtrl->ulStatusAddr;
            ptTmpReqEntry->bsReqUptMod = REQ_STS_UPT_MANUL;

            // Alloc a new intr ctrl entry and fill it.
            ptNewCtrlEntry->bsIntrReq = TRUE;
400a3149:	fdc731        	l32r	a3, 400a2868 <_mcu2dram_text_start+0x68>
400a314c:	4128      	l32i.n	a2, a1, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:441
            ulTargetRed = RED_ABSOLUTE_ADDR(MCU2_ID, ucTLun, ptNewCtrlEntry->bsCtrlPtr);
            COM_MemCpy((U32*)ulTargetRed, (U32*)ptReqEntry->ulSpareAddr, RED_SW_SZ_DW);
            ptTmpReqEntry->ulSpareAddr = ulTargetRed;
            *(U8*)ptExtHCtrl->ulStatusAddr = SUBSYSTEM_STATUS_PENDING;
            ptTmpReqEntry->ulReqStsAddr = ptExtHCtrl->ulStatusAddr;
            ptTmpReqEntry->bsReqUptMod = REQ_STS_UPT_MANUL;
400a314e:	fdc561        	l32r	a6, 400a2864 <_mcu2dram_text_start+0x64>
400a3151:	fdc371        	l32r	a7, 400a2860 <_mcu2dram_text_start+0x60>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:439
            ptTmpReqEntry->atBufDesc[0].bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[1].bsBufID = INVALID_4F;
            ulTargetRed = RED_ABSOLUTE_ADDR(MCU2_ID, ucTLun, ptNewCtrlEntry->bsCtrlPtr);
            COM_MemCpy((U32*)ulTargetRed, (U32*)ptReqEntry->ulSpareAddr, RED_SW_SZ_DW);
            ptTmpReqEntry->ulSpareAddr = ulTargetRed;
            *(U8*)ptExtHCtrl->ulStatusAddr = SUBSYSTEM_STATUS_PENDING;
400a3154:	122ca2        	l32i	a10, a12, 72
400a3157:	190c      	movi.n	a9, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:438
            ptTmpReqEntry->atBufDesc[0].bsSecStart = 0;
            ptTmpReqEntry->atBufDesc[0].bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[1].bsBufID = INVALID_4F;
            ulTargetRed = RED_ABSOLUTE_ADDR(MCU2_ID, ucTLun, ptNewCtrlEntry->bsCtrlPtr);
            COM_MemCpy((U32*)ulTargetRed, (U32*)ptReqEntry->ulSpareAddr, RED_SW_SZ_DW);
            ptTmpReqEntry->ulSpareAddr = ulTargetRed;
400a3159:	6148      	l32i.n	a4, a1, 24
400a315b:	51b8      	l32i.n	a11, a1, 20
400a315d:	24b9      	s32i.n	a11, a4, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:439
            *(U8*)ptExtHCtrl->ulStatusAddr = SUBSYSTEM_STATUS_PENDING;
400a315f:	004a92        	s8i	a9, a10, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:441
            ptTmpReqEntry->ulReqStsAddr = ptExtHCtrl->ulStatusAddr;
            ptTmpReqEntry->bsReqUptMod = REQ_STS_UPT_MANUL;
400a3162:	0458      	l32i.n	a5, a4, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:440
            ptTmpReqEntry->atBufDesc[1].bsBufID = INVALID_4F;
            ulTargetRed = RED_ABSOLUTE_ADDR(MCU2_ID, ucTLun, ptNewCtrlEntry->bsCtrlPtr);
            COM_MemCpy((U32*)ulTargetRed, (U32*)ptReqEntry->ulSpareAddr, RED_SW_SZ_DW);
            ptTmpReqEntry->ulSpareAddr = ulTargetRed;
            *(U8*)ptExtHCtrl->ulStatusAddr = SUBSYSTEM_STATUS_PENDING;
            ptTmpReqEntry->ulReqStsAddr = ptExtHCtrl->ulStatusAddr;
400a3164:	122c82        	l32i	a8, a12, 72
400a3167:	1489      	s32i.n	a8, a4, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:441
            ptTmpReqEntry->bsReqUptMod = REQ_STS_UPT_MANUL;
400a3169:	105570        	and	a5, a5, a7
400a316c:	205560        	or	a5, a5, a6
400a316f:	0459      	s32i.n	a5, a4, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:444

            // Alloc a new intr ctrl entry and fill it.
            ptNewCtrlEntry->bsIntrReq = TRUE;
400a3171:	2208      	l32i.n	a0, a2, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:445
            ptNewCtrlEntry->ptReqEntry = ptTmpReqEntry;
400a3173:	0249      	s32i.n	a4, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:444
            *(U8*)ptExtHCtrl->ulStatusAddr = SUBSYSTEM_STATUS_PENDING;
            ptTmpReqEntry->ulReqStsAddr = ptExtHCtrl->ulStatusAddr;
            ptTmpReqEntry->bsReqUptMod = REQ_STS_UPT_MANUL;

            // Alloc a new intr ctrl entry and fill it.
            ptNewCtrlEntry->bsIntrReq = TRUE;
400a3175:	200030        	or	a0, a0, a3
400a3178:	2209      	s32i.n	a0, a2, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:448
            ptNewCtrlEntry->ptReqEntry = ptTmpReqEntry;

            // Send an internal flash request.
            bResult = L3_IFSendNormalFCmd(ptNewCtrlEntry);
400a317a:	fdc001        	l32r	a0, 400a287c <_mcu2dram_text_start+0x7c>
400a317d:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:453
             #ifdef SIM
            L3_DbgFCmdPrint(ptNewCtrlEntry, (TRUE == bResult) ? "WrLstPage_Success" : "WrLstPage_Fail");
            #endif

            ptExtHCtrl->bsSubStage = EXTH_SUB_WRITE_CHK;
400a3180:	024c      	movi.n	a2, 64
400a3182:	fc08      	l32i.n	a0, a12, 60
400a3184:	0faf32        	movi	a3, -241
400a3187:	100030        	and	a0, a0, a3
400a318a:	200020        	or	a0, a0, a2
400a318d:	fc09      	s32i.n	a0, a12, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:455
            //DBG_Printf("TLun%d Blk%d_%d Page%d ExtH-WriteLastPage\n", ucTLun, usVirBlk, usNewPhyBlk, usVirPage);
            break;
400a318f:	ffb546        	j	400a3068 <L3_ExtHWriteLastPage..EJ_1482204275+0x8c>

400a3192 <L3_ExtHWriteLastPage..EJ_1482204275+0x1b6>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:486

    ulWriteDone = ptExtHCtrl->bsSubStage;
    if (EXTH_SUB_SUCCESS == ulWriteDone || EXTH_SUB_FAIL == ulWriteDone)
    {
        ulWriteDone = EXTH_SUB_DONE;
        DBG_Printf("TLun%d Blk%d_%d_%d Page%d_%d ExtH-WriteLastPage-Done\n", ucTLun, usVirBlk, usPhyBlk, usNewPhyBlk, usVirPage, usPhyPage);
400a3192:	8158      	l32i.n	a5, a1, 32
400a3194:	b168      	l32i.n	a6, a1, 44
400a3196:	c178      	l32i.n	a7, a1, 48
400a3198:	fdb521        	l32r	a2, 400a286c <_mcu2dram_text_start+0x6c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:489
    }

    return ulWriteDone;
400a319b:	e1c8      	l32i.n	a12, a1, 56
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:486

    ulWriteDone = ptExtHCtrl->bsSubStage;
    if (EXTH_SUB_SUCCESS == ulWriteDone || EXTH_SUB_FAIL == ulWriteDone)
    {
        ulWriteDone = EXTH_SUB_DONE;
        DBG_Printf("TLun%d Blk%d_%d_%d Page%d_%d ExtH-WriteLastPage-Done\n", ucTLun, usVirBlk, usPhyBlk, usNewPhyBlk, usVirPage, usPhyPage);
400a319d:	0d3d      	mov.n	a3, a13
400a319f:	9148      	l32i.n	a4, a1, 36
400a31a1:	0149      	s32i.n	a4, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:489
    }

    return ulWriteDone;
400a31a3:	f1d8      	l32i.n	a13, a1, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:486

    ulWriteDone = ptExtHCtrl->bsSubStage;
    if (EXTH_SUB_SUCCESS == ulWriteDone || EXTH_SUB_FAIL == ulWriteDone)
    {
        ulWriteDone = EXTH_SUB_DONE;
        DBG_Printf("TLun%d Blk%d_%d_%d Page%d_%d ExtH-WriteLastPage-Done\n", ucTLun, usVirBlk, usPhyBlk, usNewPhyBlk, usVirPage, usPhyPage);
400a31a5:	a148      	l32i.n	a4, a1, 40
400a31a7:	fda401        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a31aa:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:483
            DBG_Getch();
        }
    }

    ulWriteDone = ptExtHCtrl->bsSubStage;
    if (EXTH_SUB_SUCCESS == ulWriteDone || EXTH_SUB_FAIL == ulWriteDone)
400a31ad:	920c      	movi.n	a2, 9
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:489
    {
        ulWriteDone = EXTH_SUB_DONE;
        DBG_Printf("TLun%d Blk%d_%d_%d Page%d_%d ExtH-WriteLastPage-Done\n", ucTLun, usVirBlk, usPhyBlk, usNewPhyBlk, usVirPage, usPhyPage);
    }

    return ulWriteDone;
400a31af:	d108      	l32i.n	a0, a1, 52
400a31b1:	40c112        	addi	a1, a1, 64
400a31b4:	f00d      	ret.n

400a31b6 <L3_ExtHWriteLastPage..EJ_1482204275+0x1da>:
	...

400a31b8 <L3_ExtHCopyData..DJ_1482204275>:
L3_ExtHCopyData():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:174
Usage      : 
History    : 
    1. 2016.8.11 JasonGuo create function
==============================================================================*/
LOCAL U32 MCU2_DRAM_TEXT L3_ExtHCopyData(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{    
400a31b8:	0faf42        	movi	a4, -241
400a31bb:	70a092        	movi	a9, 112
400a31be:	023d      	mov.n	a3, a2
400a31c0:	a0c112        	addi	a1, a1, -96
400a31c3:	1261e2        	s32i	a14, a1, 72
400a31c6:	f109      	s32i.n	a0, a1, 60
400a31c8:	1361f2        	s32i	a15, a1, 76
400a31cb:	1061c2        	s32i	a12, a1, 64
400a31ce:	1161d2        	s32i	a13, a1, 68
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:179
    U8 ucTLun;
    U16 usVirBlk, usPhyBlk, usNewPhyBlk, usVirPage;
    U32 ulCopyDataDone;
    BOOL bResult;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
400a31d1:	0278      	l32i.n	a7, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:180
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
400a31d3:	92d8      	l32i.n	a13, a2, 36
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:179
{    
    U8 ucTLun;
    U16 usVirBlk, usPhyBlk, usNewPhyBlk, usVirPage;
    U32 ulCopyDataDone;
    BOOL bResult;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
400a31d5:	e179      	s32i.n	a7, a1, 56
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:182
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
    EXTD_ERRH_CTRL *ptExtHCtrl = &ptErrHEntry->tExtHCtrl;
    SDL_NODE *ptCurBufNode = (SDL_NODE *)ptExtHCtrl->ulTmpBufAddr;
400a31d7:	132dc2        	l32i	a12, a13, 76
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:190
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usNewPhyBlk = ptExtHCtrl->bsNewPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;

    switch (ptExtHCtrl->bsSubStage)
400a31da:	fd28      	l32i.n	a2, a13, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:184
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
    EXTD_ERRH_CTRL *ptExtHCtrl = &ptErrHEntry->tExtHCtrl;
    SDL_NODE *ptCurBufNode = (SDL_NODE *)ptExtHCtrl->ulTmpBufAddr;

    ucTLun = ptReqEntry->bsTLun;
400a31dc:	0007f2        	l8ui	a15, a7, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:187
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usNewPhyBlk = ptExtHCtrl->bsNewPhyBlk;
400a31df:	221d82        	l16ui	a8, a13, 68
400a31e2:	d189      	s32i.n	a8, a1, 52
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:185
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
    EXTD_ERRH_CTRL *ptExtHCtrl = &ptErrHEntry->tExtHCtrl;
    SDL_NODE *ptCurBufNode = (SDL_NODE *)ptExtHCtrl->ulTmpBufAddr;

    ucTLun = ptReqEntry->bsTLun;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
400a31e4:	3778      	l32i.n	a7, a7, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:190
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usNewPhyBlk = ptExtHCtrl->bsNewPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;

    switch (ptExtHCtrl->bsSubStage)
400a31e6:	340420        	extui	a0, a2, 4, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:185
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
    EXTD_ERRH_CTRL *ptExtHCtrl = &ptErrHEntry->tExtHCtrl;
    SDL_NODE *ptCurBufNode = (SDL_NODE *)ptExtHCtrl->ulTmpBufAddr;

    ucTLun = ptReqEntry->bsTLun;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
400a31e9:	94e070        	extui	a14, a7, 0, 10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:186
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
400a31ec:	948a70        	extui	a8, a7, 10, 10
400a31ef:	c189      	s32i.n	a8, a1, 48
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:188
    usNewPhyBlk = ptExtHCtrl->bsNewPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
400a31f1:	a57470        	extui	a7, a7, 20, 11
400a31f4:	b179      	s32i.n	a7, a1, 44
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:190

    switch (ptExtHCtrl->bsSubStage)
400a31f6:	0a3016        	beqz	a0, 400a329d <L3_ExtHCopyData..DJ_1482204275+0xe5>
400a31f9:	ffc082        	addi	a8, a0, -1
400a31fc:	224816        	beqz	a8, 400a3424 <L3_ExtHCopyData..DJ_1482204275+0x26c>
400a31ff:	522026        	beqi	a0, 2, 400a3255 <L3_ExtHCopyData..DJ_1482204275+0x9d>
400a3202:	fdc052        	addi	a5, a0, -3
400a3205:	2fe516        	beqz	a5, 400a3507 <L3_ExtHCopyData..DJ_1482204275+0x34f>
400a3208:	194026        	beqi	a0, 4, 400a3225 <L3_ExtHCopyData..DJ_1482204275+0x6d>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:361
            }
            break;
        }
        default:
        {
            DBG_Printf("CopyData Stage Error.0x%x\n", (U32)ptCtrlEntry);
400a320b:	fd9d21        	l32r	a2, 400a2880 <_mcu2dram_text_start+0x80>
400a320e:	fd8a01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a3211:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a3214:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:89
400a3217:	fd8421        	l32r	a2, 400a2828 <_mcu2dram_text_start+0x28>
400a321a:	fd8701        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a321d:	0000c0        	callx0	a0

400a3220 <L3_ExtHCopyData..DJ_1482204275+0x68>:
400a3220:	ffff06        	j	400a3220 <L3_ExtHCopyData..DJ_1482204275+0x68>

400a3223 <L3_ExtHCopyData..DJ_1482204275+0x6b>:
	...

400a3225 <L3_ExtHCopyData..DJ_1482204275+0x6d>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:334
            
            break;
        }
        case EXTH_SUB_WRITE_CHK:
        {
            bResult = *(U8*)ptExtHCtrl->ulStatusAddr;
400a3225:	122d02        	l32i	a0, a13, 72
400a3228:	000002        	l8ui	a0, a0, 0
400a322b:	600b      	addi.n	a6, a0, -1
400a322d:	047616        	beqz	a6, 400a3278 <L3_ExtHCopyData..DJ_1482204275+0xc0>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:337
            if (SUBSYSTEM_STATUS_PENDING != bResult)
            {
                if (SUBSYSTEM_STATUS_SUCCESS != bResult)
400a3230:	1b4016        	beqz	a0, 400a33e8 <L3_ExtHCopyData..DJ_1482204275+0x230>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:340
                {
                    ptExtHCtrl->bsSubStage = EXTH_SUB_FAIL;
                    DBG_Printf("TLun%d Blk%d_%d Page%d ExtH-CpyData-Wr-Fail\n", ucTLun, usVirBlk, usNewPhyBlk, ptExtHCtrl->bsCpyPageNum);
400a3233:	d158      	l32i.n	a5, a1, 52
400a3235:	211d62        	l16ui	a6, a13, 66
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:339
            bResult = *(U8*)ptExtHCtrl->ulStatusAddr;
            if (SUBSYSTEM_STATUS_PENDING != bResult)
            {
                if (SUBSYSTEM_STATUS_SUCCESS != bResult)
                {
                    ptExtHCtrl->bsSubStage = EXTH_SUB_FAIL;
400a3238:	102240        	and	a2, a2, a4
400a323b:	80a032        	movi	a3, 128
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:340
                    DBG_Printf("TLun%d Blk%d_%d Page%d ExtH-CpyData-Wr-Fail\n", ucTLun, usVirBlk, usNewPhyBlk, ptExtHCtrl->bsCpyPageNum);
400a323e:	0e4d      	mov.n	a4, a14
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:339
            bResult = *(U8*)ptExtHCtrl->ulStatusAddr;
            if (SUBSYSTEM_STATUS_PENDING != bResult)
            {
                if (SUBSYSTEM_STATUS_SUCCESS != bResult)
                {
                    ptExtHCtrl->bsSubStage = EXTH_SUB_FAIL;
400a3240:	202230        	or	a2, a2, a3
400a3243:	fd29      	s32i.n	a2, a13, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:340
                    DBG_Printf("TLun%d Blk%d_%d Page%d ExtH-CpyData-Wr-Fail\n", ucTLun, usVirBlk, usNewPhyBlk, ptExtHCtrl->bsCpyPageNum);
400a3245:	0f3d      	mov.n	a3, a15
400a3247:	fd8f21        	l32r	a2, 400a2884 <_mcu2dram_text_start+0x84>
400a324a:	fd7b01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a324d:	0000c0        	callx0	a0
400a3250:	fd28      	l32i.n	a2, a13, 60
400a3252:	000886        	j	400a3278 <L3_ExtHCopyData..DJ_1482204275+0xc0>

400a3255 <L3_ExtHCopyData..DJ_1482204275+0x9d>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:260
            //DBG_Printf("TLun%d Blk%d_%d Page%d ExtH-CpyData-Rd.\n", ucTLun, usVirBlk, usPhyBlk, ptExtHCtrl->bsCpyPageNum);
            break;
        }
        case EXTH_SUB_READ_CHK:
        {
            bResult = *(U8*)ptExtHCtrl->ulStatusAddr;
400a3255:	122d02        	l32i	a0, a13, 72
400a3258:	000002        	l8ui	a0, a0, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:263
            if (SUBSYSTEM_STATUS_PENDING != bResult)
            {
                if (SUBSYSTEM_STATUS_EMPTY_PG == bResult)
400a325b:	102240        	and	a2, a2, a4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:261
            break;
        }
        case EXTH_SUB_READ_CHK:
        {
            bResult = *(U8*)ptExtHCtrl->ulStatusAddr;
            if (SUBSYSTEM_STATUS_PENDING != bResult)
400a325e:	141026        	beqi	a0, 1, 400a3276 <L3_ExtHCopyData..DJ_1482204275+0xbe>
400a3261:	fcc032        	addi	a3, a0, -4
400a3264:	3ce316        	beqz	a3, 400a3636 <L3_ExtHCopyData..DJ_1482204275+0x47e>
400a3267:	fdc042        	addi	a4, a0, -3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:272
                    DBG_Printf("TLun%d Blk%d_%d Page%d ExtH-CpyData-Rd-EmptyPage\n", ucTLun, usVirBlk, usPhyBlk, ptExtHCtrl->bsCpyPageNum);                    
                    DBG_Getch();
                }
                else
                {
                    ptExtHCtrl->bsSubStage = EXTH_SUB_WRITE;
400a326a:	30a052        	movi	a5, 48
400a326d:	205250        	or	a5, a2, a5
400a3270:	0f6d52        	s32i	a5, a13, 60
400a3273:	3e9416        	beqz	a4, 400a3660 <L3_ExtHCopyData..DJ_1482204275+0x4a8>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:289
                        
                        //DBG_Printf("TLun%d Blk%d_%d Page%d ExtH-CpyData-Rd-Success\n", ucTLun, usVirBlk, usPhyBlk, ptExtHCtrl->bsCpyPageNum);
                    }
                }
            }
            break;
400a3276:	fd28      	l32i.n	a2, a13, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:366
            DBG_Printf("CopyData Stage Error.0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    ptExtHCtrl->ulTmpBufAddr = (U32)ptCurBufNode;
400a3278:	136dc2        	s32i	a12, a13, 76
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:368

    ulCopyDataDone = ptExtHCtrl->bsSubStage;
400a327b:	342420        	extui	a2, a2, 4, 4
400a327e:	f9c262        	addi	a6, a2, -7
400a3281:	0dd616        	beqz	a6, 400a3362 <L3_ExtHCopyData..DJ_1482204275+0x1aa>
400a3284:	f8c272        	addi	a7, a2, -8
400a3287:	0d7716        	beqz	a7, 400a3362 <L3_ExtHCopyData..DJ_1482204275+0x1aa>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:378

        ulCopyDataDone = EXTH_SUB_DONE;
        DBG_Printf("TLun%d Blk%d_%d_%d Page%d_%d ExtH-CpyData-Finish\n", ucTLun, usVirBlk, usPhyBlk, usNewPhyBlk, usVirPage, ptExtHCtrl->bsCpyPageNum);
    }

    return ulCopyDataDone;
400a328a:	1021c2        	l32i	a12, a1, 64
400a328d:	1121d2        	l32i	a13, a1, 68
400a3290:	1221e2        	l32i	a14, a1, 72
400a3293:	1321f2        	l32i	a15, a1, 76
400a3296:	f108      	l32i.n	a0, a1, 60
400a3298:	60c112        	addi	a1, a1, 96
400a329b:	f00d      	ret.n

400a329d <L3_ExtHCopyData..DJ_1482204275+0xe5>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:149
LOCAL U16 MCU2_DRAM_TEXT L3_ExtHCalcPageCnt(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U16 usPageCnt;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;

    if (FCMD_REQ_TYPE_WRITE == ptReqEntry->bsReqType)
400a329d:	e188      	l32i.n	a8, a1, 56
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:157
    }
    else
    {   // double-check the current block is an open or closed block, then get the MaxPage or PPO. - improve pending.
        // if we meets the read empty when CopyData, goto getch in dev-env; double check in release-env.
        // ...
        usPageCnt = (FCMD_REQ_SLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? PG_PER_SLC_BLK : PG_PER_SLC_BLK*PG_PER_WL;
400a329f:	e1b8      	l32i.n	a11, a1, 56
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:149
LOCAL U16 MCU2_DRAM_TEXT L3_ExtHCalcPageCnt(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U16 usPageCnt;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;

    if (FCMD_REQ_TYPE_WRITE == ptReqEntry->bsReqType)
400a32a1:	0888      	l32i.n	a8, a8, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:157
    }
    else
    {   // double-check the current block is an open or closed block, then get the MaxPage or PPO. - improve pending.
        // if we meets the read empty when CopyData, goto getch in dev-env; double check in release-env.
        // ...
        usPageCnt = (FCMD_REQ_SLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? PG_PER_SLC_BLK : PG_PER_SLC_BLK*PG_PER_WL;
400a32a3:	00a2a2        	movi	a10, 0x200
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:149
LOCAL U16 MCU2_DRAM_TEXT L3_ExtHCalcPageCnt(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U16 usPageCnt;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;

    if (FCMD_REQ_TYPE_WRITE == ptReqEntry->bsReqType)
400a32a6:	258280        	extui	a8, a8, 18, 3
400a32a9:	00b816        	beqz	a8, 400a32b8 <L3_ExtHCopyData..DJ_1482204275+0x100>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:157
    }
    else
    {   // double-check the current block is an open or closed block, then get the MaxPage or PPO. - improve pending.
        // if we meets the read empty when CopyData, goto getch in dev-env; double check in release-env.
        // ...
        usPageCnt = (FCMD_REQ_SLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? PG_PER_SLC_BLK : PG_PER_SLC_BLK*PG_PER_WL;
400a32ac:	042bb2        	l32i	a11, a11, 16
400a32af:	00a672        	movi	a7, 0x600
400a32b2:	15b0b0        	extui	a11, a11, 16, 2
400a32b5:	837ab0        	moveqz	a7, a10, a11
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:194

    switch (ptExtHCtrl->bsSubStage)
    {
        case EXTH_SUB_INIT:
        {
            ptExtHCtrl->bsCpyPageCnt = L3_ExtHCalcPageCnt(ptCtrlEntry);
400a32b8:	205d72        	s16i	a7, a13, 64
400a32bb:	b7cc      	bnez.n	a7, 400a32ca <L3_ExtHCopyData..DJ_1482204275+0x112>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:197
            if (0 == ptExtHCtrl->bsCpyPageCnt)
            {
                ptExtHCtrl->bsSubStage = EXTH_SUB_SUCCESS;
400a32bd:	fd28      	l32i.n	a2, a13, 60
400a32bf:	102240        	and	a2, a2, a4
400a32c2:	202290        	or	a2, a2, a9
400a32c5:	fd29      	s32i.n	a2, a13, 60
400a32c7:	ffeb46        	j	400a3278 <L3_ExtHCopyData..DJ_1482204275+0xc0>

400a32ca <L3_ExtHCopyData..DJ_1482204275+0x112>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:201
            }
            else
            {
                ptExtHCtrl->bsCpyPageNum = 0;
400a32ca:	030c      	movi.n	a3, 0
400a32cc:	215d32        	s16i	a3, a13, 66
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:202
                if (0 < L3_BufMgrGetFreeCnt() && ptExtHCtrl->bsCpyPageCnt < L3_RedMgrGetFreeCnt())
400a32cf:	fd7501        	l32r	a0, 400a28a4 <_mcu2dram_text_start+0xa4>
400a32d2:	0000c0        	callx0	a0
400a32d5:	130216        	beqz	a2, 400a3409 <L3_ExtHCopyData..DJ_1482204275+0x251>
400a32d8:	fd7401        	l32r	a0, 400a28a8 <_mcu2dram_text_start+0xa8>
400a32db:	0000c0        	callx0	a0
400a32de:	201d02        	l16ui	a0, a13, 64
400a32e1:	51e9      	s32i.n	a14, a1, 20
400a32e3:	023027        	bltu	a0, a2, 400a32e9 <L3_ExtHCopyData..DJ_1482204275+0x131>
400a32e6:	004886        	j	400a340c <L3_ExtHCopyData..DJ_1482204275+0x254>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:204
                {
                    bResult = L3_ExtHAllcSpareTmpAddr(ucTLun, ptExtHCtrl->bsCpyPageCnt);
400a32e9:	00ed      	mov.n	a14, a0
400a32eb:	0461f2        	s32i	a15, a1, 16
400a32ee:	60ac      	beqz.n	a0, 400a3318 <L3_ExtHCopyData..DJ_1482204275+0x160>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:72
LOCAL BOOL MCU2_DRAM_TEXT L3_ExtHAllcSpareTmpAddr(U8 ucTLun, U16 usPageCnt)
{
    U16 usPage;
    SDL_NODE *ptNode;
    
    for (usPage = 0; usPage < usPageCnt; usPage++)
400a32f0:	0c0c      	movi.n	a12, 0
400a32f2:	90fff0        	addx2	a15, a15, a15
400a32f5:	11ff70        	slli	a15, a15, 9
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:74
    {
        ptNode = L3_RedMgrAllocateNode();
400a32f8:	fd6d01        	l32r	a0, 400a28ac <_mcu2dram_text_start+0xac>
400a32fb:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:75
        if (NULL == ptNode)
400a32fe:	30e216        	beqz	a2, 400a3610 <L3_ExtHCopyData..DJ_1482204275+0x458>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:79
        {
            return FALSE;
        }
        l_aExtHSpareTmp[ucTLun*PG_PER_SLC_BLK*PG_PER_WL + usPage] = (U32)ptNode;
400a3301:	0fca      	add.n	a0, a15, a12
400a3303:	fd4e31        	l32r	a3, 400a283c <_mcu2dram_text_start+0x3c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:72
LOCAL BOOL MCU2_DRAM_TEXT L3_ExtHAllcSpareTmpAddr(U8 ucTLun, U16 usPageCnt)
{
    U16 usPage;
    SDL_NODE *ptNode;
    
    for (usPage = 0; usPage < usPageCnt; usPage++)
400a3306:	01ccc2        	addi	a12, a12, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:79
        ptNode = L3_RedMgrAllocateNode();
        if (NULL == ptNode)
        {
            return FALSE;
        }
        l_aExtHSpareTmp[ucTLun*PG_PER_SLC_BLK*PG_PER_WL + usPage] = (U32)ptNode;
400a3309:	232332        	l32i	a3, a3, 140
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:72
LOCAL BOOL MCU2_DRAM_TEXT L3_ExtHAllcSpareTmpAddr(U8 ucTLun, U16 usPageCnt)
{
    U16 usPage;
    SDL_NODE *ptNode;
    
    for (usPage = 0; usPage < usPageCnt; usPage++)
400a330c:	f4c0c0        	extui	a12, a12, 0, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:79
        ptNode = L3_RedMgrAllocateNode();
        if (NULL == ptNode)
        {
            return FALSE;
        }
        l_aExtHSpareTmp[ucTLun*PG_PER_SLC_BLK*PG_PER_WL + usPage] = (U32)ptNode;
400a330f:	a00030        	addx4	a0, a0, a3
400a3312:	006022        	s32i	a2, a0, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:72
LOCAL BOOL MCU2_DRAM_TEXT L3_ExtHAllcSpareTmpAddr(U8 ucTLun, U16 usPageCnt)
{
    U16 usPage;
    SDL_NODE *ptNode;
    
    for (usPage = 0; usPage < usPageCnt; usPage++)
400a3315:	df9ec7        	bne	a14, a12, 400a32f8 <L3_ExtHCopyData..DJ_1482204275+0x140>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:207
                if (0 < L3_BufMgrGetFreeCnt() && ptExtHCtrl->bsCpyPageCnt < L3_RedMgrGetFreeCnt())
                {
                    bResult = L3_ExtHAllcSpareTmpAddr(ucTLun, ptExtHCtrl->bsCpyPageCnt);
                    ASSERT(TRUE == bResult);

                    ptCurBufNode = L3_BufMgrAllocateNode();
400a3318:	fd6601        	l32r	a0, 400a28b0 <_mcu2dram_text_start+0xb0>
400a331b:	0000c0        	callx0	a0
400a331e:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:208
                    ASSERT(NULL != ptCurBufNode);
400a3320:	2f0216        	beqz	a2, 400a3614 <L3_ExtHCopyData..DJ_1482204275+0x45c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:212

                    ptExtHCtrl->ulStatusAddr = (U32)&l_aExtHFlashStatus[ucTLun];
                    ptExtHCtrl->bsSubStage = EXTH_SUB_READ;
                    DBG_Printf("TLun%d Blk%d_%d_%d Page%d_%d ExtH-CpyData-Start\n", ucTLun, usVirBlk, usPhyBlk, usNewPhyBlk, usVirPage, ptExtHCtrl->bsCpyPageCnt);
400a3323:	fd5921        	l32r	a2, 400a2888 <_mcu2dram_text_start+0x88>
400a3326:	c158      	l32i.n	a5, a1, 48
400a3328:	d168      	l32i.n	a6, a1, 52
400a332a:	b178      	l32i.n	a7, a1, 44
400a332c:	201d82        	l16ui	a8, a13, 64
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:210
                    ASSERT(TRUE == bResult);

                    ptCurBufNode = L3_BufMgrAllocateNode();
                    ASSERT(NULL != ptCurBufNode);

                    ptExtHCtrl->ulStatusAddr = (U32)&l_aExtHFlashStatus[ucTLun];
400a332f:	fd43b1        	l32r	a11, 400a283c <_mcu2dram_text_start+0x3c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:211
                    ptExtHCtrl->bsSubStage = EXTH_SUB_READ;
400a3332:	0fafa2        	movi	a10, -241
400a3335:	fd98      	l32i.n	a9, a13, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:212
                    DBG_Printf("TLun%d Blk%d_%d_%d Page%d_%d ExtH-CpyData-Start\n", ucTLun, usVirBlk, usPhyBlk, usNewPhyBlk, usVirPage, ptExtHCtrl->bsCpyPageCnt);
400a3337:	41f8      	l32i.n	a15, a1, 16
400a3339:	51e8      	l32i.n	a14, a1, 20
400a333b:	0f3d      	mov.n	a3, a15
400a333d:	0e4d      	mov.n	a4, a14
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:211

                    ptCurBufNode = L3_BufMgrAllocateNode();
                    ASSERT(NULL != ptCurBufNode);

                    ptExtHCtrl->ulStatusAddr = (U32)&l_aExtHFlashStatus[ucTLun];
                    ptExtHCtrl->bsSubStage = EXTH_SUB_READ;
400a333f:	1099a0        	and	a9, a9, a10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:210
                    ASSERT(TRUE == bResult);

                    ptCurBufNode = L3_BufMgrAllocateNode();
                    ASSERT(NULL != ptCurBufNode);

                    ptExtHCtrl->ulStatusAddr = (U32)&l_aExtHFlashStatus[ucTLun];
400a3342:	06dbb2        	addmi	a11, a11, 0x600
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:211
                    ptExtHCtrl->bsSubStage = EXTH_SUB_READ;
400a3345:	0a1c      	movi.n	a10, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:210
                    ASSERT(TRUE == bResult);

                    ptCurBufNode = L3_BufMgrAllocateNode();
                    ASSERT(NULL != ptCurBufNode);

                    ptExtHCtrl->ulStatusAddr = (U32)&l_aExtHFlashStatus[ucTLun];
400a3347:	f0cbb2        	addi	a11, a11, -16
400a334a:	bfba      	add.n	a11, a15, a11
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:211
                    ptExtHCtrl->bsSubStage = EXTH_SUB_READ;
400a334c:	2099a0        	or	a9, a9, a10
400a334f:	fd99      	s32i.n	a9, a13, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:210
                    ASSERT(TRUE == bResult);

                    ptCurBufNode = L3_BufMgrAllocateNode();
                    ASSERT(NULL != ptCurBufNode);

                    ptExtHCtrl->ulStatusAddr = (U32)&l_aExtHFlashStatus[ucTLun];
400a3351:	126db2        	s32i	a11, a13, 72
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:212
                    ptExtHCtrl->bsSubStage = EXTH_SUB_READ;
                    DBG_Printf("TLun%d Blk%d_%d_%d Page%d_%d ExtH-CpyData-Start\n", ucTLun, usVirBlk, usPhyBlk, usNewPhyBlk, usVirPage, ptExtHCtrl->bsCpyPageCnt);
400a3354:	0189      	s32i.n	a8, a1, 0
400a3356:	fd3801        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a3359:	0000c0        	callx0	a0
400a335c:	ffc586        	j	400a3276 <L3_ExtHCopyData..DJ_1482204275+0xbe>

400a335f <L3_ExtHCopyData..DJ_1482204275+0x1a7>:
400a335f:	000000                                        ...

400a3362 <L3_ExtHCopyData..DJ_1482204275+0x1aa>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:371
    ptExtHCtrl->ulTmpBufAddr = (U32)ptCurBufNode;

    ulCopyDataDone = ptExtHCtrl->bsSubStage;
    if (EXTH_SUB_SUCCESS == ulCopyDataDone || EXTH_SUB_FAIL == ulCopyDataDone)
    {
        L3_BufMgrReleaseNode(ptCurBufNode);
400a3362:	0c2d      	mov.n	a2, a12
400a3364:	0561e2        	s32i	a14, a1, 20
400a3367:	fd5301        	l32r	a0, 400a28b4 <_mcu2dram_text_start+0xb4>
400a336a:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:372
        L3_ExtHReleaseSpareTmpAddr(ucTLun, ptExtHCtrl->bsCpyPageCnt);
400a336d:	201dc2        	l16ui	a12, a13, 64
400a3370:	41f9      	s32i.n	a15, a1, 16
400a3372:	20ecc0        	or	a14, a12, a12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:101
{
    U16 usOffSet, usPage;
    SDL_NODE *ptNode;

    usOffSet = ucTLun*PG_PER_SLC_BLK*PG_PER_WL;
    for (usPage = 0; usPage < usPageCnt; usPage++)
400a3375:	040c16        	beqz	a12, 400a33b9 <L3_ExtHCopyData..DJ_1482204275+0x201>
400a3378:	0c0c      	movi.n	a12, 0
400a337a:	1461d2        	s32i	a13, a1, 80
400a337d:	fd2f01        	l32r	a0, 400a283c <_mcu2dram_text_start+0x3c>
400a3380:	90fff0        	addx2	a15, a15, a15
400a3383:	11ff70        	slli	a15, a15, 9
400a3386:	2320a2        	l32i	a10, a0, 140
400a3389:	f4f0f0        	extui	a15, a15, 0, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:103
    {
        ptNode = (SDL_NODE *)l_aExtHSpareTmp[usOffSet + usPage];
400a338c:	dfca      	add.n	a13, a15, a12
400a338e:	a02da0        	addx4	a2, a13, a10
400a3391:	002222        	l32i	a2, a2, 0
400a3394:	11dde0        	slli	a13, a13, 2
400a3397:	011216        	beqz	a2, 400a33ac <L3_ExtHCopyData..DJ_1482204275+0x1f4>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:106
        if (NULL != ptNode)
        {
            L3_RedMgrReleaseNode(ptNode);
400a339a:	fd4701        	l32r	a0, 400a28b8 <_mcu2dram_text_start+0xb8>
400a339d:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:107
            l_aExtHSpareTmp[usOffSet + usPage] = NULL;
400a33a0:	fd2701        	l32r	a0, 400a283c <_mcu2dram_text_start+0x3c>
400a33a3:	2320a2        	l32i	a10, a0, 140
400a33a6:	030c      	movi.n	a3, 0
400a33a8:	4daa      	add.n	a4, a13, a10
400a33aa:	0439      	s32i.n	a3, a4, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:101
{
    U16 usOffSet, usPage;
    SDL_NODE *ptNode;

    usOffSet = ucTLun*PG_PER_SLC_BLK*PG_PER_WL;
    for (usPage = 0; usPage < usPageCnt; usPage++)
400a33ac:	cc1b      	addi.n	a12, a12, 1
400a33ae:	f4c0c0        	extui	a12, a12, 0, 16
400a33b1:	d79ec7        	bne	a14, a12, 400a338c <L3_ExtHCopyData..DJ_1482204275+0x1d4>
400a33b4:	1421d2        	l32i	a13, a1, 80
400a33b7:	41f8      	l32i.n	a15, a1, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:375
    {
        L3_BufMgrReleaseNode(ptCurBufNode);
        L3_ExtHReleaseSpareTmpAddr(ucTLun, ptExtHCtrl->bsCpyPageCnt);

        ulCopyDataDone = EXTH_SUB_DONE;
        DBG_Printf("TLun%d Blk%d_%d_%d Page%d_%d ExtH-CpyData-Finish\n", ucTLun, usVirBlk, usPhyBlk, usNewPhyBlk, usVirPage, ptExtHCtrl->bsCpyPageNum);
400a33b9:	5148      	l32i.n	a4, a1, 20
400a33bb:	c158      	l32i.n	a5, a1, 48
400a33bd:	d168      	l32i.n	a6, a1, 52
400a33bf:	b178      	l32i.n	a7, a1, 44
400a33c1:	fd3221        	l32r	a2, 400a288c <_mcu2dram_text_start+0x8c>
400a33c4:	211de2        	l16ui	a14, a13, 66
400a33c7:	0f3d      	mov.n	a3, a15
400a33c9:	01e9      	s32i.n	a14, a1, 0
400a33cb:	fd1b01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a33ce:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:372

    ulCopyDataDone = ptExtHCtrl->bsSubStage;
    if (EXTH_SUB_SUCCESS == ulCopyDataDone || EXTH_SUB_FAIL == ulCopyDataDone)
    {
        L3_BufMgrReleaseNode(ptCurBufNode);
        L3_ExtHReleaseSpareTmpAddr(ucTLun, ptExtHCtrl->bsCpyPageCnt);
400a33d1:	920c      	movi.n	a2, 9
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:378

        ulCopyDataDone = EXTH_SUB_DONE;
        DBG_Printf("TLun%d Blk%d_%d_%d Page%d_%d ExtH-CpyData-Finish\n", ucTLun, usVirBlk, usPhyBlk, usNewPhyBlk, usVirPage, ptExtHCtrl->bsCpyPageNum);
    }

    return ulCopyDataDone;
400a33d3:	1021c2        	l32i	a12, a1, 64
400a33d6:	1121d2        	l32i	a13, a1, 68
400a33d9:	1221e2        	l32i	a14, a1, 72
400a33dc:	1321f2        	l32i	a15, a1, 76
400a33df:	f108      	l32i.n	a0, a1, 60
400a33e1:	60c112        	addi	a1, a1, 96
400a33e4:	f00d      	ret.n

400a33e6 <L3_ExtHCopyData..DJ_1482204275+0x22e>:
	...

400a33e8 <L3_ExtHCopyData..DJ_1482204275+0x230>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:344
                    ptExtHCtrl->bsSubStage = EXTH_SUB_FAIL;
                    DBG_Printf("TLun%d Blk%d_%d Page%d ExtH-CpyData-Wr-Fail\n", ucTLun, usVirBlk, usNewPhyBlk, ptExtHCtrl->bsCpyPageNum);
                }
                else
                {                    
                    ptExtHCtrl->bsCpyPageNum++;
400a33e8:	211d32        	l16ui	a3, a13, 66
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:345
                    if (ptExtHCtrl->bsCpyPageNum < ptExtHCtrl->bsCpyPageCnt)
400a33eb:	100240        	and	a0, a2, a4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:344
                    ptExtHCtrl->bsSubStage = EXTH_SUB_FAIL;
                    DBG_Printf("TLun%d Blk%d_%d Page%d ExtH-CpyData-Wr-Fail\n", ucTLun, usVirBlk, usNewPhyBlk, ptExtHCtrl->bsCpyPageNum);
                }
                else
                {                    
                    ptExtHCtrl->bsCpyPageNum++;
400a33ee:	231b      	addi.n	a2, a3, 1
400a33f0:	f42020        	extui	a2, a2, 0, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:345
                    if (ptExtHCtrl->bsCpyPageNum < ptExtHCtrl->bsCpyPageCnt)
400a33f3:	201d32        	l16ui	a3, a13, 64
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:344
                    ptExtHCtrl->bsSubStage = EXTH_SUB_FAIL;
                    DBG_Printf("TLun%d Blk%d_%d Page%d ExtH-CpyData-Wr-Fail\n", ucTLun, usVirBlk, usNewPhyBlk, ptExtHCtrl->bsCpyPageNum);
                }
                else
                {                    
                    ptExtHCtrl->bsCpyPageNum++;
400a33f6:	215d22        	s16i	a2, a13, 66
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:345
                    if (ptExtHCtrl->bsCpyPageNum < ptExtHCtrl->bsCpyPageCnt)
400a33f9:	023237        	bltu	a2, a3, 400a33ff <L3_ExtHCopyData..DJ_1482204275+0x247>
400a33fc:	008606        	j	400a3618 <L3_ExtHCopyData..DJ_1482204275+0x460>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:347
                    {
                        ptExtHCtrl->bsSubStage = EXTH_SUB_READ;
400a33ff:	021c      	movi.n	a2, 16
400a3401:	202020        	or	a2, a0, a2
400a3404:	fd29      	s32i.n	a2, a13, 60
400a3406:	ff9b86        	j	400a3278 <L3_ExtHCopyData..DJ_1482204275+0xc0>

400a3409 <L3_ExtHCopyData..DJ_1482204275+0x251>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:205
            {
                ptExtHCtrl->bsCpyPageNum = 0;
                if (0 < L3_BufMgrGetFreeCnt() && ptExtHCtrl->bsCpyPageCnt < L3_RedMgrGetFreeCnt())
                {
                    bResult = L3_ExtHAllcSpareTmpAddr(ucTLun, ptExtHCtrl->bsCpyPageCnt);
                    ASSERT(TRUE == bResult);
400a3409:	201d02        	l16ui	a0, a13, 64
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:216
                    ptExtHCtrl->bsSubStage = EXTH_SUB_READ;
                    DBG_Printf("TLun%d Blk%d_%d_%d Page%d_%d ExtH-CpyData-Start\n", ucTLun, usVirBlk, usPhyBlk, usNewPhyBlk, usVirPage, ptExtHCtrl->bsCpyPageCnt);
                }
                else
                {
                    DBG_Printf("TLun%d Blk%d_%d_%d Page%d_%d ExtH-CpyData-AllocFail\n", ucTLun, usVirBlk, usPhyBlk, usNewPhyBlk, usVirPage, ptExtHCtrl->bsCpyPageCnt);
400a340c:	fd2121        	l32r	a2, 400a2890 <_mcu2dram_text_start+0x90>
400a340f:	0f3d      	mov.n	a3, a15
400a3411:	0e4d      	mov.n	a4, a14
400a3413:	c158      	l32i.n	a5, a1, 48
400a3415:	d168      	l32i.n	a6, a1, 52
400a3417:	b178      	l32i.n	a7, a1, 44
400a3419:	0109      	s32i.n	a0, a1, 0
400a341b:	fd0701        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a341e:	0000c0        	callx0	a0
400a3421:	ff9446        	j	400a3276 <L3_ExtHCopyData..DJ_1482204275+0xbe>

400a3424 <L3_ExtHCopyData..DJ_1482204275+0x26c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:223
            }            
            break;
        }
        case EXTH_SUB_READ:
        {
            FCMD_REQ_ENTRY *ptTmpReqEntry = L3_FCMDQAllocTmpReqEntry(ucTLun);
400a3424:	0f2d      	mov.n	a2, a15
400a3426:	fd1201        	l32r	a0, 400a2870 <_mcu2dram_text_start+0x70>
400a3429:	0000c0        	callx0	a0
400a342c:	a129      	s32i.n	a2, a1, 40
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:224
            FCMD_INTR_CTRL_ENTRY *ptNewCtrlEntry = L3_FCMDQAllocIntrEntry(ucTLun);
400a342e:	0f2d      	mov.n	a2, a15
400a3430:	fd1101        	l32r	a0, 400a2874 <_mcu2dram_text_start+0x74>
400a3433:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:233
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
            ptTmpReqEntry->tFlashDesc.bsPhyBlk = usPhyBlk;
            ptTmpReqEntry->tFlashDesc.bsVirPage = ptExtHCtrl->bsCpyPageNum;
            ptTmpReqEntry->tFlashDesc.bsBlkMod = ptReqEntry->tFlashDesc.bsBlkMod;
            ptTmpReqEntry->tFlashDesc.bsSecStart = 0;
400a3436:	050c      	movi.n	a5, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:232
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_READ;
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
            ptTmpReqEntry->tFlashDesc.bsPhyBlk = usPhyBlk;
            ptTmpReqEntry->tFlashDesc.bsVirPage = ptExtHCtrl->bsCpyPageNum;
            ptTmpReqEntry->tFlashDesc.bsBlkMod = ptReqEntry->tFlashDesc.bsBlkMod;
400a3438:	e178      	l32i.n	a7, a1, 56
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:230

            // Alloc a temp read request entry and Fill it.
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_READ;
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
            ptTmpReqEntry->tFlashDesc.bsPhyBlk = usPhyBlk;
400a343a:	c1a8      	l32i.n	a10, a1, 48
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:227
        {
            FCMD_REQ_ENTRY *ptTmpReqEntry = L3_FCMDQAllocTmpReqEntry(ucTLun);
            FCMD_INTR_CTRL_ENTRY *ptNewCtrlEntry = L3_FCMDQAllocIntrEntry(ucTLun);

            // Alloc a temp read request entry and Fill it.
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_READ;
400a343c:	fd1601        	l32r	a0, 400a2894 <_mcu2dram_text_start+0x94>
400a343f:	fd0331        	l32r	a3, 400a284c <_mcu2dram_text_start+0x4c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:224
            break;
        }
        case EXTH_SUB_READ:
        {
            FCMD_REQ_ENTRY *ptTmpReqEntry = L3_FCMDQAllocTmpReqEntry(ucTLun);
            FCMD_INTR_CTRL_ENTRY *ptNewCtrlEntry = L3_FCMDQAllocIntrEntry(ucTLun);
400a3442:	6129      	s32i.n	a2, a1, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:227

            // Alloc a temp read request entry and Fill it.
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_READ;
400a3444:	a148      	l32i.n	a4, a1, 40
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:235
            ptTmpReqEntry->tFlashDesc.bsPhyBlk = usPhyBlk;
            ptTmpReqEntry->tFlashDesc.bsVirPage = ptExtHCtrl->bsCpyPageNum;
            ptTmpReqEntry->tFlashDesc.bsBlkMod = ptReqEntry->tFlashDesc.bsBlkMod;
            ptTmpReqEntry->tFlashDesc.bsSecStart = 0;
            ptTmpReqEntry->tFlashDesc.bsSecLen = SEC_PER_BUF;            
            ptTmpReqEntry->atBufDesc[0].bsBufID = L3_BufMgrGetBufIDByNode(ptCurBufNode);
400a3446:	0c2d      	mov.n	a2, a12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:227
        {
            FCMD_REQ_ENTRY *ptTmpReqEntry = L3_FCMDQAllocTmpReqEntry(ucTLun);
            FCMD_INTR_CTRL_ENTRY *ptNewCtrlEntry = L3_FCMDQAllocIntrEntry(ucTLun);

            // Alloc a temp read request entry and Fill it.
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_READ;
400a3448:	04b8      	l32i.n	a11, a4, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:229
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
400a344a:	3488      	l32i.n	a8, a4, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:227
        {
            FCMD_REQ_ENTRY *ptTmpReqEntry = L3_FCMDQAllocTmpReqEntry(ucTLun);
            FCMD_INTR_CTRL_ENTRY *ptNewCtrlEntry = L3_FCMDQAllocIntrEntry(ucTLun);

            // Alloc a temp read request entry and Fill it.
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_READ;
400a344c:	10bb30        	and	a11, a11, a3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:229
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
400a344f:	410e84        	insbits	a8, a14, 0, 9
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:227
        {
            FCMD_REQ_ENTRY *ptTmpReqEntry = L3_FCMDQAllocTmpReqEntry(ucTLun);
            FCMD_INTR_CTRL_ENTRY *ptNewCtrlEntry = L3_FCMDQAllocIntrEntry(ucTLun);

            // Alloc a temp read request entry and Fill it.
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_READ;
400a3452:	20bb00        	or	a11, a11, a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:228
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
400a3455:	fcfe01        	l32r	a0, 400a2850 <_mcu2dram_text_start+0x50>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:230
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
            ptTmpReqEntry->tFlashDesc.bsPhyBlk = usPhyBlk;
400a3458:	83aa84        	insbits	a8, a10, 10, 19
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:228
            FCMD_REQ_ENTRY *ptTmpReqEntry = L3_FCMDQAllocTmpReqEntry(ucTLun);
            FCMD_INTR_CTRL_ENTRY *ptNewCtrlEntry = L3_FCMDQAllocIntrEntry(ucTLun);

            // Alloc a temp read request entry and Fill it.
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_READ;
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
400a345b:	10bb00        	and	a11, a11, a0
400a345e:	fcfd01        	l32r	a0, 400a2854 <_mcu2dram_text_start+0x54>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:230
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
            ptTmpReqEntry->tFlashDesc.bsPhyBlk = usPhyBlk;
400a3461:	3489      	s32i.n	a8, a4, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:228
            FCMD_REQ_ENTRY *ptTmpReqEntry = L3_FCMDQAllocTmpReqEntry(ucTLun);
            FCMD_INTR_CTRL_ENTRY *ptNewCtrlEntry = L3_FCMDQAllocIntrEntry(ucTLun);

            // Alloc a temp read request entry and Fill it.
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_READ;
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
400a3463:	20bb00        	or	a11, a11, a0
400a3466:	04b9      	s32i.n	a11, a4, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:231
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
            ptTmpReqEntry->tFlashDesc.bsPhyBlk = usPhyBlk;
            ptTmpReqEntry->tFlashDesc.bsVirPage = ptExtHCtrl->bsCpyPageNum;
400a3468:	211d92        	l16ui	a9, a13, 66
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:232
            ptTmpReqEntry->tFlashDesc.bsBlkMod = ptReqEntry->tFlashDesc.bsBlkMod;
400a346b:	4468      	l32i.n	a6, a4, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:231
            // Alloc a temp read request entry and Fill it.
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_READ;
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
            ptTmpReqEntry->tFlashDesc.bsPhyBlk = usPhyBlk;
            ptTmpReqEntry->tFlashDesc.bsVirPage = ptExtHCtrl->bsCpyPageNum;
400a346d:	f24984        	insbits	a8, a9, 20, 30
400a3470:	3489      	s32i.n	a8, a4, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:232
            ptTmpReqEntry->tFlashDesc.bsBlkMod = ptReqEntry->tFlashDesc.bsBlkMod;
400a3472:	042772        	l32i	a7, a7, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:234
            ptTmpReqEntry->tFlashDesc.bsSecStart = 0;
            ptTmpReqEntry->tFlashDesc.bsSecLen = SEC_PER_BUF;            
400a3475:	80af32        	movi	a3, -128
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:232
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_READ;
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
            ptTmpReqEntry->tFlashDesc.bsPhyBlk = usPhyBlk;
            ptTmpReqEntry->tFlashDesc.bsVirPage = ptExtHCtrl->bsCpyPageNum;
            ptTmpReqEntry->tFlashDesc.bsBlkMod = ptReqEntry->tFlashDesc.bsBlkMod;
400a3478:	f57070        	extui	a7, a7, 16, 16
400a347b:	910764        	insbits	a6, a7, 16, 17
400a347e:	4469      	s32i.n	a6, a4, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:233
            ptTmpReqEntry->tFlashDesc.bsSecStart = 0;
400a3480:	104452        	s8i	a5, a4, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:234
            ptTmpReqEntry->tFlashDesc.bsSecLen = SEC_PER_BUF;            
400a3483:	114432        	s8i	a3, a4, 17
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:235
            ptTmpReqEntry->atBufDesc[0].bsBufID = L3_BufMgrGetBufIDByNode(ptCurBufNode);
400a3486:	fd0d01        	l32r	a0, 400a28bc <_mcu2dram_text_start+0xbc>
400a3489:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:131
{
    SDL_NODE *ptNode;
    
    ptNode = (SDL_NODE *)l_aExtHSpareTmp[ucTLun*PG_PER_SLC_BLK*PG_PER_WL + usPage];

    return L3_RedMgrGetRedAddrByNode(ptNode);
400a348c:	fcec31        	l32r	a3, 400a283c <_mcu2dram_text_start+0x3c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:238
            ptTmpReqEntry->tFlashDesc.bsSecStart = 0;
            ptTmpReqEntry->tFlashDesc.bsSecLen = SEC_PER_BUF;            
            ptTmpReqEntry->atBufDesc[0].bsBufID = L3_BufMgrGetBufIDByNode(ptCurBufNode);
            ptTmpReqEntry->atBufDesc[0].bsSecStart = 0;
            ptTmpReqEntry->atBufDesc[0].bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[1].bsBufID = INVALID_4F;
400a348f:	fcf281        	l32r	a8, 400a2858 <_mcu2dram_text_start+0x58>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:237
            ptTmpReqEntry->tFlashDesc.bsBlkMod = ptReqEntry->tFlashDesc.bsBlkMod;
            ptTmpReqEntry->tFlashDesc.bsSecStart = 0;
            ptTmpReqEntry->tFlashDesc.bsSecLen = SEC_PER_BUF;            
            ptTmpReqEntry->atBufDesc[0].bsBufID = L3_BufMgrGetBufIDByNode(ptCurBufNode);
            ptTmpReqEntry->atBufDesc[0].bsSecStart = 0;
            ptTmpReqEntry->atBufDesc[0].bsSecLen = SEC_PER_BUF;
400a3492:	80af72        	movi	a7, -128
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:238
            ptTmpReqEntry->atBufDesc[1].bsBufID = INVALID_4F;
400a3495:	a168      	l32i.n	a6, a1, 40
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:236
            ptTmpReqEntry->tFlashDesc.bsVirPage = ptExtHCtrl->bsCpyPageNum;
            ptTmpReqEntry->tFlashDesc.bsBlkMod = ptReqEntry->tFlashDesc.bsBlkMod;
            ptTmpReqEntry->tFlashDesc.bsSecStart = 0;
            ptTmpReqEntry->tFlashDesc.bsSecLen = SEC_PER_BUF;            
            ptTmpReqEntry->atBufDesc[0].bsBufID = L3_BufMgrGetBufIDByNode(ptCurBufNode);
            ptTmpReqEntry->atBufDesc[0].bsSecStart = 0;
400a3497:	00a052        	movi	a5, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:131
{
    SDL_NODE *ptNode;
    
    ptNode = (SDL_NODE *)l_aExtHSpareTmp[ucTLun*PG_PER_SLC_BLK*PG_PER_WL + usPage];

    return L3_RedMgrGetRedAddrByNode(ptNode);
400a349a:	904ff0        	addx2	a4, a15, a15
400a349d:	114470        	slli	a4, a4, 9
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:236
            ptTmpReqEntry->tFlashDesc.bsVirPage = ptExtHCtrl->bsCpyPageNum;
            ptTmpReqEntry->tFlashDesc.bsBlkMod = ptReqEntry->tFlashDesc.bsBlkMod;
            ptTmpReqEntry->tFlashDesc.bsSecStart = 0;
            ptTmpReqEntry->tFlashDesc.bsSecLen = SEC_PER_BUF;            
            ptTmpReqEntry->atBufDesc[0].bsBufID = L3_BufMgrGetBufIDByNode(ptCurBufNode);
            ptTmpReqEntry->atBufDesc[0].bsSecStart = 0;
400a34a0:	164652        	s8i	a5, a6, 22
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:237
            ptTmpReqEntry->atBufDesc[0].bsSecLen = SEC_PER_BUF;
400a34a3:	174672        	s8i	a7, a6, 23
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:238
            ptTmpReqEntry->atBufDesc[1].bsBufID = INVALID_4F;
400a34a6:	0c5682        	s16i	a8, a6, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:235
            ptTmpReqEntry->tFlashDesc.bsPhyBlk = usPhyBlk;
            ptTmpReqEntry->tFlashDesc.bsVirPage = ptExtHCtrl->bsCpyPageNum;
            ptTmpReqEntry->tFlashDesc.bsBlkMod = ptReqEntry->tFlashDesc.bsBlkMod;
            ptTmpReqEntry->tFlashDesc.bsSecStart = 0;
            ptTmpReqEntry->tFlashDesc.bsSecLen = SEC_PER_BUF;            
            ptTmpReqEntry->atBufDesc[0].bsBufID = L3_BufMgrGetBufIDByNode(ptCurBufNode);
400a34a9:	0a5622        	s16i	a2, a6, 20
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:131
{
    SDL_NODE *ptNode;
    
    ptNode = (SDL_NODE *)l_aExtHSpareTmp[ucTLun*PG_PER_SLC_BLK*PG_PER_WL + usPage];

    return L3_RedMgrGetRedAddrByNode(ptNode);
400a34ac:	211d22        	l16ui	a2, a13, 66
400a34af:	232332        	l32i	a3, a3, 140
400a34b2:	224a      	add.n	a2, a2, a4
400a34b4:	a02230        	addx4	a2, a2, a3
400a34b7:	002222        	l32i	a2, a2, 0
400a34ba:	fd0101        	l32r	a0, 400a28c0 <_mcu2dram_text_start+0xc0>
400a34bd:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:240
            ptTmpReqEntry->atBufDesc[0].bsBufID = L3_BufMgrGetBufIDByNode(ptCurBufNode);
            ptTmpReqEntry->atBufDesc[0].bsSecStart = 0;
            ptTmpReqEntry->atBufDesc[0].bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[1].bsBufID = INVALID_4F;
            ptTmpReqEntry->ulSpareAddr = L3_ExtHGetSpareTmpAddr(ucTLun, ptExtHCtrl->bsCpyPageNum);
            *(U8*)ptExtHCtrl->ulStatusAddr = SUBSYSTEM_STATUS_PENDING;
400a34c0:	122d42        	l32i	a4, a13, 72
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:239
            ptTmpReqEntry->tFlashDesc.bsSecLen = SEC_PER_BUF;            
            ptTmpReqEntry->atBufDesc[0].bsBufID = L3_BufMgrGetBufIDByNode(ptCurBufNode);
            ptTmpReqEntry->atBufDesc[0].bsSecStart = 0;
            ptTmpReqEntry->atBufDesc[0].bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[1].bsBufID = INVALID_4F;
            ptTmpReqEntry->ulSpareAddr = L3_ExtHGetSpareTmpAddr(ucTLun, ptExtHCtrl->bsCpyPageNum);
400a34c3:	a1b8      	l32i.n	a11, a1, 40
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:240
            *(U8*)ptExtHCtrl->ulStatusAddr = SUBSYSTEM_STATUS_PENDING;
400a34c5:	130c      	movi.n	a3, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:239
            ptTmpReqEntry->tFlashDesc.bsSecLen = SEC_PER_BUF;            
            ptTmpReqEntry->atBufDesc[0].bsBufID = L3_BufMgrGetBufIDByNode(ptCurBufNode);
            ptTmpReqEntry->atBufDesc[0].bsSecStart = 0;
            ptTmpReqEntry->atBufDesc[0].bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[1].bsBufID = INVALID_4F;
            ptTmpReqEntry->ulSpareAddr = L3_ExtHGetSpareTmpAddr(ucTLun, ptExtHCtrl->bsCpyPageNum);
400a34c7:	2b29      	s32i.n	a2, a11, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:240
            *(U8*)ptExtHCtrl->ulStatusAddr = SUBSYSTEM_STATUS_PENDING;
400a34c9:	004432        	s8i	a3, a4, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:242
            ptTmpReqEntry->ulReqStsAddr = ptExtHCtrl->ulStatusAddr;
            ptTmpReqEntry->bsReqUptMod = REQ_STS_UPT_MANUL;
400a34cc:	fce521        	l32r	a2, 400a2860 <_mcu2dram_text_start+0x60>
400a34cf:	0b08      	l32i.n	a0, a11, 0
400a34d1:	100020        	and	a0, a0, a2
400a34d4:	fce421        	l32r	a2, 400a2864 <_mcu2dram_text_start+0x64>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:245

            // Alloc a new intr ctrl entry and fill it.
            ptNewCtrlEntry->bsIntrReq = TRUE;            
400a34d7:	fce4a1        	l32r	a10, 400a2868 <_mcu2dram_text_start+0x68>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:242
            ptTmpReqEntry->atBufDesc[0].bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[1].bsBufID = INVALID_4F;
            ptTmpReqEntry->ulSpareAddr = L3_ExtHGetSpareTmpAddr(ucTLun, ptExtHCtrl->bsCpyPageNum);
            *(U8*)ptExtHCtrl->ulStatusAddr = SUBSYSTEM_STATUS_PENDING;
            ptTmpReqEntry->ulReqStsAddr = ptExtHCtrl->ulStatusAddr;
            ptTmpReqEntry->bsReqUptMod = REQ_STS_UPT_MANUL;
400a34da:	200020        	or	a0, a0, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:241
            ptTmpReqEntry->atBufDesc[0].bsSecStart = 0;
            ptTmpReqEntry->atBufDesc[0].bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[1].bsBufID = INVALID_4F;
            ptTmpReqEntry->ulSpareAddr = L3_ExtHGetSpareTmpAddr(ucTLun, ptExtHCtrl->bsCpyPageNum);
            *(U8*)ptExtHCtrl->ulStatusAddr = SUBSYSTEM_STATUS_PENDING;
            ptTmpReqEntry->ulReqStsAddr = ptExtHCtrl->ulStatusAddr;
400a34dd:	122d22        	l32i	a2, a13, 72
400a34e0:	1b29      	s32i.n	a2, a11, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:245
            ptTmpReqEntry->bsReqUptMod = REQ_STS_UPT_MANUL;

            // Alloc a new intr ctrl entry and fill it.
            ptNewCtrlEntry->bsIntrReq = TRUE;            
400a34e2:	6128      	l32i.n	a2, a1, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:242
            ptTmpReqEntry->atBufDesc[0].bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[1].bsBufID = INVALID_4F;
            ptTmpReqEntry->ulSpareAddr = L3_ExtHGetSpareTmpAddr(ucTLun, ptExtHCtrl->bsCpyPageNum);
            *(U8*)ptExtHCtrl->ulStatusAddr = SUBSYSTEM_STATUS_PENDING;
            ptTmpReqEntry->ulReqStsAddr = ptExtHCtrl->ulStatusAddr;
            ptTmpReqEntry->bsReqUptMod = REQ_STS_UPT_MANUL;
400a34e4:	0b09      	s32i.n	a0, a11, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:245

            // Alloc a new intr ctrl entry and fill it.
            ptNewCtrlEntry->bsIntrReq = TRUE;            
400a34e6:	2298      	l32i.n	a9, a2, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:246
            ptNewCtrlEntry->ptReqEntry = ptTmpReqEntry;
400a34e8:	02b9      	s32i.n	a11, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:245
            *(U8*)ptExtHCtrl->ulStatusAddr = SUBSYSTEM_STATUS_PENDING;
            ptTmpReqEntry->ulReqStsAddr = ptExtHCtrl->ulStatusAddr;
            ptTmpReqEntry->bsReqUptMod = REQ_STS_UPT_MANUL;

            // Alloc a new intr ctrl entry and fill it.
            ptNewCtrlEntry->bsIntrReq = TRUE;            
400a34ea:	2099a0        	or	a9, a9, a10
400a34ed:	2299      	s32i.n	a9, a2, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:249
            ptNewCtrlEntry->ptReqEntry = ptTmpReqEntry;

            // Send an internal flash request.
            bResult = L3_IFSendNormalFCmd(ptNewCtrlEntry);
400a34ef:	fce301        	l32r	a0, 400a287c <_mcu2dram_text_start+0x7c>
400a34f2:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:254
            #ifdef SIM
            L3_DbgFCmdPrint(ptNewCtrlEntry, (TRUE == bResult) ? "CpyDataRd_Success" : "CpyDataRd_Fail");
            #endif
            
            ptExtHCtrl->bsSubStage = EXTH_SUB_READ_CHK;
400a34f5:	032c      	movi.n	a3, 32
400a34f7:	fd28      	l32i.n	a2, a13, 60
400a34f9:	0faf42        	movi	a4, -241
400a34fc:	102240        	and	a2, a2, a4
400a34ff:	202230        	or	a2, a2, a3
400a3502:	fd29      	s32i.n	a2, a13, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:256
            //DBG_Printf("TLun%d Blk%d_%d Page%d ExtH-CpyData-Rd.\n", ucTLun, usVirBlk, usPhyBlk, ptExtHCtrl->bsCpyPageNum);
            break;
400a3504:	ff5c06        	j	400a3278 <L3_ExtHCopyData..DJ_1482204275+0xc0>

400a3507 <L3_ExtHCopyData..DJ_1482204275+0x34f>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:294
            break;
        }
        case EXTH_SUB_WRITE:
        {         
            U32 ulTargetRed;
            FCMD_REQ_ENTRY *ptTmpReqEntry = L3_FCMDQAllocTmpReqEntry(ucTLun);
400a3507:	0f2d      	mov.n	a2, a15
400a3509:	fcd901        	l32r	a0, 400a2870 <_mcu2dram_text_start+0x70>
400a350c:	0000c0        	callx0	a0
400a350f:	9129      	s32i.n	a2, a1, 36
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:295
            FCMD_INTR_CTRL_ENTRY *ptNewCtrlEntry = L3_FCMDQAllocIntrEntry(ucTLun);
400a3511:	0f2d      	mov.n	a2, a15
400a3513:	fcd801        	l32r	a0, 400a2874 <_mcu2dram_text_start+0x74>
400a3516:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:305
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
            ptTmpReqEntry->tFlashDesc.bsPhyBlk = usNewPhyBlk;
            ptTmpReqEntry->tFlashDesc.bsVirPage = ptExtHCtrl->bsCpyPageNum;
            ptTmpReqEntry->tFlashDesc.bsBlkMod = ptReqEntry->tFlashDesc.bsBlkMod;
            ptTmpReqEntry->tFlashDesc.bsSecStart = 0;
            ptTmpReqEntry->tFlashDesc.bsSecLen = SEC_PER_BUF;
400a3519:	80af52        	movi	a5, -128
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:304
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
            ptTmpReqEntry->tFlashDesc.bsPhyBlk = usNewPhyBlk;
            ptTmpReqEntry->tFlashDesc.bsVirPage = ptExtHCtrl->bsCpyPageNum;
            ptTmpReqEntry->tFlashDesc.bsBlkMod = ptReqEntry->tFlashDesc.bsBlkMod;
            ptTmpReqEntry->tFlashDesc.bsSecStart = 0;
400a351c:	070c      	movi.n	a7, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:303
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_WRITE;
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
            ptTmpReqEntry->tFlashDesc.bsPhyBlk = usNewPhyBlk;
            ptTmpReqEntry->tFlashDesc.bsVirPage = ptExtHCtrl->bsCpyPageNum;
            ptTmpReqEntry->tFlashDesc.bsBlkMod = ptReqEntry->tFlashDesc.bsBlkMod;
400a351e:	e198      	l32i.n	a9, a1, 56
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:295
        }
        case EXTH_SUB_WRITE:
        {         
            U32 ulTargetRed;
            FCMD_REQ_ENTRY *ptTmpReqEntry = L3_FCMDQAllocTmpReqEntry(ucTLun);
            FCMD_INTR_CTRL_ENTRY *ptNewCtrlEntry = L3_FCMDQAllocIntrEntry(ucTLun);
400a3520:	7129      	s32i.n	a2, a1, 28
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:301

            // Alloc a temp write request entry and Fill it.
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_WRITE;
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
            ptTmpReqEntry->tFlashDesc.bsPhyBlk = usNewPhyBlk;
400a3522:	d108      	l32i.n	a0, a1, 52
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:298
            U32 ulTargetRed;
            FCMD_REQ_ENTRY *ptTmpReqEntry = L3_FCMDQAllocTmpReqEntry(ucTLun);
            FCMD_INTR_CTRL_ENTRY *ptNewCtrlEntry = L3_FCMDQAllocIntrEntry(ucTLun);

            // Alloc a temp write request entry and Fill it.
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_WRITE;
400a3524:	9168      	l32i.n	a6, a1, 36
400a3526:	fcc941        	l32r	a4, 400a284c <_mcu2dram_text_start+0x4c>
400a3529:	0638      	l32i.n	a3, a6, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:300
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
400a352b:	36a8      	l32i.n	a10, a6, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:298
            U32 ulTargetRed;
            FCMD_REQ_ENTRY *ptTmpReqEntry = L3_FCMDQAllocTmpReqEntry(ucTLun);
            FCMD_INTR_CTRL_ENTRY *ptNewCtrlEntry = L3_FCMDQAllocIntrEntry(ucTLun);

            // Alloc a temp write request entry and Fill it.
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_WRITE;
400a352d:	103340        	and	a3, a3, a4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:300
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
400a3530:	410ea4        	insbits	a10, a14, 0, 9
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:299
            FCMD_REQ_ENTRY *ptTmpReqEntry = L3_FCMDQAllocTmpReqEntry(ucTLun);
            FCMD_INTR_CTRL_ENTRY *ptNewCtrlEntry = L3_FCMDQAllocIntrEntry(ucTLun);

            // Alloc a temp write request entry and Fill it.
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_WRITE;
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
400a3533:	fcc741        	l32r	a4, 400a2850 <_mcu2dram_text_start+0x50>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:301
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
            ptTmpReqEntry->tFlashDesc.bsPhyBlk = usNewPhyBlk;
400a3536:	83a0a4        	insbits	a10, a0, 10, 19
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:299
            FCMD_REQ_ENTRY *ptTmpReqEntry = L3_FCMDQAllocTmpReqEntry(ucTLun);
            FCMD_INTR_CTRL_ENTRY *ptNewCtrlEntry = L3_FCMDQAllocIntrEntry(ucTLun);

            // Alloc a temp write request entry and Fill it.
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_WRITE;
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
400a3539:	103340        	and	a3, a3, a4
400a353c:	fcc641        	l32r	a4, 400a2854 <_mcu2dram_text_start+0x54>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:301
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
            ptTmpReqEntry->tFlashDesc.bsPhyBlk = usNewPhyBlk;
400a353f:	36a9      	s32i.n	a10, a6, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:299
            FCMD_REQ_ENTRY *ptTmpReqEntry = L3_FCMDQAllocTmpReqEntry(ucTLun);
            FCMD_INTR_CTRL_ENTRY *ptNewCtrlEntry = L3_FCMDQAllocIntrEntry(ucTLun);

            // Alloc a temp write request entry and Fill it.
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_WRITE;
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
400a3541:	203340        	or	a3, a3, a4
400a3544:	0639      	s32i.n	a3, a6, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:302
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
            ptTmpReqEntry->tFlashDesc.bsPhyBlk = usNewPhyBlk;
            ptTmpReqEntry->tFlashDesc.bsVirPage = ptExtHCtrl->bsCpyPageNum;
400a3546:	211db2        	l16ui	a11, a13, 66
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:306
            ptTmpReqEntry->tFlashDesc.bsBlkMod = ptReqEntry->tFlashDesc.bsBlkMod;
            ptTmpReqEntry->tFlashDesc.bsSecStart = 0;
            ptTmpReqEntry->tFlashDesc.bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[0].bsBufID = L3_BufMgrGetBufIDByNode(ptCurBufNode);
400a3549:	0c2d      	mov.n	a2, a12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:302
            // Alloc a temp write request entry and Fill it.
            ptTmpReqEntry->bsReqType = FCMD_REQ_TYPE_WRITE;
            ptTmpReqEntry->bsReqSubType = FCMD_REQ_SUBTYPE_NORMAL;
            ptTmpReqEntry->tFlashDesc.bsVirBlk = usVirBlk;
            ptTmpReqEntry->tFlashDesc.bsPhyBlk = usNewPhyBlk;
            ptTmpReqEntry->tFlashDesc.bsVirPage = ptExtHCtrl->bsCpyPageNum;
400a354b:	f24ba4        	insbits	a10, a11, 20, 30
400a354e:	36a9      	s32i.n	a10, a6, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:303
            ptTmpReqEntry->tFlashDesc.bsBlkMod = ptReqEntry->tFlashDesc.bsBlkMod;
400a3550:	4998      	l32i.n	a9, a9, 16
400a3552:	4688      	l32i.n	a8, a6, 16
400a3554:	f59090        	extui	a9, a9, 16, 16
400a3557:	910984        	insbits	a8, a9, 16, 17
400a355a:	4689      	s32i.n	a8, a6, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:304
            ptTmpReqEntry->tFlashDesc.bsSecStart = 0;
400a355c:	104672        	s8i	a7, a6, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:305
            ptTmpReqEntry->tFlashDesc.bsSecLen = SEC_PER_BUF;
400a355f:	114652        	s8i	a5, a6, 17
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:306
            ptTmpReqEntry->atBufDesc[0].bsBufID = L3_BufMgrGetBufIDByNode(ptCurBufNode);
400a3562:	fcd601        	l32r	a0, 400a28bc <_mcu2dram_text_start+0xbc>
400a3565:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:309
            ptTmpReqEntry->atBufDesc[0].bsSecStart = 0;
            ptTmpReqEntry->atBufDesc[0].bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[1].bsBufID = INVALID_4F;
400a3568:	fcbc71        	l32r	a7, 400a2858 <_mcu2dram_text_start+0x58>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:308
            ptTmpReqEntry->tFlashDesc.bsBlkMod = ptReqEntry->tFlashDesc.bsBlkMod;
            ptTmpReqEntry->tFlashDesc.bsSecStart = 0;
            ptTmpReqEntry->tFlashDesc.bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[0].bsBufID = L3_BufMgrGetBufIDByNode(ptCurBufNode);
            ptTmpReqEntry->atBufDesc[0].bsSecStart = 0;
            ptTmpReqEntry->atBufDesc[0].bsSecLen = SEC_PER_BUF;
400a356b:	80af62        	movi	a6, -128
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:307
            ptTmpReqEntry->tFlashDesc.bsVirPage = ptExtHCtrl->bsCpyPageNum;
            ptTmpReqEntry->tFlashDesc.bsBlkMod = ptReqEntry->tFlashDesc.bsBlkMod;
            ptTmpReqEntry->tFlashDesc.bsSecStart = 0;
            ptTmpReqEntry->tFlashDesc.bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[0].bsBufID = L3_BufMgrGetBufIDByNode(ptCurBufNode);
            ptTmpReqEntry->atBufDesc[0].bsSecStart = 0;
400a356e:	040c      	movi.n	a4, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:309
            ptTmpReqEntry->atBufDesc[0].bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[1].bsBufID = INVALID_4F;
400a3570:	9158      	l32i.n	a5, a1, 36
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:131
{
    SDL_NODE *ptNode;
    
    ptNode = (SDL_NODE *)l_aExtHSpareTmp[ucTLun*PG_PER_SLC_BLK*PG_PER_WL + usPage];

    return L3_RedMgrGetRedAddrByNode(ptNode);
400a3572:	903ff0        	addx2	a3, a15, a15
400a3575:	113370        	slli	a3, a3, 9
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:306
            ptTmpReqEntry->tFlashDesc.bsPhyBlk = usNewPhyBlk;
            ptTmpReqEntry->tFlashDesc.bsVirPage = ptExtHCtrl->bsCpyPageNum;
            ptTmpReqEntry->tFlashDesc.bsBlkMod = ptReqEntry->tFlashDesc.bsBlkMod;
            ptTmpReqEntry->tFlashDesc.bsSecStart = 0;
            ptTmpReqEntry->tFlashDesc.bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[0].bsBufID = L3_BufMgrGetBufIDByNode(ptCurBufNode);
400a3578:	0a5522        	s16i	a2, a5, 20
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:307
            ptTmpReqEntry->atBufDesc[0].bsSecStart = 0;
400a357b:	164542        	s8i	a4, a5, 22
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:308
            ptTmpReqEntry->atBufDesc[0].bsSecLen = SEC_PER_BUF;
400a357e:	174562        	s8i	a6, a5, 23
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:309
            ptTmpReqEntry->atBufDesc[1].bsBufID = INVALID_4F;
400a3581:	0c5572        	s16i	a7, a5, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:310
            ulTargetRed = RED_ABSOLUTE_ADDR(MCU2_ID, ucTLun, ptNewCtrlEntry->bsCtrlPtr);
400a3584:	fcb661        	l32r	a6, 400a285c <_mcu2dram_text_start+0x5c>
400a3587:	117fe0        	slli	a7, a15, 2
400a358a:	7148      	l32i.n	a4, a1, 28
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:131
{
    SDL_NODE *ptNode;
    
    ptNode = (SDL_NODE *)l_aExtHSpareTmp[ucTLun*PG_PER_SLC_BLK*PG_PER_WL + usPage];

    return L3_RedMgrGetRedAddrByNode(ptNode);
400a358c:	fcac51        	l32r	a5, 400a283c <_mcu2dram_text_start+0x3c>
400a358f:	211d22        	l16ui	a2, a13, 66
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:310
            ptTmpReqEntry->tFlashDesc.bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[0].bsBufID = L3_BufMgrGetBufIDByNode(ptCurBufNode);
            ptTmpReqEntry->atBufDesc[0].bsSecStart = 0;
            ptTmpReqEntry->atBufDesc[0].bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[1].bsBufID = INVALID_4F;
            ulTargetRed = RED_ABSOLUTE_ADDR(MCU2_ID, ucTLun, ptNewCtrlEntry->bsCtrlPtr);
400a3592:	1448      	l32i.n	a4, a4, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:131
{
    SDL_NODE *ptNode;
    
    ptNode = (SDL_NODE *)l_aExtHSpareTmp[ucTLun*PG_PER_SLC_BLK*PG_PER_WL + usPage];

    return L3_RedMgrGetRedAddrByNode(ptNode);
400a3594:	223a      	add.n	a2, a2, a3
400a3596:	232532        	l32i	a3, a5, 140
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:310
            ptTmpReqEntry->tFlashDesc.bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[0].bsBufID = L3_BufMgrGetBufIDByNode(ptCurBufNode);
            ptTmpReqEntry->atBufDesc[0].bsSecStart = 0;
            ptTmpReqEntry->atBufDesc[0].bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[1].bsBufID = INVALID_4F;
            ulTargetRed = RED_ABSOLUTE_ADDR(MCU2_ID, ucTLun, ptNewCtrlEntry->bsCtrlPtr);
400a3599:	354c40        	extui	a4, a4, 28, 4
400a359c:	162552        	l32i	a5, a5, 88
400a359f:	010474        	insbits	a7, a4, 0, 1
400a35a2:	117770        	slli	a7, a7, 9
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:131
{
    SDL_NODE *ptNode;
    
    ptNode = (SDL_NODE *)l_aExtHSpareTmp[ucTLun*PG_PER_SLC_BLK*PG_PER_WL + usPage];

    return L3_RedMgrGetRedAddrByNode(ptNode);
400a35a5:	a02230        	addx4	a2, a2, a3
400a35a8:	0228      	l32i.n	a2, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:310
            ptTmpReqEntry->tFlashDesc.bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[0].bsBufID = L3_BufMgrGetBufIDByNode(ptCurBufNode);
            ptTmpReqEntry->atBufDesc[0].bsSecStart = 0;
            ptTmpReqEntry->atBufDesc[0].bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[1].bsBufID = INVALID_4F;
            ulTargetRed = RED_ABSOLUTE_ADDR(MCU2_ID, ucTLun, ptNewCtrlEntry->bsCtrlPtr);
400a35aa:	557a      	add.n	a5, a5, a7
400a35ac:	556a      	add.n	a5, a5, a6
400a35ae:	8159      	s32i.n	a5, a1, 32
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:131
{
    SDL_NODE *ptNode;
    
    ptNode = (SDL_NODE *)l_aExtHSpareTmp[ucTLun*PG_PER_SLC_BLK*PG_PER_WL + usPage];

    return L3_RedMgrGetRedAddrByNode(ptNode);
400a35b0:	fcc401        	l32r	a0, 400a28c0 <_mcu2dram_text_start+0xc0>
400a35b3:	0000c0        	callx0	a0
400a35b6:	023d      	mov.n	a3, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:311
            ptTmpReqEntry->atBufDesc[0].bsBufID = L3_BufMgrGetBufIDByNode(ptCurBufNode);
            ptTmpReqEntry->atBufDesc[0].bsSecStart = 0;
            ptTmpReqEntry->atBufDesc[0].bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[1].bsBufID = INVALID_4F;
            ulTargetRed = RED_ABSOLUTE_ADDR(MCU2_ID, ucTLun, ptNewCtrlEntry->bsCtrlPtr);
            COM_MemCpy((U32*)ulTargetRed, (U32*)L3_ExtHGetSpareTmpAddr(ucTLun, ptExtHCtrl->bsCpyPageNum), RED_SW_SZ_DW);
400a35b8:	40a042        	movi	a4, 64
400a35bb:	082122        	l32i	a2, a1, 32
400a35be:	fcae01        	l32r	a0, 400a2878 <_mcu2dram_text_start+0x78>
400a35c1:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:315
            ptTmpReqEntry->ulSpareAddr = ulTargetRed;
            *(U8*)ptExtHCtrl->ulStatusAddr = SUBSYSTEM_STATUS_PENDING;
            ptTmpReqEntry->ulReqStsAddr = ptExtHCtrl->ulStatusAddr;
            ptTmpReqEntry->bsReqUptMod = REQ_STS_UPT_MANUL;                                  
400a35c4:	fca701        	l32r	a0, 400a2860 <_mcu2dram_text_start+0x60>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:313
            ptTmpReqEntry->atBufDesc[0].bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[1].bsBufID = INVALID_4F;
            ulTargetRed = RED_ABSOLUTE_ADDR(MCU2_ID, ucTLun, ptNewCtrlEntry->bsCtrlPtr);
            COM_MemCpy((U32*)ulTargetRed, (U32*)L3_ExtHGetSpareTmpAddr(ucTLun, ptExtHCtrl->bsCpyPageNum), RED_SW_SZ_DW);
            ptTmpReqEntry->ulSpareAddr = ulTargetRed;
            *(U8*)ptExtHCtrl->ulStatusAddr = SUBSYSTEM_STATUS_PENDING;
400a35c7:	122d32        	l32i	a3, a13, 72
400a35ca:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:312
            ptTmpReqEntry->atBufDesc[0].bsSecStart = 0;
            ptTmpReqEntry->atBufDesc[0].bsSecLen = SEC_PER_BUF;
            ptTmpReqEntry->atBufDesc[1].bsBufID = INVALID_4F;
            ulTargetRed = RED_ABSOLUTE_ADDR(MCU2_ID, ucTLun, ptNewCtrlEntry->bsCtrlPtr);
            COM_MemCpy((U32*)ulTargetRed, (U32*)L3_ExtHGetSpareTmpAddr(ucTLun, ptExtHCtrl->bsCpyPageNum), RED_SW_SZ_DW);
            ptTmpReqEntry->ulSpareAddr = ulTargetRed;
400a35cc:	91a8      	l32i.n	a10, a1, 36
400a35ce:	8148      	l32i.n	a4, a1, 32
400a35d0:	2a49      	s32i.n	a4, a10, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:313
            *(U8*)ptExtHCtrl->ulStatusAddr = SUBSYSTEM_STATUS_PENDING;
400a35d2:	004322        	s8i	a2, a3, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:315
            ptTmpReqEntry->ulReqStsAddr = ptExtHCtrl->ulStatusAddr;
            ptTmpReqEntry->bsReqUptMod = REQ_STS_UPT_MANUL;                                  
400a35d5:	0ab8      	l32i.n	a11, a10, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:318

            // Alloc a new intr ctrl entry and fill it.
            ptNewCtrlEntry->bsIntrReq = TRUE;
400a35d7:	fca491        	l32r	a9, 400a2868 <_mcu2dram_text_start+0x68>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:315
            ulTargetRed = RED_ABSOLUTE_ADDR(MCU2_ID, ucTLun, ptNewCtrlEntry->bsCtrlPtr);
            COM_MemCpy((U32*)ulTargetRed, (U32*)L3_ExtHGetSpareTmpAddr(ucTLun, ptExtHCtrl->bsCpyPageNum), RED_SW_SZ_DW);
            ptTmpReqEntry->ulSpareAddr = ulTargetRed;
            *(U8*)ptExtHCtrl->ulStatusAddr = SUBSYSTEM_STATUS_PENDING;
            ptTmpReqEntry->ulReqStsAddr = ptExtHCtrl->ulStatusAddr;
            ptTmpReqEntry->bsReqUptMod = REQ_STS_UPT_MANUL;                                  
400a35da:	10bb00        	and	a11, a11, a0
400a35dd:	fca101        	l32r	a0, 400a2864 <_mcu2dram_text_start+0x64>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:318

            // Alloc a new intr ctrl entry and fill it.
            ptNewCtrlEntry->bsIntrReq = TRUE;
400a35e0:	7128      	l32i.n	a2, a1, 28
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:315
            ulTargetRed = RED_ABSOLUTE_ADDR(MCU2_ID, ucTLun, ptNewCtrlEntry->bsCtrlPtr);
            COM_MemCpy((U32*)ulTargetRed, (U32*)L3_ExtHGetSpareTmpAddr(ucTLun, ptExtHCtrl->bsCpyPageNum), RED_SW_SZ_DW);
            ptTmpReqEntry->ulSpareAddr = ulTargetRed;
            *(U8*)ptExtHCtrl->ulStatusAddr = SUBSYSTEM_STATUS_PENDING;
            ptTmpReqEntry->ulReqStsAddr = ptExtHCtrl->ulStatusAddr;
            ptTmpReqEntry->bsReqUptMod = REQ_STS_UPT_MANUL;                                  
400a35e2:	20bb00        	or	a11, a11, a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:314
            ptTmpReqEntry->atBufDesc[1].bsBufID = INVALID_4F;
            ulTargetRed = RED_ABSOLUTE_ADDR(MCU2_ID, ucTLun, ptNewCtrlEntry->bsCtrlPtr);
            COM_MemCpy((U32*)ulTargetRed, (U32*)L3_ExtHGetSpareTmpAddr(ucTLun, ptExtHCtrl->bsCpyPageNum), RED_SW_SZ_DW);
            ptTmpReqEntry->ulSpareAddr = ulTargetRed;
            *(U8*)ptExtHCtrl->ulStatusAddr = SUBSYSTEM_STATUS_PENDING;
            ptTmpReqEntry->ulReqStsAddr = ptExtHCtrl->ulStatusAddr;
400a35e5:	122d02        	l32i	a0, a13, 72
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:315
            ptTmpReqEntry->bsReqUptMod = REQ_STS_UPT_MANUL;                                  
400a35e8:	0ab9      	s32i.n	a11, a10, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:314
            ptTmpReqEntry->atBufDesc[1].bsBufID = INVALID_4F;
            ulTargetRed = RED_ABSOLUTE_ADDR(MCU2_ID, ucTLun, ptNewCtrlEntry->bsCtrlPtr);
            COM_MemCpy((U32*)ulTargetRed, (U32*)L3_ExtHGetSpareTmpAddr(ucTLun, ptExtHCtrl->bsCpyPageNum), RED_SW_SZ_DW);
            ptTmpReqEntry->ulSpareAddr = ulTargetRed;
            *(U8*)ptExtHCtrl->ulStatusAddr = SUBSYSTEM_STATUS_PENDING;
            ptTmpReqEntry->ulReqStsAddr = ptExtHCtrl->ulStatusAddr;
400a35ea:	1a09      	s32i.n	a0, a10, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:318
            ptTmpReqEntry->bsReqUptMod = REQ_STS_UPT_MANUL;                                  

            // Alloc a new intr ctrl entry and fill it.
            ptNewCtrlEntry->bsIntrReq = TRUE;
400a35ec:	2288      	l32i.n	a8, a2, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:319
            ptNewCtrlEntry->ptReqEntry = ptTmpReqEntry;
400a35ee:	02a9      	s32i.n	a10, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:318
            *(U8*)ptExtHCtrl->ulStatusAddr = SUBSYSTEM_STATUS_PENDING;
            ptTmpReqEntry->ulReqStsAddr = ptExtHCtrl->ulStatusAddr;
            ptTmpReqEntry->bsReqUptMod = REQ_STS_UPT_MANUL;                                  

            // Alloc a new intr ctrl entry and fill it.
            ptNewCtrlEntry->bsIntrReq = TRUE;
400a35f0:	208890        	or	a8, a8, a9
400a35f3:	026282        	s32i	a8, a2, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:322
            ptNewCtrlEntry->ptReqEntry = ptTmpReqEntry;

            // Send an internal flash request.
            bResult = L3_IFSendNormalFCmd(ptNewCtrlEntry);
400a35f6:	fca101        	l32r	a0, 400a287c <_mcu2dram_text_start+0x7c>
400a35f9:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:327
            #ifdef SIM
            L3_DbgFCmdPrint(ptNewCtrlEntry, (TRUE == bResult) ? "CpyDataWr_Success" : "CpyDataWr_Fail");
            #endif
            
            ptExtHCtrl->bsSubStage = EXTH_SUB_WRITE_CHK;
400a35fc:	034c      	movi.n	a3, 64
400a35fe:	fd28      	l32i.n	a2, a13, 60
400a3600:	0faf42        	movi	a4, -241
400a3603:	102240        	and	a2, a2, a4
400a3606:	202230        	or	a2, a2, a3
400a3609:	fd29      	s32i.n	a2, a13, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:330
            //DBG_Printf("TLun%d Blk%d_%d Page%d ExtH-CpyData-Wr\n", ucTLun, usVirBlk, usNewPhyBlk, ptExtHCtrl->bsCpyPageNum);
            
            break;
400a360b:	ff1a46        	j	400a3278 <L3_ExtHCopyData..DJ_1482204275+0xc0>

400a360e <L3_ExtHCopyData..DJ_1482204275+0x456>:
	...

400a3610 <L3_ExtHCopyData..DJ_1482204275+0x458>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:205
            {
                ptExtHCtrl->bsCpyPageNum = 0;
                if (0 < L3_BufMgrGetFreeCnt() && ptExtHCtrl->bsCpyPageCnt < L3_RedMgrGetFreeCnt())
                {
                    bResult = L3_ExtHAllcSpareTmpAddr(ucTLun, ptExtHCtrl->bsCpyPageCnt);
                    ASSERT(TRUE == bResult);
400a3610:	ffff06        	j	400a3610 <L3_ExtHCopyData..DJ_1482204275+0x458>

400a3613 <L3_ExtHCopyData..DJ_1482204275+0x45b>:
	...

400a3614 <L3_ExtHCopyData..DJ_1482204275+0x45c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:208

                    ptCurBufNode = L3_BufMgrAllocateNode();
                    ASSERT(NULL != ptCurBufNode);
400a3614:	ffff06        	j	400a3614 <L3_ExtHCopyData..DJ_1482204275+0x45c>

400a3617 <L3_ExtHCopyData..DJ_1482204275+0x45f>:
	...

400a3618 <L3_ExtHCopyData..DJ_1482204275+0x460>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:353
                        //DBG_Printf("TLun%d Blk%d_%d Page%d ExtH-CpyData-Wr-Success\n", ucTLun, usVirBlk, usNewPhyBlk, ptExtHCtrl->bsCpyPageNum - 1);
                    }
                    else
                    {
                        ptExtHCtrl->bsSubStage = EXTH_SUB_SUCCESS;
                        DBG_Printf("TLun%d Blk%d_%d Page%d ExtH-CpyData-Wr-Done\n", ucTLun, usVirBlk, usNewPhyBlk, ptExtHCtrl->bsCpyPageNum - 1);
400a3618:	0f3d      	mov.n	a3, a15
400a361a:	0e4d      	mov.n	a4, a14
400a361c:	620b      	addi.n	a6, a2, -1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:352
                        ptExtHCtrl->bsSubStage = EXTH_SUB_READ;
                        //DBG_Printf("TLun%d Blk%d_%d Page%d ExtH-CpyData-Wr-Success\n", ucTLun, usVirBlk, usNewPhyBlk, ptExtHCtrl->bsCpyPageNum - 1);
                    }
                    else
                    {
                        ptExtHCtrl->bsSubStage = EXTH_SUB_SUCCESS;
400a361e:	70a052        	movi	a5, 112
400a3621:	205050        	or	a5, a0, a5
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:353
                        DBG_Printf("TLun%d Blk%d_%d Page%d ExtH-CpyData-Wr-Done\n", ucTLun, usVirBlk, usNewPhyBlk, ptExtHCtrl->bsCpyPageNum - 1);
400a3624:	fc9d21        	l32r	a2, 400a2898 <_mcu2dram_text_start+0x98>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:352
                        ptExtHCtrl->bsSubStage = EXTH_SUB_READ;
                        //DBG_Printf("TLun%d Blk%d_%d Page%d ExtH-CpyData-Wr-Success\n", ucTLun, usVirBlk, usNewPhyBlk, ptExtHCtrl->bsCpyPageNum - 1);
                    }
                    else
                    {
                        ptExtHCtrl->bsSubStage = EXTH_SUB_SUCCESS;
400a3627:	fd59      	s32i.n	a5, a13, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:353
                        DBG_Printf("TLun%d Blk%d_%d Page%d ExtH-CpyData-Wr-Done\n", ucTLun, usVirBlk, usNewPhyBlk, ptExtHCtrl->bsCpyPageNum - 1);
400a3629:	d158      	l32i.n	a5, a1, 52
400a362b:	fc8301        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a362e:	0000c0        	callx0	a0
400a3631:	ff06c6        	j	400a3250 <L3_ExtHCopyData..DJ_1482204275+0x98>

400a3634 <L3_ExtHCopyData..DJ_1482204275+0x47c>:
	...

400a3636 <L3_ExtHCopyData..DJ_1482204275+0x47e>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:267
            {
                if (SUBSYSTEM_STATUS_EMPTY_PG == bResult)
                {
                    ptExtHCtrl->bsSubStage = EXTH_SUB_SUCCESS;

                    DBG_Printf("TLun%d Blk%d_%d Page%d ExtH-CpyData-Rd-EmptyPage\n", ucTLun, usVirBlk, usPhyBlk, ptExtHCtrl->bsCpyPageNum);                    
400a3636:	0f3d      	mov.n	a3, a15
400a3638:	0e4d      	mov.n	a4, a14
400a363a:	c158      	l32i.n	a5, a1, 48
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:265
            bResult = *(U8*)ptExtHCtrl->ulStatusAddr;
            if (SUBSYSTEM_STATUS_PENDING != bResult)
            {
                if (SUBSYSTEM_STATUS_EMPTY_PG == bResult)
                {
                    ptExtHCtrl->bsSubStage = EXTH_SUB_SUCCESS;
400a363c:	70a062        	movi	a6, 112
400a363f:	206260        	or	a6, a2, a6
400a3642:	fd69      	s32i.n	a6, a13, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:267

                    DBG_Printf("TLun%d Blk%d_%d Page%d ExtH-CpyData-Rd-EmptyPage\n", ucTLun, usVirBlk, usPhyBlk, ptExtHCtrl->bsCpyPageNum);                    
400a3644:	fc9621        	l32r	a2, 400a289c <_mcu2dram_text_start+0x9c>
400a3647:	211d62        	l16ui	a6, a13, 66
400a364a:	fc7b01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a364d:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a3650:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:89
400a3653:	fc7521        	l32r	a2, 400a2828 <_mcu2dram_text_start+0x28>
400a3656:	fc7801        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a3659:	0000c0        	callx0	a0
400a365c:	ffff06        	j	400a365c <L3_ExtHCopyData..DJ_1482204275+0x4a4>

400a365f <L3_ExtHCopyData..DJ_1482204275+0x4a7>:
	...

400a3660 <L3_ExtHCopyData..DJ_1482204275+0x4a8>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:278
                    if (SUBSYSTEM_STATUS_FAIL == bResult)
                    {
                        // Rebuild RPMT handle.-pending.
                        // ..
                        
                        DBG_Printf("TLun%d Blk%d_%d Page%d ExtH-CpyData-Rd-Fail\n", ucTLun, usVirBlk, usPhyBlk, ptExtHCtrl->bsCpyPageNum);
400a3660:	fc9021        	l32r	a2, 400a28a0 <_mcu2dram_text_start+0xa0>
400a3663:	0f3d      	mov.n	a3, a15
400a3665:	204ee0        	or	a4, a14, a14
400a3668:	0c2152        	l32i	a5, a1, 48
400a366b:	211d62        	l16ui	a6, a13, 66
400a366e:	fc7201        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a3671:	0000c0        	callx0	a0
400a3674:	feff86        	j	400a3276 <L3_ExtHCopyData..DJ_1482204275+0xbe>

400a3677 <L3_ExtHCopyData..DJ_1482204275+0x4bf>:
	...

400a3678 <L3_ExtHPrcPRG..GJ_1482204275>:
L3_ExtHPrcPRG():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:694
    usNewVirBlk = ptExtHCtrl->bsNewVirBlk;
    usNewPhyBlk = ptExtHCtrl->bsNewPhyBlk;

    ucSPU = L2_GET_SPU(ucTLun);
    ucLunInSPU = L2_GET_LUN_IN_SPU(ucTLun);
    bTLCBlk = (FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
400a3678:	00a052        	movi	a5, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:665
Usage      : 
History    : 
    1. 2016.8.11 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ExtHPrcPRG(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a367b:	80c112        	addi	a1, a1, -128
400a367e:	203220        	or	a3, a2, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:666
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
400a3681:	002292        	l32i	a9, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:665
Usage      : 
History    : 
    1. 2016.8.11 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ExtHPrcPRG(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a3684:	1e61c2        	s32i	a12, a1, 120
400a3687:	1d6102        	s32i	a0, a1, 116
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:685
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    usPhyPage = ptCtrlEntry->bsPhyPage;
400a368a:	0212c2        	l16ui	a12, a2, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:676
    U16 usVirBlk, usPhyBlk, usVirPage, usPhyPage, usNewPhyBlk, usNewVirBlk;
    U32 ulLBA;
    BOOL bBackUpBlk, bTLCBlk;

    ucTLun = ptReqEntry->bsTLun;
    ucCmdType = ptCtrlEntry->bsCmdType;
400a368d:	060202        	l8ui	a0, a2, 6
400a3690:	176102        	s32i	a0, a1, 92
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:685
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    usPhyPage = ptCtrlEntry->bsPhyPage;
400a3693:	1a61c2        	s32i	a12, a1, 104
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:686
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;
400a3696:	b9a8      	l32i.n	a10, a9, 44
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:678
    BOOL bBackUpBlk, bTLCBlk;

    ucTLun = ptReqEntry->bsTLun;
    ucCmdType = ptCtrlEntry->bsCmdType;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
    ucSecStart = ptReqEntry->tFlashDesc.bsSecStart;
400a3698:	1009b2        	l8ui	a11, a9, 16
400a369b:	1361b2        	s32i	a11, a1, 76
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:686
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    usPhyPage = ptCtrlEntry->bsPhyPage;
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;
400a369e:	1b61a2        	s32i	a10, a1, 108
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:675
    U8 ucTLun, ucSPU, ucLunInSPU, ucCmdType, ucPln, ucErrCode, ucSecStart, ucSecLen, ucLpnBitmap;
    U16 usVirBlk, usPhyBlk, usVirPage, usPhyPage, usNewPhyBlk, usNewVirBlk;
    U32 ulLBA;
    BOOL bBackUpBlk, bTLCBlk;

    ucTLun = ptReqEntry->bsTLun;
400a36a1:	0009c2        	l8ui	a12, a9, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:677
    ucCmdType = ptCtrlEntry->bsCmdType;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
400a36a4:	49a8      	l32i.n	a10, a9, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:682
    ucSecStart = ptReqEntry->tFlashDesc.bsSecStart;
    ucSecLen = ptReqEntry->tFlashDesc.bsSecLen;
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
400a36a6:	3998      	l32i.n	a9, a9, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:677
    U32 ulLBA;
    BOOL bBackUpBlk, bTLCBlk;

    ucTLun = ptReqEntry->bsTLun;
    ucCmdType = ptCtrlEntry->bsCmdType;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
400a36a8:	1522a0        	extui	a2, a10, 18, 2
400a36ab:	7408a0        	extui	a0, a10, 8, 8
400a36ae:	75b8a0        	extui	a11, a10, 24, 8
400a36b1:	1561b2        	s32i	a11, a1, 84
400a36b4:	146102        	s32i	a0, a1, 80
400a36b7:	186122        	s32i	a2, a1, 96
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:665
Usage      : 
History    : 
    1. 2016.8.11 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ExtHPrcPRG(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a36ba:	fc6001        	l32r	a0, 400a283c <_mcu2dram_text_start+0x3c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:683
    ucSecStart = ptReqEntry->tFlashDesc.bsSecStart;
    ucSecLen = ptReqEntry->tFlashDesc.bsSecLen;
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
400a36bd:	946a90        	extui	a6, a9, 10, 10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:667
    1. 2016.8.11 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ExtHPrcPRG(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
400a36c0:	9328      	l32i.n	a2, a3, 36
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:694
    usNewVirBlk = ptExtHCtrl->bsNewVirBlk;
    usNewPhyBlk = ptExtHCtrl->bsNewPhyBlk;

    ucSPU = L2_GET_SPU(ucTLun);
    ucLunInSPU = L2_GET_LUN_IN_SPU(ucTLun);
    bTLCBlk = (FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
400a36c2:	15a0a0        	extui	a10, a10, 16, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:689
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    usPhyPage = ptCtrlEntry->bsPhyPage;
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;

    bBackUpBlk = ptExtHCtrl->bsBackUpBlk;
    usNewVirBlk = ptExtHCtrl->bsNewVirBlk;
400a36c5:	231242        	l16ui	a4, a2, 70
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:694
    usNewPhyBlk = ptExtHCtrl->bsNewPhyBlk;

    ucSPU = L2_GET_SPU(ucTLun);
    ucLunInSPU = L2_GET_LUN_IN_SPU(ucTLun);
    bTLCBlk = (FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
400a36c8:	fecaa2        	addi	a10, a10, -2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:684
    ucSecLen = ptReqEntry->tFlashDesc.bsSecLen;
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
400a36cb:	a5b490        	extui	a11, a9, 20, 11
400a36ce:	1961b2        	s32i	a11, a1, 100
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:682
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
    ucSecStart = ptReqEntry->tFlashDesc.bsSecStart;
    ucSecLen = ptReqEntry->tFlashDesc.bsSecLen;
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
400a36d1:	949090        	extui	a9, a9, 0, 10
400a36d4:	1c6192        	s32i	a9, a1, 112
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:696

    ucSPU = L2_GET_SPU(ucTLun);
    ucLunInSPU = L2_GET_LUN_IN_SPU(ucTLun);
    bTLCBlk = (FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
    // Double check the Request Block type and the VBT info.
    ASSERT(bTLCBlk == L2_VBT_Get_TLC(ucSPU, usVirBlk));
400a36d7:	11bce0        	slli	a11, a12, 2
400a36da:	bb0a      	add.n	a11, a11, a0
400a36dc:	1199c0        	slli	a9, a9, 4
400a36df:	166192        	s32i	a9, a1, 88
400a36e2:	9c2b82        	l32i	a8, a11, 0x270
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:688
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    usPhyPage = ptCtrlEntry->bsPhyPage;
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;

    bBackUpBlk = ptExtHCtrl->bsBackUpBlk;
400a36e5:	f208      	l32i.n	a0, a2, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:696

    ucSPU = L2_GET_SPU(ucTLun);
    ucLunInSPU = L2_GET_LUN_IN_SPU(ucTLun);
    bTLCBlk = (FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
    // Double check the Request Block type and the VBT info.
    ASSERT(bTLCBlk == L2_VBT_Get_TLC(ucSPU, usVirBlk));
400a36e7:	889a      	add.n	a8, a8, a9
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:688
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    usPhyPage = ptCtrlEntry->bsPhyPage;
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;

    bBackUpBlk = ptExtHCtrl->bsBackUpBlk;
400a36e9:	047800        	extui	a7, a0, 8, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:665
Usage      : 
History    : 
    1. 2016.8.11 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ExtHPrcPRG(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a36ec:	190c      	movi.n	a9, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:694
    usNewVirBlk = ptExtHCtrl->bsNewVirBlk;
    usNewPhyBlk = ptExtHCtrl->bsNewPhyBlk;

    ucSPU = L2_GET_SPU(ucTLun);
    ucLunInSPU = L2_GET_LUN_IN_SPU(ucTLun);
    bTLCBlk = (FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
400a36ee:	8359a0        	moveqz	a5, a9, a10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:696
    // Double check the Request Block type and the VBT info.
    ASSERT(bTLCBlk == L2_VBT_Get_TLC(ucSPU, usVirBlk));
400a36f1:	2888      	l32i.n	a8, a8, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:690
    usPhyPage = ptCtrlEntry->bsPhyPage;
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;

    bBackUpBlk = ptExtHCtrl->bsBackUpBlk;
    usNewVirBlk = ptExtHCtrl->bsNewVirBlk;
    usNewPhyBlk = ptExtHCtrl->bsNewPhyBlk;
400a36f3:	2212a2        	l16ui	a10, a2, 68
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:696

    ucSPU = L2_GET_SPU(ucTLun);
    ucLunInSPU = L2_GET_LUN_IN_SPU(ucTLun);
    bTLCBlk = (FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
    // Double check the Request Block type and the VBT info.
    ASSERT(bTLCBlk == L2_VBT_Get_TLC(ucSPU, usVirBlk));
400a36f6:	048880        	extui	a8, a8, 8, 1
400a36f9:	439587        	bne	a5, a8, 400a3740 <L3_ExtHPrcPRG..GJ_1482204275+0xc8>
400a36fc:	c129      	s32i.n	a2, a1, 48
400a36fe:	b169      	s32i.n	a6, a1, 44
400a3700:	a159      	s32i.n	a5, a1, 40
400a3702:	9149      	s32i.n	a4, a1, 36
400a3704:	81b9      	s32i.n	a11, a1, 32
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:698

    switch (ptExtHCtrl->bsStage)
400a3706:	349000        	extui	a9, a0, 0, 4
400a3709:	89bc      	beqz.n	a9, 400a3745 <L3_ExtHPrcPRG..GJ_1482204275+0xcd>
400a370b:	6d1926        	beqi	a9, 1, 400a377c <L3_ExtHPrcPRG..GJ_1482204275+0x104>
400a370e:	1261a2        	s32i	a10, a1, 72
400a3711:	fec9b2        	addi	a11, a9, -2
400a3714:	2f1b16        	beqz	a11, 400a3a09 <L3_ExtHPrcPRG..GJ_1482204275+0x391>
400a3717:	116172        	s32i	a7, a1, 68
400a371a:	fdc922        	addi	a2, a9, -3
400a371d:	20c216        	beqz	a2, 400a392d <L3_ExtHPrcPRG..GJ_1482204275+0x2b5>
400a3720:	fbc942        	addi	a4, a9, -5
400a3723:	19c416        	beqz	a4, 400a38c3 <L3_ExtHPrcPRG..GJ_1482204275+0x24b>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:834
                ucTLun, usVirBlk, usPhyBlk, usVirPage, usPhyPage, ucCmdType, ucPln, ulLBA);
            break;
        }
        default:
        {
            DBG_Printf("ExtH PRG Stage Error.0x%x\n", (U32)ptCtrlEntry);
400a3726:	fc6721        	l32r	a2, 400a28c4 <_mcu2dram_text_start+0xc4>
400a3729:	fc4301        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a372c:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:835
            DBG_Getch();
400a372f:	049e05        	call0	400a8110 <DBG_Getch>

400a3732 <L3_ExtHPrcPRG..GJ_1482204275+0xba>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:839
        }
    }

    return;
400a3732:	1e21c2        	l32i	a12, a1, 120
400a3735:	80a022        	movi	a2, 128
400a3738:	1d2102        	l32i	a0, a1, 116
400a373b:	112a      	add.n	a1, a1, a2
400a373d:	f00d      	ret.n

400a373f <L3_ExtHPrcPRG..GJ_1482204275+0xc7>:
	...

400a3740 <L3_ExtHPrcPRG..GJ_1482204275+0xc8>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:696

    ucSPU = L2_GET_SPU(ucTLun);
    ucLunInSPU = L2_GET_LUN_IN_SPU(ucTLun);
    bTLCBlk = (FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
    // Double check the Request Block type and the VBT info.
    ASSERT(bTLCBlk == L2_VBT_Get_TLC(ucSPU, usVirBlk));
400a3740:	ffff06        	j	400a3740 <L3_ExtHPrcPRG..GJ_1482204275+0xc8>

400a3743 <L3_ExtHPrcPRG..GJ_1482204275+0xcb>:
	...

400a3745 <L3_ExtHPrcPRG..GJ_1482204275+0xcd>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:704
    {
        case EXTH_INIT:
        {
            ptExtHCtrl->bsStage = EXTH_ALLOC_NEWBLK;
            ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
            DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d LBA=0x%x ExtH_PRG Start\n",
400a3745:	0c3d      	mov.n	a3, a12
400a3747:	1c2142        	l32i	a4, a1, 112
400a374a:	182162        	l32i	a6, a1, 96
400a374d:	1b2152        	l32i	a5, a1, 108
400a3750:	172172        	l32i	a7, a1, 92
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:702

    switch (ptExtHCtrl->bsStage)
    {
        case EXTH_INIT:
        {
            ptExtHCtrl->bsStage = EXTH_ALLOC_NEWBLK;
400a3753:	087c      	movi.n	a8, -16
400a3755:	190c      	movi.n	a9, 1
400a3757:	108080        	and	a8, a0, a8
400a375a:	208890        	or	a8, a8, a9
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:703
            ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
400a375d:	0faf92        	movi	a9, -241
400a3760:	108890        	and	a8, a8, a9
400a3763:	f289      	s32i.n	a8, a2, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:704
            DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d LBA=0x%x ExtH_PRG Start\n",
400a3765:	fc5821        	l32r	a2, 400a28c8 <_mcu2dram_text_start+0xc8>
400a3768:	0179      	s32i.n	a7, a1, 0
400a376a:	2159      	s32i.n	a5, a1, 8
400a376c:	1169      	s32i.n	a6, a1, 4
400a376e:	b158      	l32i.n	a5, a1, 44
400a3770:	192162        	l32i	a6, a1, 100
400a3773:	1a2172        	l32i	a7, a1, 104
400a3776:	fc3001        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a3779:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:709
                ucTLun, usVirBlk, usPhyBlk, usVirPage, usPhyPage, ucCmdType, ucPln, ulLBA);
        }
        case EXTH_ALLOC_NEWBLK:
        {
            if (TRUE != L2_BM_BackUpBlockEmpty(ucSPU, ucLunInSPU))
400a377c:	000c      	movi.n	a0, 0
400a377e:	fc3621        	l32r	a2, 400a2858 <_mcu2dram_text_start+0x58>
400a3781:	81b8      	l32i.n	a11, a1, 32
400a3783:	24a292        	movi	a9, 0x224
400a3786:	7c2bb2        	l32i	a11, a11, 0x1f0
400a3789:	0fa976        	loopgtz	a9, 400a379c <L3_ExtHPrcPRG..GJ_1482204275+0x124>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:440
    U16 Ret;

    Ret = TRUE;
    for (i = 0; i < (BLK_PER_PLN + RSV_BLK_PER_PLN); i++)
    {
        if ((pPBITItem[i].bBackup == TRUE) && (pPBITItem[i].bFree == TRUE))
400a378c:	b090b0        	addx8	a9, a0, a11
400a378f:	1998      	l32i.n	a9, a9, 4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:438
    U16 i;
    PBIT_ENTRY* pPBITItem = pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu];
    U16 Ret;

    Ret = TRUE;
    for (i = 0; i < (BLK_PER_PLN + RSV_BLK_PER_PLN); i++)
400a3791:	001b      	addi.n	a0, a0, 1
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:440
    {
        if ((pPBITItem[i].bBackup == TRUE) && (pPBITItem[i].bFree == TRUE))
400a3793:	026937        	bbci	a9, 3, 400a3799 <L3_ExtHPrcPRG..GJ_1482204275+0x121>
400a3796:	56e907        	bbsi	a9, 0, 400a37f0 <L3_ExtHPrcPRG..GJ_1482204275+0x178>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:438
    U16 i;
    PBIT_ENTRY* pPBITItem = pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu];
    U16 Ret;

    Ret = TRUE;
    for (i = 0; i < (BLK_PER_PLN + RSV_BLK_PER_PLN); i++)
400a3799:	f40000        	extui	a0, a0, 0, 16

400a379c <L3_ExtHPrcPRG..GJ_1482204275+0x124>:
400a379c:	202cc0        	or	a2, a12, a12
400a379f:	0a2132        	l32i	a3, a1, 40
400a37a2:	fc5101        	l32r	a0, 400a28e8 <_mcu2dram_text_start+0xe8>
400a37a5:	0000c0        	callx0	a0
400a37a8:	fc2c01        	l32r	a0, 400a2858 <_mcu2dram_text_start+0x58>
400a37ab:	9129      	s32i.n	a2, a1, 36
400a37ad:	c02200        	sub	a2, a2, a0
400a37b0:	10c216        	beqz	a2, 400a38c0 <L3_ExtHPrcPRG..GJ_1482204275+0x248>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:420

U16 MCU12_DRAM_TEXT L2_VBT_GetPhysicalBlockAddr(U8 ucSuperPu, U8 ucLunInSuperPu, U16 VBN)
{
    U16 PhysicalBlockAddr;

    PhysicalBlockAddr = pVBT[ucSuperPu]->m_VBT[VBN].PhysicalBlockAddr[ucLunInSuperPu];
400a37b3:	81a8      	l32i.n	a10, a1, 32
400a37b5:	91b8      	l32i.n	a11, a1, 36
400a37b7:	9c2aa2        	l32i	a10, a10, 0x270
400a37ba:	11bbc0        	slli	a11, a11, 4
400a37bd:	aaba      	add.n	a10, a10, a11
400a37bf:	001aa2        	l16ui	a10, a10, 0
400a37c2:	a1b8      	l32i.n	a11, a1, 40
400a37c4:	c03a00        	sub	a3, a10, a0
400a37c7:	1fe316        	beqz	a3, 400a39c9 <L3_ExtHPrcPRG..GJ_1482204275+0x351>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:728
                ASSERT(INVALID_4F != usNewVirBlk);

                usNewPhyBlk = L2_VBT_GetPhysicalBlockAddr(ucSPU, ucLunInSPU, usNewVirBlk);
                ASSERT(INVALID_4F != usNewPhyBlk);

                if (TRUE == bTLCBlk)
400a37ca:	fc1c01        	l32r	a0, 400a283c <_mcu2dram_text_start+0x3c>
400a37cd:	bb0b      	addi.n	a11, a11, -1
400a37cf:	a00c00        	addx4	a0, a12, a0
400a37d2:	bc2002        	l32i	a0, a0, 0x2f0
400a37d5:	2c8b16        	beqz	a11, 400a3aa1 <L3_ExtHPrcPRG..GJ_1482204275+0x429>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:736
                    g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
                }
                else
                {
                    g_PuInfo[ucSPU]->m_DataBlockCnt[BLKTYPE_SLC]--;
                    g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
400a37d8:	5028      	l32i.n	a2, a0, 20
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:735
                    g_PuInfo[ucSPU]->m_DataBlockCnt[BLKTYPE_TLC]--;
                    g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
                }
                else
                {
                    g_PuInfo[ucSPU]->m_DataBlockCnt[BLKTYPE_SLC]--;
400a37da:	061032        	l16ui	a3, a0, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:736
                    g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
400a37dd:	fed222        	addmi	a2, a2, 0xfffffe00
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:735
                    g_PuInfo[ucSPU]->m_DataBlockCnt[BLKTYPE_TLC]--;
                    g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
                }
                else
                {
                    g_PuInfo[ucSPU]->m_DataBlockCnt[BLKTYPE_SLC]--;
400a37e0:	330b      	addi.n	a3, a3, -1
400a37e2:	065032        	s16i	a3, a0, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:736
                    g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
400a37e5:	056022        	s32i	a2, a0, 20

400a37e8 <L3_ExtHPrcPRG..GJ_1482204275+0x170>:
400a37e8:	1261a2        	s32i	a10, a1, 72
400a37eb:	000c      	movi.n	a0, 0
400a37ed:	001cc6        	j	400a3864 <L3_ExtHPrcPRG..GJ_1482204275+0x1ec>

400a37f0 <L3_ExtHPrcPRG..GJ_1482204275+0x178>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:565
    else if (BLOCK_TYPE_MIN_ERASE_CNT == AllocateType)
    {
        U32 MinEraseCnt = INVALID_8F;
        U16 Pos = INVALID_4F;

        if (TRUE != ucTLCBlk)
400a37f0:	a148      	l32i.n	a4, a1, 40
400a37f2:	0b0d      	mov.n	a0, a11
400a37f4:	043d      	mov.n	a3, a4
400a37f6:	440b      	addi.n	a4, a4, -1
400a37f8:	1d5416        	beqz	a4, 400a39d1 <L3_ExtHPrcPRG..GJ_1482204275+0x359>
400a37fb:	f67c      	movi.n	a6, -1
400a37fd:	00a0a2        	movi	a10, 0
400a3800:	fc1641        	l32r	a4, 400a2858 <_mcu2dram_text_start+0x58>
400a3803:	24a252        	movi	a5, 0x224
400a3806:	16a576        	loopgtz	a5, 400a3820 <L3_ExtHPrcPRG..GJ_1482204275+0x1a8>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:571
        {
            for (i = 0; i < (BLK_PER_PLN + RSV_BLK_PER_PLN); i++)
            {
                if (pPBITItem[i].bBackup == FALSE)
                {
                    continue;
400a3809:	1098      	l32i.n	a9, a0, 4
400a380b:	0d6937        	bbci	a9, 3, 400a381c <L3_ExtHPrcPRG..GJ_1482204275+0x1a4>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:576
                }

                if (pPBITItem[i].bFree == FALSE)
                {
                    continue;
400a380e:	0a6907        	bbci	a9, 0, 400a381c <L3_ExtHPrcPRG..GJ_1482204275+0x1a4>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:579
                }

                if (pPBITItem[i].EraseCnt < MinEraseCnt)
400a3811:	011072        	l16ui	a7, a0, 2
400a3814:	04b767        	bgeu	a7, a6, 400a381c <L3_ExtHPrcPRG..GJ_1482204275+0x1a4>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:581
                {
                    MinEraseCnt = pPBITItem[i].EraseCnt;
400a3817:	076d      	mov.n	a6, a7
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:582
                    Pos = i;
400a3819:	f440a0        	extui	a4, a10, 0, 16
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:567
        U32 MinEraseCnt = INVALID_8F;
        U16 Pos = INVALID_4F;

        if (TRUE != ucTLCBlk)
        {
            for (i = 0; i < (BLK_PER_PLN + RSV_BLK_PER_PLN); i++)
400a381c:	aa1b      	addi.n	a10, a10, 1
400a381e:	008b      	addi.n	a0, a0, 8

400a3820 <L3_ExtHPrcPRG..GJ_1482204275+0x1a8>:
400a3820:	c06420        	sub	a6, a4, a2
400a3823:	1dc616        	beqz	a6, 400a3a03 <L3_ExtHPrcPRG..GJ_1482204275+0x38b>

400a3826 <L3_ExtHPrcPRG..GJ_1482204275+0x1ae>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:615
            return INVALID_4F;
        }
        else
        {
            pPBITItem[Pos].bFree = FALSE;
            pPBITItem[Pos].bAllocated = TRUE;
400a3826:	400c      	movi.n	a0, 4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:614
        {
            return INVALID_4F;
        }
        else
        {
            pPBITItem[Pos].bFree = FALSE;
400a3828:	e57c      	movi.n	a5, -2
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:617
            pPBITItem[Pos].bAllocated = TRUE;
            pPBITItem[Pos].bTLC = ucTLCBlk;
            g_pSubSystemDevParamPage->UsedRsvdBlockCnt++;
400a382a:	fc0481        	l32r	a8, 400a283c <_mcu2dram_text_start+0x3c>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:614
        {
            return INVALID_4F;
        }
        else
        {
            pPBITItem[Pos].bFree = FALSE;
400a382d:	b0a4b0        	addx8	a10, a4, a11
400a3830:	1a98      	l32i.n	a9, a10, 4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:617
            pPBITItem[Pos].bAllocated = TRUE;
            pPBITItem[Pos].bTLC = ucTLCBlk;
            g_pSubSystemDevParamPage->UsedRsvdBlockCnt++;
400a3832:	192882        	l32i	a8, a8, 100
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:614
        {
            return INVALID_4F;
        }
        else
        {
            pPBITItem[Pos].bFree = FALSE;
400a3835:	109950        	and	a9, a9, a5
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:615
            pPBITItem[Pos].bAllocated = TRUE;
400a3838:	209900        	or	a9, a9, a0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:616
            pPBITItem[Pos].bTLC = ucTLCBlk;
400a383b:	60c394        	insbits	a9, a3, 12, 12
400a383e:	1a99      	s32i.n	a9, a10, 4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:618
            g_pSubSystemDevParamPage->UsedRsvdBlockCnt++;
            g_pSubSystemDevParamPage->AvailRsvdSpace--;
400a3840:	7878      	l32i.n	a7, a8, 28
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:617
        else
        {
            pPBITItem[Pos].bFree = FALSE;
            pPBITItem[Pos].bAllocated = TRUE;
            pPBITItem[Pos].bTLC = ucTLCBlk;
            g_pSubSystemDevParamPage->UsedRsvdBlockCnt++;
400a3842:	3898      	l32i.n	a9, a8, 12
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:618
            g_pSubSystemDevParamPage->AvailRsvdSpace--;
400a3844:	770b      	addi.n	a7, a7, -1
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:617
        else
        {
            pPBITItem[Pos].bFree = FALSE;
            pPBITItem[Pos].bAllocated = TRUE;
            pPBITItem[Pos].bTLC = ucTLCBlk;
            g_pSubSystemDevParamPage->UsedRsvdBlockCnt++;
400a3846:	991b      	addi.n	a9, a9, 1
400a3848:	3899      	s32i.n	a9, a8, 12
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:618
            g_pSubSystemDevParamPage->AvailRsvdSpace--;
400a384a:	076872        	s32i	a7, a8, 28
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:713
        {
            if (TRUE != L2_BM_BackUpBlockEmpty(ucSPU, ucLunInSPU))
            {
                bBackUpBlk = TRUE;

                usNewPhyBlk = L2_BM_AllocateBackUpBlock(ucSPU, ucLunInSPU, BLOCK_TYPE_MIN_ERASE_CNT, bTLCBlk);
400a384d:	126142        	s32i	a4, a1, 72
400a3850:	c09420        	sub	a9, a4, a2
400a3853:	175916        	beqz	a9, 400a39cc <L3_ExtHPrcPRG..GJ_1482204275+0x354>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:325

    return FALSE;
}
void MCU12_DRAM_TEXT L2_PBIT_Set_Backup(U8 ucSuperPu, U8 ucLunInSuperPu, U16 PBN, U8 bTrue)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bBackup = bTrue;
400a3856:	100c      	movi.n	a0, 1
400a3858:	b034b0        	addx8	a3, a4, a11
400a385b:	1328      	l32i.n	a2, a3, 4
400a385d:	747c      	movi.n	a4, -9
400a385f:	102240        	and	a2, a2, a4
400a3862:	1329      	s32i.n	a2, a3, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:746
            ptExtHCtrl->bsNewVirBlk = usNewVirBlk;
            ptExtHCtrl->bsNewPhyBlk = usNewPhyBlk;

            ptExtHCtrl->bsStage = EXTH_COPY_DATA;
            ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
            DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d LBA=0x%x ExtH_PRG AllocBlk[%d, %d]\n",
400a3864:	172122        	l32i	a2, a1, 92
400a3867:	1b21b2        	l32i	a11, a1, 108
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:744

            ptExtHCtrl->bsBackUpBlk = bBackUpBlk;
            ptExtHCtrl->bsNewVirBlk = usNewVirBlk;
            ptExtHCtrl->bsNewPhyBlk = usNewPhyBlk;

            ptExtHCtrl->bsStage = EXTH_COPY_DATA;
400a386a:	077c      	movi.n	a7, -16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:742
                }
            }

            ptExtHCtrl->bsBackUpBlk = bBackUpBlk;
            ptExtHCtrl->bsNewVirBlk = usNewVirBlk;
            ptExtHCtrl->bsNewPhyBlk = usNewPhyBlk;
400a386c:	122132        	l32i	a3, a1, 72
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:741
                    g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
                }
            }

            ptExtHCtrl->bsBackUpBlk = bBackUpBlk;
            ptExtHCtrl->bsNewVirBlk = usNewVirBlk;
400a386f:	c158      	l32i.n	a5, a1, 48
400a3871:	9148      	l32i.n	a4, a1, 36
400a3873:	235542        	s16i	a4, a5, 70
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:740
                    g_PuInfo[ucSPU]->m_DataBlockCnt[BLKTYPE_SLC]--;
                    g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
                }
            }

            ptExtHCtrl->bsBackUpBlk = bBackUpBlk;
400a3876:	f568      	l32i.n	a6, a5, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:742
            ptExtHCtrl->bsNewVirBlk = usNewVirBlk;
            ptExtHCtrl->bsNewPhyBlk = usNewPhyBlk;
400a3878:	225532        	s16i	a3, a5, 68
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:740
                    g_PuInfo[ucSPU]->m_DataBlockCnt[BLKTYPE_SLC]--;
                    g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
                }
            }

            ptExtHCtrl->bsBackUpBlk = bBackUpBlk;
400a387b:	408064        	insbits	a6, a0, 8, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:744
            ptExtHCtrl->bsNewVirBlk = usNewVirBlk;
            ptExtHCtrl->bsNewPhyBlk = usNewPhyBlk;

            ptExtHCtrl->bsStage = EXTH_COPY_DATA;
400a387e:	106670        	and	a6, a6, a7
400a3881:	270c      	movi.n	a7, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:746
            ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
            DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d LBA=0x%x ExtH_PRG AllocBlk[%d, %d]\n",
400a3883:	182102        	l32i	a0, a1, 96
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:744

            ptExtHCtrl->bsBackUpBlk = bBackUpBlk;
            ptExtHCtrl->bsNewVirBlk = usNewVirBlk;
            ptExtHCtrl->bsNewPhyBlk = usNewPhyBlk;

            ptExtHCtrl->bsStage = EXTH_COPY_DATA;
400a3886:	206670        	or	a6, a6, a7
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:745
            ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
400a3889:	0faf72        	movi	a7, -241
400a388c:	106670        	and	a6, a6, a7
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:746
            DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d LBA=0x%x ExtH_PRG AllocBlk[%d, %d]\n",
400a388f:	1a2172        	l32i	a7, a1, 104
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:745
            ptExtHCtrl->bsBackUpBlk = bBackUpBlk;
            ptExtHCtrl->bsNewVirBlk = usNewVirBlk;
            ptExtHCtrl->bsNewPhyBlk = usNewPhyBlk;

            ptExtHCtrl->bsStage = EXTH_COPY_DATA;
            ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
400a3892:	f569      	s32i.n	a6, a5, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:746
            DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d LBA=0x%x ExtH_PRG AllocBlk[%d, %d]\n",
400a3894:	21b9      	s32i.n	a11, a1, 8
400a3896:	b158      	l32i.n	a5, a1, 44
400a3898:	192162        	l32i	a6, a1, 100
400a389b:	1109      	s32i.n	a0, a1, 4
400a389d:	0129      	s32i.n	a2, a1, 0
400a389f:	3149      	s32i.n	a4, a1, 12
400a38a1:	4139      	s32i.n	a3, a1, 16
400a38a3:	1c2142        	l32i	a4, a1, 112
400a38a6:	0c3d      	mov.n	a3, a12
400a38a8:	fc0921        	l32r	a2, 400a28cc <_mcu2dram_text_start+0xcc>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:839
            DBG_Printf("ExtH PRG Stage Error.0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a38ab:	1e21c2        	l32i	a12, a1, 120
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:746
            ptExtHCtrl->bsNewVirBlk = usNewVirBlk;
            ptExtHCtrl->bsNewPhyBlk = usNewPhyBlk;

            ptExtHCtrl->bsStage = EXTH_COPY_DATA;
            ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
            DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d LBA=0x%x ExtH_PRG AllocBlk[%d, %d]\n",
400a38ae:	fbe201        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a38b1:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:839
            DBG_Printf("ExtH PRG Stage Error.0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a38b4:	80a022        	movi	a2, 128
400a38b7:	1d2102        	l32i	a0, a1, 116
400a38ba:	112a      	add.n	a1, a1, a2
400a38bc:	f00d      	ret.n

400a38be <L3_ExtHPrcPRG..GJ_1482204275+0x246>:
	...

400a38c0 <L3_ExtHPrcPRG..GJ_1482204275+0x248>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:723
            else
            {
                bBackUpBlk = FALSE;

                usNewVirBlk = L2_BM_AllocateFreeBlock(ucSPU, BLOCK_TYPE_MIN_ERASE_CNT, bTLCBlk);
                ASSERT(INVALID_4F != usNewVirBlk);
400a38c0:	ffff06        	j	400a38c0 <L3_ExtHPrcPRG..GJ_1482204275+0x248>

400a38c3 <L3_ExtHPrcPRG..GJ_1482204275+0x24b>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:821
            }
            break;
        }
        case EXTH_REPORT_STS:
        {
            L3_IFUpdtReqStatus(ptCtrlEntry);
400a38c3:	032d      	mov.n	a2, a3
400a38c5:	fc0901        	l32r	a0, 400a28ec <_mcu2dram_text_start+0xec>
400a38c8:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:822
            L3_FCMDQSetIntrRptr(ucTLun, INVALID_DPTR, TRUE);
400a38cb:	0c2d      	mov.n	a2, a12
400a38cd:	ffa032        	movi	a3, 255
400a38d0:	140c      	movi.n	a4, 1
400a38d2:	fc0701        	l32r	a0, 400a28f0 <_mcu2dram_text_start+0xf0>
400a38d5:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:824

            L3_FCMDQSetIntrEptr(ucTLun, INVALID_DPTR, TRUE);
400a38d8:	0c2d      	mov.n	a2, a12
400a38da:	ffa032        	movi	a3, 255
400a38dd:	140c      	movi.n	a4, 1
400a38df:	fc0501        	l32r	a0, 400a28f4 <_mcu2dram_text_start+0xf4>
400a38e2:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:828

            ptExtHCtrl->bsStage = EXTH_DONE;
            ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
            DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d LBA=0x%x ExtH_PRG Done\n",
400a38e5:	0c3d      	mov.n	a3, a12
400a38e7:	1c2142        	l32i	a4, a1, 112
400a38ea:	b158      	l32i.n	a5, a1, 44
400a38ec:	192162        	l32i	a6, a1, 100
400a38ef:	1a2172        	l32i	a7, a1, 104
400a38f2:	fbf721        	l32r	a2, 400a28d0 <_mcu2dram_text_start+0xd0>
400a38f5:	1721a2        	l32i	a10, a1, 92
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:826
            L3_IFUpdtReqStatus(ptCtrlEntry);
            L3_FCMDQSetIntrRptr(ucTLun, INVALID_DPTR, TRUE);

            L3_FCMDQSetIntrEptr(ucTLun, INVALID_DPTR, TRUE);

            ptExtHCtrl->bsStage = EXTH_DONE;
400a38f8:	c108      	l32i.n	a0, a1, 48
400a38fa:	680c      	movi.n	a8, 6
400a38fc:	f0b8      	l32i.n	a11, a0, 60
400a38fe:	097c      	movi.n	a9, -16
400a3900:	10bb90        	and	a11, a11, a9
400a3903:	20bb80        	or	a11, a11, a8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:828
            ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
            DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d LBA=0x%x ExtH_PRG Done\n",
400a3906:	182192        	l32i	a9, a1, 96
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:827
            L3_FCMDQSetIntrRptr(ucTLun, INVALID_DPTR, TRUE);

            L3_FCMDQSetIntrEptr(ucTLun, INVALID_DPTR, TRUE);

            ptExtHCtrl->bsStage = EXTH_DONE;
            ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
400a3909:	0faf82        	movi	a8, -241
400a390c:	10bb80        	and	a11, a11, a8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:828
            DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d LBA=0x%x ExtH_PRG Done\n",
400a390f:	1b2182        	l32i	a8, a1, 108
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:827
            L3_FCMDQSetIntrRptr(ucTLun, INVALID_DPTR, TRUE);

            L3_FCMDQSetIntrEptr(ucTLun, INVALID_DPTR, TRUE);

            ptExtHCtrl->bsStage = EXTH_DONE;
            ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
400a3912:	f0b9      	s32i.n	a11, a0, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:828
            DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d LBA=0x%x ExtH_PRG Done\n",
400a3914:	01a9      	s32i.n	a10, a1, 0
400a3916:	1199      	s32i.n	a9, a1, 4
400a3918:	2189      	s32i.n	a8, a1, 8
400a391a:	fbc701        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a391d:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:839
            DBG_Printf("ExtH PRG Stage Error.0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a3920:	1e21c2        	l32i	a12, a1, 120
400a3923:	80a022        	movi	a2, 128
400a3926:	1d2102        	l32i	a0, a1, 116
400a3929:	112a      	add.n	a1, a1, a2
400a392b:	f00d      	ret.n

400a392d <L3_ExtHPrcPRG..GJ_1482204275+0x2b5>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:777
            }
            break;
        }
        case EXTH_WRITE_LASTPAGE:
        {
            if (EXTH_SUB_DONE == L3_ExtHWriteLastPage(ptCtrlEntry))
400a392d:	032d      	mov.n	a2, a3
400a392f:	ff6ac5        	call0	400a2fdc <L3_ExtHWriteLastPage..EJ_1482204275>
400a3932:	f7c2a2        	addi	a10, a2, -9
400a3935:	df9a56        	bnez	a10, 400a3732 <L3_ExtHPrcPRG..GJ_1482204275+0xba>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:779
            {
                if (EXTH_SUB_SUCCESS != ptExtHCtrl->bsSubStage)
400a3938:	122122        	l32i	a2, a1, 72
400a393b:	c1b8      	l32i.n	a11, a1, 48
400a393d:	020d      	mov.n	a0, a2
400a393f:	3c0bb2        	l8ui	a11, a11, 60
400a3942:	1122d0        	slli	a2, a2, 3
400a3945:	106122        	s32i	a2, a1, 64
400a3948:	41b4b0        	srli	a11, a11, 4
400a394b:	f9cbb2        	addi	a11, a11, -7
400a394e:	162b16        	beqz	a11, 400a3ab4 <L3_ExtHPrcPRG..GJ_1482204275+0x43c>
400a3951:	0c2d      	mov.n	a2, a12
400a3953:	030c      	movi.n	a3, 0
400a3955:	122142        	l32i	a4, a1, 72
400a3958:	00a485        	call0	400a43a4 <L2_PBIT_Set_Error>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:782
                {
                    L2_PBIT_Set_Error(ucSPU, ucLunInSPU, usNewPhyBlk, TRUE);
                    L2_PBIT_Set_Free(ucSPU, ucLunInSPU, usNewPhyBlk, FALSE);
400a395b:	0c2d      	mov.n	a2, a12
400a395d:	122132        	l32i	a3, a1, 72
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:333
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bError = bTrue;
}
void MCU12_DRAM_TEXT L2_PBIT_Set_Free(U8 ucSuperPu, U8 ucLunInSuperPu, U16 PBN, U8 bTrue)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bFree = bTrue;
400a3960:	8158      	l32i.n	a5, a1, 32
400a3962:	102162        	l32i	a6, a1, 64
400a3965:	7c2552        	l32i	a5, a5, 0x1f0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:782
400a3968:	140c      	movi.n	a4, 1
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:333
400a396a:	556a      	add.n	a5, a5, a6
400a396c:	1508      	l32i.n	a0, a5, 4
400a396e:	e67c      	movi.n	a6, -2
400a3970:	100060        	and	a0, a0, a6
400a3973:	1509      	s32i.n	a0, a5, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:782
400a3975:	0091c5        	call0	400a4294 <L2_BbtAddBbtBadBlk>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:787
                    L2_BbtAddBbtBadBlk(ucTLun, usNewPhyBlk, RT_BAD_BLK, WRITE_ERR);

                    ptExtHCtrl->bsStage = EXTH_ALLOC_NEWBLK;
                    ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
                    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d LBA=0x%x ExtH_PRG WriteLastPage Fail [%d to %d]\n",
400a3978:	0c3d      	mov.n	a3, a12
400a397a:	1c2142        	l32i	a4, a1, 112
400a397d:	192162        	l32i	a6, a1, 100
400a3980:	1a2172        	l32i	a7, a1, 104
400a3983:	fbd421        	l32r	a2, 400a28d4 <_mcu2dram_text_start+0xd4>
400a3986:	172102        	l32i	a0, a1, 92
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:785
                {
                    L2_PBIT_Set_Error(ucSPU, ucLunInSPU, usNewPhyBlk, TRUE);
                    L2_PBIT_Set_Free(ucSPU, ucLunInSPU, usNewPhyBlk, FALSE);
                    L2_BbtAddBbtBadBlk(ucTLun, usNewPhyBlk, RT_BAD_BLK, WRITE_ERR);

                    ptExtHCtrl->bsStage = EXTH_ALLOC_NEWBLK;
400a3989:	c1a8      	l32i.n	a10, a1, 48
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:787
                    ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
                    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d LBA=0x%x ExtH_PRG WriteLastPage Fail [%d to %d]\n",
400a398b:	b188      	l32i.n	a8, a1, 44
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:785
                {
                    L2_PBIT_Set_Error(ucSPU, ucLunInSPU, usNewPhyBlk, TRUE);
                    L2_PBIT_Set_Free(ucSPU, ucLunInSPU, usNewPhyBlk, FALSE);
                    L2_BbtAddBbtBadBlk(ucTLun, usNewPhyBlk, RT_BAD_BLK, WRITE_ERR);

                    ptExtHCtrl->bsStage = EXTH_ALLOC_NEWBLK;
400a398d:	fa98      	l32i.n	a9, a10, 60
400a398f:	0b7c      	movi.n	a11, -16
400a3991:	1099b0        	and	a9, a9, a11
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:787
                    ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
                    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d LBA=0x%x ExtH_PRG WriteLastPage Fail [%d to %d]\n",
400a3994:	085d      	mov.n	a5, a8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:785
                {
                    L2_PBIT_Set_Error(ucSPU, ucLunInSPU, usNewPhyBlk, TRUE);
                    L2_PBIT_Set_Free(ucSPU, ucLunInSPU, usNewPhyBlk, FALSE);
                    L2_BbtAddBbtBadBlk(ucTLun, usNewPhyBlk, RT_BAD_BLK, WRITE_ERR);

                    ptExtHCtrl->bsStage = EXTH_ALLOC_NEWBLK;
400a3996:	1b0c      	movi.n	a11, 1
400a3998:	2099b0        	or	a9, a9, a11
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:786
                    ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
400a399b:	0fafb2        	movi	a11, -241
400a399e:	1099b0        	and	a9, a9, a11
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:787
                    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d LBA=0x%x ExtH_PRG WriteLastPage Fail [%d to %d]\n",
400a39a1:	1821b2        	l32i	a11, a1, 96
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:786
                    L2_PBIT_Set_Error(ucSPU, ucLunInSPU, usNewPhyBlk, TRUE);
                    L2_PBIT_Set_Free(ucSPU, ucLunInSPU, usNewPhyBlk, FALSE);
                    L2_BbtAddBbtBadBlk(ucTLun, usNewPhyBlk, RT_BAD_BLK, WRITE_ERR);

                    ptExtHCtrl->bsStage = EXTH_ALLOC_NEWBLK;
                    ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
400a39a4:	fa99      	s32i.n	a9, a10, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:787
                    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d LBA=0x%x ExtH_PRG WriteLastPage Fail [%d to %d]\n",
400a39a6:	3189      	s32i.n	a8, a1, 12
400a39a8:	0109      	s32i.n	a0, a1, 0
400a39aa:	122192        	l32i	a9, a1, 72
400a39ad:	1b21a2        	l32i	a10, a1, 108
400a39b0:	11b9      	s32i.n	a11, a1, 4
400a39b2:	21a9      	s32i.n	a10, a1, 8
400a39b4:	4199      	s32i.n	a9, a1, 16
400a39b6:	fba001        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a39b9:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:839
            DBG_Printf("ExtH PRG Stage Error.0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a39bc:	1e21c2        	l32i	a12, a1, 120
400a39bf:	80a022        	movi	a2, 128
400a39c2:	1d2102        	l32i	a0, a1, 116
400a39c5:	112a      	add.n	a1, a1, a2
400a39c7:	f00d      	ret.n

400a39c9 <L3_ExtHPrcPRG..GJ_1482204275+0x351>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:726

                usNewVirBlk = L2_BM_AllocateFreeBlock(ucSPU, BLOCK_TYPE_MIN_ERASE_CNT, bTLCBlk);
                ASSERT(INVALID_4F != usNewVirBlk);

                usNewPhyBlk = L2_VBT_GetPhysicalBlockAddr(ucSPU, ucLunInSPU, usNewVirBlk);
                ASSERT(INVALID_4F != usNewPhyBlk);
400a39c9:	ffff06        	j	400a39c9 <L3_ExtHPrcPRG..GJ_1482204275+0x351>

400a39cc <L3_ExtHPrcPRG..GJ_1482204275+0x354>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:714
            if (TRUE != L2_BM_BackUpBlockEmpty(ucSPU, ucLunInSPU))
            {
                bBackUpBlk = TRUE;

                usNewPhyBlk = L2_BM_AllocateBackUpBlock(ucSPU, ucLunInSPU, BLOCK_TYPE_MIN_ERASE_CNT, bTLCBlk);
                ASSERT(INVALID_4F != usNewPhyBlk);
400a39cc:	ffff06        	j	400a39cc <L3_ExtHPrcPRG..GJ_1482204275+0x354>

400a39cf <L3_ExtHPrcPRG..GJ_1482204275+0x357>:
	...

400a39d1 <L3_ExtHPrcPRG..GJ_1482204275+0x359>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:588
                }
            }
        }
        else
        {
            for (i = (BLK_PER_PLN + RSV_BLK_PER_PLN); i > 0; i--)
400a39d1:	24a2a2        	movi	a10, 0x224
400a39d4:	fba141        	l32r	a4, 400a2858 <_mcu2dram_text_start+0x58>
400a39d7:	f67c      	movi.n	a6, -1
400a39d9:	24a252        	movi	a5, 0x224
400a39dc:	11db02        	addmi	a0, a11, 0x1100
400a39df:	20c002        	addi	a0, a0, 32
400a39e2:	17a576        	loopgtz	a5, 400a39fd <L3_ExtHPrcPRG..GJ_1482204275+0x385>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:592
            {
                if (pPBITItem[i].bBackup == FALSE)
                {
                    continue;
400a39e5:	1098      	l32i.n	a9, a0, 4
400a39e7:	0d6937        	bbci	a9, 3, 400a39f8 <L3_ExtHPrcPRG..GJ_1482204275+0x380>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:597
                }

                if (pPBITItem[i].bFree == FALSE)
                {
                    continue;
400a39ea:	0a6907        	bbci	a9, 0, 400a39f8 <L3_ExtHPrcPRG..GJ_1482204275+0x380>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:600
                }

                if (pPBITItem[i].EraseCnt < MinEraseCnt)
400a39ed:	011072        	l16ui	a7, a0, 2
400a39f0:	04b767        	bgeu	a7, a6, 400a39f8 <L3_ExtHPrcPRG..GJ_1482204275+0x380>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:602
                {
                    MinEraseCnt = pPBITItem[i].EraseCnt;
400a39f3:	076d      	mov.n	a6, a7
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:603
                    Pos = i;
400a39f5:	f440a0        	extui	a4, a10, 0, 16
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:588
                }
            }
        }
        else
        {
            for (i = (BLK_PER_PLN + RSV_BLK_PER_PLN); i > 0; i--)
400a39f8:	aa0b      	addi.n	a10, a10, -1
400a39fa:	f8c002        	addi	a0, a0, -8

400a39fd <L3_ExtHPrcPRG..GJ_1482204275+0x385>:
400a39fd:	c05420        	sub	a5, a4, a2
400a3a00:	e22556        	bnez	a5, 400a3826 <L3_ExtHPrcPRG..GJ_1482204275+0x1ae>

400a3a03 <L3_ExtHPrcPRG..GJ_1482204275+0x38b>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:608
                    Pos = i;
                }
            }
        }

        if (Pos == INVALID_4F)
400a3a03:	fb9541        	l32r	a4, 400a2858 <_mcu2dram_text_start+0x58>
400a3a06:	ff90c6        	j	400a384d <L3_ExtHPrcPRG..GJ_1482204275+0x1d5>

400a3a09 <L3_ExtHPrcPRG..GJ_1482204275+0x391>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:752
                ucTLun, usVirBlk, usPhyBlk, usVirPage, usPhyPage, ucCmdType, ucPln, ulLBA, usNewVirBlk, usNewPhyBlk);
            break;
        }
        case EXTH_COPY_DATA:
        {
            if (EXTH_SUB_DONE == L3_ExtHCopyData(ptCtrlEntry))
400a3a09:	202330        	or	a2, a3, a3
400a3a0c:	ff7a85        	call0	400a31b8 <L3_ExtHCopyData..DJ_1482204275>
400a3a0f:	f7c262        	addi	a6, a2, -9
400a3a12:	d1c656        	bnez	a6, 400a3732 <L3_ExtHPrcPRG..GJ_1482204275+0xba>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:754
            {
                if (EXTH_SUB_SUCCESS != ptExtHCtrl->bsSubStage)
400a3a15:	0c2102        	l32i	a0, a1, 48
400a3a18:	f008      	l32i.n	a0, a0, 60
400a3a1a:	347400        	extui	a7, a0, 4, 4
400a3a1d:	f9c772        	addi	a7, a7, -7
400a3a20:	1dc716        	beqz	a7, 400a3c00 <L3_ExtHPrcPRG..GJ_1482204275+0x588>
400a3a23:	0c2d      	mov.n	a2, a12
400a3a25:	030c      	movi.n	a3, 0
400a3a27:	122142        	l32i	a4, a1, 72
400a3a2a:	009785        	call0	400a43a4 <L2_PBIT_Set_Error>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:757
                {
                    L2_PBIT_Set_Error(ucSPU, ucLunInSPU, usNewPhyBlk, TRUE);
                    L2_PBIT_Set_Free(ucSPU, ucLunInSPU, usNewPhyBlk, FALSE);
400a3a2d:	0c2d      	mov.n	a2, a12
400a3a2f:	140c      	movi.n	a4, 1
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:333
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bError = bTrue;
}
void MCU12_DRAM_TEXT L2_PBIT_Set_Free(U8 ucSuperPu, U8 ucLunInSuperPu, U16 PBN, U8 bTrue)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bFree = bTrue;
400a3a31:	8178      	l32i.n	a7, a1, 32
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:757
400a3a33:	122162        	l32i	a6, a1, 72
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:333
400a3a36:	7c2772        	l32i	a7, a7, 0x1f0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:757
400a3a39:	063d      	mov.n	a3, a6
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:333
400a3a3b:	b06670        	addx8	a6, a6, a7
400a3a3e:	1658      	l32i.n	a5, a6, 4
400a3a40:	e77c      	movi.n	a7, -2
400a3a42:	105570        	and	a5, a5, a7
400a3a45:	1659      	s32i.n	a5, a6, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:757
400a3a47:	0084c5        	call0	400a4294 <L2_BbtAddBbtBadBlk>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:762
                    L2_BbtAddBbtBadBlk(ucTLun, usNewPhyBlk, RT_BAD_BLK, WRITE_ERR);

                    ptExtHCtrl->bsStage = EXTH_ALLOC_NEWBLK;
                    ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
                    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x ExtH_PRG CopyData Fail\n",
400a3a4a:	0c3d      	mov.n	a3, a12
400a3a4c:	1c2142        	l32i	a4, a1, 112
400a3a4f:	b158      	l32i.n	a5, a1, 44
400a3a51:	192162        	l32i	a6, a1, 100
400a3a54:	1a2172        	l32i	a7, a1, 104
400a3a57:	fba021        	l32r	a2, 400a28d8 <_mcu2dram_text_start+0xd8>
400a3a5a:	172182        	l32i	a8, a1, 92
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:760
                {
                    L2_PBIT_Set_Error(ucSPU, ucLunInSPU, usNewPhyBlk, TRUE);
                    L2_PBIT_Set_Free(ucSPU, ucLunInSPU, usNewPhyBlk, FALSE);
                    L2_BbtAddBbtBadBlk(ucTLun, usNewPhyBlk, RT_BAD_BLK, WRITE_ERR);

                    ptExtHCtrl->bsStage = EXTH_ALLOC_NEWBLK;
400a3a5d:	c1a8      	l32i.n	a10, a1, 48
400a3a5f:	0b7c      	movi.n	a11, -16
400a3a61:	fa98      	l32i.n	a9, a10, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:762
                    ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
                    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x ExtH_PRG CopyData Fail\n",
400a3a63:	182102        	l32i	a0, a1, 96
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:760
                {
                    L2_PBIT_Set_Error(ucSPU, ucLunInSPU, usNewPhyBlk, TRUE);
                    L2_PBIT_Set_Free(ucSPU, ucLunInSPU, usNewPhyBlk, FALSE);
                    L2_BbtAddBbtBadBlk(ucTLun, usNewPhyBlk, RT_BAD_BLK, WRITE_ERR);

                    ptExtHCtrl->bsStage = EXTH_ALLOC_NEWBLK;
400a3a66:	1099b0        	and	a9, a9, a11
400a3a69:	1b0c      	movi.n	a11, 1
400a3a6b:	2099b0        	or	a9, a9, a11
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:761
                    ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
400a3a6e:	0fafb2        	movi	a11, -241
400a3a71:	1099b0        	and	a9, a9, a11
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:762
                    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x ExtH_PRG CopyData Fail\n",
400a3a74:	1321b2        	l32i	a11, a1, 76
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:761
                    L2_PBIT_Set_Error(ucSPU, ucLunInSPU, usNewPhyBlk, TRUE);
                    L2_PBIT_Set_Free(ucSPU, ucLunInSPU, usNewPhyBlk, FALSE);
                    L2_BbtAddBbtBadBlk(ucTLun, usNewPhyBlk, RT_BAD_BLK, WRITE_ERR);

                    ptExtHCtrl->bsStage = EXTH_ALLOC_NEWBLK;
                    ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
400a3a77:	fa99      	s32i.n	a9, a10, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:762
                    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x ExtH_PRG CopyData Fail\n",
400a3a79:	1109      	s32i.n	a0, a1, 4
400a3a7b:	0189      	s32i.n	a8, a1, 0
400a3a7d:	152192        	l32i	a9, a1, 84
400a3a80:	1421a2        	l32i	a10, a1, 80
400a3a83:	21b9      	s32i.n	a11, a1, 8
400a3a85:	31a9      	s32i.n	a10, a1, 12
400a3a87:	4199      	s32i.n	a9, a1, 16
400a3a89:	1b2182        	l32i	a8, a1, 108
400a3a8c:	5189      	s32i.n	a8, a1, 20
400a3a8e:	fb6a01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a3a91:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:839
            DBG_Printf("ExtH PRG Stage Error.0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a3a94:	1e21c2        	l32i	a12, a1, 120
400a3a97:	80a022        	movi	a2, 128
400a3a9a:	1d2102        	l32i	a0, a1, 116
400a3a9d:	112a      	add.n	a1, a1, a2
400a3a9f:	f00d      	ret.n

400a3aa1 <L3_ExtHPrcPRG..GJ_1482204275+0x429>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:731
                ASSERT(INVALID_4F != usNewPhyBlk);

                if (TRUE == bTLCBlk)
                {
                    g_PuInfo[ucSPU]->m_DataBlockCnt[BLKTYPE_TLC]--;
                    g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
400a3aa1:	5028      	l32i.n	a2, a0, 20
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:730
                usNewPhyBlk = L2_VBT_GetPhysicalBlockAddr(ucSPU, ucLunInSPU, usNewVirBlk);
                ASSERT(INVALID_4F != usNewPhyBlk);

                if (TRUE == bTLCBlk)
                {
                    g_PuInfo[ucSPU]->m_DataBlockCnt[BLKTYPE_TLC]--;
400a3aa3:	071032        	l16ui	a3, a0, 14
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:731
                    g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
400a3aa6:	fed222        	addmi	a2, a2, 0xfffffe00
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:730
                usNewPhyBlk = L2_VBT_GetPhysicalBlockAddr(ucSPU, ucLunInSPU, usNewVirBlk);
                ASSERT(INVALID_4F != usNewPhyBlk);

                if (TRUE == bTLCBlk)
                {
                    g_PuInfo[ucSPU]->m_DataBlockCnt[BLKTYPE_TLC]--;
400a3aa9:	330b      	addi.n	a3, a3, -1
400a3aab:	075032        	s16i	a3, a0, 14
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:731
                    g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
400a3aae:	5029      	s32i.n	a2, a0, 20
400a3ab0:	ff4d06        	j	400a37e8 <L3_ExtHPrcPRG..GJ_1482204275+0x170>

400a3ab3 <L3_ExtHPrcPRG..GJ_1482204275+0x43b>:
	...

400a3ab4 <L3_ExtHPrcPRG..GJ_1482204275+0x43c>:
400a3ab4:	d109      	s32i.n	a0, a1, 52
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:794
                }
                else
                {
                    L2_PBIT_SetVirturlBlockAddr(ucSPU, ucLunInSPU, usNewPhyBlk, usVirBlk);
                    L2_VBT_SetPhysicalBlockAddr(ucSPU, ucLunInSPU, usVirBlk, usNewPhyBlk);
                    if (FALSE == bBackUpBlk)
400a3ab6:	112132        	l32i	a3, a1, 68
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:427
    return PhysicalBlockAddr;
}

void MCU12_DRAM_TEXT L2_VBT_SetPhysicalBlockAddr(U8 ucSuperPu, U8 ucLunInSuperPu, U16 VBN, U16 PBN)
{
    pVBT[ucSuperPu]->m_VBT[VBN].PhysicalBlockAddr[ucLunInSuperPu] = PBN;
400a3ab9:	162152        	l32i	a5, a1, 88
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:369

    return VirtualBlockAddr;
}
void MCU12_DRAM_TEXT L2_PBIT_SetVirturlBlockAddr(U8 ucSuperPu, U8 ucLunInSuperPu, U16 PBN, U16 VBN)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].VirtualBlockAddr = VBN;
400a3abc:	1c2162        	l32i	a6, a1, 112
400a3abf:	81a8      	l32i.n	a10, a1, 32
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:794
400a3ac1:	b148      	l32i.n	a4, a1, 44
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:369
400a3ac3:	7c2ab2        	l32i	a11, a10, 0x1f0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:794
400a3ac6:	049d      	mov.n	a9, a4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:427
    return PhysicalBlockAddr;
}

void MCU12_DRAM_TEXT L2_VBT_SetPhysicalBlockAddr(U8 ucSuperPu, U8 ucLunInSuperPu, U16 VBN, U16 PBN)
{
    pVBT[ucSuperPu]->m_VBT[VBN].PhysicalBlockAddr[ucLunInSuperPu] = PBN;
400a3ac8:	9c2aa2        	l32i	a10, a10, 0x270
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:794
400a3acb:	1144d0        	slli	a4, a4, 3
400a3ace:	f149      	s32i.n	a4, a1, 60
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:369

    return VirtualBlockAddr;
}
void MCU12_DRAM_TEXT L2_PBIT_SetVirturlBlockAddr(U8 ucSuperPu, U8 ucLunInSuperPu, U16 PBN, U16 VBN)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].VirtualBlockAddr = VBN;
400a3ad0:	b070b0        	addx8	a7, a0, a11
400a3ad3:	005762        	s16i	a6, a7, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:427
    return PhysicalBlockAddr;
}

void MCU12_DRAM_TEXT L2_VBT_SetPhysicalBlockAddr(U8 ucSuperPu, U8 ucLunInSuperPu, U16 VBN, U16 PBN)
{
    pVBT[ucSuperPu]->m_VBT[VBN].PhysicalBlockAddr[ucLunInSuperPu] = PBN;
400a3ad6:	55aa      	add.n	a5, a5, a10
400a3ad8:	005502        	s16i	a0, a5, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:794
400a3adb:	10a316        	beqz	a3, 400a3be9 <L3_ExtHPrcPRG..GJ_1482204275+0x571>
400a3ade:	e199      	s32i.n	a9, a1, 56
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:800
                    {
                        L2_PBIT_SetVirturlBlockAddr(ucSPU, ucLunInSPU, usPhyBlk, usNewVirBlk);
                        L2_VBT_SetPhysicalBlockAddr(ucSPU, ucLunInSPU, usNewVirBlk, usPhyBlk);
                    }

                    L2_PBIT_Set_TLC(ucSPU, ucLunInSPU, usNewPhyBlk, bTLCBlk);
400a3ae0:	0c2d      	mov.n	a2, a12
400a3ae2:	030c      	movi.n	a3, 0
400a3ae4:	122142        	l32i	a4, a1, 72
400a3ae7:	a158      	l32i.n	a5, a1, 40
400a3ae9:	fb8301        	l32r	a0, 400a28f8 <_mcu2dram_text_start+0xf8>
400a3aec:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:397
    pVBT[PUSer]->m_VBT[VBN].bsRetryFail = RetryFail;
}

void MCU12_DRAM_TEXT L2_Exchange_PBIT_Info(U8 ucSuperPu, U8 ucLunInSuperPu, U16 usSrcPhyBlock, U16 usTarPhyBlock)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usTarPhyBlock].BlockType = pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usSrcPhyBlock].BlockType;
400a3aef:	1021a2        	l32i	a10, a1, 64
400a3af2:	f148      	l32i.n	a4, a1, 60
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:398
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usTarPhyBlock].PageType = pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usSrcPhyBlock].PageType;
400a3af4:	e108      	l32i.n	a0, a1, 56
400a3af6:	d178      	l32i.n	a7, a1, 52
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:397
    pVBT[PUSer]->m_VBT[VBN].bsRetryFail = RetryFail;
}

void MCU12_DRAM_TEXT L2_Exchange_PBIT_Info(U8 ucSuperPu, U8 ucLunInSuperPu, U16 usSrcPhyBlock, U16 usTarPhyBlock)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usTarPhyBlock].BlockType = pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usSrcPhyBlock].BlockType;
400a3af8:	8188      	l32i.n	a8, a1, 32
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:398
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usTarPhyBlock].PageType = pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usSrcPhyBlock].PageType;
400a3afa:	a07770        	addx4	a7, a7, a7
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:397
    pVBT[PUSer]->m_VBT[VBN].bsRetryFail = RetryFail;
}

void MCU12_DRAM_TEXT L2_Exchange_PBIT_Info(U8 ucSuperPu, U8 ucLunInSuperPu, U16 usSrcPhyBlock, U16 usTarPhyBlock)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usTarPhyBlock].BlockType = pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usSrcPhyBlock].BlockType;
400a3afd:	7c2882        	l32i	a8, a8, 0x1f0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:398
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usTarPhyBlock].PageType = pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usSrcPhyBlock].PageType;
400a3b00:	a00000        	addx4	a0, a0, a0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:397
    pVBT[PUSer]->m_VBT[VBN].bsRetryFail = RetryFail;
}

void MCU12_DRAM_TEXT L2_Exchange_PBIT_Info(U8 ucSuperPu, U8 ucLunInSuperPu, U16 usSrcPhyBlock, U16 usTarPhyBlock)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usTarPhyBlock].BlockType = pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usSrcPhyBlock].BlockType;
400a3b03:	448a      	add.n	a4, a4, a8
400a3b05:	a8aa      	add.n	a10, a8, a10
400a3b07:	1a98      	l32i.n	a9, a10, 4
400a3b09:	14b8      	l32i.n	a11, a4, 4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:398
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usTarPhyBlock].PageType = pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usSrcPhyBlock].PageType;
400a3b0b:	a00080        	addx4	a0, a0, a8
400a3b0e:	a07780        	addx4	a7, a7, a8
400a3b11:	0ed772        	addmi	a7, a7, 0xe00
400a3b14:	0ed002        	addmi	a0, a0, 0xe00
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:397
    pVBT[PUSer]->m_VBT[VBN].bsRetryFail = RetryFail;
}

void MCU12_DRAM_TEXT L2_Exchange_PBIT_Info(U8 ucSuperPu, U8 ucLunInSuperPu, U16 usSrcPhyBlock, U16 usTarPhyBlock)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usTarPhyBlock].BlockType = pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usSrcPhyBlock].BlockType;
400a3b17:	41b5b0        	srli	a11, a11, 5
400a3b1a:	405b94        	insbits	a9, a11, 5, 8
400a3b1d:	1a99      	s32i.n	a9, a10, 4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:398
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usTarPhyBlock].PageType = pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usSrcPhyBlock].PageType;
400a3b1f:	c820a2        	l32i	a10, a0, 0x320
400a3b22:	c82782        	l32i	a8, a7, 0x320
400a3b25:	030a84        	insbits	a8, a10, 0, 3
400a3b28:	c86782        	s32i	a8, a7, 0x320
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:399
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usTarPhyBlock].OPType = pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usSrcPhyBlock].OPType;
400a3b2b:	c82092        	l32i	a9, a0, 0x320
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:407
    return;
}
void MCU12_DRAM_TEXT L2_Reset_PBIT_Info(U8 ucSuperPu, U8 ucLunInSuperPu, U16 usPhyBlock)
{
    //pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usPhyBlock].BlockType = BLOCK_TYPE_EMPTY;
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usPhyBlock].BlockType = BLOCK_TYPE_GB;
400a3b2e:	1fae52        	movi	a5, 0xfffffe1f
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:399

void MCU12_DRAM_TEXT L2_Exchange_PBIT_Info(U8 ucSuperPu, U8 ucLunInSuperPu, U16 usSrcPhyBlock, U16 usTarPhyBlock)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usTarPhyBlock].BlockType = pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usSrcPhyBlock].BlockType;
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usTarPhyBlock].PageType = pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usSrcPhyBlock].PageType;
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usTarPhyBlock].OPType = pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usSrcPhyBlock].OPType;
400a3b31:	419490        	srli	a9, a9, 4
400a3b34:	234984        	insbits	a8, a9, 4, 7
400a3b37:	c86782        	s32i	a8, a7, 0x320
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:400
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usTarPhyBlock].TimeStamp = pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usSrcPhyBlock].TimeStamp;
400a3b3a:	c92062        	l32i	a6, a0, 0x324
400a3b3d:	c96762        	s32i	a6, a7, 0x324
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:407
    return;
}
void MCU12_DRAM_TEXT L2_Reset_PBIT_Info(U8 ucSuperPu, U8 ucLunInSuperPu, U16 usPhyBlock)
{
    //pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usPhyBlock].BlockType = BLOCK_TYPE_EMPTY;
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usPhyBlock].BlockType = BLOCK_TYPE_GB;
400a3b40:	1438      	l32i.n	a3, a4, 4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:408
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usPhyBlock].PageType = PAGE_TYPE_RSVD;
400a3b42:	027c      	movi.n	a2, -16
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:407
    return;
}
void MCU12_DRAM_TEXT L2_Reset_PBIT_Info(U8 ucSuperPu, U8 ucLunInSuperPu, U16 usPhyBlock)
{
    //pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usPhyBlock].BlockType = BLOCK_TYPE_EMPTY;
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usPhyBlock].BlockType = BLOCK_TYPE_GB;
400a3b44:	103350        	and	a3, a3, a5
400a3b47:	1439      	s32i.n	a3, a4, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:803

                    L2_Exchange_PBIT_Info(ucSPU, ucLunInSPU, usPhyBlk, usNewPhyBlk);
                    L2_Reset_PBIT_Info(ucSPU, ucLunInSPU, usPhyBlk);
400a3b49:	b148      	l32i.n	a4, a1, 44
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:408
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usPhyBlock].PageType = PAGE_TYPE_RSVD;
400a3b4b:	c820b2        	l32i	a11, a0, 0x320
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:802
                        L2_VBT_SetPhysicalBlockAddr(ucSPU, ucLunInSPU, usNewVirBlk, usPhyBlk);
                    }

                    L2_PBIT_Set_TLC(ucSPU, ucLunInSPU, usNewPhyBlk, bTLCBlk);

                    L2_Exchange_PBIT_Info(ucSPU, ucLunInSPU, usPhyBlk, usNewPhyBlk);
400a3b4e:	030c      	movi.n	a3, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:410
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usPhyBlock].OPType = 0;
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usPhyBlock].TimeStamp = 0;
400a3b50:	c96032        	s32i	a3, a0, 0x324
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:408
}
void MCU12_DRAM_TEXT L2_Reset_PBIT_Info(U8 ucSuperPu, U8 ucLunInSuperPu, U16 usPhyBlock)
{
    //pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usPhyBlock].BlockType = BLOCK_TYPE_EMPTY;
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usPhyBlock].BlockType = BLOCK_TYPE_GB;
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usPhyBlock].PageType = PAGE_TYPE_RSVD;
400a3b53:	10bb20        	and	a11, a11, a2
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:411
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usPhyBlock].OPType = 0;
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usPhyBlock].TimeStamp = 0;
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usPhyBlock].LastPageTimeStamp = 0;
400a3b56:	ca6032        	s32i	a3, a0, 0x328
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:408
}
void MCU12_DRAM_TEXT L2_Reset_PBIT_Info(U8 ucSuperPu, U8 ucLunInSuperPu, U16 usPhyBlock)
{
    //pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usPhyBlock].BlockType = BLOCK_TYPE_EMPTY;
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usPhyBlock].BlockType = BLOCK_TYPE_GB;
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usPhyBlock].PageType = PAGE_TYPE_RSVD;
400a3b59:	d20c      	movi.n	a2, 13
400a3b5b:	20bb20        	or	a11, a11, a2
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:409
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usPhyBlock].OPType = 0;
400a3b5e:	0faf22        	movi	a2, -241
400a3b61:	10bb20        	and	a11, a11, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:803
                    L2_Reset_PBIT_Info(ucSPU, ucLunInSPU, usPhyBlk);
400a3b64:	0c2d      	mov.n	a2, a12
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:409
400a3b66:	c860b2        	s32i	a11, a0, 0x320
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:803
400a3b69:	008385        	call0	400a43a4 <L2_PBIT_Set_Error>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:806

                    L2_PBIT_Set_Error(ucSPU, ucLunInSPU, usPhyBlk, TRUE);
                    L2_PBIT_Set_Free(ucSPU, ucLunInSPU, usPhyBlk, FALSE);
400a3b6c:	0c2d      	mov.n	a2, a12
400a3b6e:	b138      	l32i.n	a3, a1, 44
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:333
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bError = bTrue;
}
void MCU12_DRAM_TEXT L2_PBIT_Set_Free(U8 ucSuperPu, U8 ucLunInSuperPu, U16 PBN, U8 bTrue)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bFree = bTrue;
400a3b70:	81b8      	l32i.n	a11, a1, 32
400a3b72:	f1a8      	l32i.n	a10, a1, 60
400a3b74:	7c2bb2        	l32i	a11, a11, 0x1f0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:806
400a3b77:	140c      	movi.n	a4, 1
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:333
400a3b79:	aaba      	add.n	a10, a10, a11
400a3b7b:	1a98      	l32i.n	a9, a10, 4
400a3b7d:	eb7c      	movi.n	a11, -2
400a3b7f:	1099b0        	and	a9, a9, a11
400a3b82:	1a99      	s32i.n	a9, a10, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:806
400a3b84:	0070c5        	call0	400a4294 <L2_BbtAddBbtBadBlk>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:813

                    L2_BbtSetLunSaveBBTBitMap(ucTLun, TRUE);

                    ptExtHCtrl->bsStage = EXTH_REPORT_STS;
                    ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
                    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d LBA=0x%x ExtH_PRG WriteLastPage Success[%d to %d]\n",
400a3b87:	0c3d      	mov.n	a3, a12
400a3b89:	172142        	l32i	a4, a1, 92
400a3b8c:	182122        	l32i	a2, a1, 96
400a3b8f:	1b2102        	l32i	a0, a1, 108
400a3b92:	1221b2        	l32i	a11, a1, 72
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:811
                    L2_PBIT_Set_Free(ucSPU, ucLunInSPU, usPhyBlk, FALSE);
                    L2_BbtAddBbtBadBlk(ucTLun, usPhyBlk, RT_BAD_BLK, WRITE_ERR);

                    L2_BbtSetLunSaveBBTBitMap(ucTLun, TRUE);

                    ptExtHCtrl->bsStage = EXTH_REPORT_STS;
400a3b95:	077c      	movi.n	a7, -16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:806

                    L2_Exchange_PBIT_Info(ucSPU, ucLunInSPU, usPhyBlk, usNewPhyBlk);
                    L2_Reset_PBIT_Info(ucSPU, ucLunInSPU, usPhyBlk);

                    L2_PBIT_Set_Error(ucSPU, ucLunInSPU, usPhyBlk, TRUE);
                    L2_PBIT_Set_Free(ucSPU, ucLunInSPU, usPhyBlk, FALSE);
400a3b97:	fb5191        	l32r	a9, 400a28dc <_mcu2dram_text_start+0xdc>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:811
                    L2_BbtAddBbtBadBlk(ucTLun, usPhyBlk, RT_BAD_BLK, WRITE_ERR);

                    L2_BbtSetLunSaveBBTBitMap(ucTLun, TRUE);

                    ptExtHCtrl->bsStage = EXTH_REPORT_STS;
400a3b9a:	c168      	l32i.n	a6, a1, 48
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:4420
    U8 ucSuperPu = L2_GET_SPU(ucTLun);
    U8 ucLunInSuperPu = L2_GET_LUN_IN_SPU(ucTLun);

    if (TRUE == BitValue)
    {
        l_aLunNeedSaveBBT[ucLunInSuperPu] |= (1 << ucSuperPu);
400a3b9c:	401c00        	ssl	a12
400a3b9f:	1a0c      	movi.n	a10, 1
400a3ba1:	a1aa00        	sll	a10, a10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:811
400a3ba4:	f658      	l32i.n	a5, a6, 60
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:4420
400a3ba6:	3988      	l32i.n	a8, a9, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:811
400a3ba8:	105570        	and	a5, a5, a7
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:4420
400a3bab:	2088a0        	or	a8, a8, a10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:811
400a3bae:	570c      	movi.n	a7, 5
400a3bb0:	205570        	or	a5, a5, a7
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:4420
400a3bb3:	3989      	s32i.n	a8, a9, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:812
                    ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
400a3bb5:	0faf72        	movi	a7, -241
400a3bb8:	105570        	and	a5, a5, a7
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:813
                    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d LBA=0x%x ExtH_PRG WriteLastPage Success[%d to %d]\n",
400a3bbb:	1a2172        	l32i	a7, a1, 104
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:812
                    L2_BbtAddBbtBadBlk(ucTLun, usPhyBlk, RT_BAD_BLK, WRITE_ERR);

                    L2_BbtSetLunSaveBBTBitMap(ucTLun, TRUE);

                    ptExtHCtrl->bsStage = EXTH_REPORT_STS;
                    ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
400a3bbe:	f659      	s32i.n	a5, a6, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:813
                    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d LBA=0x%x ExtH_PRG WriteLastPage Success[%d to %d]\n",
400a3bc0:	41b9      	s32i.n	a11, a1, 16
400a3bc2:	192162        	l32i	a6, a1, 100
400a3bc5:	2109      	s32i.n	a0, a1, 8
400a3bc7:	1129      	s32i.n	a2, a1, 4
400a3bc9:	0149      	s32i.n	a4, a1, 0
400a3bcb:	b158      	l32i.n	a5, a1, 44
400a3bcd:	036152        	s32i	a5, a1, 12
400a3bd0:	1c2142        	l32i	a4, a1, 112
400a3bd3:	fb4321        	l32r	a2, 400a28e0 <_mcu2dram_text_start+0xe0>
400a3bd6:	fb1801        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a3bd9:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:839
            DBG_Printf("ExtH PRG Stage Error.0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a3bdc:	1e21c2        	l32i	a12, a1, 120
400a3bdf:	80a022        	movi	a2, 128
400a3be2:	1d2102        	l32i	a0, a1, 116
400a3be5:	112a      	add.n	a1, a1, a2
400a3be7:	f00d      	ret.n

400a3be9 <L3_ExtHPrcPRG..GJ_1482204275+0x571>:
400a3be9:	e199      	s32i.n	a9, a1, 56
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:369

    return VirtualBlockAddr;
}
void MCU12_DRAM_TEXT L2_PBIT_SetVirturlBlockAddr(U8 ucSuperPu, U8 ucLunInSuperPu, U16 PBN, U16 VBN)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].VirtualBlockAddr = VBN;
400a3beb:	b029b0        	addx8	a2, a9, a11
400a3bee:	9108      	l32i.n	a0, a1, 36
400a3bf0:	005202        	s16i	a0, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:427
    return PhysicalBlockAddr;
}

void MCU12_DRAM_TEXT L2_VBT_SetPhysicalBlockAddr(U8 ucSuperPu, U8 ucLunInSuperPu, U16 VBN, U16 PBN)
{
    pVBT[ucSuperPu]->m_VBT[VBN].PhysicalBlockAddr[ucLunInSuperPu] = PBN;
400a3bf3:	1100c0        	slli	a0, a0, 4
400a3bf6:	0a0a      	add.n	a0, a10, a0
400a3bf8:	005092        	s16i	a9, a0, 0
400a3bfb:	ffb7c6        	j	400a3ade <L3_ExtHPrcPRG..GJ_1482204275+0x466>

400a3bfe <L3_ExtHPrcPRG..GJ_1482204275+0x586>:
	...

400a3c00 <L3_ExtHPrcPRG..GJ_1482204275+0x588>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:769
                }
                else
                {
                    ptExtHCtrl->bsStage = EXTH_WRITE_LASTPAGE;
                    ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
                    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d LBA=0x%x ExtH_PRG CopyData Success[%d to %d]\n",
400a3c00:	fb3921        	l32r	a2, 400a28e4 <_mcu2dram_text_start+0xe4>
400a3c03:	1b2142        	l32i	a4, a1, 108
400a3c06:	122132        	l32i	a3, a1, 72
400a3c09:	172162        	l32i	a6, a1, 92
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:767
                    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x ExtH_PRG CopyData Fail\n",
                        ucTLun, usVirBlk, usPhyBlk, usVirPage, usPhyPage, ucCmdType, ucPln, ucSecStart, ucSecLen, ucLpnBitmap, ulLBA);
                }
                else
                {
                    ptExtHCtrl->bsStage = EXTH_WRITE_LASTPAGE;
400a3c0c:	077c      	movi.n	a7, -16
400a3c0e:	380c      	movi.n	a8, 3
400a3c10:	107070        	and	a7, a0, a7
400a3c13:	207780        	or	a7, a7, a8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:768
                    ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
400a3c16:	0faf82        	movi	a8, -241
400a3c19:	107780        	and	a7, a7, a8
400a3c1c:	c188      	l32i.n	a8, a1, 48
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:769
                    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d LBA=0x%x ExtH_PRG CopyData Success[%d to %d]\n",
400a3c1e:	182152        	l32i	a5, a1, 96
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:768
                        ucTLun, usVirBlk, usPhyBlk, usVirPage, usPhyPage, ucCmdType, ucPln, ucSecStart, ucSecLen, ucLpnBitmap, ulLBA);
                }
                else
                {
                    ptExtHCtrl->bsStage = EXTH_WRITE_LASTPAGE;
                    ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
400a3c21:	f879      	s32i.n	a7, a8, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:769
                    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d LBA=0x%x ExtH_PRG CopyData Success[%d to %d]\n",
400a3c23:	1a2172        	l32i	a7, a1, 104
400a3c26:	1159      	s32i.n	a5, a1, 4
400a3c28:	0169      	s32i.n	a6, a1, 0
400a3c2a:	4139      	s32i.n	a3, a1, 16
400a3c2c:	2149      	s32i.n	a4, a1, 8
400a3c2e:	0c3d      	mov.n	a3, a12
400a3c30:	1c2142        	l32i	a4, a1, 112
400a3c33:	192162        	l32i	a6, a1, 100
400a3c36:	b158      	l32i.n	a5, a1, 44
400a3c38:	3159      	s32i.n	a5, a1, 12
400a3c3a:	faff01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a3c3d:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:839
            DBG_Printf("ExtH PRG Stage Error.0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a3c40:	1e21c2        	l32i	a12, a1, 120
400a3c43:	80a022        	movi	a2, 128
400a3c46:	1d2102        	l32i	a0, a1, 116
400a3c49:	112a      	add.n	a1, a1, a2
400a3c4b:	f00d      	ret.n

400a3c4d <L3_ExtHPrcPRG..GJ_1482204275+0x5d5>:
L3_ExtHPrcPRG..GJ_1482204275():
400a3c4d:	000000                                        ...

400a3c50 <L3_ExtHPrcUECC..FJ_1482204275>:
L3_ExtHPrcUECC():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:502
Usage      : 
History    : 
    1. 2016.8.11 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ExtHPrcUECC(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a3c50:	fafb51        	l32r	a5, 400a283c <_mcu2dram_text_start+0x3c>
400a3c53:	80c112        	addi	a1, a1, -128
400a3c56:	023d      	mov.n	a3, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:503
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
400a3c58:	0298      	l32i.n	a9, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:502
Usage      : 
History    : 
    1. 2016.8.11 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ExtHPrcUECC(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a3c5a:	1d6102        	s32i	a0, a1, 116
400a3c5d:	1e61c2        	s32i	a12, a1, 120
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:504
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
400a3c60:	9378      	l32i.n	a7, a3, 36
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:522
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    usPhyPage = ptCtrlEntry->bsPhyPage;
400a3c62:	0212c2        	l16ui	a12, a2, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:513
    U16 usVirBlk, usPhyBlk, usVirPage, usPhyPage, usNewPhyBlk, usNewVirBlk;
    U32 ulLBA;
    BOOL bBackUpBlk, bTLCBlk;

    ucTLun = ptReqEntry->bsTLun;
    ucCmdType = ptCtrlEntry->bsCmdType;
400a3c65:	060202        	l8ui	a0, a2, 6
400a3c68:	146102        	s32i	a0, a1, 80
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:522
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    usPhyPage = ptCtrlEntry->bsPhyPage;
400a3c6b:	1a61c2        	s32i	a12, a1, 104
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:515
    BOOL bBackUpBlk, bTLCBlk;

    ucTLun = ptReqEntry->bsTLun;
    ucCmdType = ptCtrlEntry->bsCmdType;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
    ucSecStart = ptReqEntry->tFlashDesc.bsSecStart;
400a3c6e:	1009b2        	l8ui	a11, a9, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:523
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    usPhyPage = ptCtrlEntry->bsPhyPage;
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;
400a3c71:	b9a8      	l32i.n	a10, a9, 44
400a3c73:	1b61a2        	s32i	a10, a1, 108
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:515
    BOOL bBackUpBlk, bTLCBlk;

    ucTLun = ptReqEntry->bsTLun;
    ucCmdType = ptCtrlEntry->bsCmdType;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
    ucSecStart = ptReqEntry->tFlashDesc.bsSecStart;
400a3c76:	1661b2        	s32i	a11, a1, 88
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:512
    U8 ucTLun, ucSPU, ucLunInSPU, ucCmdType, ucPln, ucErrCode, ucSecStart, ucSecLen, ucLpnBitmap;
    U16 usVirBlk, usPhyBlk, usVirPage, usPhyPage, usNewPhyBlk, usNewVirBlk;
    U32 ulLBA;
    BOOL bBackUpBlk, bTLCBlk;

    ucTLun = ptReqEntry->bsTLun;
400a3c79:	0009c2        	l8ui	a12, a9, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:514
    ucCmdType = ptCtrlEntry->bsCmdType;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
400a3c7c:	49b8      	l32i.n	a11, a9, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:519
    ucSecStart = ptReqEntry->tFlashDesc.bsSecStart;
    ucSecLen = ptReqEntry->tFlashDesc.bsSecLen;
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
400a3c7e:	3998      	l32i.n	a9, a9, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:514
    U32 ulLBA;
    BOOL bBackUpBlk, bTLCBlk;

    ucTLun = ptReqEntry->bsTLun;
    ucCmdType = ptCtrlEntry->bsCmdType;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
400a3c80:	1542b0        	extui	a4, a11, 18, 2
400a3c83:	7508b0        	extui	a0, a11, 24, 8
400a3c86:	7428b0        	extui	a2, a11, 8, 8
400a3c89:	176122        	s32i	a2, a1, 92
400a3c8c:	186102        	s32i	a0, a1, 96
400a3c8f:	156142        	s32i	a4, a1, 84
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:525
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    usPhyPage = ptCtrlEntry->bsPhyPage;
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;

    bBackUpBlk  = ptExtHCtrl->bsBackUpBlk;
400a3c92:	f708      	l32i.n	a0, a7, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:533

    ucSPU = L2_GET_SPU(ucTLun);
    ucLunInSPU = L2_GET_LUN_IN_SPU(ucTLun);
    bTLCBlk = (FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
    // Double check the Request Block type and the VBT info.
    ASSERT(bTLCBlk == L2_VBT_Get_TLC(ucSPU, usVirBlk));
400a3c94:	114ce0        	slli	a4, a12, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:521
    ucSecLen = ptReqEntry->tFlashDesc.bsSecLen;
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
400a3c97:	a5a490        	extui	a10, a9, 20, 11
400a3c9a:	1961a2        	s32i	a10, a1, 100
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:531
    usNewVirBlk = ptExtHCtrl->bsNewVirBlk;
    usNewPhyBlk = ptExtHCtrl->bsNewPhyBlk;

    ucSPU = L2_GET_SPU(ucTLun);
    ucLunInSPU = L2_GET_LUN_IN_SPU(ucTLun);
    bTLCBlk = (FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
400a3c9d:	15b0b0        	extui	a11, a11, 16, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:533
    // Double check the Request Block type and the VBT info.
    ASSERT(bTLCBlk == L2_VBT_Get_TLC(ucSPU, usVirBlk));
400a3ca0:	445a      	add.n	a4, a4, a5
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:525
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    usPhyPage = ptCtrlEntry->bsPhyPage;
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;

    bBackUpBlk  = ptExtHCtrl->bsBackUpBlk;
400a3ca2:	046800        	extui	a6, a0, 8, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:533

    ucSPU = L2_GET_SPU(ucTLun);
    ucLunInSPU = L2_GET_LUN_IN_SPU(ucTLun);
    bTLCBlk = (FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
    // Double check the Request Block type and the VBT info.
    ASSERT(bTLCBlk == L2_VBT_Get_TLC(ucSPU, usVirBlk));
400a3ca5:	9c2482        	l32i	a8, a4, 0x270
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:531
    usNewVirBlk = ptExtHCtrl->bsNewVirBlk;
    usNewPhyBlk = ptExtHCtrl->bsNewPhyBlk;

    ucSPU = L2_GET_SPU(ucTLun);
    ucLunInSPU = L2_GET_LUN_IN_SPU(ucTLun);
    bTLCBlk = (FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
400a3ca8:	fecbb2        	addi	a11, a11, -2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:502
Usage      : 
History    : 
    1. 2016.8.11 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ExtHPrcUECC(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a3cab:	1a0c      	movi.n	a10, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:520
    ucSecStart = ptReqEntry->tFlashDesc.bsSecStart;
    ucSecLen = ptReqEntry->tFlashDesc.bsSecLen;
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
400a3cad:	942a90        	extui	a2, a9, 10, 10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:531
    usNewVirBlk = ptExtHCtrl->bsNewVirBlk;
    usNewPhyBlk = ptExtHCtrl->bsNewPhyBlk;

    ucSPU = L2_GET_SPU(ucTLun);
    ucLunInSPU = L2_GET_LUN_IN_SPU(ucTLun);
    bTLCBlk = (FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
400a3cb0:	050c      	movi.n	a5, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:519
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
    ucSecStart = ptReqEntry->tFlashDesc.bsSecStart;
    ucSecLen = ptReqEntry->tFlashDesc.bsSecLen;
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
400a3cb2:	949090        	extui	a9, a9, 0, 10
400a3cb5:	1c6192        	s32i	a9, a1, 112
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:531
    usNewVirBlk = ptExtHCtrl->bsNewVirBlk;
    usNewPhyBlk = ptExtHCtrl->bsNewPhyBlk;

    ucSPU = L2_GET_SPU(ucTLun);
    ucLunInSPU = L2_GET_LUN_IN_SPU(ucTLun);
    bTLCBlk = (FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
400a3cb8:	835ab0        	moveqz	a5, a10, a11
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:533
    // Double check the Request Block type and the VBT info.
    ASSERT(bTLCBlk == L2_VBT_Get_TLC(ucSPU, usVirBlk));
400a3cbb:	1199c0        	slli	a9, a9, 4
400a3cbe:	136192        	s32i	a9, a1, 76
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:526
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    usPhyPage = ptCtrlEntry->bsPhyPage;
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;

    bBackUpBlk  = ptExtHCtrl->bsBackUpBlk;
    usNewVirBlk = ptExtHCtrl->bsNewVirBlk;
400a3cc1:	2317b2        	l16ui	a11, a7, 70
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:533

    ucSPU = L2_GET_SPU(ucTLun);
    ucLunInSPU = L2_GET_LUN_IN_SPU(ucTLun);
    bTLCBlk = (FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
    // Double check the Request Block type and the VBT info.
    ASSERT(bTLCBlk == L2_VBT_Get_TLC(ucSPU, usVirBlk));
400a3cc4:	889a      	add.n	a8, a8, a9
400a3cc6:	2888      	l32i.n	a8, a8, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:527
    usPhyPage = ptCtrlEntry->bsPhyPage;
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;

    bBackUpBlk  = ptExtHCtrl->bsBackUpBlk;
    usNewVirBlk = ptExtHCtrl->bsNewVirBlk;
    usNewPhyBlk = ptExtHCtrl->bsNewPhyBlk;
400a3cc8:	2217a2        	l16ui	a10, a7, 68
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:533

    ucSPU = L2_GET_SPU(ucTLun);
    ucLunInSPU = L2_GET_LUN_IN_SPU(ucTLun);
    bTLCBlk = (FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
    // Double check the Request Block type and the VBT info.
    ASSERT(bTLCBlk == L2_VBT_Get_TLC(ucSPU, usVirBlk));
400a3ccb:	048880        	extui	a8, a8, 8, 1
400a3cce:	3d9587        	bne	a5, a8, 400a3d0f <L3_ExtHPrcUECC..FJ_1482204275+0xbf>
400a3cd1:	f129      	s32i.n	a2, a1, 60
400a3cd3:	e179      	s32i.n	a7, a1, 56
400a3cd5:	d159      	s32i.n	a5, a1, 52
400a3cd7:	c149      	s32i.n	a4, a1, 48
400a3cd9:	0b61b2        	s32i	a11, a1, 44
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:535

    switch (ptExtHCtrl->bsStage)
400a3cdc:	349000        	extui	a9, a0, 0, 4
400a3cdf:	19bc      	beqz.n	a9, 400a3d14 <L3_ExtHPrcUECC..FJ_1482204275+0xc4>
400a3ce1:	751926        	beqi	a9, 1, 400a3d5a <L3_ExtHPrcUECC..FJ_1482204275+0x10a>
400a3ce4:	116162        	s32i	a6, a1, 68
400a3ce7:	1261a2        	s32i	a10, a1, 72
400a3cea:	fec9b2        	addi	a11, a9, -2
400a3ced:	234b16        	beqz	a11, 400a3f25 <L3_ExtHPrcUECC..FJ_1482204275+0x2d5>
400a3cf0:	fbc902        	addi	a0, a9, -5
400a3cf3:	1b5016        	beqz	a0, 400a3eac <L3_ExtHPrcUECC..FJ_1482204275+0x25c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:646
                ucTLun, usVirBlk, usPhyBlk, usVirPage, usPhyPage, ucCmdType, ucPln, ucSecStart, ucSecLen, ucLpnBitmap, ulLBA);
            break;
        }
        default:
        {
            DBG_Printf("ExtH UECC Stage Error.0x%x\n", (U32)ptCtrlEntry);
400a3cf6:	fb0121        	l32r	a2, 400a28fc <_mcu2dram_text_start+0xfc>
400a3cf9:	facf01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a3cfc:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:647
            DBG_Getch();
400a3cff:	044105        	call0	400a8110 <DBG_Getch>

400a3d02 <L3_ExtHPrcUECC..FJ_1482204275+0xb2>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:651
        }
    }

    return;
400a3d02:	1e21c2        	l32i	a12, a1, 120
400a3d05:	80a022        	movi	a2, 128
400a3d08:	1d2102        	l32i	a0, a1, 116
400a3d0b:	112a      	add.n	a1, a1, a2
400a3d0d:	f00d      	ret.n

400a3d0f <L3_ExtHPrcUECC..FJ_1482204275+0xbf>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:533

    ucSPU = L2_GET_SPU(ucTLun);
    ucLunInSPU = L2_GET_LUN_IN_SPU(ucTLun);
    bTLCBlk = (FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
    // Double check the Request Block type and the VBT info.
    ASSERT(bTLCBlk == L2_VBT_Get_TLC(ucSPU, usVirBlk));
400a3d0f:	ffff06        	j	400a3d0f <L3_ExtHPrcUECC..FJ_1482204275+0xbf>

400a3d12 <L3_ExtHPrcUECC..FJ_1482204275+0xc2>:
	...

400a3d14 <L3_ExtHPrcUECC..FJ_1482204275+0xc4>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:541
    {
        case EXTH_INIT:
        {            
            ptExtHCtrl->bsStage = EXTH_ALLOC_NEWBLK;
            ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
            DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x ExtH_UECC Start\n",
400a3d14:	182132        	l32i	a3, a1, 96
400a3d17:	1b2122        	l32i	a2, a1, 108
400a3d1a:	172142        	l32i	a4, a1, 92
400a3d1d:	162152        	l32i	a5, a1, 88
400a3d20:	152162        	l32i	a6, a1, 84
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:539

    switch (ptExtHCtrl->bsStage)
    {
        case EXTH_INIT:
        {            
            ptExtHCtrl->bsStage = EXTH_ALLOC_NEWBLK;
400a3d23:	087c      	movi.n	a8, -16
400a3d25:	190c      	movi.n	a9, 1
400a3d27:	108080        	and	a8, a0, a8
400a3d2a:	208890        	or	a8, a8, a9
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:540
            ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
400a3d2d:	0faf92        	movi	a9, -241
400a3d30:	108890        	and	a8, a8, a9
400a3d33:	f789      	s32i.n	a8, a7, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:541
            DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x ExtH_UECC Start\n",
400a3d35:	1169      	s32i.n	a6, a1, 4
400a3d37:	142172        	l32i	a7, a1, 80
400a3d3a:	2159      	s32i.n	a5, a1, 8
400a3d3c:	3149      	s32i.n	a4, a1, 12
400a3d3e:	5129      	s32i.n	a2, a1, 20
400a3d40:	4139      	s32i.n	a3, a1, 16
400a3d42:	faef21        	l32r	a2, 400a2900 <_mcu2dram_text_start+0x100>
400a3d45:	0c3d      	mov.n	a3, a12
400a3d47:	1c2142        	l32i	a4, a1, 112
400a3d4a:	f158      	l32i.n	a5, a1, 60
400a3d4c:	0179      	s32i.n	a7, a1, 0
400a3d4e:	192162        	l32i	a6, a1, 100
400a3d51:	1a2172        	l32i	a7, a1, 104
400a3d54:	fab901        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a3d57:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:546
                ucTLun, usVirBlk, usPhyBlk, usVirPage, usPhyPage, ucCmdType, ucPln, ucSecStart, ucSecLen, ucLpnBitmap, ulLBA);
        }
        case EXTH_ALLOC_NEWBLK:
        {
            if (TRUE != L2_BM_BackUpBlockEmpty(ucSPU, ucLunInSPU))
400a3d5a:	000c      	movi.n	a0, 0
400a3d5c:	fabf21        	l32r	a2, 400a2858 <_mcu2dram_text_start+0x58>
400a3d5f:	c1a8      	l32i.n	a10, a1, 48
400a3d61:	24a292        	movi	a9, 0x224
400a3d64:	7c2aa2        	l32i	a10, a10, 0x1f0
400a3d67:	f03d      	nop.n
400a3d69:	0fa976        	loopgtz	a9, 400a3d7c <L3_ExtHPrcUECC..FJ_1482204275+0x12c>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:440
    U16 Ret;

    Ret = TRUE;
    for (i = 0; i < (BLK_PER_PLN + RSV_BLK_PER_PLN); i++)
    {
        if ((pPBITItem[i].bBackup == TRUE) && (pPBITItem[i].bFree == TRUE))
400a3d6c:	b090a0        	addx8	a9, a0, a10
400a3d6f:	1998      	l32i.n	a9, a9, 4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:438
    U16 i;
    PBIT_ENTRY* pPBITItem = pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu];
    U16 Ret;

    Ret = TRUE;
    for (i = 0; i < (BLK_PER_PLN + RSV_BLK_PER_PLN); i++)
400a3d71:	001b      	addi.n	a0, a0, 1
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:440
    {
        if ((pPBITItem[i].bBackup == TRUE) && (pPBITItem[i].bFree == TRUE))
400a3d73:	026937        	bbci	a9, 3, 400a3d79 <L3_ExtHPrcUECC..FJ_1482204275+0x129>
400a3d76:	53e907        	bbsi	a9, 0, 400a3dcd <L3_ExtHPrcUECC..FJ_1482204275+0x17d>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:438
    U16 i;
    PBIT_ENTRY* pPBITItem = pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu];
    U16 Ret;

    Ret = TRUE;
    for (i = 0; i < (BLK_PER_PLN + RSV_BLK_PER_PLN); i++)
400a3d79:	f40000        	extui	a0, a0, 0, 16

400a3d7c <L3_ExtHPrcUECC..FJ_1482204275+0x12c>:
400a3d7c:	202cc0        	or	a2, a12, a12
400a3d7f:	0d2132        	l32i	a3, a1, 52
400a3d82:	fad901        	l32r	a0, 400a28e8 <_mcu2dram_text_start+0xe8>
400a3d85:	0000c0        	callx0	a0
400a3d88:	fab401        	l32r	a0, 400a2858 <_mcu2dram_text_start+0x58>
400a3d8b:	b129      	s32i.n	a2, a1, 44
400a3d8d:	c02200        	sub	a2, a2, a0
400a3d90:	114216        	beqz	a2, 400a3ea8 <L3_ExtHPrcUECC..FJ_1482204275+0x258>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:420

U16 MCU12_DRAM_TEXT L2_VBT_GetPhysicalBlockAddr(U8 ucSuperPu, U8 ucLunInSuperPu, U16 VBN)
{
    U16 PhysicalBlockAddr;

    PhysicalBlockAddr = pVBT[ucSuperPu]->m_VBT[VBN].PhysicalBlockAddr[ucLunInSuperPu];
400a3d93:	c198      	l32i.n	a9, a1, 48
400a3d95:	b1a8      	l32i.n	a10, a1, 44
400a3d97:	9c2992        	l32i	a9, a9, 0x270
400a3d9a:	11aac0        	slli	a10, a10, 4
400a3d9d:	99aa      	add.n	a9, a9, a10
400a3d9f:	001992        	l16ui	a9, a9, 0
400a3da2:	d1a8      	l32i.n	a10, a1, 52
400a3da4:	c03900        	sub	a3, a9, a0
400a3da7:	21e316        	beqz	a3, 400a3fc9 <L3_ExtHPrcUECC..FJ_1482204275+0x379>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:565
                ASSERT(INVALID_4F != usNewVirBlk);

                usNewPhyBlk = L2_VBT_GetPhysicalBlockAddr(ucSPU, ucLunInSPU, usNewVirBlk);
                ASSERT(INVALID_4F != usNewPhyBlk);

                if (TRUE == bTLCBlk)
400a3daa:	faa401        	l32r	a0, 400a283c <_mcu2dram_text_start+0x3c>
400a3dad:	aa0b      	addi.n	a10, a10, -1
400a3daf:	a00c00        	addx4	a0, a12, a0
400a3db2:	bc2002        	l32i	a0, a0, 0x2f0
400a3db5:	250a16        	beqz	a10, 400a4009 <L3_ExtHPrcUECC..FJ_1482204275+0x3b9>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:573
                    g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
                }
                else
                {
                    g_PuInfo[ucSPU]->m_DataBlockCnt[BLKTYPE_SLC]--;
                    g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
400a3db8:	50b8      	l32i.n	a11, a0, 20
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:572
                    g_PuInfo[ucSPU]->m_DataBlockCnt[BLKTYPE_TLC]--;
                    g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
                }
                else
                {
                    g_PuInfo[ucSPU]->m_DataBlockCnt[BLKTYPE_SLC]--;
400a3dba:	061022        	l16ui	a2, a0, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:573
                    g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
400a3dbd:	fedbb2        	addmi	a11, a11, 0xfffffe00
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:572
                    g_PuInfo[ucSPU]->m_DataBlockCnt[BLKTYPE_TLC]--;
                    g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
                }
                else
                {
                    g_PuInfo[ucSPU]->m_DataBlockCnt[BLKTYPE_SLC]--;
400a3dc0:	220b      	addi.n	a2, a2, -1
400a3dc2:	065022        	s16i	a2, a0, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:573
                    g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
400a3dc5:	0560b2        	s32i	a11, a0, 20

400a3dc8 <L3_ExtHPrcUECC..FJ_1482204275+0x178>:
400a3dc8:	000c      	movi.n	a0, 0
400a3dca:	001c86        	j	400a3e40 <L3_ExtHPrcUECC..FJ_1482204275+0x1f0>

400a3dcd <L3_ExtHPrcUECC..FJ_1482204275+0x17d>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:565
    else if (BLOCK_TYPE_MIN_ERASE_CNT == AllocateType)
    {
        U32 MinEraseCnt = INVALID_8F;
        U16 Pos = INVALID_4F;

        if (TRUE != ucTLCBlk)
400a3dcd:	d108      	l32i.n	a0, a1, 52
400a3dcf:	0b0c      	movi.n	a11, 0
400a3dd1:	005d      	mov.n	a5, a0
400a3dd3:	000b      	addi.n	a0, a0, -1
400a3dd5:	1f8016        	beqz	a0, 400a3fd1 <L3_ExtHPrcUECC..FJ_1482204275+0x381>
400a3dd8:	f67c      	movi.n	a6, -1
400a3dda:	fa9f31        	l32r	a3, 400a2858 <_mcu2dram_text_start+0x58>
400a3ddd:	0a0d      	mov.n	a0, a10
400a3ddf:	24a242        	movi	a4, 0x224
400a3de2:	16a476        	loopgtz	a4, 400a3dfc <L3_ExtHPrcUECC..FJ_1482204275+0x1ac>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:571
        {
            for (i = 0; i < (BLK_PER_PLN + RSV_BLK_PER_PLN); i++)
            {
                if (pPBITItem[i].bBackup == FALSE)
                {
                    continue;
400a3de5:	1098      	l32i.n	a9, a0, 4
400a3de7:	0d6937        	bbci	a9, 3, 400a3df8 <L3_ExtHPrcUECC..FJ_1482204275+0x1a8>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:576
                }

                if (pPBITItem[i].bFree == FALSE)
                {
                    continue;
400a3dea:	0a6907        	bbci	a9, 0, 400a3df8 <L3_ExtHPrcUECC..FJ_1482204275+0x1a8>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:579
                }

                if (pPBITItem[i].EraseCnt < MinEraseCnt)
400a3ded:	011072        	l16ui	a7, a0, 2
400a3df0:	04b767        	bgeu	a7, a6, 400a3df8 <L3_ExtHPrcUECC..FJ_1482204275+0x1a8>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:581
                {
                    MinEraseCnt = pPBITItem[i].EraseCnt;
400a3df3:	076d      	mov.n	a6, a7
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:582
                    Pos = i;
400a3df5:	f430b0        	extui	a3, a11, 0, 16
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:567
        U32 MinEraseCnt = INVALID_8F;
        U16 Pos = INVALID_4F;

        if (TRUE != ucTLCBlk)
        {
            for (i = 0; i < (BLK_PER_PLN + RSV_BLK_PER_PLN); i++)
400a3df8:	bb1b      	addi.n	a11, a11, 1
400a3dfa:	008b      	addi.n	a0, a0, 8

400a3dfc <L3_ExtHPrcUECC..FJ_1482204275+0x1ac>:
400a3dfc:	c06320        	sub	a6, a3, a2
400a3dff:	200616        	beqz	a6, 400a4003 <L3_ExtHPrcUECC..FJ_1482204275+0x3b3>

400a3e02 <L3_ExtHPrcUECC..FJ_1482204275+0x1b2>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:615
            return INVALID_4F;
        }
        else
        {
            pPBITItem[Pos].bFree = FALSE;
            pPBITItem[Pos].bAllocated = TRUE;
400a3e02:	400c      	movi.n	a0, 4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:614
        {
            return INVALID_4F;
        }
        else
        {
            pPBITItem[Pos].bFree = FALSE;
400a3e04:	e47c      	movi.n	a4, -2
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:617
            pPBITItem[Pos].bAllocated = TRUE;
            pPBITItem[Pos].bTLC = ucTLCBlk;
            g_pSubSystemDevParamPage->UsedRsvdBlockCnt++;
400a3e06:	fa8d81        	l32r	a8, 400a283c <_mcu2dram_text_start+0x3c>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:614
        {
            return INVALID_4F;
        }
        else
        {
            pPBITItem[Pos].bFree = FALSE;
400a3e09:	b0b3a0        	addx8	a11, a3, a10
400a3e0c:	1b98      	l32i.n	a9, a11, 4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:617
            pPBITItem[Pos].bAllocated = TRUE;
            pPBITItem[Pos].bTLC = ucTLCBlk;
            g_pSubSystemDevParamPage->UsedRsvdBlockCnt++;
400a3e0e:	192882        	l32i	a8, a8, 100
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:614
        {
            return INVALID_4F;
        }
        else
        {
            pPBITItem[Pos].bFree = FALSE;
400a3e11:	109940        	and	a9, a9, a4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:615
            pPBITItem[Pos].bAllocated = TRUE;
400a3e14:	209900        	or	a9, a9, a0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:616
            pPBITItem[Pos].bTLC = ucTLCBlk;
400a3e17:	60c594        	insbits	a9, a5, 12, 12
400a3e1a:	1b99      	s32i.n	a9, a11, 4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:618
            g_pSubSystemDevParamPage->UsedRsvdBlockCnt++;
            g_pSubSystemDevParamPage->AvailRsvdSpace--;
400a3e1c:	7878      	l32i.n	a7, a8, 28
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:617
        else
        {
            pPBITItem[Pos].bFree = FALSE;
            pPBITItem[Pos].bAllocated = TRUE;
            pPBITItem[Pos].bTLC = ucTLCBlk;
            g_pSubSystemDevParamPage->UsedRsvdBlockCnt++;
400a3e1e:	3898      	l32i.n	a9, a8, 12
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:618
            g_pSubSystemDevParamPage->AvailRsvdSpace--;
400a3e20:	770b      	addi.n	a7, a7, -1
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:617
        else
        {
            pPBITItem[Pos].bFree = FALSE;
            pPBITItem[Pos].bAllocated = TRUE;
            pPBITItem[Pos].bTLC = ucTLCBlk;
            g_pSubSystemDevParamPage->UsedRsvdBlockCnt++;
400a3e22:	991b      	addi.n	a9, a9, 1
400a3e24:	036892        	s32i	a9, a8, 12
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:618
            g_pSubSystemDevParamPage->AvailRsvdSpace--;
400a3e27:	076872        	s32i	a7, a8, 28
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:550
        {
            if (TRUE != L2_BM_BackUpBlockEmpty(ucSPU, ucLunInSPU))
            {
                bBackUpBlk = TRUE;

                usNewPhyBlk = L2_BM_AllocateBackUpBlock(ucSPU, ucLunInSPU, BLOCK_TYPE_MIN_ERASE_CNT, bTLCBlk);
400a3e2a:	039d      	mov.n	a9, a3
400a3e2c:	c0b320        	sub	a11, a3, a2
400a3e2f:	199b16        	beqz	a11, 400a3fcc <L3_ExtHPrcUECC..FJ_1482204275+0x37c>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:325

    return FALSE;
}
void MCU12_DRAM_TEXT L2_PBIT_Set_Backup(U8 ucSuperPu, U8 ucLunInSuperPu, U16 PBN, U8 bTrue)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bBackup = bTrue;
400a3e32:	100c      	movi.n	a0, 1
400a3e34:	b033a0        	addx8	a3, a3, a10
400a3e37:	1328      	l32i.n	a2, a3, 4
400a3e39:	747c      	movi.n	a4, -9
400a3e3b:	102240        	and	a2, a2, a4
400a3e3e:	1329      	s32i.n	a2, a3, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:583
            ptExtHCtrl->bsNewVirBlk = usNewVirBlk;
            ptExtHCtrl->bsNewPhyBlk = usNewPhyBlk;

            ptExtHCtrl->bsStage = EXTH_COPY_DATA;
            ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
            DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x ExtH_UECC AllocBlk[%d, %d]\n",
400a3e40:	162142        	l32i	a4, a1, 88
400a3e43:	152152        	l32i	a5, a1, 84
400a3e46:	142162        	l32i	a6, a1, 80
400a3e49:	172122        	l32i	a2, a1, 92
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:581
            
            ptExtHCtrl->bsBackUpBlk = bBackUpBlk;
            ptExtHCtrl->bsNewVirBlk = usNewVirBlk;
            ptExtHCtrl->bsNewPhyBlk = usNewPhyBlk;

            ptExtHCtrl->bsStage = EXTH_COPY_DATA;
400a3e4c:	0b7c      	movi.n	a11, -16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:578
                    g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
                }
            }
            
            ptExtHCtrl->bsBackUpBlk = bBackUpBlk;
            ptExtHCtrl->bsNewVirBlk = usNewVirBlk;
400a3e4e:	e188      	l32i.n	a8, a1, 56
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:583
            ptExtHCtrl->bsNewPhyBlk = usNewPhyBlk;

            ptExtHCtrl->bsStage = EXTH_COPY_DATA;
            ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
            DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x ExtH_UECC AllocBlk[%d, %d]\n",
400a3e50:	0c3d      	mov.n	a3, a12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:578
                    g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
                }
            }
            
            ptExtHCtrl->bsBackUpBlk = bBackUpBlk;
            ptExtHCtrl->bsNewVirBlk = usNewVirBlk;
400a3e52:	b178      	l32i.n	a7, a1, 44
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:651
            DBG_Printf("ExtH UECC Stage Error.0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a3e54:	1e21c2        	l32i	a12, a1, 120
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:578
                    g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
                }
            }
            
            ptExtHCtrl->bsBackUpBlk = bBackUpBlk;
            ptExtHCtrl->bsNewVirBlk = usNewVirBlk;
400a3e57:	235872        	s16i	a7, a8, 70
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:577
                    g_PuInfo[ucSPU]->m_DataBlockCnt[BLKTYPE_SLC]--;
                    g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
                }
            }
            
            ptExtHCtrl->bsBackUpBlk = bBackUpBlk;
400a3e5a:	f8a8      	l32i.n	a10, a8, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:579
            ptExtHCtrl->bsNewVirBlk = usNewVirBlk;
            ptExtHCtrl->bsNewPhyBlk = usNewPhyBlk;
400a3e5c:	225892        	s16i	a9, a8, 68
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:577
                    g_PuInfo[ucSPU]->m_DataBlockCnt[BLKTYPE_SLC]--;
                    g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
                }
            }
            
            ptExtHCtrl->bsBackUpBlk = bBackUpBlk;
400a3e5f:	4080a4        	insbits	a10, a0, 8, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:581
            ptExtHCtrl->bsNewVirBlk = usNewVirBlk;
            ptExtHCtrl->bsNewPhyBlk = usNewPhyBlk;

            ptExtHCtrl->bsStage = EXTH_COPY_DATA;
400a3e62:	10aab0        	and	a10, a10, a11
400a3e65:	2b0c      	movi.n	a11, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:583
            ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
            DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x ExtH_UECC AllocBlk[%d, %d]\n",
400a3e67:	182102        	l32i	a0, a1, 96
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:581
            
            ptExtHCtrl->bsBackUpBlk = bBackUpBlk;
            ptExtHCtrl->bsNewVirBlk = usNewVirBlk;
            ptExtHCtrl->bsNewPhyBlk = usNewPhyBlk;

            ptExtHCtrl->bsStage = EXTH_COPY_DATA;
400a3e6a:	20aab0        	or	a10, a10, a11
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:582
            ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
400a3e6d:	0fafb2        	movi	a11, -241
400a3e70:	10aab0        	and	a10, a10, a11
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:583
            DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x ExtH_UECC AllocBlk[%d, %d]\n",
400a3e73:	1b21b2        	l32i	a11, a1, 108
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:582
            ptExtHCtrl->bsBackUpBlk = bBackUpBlk;
            ptExtHCtrl->bsNewVirBlk = usNewVirBlk;
            ptExtHCtrl->bsNewPhyBlk = usNewPhyBlk;

            ptExtHCtrl->bsStage = EXTH_COPY_DATA;
            ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
400a3e76:	f8a9      	s32i.n	a10, a8, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:583
            DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x ExtH_UECC AllocBlk[%d, %d]\n",
400a3e78:	7199      	s32i.n	a9, a1, 28
400a3e7a:	4109      	s32i.n	a0, a1, 16
400a3e7c:	3129      	s32i.n	a2, a1, 12
400a3e7e:	6179      	s32i.n	a7, a1, 24
400a3e80:	0169      	s32i.n	a6, a1, 0
400a3e82:	1159      	s32i.n	a5, a1, 4
400a3e84:	2149      	s32i.n	a4, a1, 8
400a3e86:	51b9      	s32i.n	a11, a1, 20
400a3e88:	1c2142        	l32i	a4, a1, 112
400a3e8b:	f158      	l32i.n	a5, a1, 60
400a3e8d:	192162        	l32i	a6, a1, 100
400a3e90:	1a2172        	l32i	a7, a1, 104
400a3e93:	fa9c21        	l32r	a2, 400a2904 <_mcu2dram_text_start+0x104>
400a3e96:	fa6801        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a3e99:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:651
            DBG_Printf("ExtH UECC Stage Error.0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a3e9c:	80a022        	movi	a2, 128
400a3e9f:	1d2102        	l32i	a0, a1, 116
400a3ea2:	112a      	add.n	a1, a1, a2
400a3ea4:	f00d      	ret.n

400a3ea6 <L3_ExtHPrcUECC..FJ_1482204275+0x256>:
	...

400a3ea8 <L3_ExtHPrcUECC..FJ_1482204275+0x258>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:560
            else
            {
                bBackUpBlk = FALSE;               

                usNewVirBlk = L2_BM_AllocateFreeBlock(ucSPU, BLOCK_TYPE_MIN_ERASE_CNT, bTLCBlk);
                ASSERT(INVALID_4F != usNewVirBlk);
400a3ea8:	ffff06        	j	400a3ea8 <L3_ExtHPrcUECC..FJ_1482204275+0x258>

400a3eab <L3_ExtHPrcUECC..FJ_1482204275+0x25b>:
	...

400a3eac <L3_ExtHPrcUECC..FJ_1482204275+0x25c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:633
            }
            break;
        }
        case EXTH_REPORT_STS:
        {                        
            L3_IFUpdtReqStatus(ptCtrlEntry);
400a3eac:	032d      	mov.n	a2, a3
400a3eae:	fa8f01        	l32r	a0, 400a28ec <_mcu2dram_text_start+0xec>
400a3eb1:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:634
            L3_FCMDQSetIntrRptr(ucTLun, INVALID_DPTR, TRUE);
400a3eb4:	0c2d      	mov.n	a2, a12
400a3eb6:	ffa032        	movi	a3, 255
400a3eb9:	140c      	movi.n	a4, 1
400a3ebb:	fa8d01        	l32r	a0, 400a28f0 <_mcu2dram_text_start+0xf0>
400a3ebe:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:636

            L3_FCMDQSetIntrEptr(ucTLun, INVALID_DPTR, TRUE);
400a3ec1:	0c2d      	mov.n	a2, a12
400a3ec3:	ffa032        	movi	a3, 255
400a3ec6:	140c      	movi.n	a4, 1
400a3ec8:	fa8b01        	l32r	a0, 400a28f4 <_mcu2dram_text_start+0xf4>
400a3ecb:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:640
            
            ptExtHCtrl->bsStage = EXTH_DONE;
            ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
            DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x ExtH_UECC Done\n",
400a3ece:	0c3d      	mov.n	a3, a12
400a3ed0:	1c2142        	l32i	a4, a1, 112
400a3ed3:	f158      	l32i.n	a5, a1, 60
400a3ed5:	192162        	l32i	a6, a1, 100
400a3ed8:	1a2172        	l32i	a7, a1, 104
400a3edb:	fa8b21        	l32r	a2, 400a2908 <_mcu2dram_text_start+0x108>
400a3ede:	142102        	l32i	a0, a1, 80
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:638
            L3_IFUpdtReqStatus(ptCtrlEntry);
            L3_FCMDQSetIntrRptr(ucTLun, INVALID_DPTR, TRUE);

            L3_FCMDQSetIntrEptr(ucTLun, INVALID_DPTR, TRUE);
            
            ptExtHCtrl->bsStage = EXTH_DONE;
400a3ee1:	e198      	l32i.n	a9, a1, 56
400a3ee3:	6a0c      	movi.n	a10, 6
400a3ee5:	f988      	l32i.n	a8, a9, 60
400a3ee7:	0b7c      	movi.n	a11, -16
400a3ee9:	1088b0        	and	a8, a8, a11
400a3eec:	2088a0        	or	a8, a8, a10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:640
            ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
            DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x ExtH_UECC Done\n",
400a3eef:	1521b2        	l32i	a11, a1, 84
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:639
            L3_FCMDQSetIntrRptr(ucTLun, INVALID_DPTR, TRUE);

            L3_FCMDQSetIntrEptr(ucTLun, INVALID_DPTR, TRUE);
            
            ptExtHCtrl->bsStage = EXTH_DONE;
            ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
400a3ef2:	0fafa2        	movi	a10, -241
400a3ef5:	1088a0        	and	a8, a8, a10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:640
            DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x ExtH_UECC Done\n",
400a3ef8:	1621a2        	l32i	a10, a1, 88
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:639
            L3_FCMDQSetIntrRptr(ucTLun, INVALID_DPTR, TRUE);

            L3_FCMDQSetIntrEptr(ucTLun, INVALID_DPTR, TRUE);
            
            ptExtHCtrl->bsStage = EXTH_DONE;
            ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
400a3efb:	f989      	s32i.n	a8, a9, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:640
            DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x ExtH_UECC Done\n",
400a3efd:	11b9      	s32i.n	a11, a1, 4
400a3eff:	0109      	s32i.n	a0, a1, 0
400a3f01:	182182        	l32i	a8, a1, 96
400a3f04:	172192        	l32i	a9, a1, 92
400a3f07:	21a9      	s32i.n	a10, a1, 8
400a3f09:	3199      	s32i.n	a9, a1, 12
400a3f0b:	4189      	s32i.n	a8, a1, 16
400a3f0d:	1b2102        	l32i	a0, a1, 108
400a3f10:	5109      	s32i.n	a0, a1, 20
400a3f12:	fa4901        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a3f15:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:651
            DBG_Printf("ExtH UECC Stage Error.0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a3f18:	1e21c2        	l32i	a12, a1, 120
400a3f1b:	80a022        	movi	a2, 128
400a3f1e:	1d2102        	l32i	a0, a1, 116
400a3f21:	112a      	add.n	a1, a1, a2
400a3f23:	f00d      	ret.n

400a3f25 <L3_ExtHPrcUECC..FJ_1482204275+0x2d5>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:589
                ucTLun, usVirBlk, usPhyBlk, usVirPage, usPhyPage, ucCmdType, ucPln, ucSecStart, ucSecLen, ucLpnBitmap, ulLBA, usNewVirBlk, usNewPhyBlk);
            break;
        }
        case EXTH_COPY_DATA:
        {
            if (EXTH_SUB_DONE == L3_ExtHCopyData(ptCtrlEntry))
400a3f25:	032d      	mov.n	a2, a3
400a3f27:	ff2905        	call0	400a31b8 <L3_ExtHCopyData..DJ_1482204275>
400a3f2a:	f7c202        	addi	a0, a2, -9
400a3f2d:	dd1056        	bnez	a0, 400a3d02 <L3_ExtHPrcUECC..FJ_1482204275+0xb2>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:591
            {
                if (EXTH_SUB_SUCCESS != ptExtHCtrl->bsSubStage)
400a3f30:	e128      	l32i.n	a2, a1, 56
400a3f32:	122132        	l32i	a3, a1, 72
400a3f35:	a139      	s32i.n	a3, a1, 40
400a3f37:	1133d0        	slli	a3, a3, 3
400a3f3a:	3c0222        	l8ui	a2, a2, 60
400a3f3d:	106132        	s32i	a3, a1, 64
400a3f40:	412420        	srli	a2, a2, 4
400a3f43:	f9c222        	addi	a2, a2, -7
400a3f46:	0d4216        	beqz	a2, 400a401e <L3_ExtHPrcUECC..FJ_1482204275+0x3ce>
400a3f49:	0c2d      	mov.n	a2, a12
400a3f4b:	030c      	movi.n	a3, 0
400a3f4d:	122142        	l32i	a4, a1, 72
400a3f50:	004505        	call0	400a43a4 <L2_PBIT_Set_Error>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:594
                {
                    L2_PBIT_Set_Error(ucSPU, ucLunInSPU, usNewPhyBlk, TRUE);
                    L2_PBIT_Set_Free(ucSPU, ucLunInSPU, usNewPhyBlk, FALSE);
400a3f53:	122132        	l32i	a3, a1, 72
400a3f56:	0c2d      	mov.n	a2, a12
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:333
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bError = bTrue;
}
void MCU12_DRAM_TEXT L2_PBIT_Set_Free(U8 ucSuperPu, U8 ucLunInSuperPu, U16 PBN, U8 bTrue)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bFree = bTrue;
400a3f58:	c178      	l32i.n	a7, a1, 48
400a3f5a:	102162        	l32i	a6, a1, 64
400a3f5d:	7c2772        	l32i	a7, a7, 0x1f0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:594
400a3f60:	140c      	movi.n	a4, 1
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:333
400a3f62:	667a      	add.n	a6, a6, a7
400a3f64:	1658      	l32i.n	a5, a6, 4
400a3f66:	feaf72        	movi	a7, -2
400a3f69:	105570        	and	a5, a5, a7
400a3f6c:	016652        	s32i	a5, a6, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:594
400a3f6f:	003245        	call0	400a4294 <L2_BbtAddBbtBadBlk>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:599
                    L2_BbtAddBbtBadBlk(ucTLun, usNewPhyBlk, RT_BAD_BLK, WRITE_ERR);

                    ptExtHCtrl->bsStage = EXTH_ALLOC_NEWBLK;
                    ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
                    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x ExtH_UECC CopyData Fail\n",
400a3f72:	0c3d      	mov.n	a3, a12
400a3f74:	1c2142        	l32i	a4, a1, 112
400a3f77:	f158      	l32i.n	a5, a1, 60
400a3f79:	192162        	l32i	a6, a1, 100
400a3f7c:	1a2172        	l32i	a7, a1, 104
400a3f7f:	fa6321        	l32r	a2, 400a290c <_mcu2dram_text_start+0x10c>
400a3f82:	142182        	l32i	a8, a1, 80
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:597
                {
                    L2_PBIT_Set_Error(ucSPU, ucLunInSPU, usNewPhyBlk, TRUE);
                    L2_PBIT_Set_Free(ucSPU, ucLunInSPU, usNewPhyBlk, FALSE);
                    L2_BbtAddBbtBadBlk(ucTLun, usNewPhyBlk, RT_BAD_BLK, WRITE_ERR);

                    ptExtHCtrl->bsStage = EXTH_ALLOC_NEWBLK;
400a3f85:	e1a8      	l32i.n	a10, a1, 56
400a3f87:	0b7c      	movi.n	a11, -16
400a3f89:	fa98      	l32i.n	a9, a10, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:599
                    ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
                    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x ExtH_UECC CopyData Fail\n",
400a3f8b:	152102        	l32i	a0, a1, 84
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:597
                {
                    L2_PBIT_Set_Error(ucSPU, ucLunInSPU, usNewPhyBlk, TRUE);
                    L2_PBIT_Set_Free(ucSPU, ucLunInSPU, usNewPhyBlk, FALSE);
                    L2_BbtAddBbtBadBlk(ucTLun, usNewPhyBlk, RT_BAD_BLK, WRITE_ERR);

                    ptExtHCtrl->bsStage = EXTH_ALLOC_NEWBLK;
400a3f8e:	1099b0        	and	a9, a9, a11
400a3f91:	1b0c      	movi.n	a11, 1
400a3f93:	2099b0        	or	a9, a9, a11
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:598
                    ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
400a3f96:	0fafb2        	movi	a11, -241
400a3f99:	1099b0        	and	a9, a9, a11
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:599
                    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x ExtH_UECC CopyData Fail\n",
400a3f9c:	1621b2        	l32i	a11, a1, 88
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:598
                    L2_PBIT_Set_Error(ucSPU, ucLunInSPU, usNewPhyBlk, TRUE);
                    L2_PBIT_Set_Free(ucSPU, ucLunInSPU, usNewPhyBlk, FALSE);
                    L2_BbtAddBbtBadBlk(ucTLun, usNewPhyBlk, RT_BAD_BLK, WRITE_ERR);

                    ptExtHCtrl->bsStage = EXTH_ALLOC_NEWBLK;
                    ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
400a3f9f:	fa99      	s32i.n	a9, a10, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:599
                    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x ExtH_UECC CopyData Fail\n",
400a3fa1:	1109      	s32i.n	a0, a1, 4
400a3fa3:	0189      	s32i.n	a8, a1, 0
400a3fa5:	182192        	l32i	a9, a1, 96
400a3fa8:	1721a2        	l32i	a10, a1, 92
400a3fab:	21b9      	s32i.n	a11, a1, 8
400a3fad:	31a9      	s32i.n	a10, a1, 12
400a3faf:	4199      	s32i.n	a9, a1, 16
400a3fb1:	1b2182        	l32i	a8, a1, 108
400a3fb4:	5189      	s32i.n	a8, a1, 20
400a3fb6:	fa2001        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a3fb9:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:651
            DBG_Printf("ExtH UECC Stage Error.0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a3fbc:	1e21c2        	l32i	a12, a1, 120
400a3fbf:	80a022        	movi	a2, 128
400a3fc2:	1d2102        	l32i	a0, a1, 116
400a3fc5:	112a      	add.n	a1, a1, a2
400a3fc7:	f00d      	ret.n

400a3fc9 <L3_ExtHPrcUECC..FJ_1482204275+0x379>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:563

                usNewVirBlk = L2_BM_AllocateFreeBlock(ucSPU, BLOCK_TYPE_MIN_ERASE_CNT, bTLCBlk);
                ASSERT(INVALID_4F != usNewVirBlk);

                usNewPhyBlk = L2_VBT_GetPhysicalBlockAddr(ucSPU, ucLunInSPU, usNewVirBlk);
                ASSERT(INVALID_4F != usNewPhyBlk);
400a3fc9:	ffff06        	j	400a3fc9 <L3_ExtHPrcUECC..FJ_1482204275+0x379>

400a3fcc <L3_ExtHPrcUECC..FJ_1482204275+0x37c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:551
            if (TRUE != L2_BM_BackUpBlockEmpty(ucSPU, ucLunInSPU))
            {
                bBackUpBlk = TRUE;

                usNewPhyBlk = L2_BM_AllocateBackUpBlock(ucSPU, ucLunInSPU, BLOCK_TYPE_MIN_ERASE_CNT, bTLCBlk);
                ASSERT(INVALID_4F != usNewPhyBlk);
400a3fcc:	ffff06        	j	400a3fcc <L3_ExtHPrcUECC..FJ_1482204275+0x37c>

400a3fcf <L3_ExtHPrcUECC..FJ_1482204275+0x37f>:
	...

400a3fd1 <L3_ExtHPrcUECC..FJ_1482204275+0x381>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:588
                }
            }
        }
        else
        {
            for (i = (BLK_PER_PLN + RSV_BLK_PER_PLN); i > 0; i--)
400a3fd1:	24a2b2        	movi	a11, 0x224
400a3fd4:	fa2131        	l32r	a3, 400a2858 <_mcu2dram_text_start+0x58>
400a3fd7:	f67c      	movi.n	a6, -1
400a3fd9:	24a242        	movi	a4, 0x224
400a3fdc:	11da02        	addmi	a0, a10, 0x1100
400a3fdf:	20c002        	addi	a0, a0, 32
400a3fe2:	17a476        	loopgtz	a4, 400a3ffd <L3_ExtHPrcUECC..FJ_1482204275+0x3ad>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:592
            {
                if (pPBITItem[i].bBackup == FALSE)
                {
                    continue;
400a3fe5:	1098      	l32i.n	a9, a0, 4
400a3fe7:	0d6937        	bbci	a9, 3, 400a3ff8 <L3_ExtHPrcUECC..FJ_1482204275+0x3a8>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:597
                }

                if (pPBITItem[i].bFree == FALSE)
                {
                    continue;
400a3fea:	0a6907        	bbci	a9, 0, 400a3ff8 <L3_ExtHPrcUECC..FJ_1482204275+0x3a8>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:600
                }

                if (pPBITItem[i].EraseCnt < MinEraseCnt)
400a3fed:	011072        	l16ui	a7, a0, 2
400a3ff0:	04b767        	bgeu	a7, a6, 400a3ff8 <L3_ExtHPrcUECC..FJ_1482204275+0x3a8>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:602
                {
                    MinEraseCnt = pPBITItem[i].EraseCnt;
400a3ff3:	076d      	mov.n	a6, a7
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:603
                    Pos = i;
400a3ff5:	f430b0        	extui	a3, a11, 0, 16
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:588
                }
            }
        }
        else
        {
            for (i = (BLK_PER_PLN + RSV_BLK_PER_PLN); i > 0; i--)
400a3ff8:	bb0b      	addi.n	a11, a11, -1
400a3ffa:	f8c002        	addi	a0, a0, -8

400a3ffd <L3_ExtHPrcUECC..FJ_1482204275+0x3ad>:
400a3ffd:	c04320        	sub	a4, a3, a2
400a4000:	dfe456        	bnez	a4, 400a3e02 <L3_ExtHPrcUECC..FJ_1482204275+0x1b2>

400a4003 <L3_ExtHPrcUECC..FJ_1482204275+0x3b3>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:608
                    Pos = i;
                }
            }
        }

        if (Pos == INVALID_4F)
400a4003:	fa1531        	l32r	a3, 400a2858 <_mcu2dram_text_start+0x58>
400a4006:	ff8806        	j	400a3e2a <L3_ExtHPrcUECC..FJ_1482204275+0x1da>

400a4009 <L3_ExtHPrcUECC..FJ_1482204275+0x3b9>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:568
                ASSERT(INVALID_4F != usNewPhyBlk);

                if (TRUE == bTLCBlk)
                {
                    g_PuInfo[ucSPU]->m_DataBlockCnt[BLKTYPE_TLC]--;
                    g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
400a4009:	5058      	l32i.n	a5, a0, 20
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:567
                usNewPhyBlk = L2_VBT_GetPhysicalBlockAddr(ucSPU, ucLunInSPU, usNewVirBlk);
                ASSERT(INVALID_4F != usNewPhyBlk);

                if (TRUE == bTLCBlk)
                {
                    g_PuInfo[ucSPU]->m_DataBlockCnt[BLKTYPE_TLC]--;
400a400b:	071062        	l16ui	a6, a0, 14
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:568
                    g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
400a400e:	fed552        	addmi	a5, a5, 0xfffffe00
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:567
                usNewPhyBlk = L2_VBT_GetPhysicalBlockAddr(ucSPU, ucLunInSPU, usNewVirBlk);
                ASSERT(INVALID_4F != usNewPhyBlk);

                if (TRUE == bTLCBlk)
                {
                    g_PuInfo[ucSPU]->m_DataBlockCnt[BLKTYPE_TLC]--;
400a4011:	660b      	addi.n	a6, a6, -1
400a4013:	075062        	s16i	a6, a0, 14
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:568
                    g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
400a4016:	5059      	s32i.n	a5, a0, 20
400a4018:	ff6b06        	j	400a3dc8 <L3_ExtHPrcUECC..FJ_1482204275+0x178>

400a401b <L3_ExtHPrcUECC..FJ_1482204275+0x3cb>:
400a401b:	000000                                        ...

400a401e <L3_ExtHPrcUECC..FJ_1482204275+0x3ce>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:599
                    L2_PBIT_Set_Free(ucSPU, ucLunInSPU, usNewPhyBlk, FALSE);
                    L2_BbtAddBbtBadBlk(ucTLun, usNewPhyBlk, RT_BAD_BLK, WRITE_ERR);

                    ptExtHCtrl->bsStage = EXTH_ALLOC_NEWBLK;
                    ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
                    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x ExtH_UECC CopyData Fail\n",
400a401e:	202cc0        	or	a2, a12, a12
400a4021:	00a032        	movi	a3, 0
400a4024:	f148      	l32i.n	a4, a1, 60
400a4026:	0037c5        	call0	400a43a4 <L2_PBIT_Set_Error>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:605
                        ucTLun, usVirBlk, usPhyBlk, usVirPage, usPhyPage, ucCmdType, ucPln, ucSecStart, ucSecLen, ucLpnBitmap, ulLBA);
                }
                else
                {
                    L2_PBIT_Set_Error(ucSPU, ucLunInSPU, usPhyBlk, TRUE);
                    L2_PBIT_Set_Free(ucSPU, ucLunInSPU, usPhyBlk, FALSE);
400a4029:	0c2d      	mov.n	a2, a12
400a402b:	240c      	movi.n	a4, 2
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:333
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bError = bTrue;
}
void MCU12_DRAM_TEXT L2_PBIT_Set_Free(U8 ucSuperPu, U8 ucLunInSuperPu, U16 PBN, U8 bTrue)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bFree = bTrue;
400a402d:	c188      	l32i.n	a8, a1, 48
400a402f:	f178      	l32i.n	a7, a1, 60
400a4031:	8179      	s32i.n	a7, a1, 32
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:605
400a4033:	073d      	mov.n	a3, a7
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:333
400a4035:	7c2882        	l32i	a8, a8, 0x1f0
400a4038:	1197d0        	slli	a9, a7, 3
400a403b:	9199      	s32i.n	a9, a1, 36
400a403d:	b07780        	addx8	a7, a7, a8
400a4040:	1768      	l32i.n	a6, a7, 4
400a4042:	e87c      	movi.n	a8, -2
400a4044:	106680        	and	a6, a6, a8
400a4047:	016762        	s32i	a6, a7, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:605
400a404a:	002485        	call0	400a4294 <L2_BbtAddBbtBadBlk>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:610
                    L2_BbtAddBbtBadBlk(ucTLun, usPhyBlk, RT_BAD_BLK, READ_ERR);

                    L2_PBIT_SetVirturlBlockAddr(ucSPU, ucLunInSPU, usNewPhyBlk, usVirBlk);
                    L2_VBT_SetPhysicalBlockAddr(ucSPU, ucLunInSPU, usVirBlk, usNewPhyBlk);
                    if (FALSE == bBackUpBlk)
400a404d:	1121b2        	l32i	a11, a1, 68
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:427
    return PhysicalBlockAddr;
}

void MCU12_DRAM_TEXT L2_VBT_SetPhysicalBlockAddr(U8 ucSuperPu, U8 ucLunInSuperPu, U16 VBN, U16 PBN)
{
    pVBT[ucSuperPu]->m_VBT[VBN].PhysicalBlockAddr[ucLunInSuperPu] = PBN;
400a4050:	122122        	l32i	a2, a1, 72
400a4053:	132132        	l32i	a3, a1, 76
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:369

    return VirtualBlockAddr;
}
void MCU12_DRAM_TEXT L2_PBIT_SetVirturlBlockAddr(U8 ucSuperPu, U8 ucLunInSuperPu, U16 PBN, U16 VBN)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].VirtualBlockAddr = VBN;
400a4056:	1c2142        	l32i	a4, a1, 112
400a4059:	c108      	l32i.n	a0, a1, 48
400a405b:	102152        	l32i	a5, a1, 64
400a405e:	7c20a2        	l32i	a10, a0, 0x1f0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:427
    return PhysicalBlockAddr;
}

void MCU12_DRAM_TEXT L2_VBT_SetPhysicalBlockAddr(U8 ucSuperPu, U8 ucLunInSuperPu, U16 VBN, U16 PBN)
{
    pVBT[ucSuperPu]->m_VBT[VBN].PhysicalBlockAddr[ucLunInSuperPu] = PBN;
400a4061:	9c2002        	l32i	a0, a0, 0x270
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:369

    return VirtualBlockAddr;
}
void MCU12_DRAM_TEXT L2_PBIT_SetVirturlBlockAddr(U8 ucSuperPu, U8 ucLunInSuperPu, U16 PBN, U16 VBN)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].VirtualBlockAddr = VBN;
400a4064:	55aa      	add.n	a5, a5, a10
400a4066:	005542        	s16i	a4, a5, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:427
    return PhysicalBlockAddr;
}

void MCU12_DRAM_TEXT L2_VBT_SetPhysicalBlockAddr(U8 ucSuperPu, U8 ucLunInSuperPu, U16 VBN, U16 PBN)
{
    pVBT[ucSuperPu]->m_VBT[VBN].PhysicalBlockAddr[ucLunInSuperPu] = PBN;
400a4069:	330a      	add.n	a3, a3, a0
400a406b:	005322        	s16i	a2, a3, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:610
400a406e:	0efb16        	beqz	a11, 400a4161 <L3_ExtHPrcUECC..FJ_1482204275+0x511>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:616
                    {
                        L2_PBIT_SetVirturlBlockAddr(ucSPU, ucLunInSPU, usPhyBlk, usNewVirBlk);
                        L2_VBT_SetPhysicalBlockAddr(ucSPU, ucLunInSPU, usNewVirBlk, usPhyBlk);
                    }

                    L2_PBIT_Set_TLC(ucSPU, ucLunInSPU, usNewPhyBlk, bTLCBlk);
400a4071:	0c2d      	mov.n	a2, a12
400a4073:	030c      	movi.n	a3, 0
400a4075:	122142        	l32i	a4, a1, 72
400a4078:	d158      	l32i.n	a5, a1, 52
400a407a:	fa1f01        	l32r	a0, 400a28f8 <_mcu2dram_text_start+0xf8>
400a407d:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:618

                    L2_Exchange_PBIT_Info(ucSPU, ucLunInSPU, usPhyBlk, usNewPhyBlk);
400a4080:	070c      	movi.n	a7, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:407
    return;
}
void MCU12_DRAM_TEXT L2_Reset_PBIT_Info(U8 ucSuperPu, U8 ucLunInSuperPu, U16 usPhyBlock)
{
    //pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usPhyBlock].BlockType = BLOCK_TYPE_EMPTY;
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usPhyBlock].BlockType = BLOCK_TYPE_GB;
400a4082:	1faeb2        	movi	a11, 0xfffffe1f
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:4420
400a4085:	401c00        	ssl	a12
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:397
    pVBT[PUSer]->m_VBT[VBN].bsRetryFail = RetryFail;
}

void MCU12_DRAM_TEXT L2_Exchange_PBIT_Info(U8 ucSuperPu, U8 ucLunInSuperPu, U16 usSrcPhyBlock, U16 usTarPhyBlock)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usTarPhyBlock].BlockType = pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usSrcPhyBlock].BlockType;
400a4088:	102152        	l32i	a5, a1, 64
400a408b:	91a8      	l32i.n	a10, a1, 36
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:398
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usTarPhyBlock].PageType = pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usSrcPhyBlock].PageType;
400a408d:	8188      	l32i.n	a8, a1, 32
400a408f:	a128      	l32i.n	a2, a1, 40
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:397
    pVBT[PUSer]->m_VBT[VBN].bsRetryFail = RetryFail;
}

void MCU12_DRAM_TEXT L2_Exchange_PBIT_Info(U8 ucSuperPu, U8 ucLunInSuperPu, U16 usSrcPhyBlock, U16 usTarPhyBlock)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usTarPhyBlock].BlockType = pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usSrcPhyBlock].BlockType;
400a4091:	c138      	l32i.n	a3, a1, 48
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:398
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usTarPhyBlock].PageType = pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usSrcPhyBlock].PageType;
400a4093:	a02220        	addx4	a2, a2, a2
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:397
    pVBT[PUSer]->m_VBT[VBN].bsRetryFail = RetryFail;
}

void MCU12_DRAM_TEXT L2_Exchange_PBIT_Info(U8 ucSuperPu, U8 ucLunInSuperPu, U16 usSrcPhyBlock, U16 usTarPhyBlock)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usTarPhyBlock].BlockType = pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usSrcPhyBlock].BlockType;
400a4096:	7c2332        	l32i	a3, a3, 0x1f0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:398
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usTarPhyBlock].PageType = pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usSrcPhyBlock].PageType;
400a4099:	a08880        	addx4	a8, a8, a8
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:397
    pVBT[PUSer]->m_VBT[VBN].bsRetryFail = RetryFail;
}

void MCU12_DRAM_TEXT L2_Exchange_PBIT_Info(U8 ucSuperPu, U8 ucLunInSuperPu, U16 usSrcPhyBlock, U16 usTarPhyBlock)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usTarPhyBlock].BlockType = pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usSrcPhyBlock].BlockType;
400a409c:	aa3a      	add.n	a10, a10, a3
400a409e:	553a      	add.n	a5, a5, a3
400a40a0:	1548      	l32i.n	a4, a5, 4
400a40a2:	1a68      	l32i.n	a6, a10, 4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:398
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usTarPhyBlock].PageType = pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usSrcPhyBlock].PageType;
400a40a4:	a08830        	addx4	a8, a8, a3
400a40a7:	a02230        	addx4	a2, a2, a3
400a40aa:	0ed222        	addmi	a2, a2, 0xe00
400a40ad:	0ed882        	addmi	a8, a8, 0xe00
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:397
    pVBT[PUSer]->m_VBT[VBN].bsRetryFail = RetryFail;
}

void MCU12_DRAM_TEXT L2_Exchange_PBIT_Info(U8 ucSuperPu, U8 ucLunInSuperPu, U16 usSrcPhyBlock, U16 usTarPhyBlock)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usTarPhyBlock].BlockType = pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usSrcPhyBlock].BlockType;
400a40b0:	416560        	srli	a6, a6, 5
400a40b3:	405644        	insbits	a4, a6, 5, 8
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:4420
400a40b6:	160c      	movi.n	a6, 1
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:397
400a40b8:	1549      	s32i.n	a4, a5, 4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:398
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usTarPhyBlock].PageType = pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usSrcPhyBlock].PageType;
400a40ba:	c82852        	l32i	a5, a8, 0x320
400a40bd:	c82232        	l32i	a3, a2, 0x320
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:4420
400a40c0:	a16600        	sll	a6, a6
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:398
400a40c3:	030534        	insbits	a3, a5, 0, 3
400a40c6:	c86232        	s32i	a3, a2, 0x320
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:399
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usTarPhyBlock].OPType = pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usSrcPhyBlock].OPType;
400a40c9:	c82842        	l32i	a4, a8, 0x320
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:618
400a40cc:	fa0451        	l32r	a5, 400a28dc <_mcu2dram_text_start+0xdc>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:399
400a40cf:	414440        	srli	a4, a4, 4
400a40d2:	234434        	insbits	a3, a4, 4, 7
400a40d5:	c86232        	s32i	a3, a2, 0x320
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:4420
400a40d8:	3548      	l32i.n	a4, a5, 12
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:408
}
void MCU12_DRAM_TEXT L2_Reset_PBIT_Info(U8 ucSuperPu, U8 ucLunInSuperPu, U16 usPhyBlock)
{
    //pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usPhyBlock].BlockType = BLOCK_TYPE_EMPTY;
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usPhyBlock].BlockType = BLOCK_TYPE_GB;
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usPhyBlock].PageType = PAGE_TYPE_RSVD;
400a40da:	037c      	movi.n	a3, -16
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:400
void MCU12_DRAM_TEXT L2_Exchange_PBIT_Info(U8 ucSuperPu, U8 ucLunInSuperPu, U16 usSrcPhyBlock, U16 usTarPhyBlock)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usTarPhyBlock].BlockType = pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usSrcPhyBlock].BlockType;
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usTarPhyBlock].PageType = pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usSrcPhyBlock].PageType;
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usTarPhyBlock].OPType = pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usSrcPhyBlock].OPType;
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usTarPhyBlock].TimeStamp = pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usSrcPhyBlock].TimeStamp;
400a40dc:	c92802        	l32i	a0, a8, 0x324
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:4420
400a40df:	204460        	or	a4, a4, a6
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:400
400a40e2:	c96202        	s32i	a0, a2, 0x324
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:625

                    L2_BbtSetLunSaveBBTBitMap(ucTLun, TRUE);

                    ptExtHCtrl->bsStage = EXTH_REPORT_STS;
                    ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
                    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x ExtH_UECC CopyData Success[%d to %d]\n",
400a40e5:	182162        	l32i	a6, a1, 96
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:623
                    L2_Exchange_PBIT_Info(ucSPU, ucLunInSPU, usPhyBlk, usNewPhyBlk);
                    L2_Reset_PBIT_Info(ucSPU, ucLunInSPU, usPhyBlk);

                    L2_BbtSetLunSaveBBTBitMap(ucTLun, TRUE);

                    ptExtHCtrl->bsStage = EXTH_REPORT_STS;
400a40e8:	e108      	l32i.n	a0, a1, 56
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:409
void MCU12_DRAM_TEXT L2_Reset_PBIT_Info(U8 ucSuperPu, U8 ucLunInSuperPu, U16 usPhyBlock)
{
    //pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usPhyBlock].BlockType = BLOCK_TYPE_EMPTY;
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usPhyBlock].BlockType = BLOCK_TYPE_GB;
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usPhyBlock].PageType = PAGE_TYPE_RSVD;
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usPhyBlock].OPType = 0;
400a40ea:	0faf22        	movi	a2, -241
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:4420
400a40ed:	3549      	s32i.n	a4, a5, 12
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:407
    return;
}
void MCU12_DRAM_TEXT L2_Reset_PBIT_Info(U8 ucSuperPu, U8 ucLunInSuperPu, U16 usPhyBlock)
{
    //pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usPhyBlock].BlockType = BLOCK_TYPE_EMPTY;
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usPhyBlock].BlockType = BLOCK_TYPE_GB;
400a40ef:	1a98      	l32i.n	a9, a10, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:625
                    ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
                    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x ExtH_UECC CopyData Success[%d to %d]\n",
400a40f1:	1b2142        	l32i	a4, a1, 108
400a40f4:	f158      	l32i.n	a5, a1, 60
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:407
400a40f6:	1099b0        	and	a9, a9, a11
400a40f9:	1a99      	s32i.n	a9, a10, 4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:411
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usPhyBlock].PageType = PAGE_TYPE_RSVD;
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usPhyBlock].OPType = 0;
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usPhyBlock].TimeStamp = 0;
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usPhyBlock].LastPageTimeStamp = 0;
400a40fb:	ca6872        	s32i	a7, a8, 0x328
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:410
{
    //pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usPhyBlock].BlockType = BLOCK_TYPE_EMPTY;
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usPhyBlock].BlockType = BLOCK_TYPE_GB;
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usPhyBlock].PageType = PAGE_TYPE_RSVD;
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usPhyBlock].OPType = 0;
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usPhyBlock].TimeStamp = 0;
400a40fe:	c96872        	s32i	a7, a8, 0x324
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:625
400a4101:	1421a2        	l32i	a10, a1, 80
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:408
}
void MCU12_DRAM_TEXT L2_Reset_PBIT_Info(U8 ucSuperPu, U8 ucLunInSuperPu, U16 usPhyBlock)
{
    //pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usPhyBlock].BlockType = BLOCK_TYPE_EMPTY;
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][usPhyBlock].BlockType = BLOCK_TYPE_GB;
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usPhyBlock].PageType = PAGE_TYPE_RSVD;
400a4104:	c82872        	l32i	a7, a8, 0x320
400a4107:	d90c      	movi.n	a9, 13
400a4109:	107730        	and	a7, a7, a3
400a410c:	207790        	or	a7, a7, a9
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:409
    pPBIT[ucSuperPu]->m_PBIT_Info[ucLunInSuperPu][usPhyBlock].OPType = 0;
400a410f:	107720        	and	a7, a7, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:625
400a4112:	152192        	l32i	a9, a1, 84
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:409
400a4115:	c86872        	s32i	a7, a8, 0x320
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:625
400a4118:	172172        	l32i	a7, a1, 92
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:623
                    L2_Exchange_PBIT_Info(ucSPU, ucLunInSPU, usPhyBlk, usNewPhyBlk);
                    L2_Reset_PBIT_Info(ucSPU, ucLunInSPU, usPhyBlk);

                    L2_BbtSetLunSaveBBTBitMap(ucTLun, TRUE);

                    ptExtHCtrl->bsStage = EXTH_REPORT_STS;
400a411b:	f0b8      	l32i.n	a11, a0, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:625
                    ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
                    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x ExtH_UECC CopyData Success[%d to %d]\n",
400a411d:	162182        	l32i	a8, a1, 88
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:623
                    L2_Exchange_PBIT_Info(ucSPU, ucLunInSPU, usPhyBlk, usNewPhyBlk);
                    L2_Reset_PBIT_Info(ucSPU, ucLunInSPU, usPhyBlk);

                    L2_BbtSetLunSaveBBTBitMap(ucTLun, TRUE);

                    ptExtHCtrl->bsStage = EXTH_REPORT_STS;
400a4120:	10bb30        	and	a11, a11, a3
400a4123:	530c      	movi.n	a3, 5
400a4125:	20bb30        	or	a11, a11, a3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:624
                    ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
400a4128:	10bb20        	and	a11, a11, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:625
                    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x ExtH_UECC CopyData Success[%d to %d]\n",
400a412b:	0c3d      	mov.n	a3, a12
400a412d:	122122        	l32i	a2, a1, 72
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:624
                    L2_Reset_PBIT_Info(ucSPU, ucLunInSPU, usPhyBlk);

                    L2_BbtSetLunSaveBBTBitMap(ucTLun, TRUE);

                    ptExtHCtrl->bsStage = EXTH_REPORT_STS;
                    ptExtHCtrl->bsSubStage = EXTH_SUB_INIT;
400a4130:	f0b9      	s32i.n	a11, a0, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:625
                    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x ExtH_UECC CopyData Success[%d to %d]\n",
400a4132:	6159      	s32i.n	a5, a1, 24
400a4134:	01a9      	s32i.n	a10, a1, 0
400a4136:	1199      	s32i.n	a9, a1, 4
400a4138:	2189      	s32i.n	a8, a1, 8
400a413a:	3179      	s32i.n	a7, a1, 12
400a413c:	5149      	s32i.n	a4, a1, 20
400a413e:	4169      	s32i.n	a6, a1, 16
400a4140:	1c2142        	l32i	a4, a1, 112
400a4143:	192162        	l32i	a6, a1, 100
400a4146:	7129      	s32i.n	a2, a1, 28
400a4148:	1a2172        	l32i	a7, a1, 104
400a414b:	f9f121        	l32r	a2, 400a2910 <_mcu2dram_text_start+0x110>
400a414e:	f9ba01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a4151:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:651
            DBG_Printf("ExtH UECC Stage Error.0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a4154:	1e21c2        	l32i	a12, a1, 120
400a4157:	80a022        	movi	a2, 128
400a415a:	1d2102        	l32i	a0, a1, 116
400a415d:	112a      	add.n	a1, a1, a2
400a415f:	f00d      	ret.n

400a4161 <L3_ExtHPrcUECC..FJ_1482204275+0x511>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:427
    return PhysicalBlockAddr;
}

void MCU12_DRAM_TEXT L2_VBT_SetPhysicalBlockAddr(U8 ucSuperPu, U8 ucLunInSuperPu, U16 VBN, U16 PBN)
{
    pVBT[ucSuperPu]->m_VBT[VBN].PhysicalBlockAddr[ucLunInSuperPu] = PBN;
400a4161:	f148      	l32i.n	a4, a1, 60
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:369

    return VirtualBlockAddr;
}
void MCU12_DRAM_TEXT L2_PBIT_SetVirturlBlockAddr(U8 ucSuperPu, U8 ucLunInSuperPu, U16 PBN, U16 VBN)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].VirtualBlockAddr = VBN;
400a4163:	9168      	l32i.n	a6, a1, 36
400a4165:	b158      	l32i.n	a5, a1, 44
400a4167:	66aa      	add.n	a6, a6, a10
400a4169:	005652        	s16i	a5, a6, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:427
    return PhysicalBlockAddr;
}

void MCU12_DRAM_TEXT L2_VBT_SetPhysicalBlockAddr(U8 ucSuperPu, U8 ucLunInSuperPu, U16 VBN, U16 PBN)
{
    pVBT[ucSuperPu]->m_VBT[VBN].PhysicalBlockAddr[ucLunInSuperPu] = PBN;
400a416c:	1155c0        	slli	a5, a5, 4
400a416f:	505a      	add.n	a5, a0, a5
400a4171:	005542        	s16i	a4, a5, 0
400a4174:	ffbe46        	j	400a4071 <L3_ExtHPrcUECC..FJ_1482204275+0x421>

400a4177 <L3_ExtHPrcUECC..FJ_1482204275+0x527>:
	...

400a4178 <L3_ExtHPrcErrFCmd..HJ_1482204275>:
L3_ExtHPrcErrFCmd():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:858
{
    U8 ucCurEptr;
    BOOL bContinue = FALSE;
    FCMD_INTR_CTRL_ENTRY *ptCtrlEntry;
    
    ucCurEptr = L3_FCMDQGetIntrEptr(ucTLun, TRUE);
400a4178:	130c      	movi.n	a3, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:853
Usage      : 
History    : 
    1. 2016.7.26 JasonGuo create function
==============================================================================*/
LOCAL BOOL MCU2_DRAM_TEXT L3_ExtHPrcErrFCmd(U8 ucTLun)
{
400a417a:	f0c112        	addi	a1, a1, -16
400a417d:	11c9      	s32i.n	a12, a1, 4
400a417f:	0109      	s32i.n	a0, a1, 0
400a4181:	20c220        	or	a12, a2, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:858
    U8 ucCurEptr;
    BOOL bContinue = FALSE;
    FCMD_INTR_CTRL_ENTRY *ptCtrlEntry;
    
    ucCurEptr = L3_FCMDQGetIntrEptr(ucTLun, TRUE);
400a4184:	f9e501        	l32r	a0, 400a2918 <_mcu2dram_text_start+0x118>
400a4187:	0000c0        	callx0	a0
400a418a:	023d      	mov.n	a3, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:859
    if (INVALID_DPTR == ucCurEptr)
400a418c:	ffa002        	movi	a0, 255
400a418f:	391207        	beq	a2, a0, 400a41cc <L3_ExtHPrcErrFCmd..HJ_1482204275+0x54>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:864
    {
        return TRUE;
    }

    ptCtrlEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucCurEptr, TRUE);
400a4192:	0c2d      	mov.n	a2, a12
400a4194:	01a042        	movi	a4, 1
400a4197:	f9e101        	l32r	a0, 400a291c <_mcu2dram_text_start+0x11c>
400a419a:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:865
    switch (ptCtrlEntry->ptErrHEntry->bsErrCode)
400a419d:	9208      	l32i.n	a0, a2, 36
400a419f:	000002        	l8ui	a0, a0, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:864
    if (INVALID_DPTR == ucCurEptr)
    {
        return TRUE;
    }

    ptCtrlEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucCurEptr, TRUE);
400a41a2:	023d      	mov.n	a3, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:865
    switch (ptCtrlEntry->ptErrHEntry->bsErrCode)
400a41a4:	410100        	srli	a0, a0, 1
400a41a7:	0250e6        	bgei	a0, 5, 400a41ad <L3_ExtHPrcErrFCmd..HJ_1482204275+0x35>
400a41aa:	3a20e6        	bgei	a0, 2, 400a41e8 <L3_ExtHPrcErrFCmd..HJ_1482204275+0x70>

400a41ad <L3_ExtHPrcErrFCmd..HJ_1482204275+0x35>:
400a41ad:	276026        	beqi	a0, 6, 400a41d8 <L3_ExtHPrcErrFCmd..HJ_1482204275+0x60>
400a41b0:	248026        	beqi	a0, 8, 400a41d8 <L3_ExtHPrcErrFCmd..HJ_1482204275+0x60>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:882
            L3_ExtHPrcPRG(ptCtrlEntry);
            break;
        }
        default:
        {
            DBG_Printf("ExtH meets no-support ErrCode. 0x%x", (U32)ptCtrlEntry);
400a41b3:	f9d821        	l32r	a2, 400a2914 <_mcu2dram_text_start+0x114>
400a41b6:	f9a001        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a41b9:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a41bc:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:89
400a41bf:	f99a21        	l32r	a2, 400a2828 <_mcu2dram_text_start+0x28>
400a41c2:	f99d01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a41c5:	0000c0        	callx0	a0
400a41c8:	ffff06        	j	400a41c8 <L3_ExtHPrcErrFCmd..HJ_1482204275+0x50>

400a41cb <L3_ExtHPrcErrFCmd..HJ_1482204275+0x53>:
	...

400a41cc <L3_ExtHPrcErrFCmd..HJ_1482204275+0x54>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:861
    FCMD_INTR_CTRL_ENTRY *ptCtrlEntry;
    
    ucCurEptr = L3_FCMDQGetIntrEptr(ucTLun, TRUE);
    if (INVALID_DPTR == ucCurEptr)
    {
        return TRUE;
400a41cc:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:887
            DBG_Printf("ExtH meets no-support ErrCode. 0x%x", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return FALSE;
400a41ce:	11c8      	l32i.n	a12, a1, 4
400a41d0:	0108      	l32i.n	a0, a1, 0
400a41d2:	10c112        	addi	a1, a1, 16
400a41d5:	f00d      	ret.n

400a41d7 <L3_ExtHPrcErrFCmd..HJ_1482204275+0x5f>:
	...

400a41d8 <L3_ExtHPrcErrFCmd..HJ_1482204275+0x60>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:870
    switch (ptCtrlEntry->ptErrHEntry->bsErrCode)
    {
        case NF_ERR_TYPE_UECC:
        case NF_ERR_TYPE_DCRC:
        {
            L3_ExtHPrcUECC(ptCtrlEntry);
400a41d8:	032d      	mov.n	a2, a3
400a41da:	ffa745        	call0	400a3c50 <L3_ExtHPrcUECC..FJ_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:887
            DBG_Printf("ExtH meets no-support ErrCode. 0x%x", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return FALSE;
400a41dd:	020c      	movi.n	a2, 0
400a41df:	11c8      	l32i.n	a12, a1, 4
400a41e1:	0108      	l32i.n	a0, a1, 0
400a41e3:	10c112        	addi	a1, a1, 16
400a41e6:	f00d      	ret.n

400a41e8 <L3_ExtHPrcErrFCmd..HJ_1482204275+0x70>:
400a41e8:	11c8      	l32i.n	a12, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:877
        }
        case NF_ERR_TYPE_PRG:
        case NF_ERR_TYPE_PREPRG:
        case NF_ERR_TYPE_BOTHPRG:
        {
            L3_ExtHPrcPRG(ptCtrlEntry);
400a41ea:	ff48c5        	call0	400a3678 <L3_ExtHPrcPRG..GJ_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:887
            DBG_Printf("ExtH meets no-support ErrCode. 0x%x", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return FALSE;
400a41ed:	020c      	movi.n	a2, 0
400a41ef:	0108      	l32i.n	a0, a1, 0
400a41f1:	10c112        	addi	a1, a1, 16
400a41f4:	f00d      	ret.n

400a41f6 <L3_ExtHPrcErrFCmd..HJ_1482204275+0x7e>:
	...

400a41f8 <L3_FMUpdtUsrFailCnt>:
L3_FMUpdtUsrFailCnt():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:480
Usage      : 
History    : 
    1. 2016.7.28 JasonGuo create function
==============================================================================*/
void MCU2_DRAM_TEXT L3_FMUpdtUsrFailCnt(U8 ucTLun, U8 ucErrCode)
{
400a41f8:	207220        	or	a7, a2, a2
400a41fb:	f0c112        	addi	a1, a1, -16
400a41fe:	034d      	mov.n	a4, a3
400a4200:	006102        	s32i	a0, a1, 0
400a4203:	f98e01        	l32r	a0, 400a283c <_mcu2dram_text_start+0x3c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:481
    switch (ucErrCode)
400a4206:	0253e6        	bgei	a3, 5, 400a420c <L3_FMUpdtUsrFailCnt+0x14>
400a4209:	3f23e6        	bgei	a3, 2, 400a424c <L3_FMUpdtUsrFailCnt+0x54>

400a420c <L3_FMUpdtUsrFailCnt+0x14>:
400a420c:	6c5426        	beqi	a4, 5, 400a427c <L3_FMUpdtUsrFailCnt+0x84>
400a420f:	516426        	beqi	a4, 6, 400a4264 <L3_FMUpdtUsrFailCnt+0x6c>
400a4212:	4e8426        	beqi	a4, 8, 400a4264 <L3_FMUpdtUsrFailCnt+0x6c>
400a4215:	920c      	movi.n	a2, 9
400a4217:	191427        	beq	a4, a2, 400a4234 <L3_FMUpdtUsrFailCnt+0x3c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:508
            g_ptFMUserMgr[ucTLun].bsErsErrCnt++;
            break;
        }
        default:
        {
            DBG_Printf("TLun%d ErrCode%d Error.\n", ucTLun, ucErrCode);
400a421a:	f9c121        	l32r	a2, 400a2920 <_mcu2dram_text_start+0x120>
400a421d:	073d      	mov.n	a3, a7
400a421f:	f98601        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a4222:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a4225:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:89
400a4228:	f98021        	l32r	a2, 400a2828 <_mcu2dram_text_start+0x28>
400a422b:	f98301        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a422e:	0000c0        	callx0	a0
400a4231:	ffff06        	j	400a4231 <L3_FMUpdtUsrFailCnt+0x39>

400a4234 <L3_FMUpdtUsrFailCnt+0x3c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:491
            g_ptFMUserMgr[ucTLun].bsUeccErrCnt++;
            break;
        }
        case NF_ERR_TYPE_RECC:
        {
            g_ptFMUserMgr[ucTLun].bsReccErrCnt++;
400a4234:	172052        	l32i	a5, a0, 92
400a4237:	a04770        	addx4	a4, a7, a7
400a423a:	a04450        	addx4	a4, a4, a5
400a423d:	021432        	l16ui	a3, a4, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:513
            DBG_Printf("TLun%d ErrCode%d Error.\n", ucTLun, ucErrCode);
            DBG_Getch();
        }
    }

    return;
400a4240:	0108      	l32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:491
            g_ptFMUserMgr[ucTLun].bsUeccErrCnt++;
            break;
        }
        case NF_ERR_TYPE_RECC:
        {
            g_ptFMUserMgr[ucTLun].bsReccErrCnt++;
400a4242:	331b      	addi.n	a3, a3, 1
400a4244:	025432        	s16i	a3, a4, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:513
            DBG_Printf("TLun%d ErrCode%d Error.\n", ucTLun, ucErrCode);
            DBG_Getch();
        }
    }

    return;
400a4247:	10c112        	addi	a1, a1, 16
400a424a:	f00d      	ret.n

400a424c <L3_FMUpdtUsrFailCnt+0x54>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:498
        }
        case NF_ERR_TYPE_PRG:
        case NF_ERR_TYPE_PREPRG:
        case NF_ERR_TYPE_BOTHPRG:
        {
            g_ptFMUserMgr[ucTLun].bsPrgErrCnt++;
400a424c:	172092        	l32i	a9, a0, 92
400a424f:	a08220        	addx4	a8, a2, a2
400a4252:	a08890        	addx4	a8, a8, a9
400a4255:	011862        	l16ui	a6, a8, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:513
            DBG_Printf("TLun%d ErrCode%d Error.\n", ucTLun, ucErrCode);
            DBG_Getch();
        }
    }

    return;
400a4258:	0108      	l32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:498
        }
        case NF_ERR_TYPE_PRG:
        case NF_ERR_TYPE_PREPRG:
        case NF_ERR_TYPE_BOTHPRG:
        {
            g_ptFMUserMgr[ucTLun].bsPrgErrCnt++;
400a425a:	661b      	addi.n	a6, a6, 1
400a425c:	015862        	s16i	a6, a8, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:513
            DBG_Printf("TLun%d ErrCode%d Error.\n", ucTLun, ucErrCode);
            DBG_Getch();
        }
    }

    return;
400a425f:	10c112        	addi	a1, a1, 16
400a4262:	f00d      	ret.n

400a4264 <L3_FMUpdtUsrFailCnt+0x6c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:486
    switch (ucErrCode)
    {
        case NF_ERR_TYPE_UECC:
        case NF_ERR_TYPE_DCRC:
        {
            g_ptFMUserMgr[ucTLun].bsUeccErrCnt++;
400a4264:	172002        	l32i	a0, a0, 92
400a4267:	a0b770        	addx4	a11, a7, a7
400a426a:	a0bb00        	addx4	a11, a11, a0
400a426d:	031ba2        	l16ui	a10, a11, 6
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:513
            DBG_Printf("TLun%d ErrCode%d Error.\n", ucTLun, ucErrCode);
            DBG_Getch();
        }
    }

    return;
400a4270:	0108      	l32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:486
    switch (ucErrCode)
    {
        case NF_ERR_TYPE_UECC:
        case NF_ERR_TYPE_DCRC:
        {
            g_ptFMUserMgr[ucTLun].bsUeccErrCnt++;
400a4272:	aa1b      	addi.n	a10, a10, 1
400a4274:	035ba2        	s16i	a10, a11, 6
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:513
            DBG_Printf("TLun%d ErrCode%d Error.\n", ucTLun, ucErrCode);
            DBG_Getch();
        }
    }

    return;
400a4277:	10c112        	addi	a1, a1, 16
400a427a:	f00d      	ret.n

400a427c <L3_FMUpdtUsrFailCnt+0x84>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:503
            g_ptFMUserMgr[ucTLun].bsPrgErrCnt++;
            break;
        }
        case NF_ERR_TYPE_ERS:
        {
            g_ptFMUserMgr[ucTLun].bsErsErrCnt++;
400a427c:	172042        	l32i	a4, a0, 92
400a427f:	a03770        	addx4	a3, a7, a7
400a4282:	a03340        	addx4	a3, a3, a4
400a4285:	001322        	l16ui	a2, a3, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:513
            DBG_Printf("TLun%d ErrCode%d Error.\n", ucTLun, ucErrCode);
            DBG_Getch();
        }
    }

    return;
400a4288:	0108      	l32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:503
            g_ptFMUserMgr[ucTLun].bsPrgErrCnt++;
            break;
        }
        case NF_ERR_TYPE_ERS:
        {
            g_ptFMUserMgr[ucTLun].bsErsErrCnt++;
400a428a:	221b      	addi.n	a2, a2, 1
400a428c:	005322        	s16i	a2, a3, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:513
            DBG_Printf("TLun%d ErrCode%d Error.\n", ucTLun, ucErrCode);
            DBG_Getch();
        }
    }

    return;
400a428f:	10c112        	addi	a1, a1, 16
400a4292:	f00d      	ret.n

400a4294 <L2_BbtAddBbtBadBlk>:
L2_BbtAddBbtBadBlk():
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:703
History    :
1. 2014.10.13 steven create
2. 2015.05.25 Jason refactoring
==============================================================================*/
GLOBAL void MCU12_DRAM_TEXT L2_BbtAddBbtBadBlk(U8 ucTLun, U16 usPhyBlk, U8 BadBlkType, U8 ucErrType)
{
400a4294:	d0c112        	addi	a1, a1, -48
400a4297:	31e9      	s32i.n	a14, a1, 12
400a4299:	41f9      	s32i.n	a15, a1, 16
400a429b:	8139      	s32i.n	a3, a1, 32
400a429d:	0109      	s32i.n	a0, a1, 0
400a429f:	11c9      	s32i.n	a12, a1, 4
400a42a1:	21d9      	s32i.n	a13, a1, 8
400a42a3:	04cd      	mov.n	a12, a4
400a42a5:	02dd      	mov.n	a13, a2
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:706
    U8 ucPln;

    if(L2_BbtIsPbnBindingTableEnable() == FALSE)
400a42a7:	f96101        	l32r	a0, 400a282c <_mcu2dram_text_start+0x2c>
400a42aa:	0000c0        	callx0	a0
400a42ad:	0c0216        	beqz	a2, 400a4371 <L2_BbtAddBbtBadBlk+0xdd>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:711
    {
        DBG_Printf("PBN binding table not ready\n");
        DBG_Getch();
    }
    for (ucPln = 0; ucPln < PLN_PER_LUN; ucPln++)
400a42b0:	f99de1        	l32r	a14, 400a2924 <_mcu2dram_text_start+0x124>
400a42b3:	0dfd      	mov.n	a15, a13
400a42b5:	907dd0        	addx2	a7, a13, a13
400a42b8:	c80c      	movi.n	a8, 12
400a42ba:	208c80        	or	a8, a12, a8
400a42bd:	117720        	slli	a7, a7, 14
400a42c0:	0c0c      	movi.n	a12, 0
400a42c2:	4d0c      	movi.n	a13, 4
400a42c4:	6179      	s32i.n	a7, a1, 24
400a42c6:	d10fe0        	mul16s	a0, a15, a14
400a42c9:	748080        	extui	a8, a8, 0, 8
400a42cc:	7189      	s32i.n	a8, a1, 28
400a42ce:	5109      	s32i.n	a0, a1, 20

400a42d0 <L2_BbtAddBbtBadBlk+0x3c>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:715
    {
        // look up the PBN binding table to find out the plane block
        // current PBN maps to in the plane
        U16 usTargetPlaneBlock = L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, ucPln);
400a42d0:	0f2d      	mov.n	a2, a15
400a42d2:	8138      	l32i.n	a3, a1, 32
400a42d4:	0c4d      	mov.n	a4, a12
400a42d6:	f95601        	l32r	a0, 400a2830 <_mcu2dram_text_start+0x30>
400a42d9:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:264
{
    U32 ulBitPos, ulBytePos;

    ulBitPos = ucTLun * PLN_PER_LUN * BBT_BLK_PER_PLN + ucPln * BBT_BLK_PER_PLN + usBlock;
    ulBytePos = g_ulGBBT + ulBitPos / 8;
    *(volatile U8 *)ulBytePos |= (1 << (ulBitPos % 8));
400a42dc:	5198      	l32i.n	a9, a1, 20
400a42de:	f95771        	l32r	a7, 400a283c <_mcu2dram_text_start+0x3c>
400a42e1:	24a262        	movi	a6, 0x224
400a42e4:	7450c0        	extui	a5, a12, 0, 8
400a42e7:	d15560        	mul16s	a5, a5, a6
400a42ea:	112772        	l32i	a7, a7, 68
400a42ed:	995a      	add.n	a9, a9, a5
400a42ef:	929a      	add.n	a9, a2, a9
400a42f1:	418390        	srli	a8, a9, 3
400a42f4:	778a      	add.n	a7, a7, a8
400a42f6:	249090        	extui	a9, a9, 0, 3
400a42f9:	401900        	ssl	a9
400a42fc:	180c      	movi.n	a8, 1
400a42fe:	a18800        	sll	a8, a8
400a4301:	0020c0        	memw
400a4304:	000762        	l8ui	a6, a7, 0
400a4307:	206680        	or	a6, a6, a8
400a430a:	0020c0        	memw
400a430d:	004762        	s8i	a6, a7, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:4575
{
    U8 ucByteValue, ucBadBlkInfo;
    U32 ulBitPos, ulBytePos;

    ulBitPos = EXT_BAD_BLK_OFFSET + ucPln * BBT_BLK_PER_PLN + usBlock;
    ulBytePos = (l_ulLBBT + ucTLun * LBBT_BUF_SIZE) + ulBitPos / 2;
400a4310:	552a      	add.n	a5, a5, a2
400a4312:	55ea      	add.n	a5, a5, a14
400a4314:	412150        	srli	a2, a5, 1
400a4317:	0020c0        	memw
400a431a:	f97001        	l32r	a0, 400a28dc <_mcu2dram_text_start+0xdc>
400a431d:	6138      	l32i.n	a3, a1, 24
400a431f:	0008      	l32i.n	a0, a0, 0
400a4321:	003a      	add.n	a0, a0, a3
400a4323:	002a      	add.n	a0, a0, a2
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:4578
    ucBadBlkInfo = (BadBlkType << 2) | (ucErrType);

    ucByteValue = *(volatile U8 *)ulBytePos;
400a4325:	0020c0        	memw
400a4328:	000022        	l8ui	a2, a0, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:4581
    ucByteValue &= ~(0xF << ((ulBitPos % 2)*4));
    ucByteValue |= (ucBadBlkInfo << ((ulBitPos % 2)*4));
    *(volatile U8 *)ulBytePos = ucByteValue;
400a432b:	f40c      	movi.n	a4, 15
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:4579
    ulBitPos = EXT_BAD_BLK_OFFSET + ucPln * BBT_BLK_PER_PLN + usBlock;
    ulBytePos = (l_ulLBBT + ucTLun * LBBT_BUF_SIZE) + ulBitPos / 2;
    ucBadBlkInfo = (BadBlkType << 2) | (ucErrType);

    ucByteValue = *(volatile U8 *)ulBytePos;
    ucByteValue &= ~(0xF << ((ulBitPos % 2)*4));
400a432d:	045050        	extui	a5, a5, 0, 1
400a4330:	1155e0        	slli	a5, a5, 2
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:4581
    ucByteValue |= (ucBadBlkInfo << ((ulBitPos % 2)*4));
    *(volatile U8 *)ulBytePos = ucByteValue;
400a4333:	7138      	l32i.n	a3, a1, 28
400a4335:	401500        	ssl	a5
400a4338:	a13300        	sll	a3, a3
400a433b:	401500        	ssl	a5
400a433e:	f57c      	movi.n	a5, -1
400a4340:	a14400        	sll	a4, a4
400a4343:	304450        	xor	a4, a4, a5
400a4346:	102240        	and	a2, a2, a4
400a4349:	202230        	or	a2, a2, a3
400a434c:	0020c0        	memw
400a434f:	004022        	s8i	a2, a0, 0
400a4352:	0020c0        	memw
400a4355:	000002        	l8ui	a0, a0, 0
400a4358:	dd0b      	addi.n	a13, a13, -1
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:711
    if(L2_BbtIsPbnBindingTableEnable() == FALSE)
    {
        DBG_Printf("PBN binding table not ready\n");
        DBG_Getch();
    }
    for (ucPln = 0; ucPln < PLN_PER_LUN; ucPln++)
400a435a:	cc1b      	addi.n	a12, a12, 1
400a435c:	74c0c0        	extui	a12, a12, 0, 8
400a435f:	f6dd56        	bnez	a13, 400a42d0 <L2_BbtAddBbtBadBlk+0x3c>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:727
            //L2_BbtTestSetLBbtBadBlkBit_Ext(ucTLun, ucPln, usTargetPlaneBlock, BadBlkType, ucErrType);
            #endif
        }
    }

    return;
400a4362:	11c8      	l32i.n	a12, a1, 4
400a4364:	21d8      	l32i.n	a13, a1, 8
400a4366:	31e8      	l32i.n	a14, a1, 12
400a4368:	41f8      	l32i.n	a15, a1, 16
400a436a:	0108      	l32i.n	a0, a1, 0
400a436c:	30c112        	addi	a1, a1, 48
400a436f:	f00d      	ret.n

400a4371 <L2_BbtAddBbtBadBlk+0xdd>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:708
{
    U8 ucPln;

    if(L2_BbtIsPbnBindingTableEnable() == FALSE)
    {
        DBG_Printf("PBN binding table not ready\n");
400a4371:	f96d21        	l32r	a2, 400a2928 <_mcu2dram_text_start+0x128>
400a4374:	f93101        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a4377:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a437a:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:89
400a437d:	f96b21        	l32r	a2, 400a292c <_mcu2dram_text_start+0x12c>
400a4380:	f92e01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a4383:	0000c0        	callx0	a0
400a4386:	ffff06        	j	400a4386 <L2_BbtAddBbtBadBlk+0xf2>

400a4389 <L2_BbtAddBbtBadBlk+0xf5>:
400a4389:	000000                                        ...

400a438c <L2_VBT_GetPhysicalBlockAddr>:
L2_VBT_GetPhysicalBlockAddr():
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:422
{
    U16 PhysicalBlockAddr;

    PhysicalBlockAddr = pVBT[ucSuperPu]->m_VBT[VBN].PhysicalBlockAddr[ucLunInSuperPu];

    return PhysicalBlockAddr;
400a438c:	f92c51        	l32r	a5, 400a283c <_mcu2dram_text_start+0x3c>
400a438f:	a02250        	addx4	a2, a2, a5
400a4392:	9c2222        	l32i	a2, a2, 0x270
400a4395:	1154c0        	slli	a5, a4, 4
400a4398:	225a      	add.n	a2, a2, a5
400a439a:	902320        	addx2	a2, a3, a2
400a439d:	001222        	l16ui	a2, a2, 0
400a43a0:	f00d      	ret.n

400a43a2 <L2_VBT_GetPhysicalBlockAddr+0x16>:
	...

400a43a4 <L2_PBIT_Set_Error>:
L2_PBIT_Set_Error():
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:329
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bBackup = bTrue;
}
void MCU12_DRAM_TEXT L2_PBIT_Set_Error(U8 ucSuperPu, U8 ucLunInSuperPu, U16 PBN, U8 bTrue)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bError = bTrue;
400a43a4:	f92681        	l32r	a8, 400a283c <_mcu2dram_text_start+0x3c>
400a43a7:	1172e0        	slli	a7, a2, 2
400a43aa:	24a262        	movi	a6, 0x224
400a43ad:	d16630        	mul16s	a6, a6, a3
400a43b0:	778a      	add.n	a7, a7, a8
400a43b2:	7c2772        	l32i	a7, a7, 0x1f0
400a43b5:	646a      	add.n	a6, a4, a6
400a43b7:	b06670        	addx8	a6, a6, a7
400a43ba:	1658      	l32i.n	a5, a6, 4
400a43bc:	270c      	movi.n	a7, 2
400a43be:	205570        	or	a5, a5, a7
400a43c1:	1659      	s32i.n	a5, a6, 4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:330
}
400a43c3:	f00d      	ret.n

400a43c5 <L2_PBIT_Set_Error+0x21>:
400a43c5:	000000                                        ...

400a43c8 <L3_ErrHRstLun..LH_1482204275>:
L3_ErrHRstLun():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:630
History    : 
    1. 2016.8.2  JasonGuo create function
    2. 2016.9.29 JasonGuo add SLCMode to support multi-work-mode flash chip.
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHRstLun(U8 ucTLun, BOOL bSLCMode)
{
400a43c8:	e0c112        	addi	a1, a1, -32
400a43cb:	41d9      	s32i.n	a13, a1, 16
400a43cd:	2109      	s32i.n	a0, a1, 8
400a43cf:	31c9      	s32i.n	a12, a1, 12
400a43d1:	51e9      	s32i.n	a14, a1, 20
400a43d3:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:636
    BOOL bStatus;
    FLASH_ADDR tFlashAddr = { 0 };

    tFlashAddr.ucPU = L3_GET_PU(ucTLun);
    tFlashAddr.ucLun = L3_GET_LUN_IN_PU(ucTLun);
    tFlashAddr.bsSLCMode = bSLCMode;
400a43d5:	f957e1        	l32r	a14, 400a2934 <_mcu2dram_text_start+0x134>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:632
    2. 2016.9.29 JasonGuo add SLCMode to support multi-work-mode flash chip.
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHRstLun(U8 ucTLun, BOOL bSLCMode)
{
    BOOL bStatus;
    FLASH_ADDR tFlashAddr = { 0 };
400a43d8:	f95621        	l32r	a2, 400a2930 <_mcu2dram_text_start+0x130>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:635

    tFlashAddr.ucPU = L3_GET_PU(ucTLun);
    tFlashAddr.ucLun = L3_GET_LUN_IN_PU(ucTLun);
400a43db:	000c      	movi.n	a0, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:632
    2. 2016.9.29 JasonGuo add SLCMode to support multi-work-mode flash chip.
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHRstLun(U8 ucTLun, BOOL bSLCMode)
{
    BOOL bStatus;
    FLASH_ADDR tFlashAddr = { 0 };
400a43dd:	1238      	l32i.n	a3, a2, 4
400a43df:	1139      	s32i.n	a3, a1, 4
400a43e1:	0228      	l32i.n	a2, a2, 0
400a43e3:	0129      	s32i.n	a2, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:635

    tFlashAddr.ucPU = L3_GET_PU(ucTLun);
    tFlashAddr.ucLun = L3_GET_LUN_IN_PU(ucTLun);
400a43e5:	014102        	s8i	a0, a1, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:634
LOCAL void MCU2_DRAM_TEXT L3_ErrHRstLun(U8 ucTLun, BOOL bSLCMode)
{
    BOOL bStatus;
    FLASH_ADDR tFlashAddr = { 0 };

    tFlashAddr.ucPU = L3_GET_PU(ucTLun);
400a43e8:	0041c2        	s8i	a12, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:636
    tFlashAddr.ucLun = L3_GET_LUN_IN_PU(ucTLun);
    tFlashAddr.bsSLCMode = bSLCMode;
400a43eb:	01d8      	l32i.n	a13, a1, 0
400a43ed:	10dde0        	and	a13, a13, a14
400a43f0:	0061d2        	s32i	a13, a1, 0
400a43f3:	74e0d0        	extui	a14, a13, 0, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1280
    U8 ucPU, ucLun;

    ucPU = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;

    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a43f6:	202ee0        	or	a2, a14, a14
400a43f9:	74d8d0        	extui	a13, a13, 8, 8
400a43fc:	203dd0        	or	a3, a13, a13
400a43ff:	f95001        	l32r	a0, 400a2940 <_mcu2dram_text_start+0x140>
400a4402:	0000c0        	callx0	a0
400a4405:	079216        	beqz	a2, 400a4482 <L3_ErrHRstLun..LH_1482204275+0xba>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1285
    {
        return NFC_STATUS_FAIL;
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
400a4408:	0d3d      	mov.n	a3, a13
400a440a:	0e2d      	mov.n	a2, a14
400a440c:	f94e01        	l32r	a0, 400a2944 <_mcu2dram_text_start+0x144>
400a440f:	0000c0        	callx0	a0
400a4412:	02dd      	mov.n	a13, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1286
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);
400a4414:	10a032        	movi	a3, 16
400a4417:	f94c01        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a441a:	0000c0        	callx0	a0
400a441d:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1288
    
    pNFCQEntry->atRowAddr[0].bsRowAddr = HAL_NfcGetFlashRowAddr(pFlashAddr);
400a441f:	f94b01        	l32r	a0, 400a294c <_mcu2dram_text_start+0x14c>
400a4422:	0000c0        	callx0	a0
400a4425:	8d48      	l32i.n	a4, a13, 32
400a4427:	e10244        	insbits	a4, a2, 0, 29
400a442a:	086d42        	s32i	a4, a13, 32
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1289
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_RESET_LUN);
400a442d:	03a022        	movi	a2, 3
400a4430:	f94801        	l32r	a0, 400a2950 <_mcu2dram_text_start+0x150>
400a4433:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1291

    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_RESET_LUN, FALSE, INVALID_2F);
400a4436:	330c      	movi.n	a3, 3
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1289

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);
    
    pNFCQEntry->atRowAddr[0].bsRowAddr = HAL_NfcGetFlashRowAddr(pFlashAddr);
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_RESET_LUN);
400a4438:	3d58      	l32i.n	a5, a13, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1291

    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_RESET_LUN, FALSE, INVALID_2F);
400a443a:	040c      	movi.n	a4, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1289

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);
    
    pNFCQEntry->atRowAddr[0].bsRowAddr = HAL_NfcGetFlashRowAddr(pFlashAddr);
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_RESET_LUN);
400a443c:	808254        	insbits	a5, a2, 8, 16
400a443f:	3d59      	s32i.n	a5, a13, 12
400a4441:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1291

    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_RESET_LUN, FALSE, INVALID_2F);
400a4443:	ffa052        	movi	a5, 255
400a4446:	f94301        	l32r	a0, 400a2954 <_mcu2dram_text_start+0x154>
400a4449:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:644
    if (NFC_STATUS_SUCCESS != bStatus)
    {
        DBG_Printf("TLun%d Reset Fail.\n", ucTLun);
        DBG_Getch();
    }
    bStatus = HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun);
400a444c:	000122        	l8ui	a2, a1, 0
400a444f:	010132        	l8ui	a3, a1, 1
400a4452:	f94101        	l32r	a0, 400a2958 <_mcu2dram_text_start+0x158>
400a4455:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:645
    if (NFC_STATUS_SUCCESS != bStatus)
400a4458:	191226        	beqi	a2, 1, 400a4475 <L3_ErrHRstLun..LH_1482204275+0xad>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:647
    {
        DBG_Printf("TLun%d Reset Wait Fail.\n", ucTLun);
400a445b:	f93721        	l32r	a2, 400a2938 <_mcu2dram_text_start+0x138>
400a445e:	0c3d      	mov.n	a3, a12
400a4460:	f8f601        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a4463:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a4466:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:89
400a4469:	f93021        	l32r	a2, 400a292c <_mcu2dram_text_start+0x12c>
400a446c:	f8f301        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a446f:	0000c0        	callx0	a0

400a4472 <L3_ErrHRstLun..LH_1482204275+0xaa>:
400a4472:	ffff06        	j	400a4472 <L3_ErrHRstLun..LH_1482204275+0xaa>

400a4475 <L3_ErrHRstLun..LH_1482204275+0xad>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:651
        DBG_Getch();
    }

    return;
400a4475:	31c8      	l32i.n	a12, a1, 12
400a4477:	41d8      	l32i.n	a13, a1, 16
400a4479:	51e8      	l32i.n	a14, a1, 20
400a447b:	2108      	l32i.n	a0, a1, 8
400a447d:	20c112        	addi	a1, a1, 32
400a4480:	f00d      	ret.n

400a4482 <L3_ErrHRstLun..LH_1482204275+0xba>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:641
    tFlashAddr.bsSLCMode = bSLCMode;
    
    bStatus = HAL_NfcResetLun(&tFlashAddr);
    if (NFC_STATUS_SUCCESS != bStatus)
    {
        DBG_Printf("TLun%d Reset Fail.\n", ucTLun);
400a4482:	f92e21        	l32r	a2, 400a293c <_mcu2dram_text_start+0x13c>
400a4485:	0c3d      	mov.n	a3, a12
400a4487:	f8ec01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a448a:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a448d:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:89
400a4490:	f92721        	l32r	a2, 400a292c <_mcu2dram_text_start+0x12c>
400a4493:	f8e901        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a4496:	0000c0        	callx0	a0
400a4499:	ffff06        	j	400a4499 <L3_ErrHRstLun..LH_1482204275+0xd1>

400a449c <FW_ReportSMSG>:
FW_ReportSMSG():
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:154
Usage      : report the retry fail to L0.
History    : 
    1. 2014.11.11 JasonGuo create function
==============================================================================*/
GLOBAL void MCU12_DRAM_TEXT FW_ReportSMSG(PSMSG pSMSG)
{
400a449c:	f8e881        	l32r	a8, 400a283c <_mcu2dram_text_start+0x3c>
400a449f:	2a2842        	l32i	a4, a8, 168
400a44a2:	0020c0        	memw
400a44a5:	102472        	l32i	a7, a4, 64
400a44a8:	0020c0        	memw
400a44ab:	150c      	movi.n	a5, 1
400a44ad:	112462        	l32i	a6, a4, 68
400a44b0:	030c      	movi.n	a3, 0
400a44b2:	661b      	addi.n	a6, a6, 1
400a44b4:	146060        	extui	a6, a6, 0, 2
400a44b7:	c06670        	sub	a6, a6, a7
400a44ba:	833560        	moveqz	a3, a5, a6
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:157
    PSMSG ptSMSG;

    if (TRUE != FW_IsSMQFull())
400a44bd:	331326        	beqi	a3, 1, 400a44f4 <FW_ReportSMSG+0x58>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:159
    {    
        ptSMSG = FW_GetNewSMsg();
400a44c0:	0020c0        	memw
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:162

        ptSMSG->ulMsgSeqNum   = l_ulMsgSeqNum++;
        ptSMSG->ulMsgCode     = pSMSG->ulMsgCode;
400a44c3:	1238      	l32i.n	a3, a2, 4
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:163
        ptSMSG->ulMsgParam[0] = pSMSG->ulMsgParam[0];
400a44c5:	2258      	l32i.n	a5, a2, 8
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:164
        ptSMSG->ulMsgParam[1] = pSMSG->ulMsgParam[1];
400a44c7:	3268      	l32i.n	a6, a2, 12
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:159
{
    PSMSG ptSMSG;

    if (TRUE != FW_IsSMQFull())
    {    
        ptSMSG = FW_GetNewSMsg();
400a44c9:	1124a2        	l32i	a10, a4, 68
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:161

        ptSMSG->ulMsgSeqNum   = l_ulMsgSeqNum++;
400a44cc:	2c2892        	l32i	a9, a8, 176
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:159
{
    PSMSG ptSMSG;

    if (TRUE != FW_IsSMQFull())
    {    
        ptSMSG = FW_GetNewSMsg();
400a44cf:	11aac0        	slli	a10, a10, 4
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:161

        ptSMSG->ulMsgSeqNum   = l_ulMsgSeqNum++;
400a44d2:	b91b      	addi.n	a11, a9, 1
400a44d4:	2c68b2        	s32i	a11, a8, 176
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:159
{
    PSMSG ptSMSG;

    if (TRUE != FW_IsSMQFull())
    {    
        ptSMSG = FW_GetNewSMsg();
400a44d7:	a4aa      	add.n	a10, a4, a10
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:164

        ptSMSG->ulMsgSeqNum   = l_ulMsgSeqNum++;
        ptSMSG->ulMsgCode     = pSMSG->ulMsgCode;
        ptSMSG->ulMsgParam[0] = pSMSG->ulMsgParam[0];
        ptSMSG->ulMsgParam[1] = pSMSG->ulMsgParam[1];
400a44d9:	3a69      	s32i.n	a6, a10, 12
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:163
    {    
        ptSMSG = FW_GetNewSMsg();

        ptSMSG->ulMsgSeqNum   = l_ulMsgSeqNum++;
        ptSMSG->ulMsgCode     = pSMSG->ulMsgCode;
        ptSMSG->ulMsgParam[0] = pSMSG->ulMsgParam[0];
400a44db:	2a59      	s32i.n	a5, a10, 8
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:162
    if (TRUE != FW_IsSMQFull())
    {    
        ptSMSG = FW_GetNewSMsg();

        ptSMSG->ulMsgSeqNum   = l_ulMsgSeqNum++;
        ptSMSG->ulMsgCode     = pSMSG->ulMsgCode;
400a44dd:	1a39      	s32i.n	a3, a10, 4
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:161

    if (TRUE != FW_IsSMQFull())
    {    
        ptSMSG = FW_GetNewSMsg();

        ptSMSG->ulMsgSeqNum   = l_ulMsgSeqNum++;
400a44df:	0a99      	s32i.n	a9, a10, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:140
History    : 
    1. 2014.11.11 JasonGuo create function
==============================================================================*/
LOCAL void MCU12_DRAM_TEXT FW_PushSMsg(void)
{
    l_pFWSMsgQueue->ulTail = (l_pFWSMsgQueue->ulTail+1)%SMQSIZE_PER_SUBSYSTEM;
400a44e1:	0020c0        	memw
400a44e4:	112472        	l32i	a7, a4, 68
400a44e7:	771b      	addi.n	a7, a7, 1
400a44e9:	147070        	extui	a7, a7, 0, 2
400a44ec:	0020c0        	memw
400a44ef:	116472        	s32i	a7, a4, 68
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:169
        ptSMSG->ulMsgParam[1] = pSMSG->ulMsgParam[1];
        
        FW_PushSMsg();
    }

    return;
400a44f2:	f00d      	ret.n

400a44f4 <FW_ReportSMSG+0x58>:
400a44f4:	f00d      	ret.n

400a44f6 <FW_ReportSMSG+0x5a>:
	...

400a44f8 <L3_ErrHIsNeedExtH..JH_1482204275>:
L3_ErrHIsNeedExtH():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:546
Usage      : 
History    : 
    1. 2016.8.2 JasonGuo create function
==============================================================================*/
LOCAL BOOL MCU2_DRAM_TEXT L3_ErrHIsNeedExtH(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a44f8:	f0c112        	addi	a1, a1, -16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:548
    BOOL bNeedExtH;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
400a44fb:	0258      	l32i.n	a5, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:546
Usage      : 
History    : 
    1. 2016.8.2 JasonGuo create function
==============================================================================*/
LOCAL BOOL MCU2_DRAM_TEXT L3_ErrHIsNeedExtH(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a44fd:	0109      	s32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:550
    BOOL bNeedExtH;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    
    if ((TRUE != ptReqEntry->bsBootUpOk) 
400a44ff:	0508      	l32i.n	a0, a5, 0
400a4501:	2238      	l32i.n	a3, a2, 8
400a4503:	426097        	bbci	a0, 9, 400a4549 <L3_ErrHIsNeedExtH..JH_1482204275+0x51>
400a4506:	3fe0b7        	bbsi	a0, 11, 400a4549 <L3_ErrHIsNeedExtH..JH_1482204275+0x51>
400a4509:	3ce0c7        	bbsi	a0, 12, 400a4549 <L3_ErrHIsNeedExtH..JH_1482204275+0x51>
400a450c:	39e3b7        	bbsi	a3, 11, 400a4549 <L3_ErrHIsNeedExtH..JH_1482204275+0x51>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:558
     || (TRUE == ptCtrlEntry->bsIntrReq))
    {
        bNeedExtH = FALSE;
    }
    // l2 needs to handle the with erase stauts fcmd.
    else if ((FCMD_REQ_TYPE_ERASE == ptReqEntry->bsReqType)
400a450f:	252200        	extui	a2, a0, 18, 3
400a4512:	2e2226        	beqi	a2, 2, 400a4544 <L3_ErrHIsNeedExtH..JH_1482204275+0x4c>

400a4515 <L3_ErrHIsNeedExtH..JH_1482204275+0x1d>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:564
          && (0 != ptReqEntry->ulReqStsAddr))
    {
        bNeedExtH = FALSE;
    }
    // l2 needs to handle the data+red Data-Blk Read fail.
    else if ((FCMD_REQ_TYPE_READ == ptReqEntry->bsReqType)
400a4515:	431226        	beqi	a2, 1, 400a455c <L3_ErrHIsNeedExtH..JH_1482204275+0x64>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:570
          && (0 != ptReqEntry->ulSpareAddr))
    {
        bNeedExtH = FALSE;
    }
    // 2D-TLC: l2 needs to handle tlc-program-fail.
    else if ((FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod)
400a4518:	4508      	l32i.n	a0, a5, 16
400a451a:	150000        	extui	a0, a0, 16, 2
400a451d:	432026        	beqi	a0, 2, 400a4564 <L3_ErrHIsNeedExtH..JH_1482204275+0x6c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:582
          && (FCMD_REQ_TYPE_READ == ptReqEntry->bsReqType))
    {
        bNeedExtH = FALSE;
    }
    /* If read rpmt uecc, return status to L2, not move block*/
    else if ((FCMD_REQ_SLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod && (PG_PER_SLC_BLK - 1) == ptReqEntry->tFlashDesc.bsVirPage) ||
400a4520:	049016        	beqz	a0, 400a456d <L3_ErrHIsNeedExtH..JH_1482204275+0x75>
400a4523:	2b2066        	bnei	a0, 2, 400a4552 <L3_ErrHIsNeedExtH..JH_1482204275+0x5a>
400a4526:	3538      	l32i.n	a3, a5, 12
400a4528:	fca522        	movi	a2, 0x5fc
400a452b:	a53430        	extui	a3, a3, 20, 11
400a452e:	20a237        	bge	a2, a3, 400a4552 <L3_ErrHIsNeedExtH..JH_1482204275+0x5a>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:585
             (FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod && (PG_PER_TLC_BLK - 3) <= ptReqEntry->tFlashDesc.bsVirPage))
    {
        DBG_Printf("Read RPMT page uecc fail, return status to L2\n");
400a4531:	f90a21        	l32r	a2, 400a295c <_mcu2dram_text_start+0x15c>
400a4534:	f8c101        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a4537:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:555
    if ((TRUE != ptReqEntry->bsBootUpOk) 
     || (TRUE == ptReqEntry->bsTableReq)
     || (TRUE == ptReqEntry->bsRDTEn)
     || (TRUE == ptCtrlEntry->bsIntrReq))
    {
        bNeedExtH = FALSE;
400a453a:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:593
    else
    {
        bNeedExtH = TRUE;
    }    
    
    return bNeedExtH;
400a453c:	0108      	l32i.n	a0, a1, 0
400a453e:	10c112        	addi	a1, a1, 16
400a4541:	f00d      	ret.n

400a4543 <L3_ErrHIsNeedExtH..JH_1482204275+0x4b>:
	...

400a4544 <L3_ErrHIsNeedExtH..JH_1482204275+0x4c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:558
     || (TRUE == ptCtrlEntry->bsIntrReq))
    {
        bNeedExtH = FALSE;
    }
    // l2 needs to handle the with erase stauts fcmd.
    else if ((FCMD_REQ_TYPE_ERASE == ptReqEntry->bsReqType)
400a4544:	1548      	l32i.n	a4, a5, 4
400a4546:	fcb416        	beqz	a4, 400a4515 <L3_ErrHIsNeedExtH..JH_1482204275+0x1d>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:555
    if ((TRUE != ptReqEntry->bsBootUpOk) 
     || (TRUE == ptReqEntry->bsTableReq)
     || (TRUE == ptReqEntry->bsRDTEn)
     || (TRUE == ptCtrlEntry->bsIntrReq))
    {
        bNeedExtH = FALSE;
400a4549:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:593
    else
    {
        bNeedExtH = TRUE;
    }    
    
    return bNeedExtH;
400a454b:	0108      	l32i.n	a0, a1, 0
400a454d:	10c112        	addi	a1, a1, 16
400a4550:	f00d      	ret.n

400a4552 <L3_ErrHIsNeedExtH..JH_1482204275+0x5a>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:590
        DBG_Printf("Read RPMT page uecc fail, return status to L2\n");
        bNeedExtH = FALSE;
    }
    else
    {
        bNeedExtH = TRUE;
400a4552:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:593
    }    
    
    return bNeedExtH;
400a4554:	0108      	l32i.n	a0, a1, 0
400a4556:	10c112        	addi	a1, a1, 16
400a4559:	f00d      	ret.n

400a455b <L3_ErrHIsNeedExtH..JH_1482204275+0x63>:
	...

400a455c <L3_ErrHIsNeedExtH..JH_1482204275+0x64>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:564
          && (0 != ptReqEntry->ulReqStsAddr))
    {
        bNeedExtH = FALSE;
    }
    // l2 needs to handle the data+red Data-Blk Read fail.
    else if ((FCMD_REQ_TYPE_READ == ptReqEntry->bsReqType)
400a455c:	2568      	l32i.n	a6, a5, 8
400a455e:	fe7656        	bnez	a6, 400a4549 <L3_ErrHIsNeedExtH..JH_1482204275+0x51>
400a4561:	ffecc6        	j	400a4518 <L3_ErrHIsNeedExtH..JH_1482204275+0x20>

400a4564 <L3_ErrHIsNeedExtH..JH_1482204275+0x6c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:570
          && (0 != ptReqEntry->ulSpareAddr))
    {
        bNeedExtH = FALSE;
    }
    // 2D-TLC: l2 needs to handle tlc-program-fail.
    else if ((FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod)
400a4564:	fe1216        	beqz	a2, 400a4549 <L3_ErrHIsNeedExtH..JH_1482204275+0x51>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:576
          && (FCMD_REQ_TYPE_WRITE == ptReqEntry->bsReqType))
    {
        bNeedExtH = FALSE;
    }
    // 2D-TLC: l3 needs to handle tlc-read-fail; -pending
    else if ((FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod)
400a4567:	b51266        	bnei	a2, 1, 400a4520 <L3_ErrHIsNeedExtH..JH_1482204275+0x28>
400a456a:	fff6c6        	j	400a4549 <L3_ErrHIsNeedExtH..JH_1482204275+0x51>

400a456d <L3_ErrHIsNeedExtH..JH_1482204275+0x75>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:582
          && (FCMD_REQ_TYPE_READ == ptReqEntry->bsReqType))
    {
        bNeedExtH = FALSE;
    }
    /* If read rpmt uecc, return status to L2, not move block*/
    else if ((FCMD_REQ_SLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod && (PG_PER_SLC_BLK - 1) == ptReqEntry->tFlashDesc.bsVirPage) ||
400a456d:	3578      	l32i.n	a7, a5, 12
400a456f:	ffa182        	movi	a8, 0x1ff
400a4572:	a57470        	extui	a7, a7, 20, 11
400a4575:	aa9787        	bne	a7, a8, 400a4523 <L3_ErrHIsNeedExtH..JH_1482204275+0x2b>
400a4578:	ffed46        	j	400a4531 <L3_ErrHIsNeedExtH..JH_1482204275+0x39>

400a457b <L3_ErrHIsNeedExtH..JH_1482204275+0x83>:
	...

400a457c <L3_ErrHSetParameter..OH_1482204275>:
L3_ErrHSetParameter():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:719
Usage      : 
History    : 
    1. 2016.8.12 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHSetParameter(U8 ucTLun, U8 ucVthShift)
{
400a457c:	e0c112        	addi	a1, a1, -32
400a457f:	51d9      	s32i.n	a13, a1, 20
400a4581:	61e9      	s32i.n	a14, a1, 24
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:727
    FLASH_ADDR tFlashAddr;

    tFlashAddr.ucPU = L3_GET_PU(ucTLun);
    tFlashAddr.ucLun = L3_GET_LUN_IN_PU(ucTLun);

    tRetryPara = HAL_FlashGetRetryParaTab(ucVthShift);
400a4583:	418b      	addi.n	a4, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:724
{
    BOOL bStatus;
    RETRY_TABLE tRetryPara;
    FLASH_ADDR tFlashAddr;

    tFlashAddr.ucPU = L3_GET_PU(ucTLun);
400a4585:	004122        	s8i	a2, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:719
Usage      : 
History    : 
    1. 2016.8.12 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHSetParameter(U8 ucTLun, U8 ucVthShift)
{
400a4588:	41c9      	s32i.n	a12, a1, 16
400a458a:	3109      	s32i.n	a0, a1, 12
400a458c:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:725
    BOOL bStatus;
    RETRY_TABLE tRetryPara;
    FLASH_ADDR tFlashAddr;

    tFlashAddr.ucPU = L3_GET_PU(ucTLun);
    tFlashAddr.ucLun = L3_GET_LUN_IN_PU(ucTLun);
400a458e:	000c      	movi.n	a0, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:727

    tRetryPara = HAL_FlashGetRetryParaTab(ucVthShift);
400a4590:	f8f421        	l32r	a2, 400a2960 <_mcu2dram_text_start+0x160>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:725
    BOOL bStatus;
    RETRY_TABLE tRetryPara;
    FLASH_ADDR tFlashAddr;

    tFlashAddr.ucPU = L3_GET_PU(ucTLun);
    tFlashAddr.ucLun = L3_GET_LUN_IN_PU(ucTLun);
400a4593:	014102        	s8i	a0, a1, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:727

    tRetryPara = HAL_FlashGetRetryParaTab(ucVthShift);
400a4596:	a02320        	addx4	a2, a3, a2
400a4599:	4c2222        	l32i	a2, a2, 0x130
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:450
{
    U8 ucPU, ucLun;
    ucPU  = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
    
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a459c:	003d      	mov.n	a3, a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:727
400a459e:	006422        	s32i	a2, a4, 0
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:450
400a45a1:	202cc0        	or	a2, a12, a12
400a45a4:	f8e701        	l32r	a0, 400a2940 <_mcu2dram_text_start+0x140>
400a45a7:	0000c0        	callx0	a0
400a45aa:	329c      	beqz.n	a2, 400a45c1 <L3_ErrHSetParameter..OH_1482204275+0x45>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1479
BOOL MCU2_DRAM_TEXT HAL_NfcSetFeature(FLASH_ADDR *pFlashAddr, U32 ulData, U8 ucAddr)
{
    NFCQ_ENTRY *pNFCQEntry;
    U8 ucPU, ucLun;
    
    ucPU = pFlashAddr->ucPU;
400a45ac:	0001e2        	l8ui	a14, a1, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1480
    ucLun = pFlashAddr->ucLun;
400a45af:	0101d2        	l8ui	a13, a1, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1482
    
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a45b2:	202ee0        	or	a2, a14, a14
400a45b5:	203dd0        	or	a3, a13, a13
400a45b8:	f8e201        	l32r	a0, 400a2940 <_mcu2dram_text_start+0x140>
400a45bb:	0000c0        	callx0	a0
400a45be:	01c256        	bnez	a2, 400a45de <L3_ErrHSetParameter..OH_1482204275+0x62>

400a45c1 <L3_ErrHSetParameter..OH_1482204275+0x45>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:731
    bStatus = HAL_FlashRetrySendParam(&tFlashAddr, &tRetryPara, FALSE, HAL_FLASH_RETRY_PARA_MAX);
    if (NFC_STATUS_SUCCESS != bStatus)
    {
        DBG_Printf("TLun%d SetParameter Send Fail.\n", ucTLun);
400a45c1:	f8e821        	l32r	a2, 400a2964 <_mcu2dram_text_start+0x164>
400a45c4:	0c3d      	mov.n	a3, a12
400a45c6:	f89c01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a45c9:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a45cc:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:89
400a45cf:	f8d721        	l32r	a2, 400a292c <_mcu2dram_text_start+0x12c>
400a45d2:	f89901        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a45d5:	0000c0        	callx0	a0
400a45d8:	ffff06        	j	400a45d8 <L3_ErrHSetParameter..OH_1482204275+0x5c>

400a45db <L3_ErrHSetParameter..OH_1482204275+0x5f>:
400a45db:	000000                                        ...

400a45de <L3_ErrHSetParameter..OH_1482204275+0x62>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1487
    {
        return NFC_STATUS_FAIL;
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
400a45de:	0d3d      	mov.n	a3, a13
400a45e0:	0e2d      	mov.n	a2, a14
400a45e2:	f8d801        	l32r	a0, 400a2944 <_mcu2dram_text_start+0x144>
400a45e5:	0000c0        	callx0	a0
400a45e8:	02dd      	mov.n	a13, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1488
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);
400a45ea:	031c      	movi.n	a3, 16
400a45ec:	f8d701        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a45ef:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a45f2:	520c      	movi.n	a2, 5
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1490
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsDmaByteEn = TRUE;
400a45f4:	250c      	movi.n	a5, 2
400a45f6:	0d48      	l32i.n	a4, a13, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1492
    
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
400a45f8:	618b      	addi.n	a6, a1, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1493
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);
400a45fa:	430c      	movi.n	a3, 4
400a45fc:	035d32        	s16i	a3, a13, 6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1492
    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsDmaByteEn = TRUE;
    
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
400a45ff:	010672        	l8ui	a7, a6, 1
400a4602:	025d72        	s16i	a7, a13, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1490
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsDmaByteEn = TRUE;
400a4605:	204450        	or	a4, a4, a5
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1495
    
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;
400a4608:	020662        	l8ui	a6, a6, 2
400a460b:	2d69      	s32i.n	a6, a13, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1490
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsDmaByteEn = TRUE;
400a460d:	006d42        	s32i	a4, a13, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a4610:	f8d001        	l32r	a0, 400a2950 <_mcu2dram_text_start+0x150>
400a4613:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1499
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);
400a4616:	530c      	movi.n	a3, 5
400a4618:	040c      	movi.n	a4, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a461a:	3d88      	l32i.n	a8, a13, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1499
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);
400a461c:	ffa052        	movi	a5, 255
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a461f:	808284        	insbits	a8, a2, 8, 16
400a4622:	3d89      	s32i.n	a8, a13, 12
400a4624:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1499
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);
400a4626:	f8cb01        	l32r	a0, 400a2954 <_mcu2dram_text_start+0x154>
400a4629:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:734
        DBG_Getch();
    }
    bStatus = HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun);
400a462c:	000122        	l8ui	a2, a1, 0
400a462f:	010132        	l8ui	a3, a1, 1
400a4632:	f8c901        	l32r	a0, 400a2958 <_mcu2dram_text_start+0x158>
400a4635:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:735
    if (NFC_STATUS_SUCCESS != bStatus)
400a4638:	191226        	beqi	a2, 1, 400a4655 <L3_ErrHSetParameter..OH_1482204275+0xd9>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:737
    {
        DBG_Printf("TLun%d SetParameter Wait Fail.\n", ucTLun);
400a463b:	f8cb21        	l32r	a2, 400a2968 <_mcu2dram_text_start+0x168>
400a463e:	0c3d      	mov.n	a3, a12
400a4640:	f87e01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a4643:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a4646:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:89
400a4649:	f8b821        	l32r	a2, 400a292c <_mcu2dram_text_start+0x12c>
400a464c:	f87b01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a464f:	0000c0        	callx0	a0
400a4652:	ffff06        	j	400a4652 <L3_ErrHSetParameter..OH_1482204275+0xd6>

400a4655 <L3_ErrHSetParameter..OH_1482204275+0xd9>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:747
    if (NFC_STATUS_SUCCESS != bStatus)
    {
        DBG_Printf("TLun%d SetRetryEn Send Fail.\n", ucTLun);
        DBG_Getch();
    }    
    bStatus = HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun);
400a4655:	000122        	l8ui	a2, a1, 0
400a4658:	010132        	l8ui	a3, a1, 1
400a465b:	f8bf01        	l32r	a0, 400a2958 <_mcu2dram_text_start+0x158>
400a465e:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:748
    if (NFC_STATUS_SUCCESS != bStatus)
400a4661:	1b1226        	beqi	a2, 1, 400a4680 <L3_ErrHSetParameter..OH_1482204275+0x104>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:750
    {
        DBG_Printf("TLun%d SetRetryEn Wait Fail.\n", ucTLun);
400a4664:	f8c221        	l32r	a2, 400a296c <_mcu2dram_text_start+0x16c>
400a4667:	203cc0        	or	a3, a12, a12
400a466a:	f87301        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a466d:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a4670:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:89
400a4673:	f8ae21        	l32r	a2, 400a292c <_mcu2dram_text_start+0x12c>
400a4676:	f87001        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a4679:	0000c0        	callx0	a0
400a467c:	ffff06        	j	400a467c <L3_ErrHSetParameter..OH_1482204275+0x100>

400a467f <L3_ErrHSetParameter..OH_1482204275+0x103>:
	...

400a4680 <L3_ErrHSetParameter..OH_1482204275+0x104>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:754
        DBG_Getch();
    }

    return;
400a4680:	41c8      	l32i.n	a12, a1, 16
400a4682:	51d8      	l32i.n	a13, a1, 20
400a4684:	61e8      	l32i.n	a14, a1, 24
400a4686:	3108      	l32i.n	a0, a1, 12
400a4688:	20c112        	addi	a1, a1, 32
400a468b:	f00d      	ret.n

400a468d <L3_ErrHSetParameter..OH_1482204275+0x111>:
L3_ErrHSetParameter..OH_1482204275():
400a468d:	000000                                        ...

400a4690 <L3_ErrHGetVthValue..AI_1482204275>:
L3_ErrHGetVthValue():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:802
    1. 2016.8.12 JasonGuo create function
==============================================================================*/
LOCAL U8 MCU2_DRAM_TEXT L3_ErrHGetVthValue(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U8 ucVthValue;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
400a4690:	0238      	l32i.n	a3, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:804

    if (TRUE == ptReqEntry->tFlashDesc.bsShiftRdEn)
400a4692:	f86a51        	l32r	a5, 400a283c <_mcu2dram_text_start+0x3c>
400a4695:	4348      	l32i.n	a4, a3, 16
400a4697:	000332        	l8ui	a3, a3, 0
400a469a:	212552        	l32i	a5, a5, 132
400a469d:	903330        	addx2	a3, a3, a3
400a46a0:	a02350        	addx4	a2, a3, a5
400a46a3:	09f447        	bbsi	a4, 20, 400a46b0 <L3_ErrHGetVthValue..AI_1482204275+0x20>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:808
    {
        ucVthValue = L3_FMGetVthShiftRd(ptReqEntry->bsTLun);
    }
    else if (FCMD_REQ_SLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod)
400a46a6:	155040        	extui	a5, a4, 16, 2
400a46a9:	858c      	beqz.n	a5, 400a46b5 <L3_ErrHGetVthValue..AI_1482204275+0x25>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:814
    {
        ucVthValue = L3_FMGetSlcVthRetry(ptReqEntry->bsTLun);
    }
    else
    {
        ucVthValue = L3_FMGetMlcVthRetry(ptReqEntry->bsTLun);
400a46ab:	090222        	l8ui	a2, a2, 9
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:817
    }
    
    return ucVthValue;
400a46ae:	f00d      	ret.n

400a46b0 <L3_ErrHGetVthValue..AI_1482204275+0x20>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:806
    U8 ucVthValue;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;

    if (TRUE == ptReqEntry->tFlashDesc.bsShiftRdEn)
    {
        ucVthValue = L3_FMGetVthShiftRd(ptReqEntry->bsTLun);
400a46b0:	050222        	l8ui	a2, a2, 5
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:817
    else
    {
        ucVthValue = L3_FMGetMlcVthRetry(ptReqEntry->bsTLun);
    }
    
    return ucVthValue;
400a46b3:	f00d      	ret.n

400a46b5 <L3_ErrHGetVthValue..AI_1482204275+0x25>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:810
    {
        ucVthValue = L3_FMGetVthShiftRd(ptReqEntry->bsTLun);
    }
    else if (FCMD_REQ_SLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod)
    {
        ucVthValue = L3_FMGetSlcVthRetry(ptReqEntry->bsTLun);
400a46b5:	080222        	l8ui	a2, a2, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:817
    else
    {
        ucVthValue = L3_FMGetMlcVthRetry(ptReqEntry->bsTLun);
    }
    
    return ucVthValue;
400a46b8:	f00d      	ret.n

400a46ba <L3_ErrHGetVthValue..AI_1482204275+0x2a>:
	...

400a46bc <L3_ErrHPreCondition..NH_1482204275>:
L3_ErrHPreCondition():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:697
    if (NFC_STATUS_SUCCESS != bStatus)
    {
        DBG_Printf("TLun%d PreCondition Send Fail.\n", ucTLun);
        DBG_Getch();
    }
    bStatus = HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun);
400a46bc:	030c      	movi.n	a3, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:684
Usage      : 
History    : 
    1. 2016.8.12 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHPreCondition(U8 ucTLun)
{
400a46be:	f0c112        	addi	a1, a1, -16
400a46c1:	11c9      	s32i.n	a12, a1, 4
400a46c3:	0109      	s32i.n	a0, a1, 0
400a46c5:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:697
    if (NFC_STATUS_SUCCESS != bStatus)
    {
        DBG_Printf("TLun%d PreCondition Send Fail.\n", ucTLun);
        DBG_Getch();
    }
    bStatus = HAL_NfcWaitStatus(tFlashAddr.ucPU, tFlashAddr.ucLun);
400a46c7:	f8a401        	l32r	a0, 400a2958 <_mcu2dram_text_start+0x158>
400a46ca:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:698
    if (NFC_STATUS_SUCCESS != bStatus)
400a46cd:	1b1226        	beqi	a2, 1, 400a46ec <L3_ErrHPreCondition..NH_1482204275+0x30>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:700
    {
        DBG_Printf("TLun%d PreCondition Wait Fail.\n", ucTLun);
400a46d0:	f8a821        	l32r	a2, 400a2970 <_mcu2dram_text_start+0x170>
400a46d3:	203cc0        	or	a3, a12, a12
400a46d6:	f85801        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a46d9:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a46dc:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:89
400a46df:	f89321        	l32r	a2, 400a292c <_mcu2dram_text_start+0x12c>
400a46e2:	f85501        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a46e5:	0000c0        	callx0	a0

400a46e8 <L3_ErrHPreCondition..NH_1482204275+0x2c>:
400a46e8:	ffff06        	j	400a46e8 <L3_ErrHPreCondition..NH_1482204275+0x2c>

400a46eb <L3_ErrHPreCondition..NH_1482204275+0x2f>:
	...

400a46ec <L3_ErrHPreCondition..NH_1482204275+0x30>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:704
        DBG_Getch();
    }

    return;
400a46ec:	11c8      	l32i.n	a12, a1, 4
400a46ee:	0108      	l32i.n	a0, a1, 0
400a46f0:	10c112        	addi	a1, a1, 16
400a46f3:	f00d      	ret.n

400a46f5 <L3_ErrHPreCondition..NH_1482204275+0x39>:
L3_ErrHPreCondition..NH_1482204275():
400a46f5:	000000                                        ...

400a46f8 <L3_ErrHRead>:
L3_ErrHRead():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:903
Usage      : 
History    : 
    1. 2016.8.12 JasonGuo create function
==============================================================================*/
BOOL MCU2_DRAM_TEXT L3_ErrHRead(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a46f8:	f0c112        	addi	a1, a1, -16
400a46fb:	0109      	s32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:906
    BOOL bResult;

    if (FALSE == ptCtrlEntry->ptErrHEntry->tUeccHCtrl.tRetry.bsUnSend)
400a46fd:	9208      	l32i.n	a0, a2, 36
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:903
Usage      : 
History    : 
    1. 2016.8.12 JasonGuo create function
==============================================================================*/
BOOL MCU2_DRAM_TEXT L3_ErrHRead(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a46ff:	11c9      	s32i.n	a12, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:906
    BOOL bResult;

    if (FALSE == ptCtrlEntry->ptErrHEntry->tUeccHCtrl.tRetry.bsUnSend)
400a4701:	2008      	l32i.n	a0, a0, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:903
Usage      : 
History    : 
    1. 2016.8.12 JasonGuo create function
==============================================================================*/
BOOL MCU2_DRAM_TEXT L3_ErrHRead(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a4703:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:906
    BOOL bResult;

    if (FALSE == ptCtrlEntry->ptErrHEntry->tUeccHCtrl.tRetry.bsUnSend)
400a4705:	2b6087        	bbci	a0, 8, 400a4734 <L3_ErrHRead+0x3c>

400a4708 <L3_ErrHRead+0x10>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:915
    }

    #ifdef SIM
    L3_DbgFCmdCntDec(ptCtrlEntry);
    #endif
    bResult = L3_IFSendNormalFCmd(ptCtrlEntry);
400a4708:	0c2d      	mov.n	a2, a12
400a470a:	f85c01        	l32r	a0, 400a287c <_mcu2dram_text_start+0x7c>
400a470d:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:922
    L3_DbgFCmdPrint(ptCtrlEntry, (TRUE == bResult) ? "ShiftRd_Success" : "ShiftRd_Fail");
    #endif

    ptCtrlEntry->ptErrHEntry->tUeccHCtrl.tRetry.bsUnSend = !bResult;

    return bResult;
400a4710:	0108      	l32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:920
    bResult = L3_IFSendNormalFCmd(ptCtrlEntry);
    #ifdef SIM
    L3_DbgFCmdPrint(ptCtrlEntry, (TRUE == bResult) ? "ShiftRd_Success" : "ShiftRd_Fail");
    #endif

    ptCtrlEntry->ptErrHEntry->tUeccHCtrl.tRetry.bsUnSend = !bResult;
400a4712:	160c      	movi.n	a6, 1
400a4714:	050c      	movi.n	a5, 0
400a4716:	9c48      	l32i.n	a4, a12, 36
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:922

    return bResult;
400a4718:	11c8      	l32i.n	a12, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:920
    bResult = L3_IFSendNormalFCmd(ptCtrlEntry);
    #ifdef SIM
    L3_DbgFCmdPrint(ptCtrlEntry, (TRUE == bResult) ? "ShiftRd_Success" : "ShiftRd_Fail");
    #endif

    ptCtrlEntry->ptErrHEntry->tUeccHCtrl.tRetry.bsUnSend = !bResult;
400a471a:	2438      	l32i.n	a3, a4, 8
400a471c:	835620        	moveqz	a5, a6, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:922

    return bResult;
400a471f:	10c112        	addi	a1, a1, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:920
    bResult = L3_IFSendNormalFCmd(ptCtrlEntry);
    #ifdef SIM
    L3_DbgFCmdPrint(ptCtrlEntry, (TRUE == bResult) ? "ShiftRd_Success" : "ShiftRd_Fail");
    #endif

    ptCtrlEntry->ptErrHEntry->tUeccHCtrl.tRetry.bsUnSend = !bResult;
400a4722:	115580        	slli	a5, a5, 8
400a4725:	ffae62        	movi	a6, 0xfffffeff
400a4728:	103360        	and	a3, a3, a6
400a472b:	203350        	or	a3, a3, a5
400a472e:	2439      	s32i.n	a3, a4, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:922

    return bResult;
400a4730:	f00d      	ret.n

400a4732 <L3_ErrHRead+0x3a>:
	...

400a4734 <L3_ErrHRead+0x3c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:908
{
    BOOL bResult;

    if (FALSE == ptCtrlEntry->ptErrHEntry->tUeccHCtrl.tRetry.bsUnSend)
    {        
        L3_RstDatTxCtrler(ptCtrlEntry);
400a4734:	f89001        	l32r	a0, 400a2974 <_mcu2dram_text_start+0x174>
400a4737:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:909
        L3_FMSetCmdType(ptCtrlEntry->ptReqEntry->bsTLun, INVALID_2F);
400a473a:	0c28      	l32i.n	a2, a12, 0
400a473c:	ffa032        	movi	a3, 255
400a473f:	000222        	l8ui	a2, a2, 0
400a4742:	f88d01        	l32r	a0, 400a2978 <_mcu2dram_text_start+0x178>
400a4745:	0000c0        	callx0	a0
400a4748:	ffef06        	j	400a4708 <L3_ErrHRead+0x10>

400a474b <L3_ErrHRead+0x53>:
	...

400a474c <L3_ErrHReDetectEmptyPage..DI_1482204275>:
L3_ErrHReDetectEmptyPage():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:937
History    : 
    1. 2016.8.23 JasonGuo create function
==============================================================================*/
LOCAL BOOL MCU2_DRAM_TEXT L3_ErrHReDetectEmptyPage(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    DBG_Printf("Host Read emptypage Redetect pending..\n");
400a474c:	f88c21        	l32r	a2, 400a297c <_mcu2dram_text_start+0x17c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:936
Usage      : 
History    : 
    1. 2016.8.23 JasonGuo create function
==============================================================================*/
LOCAL BOOL MCU2_DRAM_TEXT L3_ErrHReDetectEmptyPage(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a474f:	f0c112        	addi	a1, a1, -16
400a4752:	0109      	s32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:937
    DBG_Printf("Host Read emptypage Redetect pending..\n");
400a4754:	f83901        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a4757:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:938
    return TRUE;
400a475a:	120c      	movi.n	a2, 1
400a475c:	0108      	l32i.n	a0, a1, 0
400a475e:	10c112        	addi	a1, a1, 16
400a4761:	f00d      	ret.n

400a4763 <L3_ErrHReDetectEmptyPage..DI_1482204275+0x17>:
	...

400a4764 <L3_ErrHReadRetry..FI_1482204275>:
L3_ErrHReadRetry():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1050
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    usPhyPage = ptCtrlEntry->bsPhyPage;
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;
    bTLCMode = (FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
400a4764:	140c      	movi.n	a4, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1028
Usage      : 
History    : 
    1. 2016.8.2 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHReadRetry(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a4766:	a0c112        	addi	a1, a1, -96
400a4769:	1561c2        	s32i	a12, a1, 84
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1039
    U16 usVirBlk, usPhyBlk, usVirPage, usPhyPage;
    U32 ulLBA;
    BOOL bTLCMode;

    ucTLun = ptReqEntry->bsTLun;
    ucCmdType = ptCtrlEntry->bsCmdType;
400a476c:	060282        	l8ui	a8, a2, 6
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1028
Usage      : 
History    : 
    1. 2016.8.2 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHReadRetry(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a476f:	1661d2        	s32i	a13, a1, 88
400a4772:	146102        	s32i	a0, a1, 80
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1048
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    usPhyPage = ptCtrlEntry->bsPhyPage;
400a4775:	021272        	l16ui	a7, a2, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1050
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;
    bTLCMode = (FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
400a4778:	000c      	movi.n	a0, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1048
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    usPhyPage = ptCtrlEntry->bsPhyPage;
400a477a:	116172        	s32i	a7, a1, 68
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1028
Usage      : 
History    : 
    1. 2016.8.2 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHReadRetry(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a477d:	02dd      	mov.n	a13, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1039
    U16 usVirBlk, usPhyBlk, usVirPage, usPhyPage;
    U32 ulLBA;
    BOOL bTLCMode;

    ucTLun = ptReqEntry->bsTLun;
    ucCmdType = ptCtrlEntry->bsCmdType;
400a477f:	a189      	s32i.n	a8, a1, 40
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1029
History    : 
    1. 2016.8.2 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHReadRetry(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
400a4781:	0228      	l32i.n	a2, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1030
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
400a4783:	9dc8      	l32i.n	a12, a13, 36
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1049
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    usPhyPage = ptCtrlEntry->bsPhyPage;
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;
400a4785:	b238      	l32i.n	a3, a2, 44
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1041
    BOOL bTLCMode;

    ucTLun = ptReqEntry->bsTLun;
    ucCmdType = ptCtrlEntry->bsCmdType;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
    ucSecStart = ptReqEntry->tFlashDesc.bsSecStart;
400a4787:	100252        	l8ui	a5, a2, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1038
    U8 ucTLun, ucCmdType, ucPln, ucErrCode, ucSecStart, ucSecLen, ucLpnBitmap;
    U16 usVirBlk, usPhyBlk, usVirPage, usPhyPage;
    U32 ulLBA;
    BOOL bTLCMode;

    ucTLun = ptReqEntry->bsTLun;
400a478a:	000262        	l8ui	a6, a2, 0
400a478d:	9169      	s32i.n	a6, a1, 36
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1041
    ucCmdType = ptCtrlEntry->bsCmdType;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
    ucSecStart = ptReqEntry->tFlashDesc.bsSecStart;
400a478f:	c159      	s32i.n	a5, a1, 48
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1049
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    usPhyPage = ptCtrlEntry->bsPhyPage;
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;
400a4791:	126132        	s32i	a3, a1, 72
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1040
    U32 ulLBA;
    BOOL bTLCMode;

    ucTLun = ptReqEntry->bsTLun;
    ucCmdType = ptCtrlEntry->bsCmdType;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
400a4794:	4258      	l32i.n	a5, a2, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1052
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    usPhyPage = ptCtrlEntry->bsPhyPage;
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;
    bTLCMode = (FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
    
    L3_ErrHAssertCmd(ptReqEntry->bsReqType, ucErrCode);
400a4796:	000c32        	l8ui	a3, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1045
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
    ucSecStart = ptReqEntry->tFlashDesc.bsSecStart;
    ucSecLen = ptReqEntry->tFlashDesc.bsSecLen;
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
400a4799:	3268      	l32i.n	a6, a2, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1052
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    usPhyPage = ptCtrlEntry->bsPhyPage;
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;
    bTLCMode = (FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
    
    L3_ErrHAssertCmd(ptReqEntry->bsReqType, ucErrCode);
400a479b:	413130        	srli	a3, a3, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1045
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
    ucSecStart = ptReqEntry->tFlashDesc.bsSecStart;
    ucSecLen = ptReqEntry->tFlashDesc.bsSecLen;
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
400a479e:	948060        	extui	a8, a6, 0, 10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1046
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
400a47a1:	947a60        	extui	a7, a6, 10, 10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1052
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    usPhyPage = ptCtrlEntry->bsPhyPage;
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;
    bTLCMode = (FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
    
    L3_ErrHAssertCmd(ptReqEntry->bsReqType, ucErrCode);
400a47a4:	0228      	l32i.n	a2, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1046
    ucSecStart = ptReqEntry->tFlashDesc.bsSecStart;
    ucSecLen = ptReqEntry->tFlashDesc.bsSecLen;
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
400a47a6:	f179      	s32i.n	a7, a1, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1045
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
    ucSecStart = ptReqEntry->tFlashDesc.bsSecStart;
    ucSecLen = ptReqEntry->tFlashDesc.bsSecLen;
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
400a47a8:	136182        	s32i	a8, a1, 76
400a47ab:	747850        	extui	a7, a5, 8, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1047
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
400a47ae:	a56460        	extui	a6, a6, 20, 11
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1040
    U32 ulLBA;
    BOOL bTLCMode;

    ucTLun = ptReqEntry->bsTLun;
    ucCmdType = ptCtrlEntry->bsCmdType;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
400a47b1:	158250        	extui	a8, a5, 18, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1052
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    usPhyPage = ptCtrlEntry->bsPhyPage;
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;
    bTLCMode = (FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
    
    L3_ErrHAssertCmd(ptReqEntry->bsReqType, ucErrCode);
400a47b4:	252220        	extui	a2, a2, 18, 3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1040
    U32 ulLBA;
    BOOL bTLCMode;

    ucTLun = ptReqEntry->bsTLun;
    ucCmdType = ptCtrlEntry->bsCmdType;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
400a47b7:	b189      	s32i.n	a8, a1, 44
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1047
    ucSecLen = ptReqEntry->tFlashDesc.bsSecLen;
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
400a47b9:	106162        	s32i	a6, a1, 64
400a47bc:	d179      	s32i.n	a7, a1, 52
400a47be:	756850        	extui	a6, a5, 24, 8
400a47c1:	e169      	s32i.n	a6, a1, 56
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1050
    usPhyPage = ptCtrlEntry->bsPhyPage;
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;
    bTLCMode = (FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
400a47c3:	155050        	extui	a5, a5, 16, 2
400a47c6:	fec552        	addi	a5, a5, -2
400a47c9:	830450        	moveqz	a0, a4, a5
400a47cc:	8109      	s32i.n	a0, a1, 32
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1052
    
    L3_ErrHAssertCmd(ptReqEntry->bsReqType, ucErrCode);
400a47ce:	0098c5        	call0	400a515c <L3_ErrHAssertCmd..IH_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1054

    switch (ptUeccHCtrl->bsSubStage)
400a47d1:	050c02        	l8ui	a0, a12, 5
400a47d4:	060016        	beqz	a0, 400a4838 <L3_ErrHReadRetry..FI_1482204275+0xd4>
400a47d7:	ffc0b2        	addi	a11, a0, -1
400a47da:	0a0b16        	beqz	a11, 400a487e <L3_ErrHReadRetry..FI_1482204275+0x11a>
400a47dd:	fec022        	addi	a2, a0, -2
400a47e0:	0f4216        	beqz	a2, 400a48d8 <L3_ErrHReadRetry..FI_1482204275+0x174>
400a47e3:	fdc032        	addi	a3, a0, -3
400a47e6:	106316        	beqz	a3, 400a48f0 <L3_ErrHReadRetry..FI_1482204275+0x18c>
400a47e9:	1b4026        	beqi	a0, 4, 400a4808 <L3_ErrHReadRetry..FI_1482204275+0xa4>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1175
            }
            break;
        }
        default:
        {
            DBG_Printf("ReadRetry Stage Error.0x%x\n", (U32)ptCtrlEntry);
400a47ec:	f86521        	l32r	a2, 400a2980 <_mcu2dram_text_start+0x180>
400a47ef:	203dd0        	or	a3, a13, a13
400a47f2:	f81101        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a47f5:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a47f8:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:89
400a47fb:	f84c21        	l32r	a2, 400a292c <_mcu2dram_text_start+0x12c>
400a47fe:	f80e01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a4801:	0000c0        	callx0	a0

400a4804 <L3_ErrHReadRetry..FI_1482204275+0xa0>:
400a4804:	ffff06        	j	400a4804 <L3_ErrHReadRetry..FI_1482204275+0xa0>

400a4807 <L3_ErrHReadRetry..FI_1482204275+0xa3>:
	...

400a4808 <L3_ErrHReadRetry..FI_1482204275+0xa4>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1131
                ucTLun, usVirBlk, usPhyBlk, usVirPage, usPhyPage, ucCmdType, ucPln, ucSecStart, ucSecLen, ucLpnBitmap, ulLBA, ptUeccHCtrl->tRetry.bsTime);
            break;
        }
        case READ_RETRY_READ_CHK:
        {
            if (TRUE == ptErrHEntry->bsErrHold)
400a4808:	0c48      	l32i.n	a4, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1133
            {
                ptUeccHCtrl->tRetry.bsTime++;
400a480a:	2c58      	l32i.n	a5, a12, 8
400a480c:	044940        	extui	a4, a4, 9, 1
400a480f:	1e3416        	beqz	a4, 400a49f6 <L3_ErrHReadRetry..FI_1482204275+0x292>
400a4812:	416150        	srli	a6, a5, 1
400a4815:	661b      	addi.n	a6, a6, 1
400a4817:	231654        	insbits	a5, a6, 1, 7
400a481a:	2c59      	s32i.n	a5, a12, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1134
                if (HAL_FLASH_READRETRY_CNT > ptUeccHCtrl->tRetry.bsTime)
400a481c:	645150        	extui	a5, a5, 1, 7
400a481f:	02b5a6        	blti	a5, 16, 400a4825 <L3_ErrHReadRetry..FI_1482204275+0xc1>
400a4822:	00a3c6        	j	400a4ab5 <L3_ErrHReadRetry..FI_1482204275+0x351>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1180
            DBG_Printf("ReadRetry Stage Error.0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }
    
    return;
400a4825:	142102        	l32i	a0, a1, 80
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1136
            if (TRUE == ptErrHEntry->bsErrHold)
            {
                ptUeccHCtrl->tRetry.bsTime++;
                if (HAL_FLASH_READRETRY_CNT > ptUeccHCtrl->tRetry.bsTime)
                {
                    ptUeccHCtrl->bsSubStage = READ_RETRY_READ;
400a4828:	370c      	movi.n	a7, 3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1180
            DBG_Printf("ReadRetry Stage Error.0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }
    
    return;
400a482a:	1621d2        	l32i	a13, a1, 88
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1136
            if (TRUE == ptErrHEntry->bsErrHold)
            {
                ptUeccHCtrl->tRetry.bsTime++;
                if (HAL_FLASH_READRETRY_CNT > ptUeccHCtrl->tRetry.bsTime)
                {
                    ptUeccHCtrl->bsSubStage = READ_RETRY_READ;
400a482d:	054c72        	s8i	a7, a12, 5
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1180
            DBG_Printf("ReadRetry Stage Error.0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }
    
    return;
400a4830:	1521c2        	l32i	a12, a1, 84
400a4833:	60c112        	addi	a1, a1, 96
400a4836:	f00d      	ret.n

400a4838 <L3_ErrHReadRetry..FI_1482204275+0xd4>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1058

    switch (ptUeccHCtrl->bsSubStage)
    {
        case READ_RETRY_INIT:
        {
            L3_ErrHPreCondition(ucTLun);
400a4838:	9128      	l32i.n	a2, a1, 36
400a483a:	ffe805        	call0	400a46bc <L3_ErrHPreCondition..NH_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1064

            ptUeccHCtrl->tRetry.bsEnable = TRUE;
            ptUeccHCtrl->tRetry.bsTime = 0;

            ptUeccHCtrl->bsSubStage = READ_RETRY_SHIFTRD;
            DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x PreCondition\n",
400a483d:	f158      	l32i.n	a5, a1, 60
400a483f:	102162        	l32i	a6, a1, 64
400a4842:	112172        	l32i	a7, a1, 68
400a4845:	b108      	l32i.n	a0, a1, 44
400a4847:	a128      	l32i.n	a2, a1, 40
400a4849:	122182        	l32i	a8, a1, 72
400a484c:	e198      	l32i.n	a9, a1, 56
400a484e:	d1a8      	l32i.n	a10, a1, 52
400a4850:	c1b8      	l32i.n	a11, a1, 48
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1060
    {
        case READ_RETRY_INIT:
        {
            L3_ErrHPreCondition(ucTLun);

            ptUeccHCtrl->tRetry.bsEnable = TRUE;
400a4852:	2c38      	l32i.n	a3, a12, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1063
            ptUeccHCtrl->tRetry.bsTime = 0;

            ptUeccHCtrl->bsSubStage = READ_RETRY_SHIFTRD;
400a4854:	140c      	movi.n	a4, 1
400a4856:	054c42        	s8i	a4, a12, 5
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1060
    {
        case READ_RETRY_INIT:
        {
            L3_ErrHPreCondition(ucTLun);

            ptUeccHCtrl->tRetry.bsEnable = TRUE;
400a4859:	203340        	or	a3, a3, a4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1061
            ptUeccHCtrl->tRetry.bsTime = 0;
400a485c:	01af42        	movi	a4, -255
400a485f:	103340        	and	a3, a3, a4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1064

            ptUeccHCtrl->bsSubStage = READ_RETRY_SHIFTRD;
            DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x PreCondition\n",
400a4862:	132142        	l32i	a4, a1, 76
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1061
        case READ_RETRY_INIT:
        {
            L3_ErrHPreCondition(ucTLun);

            ptUeccHCtrl->tRetry.bsEnable = TRUE;
            ptUeccHCtrl->tRetry.bsTime = 0;
400a4865:	2c39      	s32i.n	a3, a12, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1064

            ptUeccHCtrl->bsSubStage = READ_RETRY_SHIFTRD;
            DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x PreCondition\n",
400a4867:	21b9      	s32i.n	a11, a1, 8
400a4869:	31a9      	s32i.n	a10, a1, 12
400a486b:	4199      	s32i.n	a9, a1, 16
400a486d:	5189      	s32i.n	a8, a1, 20
400a486f:	9138      	l32i.n	a3, a1, 36
400a4871:	0129      	s32i.n	a2, a1, 0
400a4873:	1109      	s32i.n	a0, a1, 4
400a4875:	f84321        	l32r	a2, 400a2984 <_mcu2dram_text_start+0x184>
400a4878:	f7f001        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a487b:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1070
                ucTLun, usVirBlk, usPhyBlk, usVirPage, usPhyPage, ucCmdType, ucPln, ucSecStart, ucSecLen, ucLpnBitmap, ulLBA);
            //break;
        }
        case READ_RETRY_SHIFTRD:
        {
            if (FALSE == ptUeccHCtrl->tRetry.bsUnSend)
400a487e:	2c58      	l32i.n	a5, a12, 8
400a4880:	045850        	extui	a5, a5, 8, 1
400a4883:	21b516        	beqz	a5, 400a4aa2 <L3_ErrHReadRetry..FI_1482204275+0x33e>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1075
            {
                L3_ErrHSetParameter(ucTLun, L3_ErrHGetVthValue(ptCtrlEntry));
            }

            if (TRUE == L3_ErrHRead(ptCtrlEntry))
400a4886:	0d2d      	mov.n	a2, a13
400a4888:	ffe6c5        	call0	400a46f8 <L3_ErrHRead>
400a488b:	ffc262        	addi	a6, a2, -1
400a488e:	282616        	beqz	a6, 400a4b14 <L3_ErrHReadRetry..FI_1482204275+0x3b0>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1080
            {
                ptUeccHCtrl->bsSubStage = READ_RETRY_SHIFTRD_CHK;
            }

            DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x ShiftRdVth=%d\n",
400a4891:	0d2d      	mov.n	a2, a13
400a4893:	91c8      	l32i.n	a12, a1, 36
400a4895:	ffdf85        	call0	400a4690 <L3_ErrHGetVthValue..AI_1482204275>
400a4898:	0c3d      	mov.n	a3, a12
400a489a:	132142        	l32i	a4, a1, 76
400a489d:	f158      	l32i.n	a5, a1, 60
400a489f:	102162        	l32i	a6, a1, 64
400a48a2:	6129      	s32i.n	a2, a1, 24
400a48a4:	122172        	l32i	a7, a1, 72
400a48a7:	e188      	l32i.n	a8, a1, 56
400a48a9:	d198      	l32i.n	a9, a1, 52
400a48ab:	c1a8      	l32i.n	a10, a1, 48
400a48ad:	b1b8      	l32i.n	a11, a1, 44
400a48af:	a1d8      	l32i.n	a13, a1, 40
400a48b1:	01d9      	s32i.n	a13, a1, 0
400a48b3:	11b9      	s32i.n	a11, a1, 4
400a48b5:	21a9      	s32i.n	a10, a1, 8
400a48b7:	3199      	s32i.n	a9, a1, 12
400a48b9:	4189      	s32i.n	a8, a1, 16
400a48bb:	5179      	s32i.n	a7, a1, 20
400a48bd:	f83221        	l32r	a2, 400a2988 <_mcu2dram_text_start+0x188>
400a48c0:	112172        	l32i	a7, a1, 68
400a48c3:	f7dd01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a48c6:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1180
            DBG_Printf("ReadRetry Stage Error.0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }
    
    return;
400a48c9:	1521c2        	l32i	a12, a1, 84
400a48cc:	1621d2        	l32i	a13, a1, 88
400a48cf:	142102        	l32i	a0, a1, 80
400a48d2:	60c112        	addi	a1, a1, 96
400a48d5:	f00d      	ret.n

400a48d7 <L3_ErrHReadRetry..FI_1482204275+0x173>:
	...

400a48d8 <L3_ErrHReadRetry..FI_1482204275+0x174>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1086
                ucTLun, usVirBlk, usPhyBlk, usVirPage, usPhyPage, ucCmdType, ucPln, ucSecStart, ucSecLen, ucLpnBitmap, ulLBA, L3_ErrHGetVthValue(ptCtrlEntry));
            break;
        }
        case READ_RETRY_SHIFTRD_CHK:
        {
            if (TRUE == ptErrHEntry->bsErrHold)
400a48d8:	0c08      	l32i.n	a0, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1088
            {
                ptUeccHCtrl->bsSubStage = READ_RETRY_READ;
400a48da:	320c      	movi.n	a2, 3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1086
                ucTLun, usVirBlk, usPhyBlk, usVirPage, usPhyPage, ucCmdType, ucPln, ucSecStart, ucSecLen, ucLpnBitmap, ulLBA, L3_ErrHGetVthValue(ptCtrlEntry));
            break;
        }
        case READ_RETRY_SHIFTRD_CHK:
        {
            if (TRUE == ptErrHEntry->bsErrHold)
400a48dc:	6e6097        	bbci	a0, 9, 400a494e <L3_ErrHReadRetry..FI_1482204275+0x1ea>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1180
            DBG_Printf("ReadRetry Stage Error.0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }
    
    return;
400a48df:	142102        	l32i	a0, a1, 80
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1088
        }
        case READ_RETRY_SHIFTRD_CHK:
        {
            if (TRUE == ptErrHEntry->bsErrHold)
            {
                ptUeccHCtrl->bsSubStage = READ_RETRY_READ;
400a48e2:	054c22        	s8i	a2, a12, 5
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1180
            DBG_Printf("ReadRetry Stage Error.0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }
    
    return;
400a48e5:	1621d2        	l32i	a13, a1, 88
400a48e8:	1521c2        	l32i	a12, a1, 84
400a48eb:	60c112        	addi	a1, a1, 96
400a48ee:	f00d      	ret.n

400a48f0 <L3_ErrHReadRetry..FI_1482204275+0x18c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1115
            }
            break;
        }
        case READ_RETRY_READ:
        {
            if (FALSE == ptUeccHCtrl->tRetry.bsUnSend)
400a48f0:	2c08      	l32i.n	a0, a12, 8
400a48f2:	07e087        	bbsi	a0, 8, 400a48fd <L3_ErrHReadRetry..FI_1482204275+0x199>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1117
            {
                L3_ErrHSetParameter(ucTLun, ptUeccHCtrl->tRetry.bsTime);
400a48f5:	9128      	l32i.n	a2, a1, 36
400a48f7:	643100        	extui	a3, a0, 1, 7
400a48fa:	ffc805        	call0	400a457c <L3_ErrHSetParameter..OH_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1120
            }

            if (TRUE == L3_ErrHRead(ptCtrlEntry))
400a48fd:	0d2d      	mov.n	a2, a13
400a48ff:	ffdf85        	call0	400a46f8 <L3_ErrHRead>
400a4902:	9108      	l32i.n	a0, a1, 36
400a4904:	320b      	addi.n	a3, a2, -1
400a4906:	202316        	beqz	a3, 400a4b0c <L3_ErrHReadRetry..FI_1482204275+0x3a8>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1125
            {
                ptUeccHCtrl->bsSubStage = READ_RETRY_READ_CHK;
            }

            DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x RetryTime=%d\n",
400a4909:	132142        	l32i	a4, a1, 76
400a490c:	f158      	l32i.n	a5, a1, 60
400a490e:	102162        	l32i	a6, a1, 64
400a4911:	112172        	l32i	a7, a1, 68
400a4914:	003d      	mov.n	a3, a0
400a4916:	a128      	l32i.n	a2, a1, 40
400a4918:	c1d8      	l32i.n	a13, a1, 48
400a491a:	d1b8      	l32i.n	a11, a1, 52
400a491c:	e1a8      	l32i.n	a10, a1, 56
400a491e:	122192        	l32i	a9, a1, 72
400a4921:	5199      	s32i.n	a9, a1, 20
400a4923:	41a9      	s32i.n	a10, a1, 16
400a4925:	31b9      	s32i.n	a11, a1, 12
400a4927:	21d9      	s32i.n	a13, a1, 8
400a4929:	0129      	s32i.n	a2, a1, 0
400a492b:	b108      	l32i.n	a0, a1, 44
400a492d:	1109      	s32i.n	a0, a1, 4
400a492f:	080c82        	l8ui	a8, a12, 8
400a4932:	f81621        	l32r	a2, 400a298c <_mcu2dram_text_start+0x18c>
400a4935:	418180        	srli	a8, a8, 1
400a4938:	6189      	s32i.n	a8, a1, 24
400a493a:	f7bf01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a493d:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1180
            DBG_Printf("ReadRetry Stage Error.0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }
    
    return;
400a4940:	1621d2        	l32i	a13, a1, 88
400a4943:	1521c2        	l32i	a12, a1, 84
400a4946:	142102        	l32i	a0, a1, 80
400a4949:	60c112        	addi	a1, a1, 96
400a494c:	f00d      	ret.n

400a494e <L3_ErrHReadRetry..FI_1482204275+0x1ea>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1092
            {
                ptUeccHCtrl->bsSubStage = READ_RETRY_READ;
            }
            else
            {
                if (TRUE == L3_IFIsFCmdFinished(ptCtrlEntry))
400a494e:	0d2d      	mov.n	a2, a13
400a4950:	f81401        	l32r	a0, 400a29a0 <_mcu2dram_text_start+0x1a0>
400a4953:	0000c0        	callx0	a0
400a4956:	021226        	beqi	a2, 1, 400a495c <L3_ErrHReadRetry..FI_1482204275+0x1f8>
400a4959:	ffdb06        	j	400a48c9 <L3_ErrHReadRetry..FI_1482204275+0x165>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1095
                {
                    // For L2
                    if (TRUE != L3_IFIsRecycled(ptCtrlEntry))
400a495c:	202dd0        	or	a2, a13, a13
400a495f:	f81101        	l32r	a0, 400a29a4 <_mcu2dram_text_start+0x1a4>
400a4962:	0000c0        	callx0	a0
400a4965:	2d1226        	beqi	a2, 1, 400a4996 <L3_ErrHReadRetry..FI_1482204275+0x232>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:285
    U8 ucLunInSuperPu;
    U16 PBN;

    for (ucLunInSuperPu = 0; ucLunInSuperPu < LUN_NUM_PER_SUPERPU; ucLunInSuperPu++)
    {
        PBN = pVBT[ucSuperPu]->m_VBT[VirBlockAddr].PhysicalBlockAddr[ucLunInSuperPu];
400a4968:	f7b551        	l32r	a5, 400a283c <_mcu2dram_text_start+0x3c>
400a496b:	9148      	l32i.n	a4, a1, 36
400a496d:	132162        	l32i	a6, a1, 76
400a4970:	a04450        	addx4	a4, a4, a5
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:286
        pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bWeak = bTrue;
400a4973:	7c2452        	l32i	a5, a4, 0x1f0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:285
    U8 ucLunInSuperPu;
    U16 PBN;

    for (ucLunInSuperPu = 0; ucLunInSuperPu < LUN_NUM_PER_SUPERPU; ucLunInSuperPu++)
    {
        PBN = pVBT[ucSuperPu]->m_VBT[VirBlockAddr].PhysicalBlockAddr[ucLunInSuperPu];
400a4976:	9c2442        	l32i	a4, a4, 0x270
400a4979:	1166c0        	slli	a6, a6, 4
400a497c:	446a      	add.n	a4, a4, a6
400a497e:	001442        	l16ui	a4, a4, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:286
        pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bWeak = bTrue;
400a4981:	b04450        	addx8	a4, a4, a5
400a4984:	f80351        	l32r	a5, 400a2990 <_mcu2dram_text_start+0x190>
400a4987:	1438      	l32i.n	a3, a4, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1098
                    {
                        L2_PBIT_Set_Weak(L2_GET_SPU(ucTLun), usVirBlk, TRUE);
                        L3_IFUpdtReqStatus(ptCtrlEntry);
400a4989:	0d2d      	mov.n	a2, a13
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:286
400a498b:	203350        	or	a3, a3, a5
400a498e:	1439      	s32i.n	a3, a4, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1098
400a4990:	f7d701        	l32r	a0, 400a28ec <_mcu2dram_text_start+0xec>
400a4993:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1102
                    }

                    // For L3
                    L3_ErrHTerminate(ucTLun, bTLCMode);
400a4996:	9128      	l32i.n	a2, a1, 36
400a4998:	082132        	l32i	a3, a1, 32
400a499b:	006a45        	call0	400a5040 <L3_ErrHTerminate..PH_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1105
                    ptUeccHCtrl->bsSubStage = READ_RETRY_SUCCESS;

                    L3_FCMDQSetIntrEptr(ucTLun, INVALID_DPTR, FALSE);
400a499e:	9128      	l32i.n	a2, a1, 36
400a49a0:	ffa032        	movi	a3, 255
400a49a3:	040c      	movi.n	a4, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1103
                        L3_IFUpdtReqStatus(ptCtrlEntry);
                    }

                    // For L3
                    L3_ErrHTerminate(ucTLun, bTLCMode);
                    ptUeccHCtrl->bsSubStage = READ_RETRY_SUCCESS;
400a49a5:	560c      	movi.n	a6, 5
400a49a7:	054c62        	s8i	a6, a12, 5
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1105

                    L3_FCMDQSetIntrEptr(ucTLun, INVALID_DPTR, FALSE);
400a49aa:	f7d201        	l32r	a0, 400a28f4 <_mcu2dram_text_start+0xf4>
400a49ad:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1107
                                        
                    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x ShiftRdVth=%d Success.\n",
400a49b0:	0d2d      	mov.n	a2, a13
400a49b2:	ffcdc5        	call0	400a4690 <L3_ErrHGetVthValue..AI_1482204275>
400a49b5:	9138      	l32i.n	a3, a1, 36
400a49b7:	132142        	l32i	a4, a1, 76
400a49ba:	f158      	l32i.n	a5, a1, 60
400a49bc:	102162        	l32i	a6, a1, 64
400a49bf:	6129      	s32i.n	a2, a1, 24
400a49c1:	122172        	l32i	a7, a1, 72
400a49c4:	e188      	l32i.n	a8, a1, 56
400a49c6:	d198      	l32i.n	a9, a1, 52
400a49c8:	c1a8      	l32i.n	a10, a1, 48
400a49ca:	b1b8      	l32i.n	a11, a1, 44
400a49cc:	a1c8      	l32i.n	a12, a1, 40
400a49ce:	01c9      	s32i.n	a12, a1, 0
400a49d0:	11b9      	s32i.n	a11, a1, 4
400a49d2:	21a9      	s32i.n	a10, a1, 8
400a49d4:	3199      	s32i.n	a9, a1, 12
400a49d6:	046182        	s32i	a8, a1, 16
400a49d9:	056172        	s32i	a7, a1, 20
400a49dc:	f7ee21        	l32r	a2, 400a2994 <_mcu2dram_text_start+0x194>
400a49df:	112172        	l32i	a7, a1, 68
400a49e2:	f79501        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a49e5:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1180
            DBG_Printf("ReadRetry Stage Error.0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }
    
    return;
400a49e8:	1521c2        	l32i	a12, a1, 84
400a49eb:	1621d2        	l32i	a13, a1, 88
400a49ee:	142102        	l32i	a0, a1, 80
400a49f1:	60c112        	addi	a1, a1, 96
400a49f4:	f00d      	ret.n

400a49f6 <L3_ErrHReadRetry..FI_1482204275+0x292>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1151
                        ucTLun, usVirBlk, usPhyBlk, usVirPage, usPhyPage, ucCmdType, ucPln, ucSecStart, ucSecLen, ucLpnBitmap, ulLBA, ptUeccHCtrl->tRetry.bsTime);
                }
            }
            else
            {
                if (TRUE == L3_IFIsFCmdFinished(ptCtrlEntry))
400a49f6:	0d2d      	mov.n	a2, a13
400a49f8:	f7ea01        	l32r	a0, 400a29a0 <_mcu2dram_text_start+0x1a0>
400a49fb:	0000c0        	callx0	a0
400a49fe:	020b      	addi.n	a0, a2, -1
400a4a00:	ec5056        	bnez	a0, 400a48c9 <L3_ErrHReadRetry..FI_1482204275+0x165>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1154
                {
                    // For L2
                    if (TRUE != L3_IFIsRecycled(ptCtrlEntry))
400a4a03:	202dd0        	or	a2, a13, a13
400a4a06:	f7e701        	l32r	a0, 400a29a4 <_mcu2dram_text_start+0x1a4>
400a4a09:	0000c0        	callx0	a0
400a4a0c:	2e1226        	beqi	a2, 1, 400a4a3e <L3_ErrHReadRetry..FI_1482204275+0x2da>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:285
    U8 ucLunInSuperPu;
    U16 PBN;

    for (ucLunInSuperPu = 0; ucLunInSuperPu < LUN_NUM_PER_SUPERPU; ucLunInSuperPu++)
    {
        PBN = pVBT[ucSuperPu]->m_VBT[VirBlockAddr].PhysicalBlockAddr[ucLunInSuperPu];
400a4a0f:	f78b41        	l32r	a4, 400a283c <_mcu2dram_text_start+0x3c>
400a4a12:	9138      	l32i.n	a3, a1, 36
400a4a14:	132152        	l32i	a5, a1, 76
400a4a17:	a03340        	addx4	a3, a3, a4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:286
        pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bWeak = bTrue;
400a4a1a:	7c2342        	l32i	a4, a3, 0x1f0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:285
    U8 ucLunInSuperPu;
    U16 PBN;

    for (ucLunInSuperPu = 0; ucLunInSuperPu < LUN_NUM_PER_SUPERPU; ucLunInSuperPu++)
    {
        PBN = pVBT[ucSuperPu]->m_VBT[VirBlockAddr].PhysicalBlockAddr[ucLunInSuperPu];
400a4a1d:	9c2332        	l32i	a3, a3, 0x270
400a4a20:	1155c0        	slli	a5, a5, 4
400a4a23:	335a      	add.n	a3, a3, a5
400a4a25:	001332        	l16ui	a3, a3, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:286
        pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bWeak = bTrue;
400a4a28:	b03340        	addx8	a3, a3, a4
400a4a2b:	f7d941        	l32r	a4, 400a2990 <_mcu2dram_text_start+0x190>
400a4a2e:	1328      	l32i.n	a2, a3, 4
400a4a30:	202240        	or	a2, a2, a4
400a4a33:	1329      	s32i.n	a2, a3, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1157
                    {
                        L2_PBIT_Set_Weak(L2_GET_SPU(ucTLun), usVirBlk, TRUE);
                        L3_IFUpdtReqStatus(ptCtrlEntry);
400a4a35:	202dd0        	or	a2, a13, a13
400a4a38:	f7ad01        	l32r	a0, 400a28ec <_mcu2dram_text_start+0xec>
400a4a3b:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1161
                    }

                    // For L3                    
                    L3_ErrHTerminate(ucTLun, bTLCMode);
400a4a3e:	9128      	l32i.n	a2, a1, 36
400a4a40:	082132        	l32i	a3, a1, 32
400a4a43:	005fc5        	call0	400a5040 <L3_ErrHTerminate..PH_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1163
                    ptUeccHCtrl->bsSubStage = READ_RETRY_SUCCESS;       
                    L3_ErrHUpdtVthRetry(ptCtrlEntry);
400a4a46:	0d2d      	mov.n	a2, a13
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1162
                        L3_IFUpdtReqStatus(ptCtrlEntry);
                    }

                    // For L3                    
                    L3_ErrHTerminate(ucTLun, bTLCMode);
                    ptUeccHCtrl->bsSubStage = READ_RETRY_SUCCESS;       
400a4a48:	550c      	movi.n	a5, 5
400a4a4a:	054c52        	s8i	a5, a12, 5
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1163
                    L3_ErrHUpdtVthRetry(ptCtrlEntry);
400a4a4d:	005a45        	call0	400a4ff4 <L3_ErrHUpdtVthRetry..BI_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1165

                    L3_FCMDQSetIntrEptr(ucTLun, INVALID_DPTR, FALSE);
400a4a50:	9128      	l32i.n	a2, a1, 36
400a4a52:	ffa032        	movi	a3, 255
400a4a55:	040c      	movi.n	a4, 0
400a4a57:	f7a701        	l32r	a0, 400a28f4 <_mcu2dram_text_start+0xf4>
400a4a5a:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1167

                    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x RetryTime=%d Success.\n",
400a4a5d:	9138      	l32i.n	a3, a1, 36
400a4a5f:	132142        	l32i	a4, a1, 76
400a4a62:	f158      	l32i.n	a5, a1, 60
400a4a64:	102162        	l32i	a6, a1, 64
400a4a67:	112172        	l32i	a7, a1, 68
400a4a6a:	a128      	l32i.n	a2, a1, 40
400a4a6c:	b108      	l32i.n	a0, a1, 44
400a4a6e:	c1d8      	l32i.n	a13, a1, 48
400a4a70:	d1b8      	l32i.n	a11, a1, 52
400a4a72:	e1a8      	l32i.n	a10, a1, 56
400a4a74:	122192        	l32i	a9, a1, 72
400a4a77:	5199      	s32i.n	a9, a1, 20
400a4a79:	41a9      	s32i.n	a10, a1, 16
400a4a7b:	31b9      	s32i.n	a11, a1, 12
400a4a7d:	21d9      	s32i.n	a13, a1, 8
400a4a7f:	1109      	s32i.n	a0, a1, 4
400a4a81:	0129      	s32i.n	a2, a1, 0
400a4a83:	080c82        	l8ui	a8, a12, 8
400a4a86:	f7c421        	l32r	a2, 400a2998 <_mcu2dram_text_start+0x198>
400a4a89:	418180        	srli	a8, a8, 1
400a4a8c:	6189      	s32i.n	a8, a1, 24
400a4a8e:	f76a01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a4a91:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1180
            DBG_Printf("ReadRetry Stage Error.0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }
    
    return;
400a4a94:	1521c2        	l32i	a12, a1, 84
400a4a97:	1621d2        	l32i	a13, a1, 88
400a4a9a:	142102        	l32i	a0, a1, 80
400a4a9d:	60c112        	addi	a1, a1, 96
400a4aa0:	f00d      	ret.n

400a4aa2 <L3_ErrHReadRetry..FI_1482204275+0x33e>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1072
        }
        case READ_RETRY_SHIFTRD:
        {
            if (FALSE == ptUeccHCtrl->tRetry.bsUnSend)
            {
                L3_ErrHSetParameter(ucTLun, L3_ErrHGetVthValue(ptCtrlEntry));
400a4aa2:	0d2d      	mov.n	a2, a13
400a4aa4:	ffbe85        	call0	400a4690 <L3_ErrHGetVthValue..AI_1482204275>
400a4aa7:	203220        	or	a3, a2, a2
400a4aaa:	092122        	l32i	a2, a1, 36
400a4aad:	ffacc5        	call0	400a457c <L3_ErrHSetParameter..OH_1482204275>
400a4ab0:	ff7486        	j	400a4886 <L3_ErrHReadRetry..FI_1482204275+0x122>

400a4ab3 <L3_ErrHReadRetry..FI_1482204275+0x34f>:
	...

400a4ab5 <L3_ErrHReadRetry..FI_1482204275+0x351>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1141
                    ptUeccHCtrl->bsSubStage = READ_RETRY_READ;
                }
                else
                {
                    // For L3                    
                    L3_ErrHTerminate(ucTLun, bTLCMode);
400a4ab5:	9128      	l32i.n	a2, a1, 36
400a4ab7:	8138      	l32i.n	a3, a1, 32
400a4ab9:	005845        	call0	400a5040 <L3_ErrHTerminate..PH_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1143
                    ptUeccHCtrl->bsSubStage = READ_RETRY_FAIL;
                    L3_ErrHUpdtVthRetry(ptCtrlEntry);
400a4abc:	0d2d      	mov.n	a2, a13
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1142
                }
                else
                {
                    // For L3                    
                    L3_ErrHTerminate(ucTLun, bTLCMode);
                    ptUeccHCtrl->bsSubStage = READ_RETRY_FAIL;
400a4abe:	630c      	movi.n	a3, 6
400a4ac0:	054c32        	s8i	a3, a12, 5
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1143
                    L3_ErrHUpdtVthRetry(ptCtrlEntry);
400a4ac3:	005305        	call0	400a4ff4 <L3_ErrHUpdtVthRetry..BI_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1145

                    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x RetryTime=%d Fail.\n",
400a4ac6:	9138      	l32i.n	a3, a1, 36
400a4ac8:	132142        	l32i	a4, a1, 76
400a4acb:	f158      	l32i.n	a5, a1, 60
400a4acd:	102162        	l32i	a6, a1, 64
400a4ad0:	112172        	l32i	a7, a1, 68
400a4ad3:	a128      	l32i.n	a2, a1, 40
400a4ad5:	b108      	l32i.n	a0, a1, 44
400a4ad7:	c1d8      	l32i.n	a13, a1, 48
400a4ad9:	d1b8      	l32i.n	a11, a1, 52
400a4adb:	e1a8      	l32i.n	a10, a1, 56
400a4add:	122192        	l32i	a9, a1, 72
400a4ae0:	5199      	s32i.n	a9, a1, 20
400a4ae2:	41a9      	s32i.n	a10, a1, 16
400a4ae4:	31b9      	s32i.n	a11, a1, 12
400a4ae6:	21d9      	s32i.n	a13, a1, 8
400a4ae8:	1109      	s32i.n	a0, a1, 4
400a4aea:	0129      	s32i.n	a2, a1, 0
400a4aec:	080c82        	l8ui	a8, a12, 8
400a4aef:	f7ab21        	l32r	a2, 400a299c <_mcu2dram_text_start+0x19c>
400a4af2:	418180        	srli	a8, a8, 1
400a4af5:	6189      	s32i.n	a8, a1, 24
400a4af7:	f75001        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a4afa:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1180
            DBG_Printf("ReadRetry Stage Error.0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }
    
    return;
400a4afd:	1521c2        	l32i	a12, a1, 84
400a4b00:	1621d2        	l32i	a13, a1, 88
400a4b03:	142102        	l32i	a0, a1, 80
400a4b06:	60c112        	addi	a1, a1, 96
400a4b09:	f00d      	ret.n

400a4b0b <L3_ErrHReadRetry..FI_1482204275+0x3a7>:
	...

400a4b0c <L3_ErrHReadRetry..FI_1482204275+0x3a8>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1122
                L3_ErrHSetParameter(ucTLun, ptUeccHCtrl->tRetry.bsTime);
            }

            if (TRUE == L3_ErrHRead(ptCtrlEntry))
            {
                ptUeccHCtrl->bsSubStage = READ_RETRY_READ_CHK;
400a4b0c:	430c      	movi.n	a3, 4
400a4b0e:	054c32        	s8i	a3, a12, 5
400a4b11:	ff7d06        	j	400a4909 <L3_ErrHReadRetry..FI_1482204275+0x1a5>

400a4b14 <L3_ErrHReadRetry..FI_1482204275+0x3b0>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1077
                L3_ErrHSetParameter(ucTLun, L3_ErrHGetVthValue(ptCtrlEntry));
            }

            if (TRUE == L3_ErrHRead(ptCtrlEntry))
            {
                ptUeccHCtrl->bsSubStage = READ_RETRY_SHIFTRD_CHK;
400a4b14:	240c      	movi.n	a4, 2
400a4b16:	054c42        	s8i	a4, a12, 5
400a4b19:	ff5d06        	j	400a4891 <L3_ErrHReadRetry..FI_1482204275+0x12d>

400a4b1c <L3_ErrHEmptyPage..EI_1482204275>:
L3_ErrHEmptyPage():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:951
Usage      : 
History    : 
    1. 2016.8.2 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHEmptyPage(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a4b1c:	90c112        	addi	a1, a1, -112
400a4b1f:	176102        	s32i	a0, a1, 92
400a4b22:	1b61f2        	s32i	a15, a1, 108
400a4b25:	1a61e2        	s32i	a14, a1, 104
400a4b28:	1861c2        	s32i	a12, a1, 96
400a4b2b:	1961d2        	s32i	a13, a1, 100
400a4b2e:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:952
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
400a4b30:	02d8      	l32i.n	a13, a2, 0
400a4b32:	1561d2        	s32i	a13, a1, 84
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:953
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
400a4b35:	9ce8      	l32i.n	a14, a12, 36
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:961
    U16 usVirBlk, usPhyBlk, usVirPage, usPhyPage;
    BOOL bBootUpOk, bHostRdEn;
    
    ucTLun = ptReqEntry->bsTLun;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
400a4b37:	3d28      	l32i.n	a2, a13, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:964
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
400a4b39:	4df8      	l32i.n	a15, a13, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:962
    BOOL bBootUpOk, bHostRdEn;
    
    ucTLun = ptReqEntry->bsTLun;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
400a4b3b:	943a20        	extui	a3, a2, 10, 10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:964
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
400a4b3e:	1502f0        	extui	a0, a15, 18, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:961
    U16 usVirBlk, usPhyBlk, usVirPage, usPhyPage;
    BOOL bBootUpOk, bHostRdEn;
    
    ucTLun = ptReqEntry->bsTLun;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
400a4b41:	944020        	extui	a4, a2, 0, 10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:967
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
    usPhyPage = ptCtrlEntry->bsPhyPage;
    bBootUpOk = ptReqEntry->bsBootUpOk;
    bHostRdEn = ptReqEntry->tFlashDesc.bsHostRdEn;
400a4b44:	05f5f0        	extui	a15, a15, 21, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:961
    U16 usVirBlk, usPhyBlk, usVirPage, usPhyPage;
    BOOL bBootUpOk, bHostRdEn;
    
    ucTLun = ptReqEntry->bsTLun;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
400a4b47:	136142        	s32i	a4, a1, 76
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:962
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
400a4b4a:	106132        	s32i	a3, a1, 64
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:964
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
400a4b4d:	126102        	s32i	a0, a1, 72
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:960
    U8 ucTLun, ucErrCode, ucPln;
    U16 usVirBlk, usPhyBlk, usVirPage, usPhyPage;
    BOOL bBootUpOk, bHostRdEn;
    
    ucTLun = ptReqEntry->bsTLun;
    ucErrCode = ptErrHEntry->bsErrCode;
400a4b50:	000e32        	l8ui	a3, a14, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:965
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
    usPhyPage = ptCtrlEntry->bsPhyPage;
400a4b53:	021c02        	l16ui	a0, a12, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:963
    
    ucTLun = ptReqEntry->bsTLun;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
400a4b56:	a52420        	extui	a2, a2, 20, 11
400a4b59:	146122        	s32i	a2, a1, 80
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:965
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
    usPhyPage = ptCtrlEntry->bsPhyPage;
400a4b5c:	116102        	s32i	a0, a1, 68
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:966
    bBootUpOk = ptReqEntry->bsBootUpOk;
400a4b5f:	0d28      	l32i.n	a2, a13, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:960
    U8 ucTLun, ucErrCode, ucPln;
    U16 usVirBlk, usPhyBlk, usVirPage, usPhyPage;
    BOOL bBootUpOk, bHostRdEn;
    
    ucTLun = ptReqEntry->bsTLun;
    ucErrCode = ptErrHEntry->bsErrCode;
400a4b61:	413130        	srli	a3, a3, 1
400a4b64:	166132        	s32i	a3, a1, 88
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:959

    U8 ucTLun, ucErrCode, ucPln;
    U16 usVirBlk, usPhyBlk, usVirPage, usPhyPage;
    BOOL bBootUpOk, bHostRdEn;
    
    ucTLun = ptReqEntry->bsTLun;
400a4b67:	000dd2        	l8ui	a13, a13, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:966
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
    usPhyPage = ptCtrlEntry->bsPhyPage;
    bBootUpOk = ptReqEntry->bsBootUpOk;
400a4b6a:	044920        	extui	a4, a2, 9, 1
400a4b6d:	f149      	s32i.n	a4, a1, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:969
    bHostRdEn = ptReqEntry->tFlashDesc.bsHostRdEn;
    
    L3_ErrHAssertCmd(ptReqEntry->bsReqType, ucErrCode);
400a4b6f:	252220        	extui	a2, a2, 18, 3
400a4b72:	005e85        	call0	400a515c <L3_ErrHAssertCmd..IH_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:971
    
    if (TRUE != bHostRdEn)
400a4b75:	00a102        	movi	a0, 0x100
400a4b78:	581f26        	beqi	a15, 1, 400a4bd4 <L3_ErrHEmptyPage..EI_1482204275+0xb8>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:973
    {
        ptErrHEntry->bsErrRpt = TRUE;
400a4b7b:	0e58      	l32i.n	a5, a14, 0
400a4b7d:	160c      	movi.n	a6, 1
400a4b7f:	205560        	or	a5, a5, a6
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:974
        ptErrHEntry->bsEmptyPg = TRUE;
400a4b82:	205500        	or	a5, a5, a0
400a4b85:	006e52        	s32i	a5, a14, 0

400a4b88 <L3_ErrHEmptyPage..EI_1482204275+0x6c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:999

            DBG_Getch();
        }
    }
    
    if (TRUE != L3_IFIsRecycled(ptCtrlEntry))
400a4b88:	0c2d      	mov.n	a2, a12
400a4b8a:	f78601        	l32r	a0, 400a29a4 <_mcu2dram_text_start+0x1a4>
400a4b8d:	0000c0        	callx0	a0
400a4b90:	081226        	beqi	a2, 1, 400a4b9c <L3_ErrHEmptyPage..EI_1482204275+0x80>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1001
    {
        L3_IFUpdtReqStatus(ptCtrlEntry);
400a4b93:	202cc0        	or	a2, a12, a12
400a4b96:	f75501        	l32r	a0, 400a28ec <_mcu2dram_text_start+0xec>
400a4b99:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1004
    }
    
    L3_FCMDQSetIntrEptr(ucTLun, INVALID_DPTR, FALSE);
400a4b9c:	0d2d      	mov.n	a2, a13
400a4b9e:	ffa032        	movi	a3, 255
400a4ba1:	040c      	movi.n	a4, 0
400a4ba3:	0f21c2        	l32i	a12, a1, 60
400a4ba6:	f75301        	l32r	a0, 400a28f4 <_mcu2dram_text_start+0xf4>
400a4ba9:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1007
    ptErrHEntry->tUeccHCtrl.bsSubStage = EMPTY_PG_HANDLE_DONE;
    
    L3_ErrHFailLog(ucTLun, ucErrCode);
400a4bac:	0d2d      	mov.n	a2, a13
400a4bae:	162132        	l32i	a3, a1, 88
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1005
    {
        L3_IFUpdtReqStatus(ptCtrlEntry);
    }
    
    L3_FCMDQSetIntrEptr(ucTLun, INVALID_DPTR, FALSE);
    ptErrHEntry->tUeccHCtrl.bsSubStage = EMPTY_PG_HANDLE_DONE;
400a4bb1:	370c      	movi.n	a7, 3
400a4bb3:	054e72        	s8i	a7, a14, 5
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1007
    
    L3_ErrHFailLog(ucTLun, ucErrCode);
400a4bb6:	003a85        	call0	400a4f60 <L3_ErrHFailLog..DH_1482204275>
400a4bb9:	8c0b      	addi.n	a8, a12, -1
400a4bbb:	0c6816        	beqz	a8, 400a4c85 <L3_ErrHEmptyPage..EI_1482204275+0x169>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1014
    {
        DBG_Printf("TLun%d Blk%d_%d Pln%d Page%d_%d SecRange=%d_%d_%d HostRd=%d MergeRd=%d EmptyPage\n", ucTLun, usVirBlk, usPhyBlk, ucPln, usVirPage, usPhyPage,
            ptReqEntry->tFlashDesc.bsSecStart, ptReqEntry->tFlashDesc.bsSecLen, ptReqEntry->tFlashDesc.bsLpnBitmap, bHostRdEn, ptReqEntry->tFlashDesc.bsMergeRdEn);
    }        
    
    return;
400a4bbe:	1a21e2        	l32i	a14, a1, 104
400a4bc1:	1821c2        	l32i	a12, a1, 96
400a4bc4:	1921d2        	l32i	a13, a1, 100
400a4bc7:	1b21f2        	l32i	a15, a1, 108
400a4bca:	172102        	l32i	a0, a1, 92
400a4bcd:	70c112        	addi	a1, a1, 112
400a4bd0:	f00d      	ret.n

400a4bd2 <L3_ErrHEmptyPage..EI_1482204275+0xb6>:
	...

400a4bd4 <L3_ErrHEmptyPage..EI_1482204275+0xb8>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:979
        ptErrHEntry->bsEmptyPg = TRUE;
    }
    else
    {
        // How to deal with the host read empty page situation ?        
        if (TRUE != ptReqEntry->bsBootUpOk)
400a4bd4:	152192        	l32i	a9, a1, 84
400a4bd7:	0998      	l32i.n	a9, a9, 0
400a4bd9:	17e997        	bbsi	a9, 9, 400a4bf4 <L3_ErrHEmptyPage..EI_1482204275+0xd8>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:984
        {   
            // BookUpOk is not finish, ignore it directly.[sata->update buf-bitmap; nvme->bypass ecc and redo]
            ptErrHEntry->bsErrRpt = FALSE;
            ptErrHEntry->bsEmptyPg = TRUE;
            L3_HostReadEmpty(ptCtrlEntry);
400a4bdc:	0c2d      	mov.n	a2, a12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:982
    {
        // How to deal with the host read empty page situation ?        
        if (TRUE != ptReqEntry->bsBootUpOk)
        {   
            // BookUpOk is not finish, ignore it directly.[sata->update buf-bitmap; nvme->bypass ecc and redo]
            ptErrHEntry->bsErrRpt = FALSE;
400a4bde:	0ea8      	l32i.n	a10, a14, 0
400a4be0:	eb7c      	movi.n	a11, -2
400a4be2:	10aab0        	and	a10, a10, a11
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:983
            ptErrHEntry->bsEmptyPg = TRUE;
400a4be5:	20aa00        	or	a10, a10, a0
400a4be8:	0ea9      	s32i.n	a10, a14, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:984
            L3_HostReadEmpty(ptCtrlEntry);
400a4bea:	f77101        	l32r	a0, 400a29b0 <_mcu2dram_text_start+0x1b0>
400a4bed:	0000c0        	callx0	a0
400a4bf0:	ffe506        	j	400a4b88 <L3_ErrHEmptyPage..EI_1482204275+0x6c>

400a4bf3 <L3_ErrHEmptyPage..EI_1482204275+0xd7>:
	...

400a4bf4 <L3_ErrHEmptyPage..EI_1482204275+0xd8>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:989
        }
        else
        {   
            // BootUpOk is finish, getch directly temporarily.
            L3_ErrHReDetectEmptyPage(ptCtrlEntry);
400a4bf4:	0c2d      	mov.n	a2, a12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:991

            DBG_Printf("TLun%d Blk%d_%d[%d_%d_%d_%d] Pln%d Page%d_%d SecRange=%d_%d_%d MergeRd=%d HostRd EmptyPage\n", ucTLun, usVirBlk, usPhyBlk,
400a4bf6:	1021c2        	l32i	a12, a1, 64
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:989
            L3_HostReadEmpty(ptCtrlEntry);
        }
        else
        {   
            // BootUpOk is finish, getch directly temporarily.
            L3_ErrHReDetectEmptyPage(ptCtrlEntry);
400a4bf9:	ffb505        	call0	400a474c <L3_ErrHReDetectEmptyPage..DI_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:991

            DBG_Printf("TLun%d Blk%d_%d[%d_%d_%d_%d] Pln%d Page%d_%d SecRange=%d_%d_%d MergeRd=%d HostRd EmptyPage\n", ucTLun, usVirBlk, usPhyBlk,
400a4bfc:	0d2d      	mov.n	a2, a13
400a4bfe:	040c      	movi.n	a4, 0
400a4c00:	0c3d      	mov.n	a3, a12
400a4c02:	f70b01        	l32r	a0, 400a2830 <_mcu2dram_text_start+0x30>
400a4c05:	0000c0        	callx0	a0
400a4c08:	0c3d      	mov.n	a3, a12
400a4c0a:	c129      	s32i.n	a2, a1, 48
400a4c0c:	140c      	movi.n	a4, 1
400a4c0e:	0d2d      	mov.n	a2, a13
400a4c10:	f70801        	l32r	a0, 400a2830 <_mcu2dram_text_start+0x30>
400a4c13:	0000c0        	callx0	a0
400a4c16:	0c3d      	mov.n	a3, a12
400a4c18:	240c      	movi.n	a4, 2
400a4c1a:	1121e2        	l32i	a14, a1, 68
400a4c1d:	d129      	s32i.n	a2, a1, 52
400a4c1f:	1221f2        	l32i	a15, a1, 72
400a4c22:	0d2d      	mov.n	a2, a13
400a4c24:	f70301        	l32r	a0, 400a2830 <_mcu2dram_text_start+0x30>
400a4c27:	0000c0        	callx0	a0
400a4c2a:	0c3d      	mov.n	a3, a12
400a4c2c:	e129      	s32i.n	a2, a1, 56
400a4c2e:	340c      	movi.n	a4, 3
400a4c30:	0d2d      	mov.n	a2, a13
400a4c32:	f6ff01        	l32r	a0, 400a2830 <_mcu2dram_text_start+0x30>
400a4c35:	0000c0        	callx0	a0
400a4c38:	0d3d      	mov.n	a3, a13
400a4c3a:	132142        	l32i	a4, a1, 76
400a4c3d:	0c5d      	mov.n	a5, a12
400a4c3f:	c168      	l32i.n	a6, a1, 48
400a4c41:	d178      	l32i.n	a7, a1, 52
400a4c43:	21f9      	s32i.n	a15, a1, 8
400a4c45:	41e9      	s32i.n	a14, a1, 16
400a4c47:	1129      	s32i.n	a2, a1, 4
400a4c49:	152102        	l32i	a0, a1, 84
400a4c4c:	1421a2        	l32i	a10, a1, 80
400a4c4f:	e1b8      	l32i.n	a11, a1, 56
400a4c51:	01b9      	s32i.n	a11, a1, 0
400a4c53:	31a9      	s32i.n	a10, a1, 12
400a4c55:	100092        	l8ui	a9, a0, 16
400a4c58:	5199      	s32i.n	a9, a1, 20
400a4c5a:	110082        	l8ui	a8, a0, 17
400a4c5d:	6189      	s32i.n	a8, a1, 24
400a4c5f:	130022        	l8ui	a2, a0, 19
400a4c62:	7129      	s32i.n	a2, a1, 28
400a4c64:	4008      	l32i.n	a0, a0, 16
400a4c66:	f75021        	l32r	a2, 400a29a8 <_mcu2dram_text_start+0x1a8>
400a4c69:	050700        	extui	a0, a0, 23, 1
400a4c6c:	8109      	s32i.n	a0, a1, 32
400a4c6e:	f6f201        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a4c71:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a4c74:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:89
400a4c77:	f72d21        	l32r	a2, 400a292c <_mcu2dram_text_start+0x12c>
400a4c7a:	f6ef01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a4c7d:	0000c0        	callx0	a0
400a4c80:	ffff06        	j	400a4c80 <L3_ErrHEmptyPage..EI_1482204275+0x164>

400a4c83 <L3_ErrHEmptyPage..EI_1482204275+0x167>:
	...

400a4c85 <L3_ErrHEmptyPage..EI_1482204275+0x169>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1010
    ptErrHEntry->tUeccHCtrl.bsSubStage = EMPTY_PG_HANDLE_DONE;
    
    L3_ErrHFailLog(ucTLun, ucErrCode);
    if (TRUE == bBootUpOk)
    {
        DBG_Printf("TLun%d Blk%d_%d Pln%d Page%d_%d SecRange=%d_%d_%d HostRd=%d MergeRd=%d EmptyPage\n", ucTLun, usVirBlk, usPhyBlk, ucPln, usVirPage, usPhyPage,
400a4c85:	132142        	l32i	a4, a1, 76
400a4c88:	102152        	l32i	a5, a1, 64
400a4c8b:	122162        	l32i	a6, a1, 72
400a4c8e:	142172        	l32i	a7, a1, 80
400a4c91:	1521c2        	l32i	a12, a1, 84
400a4c94:	0d3d      	mov.n	a3, a13
400a4c96:	112182        	l32i	a8, a1, 68
400a4c99:	0189      	s32i.n	a8, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1014
            ptReqEntry->tFlashDesc.bsSecStart, ptReqEntry->tFlashDesc.bsSecLen, ptReqEntry->tFlashDesc.bsLpnBitmap, bHostRdEn, ptReqEntry->tFlashDesc.bsMergeRdEn);
    }        
    
    return;
400a4c9b:	1921d2        	l32i	a13, a1, 100
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1010
    ptErrHEntry->tUeccHCtrl.bsSubStage = EMPTY_PG_HANDLE_DONE;
    
    L3_ErrHFailLog(ucTLun, ucErrCode);
    if (TRUE == bBootUpOk)
    {
        DBG_Printf("TLun%d Blk%d_%d Pln%d Page%d_%d SecRange=%d_%d_%d HostRd=%d MergeRd=%d EmptyPage\n", ucTLun, usVirBlk, usPhyBlk, ucPln, usVirPage, usPhyPage,
400a4c9e:	100c22        	l8ui	a2, a12, 16
400a4ca1:	1129      	s32i.n	a2, a1, 4
400a4ca3:	f74221        	l32r	a2, 400a29ac <_mcu2dram_text_start+0x1ac>
400a4ca6:	110c02        	l8ui	a0, a12, 17
400a4ca9:	2109      	s32i.n	a0, a1, 8
400a4cab:	130ce2        	l8ui	a14, a12, 19
400a4cae:	31e9      	s32i.n	a14, a1, 12
400a4cb0:	41f9      	s32i.n	a15, a1, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1014
            ptReqEntry->tFlashDesc.bsSecStart, ptReqEntry->tFlashDesc.bsSecLen, ptReqEntry->tFlashDesc.bsLpnBitmap, bHostRdEn, ptReqEntry->tFlashDesc.bsMergeRdEn);
    }        
    
    return;
400a4cb2:	1a21e2        	l32i	a14, a1, 104
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1010
    ptErrHEntry->tUeccHCtrl.bsSubStage = EMPTY_PG_HANDLE_DONE;
    
    L3_ErrHFailLog(ucTLun, ucErrCode);
    if (TRUE == bBootUpOk)
    {
        DBG_Printf("TLun%d Blk%d_%d Pln%d Page%d_%d SecRange=%d_%d_%d HostRd=%d MergeRd=%d EmptyPage\n", ucTLun, usVirBlk, usPhyBlk, ucPln, usVirPage, usPhyPage,
400a4cb5:	4cc8      	l32i.n	a12, a12, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1014
            ptReqEntry->tFlashDesc.bsSecStart, ptReqEntry->tFlashDesc.bsSecLen, ptReqEntry->tFlashDesc.bsLpnBitmap, bHostRdEn, ptReqEntry->tFlashDesc.bsMergeRdEn);
    }        
    
    return;
400a4cb7:	1b21f2        	l32i	a15, a1, 108
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1010
    ptErrHEntry->tUeccHCtrl.bsSubStage = EMPTY_PG_HANDLE_DONE;
    
    L3_ErrHFailLog(ucTLun, ucErrCode);
    if (TRUE == bBootUpOk)
    {
        DBG_Printf("TLun%d Blk%d_%d Pln%d Page%d_%d SecRange=%d_%d_%d HostRd=%d MergeRd=%d EmptyPage\n", ucTLun, usVirBlk, usPhyBlk, ucPln, usVirPage, usPhyPage,
400a4cba:	05c7c0        	extui	a12, a12, 23, 1
400a4cbd:	51c9      	s32i.n	a12, a1, 20
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1014
            ptReqEntry->tFlashDesc.bsSecStart, ptReqEntry->tFlashDesc.bsSecLen, ptReqEntry->tFlashDesc.bsLpnBitmap, bHostRdEn, ptReqEntry->tFlashDesc.bsMergeRdEn);
    }        
    
    return;
400a4cbf:	1821c2        	l32i	a12, a1, 96
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1010
    ptErrHEntry->tUeccHCtrl.bsSubStage = EMPTY_PG_HANDLE_DONE;
    
    L3_ErrHFailLog(ucTLun, ucErrCode);
    if (TRUE == bBootUpOk)
    {
        DBG_Printf("TLun%d Blk%d_%d Pln%d Page%d_%d SecRange=%d_%d_%d HostRd=%d MergeRd=%d EmptyPage\n", ucTLun, usVirBlk, usPhyBlk, ucPln, usVirPage, usPhyPage,
400a4cc2:	f6dd01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a4cc5:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1014
            ptReqEntry->tFlashDesc.bsSecStart, ptReqEntry->tFlashDesc.bsSecLen, ptReqEntry->tFlashDesc.bsLpnBitmap, bHostRdEn, ptReqEntry->tFlashDesc.bsMergeRdEn);
    }        
    
    return;
400a4cc8:	172102        	l32i	a0, a1, 92
400a4ccb:	70c112        	addi	a1, a1, 112
400a4cce:	f00d      	ret.n

400a4cd0 <L3_ErrHPrcUeccFail..GI_1482204275>:
L3_ErrHPrcUeccFail():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1194
Usage      : Block Replacement (Option) or Request Report
History    : 
    1. 2016.8.2 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHPrcUeccFail(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a4cd0:	90a032        	movi	a3, 144
400a4cd3:	c01130        	sub	a1, a1, a3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1217
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    usPhyPage = ptCtrlEntry->bsPhyPage;
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;
    
    L3_FMSetCmdType(ucTLun, INVALID_2F);
400a4cd6:	ffa032        	movi	a3, 255
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1194
Usage      : Block Replacement (Option) or Request Report
History    : 
    1. 2016.8.2 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHPrcUeccFail(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a4cd9:	1e61f2        	s32i	a15, a1, 120
400a4cdc:	1c61d2        	s32i	a13, a1, 112
400a4cdf:	1a6102        	s32i	a0, a1, 104
400a4ce2:	1d61e2        	s32i	a14, a1, 116
400a4ce5:	1b61c2        	s32i	a12, a1, 108
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1214
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    usPhyPage = ptCtrlEntry->bsPhyPage;
400a4ce8:	021262        	l16ui	a6, a2, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1205
    U16 usVirBlk, usPhyBlk, usVirPage, usPhyPage;
    U32 ulLBA;
    BOOL bNeedExtH;

    ucTLun = ptReqEntry->bsTLun;
    ucCmdType = ptCtrlEntry->bsCmdType;
400a4ceb:	060272        	l8ui	a7, a2, 6
400a4cee:	e179      	s32i.n	a7, a1, 56
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1214
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    usPhyPage = ptCtrlEntry->bsPhyPage;
400a4cf0:	156162        	s32i	a6, a1, 84
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1194
Usage      : Block Replacement (Option) or Request Report
History    : 
    1. 2016.8.2 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHPrcUeccFail(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a4cf3:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1196
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
400a4cf5:	9ce8      	l32i.n	a14, a12, 36
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1195
History    : 
    1. 2016.8.2 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHPrcUeccFail(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
400a4cf7:	0228      	l32i.n	a2, a2, 0
400a4cf9:	d129      	s32i.n	a2, a1, 52
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1210
    ucCmdType = ptCtrlEntry->bsCmdType;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
    ucSecStart = ptReqEntry->tFlashDesc.bsSecStart;
    ucSecLen = ptReqEntry->tFlashDesc.bsSecLen;
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
400a4cfb:	000e02        	l8ui	a0, a14, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1204
    U8 ucTLun, ucCmdType, ucPln, ucErrCode, ucSecStart, ucSecLen, ucLpnBitmap;
    U16 usVirBlk, usPhyBlk, usVirPage, usPhyPage;
    U32 ulLBA;
    BOOL bNeedExtH;

    ucTLun = ptReqEntry->bsTLun;
400a4cfe:	0002d2        	l8ui	a13, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1207
    ucCmdType = ptCtrlEntry->bsCmdType;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
    ucSecStart = ptReqEntry->tFlashDesc.bsSecStart;
400a4d01:	100252        	l8ui	a5, a2, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1215
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    usPhyPage = ptCtrlEntry->bsPhyPage;
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;
400a4d04:	b248      	l32i.n	a4, a2, 44
400a4d06:	166142        	s32i	a4, a1, 88
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1207
    BOOL bNeedExtH;

    ucTLun = ptReqEntry->bsTLun;
    ucCmdType = ptCtrlEntry->bsCmdType;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
    ucSecStart = ptReqEntry->tFlashDesc.bsSecStart;
400a4d09:	106152        	s32i	a5, a1, 64
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1210
    ucSecLen = ptReqEntry->tFlashDesc.bsSecLen;
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
400a4d0c:	410100        	srli	a0, a0, 1
400a4d0f:	c109      	s32i.n	a0, a1, 48
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1206
    U32 ulLBA;
    BOOL bNeedExtH;

    ucTLun = ptReqEntry->bsTLun;
    ucCmdType = ptCtrlEntry->bsCmdType;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
400a4d11:	4258      	l32i.n	a5, a2, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1211
    ucSecStart = ptReqEntry->tFlashDesc.bsSecStart;
    ucSecLen = ptReqEntry->tFlashDesc.bsSecLen;
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
400a4d13:	3228      	l32i.n	a2, a2, 12
400a4d15:	746850        	extui	a6, a5, 8, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1206
    U32 ulLBA;
    BOOL bNeedExtH;

    ucTLun = ptReqEntry->bsTLun;
    ucCmdType = ptCtrlEntry->bsCmdType;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
400a4d18:	157250        	extui	a7, a5, 18, 2
400a4d1b:	f179      	s32i.n	a7, a1, 60
400a4d1d:	116162        	s32i	a6, a1, 68
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1212
    ucSecStart = ptReqEntry->tFlashDesc.bsSecStart;
    ucSecLen = ptReqEntry->tFlashDesc.bsSecLen;
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
400a4d20:	94fa20        	extui	a15, a2, 10, 10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1211
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
    ucSecStart = ptReqEntry->tFlashDesc.bsSecStart;
    ucSecLen = ptReqEntry->tFlashDesc.bsSecLen;
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
400a4d23:	944020        	extui	a4, a2, 0, 10
400a4d26:	755850        	extui	a5, a5, 24, 8
400a4d29:	126152        	s32i	a5, a1, 72
400a4d2c:	136142        	s32i	a4, a1, 76
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1213
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
400a4d2f:	a52420        	extui	a2, a2, 20, 11
400a4d32:	146122        	s32i	a2, a1, 80
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1217
    usPhyPage = ptCtrlEntry->bsPhyPage;
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;
    
    L3_FMSetCmdType(ucTLun, INVALID_2F);
400a4d35:	0d2d      	mov.n	a2, a13
400a4d37:	f71001        	l32r	a0, 400a2978 <_mcu2dram_text_start+0x178>
400a4d3a:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1219

    bNeedExtH = L3_ErrHIsNeedExtH(ptCtrlEntry);
400a4d3d:	0c2d      	mov.n	a2, a12
400a4d3f:	ff7b85        	call0	400a44f8 <L3_ErrHIsNeedExtH..JH_1482204275>
400a4d42:	176122        	s32i	a2, a1, 92
400a4d45:	100c      	movi.n	a0, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1220
    if (TRUE == bNeedExtH)
400a4d47:	021226        	beqi	a2, 1, 400a4d4d <L3_ErrHPrcUeccFail..GI_1482204275+0x7d>
400a4d4a:	0024c6        	j	400a4de1 <L3_ErrHPrcUeccFail..GI_1482204275+0x111>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1222
    {
        if (TRUE == ptReqEntry->tFlashDesc.bsHostRdEn && UECCH_FAILED_INIT == ptUeccHCtrl->bsSubStage)
400a4d4d:	d198      	l32i.n	a9, a1, 52
400a4d4f:	4998      	l32i.n	a9, a9, 16
400a4d51:	0d7957        	bbci	a9, 21, 400a4d62 <L3_ErrHPrcUeccFail..GI_1482204275+0x92>
400a4d54:	050ea2        	l8ui	a10, a14, 5
400a4d57:	7acc      	bnez.n	a10, 400a4d62 <L3_ErrHPrcUeccFail..GI_1482204275+0x92>
400a4d59:	202cc0        	or	a2, a12, a12
400a4d5c:	f71701        	l32r	a0, 400a29b8 <_mcu2dram_text_start+0x1b8>
400a4d5f:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:950
LOCAL BOOL MCU2_DRAM_TEXT L3_ExtHIntrQBackUp(U8 ucTLun)
{
    U8 ucBakUpPtr, ucCurEptr, ucCurWptr;
    FCMD_INTR_CTRL_ENTRY *ptCtrlEntry, *ptCtrlBakEntry;
    
    ucCurWptr = L3_FCMDQGetIntrWptr(ucTLun, FALSE);
400a4d62:	0d2d      	mov.n	a2, a13
400a4d64:	00a032        	movi	a3, 0
400a4d67:	f71501        	l32r	a0, 400a29bc <_mcu2dram_text_start+0x1bc>
400a4d6a:	0000c0        	callx0	a0
400a4d6d:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:951
    ucBakUpPtr = ucCurEptr = L3_FCMDQGetIntrEptr(ucTLun, FALSE);
400a4d6f:	030c      	movi.n	a3, 0
400a4d71:	0d2d      	mov.n	a2, a13
400a4d73:	f6e901        	l32r	a0, 400a2918 <_mcu2dram_text_start+0x118>
400a4d76:	0000c0        	callx0	a0
400a4d79:	2261e2        	s32i	a14, a1, 136
400a4d7c:	1f6122        	s32i	a2, a1, 124
400a4d7f:	2061c2        	s32i	a12, a1, 128
400a4d82:	02cd      	mov.n	a12, a2

400a4d84 <L3_ErrHPrcUeccFail..GI_1482204275+0xb4>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:955
    
    do
    {
        ptCtrlEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucBakUpPtr, FALSE);
400a4d84:	0d2d      	mov.n	a2, a13
400a4d86:	203cc0        	or	a3, a12, a12
400a4d89:	00a042        	movi	a4, 0
400a4d8c:	f6e401        	l32r	a0, 400a291c <_mcu2dram_text_start+0x11c>
400a4d8f:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:956
        ptCtrlBakEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucBakUpPtr, TRUE);
400a4d92:	0c3d      	mov.n	a3, a12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:955
    ucCurWptr = L3_FCMDQGetIntrWptr(ucTLun, FALSE);
    ucBakUpPtr = ucCurEptr = L3_FCMDQGetIntrEptr(ucTLun, FALSE);
    
    do
    {
        ptCtrlEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucBakUpPtr, FALSE);
400a4d94:	02ed      	mov.n	a14, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:956
        ptCtrlBakEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucBakUpPtr, TRUE);
400a4d96:	140c      	movi.n	a4, 1
400a4d98:	0d2d      	mov.n	a2, a13
400a4d9a:	f6e001        	l32r	a0, 400a291c <_mcu2dram_text_start+0x11c>
400a4d9d:	0000c0        	callx0	a0
400a4da0:	216122        	s32i	a2, a1, 132
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:958

        COM_MemCpy((U32*)ptCtrlBakEntry, (U32*)ptCtrlEntry, sizeof(FCMD_INTR_CTRL_ENTRY) / sizeof(U32));
400a4da3:	0e3d      	mov.n	a3, a14
400a4da5:	a40c      	movi.n	a4, 10
400a4da7:	f6b401        	l32r	a0, 400a2878 <_mcu2dram_text_start+0x78>
400a4daa:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:959
        if (ucBakUpPtr == ucCurEptr)
400a4dad:	1f21b2        	l32i	a11, a1, 124
400a4db0:	f03d      	nop.n
400a4db2:	169cb7        	bne	a12, a11, 400a4dcc <L3_ErrHPrcUeccFail..GI_1482204275+0xfc>
400a4db5:	0d2d      	mov.n	a2, a13
400a4db7:	f70201        	l32r	a0, 400a29c0 <_mcu2dram_text_start+0x1c0>
400a4dba:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:961
        {
            ptCtrlBakEntry->ptErrHEntry = L3_FCMDQGetIntrErrHEntry(ucTLun, TRUE);
400a4dbd:	212102        	l32i	a0, a1, 132
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:962
            COM_MemCpy((U32*)ptCtrlBakEntry->ptErrHEntry, (U32*)ptCtrlEntry->ptErrHEntry, sizeof(FCMD_INTR_ERRH_ENTRY) / sizeof(U32));
400a4dc0:	441c      	movi.n	a4, 20
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:961
        ptCtrlBakEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucBakUpPtr, TRUE);

        COM_MemCpy((U32*)ptCtrlBakEntry, (U32*)ptCtrlEntry, sizeof(FCMD_INTR_CTRL_ENTRY) / sizeof(U32));
        if (ucBakUpPtr == ucCurEptr)
        {
            ptCtrlBakEntry->ptErrHEntry = L3_FCMDQGetIntrErrHEntry(ucTLun, TRUE);
400a4dc2:	9029      	s32i.n	a2, a0, 36
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:962
            COM_MemCpy((U32*)ptCtrlBakEntry->ptErrHEntry, (U32*)ptCtrlEntry->ptErrHEntry, sizeof(FCMD_INTR_ERRH_ENTRY) / sizeof(U32));
400a4dc4:	9e38      	l32i.n	a3, a14, 36
400a4dc6:	f6ac01        	l32r	a0, 400a2878 <_mcu2dram_text_start+0x78>
400a4dc9:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:966
        }

        ucBakUpPtr = (ucBakUpPtr + 1) % NFCQ_DEPTH;        
    } while (ucBakUpPtr != ucCurWptr);
400a4dcc:	202122        	l32i	a2, a1, 128
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:965
        {
            ptCtrlBakEntry->ptErrHEntry = L3_FCMDQGetIntrErrHEntry(ucTLun, TRUE);
            COM_MemCpy((U32*)ptCtrlBakEntry->ptErrHEntry, (U32*)ptCtrlEntry->ptErrHEntry, sizeof(FCMD_INTR_ERRH_ENTRY) / sizeof(U32));
        }

        ucBakUpPtr = (ucBakUpPtr + 1) % NFCQ_DEPTH;        
400a4dcf:	4e0c      	movi.n	a14, 4
400a4dd1:	cc1b      	addi.n	a12, a12, 1
400a4dd3:	f2cce0        	rems	a12, a12, a14
400a4dd6:	74c0c0        	extui	a12, a12, 0, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:966
    } while (ucBakUpPtr != ucCurWptr);
400a4dd9:	a79c27        	bne	a12, a2, 400a4d84 <L3_ErrHPrcUeccFail..GI_1482204275+0xb4>
400a4ddc:	001146        	j	400a4e25 <L3_ErrHPrcUeccFail..GI_1482204275+0x155>

400a4ddf <L3_ErrHPrcUeccFail..GI_1482204275+0x10f>:
	...

400a4de1 <L3_ErrHPrcUeccFail..GI_1482204275+0x111>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1240
            ptUeccHCtrl->bsSubStage = UECCH_FAILED_DONE;
        }
    }
    else
    {
        ptErrHEntry->bsErrRpt = TRUE;
400a4de1:	0e28      	l32i.n	a2, a14, 0
400a4de3:	200200        	or	a0, a2, a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1241
        if (TRUE != L3_IFIsRecycled(ptCtrlEntry))
400a4de6:	0c2d      	mov.n	a2, a12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1240
            ptUeccHCtrl->bsSubStage = UECCH_FAILED_DONE;
        }
    }
    else
    {
        ptErrHEntry->bsErrRpt = TRUE;
400a4de8:	0e09      	s32i.n	a0, a14, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1241
        if (TRUE != L3_IFIsRecycled(ptCtrlEntry))
400a4dea:	f6ee01        	l32r	a0, 400a29a4 <_mcu2dram_text_start+0x1a4>
400a4ded:	0000c0        	callx0	a0
400a4df0:	161226        	beqi	a2, 1, 400a4e0a <L3_ErrHPrcUeccFail..GI_1482204275+0x13a>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1246
        {
            // Here: the current block need to be marked as a weak block or a bad block
            // ... 

            if (TRUE == ptReqEntry->tFlashDesc.bsHostRdEn)
400a4df3:	d138      	l32i.n	a3, a1, 52
400a4df5:	4338      	l32i.n	a3, a3, 16
400a4df7:	077357        	bbci	a3, 21, 400a4e02 <L3_ErrHPrcUeccFail..GI_1482204275+0x132>
400a4dfa:	0c2d      	mov.n	a2, a12
400a4dfc:	f6ef01        	l32r	a0, 400a29b8 <_mcu2dram_text_start+0x1b8>
400a4dff:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1251
            {
                L3_HostReadRecover(ptCtrlEntry, TRUE);
            }
            
            L3_IFUpdtReqStatus(ptCtrlEntry);
400a4e02:	0c2d      	mov.n	a2, a12
400a4e04:	f6ba01        	l32r	a0, 400a28ec <_mcu2dram_text_start+0xec>
400a4e07:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1254
        }

        L3_FCMDQSetIntrEptr(ucTLun, INVALID_DPTR, FALSE);
400a4e0a:	0d2d      	mov.n	a2, a13
400a4e0c:	ffa032        	movi	a3, 255
400a4e0f:	040c      	movi.n	a4, 0
400a4e11:	c1c8      	l32i.n	a12, a1, 48
400a4e13:	f6b801        	l32r	a0, 400a28f4 <_mcu2dram_text_start+0xf4>
400a4e16:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1255
        L3_ErrHFailLog(ucTLun, ucErrCode);
400a4e19:	0c3d      	mov.n	a3, a12
400a4e1b:	0d2d      	mov.n	a2, a13
400a4e1d:	001405        	call0	400a4f60 <L3_ErrHFailLog..DH_1482204275>
400a4e20:	002646        	j	400a4ebd <L3_ErrHPrcUeccFail..GI_1482204275+0x1ed>

400a4e23 <L3_ErrHPrcUeccFail..GI_1482204275+0x153>:
	...

400a4e25 <L3_ErrHPrcUeccFail..GI_1482204275+0x155>:
400a4e25:	2221e2        	l32i	a14, a1, 136
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:983
History    : 
    1. 2016.8.11 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ExtHIntrDptrReset(U8 ucTLun)
{
    L3_FCMDQSetIntrWptr(ucTLun, L3_FCMDQGetIntrWptr(ucTLun, FALSE), TRUE);
400a4e28:	0d2d      	mov.n	a2, a13
400a4e2a:	030c      	movi.n	a3, 0
400a4e2c:	f6e401        	l32r	a0, 400a29bc <_mcu2dram_text_start+0x1bc>
400a4e2f:	0000c0        	callx0	a0
400a4e32:	023d      	mov.n	a3, a2
400a4e34:	140c      	movi.n	a4, 1
400a4e36:	0d2d      	mov.n	a2, a13
400a4e38:	f6e301        	l32r	a0, 400a29c4 <_mcu2dram_text_start+0x1c4>
400a4e3b:	0000c0        	callx0	a0
400a4e3e:	0d2d      	mov.n	a2, a13
400a4e40:	f6e201        	l32r	a0, 400a29c8 <_mcu2dram_text_start+0x1c8>
400a4e43:	0000c0        	callx0	a0
400a4e46:	023d      	mov.n	a3, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:984
    L3_FCMDQSetIntrRptr(ucTLun, L3_FCMDQGetIntrRptr(ucTLun, FALSE), TRUE);
400a4e48:	140c      	movi.n	a4, 1
400a4e4a:	0d2d      	mov.n	a2, a13
400a4e4c:	f6a901        	l32r	a0, 400a28f0 <_mcu2dram_text_start+0xf0>
400a4e4f:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:985
    L3_FCMDQSetIntrEptr(ucTLun, L3_FCMDQGetIntrEptr(ucTLun, FALSE), TRUE);
400a4e52:	0d2d      	mov.n	a2, a13
400a4e54:	030c      	movi.n	a3, 0
400a4e56:	f6b001        	l32r	a0, 400a2918 <_mcu2dram_text_start+0x118>
400a4e59:	0000c0        	callx0	a0
400a4e5c:	023d      	mov.n	a3, a2
400a4e5e:	140c      	movi.n	a4, 1
400a4e60:	0d2d      	mov.n	a2, a13
400a4e62:	f6a401        	l32r	a0, 400a28f4 <_mcu2dram_text_start+0xf4>
400a4e65:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:986
    L3_FCMDQSetIntrPptr(ucTLun, L3_FCMDQGetIntrPptr(ucTLun, FALSE), TRUE);
400a4e68:	0d2d      	mov.n	a2, a13
400a4e6a:	030c      	movi.n	a3, 0
400a4e6c:	f6d801        	l32r	a0, 400a29cc <_mcu2dram_text_start+0x1cc>
400a4e6f:	0000c0        	callx0	a0
400a4e72:	023d      	mov.n	a3, a2
400a4e74:	140c      	movi.n	a4, 1
400a4e76:	0d2d      	mov.n	a2, a13
400a4e78:	f6d601        	l32r	a0, 400a29d0 <_mcu2dram_text_start+0x1d0>
400a4e7b:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:988

    L3_FCMDQSetIntrWptr(ucTLun, 0, FALSE);
400a4e7e:	0d2d      	mov.n	a2, a13
400a4e80:	030c      	movi.n	a3, 0
400a4e82:	040c      	movi.n	a4, 0
400a4e84:	f6d001        	l32r	a0, 400a29c4 <_mcu2dram_text_start+0x1c4>
400a4e87:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:989
    L3_FCMDQSetIntrRptr(ucTLun, INVALID_DPTR, FALSE);
400a4e8a:	0d2d      	mov.n	a2, a13
400a4e8c:	ffa032        	movi	a3, 255
400a4e8f:	00a042        	movi	a4, 0
400a4e92:	f69701        	l32r	a0, 400a28f0 <_mcu2dram_text_start+0xf0>
400a4e95:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:990
    L3_FCMDQSetIntrEptr(ucTLun, INVALID_DPTR, FALSE);
400a4e98:	0d2d      	mov.n	a2, a13
400a4e9a:	ffa032        	movi	a3, 255
400a4e9d:	040c      	movi.n	a4, 0
400a4e9f:	f69501        	l32r	a0, 400a28f4 <_mcu2dram_text_start+0xf4>
400a4ea2:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:991
    L3_FCMDQSetIntrPptr(ucTLun, INVALID_DPTR, FALSE);
400a4ea5:	0d2d      	mov.n	a2, a13
400a4ea7:	ffa032        	movi	a3, 255
400a4eaa:	040c      	movi.n	a4, 0
400a4eac:	f6c901        	l32r	a0, 400a29d0 <_mcu2dram_text_start+0x1d0>
400a4eaf:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1087
    bResult = L3_ExtHIntrQBackUp(ucTLun);
    if (TRUE == bResult)
    {
        L3_ExtHIntrDptrReset(ucTLun);

        L3_SchSetStsBit(ucTLun, STS_BMP_EXTH);
400a4eb2:	0d2d      	mov.n	a2, a13
400a4eb4:	04a032        	movi	a3, 4
400a4eb7:	f6c701        	l32r	a0, 400a29d4 <_mcu2dram_text_start+0x1d4>
400a4eba:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1265
        #endif

        ptUeccHCtrl->bsSubStage = UECCH_FAILED_DONE;
    }
        
    DBG_Printf("TLun%d Blk%d_%d[%d_%d_%d_%d] Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x UeccHandling Fail ExtH=%d_%d.\n",ucTLun, usVirBlk, usPhyBlk, 
400a4ebd:	0d2d      	mov.n	a2, a13
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1235
            // ExtH Memrory shared by all lun.-> improve it later.
            ptUeccHCtrl->bsSubStage = UECCH_FAILED_PEND;
        }
        else
        {
            ptUeccHCtrl->bsSubStage = UECCH_FAILED_DONE;
400a4ebf:	240c      	movi.n	a4, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1265
        #endif

        ptUeccHCtrl->bsSubStage = UECCH_FAILED_DONE;
    }
        
    DBG_Printf("TLun%d Blk%d_%d[%d_%d_%d_%d] Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x UeccHandling Fail ExtH=%d_%d.\n",ucTLun, usVirBlk, usPhyBlk, 
400a4ec1:	0f3d      	mov.n	a3, a15
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1235
            // ExtH Memrory shared by all lun.-> improve it later.
            ptUeccHCtrl->bsSubStage = UECCH_FAILED_PEND;
        }
        else
        {
            ptUeccHCtrl->bsSubStage = UECCH_FAILED_DONE;
400a4ec3:	054e42        	s8i	a4, a14, 5
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1265
        #endif

        ptUeccHCtrl->bsSubStage = UECCH_FAILED_DONE;
    }
        
    DBG_Printf("TLun%d Blk%d_%d[%d_%d_%d_%d] Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x UeccHandling Fail ExtH=%d_%d.\n",ucTLun, usVirBlk, usPhyBlk, 
400a4ec6:	040c      	movi.n	a4, 0
400a4ec8:	f65a01        	l32r	a0, 400a2830 <_mcu2dram_text_start+0x30>
400a4ecb:	0000c0        	callx0	a0
400a4ece:	0f3d      	mov.n	a3, a15
400a4ed0:	186122        	s32i	a2, a1, 96
400a4ed3:	140c      	movi.n	a4, 1
400a4ed5:	0d2d      	mov.n	a2, a13
400a4ed7:	f65601        	l32r	a0, 400a2830 <_mcu2dram_text_start+0x30>
400a4eda:	0000c0        	callx0	a0
400a4edd:	0f3d      	mov.n	a3, a15
400a4edf:	196122        	s32i	a2, a1, 100
400a4ee2:	02a042        	movi	a4, 2
400a4ee5:	202dd0        	or	a2, a13, a13
400a4ee8:	f65201        	l32r	a0, 400a2830 <_mcu2dram_text_start+0x30>
400a4eeb:	0000c0        	callx0	a0
400a4eee:	0f3d      	mov.n	a3, a15
400a4ef0:	02cd      	mov.n	a12, a2
400a4ef2:	340c      	movi.n	a4, 3
400a4ef4:	0d2d      	mov.n	a2, a13
400a4ef6:	f64e01        	l32r	a0, 400a2830 <_mcu2dram_text_start+0x30>
400a4ef9:	0000c0        	callx0	a0
400a4efc:	142162        	l32i	a6, a1, 80
400a4eff:	172142        	l32i	a4, a1, 92
400a4f02:	162132        	l32i	a3, a1, 88
400a4f05:	152172        	l32i	a7, a1, 84
400a4f08:	e188      	l32i.n	a8, a1, 56
400a4f0a:	f198      	l32i.n	a9, a1, 60
400a4f0c:	1021a2        	l32i	a10, a1, 64
400a4f0f:	1121b2        	l32i	a11, a1, 68
400a4f12:	122102        	l32i	a0, a1, 72
400a4f15:	1129      	s32i.n	a2, a1, 4
400a4f17:	01c9      	s32i.n	a12, a1, 0
400a4f19:	f6a621        	l32r	a2, 400a29b4 <_mcu2dram_text_start+0x1b4>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1269
        L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 0), L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 1), L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 2), L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 3),
        usVirPage, usPhyPage, ucCmdType, ucPln, ucSecStart, ucSecLen, ucLpnBitmap, ulLBA, bNeedExtH, ptUeccHCtrl->bsSubStage);

    return;
400a4f1c:	1b21c2        	l32i	a12, a1, 108
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1265
        #endif

        ptUeccHCtrl->bsSubStage = UECCH_FAILED_DONE;
    }
        
    DBG_Printf("TLun%d Blk%d_%d[%d_%d_%d_%d] Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x UeccHandling Fail ExtH=%d_%d.\n",ucTLun, usVirBlk, usPhyBlk, 
400a4f1f:	8109      	s32i.n	a0, a1, 32
400a4f21:	71b9      	s32i.n	a11, a1, 28
400a4f23:	61a9      	s32i.n	a10, a1, 24
400a4f25:	5199      	s32i.n	a9, a1, 20
400a4f27:	4189      	s32i.n	a8, a1, 16
400a4f29:	3179      	s32i.n	a7, a1, 12
400a4f2b:	9139      	s32i.n	a3, a1, 36
400a4f2d:	a149      	s32i.n	a4, a1, 40
400a4f2f:	2169      	s32i.n	a6, a1, 8
400a4f31:	132142        	l32i	a4, a1, 76
400a4f34:	182162        	l32i	a6, a1, 96
400a4f37:	0d3d      	mov.n	a3, a13
400a4f39:	192172        	l32i	a7, a1, 100
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1269
        L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 0), L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 1), L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 2), L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 3),
        usVirPage, usPhyPage, ucCmdType, ucPln, ucSecStart, ucSecLen, ucLpnBitmap, ulLBA, bNeedExtH, ptUeccHCtrl->bsSubStage);

    return;
400a4f3c:	1c21d2        	l32i	a13, a1, 112
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1265
        #endif

        ptUeccHCtrl->bsSubStage = UECCH_FAILED_DONE;
    }
        
    DBG_Printf("TLun%d Blk%d_%d[%d_%d_%d_%d] Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x UeccHandling Fail ExtH=%d_%d.\n",ucTLun, usVirBlk, usPhyBlk, 
400a4f3f:	050e52        	l8ui	a5, a14, 5
400a4f42:	0b6152        	s32i	a5, a1, 44
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1269
        L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 0), L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 1), L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 2), L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 3),
        usVirPage, usPhyPage, ucCmdType, ucPln, ucSecStart, ucSecLen, ucLpnBitmap, ulLBA, bNeedExtH, ptUeccHCtrl->bsSubStage);

    return;
400a4f45:	1d21e2        	l32i	a14, a1, 116
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1265
        #endif

        ptUeccHCtrl->bsSubStage = UECCH_FAILED_DONE;
    }
        
    DBG_Printf("TLun%d Blk%d_%d[%d_%d_%d_%d] Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x UeccHandling Fail ExtH=%d_%d.\n",ucTLun, usVirBlk, usPhyBlk, 
400a4f48:	205ff0        	or	a5, a15, a15
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1269
        L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 0), L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 1), L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 2), L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 3),
        usVirPage, usPhyPage, ucCmdType, ucPln, ucSecStart, ucSecLen, ucLpnBitmap, ulLBA, bNeedExtH, ptUeccHCtrl->bsSubStage);

    return;
400a4f4b:	1e21f2        	l32i	a15, a1, 120
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1265
        #endif

        ptUeccHCtrl->bsSubStage = UECCH_FAILED_DONE;
    }
        
    DBG_Printf("TLun%d Blk%d_%d[%d_%d_%d_%d] Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x UeccHandling Fail ExtH=%d_%d.\n",ucTLun, usVirBlk, usPhyBlk, 
400a4f4e:	f63a01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a4f51:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1269
        L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 0), L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 1), L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 2), L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 3),
        usVirPage, usPhyPage, ucCmdType, ucPln, ucSecStart, ucSecLen, ucLpnBitmap, ulLBA, bNeedExtH, ptUeccHCtrl->bsSubStage);

    return;
400a4f54:	90a022        	movi	a2, 144
400a4f57:	1a2102        	l32i	a0, a1, 104
400a4f5a:	112a      	add.n	a1, a1, a2
400a4f5c:	f00d      	ret.n

400a4f5e <L3_ErrHPrcUeccFail..GI_1482204275+0x28e>:
	...

400a4f60 <L3_ErrHFailLog..DH_1482204275>:
L3_ErrHFailLog():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:207
Usage      : 
History    : 
    1. 2016.8.2 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHFailLog(U8 ucTLun, U8 ucErrCode)
{
400a4f60:	034d      	mov.n	a4, a3
400a4f62:	f0c112        	addi	a1, a1, -16
400a4f65:	11c9      	s32i.n	a12, a1, 4
400a4f67:	0109      	s32i.n	a0, a1, 0
400a4f69:	20c220        	or	a12, a2, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:208
    switch (ucErrCode)
400a4f6c:	3a1326        	beqi	a3, 1, 400a4faa <L3_ErrHFailLog..DH_1482204275+0x4a>
400a4f6f:	f63301        	l32r	a0, 400a283c <_mcu2dram_text_start+0x3c>
400a4f72:	0253e6        	bgei	a3, 5, 400a4f78 <L3_ErrHFailLog..DH_1482204275+0x18>
400a4f75:	6323e6        	bgei	a3, 2, 400a4fdc <L3_ErrHFailLog..DH_1482204275+0x7c>

400a4f78 <L3_ErrHFailLog..DH_1482204275+0x18>:
400a4f78:	6c5426        	beqi	a4, 5, 400a4fe8 <L3_ErrHFailLog..DH_1482204275+0x88>
400a4f7b:	226426        	beqi	a4, 6, 400a4fa1 <L3_ErrHFailLog..DH_1482204275+0x41>
400a4f7e:	1f8426        	beqi	a4, 8, 400a4fa1 <L3_ErrHFailLog..DH_1482204275+0x41>
400a4f81:	900c      	movi.n	a0, 9
400a4f83:	231407        	beq	a4, a0, 400a4faa <L3_ErrHFailLog..DH_1482204275+0x4a>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:241
        {
            break;
        }
        default:
        {
            DBG_Printf("TLun%d FailLog ErrCode=%d Err.\n", ucTLun, ucErrCode);
400a4f86:	f69421        	l32r	a2, 400a29d8 <_mcu2dram_text_start+0x1d8>
400a4f89:	0c3d      	mov.n	a3, a12
400a4f8b:	f62b01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a4f8e:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a4f91:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:89
400a4f94:	f66621        	l32r	a2, 400a292c <_mcu2dram_text_start+0x12c>
400a4f97:	f62801        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a4f9a:	0000c0        	callx0	a0
400a4f9d:	ffff06        	j	400a4f9d <L3_ErrHFailLog..DH_1482204275+0x3d>

400a4fa0 <L3_ErrHFailLog..DH_1482204275+0x40>:
	...

400a4fa1 <L3_ErrHFailLog..DH_1482204275+0x41>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:231
            break;
        }
        case NF_ERR_TYPE_UECC:
        case NF_ERR_TYPE_DCRC:
        {
            g_pSubSystemDevParamPage->SYSUECCCnt++;
400a4fa1:	192032        	l32i	a3, a0, 100
400a4fa4:	b328      	l32i.n	a2, a3, 44
400a4fa6:	221b      	addi.n	a2, a2, 1
400a4fa8:	b329      	s32i.n	a2, a3, 44

400a4faa <L3_ErrHFailLog..DH_1482204275+0x4a>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:246
            DBG_Printf("TLun%d FailLog ErrCode=%d Err.\n", ucTLun, ucErrCode);
            DBG_Getch();
        }
    }
    
    L3_FMUpdtUsrFailCnt(ucTLun, ucErrCode);
400a4faa:	043d      	mov.n	a3, a4
400a4fac:	0c2d      	mov.n	a2, a12
400a4fae:	ff2485        	call0	400a41f8 <L3_FMUpdtUsrFailCnt>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:248

    L3_FMSetPhyBlk(ucTLun, INVALID_4F);
400a4fb1:	202cc0        	or	a2, a12, a12
400a4fb4:	f62931        	l32r	a3, 400a2858 <_mcu2dram_text_start+0x58>
400a4fb7:	f68901        	l32r	a0, 400a29dc <_mcu2dram_text_start+0x1dc>
400a4fba:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:249
    L3_FMSetPhyPage(ucTLun, INVALID_4F);
400a4fbd:	0c2d      	mov.n	a2, a12
400a4fbf:	f62631        	l32r	a3, 400a2858 <_mcu2dram_text_start+0x58>
400a4fc2:	f68701        	l32r	a0, 400a29e0 <_mcu2dram_text_start+0x1e0>
400a4fc5:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:250
    L3_FMSetCmdType(ucTLun, INVALID_2F);
400a4fc8:	0c2d      	mov.n	a2, a12
400a4fca:	ffa032        	movi	a3, 255
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:252

    return;
400a4fcd:	11c8      	l32i.n	a12, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:250
    
    L3_FMUpdtUsrFailCnt(ucTLun, ucErrCode);

    L3_FMSetPhyBlk(ucTLun, INVALID_4F);
    L3_FMSetPhyPage(ucTLun, INVALID_4F);
    L3_FMSetCmdType(ucTLun, INVALID_2F);
400a4fcf:	f66a01        	l32r	a0, 400a2978 <_mcu2dram_text_start+0x178>
400a4fd2:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:252

    return;
400a4fd5:	0108      	l32i.n	a0, a1, 0
400a4fd7:	10c112        	addi	a1, a1, 16
400a4fda:	f00d      	ret.n

400a4fdc <L3_ErrHFailLog..DH_1482204275+0x7c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:220
        }
        case NF_ERR_TYPE_PRG:
        case NF_ERR_TYPE_PREPRG:
        case NF_ERR_TYPE_BOTHPRG:
        {
            g_pSubSystemDevParamPage->ProgramFailCnt++;
400a4fdc:	192052        	l32i	a5, a0, 100
400a4fdf:	4538      	l32i.n	a3, a5, 16
400a4fe1:	331b      	addi.n	a3, a3, 1
400a4fe3:	4539      	s32i.n	a3, a5, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:222
            gbGlobalInfoSaveFlag = TRUE;
            break;
400a4fe5:	fff046        	j	400a4faa <L3_ErrHFailLog..DH_1482204275+0x4a>

400a4fe8 <L3_ErrHFailLog..DH_1482204275+0x88>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:212
{
    switch (ucErrCode)
    {
        case NF_ERR_TYPE_ERS:
        {
            g_pSubSystemDevParamPage->EraseFailCnt++;
400a4fe8:	192062        	l32i	a6, a0, 100
400a4feb:	5658      	l32i.n	a5, a6, 20
400a4fed:	551b      	addi.n	a5, a5, 1
400a4fef:	5659      	s32i.n	a5, a6, 20
400a4ff1:	ffed46        	j	400a4faa <L3_ErrHFailLog..DH_1482204275+0x4a>

400a4ff4 <L3_ErrHUpdtVthRetry..BI_1482204275>:
L3_ErrHUpdtVthRetry():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:833
    1. 2016.8.12 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHUpdtVthRetry(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    UECC_ERRH_CTRL *ptUeccHCtrl;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
400a4ff4:	0258      	l32i.n	a5, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:842
        return;
    }

    ptUeccHCtrl = &ptCtrlEntry->ptErrHEntry->tUeccHCtrl;

    if (READ_RETRY_SUCCESS == ptUeccHCtrl->bsSubStage)
400a4ff6:	f61161        	l32r	a6, 400a283c <_mcu2dram_text_start+0x3c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:835
LOCAL void MCU2_DRAM_TEXT L3_ErrHUpdtVthRetry(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    UECC_ERRH_CTRL *ptUeccHCtrl;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    
    if (TRUE == ptReqEntry->tFlashDesc.bsShiftRdEn)
400a4ff9:	4548      	l32i.n	a4, a5, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:842
        return;
    }

    ptUeccHCtrl = &ptCtrlEntry->ptErrHEntry->tUeccHCtrl;

    if (READ_RETRY_SUCCESS == ptUeccHCtrl->bsSubStage)
400a4ffb:	212662        	l32i	a6, a6, 132
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:835
LOCAL void MCU2_DRAM_TEXT L3_ErrHUpdtVthRetry(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    UECC_ERRH_CTRL *ptUeccHCtrl;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    
    if (TRUE == ptReqEntry->tFlashDesc.bsShiftRdEn)
400a4ffe:	1ef447        	bbsi	a4, 20, 400a5020 <L3_ErrHUpdtVthRetry..BI_1482204275+0x2c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:842
        return;
    }

    ptUeccHCtrl = &ptCtrlEntry->ptErrHEntry->tUeccHCtrl;

    if (READ_RETRY_SUCCESS == ptUeccHCtrl->bsSubStage)
400a5001:	154040        	extui	a4, a4, 16, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:840
    if (TRUE == ptReqEntry->tFlashDesc.bsShiftRdEn)
    {
        return;
    }

    ptUeccHCtrl = &ptCtrlEntry->ptErrHEntry->tUeccHCtrl;
400a5004:	9278      	l32i.n	a7, a2, 36
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:842

    if (READ_RETRY_SUCCESS == ptUeccHCtrl->bsSubStage)
400a5006:	000522        	l8ui	a2, a5, 0
400a5009:	050732        	l8ui	a3, a7, 5
400a500c:	902220        	addx2	a2, a2, a2
400a500f:	a02260        	addx4	a2, a2, a6
400a5012:	0c5326        	beqi	a3, 5, 400a5022 <L3_ErrHUpdtVthRetry..BI_1482204275+0x2e>
400a5015:	749c      	beqz.n	a4, 400a5030 <L3_ErrHUpdtVthRetry..BI_1482204275+0x3c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:361
History    : 
    1. 2016.7.28 JasonGuo create function
==============================================================================*/
void MCU2_DRAM_TEXT L3_FMSetMlcVthRetry(U8 ucTLun, U8 ucVth)
{
    l_ptFMIntrMgr[ucTLun].bsMlcVthRetry = ucVth;
400a5017:	0b0272        	l8ui	a7, a2, 11
400a501a:	094272        	s8i	a7, a2, 9
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:865
        {
            L3_FMSetMlcVthRetry(ptReqEntry->bsTLun, L3_FMGetMlcVthRetryDft(ptReqEntry->bsTLun));
        }
    }

    return;
400a501d:	f00d      	ret.n

400a501f <L3_ErrHUpdtVthRetry..BI_1482204275+0x2b>:
	...

400a5020 <L3_ErrHUpdtVthRetry..BI_1482204275+0x2c>:
400a5020:	f00d      	ret.n

400a5022 <L3_ErrHUpdtVthRetry..BI_1482204275+0x2e>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:844

    ptUeccHCtrl = &ptCtrlEntry->ptErrHEntry->tUeccHCtrl;

    if (READ_RETRY_SUCCESS == ptUeccHCtrl->bsSubStage)
    {
        if (FCMD_REQ_SLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod)
400a5022:	2758      	l32i.n	a5, a7, 8
400a5024:	645150        	extui	a5, a5, 1, 7
400a5027:	d48c      	beqz.n	a4, 400a5038 <L3_ErrHUpdtVthRetry..BI_1482204275+0x44>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:361
400a5029:	094252        	s8i	a5, a2, 9
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:865
        {
            L3_FMSetMlcVthRetry(ptReqEntry->bsTLun, L3_FMGetMlcVthRetryDft(ptReqEntry->bsTLun));
        }
    }

    return;
400a502c:	f00d      	ret.n

400a502e <L3_ErrHUpdtVthRetry..BI_1482204275+0x3a>:
	...

400a5030 <L3_ErrHUpdtVthRetry..BI_1482204275+0x3c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:329
History    : 
    1. 2016.7.28 JasonGuo create function
==============================================================================*/
void MCU2_DRAM_TEXT L3_FMSetSlcVthRetry(U8 ucTLun, U8 ucVth)
{
    l_ptFMIntrMgr[ucTLun].bsSlcVthRetry = ucVth;
400a5030:	0a0262        	l8ui	a6, a2, 10
400a5033:	084262        	s8i	a6, a2, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:865
400a5036:	f00d      	ret.n

400a5038 <L3_ErrHUpdtVthRetry..BI_1482204275+0x44>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:329
400a5038:	084252        	s8i	a5, a2, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:865
400a503b:	f00d      	ret.n

400a503d <L3_ErrHUpdtVthRetry..BI_1482204275+0x49>:
L3_ErrHUpdtVthRetry..BI_1482204275():
400a503d:	000000                                        ...

400a5040 <L3_ErrHTerminate..PH_1482204275>:
L3_ErrHTerminate():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:768
Usage      : 
History    : 
    1. 2016.8.12 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHTerminate(U8 ucTLun, BOOL bTLC)
{
400a5040:	030c      	movi.n	a3, 0
400a5042:	e0c112        	addi	a1, a1, -32
400a5045:	31c9      	s32i.n	a12, a1, 12
400a5047:	41d9      	s32i.n	a13, a1, 16
400a5049:	61f9      	s32i.n	a15, a1, 24
400a504b:	2109      	s32i.n	a0, a1, 8
400a504d:	51e9      	s32i.n	a14, a1, 20
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:497
    20140911    Gavin   modify to meet coding style
    20151123    abby    rename from HAL_FlashReadRetryTerminate
------------------------------------------------------------------------------*/
BOOL MCU2_DRAM_TEXT HAL_FlashRetryTerminate(U8 ucPU, U8 ucLun, BOOL bTlcMode)
{
    FLASH_ADDR tFlashAddr = {0};
400a504f:	f66501        	l32r	a0, 400a29e4 <_mcu2dram_text_start+0x1e4>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:768
400a5052:	02ed      	mov.n	a14, a2
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:497
400a5054:	1028      	l32i.n	a2, a0, 4
400a5056:	1129      	s32i.n	a2, a1, 4
400a5058:	0008      	l32i.n	a0, a0, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1482
    U8 ucPU, ucLun;
    
    ucPU = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
    
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a505a:	0e2d      	mov.n	a2, a14
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:497
400a505c:	0109      	s32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:499

    tFlashAddr.ucPU = ucPU;
400a505e:	0041e2        	s8i	a14, a1, 0
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:500
    tFlashAddr.ucLun = ucLun;
400a5061:	014132        	s8i	a3, a1, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1482
400a5064:	f63701        	l32r	a0, 400a2940 <_mcu2dram_text_start+0x140>
400a5067:	0000c0        	callx0	a0
400a506a:	4d0c      	movi.n	a13, 4
400a506c:	89a0f2        	movi	a15, 137
400a506f:	06b256        	bnez	a2, 400a50de <L3_ErrHTerminate..PH_1482204275+0x9e>

400a5072 <L3_ErrHTerminate..PH_1482204275+0x32>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1479
BOOL MCU2_DRAM_TEXT HAL_NfcSetFeature(FLASH_ADDR *pFlashAddr, U32 ulData, U8 ucAddr)
{
    NFCQ_ENTRY *pNFCQEntry;
    U8 ucPU, ucLun;
    
    ucPU = pFlashAddr->ucPU;
400a5072:	0001d2        	l8ui	a13, a1, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1480
    ucLun = pFlashAddr->ucLun;
400a5075:	0101c2        	l8ui	a12, a1, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1482
    
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a5078:	0d2d      	mov.n	a2, a13
400a507a:	0c3d      	mov.n	a3, a12
400a507c:	f63101        	l32r	a0, 400a2940 <_mcu2dram_text_start+0x140>
400a507f:	0000c0        	callx0	a0
400a5082:	42cc      	bnez.n	a2, 400a508a <L3_ErrHTerminate..PH_1482204275+0x4a>
400a5084:	000c      	movi.n	a0, 0
400a5086:	001386        	j	400a50d8 <L3_ErrHTerminate..PH_1482204275+0x98>

400a5089 <L3_ErrHTerminate..PH_1482204275+0x49>:
	...

400a508a <L3_ErrHTerminate..PH_1482204275+0x4a>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1487
    {
        return NFC_STATUS_FAIL;
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
400a508a:	0c3d      	mov.n	a3, a12
400a508c:	0d2d      	mov.n	a2, a13
400a508e:	f62d01        	l32r	a0, 400a2944 <_mcu2dram_text_start+0x144>
400a5091:	0000c0        	callx0	a0
400a5094:	20c220        	or	a12, a2, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1488
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);
400a5097:	10a032        	movi	a3, 16
400a509a:	f62b01        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a509d:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1492

    pNFCQEntry->bsDmaByteEn = TRUE;
    
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
400a50a0:	025cf2        	s16i	a15, a12, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a50a3:	520c      	movi.n	a2, 5
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1490
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsDmaByteEn = TRUE;
400a50a5:	2d0c      	movi.n	a13, 2
400a50a7:	0c48      	l32i.n	a4, a12, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1495
    
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;
400a50a9:	050c      	movi.n	a5, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1493
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsDmaByteEn = TRUE;
    
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);
400a50ab:	460c      	movi.n	a6, 4
400a50ad:	035c62        	s16i	a6, a12, 6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1495

    pNFCQEntry->ulSetFeatVal = ulData;
400a50b0:	2c59      	s32i.n	a5, a12, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1490
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsDmaByteEn = TRUE;
400a50b2:	2044d0        	or	a4, a4, a13
400a50b5:	006c42        	s32i	a4, a12, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a50b8:	f62601        	l32r	a0, 400a2950 <_mcu2dram_text_start+0x150>
400a50bb:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1499
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);
400a50be:	530c      	movi.n	a3, 5
400a50c0:	040c      	movi.n	a4, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a50c2:	3c78      	l32i.n	a7, a12, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1499
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);
400a50c4:	ffa052        	movi	a5, 255
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a50c7:	808274        	insbits	a7, a2, 8, 16
400a50ca:	036c72        	s32i	a7, a12, 12
400a50cd:	202110        	or	a2, a1, a1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1499
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);
400a50d0:	f62101        	l32r	a0, 400a2954 <_mcu2dram_text_start+0x154>
400a50d3:	0000c0        	callx0	a0
400a50d6:	100c      	movi.n	a0, 1
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:502

    while (NFC_STATUS_SUCCESS != HAL_NfcSetFeature(&tFlashAddr, 0, 0x89)); 
400a50d8:	961066        	bnei	a0, 1, 400a5072 <L3_ErrHTerminate..PH_1482204275+0x32>
400a50db:	0011c6        	j	400a5126 <L3_ErrHTerminate..PH_1482204275+0xe6>

400a50de <L3_ErrHTerminate..PH_1482204275+0x9e>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1487
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
    {
        return NFC_STATUS_FAIL;
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
400a50de:	0e2d      	mov.n	a2, a14
400a50e0:	00a032        	movi	a3, 0
400a50e3:	f61801        	l32r	a0, 400a2944 <_mcu2dram_text_start+0x144>
400a50e6:	0000c0        	callx0	a0
400a50e9:	20c220        	or	a12, a2, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1488
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);
400a50ec:	10a032        	movi	a3, 16
400a50ef:	f61601        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a50f2:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1492

    pNFCQEntry->bsDmaByteEn = TRUE;
    
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
400a50f5:	025cf2        	s16i	a15, a12, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1493
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);
400a50f8:	035cd2        	s16i	a13, a12, 6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a50fb:	520c      	movi.n	a2, 5
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1490
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsDmaByteEn = TRUE;
400a50fd:	290c      	movi.n	a9, 2
400a50ff:	0c88      	l32i.n	a8, a12, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1495
    
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;
400a5101:	0a0c      	movi.n	a10, 0
400a5103:	2ca9      	s32i.n	a10, a12, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1490
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsDmaByteEn = TRUE;
400a5105:	208890        	or	a8, a8, a9
400a5108:	0c89      	s32i.n	a8, a12, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a510a:	f61101        	l32r	a0, 400a2950 <_mcu2dram_text_start+0x150>
400a510d:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1499
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);
400a5110:	530c      	movi.n	a3, 5
400a5112:	040c      	movi.n	a4, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a5114:	3cb8      	l32i.n	a11, a12, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1499
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);
400a5116:	ffa052        	movi	a5, 255
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a5119:	8082b4        	insbits	a11, a2, 8, 16
400a511c:	3cb9      	s32i.n	a11, a12, 12
400a511e:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1499
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);
400a5120:	f60d01        	l32r	a0, 400a2954 <_mcu2dram_text_start+0x154>
400a5123:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:779
    if (NFC_STATUS_SUCCESS != bStatus)
    {
        DBG_Printf("TLun%d Terminate Send Fail.\n", ucTLun);
        DBG_Getch();
    }
    bStatus = HAL_NfcWaitStatus(ucPU, ucLunInPU);
400a5126:	0e2d      	mov.n	a2, a14
400a5128:	030c      	movi.n	a3, 0
400a512a:	f60b01        	l32r	a0, 400a2958 <_mcu2dram_text_start+0x158>
400a512d:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:780
    if (NFC_STATUS_SUCCESS != bStatus)
400a5130:	191226        	beqi	a2, 1, 400a514d <L3_ErrHTerminate..PH_1482204275+0x10d>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:782
    {
        DBG_Printf("TLun%d Terminate Wait Fail.\n", ucTLun);
400a5133:	f62d21        	l32r	a2, 400a29e8 <_mcu2dram_text_start+0x1e8>
400a5136:	0e3d      	mov.n	a3, a14
400a5138:	f5c001        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a513b:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a513e:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:89
400a5141:	f5fa21        	l32r	a2, 400a292c <_mcu2dram_text_start+0x12c>
400a5144:	f5bd01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a5147:	0000c0        	callx0	a0
400a514a:	ffff06        	j	400a514a <L3_ErrHTerminate..PH_1482204275+0x10a>

400a514d <L3_ErrHTerminate..PH_1482204275+0x10d>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:786
        DBG_Getch();
    }

    return;
400a514d:	31c8      	l32i.n	a12, a1, 12
400a514f:	41d8      	l32i.n	a13, a1, 16
400a5151:	51e8      	l32i.n	a14, a1, 20
400a5153:	61f8      	l32i.n	a15, a1, 24
400a5155:	2108      	l32i.n	a0, a1, 8
400a5157:	20c112        	addi	a1, a1, 32
400a515a:	f00d      	ret.n

400a515c <L3_ErrHAssertCmd..IH_1482204275>:
L3_ErrHAssertCmd():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:490
Usage      : 
History    : 
    1. 2016.8.2 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHAssertCmd(U8 ucFCmdType, U8 ucErrCode)
{
400a515c:	024d      	mov.n	a4, a2
400a515e:	f0c112        	addi	a1, a1, -16
400a5161:	0109      	s32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:491
    switch (ucErrCode)
400a5163:	0253e6        	bgei	a3, 5, 400a5169 <L3_ErrHAssertCmd..IH_1482204275+0xd>
400a5166:	2023e6        	bgei	a3, 2, 400a518a <L3_ErrHAssertCmd..IH_1482204275+0x2e>

400a5169 <L3_ErrHAssertCmd..IH_1482204275+0xd>:
400a5169:	535326        	beqi	a3, 5, 400a51c0 <L3_ErrHAssertCmd..IH_1482204275+0x64>
400a516c:	0293e6        	bgei	a3, 10, 400a5172 <L3_ErrHAssertCmd..IH_1482204275+0x16>
400a516f:	3263e6        	bgei	a3, 6, 400a51a5 <L3_ErrHAssertCmd..IH_1482204275+0x49>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:527
            }
            break;
        }
        default:
        {
            DBG_Printf("L3_ErrHAssertCmd ErrCode=%d Err.\n", ucErrCode);
400a5172:	f61e21        	l32r	a2, 400a29ec <_mcu2dram_text_start+0x1ec>
400a5175:	f5b001        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a5178:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a517b:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:89
400a517e:	f5eb21        	l32r	a2, 400a292c <_mcu2dram_text_start+0x12c>
400a5181:	f5ad01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a5184:	0000c0        	callx0	a0
400a5187:	ffff06        	j	400a5187 <L3_ErrHAssertCmd..IH_1482204275+0x2b>

400a518a <L3_ErrHAssertCmd..IH_1482204275+0x2e>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:509
        }
        case NF_ERR_TYPE_PRG:
        case NF_ERR_TYPE_PREPRG:
        case NF_ERR_TYPE_BOTHPRG:
        {
            if (FCMD_REQ_TYPE_WRITE != ucFCmdType)
400a518a:	04e216        	beqz	a2, 400a51dc <L3_ErrHAssertCmd..IH_1482204275+0x80>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:511
            {
                DBG_Printf("ErrCode=%d FCmdType=%d Write-Mis!\n", ucErrCode, ucFCmdType);
400a518d:	f61821        	l32r	a2, 400a29f0 <_mcu2dram_text_start+0x1f0>
400a5190:	f5aa01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a5193:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a5196:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:89
400a5199:	f5e421        	l32r	a2, 400a292c <_mcu2dram_text_start+0x12c>
400a519c:	f5a701        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a519f:	0000c0        	callx0	a0
400a51a2:	ffff06        	j	400a51a2 <L3_ErrHAssertCmd..IH_1482204275+0x46>

400a51a5 <L3_ErrHAssertCmd..IH_1482204275+0x49>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:498
        case NF_ERR_TYPE_UECC:
        case NF_ERR_TYPE_DCRC:
        case NF_ERR_TYPE_LBA:
        case NF_ERR_TYPE_RECC:
        {
            if (FCMD_REQ_TYPE_READ != ucFCmdType)
400a51a5:	331426        	beqi	a4, 1, 400a51dc <L3_ErrHAssertCmd..IH_1482204275+0x80>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:500
            {
                DBG_Printf("ErrCode=%d FCmdType=%d Read-Mis!\n", ucErrCode, ucFCmdType);
400a51a8:	f61321        	l32r	a2, 400a29f4 <_mcu2dram_text_start+0x1f4>
400a51ab:	f5a301        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a51ae:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a51b1:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:89
400a51b4:	f5de21        	l32r	a2, 400a292c <_mcu2dram_text_start+0x12c>
400a51b7:	f5a001        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a51ba:	0000c0        	callx0	a0
400a51bd:	ffff06        	j	400a51bd <L3_ErrHAssertCmd..IH_1482204275+0x61>

400a51c0 <L3_ErrHAssertCmd..IH_1482204275+0x64>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:518
            }
            break;
        }
        case NF_ERR_TYPE_ERS:
        {
            if (FCMD_REQ_TYPE_ERASE != ucFCmdType)
400a51c0:	182426        	beqi	a4, 2, 400a51dc <L3_ErrHAssertCmd..IH_1482204275+0x80>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:520
            {
                DBG_Printf("ErrCode=%d FCmdType=%d Erase-Mis!\n", ucErrCode, ucFCmdType);
400a51c3:	f60d21        	l32r	a2, 400a29f8 <_mcu2dram_text_start+0x1f8>
400a51c6:	f59c01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a51c9:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a51cc:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:89
400a51cf:	f5d721        	l32r	a2, 400a292c <_mcu2dram_text_start+0x12c>
400a51d2:	f59901        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a51d5:	0000c0        	callx0	a0
400a51d8:	ffff06        	j	400a51d8 <L3_ErrHAssertCmd..IH_1482204275+0x7c>

400a51db <L3_ErrHAssertCmd..IH_1482204275+0x7f>:
	...

400a51dc <L3_ErrHAssertCmd..IH_1482204275+0x80>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:532
            DBG_Printf("L3_ErrHAssertCmd ErrCode=%d Err.\n", ucErrCode);
            DBG_Getch();
        }
    }

    return;
400a51dc:	0108      	l32i.n	a0, a1, 0
400a51de:	10c112        	addi	a1, a1, 16
400a51e1:	f00d      	ret.n

400a51e3 <L3_ErrHAssertCmd..IH_1482204275+0x87>:
	...

400a51e4 <L3_ErrHNoDev..NI_1482204275>:
L3_ErrHNoDev():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1708
Usage      : 
History    : 
    1. 2016.7.25 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHNoDev(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a51e4:	f0c112        	addi	a1, a1, -16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1709
    DBG_Printf("NoDev Fail Pending...\n");
400a51e7:	f60521        	l32r	a2, 400a29fc <_mcu2dram_text_start+0x1fc>
400a51ea:	f59301        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a51ed:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a51f0:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:89
400a51f3:	f5ce21        	l32r	a2, 400a292c <_mcu2dram_text_start+0x12c>
400a51f6:	f59001        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a51f9:	0000c0        	callx0	a0

400a51fc <L3_ErrHNoDev..NI_1482204275+0x18>:
400a51fc:	ffff06        	j	400a51fc <L3_ErrHNoDev..NI_1482204275+0x18>

400a51ff <L3_ErrHNoDev..NI_1482204275+0x1b>:
	...

400a5200 <L3_ErrHErase..MI_1482204275>:
L3_ErrHErase():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1579
Usage      : Block Swap (option) + Request Status Report
History    : 
    1. 2016.7.25 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHErase(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a5200:	90c112        	addi	a1, a1, -112
400a5203:	146102        	s32i	a0, a1, 80
400a5206:	1761e2        	s32i	a14, a1, 92
400a5209:	1661d2        	s32i	a13, a1, 88
400a520c:	1861f2        	s32i	a15, a1, 96
400a520f:	1561c2        	s32i	a12, a1, 84
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1581
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
400a5212:	9238      	l32i.n	a3, a2, 36
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1579
Usage      : Block Swap (option) + Request Status Report
History    : 
    1. 2016.7.25 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHErase(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a5214:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1581
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
400a5216:	136132        	s32i	a3, a1, 76
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1580
History    : 
    1. 2016.7.25 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHErase(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
400a5219:	02f8      	l32i.n	a15, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1588
    U16 usVirBlk, usPhyBlk, usCurVirBlk, usNewVirBlk=INVALID_4F, usNewPhyBlk;
    BOOL bTLCBlk, bBackUpBlk, bLockedBlk, bNeedExtH;

    ucTLun = ptReqEntry->bsTLun;
    ucReqType = ptReqEntry->bsReqType;
    ucErrCode = ptErrHEntry->bsErrCode;
400a521b:	000332        	l8ui	a3, a3, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1586
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
    U8 ucTLun, ucSPU, ucLunInSPU, ucReqType, ucErrCode, ucPln;
    U16 usVirBlk, usPhyBlk, usCurVirBlk, usNewVirBlk=INVALID_4F, usNewPhyBlk;
    BOOL bTLCBlk, bBackUpBlk, bLockedBlk, bNeedExtH;

    ucTLun = ptReqEntry->bsTLun;
400a521e:	000fd2        	l8ui	a13, a15, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1591
    ucReqType = ptReqEntry->bsReqType;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
400a5221:	4f48      	l32i.n	a4, a15, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1589
    BOOL bTLCBlk, bBackUpBlk, bLockedBlk, bNeedExtH;

    ucTLun = ptReqEntry->bsTLun;
    ucReqType = ptReqEntry->bsReqType;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
400a5223:	3fe8      	l32i.n	a14, a15, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1593
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;

    L3_ErrHAssertCmd(ucReqType, ucErrCode);
400a5225:	0f28      	l32i.n	a2, a15, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1588
    U16 usVirBlk, usPhyBlk, usCurVirBlk, usNewVirBlk=INVALID_4F, usNewPhyBlk;
    BOOL bTLCBlk, bBackUpBlk, bLockedBlk, bNeedExtH;

    ucTLun = ptReqEntry->bsTLun;
    ucReqType = ptReqEntry->bsReqType;
    ucErrCode = ptErrHEntry->bsErrCode;
400a5227:	413130        	srli	a3, a3, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1593
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;

    L3_ErrHAssertCmd(ucReqType, ucErrCode);
400a522a:	252220        	extui	a2, a2, 18, 3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1588
    U16 usVirBlk, usPhyBlk, usCurVirBlk, usNewVirBlk=INVALID_4F, usNewPhyBlk;
    BOOL bTLCBlk, bBackUpBlk, bLockedBlk, bNeedExtH;

    ucTLun = ptReqEntry->bsTLun;
    ucReqType = ptReqEntry->bsReqType;
    ucErrCode = ptErrHEntry->bsErrCode;
400a522d:	106132        	s32i	a3, a1, 64
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1589
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
400a5230:	9400e0        	extui	a0, a14, 0, 10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1591
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
400a5233:	154240        	extui	a4, a4, 18, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1590

    ucTLun = ptReqEntry->bsTLun;
    ucReqType = ptReqEntry->bsReqType;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
400a5236:	94eae0        	extui	a14, a14, 10, 10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1591
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
400a5239:	116142        	s32i	a4, a1, 68
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1589
    BOOL bTLCBlk, bBackUpBlk, bLockedBlk, bNeedExtH;

    ucTLun = ptReqEntry->bsTLun;
    ucReqType = ptReqEntry->bsReqType;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
400a523c:	d109      	s32i.n	a0, a1, 52
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1593
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;

    L3_ErrHAssertCmd(ucReqType, ucErrCode);
400a523e:	fff1c5        	call0	400a515c <L3_ErrHAssertCmd..IH_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1596

    // Patch for the tsb-2d-tlc erase status issue.
    if (FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod)
400a5241:	4f28      	l32i.n	a2, a15, 16
400a5243:	152020        	extui	a2, a2, 16, 2
400a5246:	042266        	bnei	a2, 2, 400a524e <L3_ErrHErase..MI_1482204275+0x4e>
400a5249:	0d2d      	mov.n	a2, a13
400a524b:	ff17c5        	call0	400a43c8 <L3_ErrHRstLun..LH_1482204275>

400a524e <L3_ErrHErase..MI_1482204275+0x4e>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1601
    {
        L3_ErrHRstLun(ucTLun, FALSE);
    }

    bNeedExtH = L3_ErrHIsNeedExtH(ptCtrlEntry);
400a524e:	0c2d      	mov.n	a2, a12
400a5250:	ff2a45        	call0	400a44f8 <L3_ErrHIsNeedExtH..JH_1482204275>
400a5253:	020d      	mov.n	a0, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1602
    if (TRUE == bNeedExtH)
400a5255:	021266        	bnei	a2, 1, 400a525b <L3_ErrHErase..MI_1482204275+0x5b>
400a5258:	002806        	j	400a52fc <L3_ErrHErase..MI_1482204275+0xfc>
400a525b:	d1f8      	l32i.n	a15, a1, 52
400a525d:	5129      	s32i.n	a2, a1, 20
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:4420
    U8 ucSuperPu = L2_GET_SPU(ucTLun);
    U8 ucLunInSuperPu = L2_GET_LUN_IN_SPU(ucTLun);

    if (TRUE == BitValue)
    {
        l_aLunNeedSaveBBT[ucLunInSuperPu] |= (1 << ucSuperPu);
400a525f:	f57e31        	l32r	a3, 400a2858 <_mcu2dram_text_start+0x58>
400a5262:	126132        	s32i	a3, a1, 72
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1675
        L2_PBIT_Set_Free(ucSPU, ucLunInSPU, usPhyBlk, FALSE);
        L2_BbtAddBbtBadBlk(ucTLun, usPhyBlk, RT_BAD_BLK, ERASE_ERR);
        L2_BbtSetLunSaveBBTBitMap(ucTLun, TRUE);
    }

    ptErrHEntry->bsErrRpt = TRUE;
400a5265:	132152        	l32i	a5, a1, 76
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1677
        
    if (TRUE != L3_IFIsRecycled(ptCtrlEntry))
400a5268:	0c2d      	mov.n	a2, a12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1675
        L2_PBIT_Set_Free(ucSPU, ucLunInSPU, usPhyBlk, FALSE);
        L2_BbtAddBbtBadBlk(ucTLun, usPhyBlk, RT_BAD_BLK, ERASE_ERR);
        L2_BbtSetLunSaveBBTBitMap(ucTLun, TRUE);
    }

    ptErrHEntry->bsErrRpt = TRUE;
400a526a:	0548      	l32i.n	a4, a5, 0
400a526c:	160c      	movi.n	a6, 1
400a526e:	204460        	or	a4, a4, a6
400a5271:	0549      	s32i.n	a4, a5, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1677
        
    if (TRUE != L3_IFIsRecycled(ptCtrlEntry))
400a5273:	f5cc01        	l32r	a0, 400a29a4 <_mcu2dram_text_start+0x1a4>
400a5276:	0000c0        	callx0	a0
400a5279:	081226        	beqi	a2, 1, 400a5285 <L3_ErrHErase..MI_1482204275+0x85>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1679
    {
        L3_IFUpdtReqStatus(ptCtrlEntry);
400a527c:	202cc0        	or	a2, a12, a12
400a527f:	f59b01        	l32r	a0, 400a28ec <_mcu2dram_text_start+0xec>
400a5282:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1682
    }
        
    L3_FCMDQSetIntrEptr(ucTLun, INVALID_DPTR, FALSE);
400a5285:	0d2d      	mov.n	a2, a13
400a5287:	ffa032        	movi	a3, 255
400a528a:	040c      	movi.n	a4, 0
400a528c:	1021c2        	l32i	a12, a1, 64
400a528f:	f59901        	l32r	a0, 400a28f4 <_mcu2dram_text_start+0xf4>
400a5292:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1683
    L3_ErrHFailLog(ucTLun, ucErrCode);
400a5295:	0c3d      	mov.n	a3, a12
400a5297:	202dd0        	or	a2, a13, a13
400a529a:	ffcc45        	call0	400a4f60 <L3_ErrHFailLog..DH_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1685

    if (FALSE == bNeedExtH)
400a529d:	5178      	l32i.n	a7, a1, 20
400a529f:	27bc      	beqz.n	a7, 400a52d5 <L3_ErrHErase..MI_1482204275+0xd5>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1691
    {
        DBG_Printf("TLun%d Blk%d_%d Pln%d Erase Fail NoExtH\n", ucTLun, usVirBlk, usPhyBlk, ucPln);
    }
    else
    {
        DBG_Printf("TLun%d Blk%d_%d_%d Erase Fail WithExtH [%d,%d]-[%d,%d]\n", ucTLun, usVirBlk, usPhyBlk, usCurVirBlk, usCurVirBlk, usPhyBlk, usNewVirBlk, usNewPhyBlk);
400a52a1:	f5d721        	l32r	a2, 400a2a00 <_mcu2dram_text_start+0x200>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1694
    }

    return;
400a52a4:	1521c2        	l32i	a12, a1, 84
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1691
    {
        DBG_Printf("TLun%d Blk%d_%d Pln%d Erase Fail NoExtH\n", ucTLun, usVirBlk, usPhyBlk, ucPln);
    }
    else
    {
        DBG_Printf("TLun%d Blk%d_%d_%d Erase Fail WithExtH [%d,%d]-[%d,%d]\n", ucTLun, usVirBlk, usPhyBlk, usCurVirBlk, usCurVirBlk, usPhyBlk, usNewVirBlk, usNewPhyBlk);
400a52a7:	0d3d      	mov.n	a3, a13
400a52a9:	0e5d      	mov.n	a5, a14
400a52ab:	0f4d      	mov.n	a4, a15
400a52ad:	122192        	l32i	a9, a1, 72
400a52b0:	091172        	l16ui	a7, a1, 18
400a52b3:	01e9      	s32i.n	a14, a1, 0
400a52b5:	076d      	mov.n	a6, a7
400a52b7:	1199      	s32i.n	a9, a1, 4
400a52b9:	081182        	l16ui	a8, a1, 16
400a52bc:	2189      	s32i.n	a8, a1, 8
400a52be:	f55e01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a52c1:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1694
    }

    return;
400a52c4:	1821f2        	l32i	a15, a1, 96
400a52c7:	1721e2        	l32i	a14, a1, 92
400a52ca:	1621d2        	l32i	a13, a1, 88
400a52cd:	142102        	l32i	a0, a1, 80
400a52d0:	70c112        	addi	a1, a1, 112
400a52d3:	f00d      	ret.n

400a52d5 <L3_ErrHErase..MI_1482204275+0xd5>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1687
    L3_FCMDQSetIntrEptr(ucTLun, INVALID_DPTR, FALSE);
    L3_ErrHFailLog(ucTLun, ucErrCode);

    if (FALSE == bNeedExtH)
    {
        DBG_Printf("TLun%d Blk%d_%d Pln%d Erase Fail NoExtH\n", ucTLun, usVirBlk, usPhyBlk, ucPln);
400a52d5:	f5cb21        	l32r	a2, 400a2a04 <_mcu2dram_text_start+0x204>
400a52d8:	112162        	l32i	a6, a1, 68
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1694
    else
    {
        DBG_Printf("TLun%d Blk%d_%d_%d Erase Fail WithExtH [%d,%d]-[%d,%d]\n", ucTLun, usVirBlk, usPhyBlk, usCurVirBlk, usCurVirBlk, usPhyBlk, usNewVirBlk, usNewPhyBlk);
    }

    return;
400a52db:	1521c2        	l32i	a12, a1, 84
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1687
    L3_FCMDQSetIntrEptr(ucTLun, INVALID_DPTR, FALSE);
    L3_ErrHFailLog(ucTLun, ucErrCode);

    if (FALSE == bNeedExtH)
    {
        DBG_Printf("TLun%d Blk%d_%d Pln%d Erase Fail NoExtH\n", ucTLun, usVirBlk, usPhyBlk, ucPln);
400a52de:	0f4d      	mov.n	a4, a15
400a52e0:	0d3d      	mov.n	a3, a13
400a52e2:	205ee0        	or	a5, a14, a14
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1694
    else
    {
        DBG_Printf("TLun%d Blk%d_%d_%d Erase Fail WithExtH [%d,%d]-[%d,%d]\n", ucTLun, usVirBlk, usPhyBlk, usCurVirBlk, usCurVirBlk, usPhyBlk, usNewVirBlk, usNewPhyBlk);
    }

    return;
400a52e5:	1621d2        	l32i	a13, a1, 88
400a52e8:	1721e2        	l32i	a14, a1, 92
400a52eb:	1821f2        	l32i	a15, a1, 96
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1687
    L3_FCMDQSetIntrEptr(ucTLun, INVALID_DPTR, FALSE);
    L3_ErrHFailLog(ucTLun, ucErrCode);

    if (FALSE == bNeedExtH)
    {
        DBG_Printf("TLun%d Blk%d_%d Pln%d Erase Fail NoExtH\n", ucTLun, usVirBlk, usPhyBlk, ucPln);
400a52ee:	f55201        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a52f1:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1694
    else
    {
        DBG_Printf("TLun%d Blk%d_%d_%d Erase Fail WithExtH [%d,%d]-[%d,%d]\n", ucTLun, usVirBlk, usPhyBlk, usCurVirBlk, usCurVirBlk, usPhyBlk, usNewVirBlk, usNewPhyBlk);
    }

    return;
400a52f4:	142102        	l32i	a0, a1, 80
400a52f7:	70c112        	addi	a1, a1, 112
400a52fa:	f00d      	ret.n

400a52fc <L3_ErrHErase..MI_1482204275+0xfc>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1606
    bNeedExtH = L3_ErrHIsNeedExtH(ptCtrlEntry);
    if (TRUE == bNeedExtH)
    {
        ucSPU = L2_GET_SPU(ucTLun);
        ucLunInSPU = L2_GET_LUN_IN_SPU(ucTLun);
        usCurVirBlk = L2_PBIT_GetVirturlBlockAddr(ucSPU, ucLunInSPU, usPhyBlk);
400a52fc:	f55081        	l32r	a8, 400a283c <_mcu2dram_text_start+0x3c>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:355
}
U16 MCU12_DRAM_TEXT L2_PBIT_GetVirturlBlockAddr(U8 ucSuperPu, U8 ucLunInSuperPu, U16 PBN)
{
    U16 VirtualBlockAddr;

    if (pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bError == TRUE)
400a52ff:	11ade0        	slli	a10, a13, 2
400a5302:	aa8a      	add.n	a10, a10, a8
400a5304:	f1a9      	s32i.n	a10, a1, 60
400a5306:	7c2aa2        	l32i	a10, a10, 0x1f0
400a5309:	0d2d      	mov.n	a2, a13
400a530b:	b05ea0        	addx8	a5, a14, a10
400a530e:	15b8      	l32i.n	a11, a5, 4
400a5310:	114ed0        	slli	a4, a14, 3
400a5313:	096b17        	bbci	a11, 1, 400a5320 <L3_ErrHErase..MI_1482204275+0x120>
400a5316:	f550b1        	l32r	a11, 400a2858 <_mcu2dram_text_start+0x58>
400a5319:	e1b9      	s32i.n	a11, a1, 56
400a531b:	000186        	j	400a5325 <L3_ErrHErase..MI_1482204275+0x125>

400a531e <L3_ErrHErase..MI_1482204275+0x11e>:
	...

400a5320 <L3_ErrHErase..MI_1482204275+0x120>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:358
        return INVALID_4F;

    VirtualBlockAddr = pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].VirtualBlockAddr;
400a5320:	001532        	l16ui	a3, a5, 0
400a5323:	e139      	s32i.n	a3, a1, 56
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1607
        bTLCBlk = (FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
400a5325:	180c      	movi.n	a8, 1
400a5327:	050c      	movi.n	a5, 0
400a5329:	4f98      	l32i.n	a9, a15, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1609
        // Double check the Request Block type and the VBT info.
        ASSERT(bTLCBlk == L2_VBT_Get_TLC(ucSPU, usCurVirBlk));
400a532b:	f168      	l32i.n	a6, a1, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1606
    bNeedExtH = L3_ErrHIsNeedExtH(ptCtrlEntry);
    if (TRUE == bNeedExtH)
    {
        ucSPU = L2_GET_SPU(ucTLun);
        ucLunInSPU = L2_GET_LUN_IN_SPU(ucTLun);
        usCurVirBlk = L2_PBIT_GetVirturlBlockAddr(ucSPU, ucLunInSPU, usPhyBlk);
400a532d:	e1b8      	l32i.n	a11, a1, 56
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1609
        bTLCBlk = (FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
        // Double check the Request Block type and the VBT info.
        ASSERT(bTLCBlk == L2_VBT_Get_TLC(ucSPU, usCurVirBlk));
400a532f:	9c2662        	l32i	a6, a6, 0x270
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1606
    bNeedExtH = L3_ErrHIsNeedExtH(ptCtrlEntry);
    if (TRUE == bNeedExtH)
    {
        ucSPU = L2_GET_SPU(ucTLun);
        ucLunInSPU = L2_GET_LUN_IN_SPU(ucTLun);
        usCurVirBlk = L2_PBIT_GetVirturlBlockAddr(ucSPU, ucLunInSPU, usPhyBlk);
400a5332:	0b3d      	mov.n	a3, a11
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1607
        bTLCBlk = (FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
400a5334:	159090        	extui	a9, a9, 16, 2
400a5337:	fec992        	addi	a9, a9, -2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1609
        // Double check the Request Block type and the VBT info.
        ASSERT(bTLCBlk == L2_VBT_Get_TLC(ucSPU, usCurVirBlk));
400a533a:	11bbc0        	slli	a11, a11, 4
400a533d:	6b6a      	add.n	a6, a11, a6
400a533f:	2678      	l32i.n	a7, a6, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1607
    if (TRUE == bNeedExtH)
    {
        ucSPU = L2_GET_SPU(ucTLun);
        ucLunInSPU = L2_GET_LUN_IN_SPU(ucTLun);
        usCurVirBlk = L2_PBIT_GetVirturlBlockAddr(ucSPU, ucLunInSPU, usPhyBlk);
        bTLCBlk = (FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
400a5341:	835890        	moveqz	a5, a8, a9
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1609
        // Double check the Request Block type and the VBT info.
        ASSERT(bTLCBlk == L2_VBT_Get_TLC(ucSPU, usCurVirBlk));
400a5344:	047870        	extui	a7, a7, 8, 1
400a5347:	021577        	beq	a5, a7, 400a534d <L3_ErrHErase..MI_1482204275+0x14d>
400a534a:	002886        	j	400a53f0 <L3_ErrHErase..MI_1482204275+0x1f0>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1611

        if (TRUE != L2_BM_BackUpBlockEmpty(ucSPU, ucLunInSPU))
400a534d:	f542f1        	l32r	a15, 400a2858 <_mcu2dram_text_start+0x58>
400a5350:	080c      	movi.n	a8, 0
400a5352:	a129      	s32i.n	a2, a1, 40
400a5354:	9139      	s32i.n	a3, a1, 36
400a5356:	8149      	s32i.n	a4, a1, 32
400a5358:	71b9      	s32i.n	a11, a1, 28
400a535a:	6159      	s32i.n	a5, a1, 24
400a535c:	5109      	s32i.n	a0, a1, 20
400a535e:	24a272        	movi	a7, 0x224
400a5361:	12a776        	loopgtz	a7, 400a5377 <L3_ErrHErase..MI_1482204275+0x177>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:440
    U16 Ret;

    Ret = TRUE;
    for (i = 0; i < (BLK_PER_PLN + RSV_BLK_PER_PLN); i++)
    {
        if ((pPBITItem[i].bBackup == TRUE) && (pPBITItem[i].bFree == TRUE))
400a5364:	b008a0        	addx8	a0, a8, a10
400a5367:	1008      	l32i.n	a0, a0, 4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:438
    U16 i;
    PBIT_ENTRY* pPBITItem = pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu];
    U16 Ret;

    Ret = TRUE;
    for (i = 0; i < (BLK_PER_PLN + RSV_BLK_PER_PLN); i++)
400a5369:	881b      	addi.n	a8, a8, 1
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:440
    {
        if ((pPBITItem[i].bBackup == TRUE) && (pPBITItem[i].bFree == TRUE))
400a536b:	056037        	bbci	a0, 3, 400a5374 <L3_ErrHErase..MI_1482204275+0x174>
400a536e:	026007        	bbci	a0, 0, 400a5374 <L3_ErrHErase..MI_1482204275+0x174>
400a5371:	002006        	j	400a53f5 <L3_ErrHErase..MI_1482204275+0x1f5>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:438
    U16 i;
    PBIT_ENTRY* pPBITItem = pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu];
    U16 Ret;

    Ret = TRUE;
    for (i = 0; i < (BLK_PER_PLN + RSV_BLK_PER_PLN); i++)
400a5374:	f48080        	extui	a8, a8, 0, 16

400a5377 <L3_ErrHErase..MI_1482204275+0x177>:
400a5377:	0d2d      	mov.n	a2, a13
400a5379:	030c      	movi.n	a3, 0
400a537b:	0e4d      	mov.n	a4, a14
400a537d:	ff0245        	call0	400a43a4 <L2_PBIT_Set_Error>
400a5380:	0d2d      	mov.n	a2, a13
400a5382:	6138      	l32i.n	a3, a1, 24
400a5384:	b139      	s32i.n	a3, a1, 44
400a5386:	f55801        	l32r	a0, 400a28e8 <_mcu2dram_text_start+0xe8>
400a5389:	0000c0        	callx0	a0
400a538c:	126122        	s32i	a2, a1, 72
400a538f:	c0a2f0        	sub	a10, a2, a15
400a5392:	1c2a16        	beqz	a10, 400a5558 <L3_ErrHErase..MI_1482204275+0x358>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:420

U16 MCU12_DRAM_TEXT L2_VBT_GetPhysicalBlockAddr(U8 ucSuperPu, U8 ucLunInSuperPu, U16 VBN)
{
    U16 PhysicalBlockAddr;

    PhysicalBlockAddr = pVBT[ucSuperPu]->m_VBT[VBN].PhysicalBlockAddr[ucLunInSuperPu];
400a5395:	f188      	l32i.n	a8, a1, 60
400a5397:	9c2882        	l32i	a8, a8, 0x270
400a539a:	1142c0        	slli	a4, a2, 4
400a539d:	484a      	add.n	a4, a8, a4
400a539f:	001442        	l16ui	a4, a4, 0
400a53a2:	c0b4f0        	sub	a11, a4, a15
400a53a5:	1b3b16        	beqz	a11, 400a555c <L3_ErrHErase..MI_1482204275+0x35c>
400a53a8:	b108      	l32i.n	a0, a1, 44
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1631

            usNewVirBlk = L2_BM_AllocateFreeBlock(ucSPU, BLOCK_TYPE_MIN_ERASE_CNT, bTLCBlk);
            ASSERT(INVALID_4F != usNewVirBlk);

            usNewPhyBlk = L2_VBT_GetPhysicalBlockAddr(ucSPU, ucLunInSPU, usNewVirBlk);
            ASSERT(INVALID_4F != usNewPhyBlk);
400a53aa:	085142        	s16i	a4, a1, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1633
            
            if (TRUE == bTLCBlk)
400a53ad:	f52391        	l32r	a9, 400a283c <_mcu2dram_text_start+0x3c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1631

            usNewVirBlk = L2_BM_AllocateFreeBlock(ucSPU, BLOCK_TYPE_MIN_ERASE_CNT, bTLCBlk);
            ASSERT(INVALID_4F != usNewVirBlk);

            usNewPhyBlk = L2_VBT_GetPhysicalBlockAddr(ucSPU, ucLunInSPU, usNewVirBlk);
            ASSERT(INVALID_4F != usNewPhyBlk);
400a53b0:	91a8      	l32i.n	a10, a1, 36
400a53b2:	0951a2        	s16i	a10, a1, 18
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1633
            
            if (TRUE == bTLCBlk)
400a53b5:	a09d90        	addx4	a9, a13, a9
400a53b8:	61a8      	l32i.n	a10, a1, 24
400a53ba:	bc2992        	l32i	a9, a9, 0x2f0
400a53bd:	aa0b      	addi.n	a10, a10, -1
400a53bf:	1e9a16        	beqz	a10, 400a55ac <L3_ErrHErase..MI_1482204275+0x3ac>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1641
                g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
            }
            else
            {
                g_PuInfo[ucSPU]->m_DataBlockCnt[BLKTYPE_SLC]--;
                g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
400a53c2:	59b8      	l32i.n	a11, a9, 20
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1640
                g_PuInfo[ucSPU]->m_DataBlockCnt[BLKTYPE_TLC]--;
                g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
            }
            else
            {
                g_PuInfo[ucSPU]->m_DataBlockCnt[BLKTYPE_SLC]--;
400a53c4:	0619f2        	l16ui	a15, a9, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1641
                g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
400a53c7:	fedbb2        	addmi	a11, a11, 0xfffffe00
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1640
                g_PuInfo[ucSPU]->m_DataBlockCnt[BLKTYPE_TLC]--;
                g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
            }
            else
            {
                g_PuInfo[ucSPU]->m_DataBlockCnt[BLKTYPE_SLC]--;
400a53ca:	ff0b      	addi.n	a15, a15, -1
400a53cc:	0659f2        	s16i	a15, a9, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1641
                g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
400a53cf:	59b9      	s32i.n	a11, a9, 20

400a53d1 <L3_ErrHErase..MI_1482204275+0x1d1>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:315

    for (ucLunInSuperPu = 0; ucLunInSuperPu < LUN_NUM_PER_SUPERPU; ucLunInSuperPu++)
    {
        PBN = pVBT[ucSuperPu]->m_VBT[VirBlockAddr].PhysicalBlockAddr[ucLunInSuperPu];

        if (TRUE == pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bLock)
400a53d1:	f1a8      	l32i.n	a10, a1, 60
400a53d3:	7168      	l32i.n	a6, a1, 28
400a53d5:	7c2aa2        	l32i	a10, a10, 0x1f0
400a53d8:	668a      	add.n	a6, a6, a8
400a53da:	0016f2        	l16ui	a15, a6, 0
400a53dd:	b0ffa0        	addx8	a15, a15, a10
400a53e0:	1ff8      	l32i.n	a15, a15, 4
400a53e2:	04fbf0        	extui	a15, a15, 11, 1
400a53e5:	09bf16        	beqz	a15, 400a5484 <L3_ErrHErase..MI_1482204275+0x284>
400a53e8:	1b0c      	movi.n	a11, 1
400a53ea:	c1b9      	s32i.n	a11, a1, 48
400a53ec:	002606        	j	400a5488 <L3_ErrHErase..MI_1482204275+0x288>

400a53ef <L3_ErrHErase..MI_1482204275+0x1ef>:
	...

400a53f0 <L3_ErrHErase..MI_1482204275+0x1f0>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1609
        ucSPU = L2_GET_SPU(ucTLun);
        ucLunInSPU = L2_GET_LUN_IN_SPU(ucTLun);
        usCurVirBlk = L2_PBIT_GetVirturlBlockAddr(ucSPU, ucLunInSPU, usPhyBlk);
        bTLCBlk = (FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod) ? TRUE : FALSE;
        // Double check the Request Block type and the VBT info.
        ASSERT(bTLCBlk == L2_VBT_Get_TLC(ucSPU, usCurVirBlk));
400a53f0:	ffff06        	j	400a53f0 <L3_ErrHErase..MI_1482204275+0x1f0>

400a53f3 <L3_ErrHErase..MI_1482204275+0x1f3>:
	...

400a53f5 <L3_ErrHErase..MI_1482204275+0x1f5>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:565
    else if (BLOCK_TYPE_MIN_ERASE_CNT == AllocateType)
    {
        U32 MinEraseCnt = INVALID_8F;
        U16 Pos = INVALID_4F;

        if (TRUE != ucTLCBlk)
400a53f5:	61f8      	l32i.n	a15, a1, 24
400a53f7:	f51851        	l32r	a5, 400a2858 <_mcu2dram_text_start+0x58>
400a53fa:	0f3d      	mov.n	a3, a15
400a53fc:	ff0b      	addi.n	a15, a15, -1
400a53fe:	163f16        	beqz	a15, 400a5565 <L3_ErrHErase..MI_1482204275+0x365>
400a5401:	0a0d      	mov.n	a0, a10
400a5403:	090c      	movi.n	a9, 0
400a5405:	f51441        	l32r	a4, 400a2858 <_mcu2dram_text_start+0x58>
400a5408:	ffafb2        	movi	a11, -1
400a540b:	24a222        	movi	a2, 0x224
400a540e:	16a276        	loopgtz	a2, 400a5428 <L3_ErrHErase..MI_1482204275+0x228>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:571
        {
            for (i = 0; i < (BLK_PER_PLN + RSV_BLK_PER_PLN); i++)
            {
                if (pPBITItem[i].bBackup == FALSE)
                {
                    continue;
400a5411:	1088      	l32i.n	a8, a0, 4
400a5413:	0d6837        	bbci	a8, 3, 400a5424 <L3_ErrHErase..MI_1482204275+0x224>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:576
                }

                if (pPBITItem[i].bFree == FALSE)
                {
                    continue;
400a5416:	0a6807        	bbci	a8, 0, 400a5424 <L3_ErrHErase..MI_1482204275+0x224>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:579
                }

                if (pPBITItem[i].EraseCnt < MinEraseCnt)
400a5419:	0110f2        	l16ui	a15, a0, 2
400a541c:	04bfb7        	bgeu	a15, a11, 400a5424 <L3_ErrHErase..MI_1482204275+0x224>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:581
                {
                    MinEraseCnt = pPBITItem[i].EraseCnt;
400a541f:	0fbd      	mov.n	a11, a15
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:582
                    Pos = i;
400a5421:	f44090        	extui	a4, a9, 0, 16
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:567
        U32 MinEraseCnt = INVALID_8F;
        U16 Pos = INVALID_4F;

        if (TRUE != ucTLCBlk)
        {
            for (i = 0; i < (BLK_PER_PLN + RSV_BLK_PER_PLN); i++)
400a5424:	991b      	addi.n	a9, a9, 1
400a5426:	008b      	addi.n	a0, a0, 8

400a5428 <L3_ErrHErase..MI_1482204275+0x228>:
400a5428:	b139      	s32i.n	a3, a1, 44
400a542a:	c07450        	sub	a7, a4, a5
400a542d:	168716        	beqz	a7, 400a5599 <L3_ErrHErase..MI_1482204275+0x399>

400a5430 <L3_ErrHErase..MI_1482204275+0x230>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:617
        else
        {
            pPBITItem[Pos].bFree = FALSE;
            pPBITItem[Pos].bAllocated = TRUE;
            pPBITItem[Pos].bTLC = ucTLCBlk;
            g_pSubSystemDevParamPage->UsedRsvdBlockCnt++;
400a5430:	f50391        	l32r	a9, 400a283c <_mcu2dram_text_start+0x3c>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:614
        {
            return INVALID_4F;
        }
        else
        {
            pPBITItem[Pos].bFree = FALSE;
400a5433:	e27c      	movi.n	a2, -2
400a5435:	b0f4a0        	addx8	a15, a4, a10
400a5438:	1fb8      	l32i.n	a11, a15, 4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:615
            pPBITItem[Pos].bAllocated = TRUE;
400a543a:	400c      	movi.n	a0, 4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:614
        {
            return INVALID_4F;
        }
        else
        {
            pPBITItem[Pos].bFree = FALSE;
400a543c:	10bb20        	and	a11, a11, a2
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:615
            pPBITItem[Pos].bAllocated = TRUE;
400a543f:	20bb00        	or	a11, a11, a0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:616
            pPBITItem[Pos].bTLC = ucTLCBlk;
400a5442:	b108      	l32i.n	a0, a1, 44
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:617
            g_pSubSystemDevParamPage->UsedRsvdBlockCnt++;
400a5444:	192992        	l32i	a9, a9, 100
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:616
        }
        else
        {
            pPBITItem[Pos].bFree = FALSE;
            pPBITItem[Pos].bAllocated = TRUE;
            pPBITItem[Pos].bTLC = ucTLCBlk;
400a5447:	60c0b4        	insbits	a11, a0, 12, 12
400a544a:	1fb9      	s32i.n	a11, a15, 4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:618
            g_pSubSystemDevParamPage->UsedRsvdBlockCnt++;
            g_pSubSystemDevParamPage->AvailRsvdSpace--;
400a544c:	7988      	l32i.n	a8, a9, 28
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:617
        else
        {
            pPBITItem[Pos].bFree = FALSE;
            pPBITItem[Pos].bAllocated = TRUE;
            pPBITItem[Pos].bTLC = ucTLCBlk;
            g_pSubSystemDevParamPage->UsedRsvdBlockCnt++;
400a544e:	39b8      	l32i.n	a11, a9, 12
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:618
            g_pSubSystemDevParamPage->AvailRsvdSpace--;
400a5450:	880b      	addi.n	a8, a8, -1
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:617
        else
        {
            pPBITItem[Pos].bFree = FALSE;
            pPBITItem[Pos].bAllocated = TRUE;
            pPBITItem[Pos].bTLC = ucTLCBlk;
            g_pSubSystemDevParamPage->UsedRsvdBlockCnt++;
400a5452:	bb1b      	addi.n	a11, a11, 1
400a5454:	39b9      	s32i.n	a11, a9, 12
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:618
            g_pSubSystemDevParamPage->AvailRsvdSpace--;
400a5456:	7989      	s32i.n	a8, a9, 28
400a5458:	c0b450        	sub	a11, a4, a5
400a545b:	101b16        	beqz	a11, 400a5560 <L3_ErrHErase..MI_1482204275+0x360>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1616
        if (TRUE != L2_BM_BackUpBlockEmpty(ucSPU, ucLunInSPU))
        {
            bBackUpBlk = TRUE;

            usNewPhyBlk = L2_BM_AllocateBackUpBlock(ucSPU, ucLunInSPU, BLOCK_TYPE_MIN_ERASE_CNT, bTLCBlk);
            ASSERT(INVALID_4F != usNewPhyBlk);
400a545e:	085142        	s16i	a4, a1, 16
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:325

    return FALSE;
}
void MCU12_DRAM_TEXT L2_PBIT_Set_Backup(U8 ucSuperPu, U8 ucLunInSuperPu, U16 PBN, U8 bTrue)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bBackup = bTrue;
400a5461:	b054a0        	addx8	a5, a4, a10
400a5464:	1538      	l32i.n	a3, a5, 4
400a5466:	777c      	movi.n	a7, -9
400a5468:	103370        	and	a3, a3, a7
400a546b:	1539      	s32i.n	a3, a5, 4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:315

    for (ucLunInSuperPu = 0; ucLunInSuperPu < LUN_NUM_PER_SUPERPU; ucLunInSuperPu++)
    {
        PBN = pVBT[ucSuperPu]->m_VBT[VirBlockAddr].PhysicalBlockAddr[ucLunInSuperPu];

        if (TRUE == pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bLock)
400a546d:	0016f2        	l16ui	a15, a6, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1616
400a5470:	9128      	l32i.n	a2, a1, 36
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:315
400a5472:	b0ffa0        	addx8	a15, a15, a10
400a5475:	1ff8      	l32i.n	a15, a15, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1616
400a5477:	095122        	s16i	a2, a1, 18
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:315
400a547a:	2f6fb7        	bbci	a15, 11, 400a54ad <L3_ErrHErase..MI_1482204275+0x2ad>
400a547d:	180c      	movi.n	a8, 1
400a547f:	c189      	s32i.n	a8, a1, 48
400a5481:	000b06        	j	400a54b1 <L3_ErrHErase..MI_1482204275+0x2b1>

400a5484 <L3_ErrHErase..MI_1482204275+0x284>:
400a5484:	090c      	movi.n	a9, 0
400a5486:	c199      	s32i.n	a9, a1, 48
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:369

    return VirtualBlockAddr;
}
void MCU12_DRAM_TEXT L2_PBIT_SetVirturlBlockAddr(U8 ucSuperPu, U8 ucLunInSuperPu, U16 PBN, U16 VBN)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].VirtualBlockAddr = VBN;
400a5488:	1221b2        	l32i	a11, a1, 72
400a548b:	81f8      	l32i.n	a15, a1, 32
400a548d:	b034a0        	addx8	a3, a4, a10
400a5490:	e128      	l32i.n	a2, a1, 56
400a5492:	005322        	s16i	a2, a3, 0
400a5495:	ffaa      	add.n	a15, a15, a10
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:427
    return PhysicalBlockAddr;
}

void MCU12_DRAM_TEXT L2_VBT_SetPhysicalBlockAddr(U8 ucSuperPu, U8 ucLunInSuperPu, U16 VBN, U16 PBN)
{
    pVBT[ucSuperPu]->m_VBT[VBN].PhysicalBlockAddr[ucLunInSuperPu] = PBN;
400a5497:	005642        	s16i	a4, a6, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:369

    return VirtualBlockAddr;
}
void MCU12_DRAM_TEXT L2_PBIT_SetVirturlBlockAddr(U8 ucSuperPu, U8 ucLunInSuperPu, U16 PBN, U16 VBN)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].VirtualBlockAddr = VBN;
400a549a:	005fb2        	s16i	a11, a15, 0
400a549d:	11f4d0        	slli	a15, a4, 3
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:427
    return PhysicalBlockAddr;
}

void MCU12_DRAM_TEXT L2_VBT_SetPhysicalBlockAddr(U8 ucSuperPu, U8 ucLunInSuperPu, U16 VBN, U16 PBN)
{
    pVBT[ucSuperPu]->m_VBT[VBN].PhysicalBlockAddr[ucLunInSuperPu] = PBN;
400a54a0:	11bbc0        	slli	a11, a11, 4
400a54a3:	b8ba      	add.n	a11, a8, a11
400a54a5:	005be2        	s16i	a14, a11, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1652
        L2_PBIT_SetVirturlBlockAddr(ucSPU, ucLunInSPU, usNewPhyBlk, usCurVirBlk);
        L2_VBT_SetPhysicalBlockAddr(ucSPU, ucLunInSPU, usCurVirBlk, usNewPhyBlk);
        if (FALSE == bBackUpBlk)
        {
            L2_PBIT_SetVirturlBlockAddr(ucSPU, ucLunInSPU, usPhyBlk, usNewVirBlk);
            L2_VBT_SetPhysicalBlockAddr(ucSPU, ucLunInSPU, usNewVirBlk, usPhyBlk);
400a54a8:	000706        	j	400a54c8 <L3_ErrHErase..MI_1482204275+0x2c8>

400a54ab <L3_ErrHErase..MI_1482204275+0x2ab>:
	...

400a54ad <L3_ErrHErase..MI_1482204275+0x2ad>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:315

    for (ucLunInSuperPu = 0; ucLunInSuperPu < LUN_NUM_PER_SUPERPU; ucLunInSuperPu++)
    {
        PBN = pVBT[ucSuperPu]->m_VBT[VirBlockAddr].PhysicalBlockAddr[ucLunInSuperPu];

        if (TRUE == pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bLock)
400a54ad:	050c      	movi.n	a5, 0
400a54af:	c159      	s32i.n	a5, a1, 48
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:369

    return VirtualBlockAddr;
}
void MCU12_DRAM_TEXT L2_PBIT_SetVirturlBlockAddr(U8 ucSuperPu, U8 ucLunInSuperPu, U16 PBN, U16 VBN)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].VirtualBlockAddr = VBN;
400a54b1:	e178      	l32i.n	a7, a1, 56
400a54b3:	f48040        	extui	a8, a4, 0, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1652
400a54b6:	f4e891        	l32r	a9, 400a2858 <_mcu2dram_text_start+0x58>
400a54b9:	126192        	s32i	a9, a1, 72
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:369
400a54bc:	11f8d0        	slli	a15, a8, 3
400a54bf:	b088a0        	addx8	a8, a8, a10
400a54c2:	005872        	s16i	a7, a8, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:427
    return PhysicalBlockAddr;
}

void MCU12_DRAM_TEXT L2_VBT_SetPhysicalBlockAddr(U8 ucSuperPu, U8 ucLunInSuperPu, U16 VBN, U16 PBN)
{
    pVBT[ucSuperPu]->m_VBT[VBN].PhysicalBlockAddr[ucLunInSuperPu] = PBN;
400a54c5:	005642        	s16i	a4, a6, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1655
        }

        L2_PBIT_Set_TLC(ucSPU, ucLunInSPU, usNewPhyBlk, bTLCBlk);
400a54c8:	0d2d      	mov.n	a2, a13
400a54ca:	030c      	movi.n	a3, 0
400a54cc:	005d      	mov.n	a5, a0
400a54ce:	f50a01        	l32r	a0, 400a28f8 <_mcu2dram_text_start+0xf8>
400a54d1:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1660

        L2_PBIT_Set_Allocate(ucSPU, ucLunInSPU, usNewPhyBlk, FALSE);
        L2_PBIT_Set_Free(ucSPU, ucLunInSPU, usNewPhyBlk, TRUE);
        L2_PBIT_Set_Lock(ucSPU, usCurVirBlk, bLockedBlk);
        if (TRUE == bTLCBlk)
400a54d4:	61a8      	l32i.n	a10, a1, 24
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:337
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bFree = bTrue;
}
void MCU12_DRAM_TEXT L2_PBIT_Set_Allocate(U8 ucSuperPu, U8 ucLunInSuperPu, U16 PBN, U8 bTrue)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bAllocated = bTrue;
400a54d6:	b67c      	movi.n	a6, -5
400a54d8:	f178      	l32i.n	a7, a1, 60
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:296
void MCU12_DRAM_TEXT L2_PBIT_Set_Lock(U8 ucSuperPu, U16 VirBlockAddr, U8 bTrue)
{
    U8 ucLunInSuperPu;
    U16 PBN;

    pVBT[ucSuperPu]->m_VBT[VirBlockAddr].bLockedInWL = bTrue;
400a54da:	7158      	l32i.n	a5, a1, 28
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:337
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bFree = bTrue;
}
void MCU12_DRAM_TEXT L2_PBIT_Set_Allocate(U8 ucSuperPu, U8 ucLunInSuperPu, U16 PBN, U8 bTrue)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bAllocated = bTrue;
400a54dc:	7c2702        	l32i	a0, a7, 0x1f0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:296
void MCU12_DRAM_TEXT L2_PBIT_Set_Lock(U8 ucSuperPu, U16 VirBlockAddr, U8 bTrue)
{
    U8 ucLunInSuperPu;
    U16 PBN;

    pVBT[ucSuperPu]->m_VBT[VirBlockAddr].bLockedInWL = bTrue;
400a54df:	9c2772        	l32i	a7, a7, 0x270
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:337
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bFree = bTrue;
}
void MCU12_DRAM_TEXT L2_PBIT_Set_Allocate(U8 ucSuperPu, U8 ucLunInSuperPu, U16 PBN, U8 bTrue)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bAllocated = bTrue;
400a54e2:	4f0a      	add.n	a4, a15, a0
400a54e4:	1438      	l32i.n	a3, a4, 4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:296
void MCU12_DRAM_TEXT L2_PBIT_Set_Lock(U8 ucSuperPu, U16 VirBlockAddr, U8 bTrue)
{
    U8 ucLunInSuperPu;
    U16 PBN;

    pVBT[ucSuperPu]->m_VBT[VirBlockAddr].bLockedInWL = bTrue;
400a54e6:	557a      	add.n	a5, a5, a7
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:337
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bFree = bTrue;
}
void MCU12_DRAM_TEXT L2_PBIT_Set_Allocate(U8 ucSuperPu, U8 ucLunInSuperPu, U16 PBN, U8 bTrue)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bAllocated = bTrue;
400a54e8:	103360        	and	a3, a3, a6
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:333
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bError = bTrue;
}
void MCU12_DRAM_TEXT L2_PBIT_Set_Free(U8 ucSuperPu, U8 ucLunInSuperPu, U16 PBN, U8 bTrue)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bFree = bTrue;
400a54eb:	160c      	movi.n	a6, 1
400a54ed:	203360        	or	a3, a3, a6
400a54f0:	1439      	s32i.n	a3, a4, 4
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:296
void MCU12_DRAM_TEXT L2_PBIT_Set_Lock(U8 ucSuperPu, U16 VirBlockAddr, U8 bTrue)
{
    U8 ucLunInSuperPu;
    U16 PBN;

    pVBT[ucSuperPu]->m_VBT[VirBlockAddr].bLockedInWL = bTrue;
400a54f2:	c138      	l32i.n	a3, a1, 48
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:300

    for (ucLunInSuperPu = 0; ucLunInSuperPu < LUN_NUM_PER_SUPERPU; ucLunInSuperPu++)
    {
        PBN = pVBT[ucSuperPu]->m_VBT[VirBlockAddr].PhysicalBlockAddr[ucLunInSuperPu];
400a54f4:	001522        	l16ui	a2, a5, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:296
void MCU12_DRAM_TEXT L2_PBIT_Set_Lock(U8 ucSuperPu, U16 VirBlockAddr, U8 bTrue)
{
    U8 ucLunInSuperPu;
    U16 PBN;

    pVBT[ucSuperPu]->m_VBT[VirBlockAddr].bLockedInWL = bTrue;
400a54f7:	2548      	l32i.n	a4, a5, 8
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:301

    for (ucLunInSuperPu = 0; ucLunInSuperPu < LUN_NUM_PER_SUPERPU; ucLunInSuperPu++)
    {
        PBN = pVBT[ucSuperPu]->m_VBT[VirBlockAddr].PhysicalBlockAddr[ucLunInSuperPu];
        pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bLock = bTrue;
400a54f9:	b02200        	addx8	a2, a2, a0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:296
void MCU12_DRAM_TEXT L2_PBIT_Set_Lock(U8 ucSuperPu, U16 VirBlockAddr, U8 bTrue)
{
    U8 ucLunInSuperPu;
    U16 PBN;

    pVBT[ucSuperPu]->m_VBT[VirBlockAddr].bLockedInWL = bTrue;
400a54fc:	204344        	insbits	a4, a3, 4, 4
400a54ff:	2549      	s32i.n	a4, a5, 8
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:301

    for (ucLunInSuperPu = 0; ucLunInSuperPu < LUN_NUM_PER_SUPERPU; ucLunInSuperPu++)
    {
        PBN = pVBT[ucSuperPu]->m_VBT[VirBlockAddr].PhysicalBlockAddr[ucLunInSuperPu];
        pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bLock = bTrue;
400a5501:	12b8      	l32i.n	a11, a2, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1660
400a5503:	3ad002        	addmi	a0, a0, 0x3a00
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:301
400a5506:	43b3b4        	insbits	a11, a3, 11, 11
400a5509:	12b9      	s32i.n	a11, a2, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1660
400a550b:	021a66        	bnei	a10, 1, 400a5511 <L3_ErrHErase..MI_1482204275+0x311>
400a550e:	0023c6        	j	400a55a1 <L3_ErrHErase..MI_1482204275+0x3a1>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:349
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].EraseCnt++;
}
void MCU12_DRAM_TEXT L2_PBIT_Decrease_AllocBlockCnt(U8 ucSuperPu, U8 ucBlkType)
{
    pPBIT[ucSuperPu]->m_AllocatedDataBlockCnt[ucBlkType]--;
400a5511:	7e2082        	l32i	a8, a0, 0x1f8
400a5514:	880b      	addi.n	a8, a8, -1
400a5516:	7e6082        	s32i	a8, a0, 0x1f8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1666
        {
            L2_PBIT_Decrease_AllocBlockCnt(ucSPU, BLKTYPE_TLC);
        }
        else
        {
            L2_PBIT_Decrease_AllocBlockCnt(ucSPU, BLKTYPE_SLC);
400a5519:	0d2d      	mov.n	a2, a13
400a551b:	030c      	movi.n	a3, 0
400a551d:	0e4d      	mov.n	a4, a14
400a551f:	fee845        	call0	400a43a4 <L2_PBIT_Set_Error>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1670
        }

        L2_PBIT_Set_Error(ucSPU, ucLunInSPU, usPhyBlk, TRUE);
        L2_PBIT_Set_Free(ucSPU, ucLunInSPU, usPhyBlk, FALSE);
400a5522:	0d2d      	mov.n	a2, a13
400a5524:	0e3d      	mov.n	a3, a14
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:333
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bError = bTrue;
}
void MCU12_DRAM_TEXT L2_PBIT_Set_Free(U8 ucSuperPu, U8 ucLunInSuperPu, U16 PBN, U8 bTrue)
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bFree = bTrue;
400a5526:	f1b8      	l32i.n	a11, a1, 60
400a5528:	81a8      	l32i.n	a10, a1, 32
400a552a:	7c2bb2        	l32i	a11, a11, 0x1f0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1670
400a552d:	040c      	movi.n	a4, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:333
400a552f:	aaba      	add.n	a10, a10, a11
400a5531:	1a98      	l32i.n	a9, a10, 4
400a5533:	eb7c      	movi.n	a11, -2
400a5535:	1099b0        	and	a9, a9, a11
400a5538:	1a99      	s32i.n	a9, a10, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1670
400a553a:	fed585        	call0	400a4294 <L2_BbtAddBbtBadBlk>
400a553d:	d1f8      	l32i.n	a15, a1, 52
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:4420
400a553f:	130c      	movi.n	a3, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1670
400a5541:	f4e621        	l32r	a2, 400a28dc <_mcu2dram_text_start+0xdc>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_TableBBT.c:4420
400a5544:	a148      	l32i.n	a4, a1, 40
400a5546:	3208      	l32i.n	a0, a2, 12
400a5548:	401400        	ssl	a4
400a554b:	a13300        	sll	a3, a3
400a554e:	200030        	or	a0, a0, a3
400a5551:	3209      	s32i.n	a0, a2, 12
400a5553:	ff4386        	j	400a5265 <L3_ErrHErase..MI_1482204275+0x65>

400a5556 <L3_ErrHErase..MI_1482204275+0x356>:
	...

400a5558 <L3_ErrHErase..MI_1482204275+0x358>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1628

            // Mark the current phyblk to error to avoid to be reallocated again.
            L2_PBIT_Set_Error(ucSPU, ucLunInSPU, usPhyBlk, TRUE);

            usNewVirBlk = L2_BM_AllocateFreeBlock(ucSPU, BLOCK_TYPE_MIN_ERASE_CNT, bTLCBlk);
            ASSERT(INVALID_4F != usNewVirBlk);
400a5558:	ffff06        	j	400a5558 <L3_ErrHErase..MI_1482204275+0x358>

400a555b <L3_ErrHErase..MI_1482204275+0x35b>:
	...

400a555c <L3_ErrHErase..MI_1482204275+0x35c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1631

            usNewPhyBlk = L2_VBT_GetPhysicalBlockAddr(ucSPU, ucLunInSPU, usNewVirBlk);
            ASSERT(INVALID_4F != usNewPhyBlk);
400a555c:	ffff06        	j	400a555c <L3_ErrHErase..MI_1482204275+0x35c>

400a555f <L3_ErrHErase..MI_1482204275+0x35f>:
	...

400a5560 <L3_ErrHErase..MI_1482204275+0x360>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1616
        if (TRUE != L2_BM_BackUpBlockEmpty(ucSPU, ucLunInSPU))
        {
            bBackUpBlk = TRUE;

            usNewPhyBlk = L2_BM_AllocateBackUpBlock(ucSPU, ucLunInSPU, BLOCK_TYPE_MIN_ERASE_CNT, bTLCBlk);
            ASSERT(INVALID_4F != usNewPhyBlk);
400a5560:	ffff06        	j	400a5560 <L3_ErrHErase..MI_1482204275+0x360>

400a5563 <L3_ErrHErase..MI_1482204275+0x363>:
	...

400a5565 <L3_ErrHErase..MI_1482204275+0x365>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:588
                }
            }
        }
        else
        {
            for (i = (BLK_PER_PLN + RSV_BLK_PER_PLN); i > 0; i--)
400a5565:	24a292        	movi	a9, 0x224
400a5568:	f4bc41        	l32r	a4, 400a2858 <_mcu2dram_text_start+0x58>
400a556b:	fb7c      	movi.n	a11, -1
400a556d:	24a272        	movi	a7, 0x224
400a5570:	11da02        	addmi	a0, a10, 0x1100
400a5573:	20c002        	addi	a0, a0, 32
400a5576:	17a776        	loopgtz	a7, 400a5591 <L3_ErrHErase..MI_1482204275+0x391>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:592
            {
                if (pPBITItem[i].bBackup == FALSE)
                {
                    continue;
400a5579:	1088      	l32i.n	a8, a0, 4
400a557b:	0d6837        	bbci	a8, 3, 400a558c <L3_ErrHErase..MI_1482204275+0x38c>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:597
                }

                if (pPBITItem[i].bFree == FALSE)
                {
                    continue;
400a557e:	0a6807        	bbci	a8, 0, 400a558c <L3_ErrHErase..MI_1482204275+0x38c>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:600
                }

                if (pPBITItem[i].EraseCnt < MinEraseCnt)
400a5581:	0110f2        	l16ui	a15, a0, 2
400a5584:	04bfb7        	bgeu	a15, a11, 400a558c <L3_ErrHErase..MI_1482204275+0x38c>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:602
                {
                    MinEraseCnt = pPBITItem[i].EraseCnt;
400a5587:	0fbd      	mov.n	a11, a15
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:603
                    Pos = i;
400a5589:	f44090        	extui	a4, a9, 0, 16
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:588
                }
            }
        }
        else
        {
            for (i = (BLK_PER_PLN + RSV_BLK_PER_PLN); i > 0; i--)
400a558c:	990b      	addi.n	a9, a9, -1
400a558e:	f8c002        	addi	a0, a0, -8

400a5591 <L3_ErrHErase..MI_1482204275+0x391>:
400a5591:	b139      	s32i.n	a3, a1, 44
400a5593:	c02450        	sub	a2, a4, a5
400a5596:	e96256        	bnez	a2, 400a5430 <L3_ErrHErase..MI_1482204275+0x230>

400a5599 <L3_ErrHErase..MI_1482204275+0x399>:
400a5599:	b108      	l32i.n	a0, a1, 44
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:608
                    Pos = i;
                }
            }
        }

        if (Pos == INVALID_4F)
400a559b:	f4af41        	l32r	a4, 400a2858 <_mcu2dram_text_start+0x58>
400a559e:	ffad86        	j	400a5458 <L3_ErrHErase..MI_1482204275+0x258>

400a55a1 <L3_ErrHErase..MI_1482204275+0x3a1>:
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:349
{
    pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].EraseCnt++;
}
void MCU12_DRAM_TEXT L2_PBIT_Decrease_AllocBlockCnt(U8 ucSuperPu, U8 ucBlkType)
{
    pPBIT[ucSuperPu]->m_AllocatedDataBlockCnt[ucBlkType]--;
400a55a1:	7f2032        	l32i	a3, a0, 0x1fc
400a55a4:	330b      	addi.n	a3, a3, -1
400a55a6:	7f6032        	s32i	a3, a0, 0x1fc
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1662
        L2_PBIT_Set_Allocate(ucSPU, ucLunInSPU, usNewPhyBlk, FALSE);
        L2_PBIT_Set_Free(ucSPU, ucLunInSPU, usNewPhyBlk, TRUE);
        L2_PBIT_Set_Lock(ucSPU, usCurVirBlk, bLockedBlk);
        if (TRUE == bTLCBlk)
        {
            L2_PBIT_Decrease_AllocBlockCnt(ucSPU, BLKTYPE_TLC);
400a55a9:	ffdb06        	j	400a5519 <L3_ErrHErase..MI_1482204275+0x319>

400a55ac <L3_ErrHErase..MI_1482204275+0x3ac>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1636
            ASSERT(INVALID_4F != usNewPhyBlk);
            
            if (TRUE == bTLCBlk)
            {
                g_PuInfo[ucSPU]->m_DataBlockCnt[BLKTYPE_TLC]--;
                g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
400a55ac:	5958      	l32i.n	a5, a9, 20
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1635
            usNewPhyBlk = L2_VBT_GetPhysicalBlockAddr(ucSPU, ucLunInSPU, usNewVirBlk);
            ASSERT(INVALID_4F != usNewPhyBlk);
            
            if (TRUE == bTLCBlk)
            {
                g_PuInfo[ucSPU]->m_DataBlockCnt[BLKTYPE_TLC]--;
400a55ae:	071962        	l16ui	a6, a9, 14
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1636
                g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
400a55b1:	fed552        	addmi	a5, a5, 0xfffffe00
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1635
            usNewPhyBlk = L2_VBT_GetPhysicalBlockAddr(ucSPU, ucLunInSPU, usNewVirBlk);
            ASSERT(INVALID_4F != usNewPhyBlk);
            
            if (TRUE == bTLCBlk)
            {
                g_PuInfo[ucSPU]->m_DataBlockCnt[BLKTYPE_TLC]--;
400a55b4:	660b      	addi.n	a6, a6, -1
400a55b6:	075962        	s16i	a6, a9, 14
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1636
                g_PuInfo[ucSPU]->m_SLCMLCFreePageCnt -= PG_PER_SLC_BLK;
400a55b9:	5959      	s32i.n	a5, a9, 20
400a55bb:	ff8486        	j	400a53d1 <L3_ErrHErase..MI_1482204275+0x1d1>

400a55be <L3_ErrHErase..MI_1482204275+0x3be>:
	...

400a55c0 <L3_ErrHProgram..LI_1482204275>:
L3_ErrHProgram():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1522
Usage      : 
History    : 
    1. 2016.7.25 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHProgram(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a55c0:	80c112        	addi	a1, a1, -128
400a55c3:	1a61f2        	s32i	a15, a1, 104
400a55c6:	1861d2        	s32i	a13, a1, 96
400a55c9:	1761c2        	s32i	a12, a1, 92
400a55cc:	166102        	s32i	a0, a1, 88
400a55cf:	1961e2        	s32i	a14, a1, 100
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1523
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
400a55d2:	0208      	l32i.n	a0, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1522
Usage      : 
History    : 
    1. 2016.7.25 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHProgram(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a55d4:	02ed      	mov.n	a14, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1524
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
400a55d6:	9ec8      	l32i.n	a12, a14, 36
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1530
    U8 ucTLun,  ucCmdType, ucErrCode, ucPln;
    U16 usVirBlk, usPhyBlk, usVirPage, usPhyPage;
    U32 ulLBA;
    BOOL bNeedExtH;

    ucTLun = ptReqEntry->bsTLun;    
400a55d8:	0000d2        	l8ui	a13, a0, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1532
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
400a55db:	3038      	l32i.n	a3, a0, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1524
    1. 2016.7.25 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHProgram(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
400a55dd:	c1c9      	s32i.n	a12, a1, 48
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1536
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;
400a55df:	b028      	l32i.n	a2, a0, 44
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1531
    U16 usVirBlk, usPhyBlk, usVirPage, usPhyPage;
    U32 ulLBA;
    BOOL bNeedExtH;

    ucTLun = ptReqEntry->bsTLun;    
    ucErrCode = ptErrHEntry->bsErrCode;
400a55e1:	000cc2        	l8ui	a12, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1536
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;
400a55e4:	106122        	s32i	a2, a1, 64
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1533
    BOOL bNeedExtH;

    ucTLun = ptReqEntry->bsTLun;    
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
400a55e7:	94fa30        	extui	a15, a3, 10, 10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1540
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;
    usPhyPage = ptCtrlEntry->bsPhyPage;    
    ucCmdType = ptCtrlEntry->bsCmdType;

    L3_ErrHAssertCmd(ptReqEntry->bsReqType, ucErrCode);
400a55ea:	0028      	l32i.n	a2, a0, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1532
    U32 ulLBA;
    BOOL bNeedExtH;

    ucTLun = ptReqEntry->bsTLun;    
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
400a55ec:	944030        	extui	a4, a3, 0, 10
400a55ef:	d149      	s32i.n	a4, a1, 52
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1531
    U16 usVirBlk, usPhyBlk, usVirPage, usPhyPage;
    U32 ulLBA;
    BOOL bNeedExtH;

    ucTLun = ptReqEntry->bsTLun;    
    ucErrCode = ptErrHEntry->bsErrCode;
400a55f1:	41c1c0        	srli	a12, a12, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1540
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;
    usPhyPage = ptCtrlEntry->bsPhyPage;    
    ucCmdType = ptCtrlEntry->bsCmdType;

    L3_ErrHAssertCmd(ptReqEntry->bsReqType, ucErrCode);
400a55f4:	252220        	extui	a2, a2, 18, 3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1535
    ucTLun = ptReqEntry->bsTLun;    
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
400a55f7:	4008      	l32i.n	a0, a0, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1534

    ucTLun = ptReqEntry->bsTLun;    
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
400a55f9:	a53430        	extui	a3, a3, 20, 11
400a55fc:	e139      	s32i.n	a3, a1, 56
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1535
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
400a55fe:	150200        	extui	a0, a0, 18, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1537
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;
    usPhyPage = ptCtrlEntry->bsPhyPage;    
400a5601:	021e32        	l16ui	a3, a14, 4
400a5604:	116132        	s32i	a3, a1, 68
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1535
    ucTLun = ptReqEntry->bsTLun;    
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
400a5607:	f109      	s32i.n	a0, a1, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1540
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;
    usPhyPage = ptCtrlEntry->bsPhyPage;    
    ucCmdType = ptCtrlEntry->bsCmdType;

    L3_ErrHAssertCmd(ptReqEntry->bsReqType, ucErrCode);
400a5609:	0c3d      	mov.n	a3, a12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1538
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;
    usPhyPage = ptCtrlEntry->bsPhyPage;    
    ucCmdType = ptCtrlEntry->bsCmdType;
400a560b:	060e02        	l8ui	a0, a14, 6
400a560e:	126102        	s32i	a0, a1, 72
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1540

    L3_ErrHAssertCmd(ptReqEntry->bsReqType, ucErrCode);
400a5611:	ffb485        	call0	400a515c <L3_ErrHAssertCmd..IH_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1544

    L3_ErrHRstCacheOperation(ucTLun, (FCMD_REQ_SLC_BLK == ptCtrlEntry->ptReqEntry->tFlashDesc.bsBlkMod)?TRUE:FALSE);

    bNeedExtH = L3_ErrHIsNeedExtH(ptCtrlEntry);
400a5614:	0e2d      	mov.n	a2, a14
400a5616:	feee05        	call0	400a44f8 <L3_ErrHIsNeedExtH..JH_1482204275>
400a5619:	136122        	s32i	a2, a1, 76
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1545
    if (TRUE == bNeedExtH)
400a561c:	021226        	beqi	a2, 1, 400a5622 <L3_ErrHProgram..LI_1482204275+0x62>
400a561f:	001fc6        	j	400a56a2 <L3_ErrHProgram..LI_1482204275+0xe2>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:950
LOCAL BOOL MCU2_DRAM_TEXT L3_ExtHIntrQBackUp(U8 ucTLun)
{
    U8 ucBakUpPtr, ucCurEptr, ucCurWptr;
    FCMD_INTR_CTRL_ENTRY *ptCtrlEntry, *ptCtrlBakEntry;
    
    ucCurWptr = L3_FCMDQGetIntrWptr(ucTLun, FALSE);
400a5622:	0d2d      	mov.n	a2, a13
400a5624:	00a032        	movi	a3, 0
400a5627:	f4e501        	l32r	a0, 400a29bc <_mcu2dram_text_start+0x1bc>
400a562a:	0000c0        	callx0	a0
400a562d:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:951
    ucBakUpPtr = ucCurEptr = L3_FCMDQGetIntrEptr(ucTLun, FALSE);
400a562f:	030c      	movi.n	a3, 0
400a5631:	0d2d      	mov.n	a2, a13
400a5633:	f4b901        	l32r	a0, 400a2918 <_mcu2dram_text_start+0x118>
400a5636:	0000c0        	callx0	a0
400a5639:	1e61e2        	s32i	a14, a1, 120
400a563c:	1b6122        	s32i	a2, a1, 108
400a563f:	1c61c2        	s32i	a12, a1, 112
400a5642:	02cd      	mov.n	a12, a2

400a5644 <L3_ErrHProgram..LI_1482204275+0x84>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:955
    
    do
    {
        ptCtrlEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucBakUpPtr, FALSE);
400a5644:	0d2d      	mov.n	a2, a13
400a5646:	203cc0        	or	a3, a12, a12
400a5649:	00a042        	movi	a4, 0
400a564c:	f4b401        	l32r	a0, 400a291c <_mcu2dram_text_start+0x11c>
400a564f:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:956
        ptCtrlBakEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucBakUpPtr, TRUE);
400a5652:	0c3d      	mov.n	a3, a12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:955
    ucCurWptr = L3_FCMDQGetIntrWptr(ucTLun, FALSE);
    ucBakUpPtr = ucCurEptr = L3_FCMDQGetIntrEptr(ucTLun, FALSE);
    
    do
    {
        ptCtrlEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucBakUpPtr, FALSE);
400a5654:	02ed      	mov.n	a14, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:956
        ptCtrlBakEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucBakUpPtr, TRUE);
400a5656:	140c      	movi.n	a4, 1
400a5658:	0d2d      	mov.n	a2, a13
400a565a:	f4b001        	l32r	a0, 400a291c <_mcu2dram_text_start+0x11c>
400a565d:	0000c0        	callx0	a0
400a5660:	1d6122        	s32i	a2, a1, 116
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:958

        COM_MemCpy((U32*)ptCtrlBakEntry, (U32*)ptCtrlEntry, sizeof(FCMD_INTR_CTRL_ENTRY) / sizeof(U32));
400a5663:	0e3d      	mov.n	a3, a14
400a5665:	a40c      	movi.n	a4, 10
400a5667:	f48401        	l32r	a0, 400a2878 <_mcu2dram_text_start+0x78>
400a566a:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:959
        if (ucBakUpPtr == ucCurEptr)
400a566d:	1b2132        	l32i	a3, a1, 108
400a5670:	f03d      	nop.n
400a5672:	169c37        	bne	a12, a3, 400a568c <L3_ErrHProgram..LI_1482204275+0xcc>
400a5675:	0d2d      	mov.n	a2, a13
400a5677:	f4d201        	l32r	a0, 400a29c0 <_mcu2dram_text_start+0x1c0>
400a567a:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:961
        {
            ptCtrlBakEntry->ptErrHEntry = L3_FCMDQGetIntrErrHEntry(ucTLun, TRUE);
400a567d:	1d2142        	l32i	a4, a1, 116
400a5680:	9429      	s32i.n	a2, a4, 36
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:962
            COM_MemCpy((U32*)ptCtrlBakEntry->ptErrHEntry, (U32*)ptCtrlEntry->ptErrHEntry, sizeof(FCMD_INTR_ERRH_ENTRY) / sizeof(U32));
400a5682:	9e38      	l32i.n	a3, a14, 36
400a5684:	441c      	movi.n	a4, 20
400a5686:	f47c01        	l32r	a0, 400a2878 <_mcu2dram_text_start+0x78>
400a5689:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:966
        }

        ucBakUpPtr = (ucBakUpPtr + 1) % NFCQ_DEPTH;        
    } while (ucBakUpPtr != ucCurWptr);
400a568c:	1c2152        	l32i	a5, a1, 112
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:965
        {
            ptCtrlBakEntry->ptErrHEntry = L3_FCMDQGetIntrErrHEntry(ucTLun, TRUE);
            COM_MemCpy((U32*)ptCtrlBakEntry->ptErrHEntry, (U32*)ptCtrlEntry->ptErrHEntry, sizeof(FCMD_INTR_ERRH_ENTRY) / sizeof(U32));
        }

        ucBakUpPtr = (ucBakUpPtr + 1) % NFCQ_DEPTH;        
400a568f:	4e0c      	movi.n	a14, 4
400a5691:	cc1b      	addi.n	a12, a12, 1
400a5693:	f2cce0        	rems	a12, a12, a14
400a5696:	74c0c0        	extui	a12, a12, 0, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:966
    } while (ucBakUpPtr != ucCurWptr);
400a5699:	a79c57        	bne	a12, a5, 400a5644 <L3_ErrHProgram..LI_1482204275+0x84>
400a569c:	003146        	j	400a5765 <L3_ErrHProgram..LI_1482204275+0x1a5>

400a569f <L3_ErrHProgram..LI_1482204275+0xdf>:
400a569f:	000000                                        ...

400a56a2 <L3_ErrHProgram..LI_1482204275+0xe2>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1551
    {
        L3_ExtHTrigger(ucTLun);
    }
    else
    {
        ptErrHEntry->bsErrRpt = TRUE;
400a56a2:	c128      	l32i.n	a2, a1, 48
400a56a4:	0208      	l32i.n	a0, a2, 0
400a56a6:	130c      	movi.n	a3, 1
400a56a8:	200030        	or	a0, a0, a3
400a56ab:	0209      	s32i.n	a0, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1552
        if (TRUE != L3_IFIsRecycled(ptCtrlEntry))
400a56ad:	0e2d      	mov.n	a2, a14
400a56af:	f4bd01        	l32r	a0, 400a29a4 <_mcu2dram_text_start+0x1a4>
400a56b2:	0000c0        	callx0	a0
400a56b5:	081226        	beqi	a2, 1, 400a56c1 <L3_ErrHProgram..LI_1482204275+0x101>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1554
        {
            L3_IFUpdtReqStatus(ptCtrlEntry);
400a56b8:	202ee0        	or	a2, a14, a14
400a56bb:	f48c01        	l32r	a0, 400a28ec <_mcu2dram_text_start+0xec>
400a56be:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1557
        }
        
        L3_FCMDQSetIntrEptr(ucTLun, INVALID_DPTR, FALSE);
400a56c1:	0d2d      	mov.n	a2, a13
400a56c3:	ffa032        	movi	a3, 255
400a56c6:	040c      	movi.n	a4, 0
400a56c8:	f48b01        	l32r	a0, 400a28f4 <_mcu2dram_text_start+0xf4>
400a56cb:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1558
        L3_ErrHFailLog(ucTLun, ucErrCode);
400a56ce:	0c3d      	mov.n	a3, a12
400a56d0:	202dd0        	or	a2, a13, a13
400a56d3:	ff88c5        	call0	400a4f60 <L3_ErrHFailLog..DH_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1561
    }

    DBG_Printf("TLun%d Blk%d_%d[%d_%d_%d_%d] Page%d_%d CmdType%d_%d BlkMode %d LBA=0x%x PrgHandling ExtH=%d.\n",ucTLun, usVirBlk, usPhyBlk,
400a56d6:	0d2d      	mov.n	a2, a13
400a56d8:	0f3d      	mov.n	a3, a15
400a56da:	040c      	movi.n	a4, 0
400a56dc:	f45501        	l32r	a0, 400a2830 <_mcu2dram_text_start+0x30>
400a56df:	0000c0        	callx0	a0
400a56e2:	0f3d      	mov.n	a3, a15
400a56e4:	146122        	s32i	a2, a1, 80
400a56e7:	140c      	movi.n	a4, 1
400a56e9:	0d2d      	mov.n	a2, a13
400a56eb:	f45101        	l32r	a0, 400a2830 <_mcu2dram_text_start+0x30>
400a56ee:	0000c0        	callx0	a0
400a56f1:	0f3d      	mov.n	a3, a15
400a56f3:	156122        	s32i	a2, a1, 84
400a56f6:	240c      	movi.n	a4, 2
400a56f8:	0d2d      	mov.n	a2, a13
400a56fa:	f44d01        	l32r	a0, 400a2830 <_mcu2dram_text_start+0x30>
400a56fd:	0000c0        	callx0	a0
400a5700:	0f3d      	mov.n	a3, a15
400a5702:	02cd      	mov.n	a12, a2
400a5704:	340c      	movi.n	a4, 3
400a5706:	0d2d      	mov.n	a2, a13
400a5708:	f44a01        	l32r	a0, 400a2830 <_mcu2dram_text_start+0x30>
400a570b:	0000c0        	callx0	a0
400a570e:	d148      	l32i.n	a4, a1, 52
400a5710:	142162        	l32i	a6, a1, 80
400a5713:	152172        	l32i	a7, a1, 84
400a5716:	1221a2        	l32i	a10, a1, 72
400a5719:	f198      	l32i.n	a9, a1, 60
400a571b:	1121b2        	l32i	a11, a1, 68
400a571e:	e108      	l32i.n	a0, a1, 56
400a5720:	0f5d      	mov.n	a5, a15
400a5722:	0d3d      	mov.n	a3, a13
400a5724:	1129      	s32i.n	a2, a1, 4
400a5726:	01c9      	s32i.n	a12, a1, 0
400a5728:	f4b821        	l32r	a2, 400a2a08 <_mcu2dram_text_start+0x208>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1565
        L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 0), L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 1), L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 2), L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 3), 
        usVirPage, usPhyPage, ucCmdType, ucPln, ptCtrlEntry->ptReqEntry->tFlashDesc.bsBlkMod, ulLBA, bNeedExtH);
    
    return;
400a572b:	1721c2        	l32i	a12, a1, 92
400a572e:	1821d2        	l32i	a13, a1, 96
400a5731:	1a21f2        	l32i	a15, a1, 104
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1561
        
        L3_FCMDQSetIntrEptr(ucTLun, INVALID_DPTR, FALSE);
        L3_ErrHFailLog(ucTLun, ucErrCode);
    }

    DBG_Printf("TLun%d Blk%d_%d[%d_%d_%d_%d] Page%d_%d CmdType%d_%d BlkMode %d LBA=0x%x PrgHandling ExtH=%d.\n",ucTLun, usVirBlk, usPhyBlk,
400a5734:	2109      	s32i.n	a0, a1, 8
400a5736:	31b9      	s32i.n	a11, a1, 12
400a5738:	5199      	s32i.n	a9, a1, 20
400a573a:	41a9      	s32i.n	a10, a1, 16
400a573c:	132192        	l32i	a9, a1, 76
400a573f:	1021a2        	l32i	a10, a1, 64
400a5742:	0e88      	l32i.n	a8, a14, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1565
        L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 0), L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 1), L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 2), L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 3), 
        usVirPage, usPhyPage, ucCmdType, ucPln, ptCtrlEntry->ptReqEntry->tFlashDesc.bsBlkMod, ulLBA, bNeedExtH);
    
    return;
400a5744:	1921e2        	l32i	a14, a1, 100
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1561
        
        L3_FCMDQSetIntrEptr(ucTLun, INVALID_DPTR, FALSE);
        L3_ErrHFailLog(ucTLun, ucErrCode);
    }

    DBG_Printf("TLun%d Blk%d_%d[%d_%d_%d_%d] Page%d_%d CmdType%d_%d BlkMode %d LBA=0x%x PrgHandling ExtH=%d.\n",ucTLun, usVirBlk, usPhyBlk,
400a5747:	4888      	l32i.n	a8, a8, 16
400a5749:	71a9      	s32i.n	a10, a1, 28
400a574b:	8199      	s32i.n	a9, a1, 32
400a574d:	158080        	extui	a8, a8, 16, 2
400a5750:	6189      	s32i.n	a8, a1, 24
400a5752:	f43901        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a5755:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1565
        L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 0), L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 1), L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 2), L2_BbtGetPbnBindingTable(ucTLun, usPhyBlk, 3), 
        usVirPage, usPhyPage, ucCmdType, ucPln, ptCtrlEntry->ptReqEntry->tFlashDesc.bsBlkMod, ulLBA, bNeedExtH);
    
    return;
400a5758:	80a022        	movi	a2, 128
400a575b:	162102        	l32i	a0, a1, 88
400a575e:	112a      	add.n	a1, a1, a2
400a5760:	f00d      	ret.n

400a5762 <L3_ErrHProgram..LI_1482204275+0x1a2>:
400a5762:	000000                                        ...

400a5765 <L3_ErrHProgram..LI_1482204275+0x1a5>:
400a5765:	1e21e2        	l32i	a14, a1, 120
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:983
History    : 
    1. 2016.8.11 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ExtHIntrDptrReset(U8 ucTLun)
{
    L3_FCMDQSetIntrWptr(ucTLun, L3_FCMDQGetIntrWptr(ucTLun, FALSE), TRUE);
400a5768:	0d2d      	mov.n	a2, a13
400a576a:	030c      	movi.n	a3, 0
400a576c:	f49401        	l32r	a0, 400a29bc <_mcu2dram_text_start+0x1bc>
400a576f:	0000c0        	callx0	a0
400a5772:	023d      	mov.n	a3, a2
400a5774:	140c      	movi.n	a4, 1
400a5776:	0d2d      	mov.n	a2, a13
400a5778:	f49301        	l32r	a0, 400a29c4 <_mcu2dram_text_start+0x1c4>
400a577b:	0000c0        	callx0	a0
400a577e:	0d2d      	mov.n	a2, a13
400a5780:	f49201        	l32r	a0, 400a29c8 <_mcu2dram_text_start+0x1c8>
400a5783:	0000c0        	callx0	a0
400a5786:	023d      	mov.n	a3, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:984
    L3_FCMDQSetIntrRptr(ucTLun, L3_FCMDQGetIntrRptr(ucTLun, FALSE), TRUE);
400a5788:	140c      	movi.n	a4, 1
400a578a:	0d2d      	mov.n	a2, a13
400a578c:	f45901        	l32r	a0, 400a28f0 <_mcu2dram_text_start+0xf0>
400a578f:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:985
    L3_FCMDQSetIntrEptr(ucTLun, L3_FCMDQGetIntrEptr(ucTLun, FALSE), TRUE);
400a5792:	0d2d      	mov.n	a2, a13
400a5794:	030c      	movi.n	a3, 0
400a5796:	f46001        	l32r	a0, 400a2918 <_mcu2dram_text_start+0x118>
400a5799:	0000c0        	callx0	a0
400a579c:	023d      	mov.n	a3, a2
400a579e:	140c      	movi.n	a4, 1
400a57a0:	0d2d      	mov.n	a2, a13
400a57a2:	f45401        	l32r	a0, 400a28f4 <_mcu2dram_text_start+0xf4>
400a57a5:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:986
    L3_FCMDQSetIntrPptr(ucTLun, L3_FCMDQGetIntrPptr(ucTLun, FALSE), TRUE);
400a57a8:	0d2d      	mov.n	a2, a13
400a57aa:	030c      	movi.n	a3, 0
400a57ac:	f48801        	l32r	a0, 400a29cc <_mcu2dram_text_start+0x1cc>
400a57af:	0000c0        	callx0	a0
400a57b2:	023d      	mov.n	a3, a2
400a57b4:	140c      	movi.n	a4, 1
400a57b6:	0d2d      	mov.n	a2, a13
400a57b8:	f48601        	l32r	a0, 400a29d0 <_mcu2dram_text_start+0x1d0>
400a57bb:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:988

    L3_FCMDQSetIntrWptr(ucTLun, 0, FALSE);
400a57be:	0d2d      	mov.n	a2, a13
400a57c0:	030c      	movi.n	a3, 0
400a57c2:	040c      	movi.n	a4, 0
400a57c4:	f48001        	l32r	a0, 400a29c4 <_mcu2dram_text_start+0x1c4>
400a57c7:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:989
    L3_FCMDQSetIntrRptr(ucTLun, INVALID_DPTR, FALSE);
400a57ca:	0d2d      	mov.n	a2, a13
400a57cc:	ffa032        	movi	a3, 255
400a57cf:	00a042        	movi	a4, 0
400a57d2:	f44701        	l32r	a0, 400a28f0 <_mcu2dram_text_start+0xf0>
400a57d5:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:990
    L3_FCMDQSetIntrEptr(ucTLun, INVALID_DPTR, FALSE);
400a57d8:	0d2d      	mov.n	a2, a13
400a57da:	ffa032        	movi	a3, 255
400a57dd:	040c      	movi.n	a4, 0
400a57df:	f44501        	l32r	a0, 400a28f4 <_mcu2dram_text_start+0xf4>
400a57e2:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:991
    L3_FCMDQSetIntrPptr(ucTLun, INVALID_DPTR, FALSE);
400a57e5:	0d2d      	mov.n	a2, a13
400a57e7:	ffa032        	movi	a3, 255
400a57ea:	040c      	movi.n	a4, 0
400a57ec:	f47901        	l32r	a0, 400a29d0 <_mcu2dram_text_start+0x1d0>
400a57ef:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1087
    bResult = L3_ExtHIntrQBackUp(ucTLun);
    if (TRUE == bResult)
    {
        L3_ExtHIntrDptrReset(ucTLun);

        L3_SchSetStsBit(ucTLun, STS_BMP_EXTH);
400a57f2:	0d2d      	mov.n	a2, a13
400a57f4:	430c      	movi.n	a3, 4
400a57f6:	f47701        	l32r	a0, 400a29d4 <_mcu2dram_text_start+0x1d4>
400a57f9:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1085
    BOOL bResult;

    bResult = L3_ExtHIntrQBackUp(ucTLun);
    if (TRUE == bResult)
    {
        L3_ExtHIntrDptrReset(ucTLun);
400a57fc:	ffb586        	j	400a56d6 <L3_ErrHProgram..LI_1482204275+0x116>

400a57ff <L3_ErrHProgram..LI_1482204275+0x23f>:
	...

400a5800 <L3_ErrHReadLBA..KI_1482204275>:
L3_ErrHReadLBA():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1504
Usage      : 
History    : 
    1. 2016.7.25 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHReadLBA(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a5800:	f0c112        	addi	a1, a1, -16
400a5803:	0129      	s32i.n	a2, a1, 0
400a5805:	1109      	s32i.n	a0, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1505
    DBG_Printf("LBAChk Fail: Handle it as uecc error hendling...\n");
400a5807:	f48121        	l32r	a2, 400a2a0c <_mcu2dram_text_start+0x20c>
400a580a:	f40b01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a580d:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1506
    L3_ErrHReadUECC(ptCtrlEntry);
400a5810:	0128      	l32i.n	a2, a1, 0
400a5812:	000245        	call0	400a5838 <L3_ErrHReadUECC..II_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1508

    return;
400a5815:	1108      	l32i.n	a0, a1, 4
400a5817:	10c112        	addi	a1, a1, 16
400a581a:	f00d      	ret.n

400a581c <L3_ErrHReadDCRC..JI_1482204275>:
L3_ErrHReadDCRC():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1486
Usage      : 
History    : 
    1. 2016.7.25 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHReadDCRC(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a581c:	f0c112        	addi	a1, a1, -16
400a581f:	0129      	s32i.n	a2, a1, 0
400a5821:	1109      	s32i.n	a0, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1487
    DBG_Printf("DCRC Fail: report this crc error to the caller...\n");
400a5823:	f47b21        	l32r	a2, 400a2a10 <_mcu2dram_text_start+0x210>
400a5826:	f40401        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a5829:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1488
    L3_ErrHPrcUeccFail(ptCtrlEntry);
400a582c:	0128      	l32i.n	a2, a1, 0
400a582e:	ff4a05        	call0	400a4cd0 <L3_ErrHPrcUeccFail..GI_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1490

    return;
400a5831:	1108      	l32i.n	a0, a1, 4
400a5833:	10c112        	addi	a1, a1, 16
400a5836:	f00d      	ret.n

400a5838 <L3_ErrHReadUECC..II_1482204275>:
L3_ErrHReadUECC():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1357
-> Need Blk Replacement in L2 -> Mark Blk and reprot status
History    : 
    1. 2016.7.25 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHReadUECC(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a5838:	023d      	mov.n	a3, a2
400a583a:	f0c112        	addi	a1, a1, -16
400a583d:	2109      	s32i.n	a0, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1358
    UECC_ERRH_CTRL *ptUeccHCtrl = &ptCtrlEntry->ptErrHEntry->tUeccHCtrl;
400a583f:	9258      	l32i.n	a5, a2, 36
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1357
-> Need Blk Replacement in L2 -> Mark Blk and reprot status
History    : 
    1. 2016.7.25 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHReadUECC(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a5841:	31c9      	s32i.n	a12, a1, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1360
    UECC_ERRH_CTRL *ptUeccHCtrl = &ptCtrlEntry->ptErrHEntry->tUeccHCtrl;

    switch (ptUeccHCtrl->bsStage)
400a5843:	040522        	l8ui	a2, a5, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1358
History    : 
    1. 2016.7.25 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHReadUECC(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    UECC_ERRH_CTRL *ptUeccHCtrl = &ptCtrlEntry->ptErrHEntry->tUeccHCtrl;
400a5846:	c54b      	addi.n	a12, a5, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1360

    switch (ptUeccHCtrl->bsStage)
400a5848:	048216        	beqz	a2, 400a5894 <L3_ErrHReadUECC..II_1482204275+0x5c>
400a584b:	621226        	beqi	a2, 1, 400a58b1 <L3_ErrHReadUECC..II_1482204275+0x79>
400a584e:	782226        	beqi	a2, 2, 400a58ca <L3_ErrHReadUECC..II_1482204275+0x92>
400a5851:	016152        	s32i	a5, a1, 4
400a5854:	fdc242        	addi	a4, a2, -3
400a5857:	0ba416        	beqz	a4, 400a5915 <L3_ErrHReadUECC..II_1482204275+0xdd>
400a585a:	fcc252        	addi	a5, a2, -4
400a585d:	08d516        	beqz	a5, 400a58ee <L3_ErrHReadUECC..II_1482204275+0xb6>
400a5860:	185226        	beqi	a2, 5, 400a587c <L3_ErrHReadUECC..II_1482204275+0x44>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1467

            break;
        }
        default:
        {
            DBG_Printf("UECC ErrH Stage Error 0x%x\n", (U32)ptCtrlEntry);
400a5863:	f46c21        	l32r	a2, 400a2a14 <_mcu2dram_text_start+0x214>
400a5866:	f3f401        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a5869:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a586c:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:89
400a586f:	f42f21        	l32r	a2, 400a292c <_mcu2dram_text_start+0x12c>
400a5872:	f3f101        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a5875:	0000c0        	callx0	a0

400a5878 <L3_ErrHReadUECC..II_1482204275+0x40>:
400a5878:	ffff06        	j	400a5878 <L3_ErrHReadUECC..II_1482204275+0x40>

400a587b <L3_ErrHReadUECC..II_1482204275+0x43>:
	...

400a587c <L3_ErrHReadUECC..II_1482204275+0x44>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1456
            }
            break;
        }
        case UECC_ERRH_REPORT_FAIL:
        {
            L3_ErrHPrcUeccFail(ptCtrlEntry);
400a587c:	032d      	mov.n	a2, a3
400a587e:	ff4505        	call0	400a4cd0 <L3_ErrHPrcUeccFail..GI_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1458

            if (UECCH_FAILED_DONE == ptUeccHCtrl->bsSubStage)
400a5881:	010c62        	l8ui	a6, a12, 1
400a5884:	fec662        	addi	a6, a6, -2
400a5887:	0ce616        	beqz	a6, 400a5959 <L3_ErrHReadUECC..II_1482204275+0x121>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1472
            DBG_Printf("UECC ErrH Stage Error 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a588a:	31c8      	l32i.n	a12, a1, 12
400a588c:	2108      	l32i.n	a0, a1, 8
400a588e:	10c112        	addi	a1, a1, 16
400a5891:	f00d      	ret.n

400a5893 <L3_ErrHReadUECC..II_1482204275+0x5b>:
	...

400a5894 <L3_ErrHReadUECC..II_1482204275+0x5c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1364

    switch (ptUeccHCtrl->bsStage)
    {
        case UECC_ERRH_INIT:
        {
            if (TRUE == L3_ErrHDetectEmptyPage(ptCtrlEntry))
400a5894:	032d      	mov.n	a2, a3
400a5896:	002b05        	call0	400a5b48 <L3_ErrHDetectEmptyPage..EH_1482204275>
400a5899:	720b      	addi.n	a7, a2, -1
400a589b:	0c9716        	beqz	a7, 400a5968 <L3_ErrHReadUECC..II_1482204275+0x130>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1472
            DBG_Printf("UECC ErrH Stage Error 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a589e:	2108      	l32i.n	a0, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1371
                ptUeccHCtrl->bsStage = UECC_ERRH_EMPTY_PAGE;
                ptUeccHCtrl->bsSubStage = EMPTY_PG_HANDLE_INIT;
            }
            else
            {
                ptUeccHCtrl->bsStage = UECC_ERRH_READ_RETRY;
400a58a0:	280c      	movi.n	a8, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1372
                ptUeccHCtrl->bsSubStage = READ_RETRY_INIT;
400a58a2:	090c      	movi.n	a9, 0
400a58a4:	014c92        	s8i	a9, a12, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1371
                ptUeccHCtrl->bsStage = UECC_ERRH_EMPTY_PAGE;
                ptUeccHCtrl->bsSubStage = EMPTY_PG_HANDLE_INIT;
            }
            else
            {
                ptUeccHCtrl->bsStage = UECC_ERRH_READ_RETRY;
400a58a7:	004c82        	s8i	a8, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1472
            DBG_Printf("UECC ErrH Stage Error 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a58aa:	31c8      	l32i.n	a12, a1, 12
400a58ac:	10c112        	addi	a1, a1, 16
400a58af:	f00d      	ret.n

400a58b1 <L3_ErrHReadUECC..II_1482204275+0x79>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1381

            break;
        }
        case UECC_ERRH_EMPTY_PAGE:
        {
            L3_ErrHEmptyPage(ptCtrlEntry);
400a58b1:	032d      	mov.n	a2, a3
400a58b3:	ff2685        	call0	400a4b1c <L3_ErrHEmptyPage..EI_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1383

            if (EMPTY_PG_HANDLE_DONE == ptUeccHCtrl->bsSubStage)
400a58b6:	010ca2        	l8ui	a10, a12, 1
400a58b9:	cd3a66        	bnei	a10, 3, 400a588a <L3_ErrHReadUECC..II_1482204275+0x52>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1385
            {
                ptUeccHCtrl->bsStage = UECC_ERRH_DONE;
400a58bc:	6b0c      	movi.n	a11, 6
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1472
            DBG_Printf("UECC ErrH Stage Error 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a58be:	2108      	l32i.n	a0, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1385
        {
            L3_ErrHEmptyPage(ptCtrlEntry);

            if (EMPTY_PG_HANDLE_DONE == ptUeccHCtrl->bsSubStage)
            {
                ptUeccHCtrl->bsStage = UECC_ERRH_DONE;
400a58c0:	004cb2        	s8i	a11, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1472
            DBG_Printf("UECC ErrH Stage Error 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a58c3:	31c8      	l32i.n	a12, a1, 12
400a58c5:	10c112        	addi	a1, a1, 16
400a58c8:	f00d      	ret.n

400a58ca <L3_ErrHReadUECC..II_1482204275+0x92>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1392

            break;
        }
        case UECC_ERRH_READ_RETRY:
        {
            L3_ErrHReadRetry(ptCtrlEntry);
400a58ca:	032d      	mov.n	a2, a3
400a58cc:	fee945        	call0	400a4764 <L3_ErrHReadRetry..FI_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1394

            if (READ_RETRY_SUCCESS == ptUeccHCtrl->bsSubStage)
400a58cf:	010c02        	l8ui	a0, a12, 1
400a58d2:	fbc022        	addi	a2, a0, -5
400a58d5:	0a2216        	beqz	a2, 400a597b <L3_ErrHReadUECC..II_1482204275+0x143>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1398
            {
                ptUeccHCtrl->bsStage = UECC_ERRH_DONE;
            }
            else if (READ_RETRY_FAIL == ptUeccHCtrl->bsSubStage)
400a58d8:	ae6066        	bnei	a0, 6, 400a588a <L3_ErrHReadUECC..II_1482204275+0x52>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1472
            DBG_Printf("UECC ErrH Stage Error 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a58db:	2108      	l32i.n	a0, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1400
            {
                ptUeccHCtrl->bsStage = UECC_ERRH_DONE;
            }
            else if (READ_RETRY_FAIL == ptUeccHCtrl->bsSubStage)
            {
                ptUeccHCtrl->bsStage = UECC_ERRH_SOFT_DECODER;
400a58dd:	330c      	movi.n	a3, 3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1401
                ptUeccHCtrl->bsSubStage = SOFT_DECO_INIT;
400a58df:	040c      	movi.n	a4, 0
400a58e1:	014c42        	s8i	a4, a12, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1400
            {
                ptUeccHCtrl->bsStage = UECC_ERRH_DONE;
            }
            else if (READ_RETRY_FAIL == ptUeccHCtrl->bsSubStage)
            {
                ptUeccHCtrl->bsStage = UECC_ERRH_SOFT_DECODER;
400a58e4:	004c32        	s8i	a3, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1472
            DBG_Printf("UECC ErrH Stage Error 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a58e7:	31c8      	l32i.n	a12, a1, 12
400a58e9:	10c112        	addi	a1, a1, 16
400a58ec:	f00d      	ret.n

400a58ee <L3_ErrHReadUECC..II_1482204275+0xb6>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1437

            break;
        }
        case UECC_ERRH_DATA_RECOVER:
        {
            L3_DataRecovery(ptCtrlEntry);
400a58ee:	032d      	mov.n	a2, a3
400a58f0:	f44b01        	l32r	a0, 400a2a1c <_mcu2dram_text_start+0x21c>
400a58f3:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1439

            if (DATA_RECO_SUCCESS == ptUeccHCtrl->bsSubStage)
400a58f6:	010c02        	l8ui	a0, a12, 1
400a58f9:	025066        	bnei	a0, 5, 400a58ff <L3_ErrHReadUECC..II_1482204275+0xc7>
400a58fc:	002246        	j	400a5989 <L3_ErrHReadUECC..II_1482204275+0x151>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1443
            {
                ptUeccHCtrl->bsStage = UECC_ERRH_DONE;
            }
            else if (DATA_RECO_FAIL == ptUeccHCtrl->bsSubStage)
400a58ff:	876066        	bnei	a0, 6, 400a588a <L3_ErrHReadUECC..II_1482204275+0x52>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1472
            DBG_Printf("UECC ErrH Stage Error 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a5902:	2108      	l32i.n	a0, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1446
                ptUeccHCtrl->bsStage = UECC_ERRH_DONE;
            }
            else if (DATA_RECO_FAIL == ptUeccHCtrl->bsSubStage)
            {
                ptUeccHCtrl->bsStage = UECC_ERRH_REPORT_FAIL;
                ptUeccHCtrl->bsSubStage = UECCH_FAILED_INIT;
400a5904:	050c      	movi.n	a5, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1445
            {
                ptUeccHCtrl->bsStage = UECC_ERRH_DONE;
            }
            else if (DATA_RECO_FAIL == ptUeccHCtrl->bsSubStage)
            {
                ptUeccHCtrl->bsStage = UECC_ERRH_REPORT_FAIL;
400a5906:	560c      	movi.n	a6, 5
400a5908:	004c62        	s8i	a6, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1446
                ptUeccHCtrl->bsSubStage = UECCH_FAILED_INIT;
400a590b:	014c52        	s8i	a5, a12, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1472
            DBG_Printf("UECC ErrH Stage Error 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a590e:	31c8      	l32i.n	a12, a1, 12
400a5910:	10c112        	addi	a1, a1, 16
400a5913:	f00d      	ret.n

400a5915 <L3_ErrHReadUECC..II_1482204275+0xdd>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_SoftDecoder.c:63
void MCU2_DRAM_TEXT L3_SoftDecoder(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;

    DBG_Printf("SoftDecoder Pending...\n");
400a5915:	f44021        	l32r	a2, 400a2a18 <_mcu2dram_text_start+0x218>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_SoftDecoder.c:60
History    : 
    1. 2016.8.2 JasonGuo create function
==============================================================================*/
void MCU2_DRAM_TEXT L3_SoftDecoder(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
400a5918:	0378      	l32i.n	a7, a3, 0
400a591a:	0179      	s32i.n	a7, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_SoftDecoder.c:63
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;

    DBG_Printf("SoftDecoder Pending...\n");
400a591c:	f3c701        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a591f:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_SoftDecoder.c:65
    
    ptErrHEntry->tUeccHCtrl.bsSubStage = (TRUE == ptReqEntry->bsTableReq) ? SOFT_DECO_FAIL2FAIL : SOFT_DECO_FAIL2XOR;
400a5922:	1198      	l32i.n	a9, a1, 4
400a5924:	01b8      	l32i.n	a11, a1, 0
400a5926:	7a0c      	movi.n	a10, 7
400a5928:	0bb8      	l32i.n	a11, a11, 0
400a592a:	680c      	movi.n	a8, 6
400a592c:	04bbb0        	extui	a11, a11, 11, 1
400a592f:	bb0b      	addi.n	a11, a11, -1
400a5931:	838ab0        	moveqz	a8, a10, a11
400a5934:	054982        	s8i	a8, a9, 5
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1414
        }
        case UECC_ERRH_SOFT_DECODER:
        {
            L3_SoftDecoder(ptCtrlEntry);

            if (SOFT_DECO_SUCCESS == ptUeccHCtrl->bsSubStage)
400a5937:	010c02        	l8ui	a0, a12, 1
400a593a:	5a5026        	beqi	a0, 5, 400a5998 <L3_ErrHReadUECC..II_1482204275+0x160>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1418
            {
                ptUeccHCtrl->bsStage = UECC_ERRH_DONE;
            }
            else if (SOFT_DECO_FAIL2XOR == ptUeccHCtrl->bsSubStage)
400a593d:	5f6026        	beqi	a0, 6, 400a59a0 <L3_ErrHReadUECC..II_1482204275+0x168>
400a5940:	f9c022        	addi	a2, a0, -7
400a5943:	f43256        	bnez	a2, 400a588a <L3_ErrHReadUECC..II_1482204275+0x52>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1472
            DBG_Printf("UECC ErrH Stage Error 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a5946:	2108      	l32i.n	a0, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1426
                ptUeccHCtrl->bsSubStage = DATA_RECO_INIT;
            }
            else if (SOFT_DECO_FAIL2FAIL == ptUeccHCtrl->bsSubStage)
            {
                ptUeccHCtrl->bsStage = UECC_ERRH_REPORT_FAIL;
                ptUeccHCtrl->bsSubStage = UECCH_FAILED_INIT;
400a5948:	030c      	movi.n	a3, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1425
                ptUeccHCtrl->bsStage = UECC_ERRH_DATA_RECOVER;
                ptUeccHCtrl->bsSubStage = DATA_RECO_INIT;
            }
            else if (SOFT_DECO_FAIL2FAIL == ptUeccHCtrl->bsSubStage)
            {
                ptUeccHCtrl->bsStage = UECC_ERRH_REPORT_FAIL;
400a594a:	540c      	movi.n	a4, 5
400a594c:	004c42        	s8i	a4, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1426
                ptUeccHCtrl->bsSubStage = UECCH_FAILED_INIT;
400a594f:	014c32        	s8i	a3, a12, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1472
            DBG_Printf("UECC ErrH Stage Error 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a5952:	31c8      	l32i.n	a12, a1, 12
400a5954:	10c112        	addi	a1, a1, 16
400a5957:	f00d      	ret.n

400a5959 <L3_ErrHReadUECC..II_1482204275+0x121>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1460
        {
            L3_ErrHPrcUeccFail(ptCtrlEntry);

            if (UECCH_FAILED_DONE == ptUeccHCtrl->bsSubStage)
            {
                ptUeccHCtrl->bsStage = UECC_ERRH_DONE;
400a5959:	650c      	movi.n	a5, 6
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1472
            DBG_Printf("UECC ErrH Stage Error 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a595b:	2108      	l32i.n	a0, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1460
        {
            L3_ErrHPrcUeccFail(ptCtrlEntry);

            if (UECCH_FAILED_DONE == ptUeccHCtrl->bsSubStage)
            {
                ptUeccHCtrl->bsStage = UECC_ERRH_DONE;
400a595d:	004c52        	s8i	a5, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1472
            DBG_Printf("UECC ErrH Stage Error 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a5960:	31c8      	l32i.n	a12, a1, 12
400a5962:	10c112        	addi	a1, a1, 16
400a5965:	f00d      	ret.n

400a5967 <L3_ErrHReadUECC..II_1482204275+0x12f>:
	...

400a5968 <L3_ErrHReadUECC..II_1482204275+0x130>:
400a5968:	2108      	l32i.n	a0, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1367
        case UECC_ERRH_INIT:
        {
            if (TRUE == L3_ErrHDetectEmptyPage(ptCtrlEntry))
            {
                ptUeccHCtrl->bsStage = UECC_ERRH_EMPTY_PAGE;
                ptUeccHCtrl->bsSubStage = EMPTY_PG_HANDLE_INIT;
400a596a:	060c      	movi.n	a6, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1366
    {
        case UECC_ERRH_INIT:
        {
            if (TRUE == L3_ErrHDetectEmptyPage(ptCtrlEntry))
            {
                ptUeccHCtrl->bsStage = UECC_ERRH_EMPTY_PAGE;
400a596c:	170c      	movi.n	a7, 1
400a596e:	004c72        	s8i	a7, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1367
                ptUeccHCtrl->bsSubStage = EMPTY_PG_HANDLE_INIT;
400a5971:	014c62        	s8i	a6, a12, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1472
            DBG_Printf("UECC ErrH Stage Error 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a5974:	31c8      	l32i.n	a12, a1, 12
400a5976:	10c112        	addi	a1, a1, 16
400a5979:	f00d      	ret.n

400a597b <L3_ErrHReadUECC..II_1482204275+0x143>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1396
        {
            L3_ErrHReadRetry(ptCtrlEntry);

            if (READ_RETRY_SUCCESS == ptUeccHCtrl->bsSubStage)
            {
                ptUeccHCtrl->bsStage = UECC_ERRH_DONE;
400a597b:	680c      	movi.n	a8, 6
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1472
            DBG_Printf("UECC ErrH Stage Error 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a597d:	2108      	l32i.n	a0, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1396
        {
            L3_ErrHReadRetry(ptCtrlEntry);

            if (READ_RETRY_SUCCESS == ptUeccHCtrl->bsSubStage)
            {
                ptUeccHCtrl->bsStage = UECC_ERRH_DONE;
400a597f:	004c82        	s8i	a8, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1472
            DBG_Printf("UECC ErrH Stage Error 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a5982:	31c8      	l32i.n	a12, a1, 12
400a5984:	10c112        	addi	a1, a1, 16
400a5987:	f00d      	ret.n

400a5989 <L3_ErrHReadUECC..II_1482204275+0x151>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1441
        {
            L3_DataRecovery(ptCtrlEntry);

            if (DATA_RECO_SUCCESS == ptUeccHCtrl->bsSubStage)
            {
                ptUeccHCtrl->bsStage = UECC_ERRH_DONE;
400a5989:	690c      	movi.n	a9, 6
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1472
            DBG_Printf("UECC ErrH Stage Error 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a598b:	2108      	l32i.n	a0, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1441
        {
            L3_DataRecovery(ptCtrlEntry);

            if (DATA_RECO_SUCCESS == ptUeccHCtrl->bsSubStage)
            {
                ptUeccHCtrl->bsStage = UECC_ERRH_DONE;
400a598d:	004c92        	s8i	a9, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1472
            DBG_Printf("UECC ErrH Stage Error 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a5990:	31c8      	l32i.n	a12, a1, 12
400a5992:	10c112        	addi	a1, a1, 16
400a5995:	f00d      	ret.n

400a5997 <L3_ErrHReadUECC..II_1482204275+0x15f>:
	...

400a5998 <L3_ErrHReadUECC..II_1482204275+0x160>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1416
        {
            L3_SoftDecoder(ptCtrlEntry);

            if (SOFT_DECO_SUCCESS == ptUeccHCtrl->bsSubStage)
            {
                ptUeccHCtrl->bsStage = UECC_ERRH_DONE;
400a5998:	6a0c      	movi.n	a10, 6
400a599a:	004ca2        	s8i	a10, a12, 0
400a599d:	ffba46        	j	400a588a <L3_ErrHReadUECC..II_1482204275+0x52>

400a59a0 <L3_ErrHReadUECC..II_1482204275+0x168>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1420
            }
            else if (SOFT_DECO_FAIL2XOR == ptUeccHCtrl->bsSubStage)
            {
                ptUeccHCtrl->bsStage = UECC_ERRH_DATA_RECOVER;
400a59a0:	4b0c      	movi.n	a11, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1421
                ptUeccHCtrl->bsSubStage = DATA_RECO_INIT;
400a59a2:	000c      	movi.n	a0, 0
400a59a4:	014c02        	s8i	a0, a12, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1420
            {
                ptUeccHCtrl->bsStage = UECC_ERRH_DONE;
            }
            else if (SOFT_DECO_FAIL2XOR == ptUeccHCtrl->bsSubStage)
            {
                ptUeccHCtrl->bsStage = UECC_ERRH_DATA_RECOVER;
400a59a7:	004cb2        	s8i	a11, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1421
                ptUeccHCtrl->bsSubStage = DATA_RECO_INIT;
400a59aa:	ffb706        	j	400a588a <L3_ErrHReadUECC..II_1482204275+0x52>

400a59ad <L3_ErrHReadUECC..II_1482204275+0x175>:
L3_ErrHReadUECC..II_1482204275():
400a59ad:	000000                                        ...

400a59b0 <L3_ErrHReadRECC..HI_1482204275>:
L3_ErrHReadRECC():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1283
Usage      : 
History    : 
    1. 2016.7.25 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHReadRECC(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a59b0:	a0c112        	addi	a1, a1, -96
400a59b3:	1761f2        	s32i	a15, a1, 92
400a59b6:	1461c2        	s32i	a12, a1, 80
400a59b9:	136102        	s32i	a0, a1, 76
400a59bc:	1661e2        	s32i	a14, a1, 88
400a59bf:	1561d2        	s32i	a13, a1, 84
400a59c2:	02ed      	mov.n	a14, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1285
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
400a59c4:	92d8      	l32i.n	a13, a2, 36
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1284
History    : 
    1. 2016.7.25 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHReadRECC(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
400a59c6:	0208      	l32i.n	a0, a2, 0
400a59c8:	8109      	s32i.n	a0, a1, 32
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1292

    U8 ucTLun, ucCmdType, ucPln, ucErrCode, ucSecStart, ucSecLen, ucLpnBitmap;
    U16 usVirBlk, usPhyBlk, usVirPage, usPhyPage;
    U32 ulLBA;

    ucTLun = ptReqEntry->bsTLun;
400a59ca:	0000c2        	l8ui	a12, a0, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1294
    ucCmdType = ptCtrlEntry->bsCmdType;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
400a59cd:	4058      	l32i.n	a5, a0, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1299
    ucSecStart = ptReqEntry->tFlashDesc.bsSecStart;
    ucSecLen = ptReqEntry->tFlashDesc.bsSecLen;
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
400a59cf:	3038      	l32i.n	a3, a0, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1305
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    usPhyPage = ptCtrlEntry->bsPhyPage;
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;

    L3_ErrHAssertCmd(ptReqEntry->bsReqType, ucErrCode);
400a59d1:	0028      	l32i.n	a2, a0, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1299
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
    ucSecStart = ptReqEntry->tFlashDesc.bsSecStart;
    ucSecLen = ptReqEntry->tFlashDesc.bsSecLen;
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
400a59d3:	94f030        	extui	a15, a3, 0, 10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1300
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
400a59d6:	944a30        	extui	a4, a3, 10, 10
400a59d9:	746850        	extui	a6, a5, 8, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1294
    U16 usVirBlk, usPhyBlk, usVirPage, usPhyPage;
    U32 ulLBA;

    ucTLun = ptReqEntry->bsTLun;
    ucCmdType = ptCtrlEntry->bsCmdType;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
400a59dc:	157250        	extui	a7, a5, 18, 2
400a59df:	b179      	s32i.n	a7, a1, 44
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1305
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    usPhyPage = ptCtrlEntry->bsPhyPage;
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;

    L3_ErrHAssertCmd(ptReqEntry->bsReqType, ucErrCode);
400a59e1:	252220        	extui	a2, a2, 18, 3
400a59e4:	d169      	s32i.n	a6, a1, 52
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1300
    ucSecStart = ptReqEntry->tFlashDesc.bsSecStart;
    ucSecLen = ptReqEntry->tFlashDesc.bsSecLen;
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
400a59e6:	106142        	s32i	a4, a1, 64
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1301
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
400a59e9:	a53430        	extui	a3, a3, 20, 11
400a59ec:	755850        	extui	a5, a5, 24, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1295
    U32 ulLBA;

    ucTLun = ptReqEntry->bsTLun;
    ucCmdType = ptCtrlEntry->bsCmdType;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
    ucSecStart = ptReqEntry->tFlashDesc.bsSecStart;
400a59ef:	100042        	l8ui	a4, a0, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1293
    U8 ucTLun, ucCmdType, ucPln, ucErrCode, ucSecStart, ucSecLen, ucLpnBitmap;
    U16 usVirBlk, usPhyBlk, usVirPage, usPhyPage;
    U32 ulLBA;

    ucTLun = ptReqEntry->bsTLun;
    ucCmdType = ptCtrlEntry->bsCmdType;
400a59f2:	060e62        	l8ui	a6, a14, 6
400a59f5:	a169      	s32i.n	a6, a1, 40
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1295
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
    ucSecStart = ptReqEntry->tFlashDesc.bsSecStart;
400a59f7:	c149      	s32i.n	a4, a1, 48
400a59f9:	e159      	s32i.n	a5, a1, 56
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1301
    ucSecLen = ptReqEntry->tFlashDesc.bsSecLen;
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
400a59fb:	116132        	s32i	a3, a1, 68
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1303
    usPhyPage = ptCtrlEntry->bsPhyPage;
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;
400a59fe:	0b2002        	l32i	a0, a0, 44
400a5a01:	9109      	s32i.n	a0, a1, 36
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1298
    ucCmdType = ptCtrlEntry->bsCmdType;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
    ucSecStart = ptReqEntry->tFlashDesc.bsSecStart;
    ucSecLen = ptReqEntry->tFlashDesc.bsSecLen;
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
400a5a03:	000d32        	l8ui	a3, a13, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1302
    usVirBlk = ptReqEntry->tFlashDesc.bsVirBlk;
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    usPhyPage = ptCtrlEntry->bsPhyPage;
400a5a06:	021e52        	l16ui	a5, a14, 4
400a5a09:	126152        	s32i	a5, a1, 72
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1298
    ucCmdType = ptCtrlEntry->bsCmdType;
    ucPln = ptReqEntry->tFlashDesc.bsPlnNum;
    ucSecStart = ptReqEntry->tFlashDesc.bsSecStart;
    ucSecLen = ptReqEntry->tFlashDesc.bsSecLen;
    ucLpnBitmap = ptReqEntry->tFlashDesc.bsLpnBitmap;
    ucErrCode = ptErrHEntry->bsErrCode;
400a5a0c:	413130        	srli	a3, a3, 1
400a5a0f:	f139      	s32i.n	a3, a1, 60
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1305
    usPhyBlk = ptReqEntry->tFlashDesc.bsPhyBlk;
    usVirPage = ptReqEntry->tFlashDesc.bsVirPage;
    usPhyPage = ptCtrlEntry->bsPhyPage;
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;

    L3_ErrHAssertCmd(ptReqEntry->bsReqType, ucErrCode);
400a5a11:	ff7485        	call0	400a515c <L3_ErrHAssertCmd..IH_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1308

    ptErrHEntry->bsErrRpt = TRUE;
    if (TRUE != L3_IFIsRecycled(ptCtrlEntry))
400a5a14:	0e2d      	mov.n	a2, a14
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1307
    usPhyPage = ptCtrlEntry->bsPhyPage;
    ulLBA = ptReqEntry->tHostDesc.ulFtlLba;

    L3_ErrHAssertCmd(ptReqEntry->bsReqType, ucErrCode);

    ptErrHEntry->bsErrRpt = TRUE;
400a5a16:	0d88      	l32i.n	a8, a13, 0
400a5a18:	190c      	movi.n	a9, 1
400a5a1a:	208890        	or	a8, a8, a9
400a5a1d:	0d89      	s32i.n	a8, a13, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1308
    if (TRUE != L3_IFIsRecycled(ptCtrlEntry))
400a5a1f:	f3e101        	l32r	a0, 400a29a4 <_mcu2dram_text_start+0x1a4>
400a5a22:	0000c0        	callx0	a0
400a5a25:	281226        	beqi	a2, 1, 400a5a51 <L3_ErrHReadRECC..HI_1482204275+0xa1>
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:285
    U8 ucLunInSuperPu;
    U16 PBN;

    for (ucLunInSuperPu = 0; ucLunInSuperPu < LUN_NUM_PER_SUPERPU; ucLunInSuperPu++)
    {
        PBN = pVBT[ucSuperPu]->m_VBT[VirBlockAddr].PhysicalBlockAddr[ucLunInSuperPu];
400a5a28:	f385b1        	l32r	a11, 400a283c <_mcu2dram_text_start+0x3c>
400a5a2b:	a0bcb0        	addx4	a11, a12, a11
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:286
        pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bWeak = bTrue;
400a5a2e:	7c2b02        	l32i	a0, a11, 0x1f0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:285
    U8 ucLunInSuperPu;
    U16 PBN;

    for (ucLunInSuperPu = 0; ucLunInSuperPu < LUN_NUM_PER_SUPERPU; ucLunInSuperPu++)
    {
        PBN = pVBT[ucSuperPu]->m_VBT[VirBlockAddr].PhysicalBlockAddr[ucLunInSuperPu];
400a5a31:	9c2bb2        	l32i	a11, a11, 0x270
400a5a34:	112fc0        	slli	a2, a15, 4
400a5a37:	bb2a      	add.n	a11, a11, a2
400a5a39:	001bb2        	l16ui	a11, a11, 0
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:286
        pPBIT[ucSuperPu]->m_PBIT_Entry[ucLunInSuperPu][PBN].bWeak = bTrue;
400a5a3c:	b0bb00        	addx8	a11, a11, a0
400a5a3f:	f3d401        	l32r	a0, 400a2990 <_mcu2dram_text_start+0x190>
400a5a42:	1ba8      	l32i.n	a10, a11, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1312
    {
        L2_PBIT_Set_Weak(L2_GET_SPU(ucTLun), usVirBlk, TRUE);

        L3_IFUpdtReqStatus(ptCtrlEntry);
400a5a44:	0e2d      	mov.n	a2, a14
D:\IM_3D_TLC\firmware\algorithm\L2/L2_Interface.c:286
400a5a46:	20aa00        	or	a10, a10, a0
400a5a49:	1ba9      	s32i.n	a10, a11, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1312
400a5a4b:	f3a801        	l32r	a0, 400a28ec <_mcu2dram_text_start+0xec>
400a5a4e:	0000c0        	callx0	a0

400a5a51 <L3_ErrHReadRECC..HI_1482204275+0xa1>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1315
    }

    if (TRUE == ptErrHEntry->tUeccHCtrl.tRetry.bsEnable)
400a5a51:	2d08      	l32i.n	a0, a13, 8
400a5a53:	5fe007        	bbsi	a0, 0, 400a5ab6 <L3_ErrHReadRECC..HI_1482204275+0x106>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1321
    {
        L3_ErrHTerminate(ucTLun, FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod);
        L3_ErrHUpdtVthRetry(ptCtrlEntry);
    }

    L3_FCMDQSetIntrEptr(ucTLun, INVALID_DPTR, FALSE);
400a5a56:	0c2d      	mov.n	a2, a12
400a5a58:	ffa032        	movi	a3, 255
400a5a5b:	040c      	movi.n	a4, 0
400a5a5d:	91e8      	l32i.n	a14, a1, 36
400a5a5f:	f3a501        	l32r	a0, 400a28f4 <_mcu2dram_text_start+0xf4>
400a5a62:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1322
    L3_ErrHFailLog(ucTLun, ucErrCode);
400a5a65:	0c2d      	mov.n	a2, a12
400a5a67:	f138      	l32i.n	a3, a1, 60
400a5a69:	ff4f45        	call0	400a4f60 <L3_ErrHFailLog..DH_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1324

    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x RetryTime=%d Recc.\n",
400a5a6c:	102152        	l32i	a5, a1, 64
400a5a6f:	112162        	l32i	a6, a1, 68
400a5a72:	122172        	l32i	a7, a1, 72
400a5a75:	e198      	l32i.n	a9, a1, 56
400a5a77:	a128      	l32i.n	a2, a1, 40
400a5a79:	d1a8      	l32i.n	a10, a1, 52
400a5a7b:	c1b8      	l32i.n	a11, a1, 48
400a5a7d:	b108      	l32i.n	a0, a1, 44
400a5a7f:	0f4d      	mov.n	a4, a15
400a5a81:	0c3d      	mov.n	a3, a12
400a5a83:	51e9      	s32i.n	a14, a1, 20
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1327
        ucTLun, usVirBlk, usPhyBlk, usVirPage, usPhyPage, ucCmdType, ucPln, ucSecStart, ucSecLen, ucLpnBitmap, ulLBA, ptUeccHCtrl->tRetry.bsTime);
    
    return;
400a5a85:	1421c2        	l32i	a12, a1, 80
400a5a88:	1621e2        	l32i	a14, a1, 88
400a5a8b:	1721f2        	l32i	a15, a1, 92
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1324
    }

    L3_FCMDQSetIntrEptr(ucTLun, INVALID_DPTR, FALSE);
    L3_ErrHFailLog(ucTLun, ucErrCode);

    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x RetryTime=%d Recc.\n",
400a5a8e:	1109      	s32i.n	a0, a1, 4
400a5a90:	21b9      	s32i.n	a11, a1, 8
400a5a92:	31a9      	s32i.n	a10, a1, 12
400a5a94:	0129      	s32i.n	a2, a1, 0
400a5a96:	4199      	s32i.n	a9, a1, 16
400a5a98:	f3e221        	l32r	a2, 400a2a20 <_mcu2dram_text_start+0x220>
400a5a9b:	080d82        	l8ui	a8, a13, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1327
        ucTLun, usVirBlk, usPhyBlk, usVirPage, usPhyPage, ucCmdType, ucPln, ucSecStart, ucSecLen, ucLpnBitmap, ulLBA, ptUeccHCtrl->tRetry.bsTime);
    
    return;
400a5a9e:	1521d2        	l32i	a13, a1, 84
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1324
    }

    L3_FCMDQSetIntrEptr(ucTLun, INVALID_DPTR, FALSE);
    L3_ErrHFailLog(ucTLun, ucErrCode);

    DBG_Printf("TLun%d Blk%d_%d Page%d_%d CmdType%d_%d SecRange=%d_%d_%d LBA=0x%x RetryTime=%d Recc.\n",
400a5aa1:	418180        	srli	a8, a8, 1
400a5aa4:	6189      	s32i.n	a8, a1, 24
400a5aa6:	f36401        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a5aa9:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1327
        ucTLun, usVirBlk, usPhyBlk, usVirPage, usPhyPage, ucCmdType, ucPln, ucSecStart, ucSecLen, ucLpnBitmap, ulLBA, ptUeccHCtrl->tRetry.bsTime);
    
    return;
400a5aac:	132102        	l32i	a0, a1, 76
400a5aaf:	60c112        	addi	a1, a1, 96
400a5ab2:	f00d      	ret.n

400a5ab4 <L3_ErrHReadRECC..HI_1482204275+0x104>:
	...

400a5ab6 <L3_ErrHReadRECC..HI_1482204275+0x106>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1317
        L3_IFUpdtReqStatus(ptCtrlEntry);
    }

    if (TRUE == ptErrHEntry->tUeccHCtrl.tRetry.bsEnable)
    {
        L3_ErrHTerminate(ucTLun, FCMD_REQ_TLC_BLK == ptReqEntry->tFlashDesc.bsBlkMod);
400a5ab6:	0c2d      	mov.n	a2, a12
400a5ab8:	8158      	l32i.n	a5, a1, 32
400a5aba:	140c      	movi.n	a4, 1
400a5abc:	4558      	l32i.n	a5, a5, 16
400a5abe:	030c      	movi.n	a3, 0
400a5ac0:	155050        	extui	a5, a5, 16, 2
400a5ac3:	fec552        	addi	a5, a5, -2
400a5ac6:	833450        	moveqz	a3, a4, a5
400a5ac9:	ff5745        	call0	400a5040 <L3_ErrHTerminate..PH_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1318
        L3_ErrHUpdtVthRetry(ptCtrlEntry);
400a5acc:	0e2d      	mov.n	a2, a14
400a5ace:	ff5245        	call0	400a4ff4 <L3_ErrHUpdtVthRetry..BI_1482204275>
400a5ad1:	ffe046        	j	400a5a56 <L3_ErrHReadRECC..HI_1482204275+0xa6>

400a5ad4 <L3_ErrHRstCmdQ..KH_1482204275>:
L3_ErrHRstCmdQ():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:607
Usage      : 
History    : 
    1. 2016.7.25 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHRstCmdQ(U8 ucTLun)
{
400a5ad4:	f0c112        	addi	a1, a1, -16
400a5ad7:	11c9      	s32i.n	a12, a1, 4
400a5ad9:	0109      	s32i.n	a0, a1, 0
400a5adb:	20c220        	or	a12, a2, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:864
    20150119    Tobey   HW don't support set function
    20151029     abby    add Lun
------------------------------------------------------------------------------*/
void MCU2_DRAM_TEXT HAL_NfcResetCmdQue(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPU = HAL_NfcGetPhyPU(ucPU);  
400a5ade:	f3d101        	l32r	a0, 400a2a24 <_mcu2dram_text_start+0x224>
400a5ae1:	0000c0        	callx0	a0
400a5ae4:	f35641        	l32r	a4, 400a283c <_mcu2dram_text_start+0x3c>
400a5ae7:	023d      	mov.n	a3, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:875
    tLunLocation.ucPhyPuInCh = ucPhyPU / NFC_CH_TOTAL;
    tLunLocation.ucLunInPhyPu = ucLun;
    
    NFC_InterfaceResetCQ(&tLunLocation, 0);
#else
    g_pNfcCmdSts->aNfcqCmdStsReg[ucPhyPU][ucLun].bsPrst = TRUE;
400a5ae9:	3e2422        	l32i	a2, a4, 248
400a5aec:	1133c0        	slli	a3, a3, 4
400a5aef:	223a      	add.n	a2, a2, a3
400a5af1:	dfa042        	movi	a4, 223
400a5af4:	032c      	movi.n	a3, 32
400a5af6:	0020c0        	memw
400a5af9:	010202        	l8ui	a0, a2, 1
400a5afc:	100040        	and	a0, a0, a4
400a5aff:	200030        	or	a0, a0, a3
400a5b02:	0020c0        	memw
400a5b05:	014202        	s8i	a0, a2, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:900
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
    20151030    abby    add ucLun as para
------------------------------------------------------------------------------*/
void MCU2_DRAM_TEXT HAL_NfcClearINTSts(U8 ucPU, U8 ucLun)
{
    U8 ucPhyPuInTotal = HAL_NfcGetPhyPU(ucPU);
400a5b08:	0c2d      	mov.n	a2, a12
400a5b0a:	f3c601        	l32r	a0, 400a2a24 <_mcu2dram_text_start+0x224>
400a5b0d:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:903
    
#ifndef SIM
    g_pNfcCmdSts->aNfcqCmdStsReg[ucPhyPuInTotal][ucLun].bsIntSts = 1; // write 1, hardware clear it
400a5b10:	f34b61        	l32r	a6, 400a283c <_mcu2dram_text_start+0x3c>
400a5b13:	1172c0        	slli	a7, a2, 4
400a5b16:	3e2662        	l32i	a6, a6, 248
400a5b19:	efa082        	movi	a8, 239
400a5b1c:	667a      	add.n	a6, a6, a7
400a5b1e:	071c      	movi.n	a7, 16
400a5b20:	0020c0        	memw
400a5b23:	010652        	l8ui	a5, a6, 1
400a5b26:	105580        	and	a5, a5, a8
400a5b29:	205570        	or	a5, a5, a7
400a5b2c:	0020c0        	memw
400a5b2f:	014652        	s8i	a5, a6, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:615
    
    // Reset CQ    
    HAL_NfcResetCmdQue(ucPu, ucLunInPu);    
    HAL_NfcClearINTSts(ucPu, ucLunInPu);

    return;
400a5b32:	11c8      	l32i.n	a12, a1, 4
400a5b34:	0108      	l32i.n	a0, a1, 0
400a5b36:	10c112        	addi	a1, a1, 16
400a5b39:	f00d      	ret.n

400a5b3b <L3_ErrHRstCmdQ..KH_1482204275+0x67>:
	...

400a5b3c <L3_ErrHGetTBrthLun..CH_1482204275>:
L3_ErrHGetTBrthLun():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:135
History    : 
    1. 2016.7.27 JasonGuo create function
==============================================================================*/
LOCAL U8 MCU2_DRAM_TEXT L3_ErrHGetTBrthLun(U8 ucTLun, U8 ucBrthLun)
{
    return g_aBrthLunMap[ucTLun][ucBrthLun];
400a5b3c:	f3bb41        	l32r	a4, 400a2a28 <_mcu2dram_text_start+0x228>
400a5b3f:	223a      	add.n	a2, a2, a3
400a5b41:	224a      	add.n	a2, a2, a4
400a5b43:	800222        	l8ui	a2, a2, 128
400a5b46:	f00d      	ret.n

400a5b48 <L3_ErrHDetectEmptyPage..EH_1482204275>:
L3_ErrHDetectEmptyPage():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:266
Usage      : 
History    : 
    1. 2016.8.2 JasonGuo create function
==============================================================================*/
LOCAL BOOL MCU2_DRAM_TEXT L3_ErrHDetectEmptyPage(FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a5b48:	f0c112        	addi	a1, a1, -16
400a5b4b:	0109      	s32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:272
    U8 ucPU, ucLunInPU, ucLevel, ucPln, ucStartPln, ucEndPln, ucCWNum;
    U32 ulCwFailBitmap;
    BOOL bIsEmptyPage = TRUE;
    DEC_SRAM_STATUS_ENTRY *ptDecSramSts;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
400a5b4d:	9208      	l32i.n	a0, a2, 36
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:275

    // no need to check the empty page status when the retry started.
    if (TRUE == ptErrHEntry->tUeccHCtrl.tRetry.bsEnable) return FALSE;
400a5b4f:	2038      	l32i.n	a3, a0, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:271
{
    U8 ucPU, ucLunInPU, ucLevel, ucPln, ucStartPln, ucEndPln, ucCWNum;
    U32 ulCwFailBitmap;
    BOOL bIsEmptyPage = TRUE;
    DEC_SRAM_STATUS_ENTRY *ptDecSramSts;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
400a5b51:	002242        	l32i	a4, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:275
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;

    // no need to check the empty page status when the retry started.
    if (TRUE == ptErrHEntry->tUeccHCtrl.tRetry.bsEnable) return FALSE;
400a5b54:	08e307        	bbsi	a3, 0, 400a5b60 <L3_ErrHDetectEmptyPage..EH_1482204275+0x18>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:276
    if (NF_ERR_TYPE_UECC != ptErrHEntry->bsErrCode) return FALSE;
400a5b57:	000052        	l8ui	a5, a0, 0
400a5b5a:	415150        	srli	a5, a5, 1
400a5b5d:	086526        	beqi	a5, 6, 400a5b69 <L3_ErrHDetectEmptyPage..EH_1482204275+0x21>

400a5b60 <L3_ErrHDetectEmptyPage..EH_1482204275+0x18>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:275
    DEC_SRAM_STATUS_ENTRY *ptDecSramSts;
    FCMD_REQ_ENTRY *ptReqEntry = ptCtrlEntry->ptReqEntry;
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;

    // no need to check the empty page status when the retry started.
    if (TRUE == ptErrHEntry->tUeccHCtrl.tRetry.bsEnable) return FALSE;
400a5b60:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:340
                break;
            }
        }
    }
    
    return bIsEmptyPage;
400a5b62:	0108      	l32i.n	a0, a1, 0
400a5b64:	10c112        	addi	a1, a1, 16
400a5b67:	f00d      	ret.n

400a5b69 <L3_ErrHDetectEmptyPage..EH_1482204275+0x21>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:278

    // no need to check the empty page status when the retry started.
    if (TRUE == ptErrHEntry->tUeccHCtrl.tRetry.bsEnable) return FALSE;
    if (NF_ERR_TYPE_UECC != ptErrHEntry->bsErrCode) return FALSE;

    ucPU = L3_GET_PU(ptReqEntry->bsTLun);
400a5b69:	000462        	l8ui	a6, a4, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:282
    ucLunInPU = L3_GET_LUN_IN_PU(ptReqEntry->bsTLun);
    ucLevel = ptCtrlEntry->bsNfcqPtr;

    if (FCMD_REQ_SUBTYPE_SINGLE == ptReqEntry->bsReqSubType)
400a5b6c:	0488      	l32i.n	a8, a4, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:280
    if (TRUE == ptErrHEntry->tUeccHCtrl.tRetry.bsEnable) return FALSE;
    if (NF_ERR_TYPE_UECC != ptErrHEntry->bsErrCode) return FALSE;

    ucPU = L3_GET_PU(ptReqEntry->bsTLun);
    ucLunInPU = L3_GET_LUN_IN_PU(ptReqEntry->bsTLun);
    ucLevel = ptCtrlEntry->bsNfcqPtr;
400a5b6e:	1228      	l32i.n	a2, a2, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:282

    if (FCMD_REQ_SUBTYPE_SINGLE == ptReqEntry->bsReqSubType)
400a5b70:	4408      	l32i.n	a0, a4, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:280
    if (TRUE == ptErrHEntry->tUeccHCtrl.tRetry.bsEnable) return FALSE;
    if (NF_ERR_TYPE_UECC != ptErrHEntry->bsErrCode) return FALSE;

    ucPU = L3_GET_PU(ptReqEntry->bsTLun);
    ucLunInPU = L3_GET_LUN_IN_PU(ptReqEntry->bsTLun);
    ucLevel = ptCtrlEntry->bsNfcqPtr;
400a5b72:	152e20        	extui	a2, a2, 30, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:282

    if (FCMD_REQ_SUBTYPE_SINGLE == ptReqEntry->bsReqSubType)
400a5b75:	057600        	extui	a7, a0, 22, 1
400a5b78:	258580        	extui	a8, a8, 21, 3
400a5b7b:	0af816        	beqz	a8, 400a5c2e <L3_ErrHDetectEmptyPage..EH_1482204275+0xe6>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:288
    {
        ucStartPln = ucEndPln = 0;
    }
    else
    {
        ucStartPln = (TRUE == ptReqEntry->tFlashDesc.bsRdRedOnly) ? 0 : ptReqEntry->tFlashDesc.bsSecStart / SEC_PER_LOGIC_PG;
400a5b7e:	08f067        	bbsi	a0, 22, 400a5b8a <L3_ErrHDetectEmptyPage..EH_1482204275+0x42>
400a5b81:	100452        	l8ui	a5, a4, 16
400a5b84:	415550        	srli	a5, a5, 5
400a5b87:	000046        	j	400a5b8c <L3_ErrHDetectEmptyPage..EH_1482204275+0x44>

400a5b8a <L3_ErrHDetectEmptyPage..EH_1482204275+0x42>:
400a5b8a:	050c      	movi.n	a5, 0
400a5b8c:	745050        	extui	a5, a5, 0, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:289
        if (TRUE == ptReqEntry->tFlashDesc.bsMergeRdEn)
400a5b8f:	0a7077        	bbci	a0, 23, 400a5b9d <L3_ErrHDetectEmptyPage..EH_1482204275+0x55>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:291
        {
            ucEndPln = ptReqEntry->tFlashDesc.bsSecStart / SEC_PER_LOGIC_PG;
400a5b92:	100402        	l8ui	a0, a4, 16
400a5b95:	410500        	srli	a0, a0, 5
400a5b98:	000706        	j	400a5bb8 <L3_ErrHDetectEmptyPage..EH_1482204275+0x70>

400a5b9b <L3_ErrHDetectEmptyPage..EH_1482204275+0x53>:
	...

400a5b9d <L3_ErrHDetectEmptyPage..EH_1482204275+0x55>:
400a5b9d:	370b      	addi.n	a3, a7, -1
400a5b9f:	092316        	beqz	a3, 400a5c35 <L3_ErrHDetectEmptyPage..EH_1482204275+0xed>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:295
        }
        else
        {
            ucEndPln = (TRUE == ptReqEntry->tFlashDesc.bsRdRedOnly) ? (PLN_PER_LUN - 1) : (ptReqEntry->tFlashDesc.bsSecStart + ptReqEntry->tFlashDesc.bsSecLen - 1) / SEC_PER_LOGIC_PG;
400a5ba2:	110432        	l8ui	a3, a4, 17
400a5ba5:	100402        	l8ui	a0, a4, 16
400a5ba8:	003a      	add.n	a0, a0, a3
400a5baa:	300b      	addi.n	a3, a0, -1
400a5bac:	1ec002        	addi	a0, a0, 30
400a5baf:	b30330        	movgez	a0, a3, a3
400a5bb2:	210500        	srai	a0, a0, 5
400a5bb5:	740000        	extui	a0, a0, 0, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:300
        }

    }

    for (ucPln = ucStartPln; ucPln <= ucEndPln; ucPln++)
400a5bb8:	693057        	bltu	a0, a5, 400a5c25 <L3_ErrHDetectEmptyPage..EH_1482204275+0xdd>
400a5bbb:	a01b      	addi.n	a10, a0, 1
400a5bbd:	f39bb1        	l32r	a11, 400a2a2c <_mcu2dram_text_start+0x22c>
400a5bc0:	f31f81        	l32r	a8, 400a283c <_mcu2dram_text_start+0x3c>
400a5bc3:	b09620        	addx8	a9, a6, a2
400a5bc6:	1199e0        	slli	a9, a9, 2
400a5bc9:	222882        	l32i	a8, a8, 136
400a5bcc:	000586        	j	400a5be6 <L3_ErrHDetectEmptyPage..EH_1482204275+0x9e>

400a5bcf <L3_ErrHDetectEmptyPage..EH_1482204275+0x87>:
	...

400a5bd0 <L3_ErrHDetectEmptyPage..EH_1482204275+0x88>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:332
                }
                ulCwFailBitmap >>= 1;
            }
            
            // if any palne is not empty page, we should to indicate it is as a real uecc.
            if ((U32)ptDecSramSts->bsN1Accu < (U32)ucCWNum * EMPTY_THRD_FST_15K)
400a5bd0:	f39831        	l32r	a3, 400a2a30 <_mcu2dram_text_start+0x230>
400a5bd3:	2608      	l32i.n	a0, a6, 8
400a5bd5:	d13230        	mul16s	a3, a2, a3
400a5bd8:	1000b0        	and	a0, a0, a11
400a5bdb:	3d3037        	bltu	a0, a3, 400a5c1c <L3_ErrHDetectEmptyPage..EH_1482204275+0xd4>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:300
            ucEndPln = (TRUE == ptReqEntry->tFlashDesc.bsRdRedOnly) ? (PLN_PER_LUN - 1) : (ptReqEntry->tFlashDesc.bsSecStart + ptReqEntry->tFlashDesc.bsSecLen - 1) / SEC_PER_LOGIC_PG;
        }

    }

    for (ucPln = ucStartPln; ucPln <= ucEndPln; ucPln++)
400a5bde:	551b      	addi.n	a5, a5, 1
400a5be0:	745050        	extui	a5, a5, 0, 8
400a5be3:	3e1a57        	beq	a10, a5, 400a5c25 <L3_ErrHDetectEmptyPage..EH_1482204275+0xdd>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:304
    {
        ptDecSramSts = (DEC_SRAM_STATUS_ENTRY *)(&g_pDecSramStsBase->aDecStsSram[ucPU][ucLunInPU][ucLevel][ucPln]);

        if (TRUE == ptReqEntry->tFlashDesc.bsRdRedOnly)
400a5be6:	695a      	add.n	a6, a9, a5
400a5be8:	1166c0        	slli	a6, a6, 4
400a5beb:	686a      	add.n	a6, a8, a6
400a5bed:	201726        	beqi	a7, 1, 400a5c11 <L3_ErrHDetectEmptyPage..EH_1482204275+0xc9>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:317
            }
        }
        else
        {
            ucCWNum = 0;
            ulCwFailBitmap = ptDecSramSts->ulDecFailBitMap;
400a5bf0:	002642        	l32i	a4, a6, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:318
            while (0 != ulCwFailBitmap)
400a5bf3:	fe7416        	beqz	a4, 400a5bde <L3_ErrHDetectEmptyPage..EH_1482204275+0x96>
400a5bf6:	00a022        	movi	a2, 0
400a5bf9:	118076        	loop	a0, 400a5c0e <L3_ErrHDetectEmptyPage..EH_1482204275+0xc6>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:320
            {
                if (0 != (ulCwFailBitmap & 1))
400a5bfc:	086407        	bbci	a4, 0, 400a5c08 <L3_ErrHDetectEmptyPage..EH_1482204275+0xc0>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:322
                {
                    ucCWNum++;
400a5bff:	01c222        	addi	a2, a2, 1
400a5c02:	742020        	extui	a2, a2, 0, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:325
                    if (8 <= ucCWNum)
                    {
                        break;
400a5c05:	c782f6        	bgeui	a2, 8, 400a5bd0 <L3_ErrHDetectEmptyPage..EH_1482204275+0x88>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:328
                    }
                }
                ulCwFailBitmap >>= 1;
400a5c08:	414140        	srli	a4, a4, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:318
        }
        else
        {
            ucCWNum = 0;
            ulCwFailBitmap = ptDecSramSts->ulDecFailBitMap;
            while (0 != ulCwFailBitmap)
400a5c0b:	fc1416        	beqz	a4, 400a5bd0 <L3_ErrHDetectEmptyPage..EH_1482204275+0x88>

400a5c0e <L3_ErrHDetectEmptyPage..EH_1482204275+0xc6>:
400a5c0e:	fff9c6        	j	400a5bf9 <L3_ErrHDetectEmptyPage..EH_1482204275+0xb1>

400a5c11 <L3_ErrHDetectEmptyPage..EH_1482204275+0xc9>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:308

        if (TRUE == ptReqEntry->tFlashDesc.bsRdRedOnly)
        {
            //ucCWNum = 1;
            //if any palne is not empty page, we should to indicate it as a real uecc.
            if ((U32)ptDecSramSts->bsN1Accu < EMPTY_THRD_LAST_1K)
400a5c11:	2648      	l32i.n	a4, a6, 8
400a5c13:	f38831        	l32r	a3, 400a2a34 <_mcu2dram_text_start+0x234>
400a5c16:	1044b0        	and	a4, a4, a11
400a5c19:	c13347        	bltu	a3, a4, 400a5bde <L3_ErrHDetectEmptyPage..EH_1482204275+0x96>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:311
            {
                bIsEmptyPage = FALSE;
                break;
400a5c1c:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:340
                break;
            }
        }
    }
    
    return bIsEmptyPage;
400a5c1e:	0108      	l32i.n	a0, a1, 0
400a5c20:	10c112        	addi	a1, a1, 16
400a5c23:	f00d      	ret.n

400a5c25 <L3_ErrHDetectEmptyPage..EH_1482204275+0xdd>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:300
            ucEndPln = (TRUE == ptReqEntry->tFlashDesc.bsRdRedOnly) ? (PLN_PER_LUN - 1) : (ptReqEntry->tFlashDesc.bsSecStart + ptReqEntry->tFlashDesc.bsSecLen - 1) / SEC_PER_LOGIC_PG;
        }

    }

    for (ucPln = ucStartPln; ucPln <= ucEndPln; ucPln++)
400a5c25:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:340
                break;
            }
        }
    }
    
    return bIsEmptyPage;
400a5c27:	0108      	l32i.n	a0, a1, 0
400a5c29:	10c112        	addi	a1, a1, 16
400a5c2c:	f00d      	ret.n

400a5c2e <L3_ErrHDetectEmptyPage..EH_1482204275+0xe6>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:284
    ucLunInPU = L3_GET_LUN_IN_PU(ptReqEntry->bsTLun);
    ucLevel = ptCtrlEntry->bsNfcqPtr;

    if (FCMD_REQ_SUBTYPE_SINGLE == ptReqEntry->bsReqSubType)
    {
        ucStartPln = ucEndPln = 0;
400a5c2e:	000c      	movi.n	a0, 0
400a5c30:	050c      	movi.n	a5, 0
400a5c32:	ffe146        	j	400a5bbb <L3_ErrHDetectEmptyPage..EH_1482204275+0x73>

400a5c35 <L3_ErrHDetectEmptyPage..EH_1482204275+0xed>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:295
        {
            ucEndPln = ptReqEntry->tFlashDesc.bsSecStart / SEC_PER_LOGIC_PG;
        }
        else
        {
            ucEndPln = (TRUE == ptReqEntry->tFlashDesc.bsRdRedOnly) ? (PLN_PER_LUN - 1) : (ptReqEntry->tFlashDesc.bsSecStart + ptReqEntry->tFlashDesc.bsSecLen - 1) / SEC_PER_LOGIC_PG;
400a5c35:	300c      	movi.n	a0, 3
400a5c37:	ffde86        	j	400a5bb5 <L3_ErrHDetectEmptyPage..EH_1482204275+0x6d>

400a5c3a <L3_ErrHDetectEmptyPage..EH_1482204275+0xf2>:
	...

400a5c3c <L3_ErrHDetectErrCode..FH_1482204275>:
L3_ErrHDetectErrCode():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:356
release mode.
History    : 
    1. 2016.7.22 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHDetectErrCode(U8 ucTLun, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a5c3c:	f0c112        	addi	a1, a1, -16
400a5c3f:	1109      	s32i.n	a0, a1, 4
400a5c41:	21c9      	s32i.n	a12, a1, 8
400a5c43:	31d9      	s32i.n	a13, a1, 12
400a5c45:	03cd      	mov.n	a12, a3
400a5c47:	02dd      	mov.n	a13, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:359
    U8 ucErrCode;
    
    ucErrCode = HAL_NfcGetErrCode(L3_GET_PU(ucTLun), L3_GET_LUN_IN_PU(ucTLun));
400a5c49:	030c      	movi.n	a3, 0
400a5c4b:	f37c01        	l32r	a0, 400a2a3c <_mcu2dram_text_start+0x23c>
400a5c4e:	0000c0        	callx0	a0
400a5c51:	020d      	mov.n	a0, a2
400a5c53:	92ac      	beqz.n	a2, 400a5c80 <L3_ErrHDetectErrCode..FH_1482204275+0x44>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:362
    ASSERT(NF_SUCCESS != ucErrCode);

    if (TRUE == ptCtrlEntry->ptErrHEntry->tUeccHCtrl.tRetry.bsEnable)
400a5c55:	9c28      	l32i.n	a2, a12, 36
400a5c57:	0109      	s32i.n	a0, a1, 0
400a5c59:	2238      	l32i.n	a3, a2, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:372
            DBG_Printf("TLun%d RetryMeetsEmptyPage.0x%x\n", ucTLun, (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    ptCtrlEntry->ptErrHEntry->bsErrCode = ucErrCode;
400a5c5b:	0278      	l32i.n	a7, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:362
    U8 ucErrCode;
    
    ucErrCode = HAL_NfcGetErrCode(L3_GET_PU(ucTLun), L3_GET_LUN_IN_PU(ucTLun));
    ASSERT(NF_SUCCESS != ucErrCode);

    if (TRUE == ptCtrlEntry->ptErrHEntry->tUeccHCtrl.tRetry.bsEnable)
400a5c5d:	236307        	bbci	a3, 0, 400a5c84 <L3_ErrHDetectErrCode..FH_1482204275+0x48>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:364
    {
        if (TRUE == L3_ErrHDetectEmptyPage(ptCtrlEntry))
400a5c60:	0c2d      	mov.n	a2, a12
400a5c62:	ffee45        	call0	400a5b48 <L3_ErrHDetectEmptyPage..EH_1482204275>
400a5c65:	2b1226        	beqi	a2, 1, 400a5c94 <L3_ErrHDetectErrCode..FH_1482204275+0x58>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:374
        }
    }

    ptCtrlEntry->ptErrHEntry->bsErrCode = ucErrCode;

    return;
400a5c68:	1108      	l32i.n	a0, a1, 4
400a5c6a:	31d8      	l32i.n	a13, a1, 12
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:89
400a5c6c:	9c58      	l32i.n	a5, a12, 36
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:372
            DBG_Printf("TLun%d RetryMeetsEmptyPage.0x%x\n", ucTLun, (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    ptCtrlEntry->ptErrHEntry->bsErrCode = ucErrCode;
400a5c6e:	0168      	l32i.n	a6, a1, 0
400a5c70:	0548      	l32i.n	a4, a5, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:374

    return;
400a5c72:	21c8      	l32i.n	a12, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:372
            DBG_Printf("TLun%d RetryMeetsEmptyPage.0x%x\n", ucTLun, (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    ptCtrlEntry->ptErrHEntry->bsErrCode = ucErrCode;
400a5c74:	231644        	insbits	a4, a6, 1, 7
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:374

    return;
400a5c77:	10c112        	addi	a1, a1, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:372
            DBG_Printf("TLun%d RetryMeetsEmptyPage.0x%x\n", ucTLun, (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    ptCtrlEntry->ptErrHEntry->bsErrCode = ucErrCode;
400a5c7a:	0549      	s32i.n	a4, a5, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:374

    return;
400a5c7c:	f00d      	ret.n

400a5c7e <L3_ErrHDetectErrCode..FH_1482204275+0x42>:
	...

400a5c80 <L3_ErrHDetectErrCode..FH_1482204275+0x44>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:360
LOCAL void MCU2_DRAM_TEXT L3_ErrHDetectErrCode(U8 ucTLun, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
    U8 ucErrCode;
    
    ucErrCode = HAL_NfcGetErrCode(L3_GET_PU(ucTLun), L3_GET_LUN_IN_PU(ucTLun));
    ASSERT(NF_SUCCESS != ucErrCode);
400a5c80:	ffff06        	j	400a5c80 <L3_ErrHDetectErrCode..FH_1482204275+0x44>

400a5c83 <L3_ErrHDetectErrCode..FH_1482204275+0x47>:
	...

400a5c84 <L3_ErrHDetectErrCode..FH_1482204275+0x48>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:374
        }
    }

    ptCtrlEntry->ptErrHEntry->bsErrCode = ucErrCode;

    return;
400a5c84:	21c8      	l32i.n	a12, a1, 8
400a5c86:	31d8      	l32i.n	a13, a1, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:372
            DBG_Printf("TLun%d RetryMeetsEmptyPage.0x%x\n", ucTLun, (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    ptCtrlEntry->ptErrHEntry->bsErrCode = ucErrCode;
400a5c88:	231074        	insbits	a7, a0, 1, 7
400a5c8b:	0279      	s32i.n	a7, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:374

    return;
400a5c8d:	1108      	l32i.n	a0, a1, 4
400a5c8f:	10c112        	addi	a1, a1, 16
400a5c92:	f00d      	ret.n

400a5c94 <L3_ErrHDetectErrCode..FH_1482204275+0x58>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:367
    if (TRUE == ptCtrlEntry->ptErrHEntry->tUeccHCtrl.tRetry.bsEnable)
    {
        if (TRUE == L3_ErrHDetectEmptyPage(ptCtrlEntry))
        {
            ucErrCode  = NF_ERR_TYPE_UECC;
            DBG_Printf("TLun%d RetryMeetsEmptyPage.0x%x\n", ucTLun, (U32)ptCtrlEntry);
400a5c94:	f36921        	l32r	a2, 400a2a38 <_mcu2dram_text_start+0x238>
400a5c97:	0d3d      	mov.n	a3, a13
400a5c99:	0c4d      	mov.n	a4, a12
400a5c9b:	f2e701        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a5c9e:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a5ca1:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:89
400a5ca4:	f32221        	l32r	a2, 400a292c <_mcu2dram_text_start+0x12c>
400a5ca7:	f2e401        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a5caa:	0000c0        	callx0	a0
400a5cad:	ffff06        	j	400a5cad <L3_ErrHDetectErrCode..FH_1482204275+0x71>

400a5cb0 <L3_ErrHProcess..OI_1482204275>:
L3_ErrHProcess():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1727
Usage      : 
History    : 
    1. 2016.7.25 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHProcess(U8 ucTLun, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a5cb0:	f0c112        	addi	a1, a1, -16
400a5cb3:	21c9      	s32i.n	a12, a1, 8
400a5cb5:	1109      	s32i.n	a0, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1728
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
400a5cb7:	9308      	l32i.n	a0, a3, 36
400a5cb9:	0109      	s32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1730
       
    if (TRUE == ptErrHEntry->bsErrHold)
400a5cbb:	0008      	l32i.n	a0, a0, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1727
Usage      : 
History    : 
    1. 2016.7.25 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_ErrHProcess(U8 ucTLun, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a5cbd:	03cd      	mov.n	a12, a3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1730
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry = ptCtrlEntry->ptErrHEntry;
       
    if (TRUE == ptErrHEntry->bsErrHold)
400a5cbf:	066097        	bbci	a0, 9, 400a5cc9 <L3_ErrHProcess..OI_1482204275+0x19>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1732
    {
        L3_ErrHRstCmdQ(ucTLun);
400a5cc2:	ffe105        	call0	400a5ad4 <L3_ErrHRstCmdQ..KH_1482204275>
400a5cc5:	0108      	l32i.n	a0, a1, 0
400a5cc7:	0008      	l32i.n	a0, a0, 0

400a5cc9 <L3_ErrHProcess..OI_1482204275+0x19>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1735
    }

    switch (ptErrHEntry->bsErrCode)
400a5cc9:	640100        	extui	a0, a0, 1, 7
400a5ccc:	551026        	beqi	a0, 1, 400a5d25 <L3_ErrHProcess..OI_1482204275+0x75>
400a5ccf:	0250e6        	bgei	a0, 5, 400a5cd5 <L3_ErrHProcess..OI_1482204275+0x25>
400a5cd2:	3f20e6        	bgei	a0, 2, 400a5d15 <L3_ErrHProcess..OI_1482204275+0x65>
400a5cd5:	5b5026        	beqi	a0, 5, 400a5d34 <L3_ErrHProcess..OI_1482204275+0x84>
400a5cd8:	666026        	beqi	a0, 6, 400a5d42 <L3_ErrHProcess..OI_1482204275+0x92>
400a5cdb:	717026        	beqi	a0, 7, 400a5d50 <L3_ErrHProcess..OI_1482204275+0xa0>
400a5cde:	f8c022        	addi	a2, a0, -8
400a5ce1:	079216        	beqz	a2, 400a5d5e <L3_ErrHProcess..OI_1482204275+0xae>
400a5ce4:	930c      	movi.n	a3, 9
400a5ce6:	1b1037        	beq	a0, a3, 400a5d05 <L3_ErrHProcess..OI_1482204275+0x55>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1776
            L3_ErrHNoDev(ptCtrlEntry);
            break;
        }
        default:
        {
            DBG_Printf("ErrCode Error. 0x%x\n", (U32)ptCtrlEntry);
400a5ce9:	f35521        	l32r	a2, 400a2a40 <_mcu2dram_text_start+0x240>
400a5cec:	0c3d      	mov.n	a3, a12
400a5cee:	f2d201        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a5cf1:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a5cf4:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:89
400a5cf7:	f30d21        	l32r	a2, 400a292c <_mcu2dram_text_start+0x12c>
400a5cfa:	f2cf01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a5cfd:	0000c0        	callx0	a0
400a5d00:	ffff06        	j	400a5d00 <L3_ErrHProcess..OI_1482204275+0x50>

400a5d03 <L3_ErrHProcess..OI_1482204275+0x53>:
	...

400a5d05 <L3_ErrHProcess..OI_1482204275+0x55>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1739

    switch (ptErrHEntry->bsErrCode)
    {
        case NF_ERR_TYPE_RECC:
        {
            L3_ErrHReadRECC(ptCtrlEntry);
400a5d05:	0c2d      	mov.n	a2, a12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1781
            DBG_Printf("ErrCode Error. 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a5d07:	21c8      	l32i.n	a12, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1739

    switch (ptErrHEntry->bsErrCode)
    {
        case NF_ERR_TYPE_RECC:
        {
            L3_ErrHReadRECC(ptCtrlEntry);
400a5d09:	ffca45        	call0	400a59b0 <L3_ErrHReadRECC..HI_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1781
            DBG_Printf("ErrCode Error. 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a5d0c:	1108      	l32i.n	a0, a1, 4
400a5d0e:	10c112        	addi	a1, a1, 16
400a5d11:	f00d      	ret.n

400a5d13 <L3_ErrHProcess..OI_1482204275+0x63>:
	...

400a5d15 <L3_ErrHProcess..OI_1482204275+0x65>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1761
        }
        case NF_ERR_TYPE_PRG:
        case NF_ERR_TYPE_PREPRG:
        case NF_ERR_TYPE_BOTHPRG:
        {
            L3_ErrHProgram(ptCtrlEntry);
400a5d15:	0c2d      	mov.n	a2, a12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1781
            DBG_Printf("ErrCode Error. 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a5d17:	21c8      	l32i.n	a12, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1761
        }
        case NF_ERR_TYPE_PRG:
        case NF_ERR_TYPE_PREPRG:
        case NF_ERR_TYPE_BOTHPRG:
        {
            L3_ErrHProgram(ptCtrlEntry);
400a5d19:	ff8a45        	call0	400a55c0 <L3_ErrHProgram..LI_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1781
            DBG_Printf("ErrCode Error. 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a5d1c:	1108      	l32i.n	a0, a1, 4
400a5d1e:	10c112        	addi	a1, a1, 16
400a5d21:	f00d      	ret.n

400a5d23 <L3_ErrHProcess..OI_1482204275+0x73>:
	...

400a5d25 <L3_ErrHProcess..OI_1482204275+0x75>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1771
            L3_ErrHErase(ptCtrlEntry);
            break;
        }
        case NF_ERR_TYPE_NODEV:
        {
            L3_ErrHNoDev(ptCtrlEntry);
400a5d25:	0c2d      	mov.n	a2, a12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1781
            DBG_Printf("ErrCode Error. 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a5d27:	21c8      	l32i.n	a12, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1771
            L3_ErrHErase(ptCtrlEntry);
            break;
        }
        case NF_ERR_TYPE_NODEV:
        {
            L3_ErrHNoDev(ptCtrlEntry);
400a5d29:	ff4b85        	call0	400a51e4 <L3_ErrHNoDev..NI_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1781
            DBG_Printf("ErrCode Error. 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a5d2c:	1108      	l32i.n	a0, a1, 4
400a5d2e:	10c112        	addi	a1, a1, 16
400a5d31:	f00d      	ret.n

400a5d33 <L3_ErrHProcess..OI_1482204275+0x83>:
	...

400a5d34 <L3_ErrHProcess..OI_1482204275+0x84>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1766
            L3_ErrHProgram(ptCtrlEntry);
            break;
        }
        case NF_ERR_TYPE_ERS:
        {
            L3_ErrHErase(ptCtrlEntry);
400a5d34:	0c2d      	mov.n	a2, a12
400a5d36:	ff4c85        	call0	400a5200 <L3_ErrHErase..MI_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1781
            DBG_Printf("ErrCode Error. 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a5d39:	21c8      	l32i.n	a12, a1, 8
400a5d3b:	1108      	l32i.n	a0, a1, 4
400a5d3d:	10c112        	addi	a1, a1, 16
400a5d40:	f00d      	ret.n

400a5d42 <L3_ErrHProcess..OI_1482204275+0x92>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1744
            L3_ErrHReadRECC(ptCtrlEntry);
            break;
        }
        case NF_ERR_TYPE_UECC:
        {
            L3_ErrHReadUECC(ptCtrlEntry);
400a5d42:	0c2d      	mov.n	a2, a12
400a5d44:	ffaf05        	call0	400a5838 <L3_ErrHReadUECC..II_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1781
            DBG_Printf("ErrCode Error. 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a5d47:	21c8      	l32i.n	a12, a1, 8
400a5d49:	1108      	l32i.n	a0, a1, 4
400a5d4b:	10c112        	addi	a1, a1, 16
400a5d4e:	f00d      	ret.n

400a5d50 <L3_ErrHProcess..OI_1482204275+0xa0>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1754
            L3_ErrHReadDCRC(ptCtrlEntry);
            break;
        }
        case NF_ERR_TYPE_LBA:
        {
            L3_ErrHReadLBA(ptCtrlEntry);
400a5d50:	0c2d      	mov.n	a2, a12
400a5d52:	ffaac5        	call0	400a5800 <L3_ErrHReadLBA..KI_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1781
            DBG_Printf("ErrCode Error. 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a5d55:	21c8      	l32i.n	a12, a1, 8
400a5d57:	1108      	l32i.n	a0, a1, 4
400a5d59:	10c112        	addi	a1, a1, 16
400a5d5c:	f00d      	ret.n

400a5d5e <L3_ErrHProcess..OI_1482204275+0xae>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1749
            L3_ErrHReadUECC(ptCtrlEntry);
            break;
        }
        case NF_ERR_TYPE_DCRC:
        {
            L3_ErrHReadDCRC(ptCtrlEntry);
400a5d5e:	0c2d      	mov.n	a2, a12
400a5d60:	ffab85        	call0	400a581c <L3_ErrHReadDCRC..JI_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1781
            DBG_Printf("ErrCode Error. 0x%x\n", (U32)ptCtrlEntry);
            DBG_Getch();
        }
    }

    return;
400a5d63:	21c8      	l32i.n	a12, a1, 8
400a5d65:	1108      	l32i.n	a0, a1, 4
400a5d67:	10c112        	addi	a1, a1, 16
400a5d6a:	f00d      	ret.n

400a5d6c <L3_ErrHIsPreDone..HH_1482204275>:
L3_ErrHIsPreDone():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:459
    BOOL bNfcErr, bNfcEmpty, bDone = TRUE;
    U8 ucLunInPU, ucIndex, ucTBrthLun;

    for (ucLunInPU = 0; ucLunInPU < NFC_LUN_PER_PU; ucLunInPU++) 
    {        
        L3_SchUpdateStsBmp(ucLunInPU, STS_BMP_NFC_ERROR);        
400a5d6c:	020c      	movi.n	a2, 0
400a5d6e:	08a032        	movi	a3, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:453
Usage      : 
History    : 
    1. 2016.7.25 JasonGuo create function
==============================================================================*/
LOCAL BOOL MCU2_DRAM_TEXT L3_ErrHIsPreDone(U8 ucTLun, FCMD_INTR_CTRL_ENTRY *ptCtrlEntry)
{
400a5d71:	f0c112        	addi	a1, a1, -16
400a5d74:	0109      	s32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:459
    BOOL bNfcErr, bNfcEmpty, bDone = TRUE;
    U8 ucLunInPU, ucIndex, ucTBrthLun;

    for (ucLunInPU = 0; ucLunInPU < NFC_LUN_PER_PU; ucLunInPU++) 
    {        
        L3_SchUpdateStsBmp(ucLunInPU, STS_BMP_NFC_ERROR);        
400a5d76:	f33301        	l32r	a0, 400a2a44 <_mcu2dram_text_start+0x244>
400a5d79:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:460
        L3_SchUpdateStsBmp(ucLunInPU, STS_BMP_NFC_EMPTY);    
400a5d7c:	020c      	movi.n	a2, 0
400a5d7e:	730c      	movi.n	a3, 7
400a5d80:	f33101        	l32r	a0, 400a2a44 <_mcu2dram_text_start+0x244>
400a5d83:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:475
            bDone = FALSE;
            break;
        }
    }

    return bDone;
400a5d86:	120c      	movi.n	a2, 1
400a5d88:	0108      	l32i.n	a0, a1, 0
400a5d8a:	10c112        	addi	a1, a1, 16
400a5d8d:	f00d      	ret.n

400a5d8f <L3_ErrHIsPreDone..HH_1482204275+0x23>:
	...

400a5d90 <L3_ErrHPretreat..GH_1482204275>:
L3_ErrHPretreat():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:394
    U8 ucCurEptr, ucCurPptr;
    NFCQ_ENTRY *ptNfcqEntry;
    FCMD_INTR_CTRL_ENTRY *ptCtrlEntry;
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry;
    
    if (TRUE == HAL_NfcGetErrHold(L3_GET_PU(ucTLun), L3_GET_LUN_IN_PU(ucTLun)))
400a5d90:	030c      	movi.n	a3, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:388
Usage      : 
History    : 
    1. 2016.7.22 JasonGuo create function
==============================================================================*/
LOCAL FCMD_INTR_CTRL_ENTRY MCU2_DRAM_TEXT *L3_ErrHPretreat(U8 ucTLun)
{
400a5d92:	e0c112        	addi	a1, a1, -32
400a5d95:	31c9      	s32i.n	a12, a1, 12
400a5d97:	2109      	s32i.n	a0, a1, 8
400a5d99:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:394
    U8 ucCurEptr, ucCurPptr;
    NFCQ_ENTRY *ptNfcqEntry;
    FCMD_INTR_CTRL_ENTRY *ptCtrlEntry;
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry;
    
    if (TRUE == HAL_NfcGetErrHold(L3_GET_PU(ucTLun), L3_GET_LUN_IN_PU(ucTLun)))
400a5d9b:	f32b01        	l32r	a0, 400a2a48 <_mcu2dram_text_start+0x248>
400a5d9e:	0000c0        	callx0	a0
400a5da1:	351226        	beqi	a2, 1, 400a5dda <L3_ErrHPretreat..GH_1482204275+0x4a>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:430
        
        L3_ErrHDetectErrCode(ucTLun, ptCtrlEntry);
    }
    else
    {
        ucCurEptr = L3_FCMDQGetIntrEptr(ucTLun, FALSE);
400a5da4:	0c2d      	mov.n	a2, a12
400a5da6:	030c      	movi.n	a3, 0
400a5da8:	f2dc01        	l32r	a0, 400a2918 <_mcu2dram_text_start+0x118>
400a5dab:	0000c0        	callx0	a0
400a5dae:	023d      	mov.n	a3, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:431
        ptCtrlEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucCurEptr, FALSE);
400a5db0:	040c      	movi.n	a4, 0
400a5db2:	0c2d      	mov.n	a2, a12
400a5db4:	f2da01        	l32r	a0, 400a291c <_mcu2dram_text_start+0x11c>
400a5db7:	0000c0        	callx0	a0
400a5dba:	020d      	mov.n	a0, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:433

        ASSERT(NULL != ptCtrlEntry->ptErrHEntry);
400a5dbc:	9228      	l32i.n	a2, a2, 36
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:434
        ptCtrlEntry->ptErrHEntry->bsErrHold = FALSE;
400a5dbe:	ffad42        	movi	a4, 0xfffffdff
400a5dc1:	003256        	bnez	a2, 400a5dc8 <L3_ErrHPretreat..GH_1482204275+0x38>

400a5dc4 <L3_ErrHPretreat..GH_1482204275+0x34>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:433
    else
    {
        ucCurEptr = L3_FCMDQGetIntrEptr(ucTLun, FALSE);
        ptCtrlEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucCurEptr, FALSE);

        ASSERT(NULL != ptCtrlEntry->ptErrHEntry);
400a5dc4:	ffff06        	j	400a5dc4 <L3_ErrHPretreat..GH_1482204275+0x34>

400a5dc7 <L3_ErrHPretreat..GH_1482204275+0x37>:
	...

400a5dc8 <L3_ErrHPretreat..GH_1482204275+0x38>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:434
        ptCtrlEntry->ptErrHEntry->bsErrHold = FALSE;
400a5dc8:	0238      	l32i.n	a3, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:437
    }

    return ptCtrlEntry;
400a5dca:	31c8      	l32i.n	a12, a1, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:434
    {
        ucCurEptr = L3_FCMDQGetIntrEptr(ucTLun, FALSE);
        ptCtrlEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucCurEptr, FALSE);

        ASSERT(NULL != ptCtrlEntry->ptErrHEntry);
        ptCtrlEntry->ptErrHEntry->bsErrHold = FALSE;
400a5dcc:	103340        	and	a3, a3, a4
400a5dcf:	0239      	s32i.n	a3, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:437
    }

    return ptCtrlEntry;
400a5dd1:	002d      	mov.n	a2, a0
400a5dd3:	2108      	l32i.n	a0, a1, 8
400a5dd5:	20c112        	addi	a1, a1, 32
400a5dd8:	f00d      	ret.n

400a5dda <L3_ErrHPretreat..GH_1482204275+0x4a>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:394
    U8 ucCurEptr, ucCurPptr;
    NFCQ_ENTRY *ptNfcqEntry;
    FCMD_INTR_CTRL_ENTRY *ptCtrlEntry;
    FCMD_INTR_ERRH_ENTRY *ptErrHEntry;
    
    if (TRUE == HAL_NfcGetErrHold(L3_GET_PU(ucTLun), L3_GET_LUN_IN_PU(ucTLun)))
400a5dda:	0c2d      	mov.n	a2, a12
400a5ddc:	f31c01        	l32r	a0, 400a2a4c <_mcu2dram_text_start+0x24c>
400a5ddf:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:399
    {
        // pending for pre-page program fail getting in hal nfc driver. ***
        ptNfcqEntry = (NFCQ_ENTRY *)HAL_NfcGetNfcqEntryAddr_RP(L3_GET_PU(ucTLun), L3_GET_LUN_IN_PU(ucTLun));
        ucCurEptr = ptNfcqEntry->atRowAddr[0].bsFCmdPtr;
        L3_FCMDQSetIntrEptr(ucTLun, ucCurEptr, FALSE);
400a5de2:	040c      	movi.n	a4, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:398
    
    if (TRUE == HAL_NfcGetErrHold(L3_GET_PU(ucTLun), L3_GET_LUN_IN_PU(ucTLun)))
    {
        // pending for pre-page program fail getting in hal nfc driver. ***
        ptNfcqEntry = (NFCQ_ENTRY *)HAL_NfcGetNfcqEntryAddr_RP(L3_GET_PU(ucTLun), L3_GET_LUN_IN_PU(ucTLun));
        ucCurEptr = ptNfcqEntry->atRowAddr[0].bsFCmdPtr;
400a5de4:	8238      	l32i.n	a3, a2, 32
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:399
        L3_FCMDQSetIntrEptr(ucTLun, ucCurEptr, FALSE);
400a5de6:	202cc0        	or	a2, a12, a12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:398
    
    if (TRUE == HAL_NfcGetErrHold(L3_GET_PU(ucTLun), L3_GET_LUN_IN_PU(ucTLun)))
    {
        // pending for pre-page program fail getting in hal nfc driver. ***
        ptNfcqEntry = (NFCQ_ENTRY *)HAL_NfcGetNfcqEntryAddr_RP(L3_GET_PU(ucTLun), L3_GET_LUN_IN_PU(ucTLun));
        ucCurEptr = ptNfcqEntry->atRowAddr[0].bsFCmdPtr;
400a5de9:	153e30        	extui	a3, a3, 30, 2
400a5dec:	006132        	s32i	a3, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:399
        L3_FCMDQSetIntrEptr(ucTLun, ucCurEptr, FALSE);
400a5def:	f2c101        	l32r	a0, 400a28f4 <_mcu2dram_text_start+0xf4>
400a5df2:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:403

        // pending fcmd 
        ucCurPptr = (ucCurEptr + 1) % NFCQ_DEPTH;
        ucCurPptr = (ucCurPptr == L3_FCMDQGetIntrWptr(ucTLun, FALSE)) ? INVALID_DPTR : ucCurPptr;
400a5df5:	202cc0        	or	a2, a12, a12
400a5df8:	00a032        	movi	a3, 0
400a5dfb:	f2f001        	l32r	a0, 400a29bc <_mcu2dram_text_start+0x1bc>
400a5dfe:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:404
        L3_FCMDQSetIntrPptr(ucTLun, ucCurPptr, FALSE);
400a5e01:	ffa032        	movi	a3, 255
400a5e04:	0148      	l32i.n	a4, a1, 0
400a5e06:	450c      	movi.n	a5, 4
400a5e08:	441b      	addi.n	a4, a4, 1
400a5e0a:	f24450        	rems	a4, a4, a5
400a5e0d:	744040        	extui	a4, a4, 0, 8
400a5e10:	c05240        	sub	a5, a2, a4
400a5e13:	933450        	movnez	a3, a4, a5
400a5e16:	0c2d      	mov.n	a2, a12
400a5e18:	040c      	movi.n	a4, 0
400a5e1a:	f2ed01        	l32r	a0, 400a29d0 <_mcu2dram_text_start+0x1d0>
400a5e1d:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:417
            }
        }
#endif

        // allcate a errh-entry for the current lun.
        ptCtrlEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucCurEptr, FALSE);
400a5e20:	0138      	l32i.n	a3, a1, 0
400a5e22:	202cc0        	or	a2, a12, a12
400a5e25:	00a042        	movi	a4, 0
400a5e28:	f2bd01        	l32r	a0, 400a291c <_mcu2dram_text_start+0x11c>
400a5e2b:	0000c0        	callx0	a0
400a5e2e:	020d      	mov.n	a0, a2
400a5e30:	4129      	s32i.n	a2, a1, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:418
        if (NULL == ptCtrlEntry->ptErrHEntry)
400a5e32:	9228      	l32i.n	a2, a2, 36
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:417
            }
        }
#endif

        // allcate a errh-entry for the current lun.
        ptCtrlEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucCurEptr, FALSE);
400a5e34:	1109      	s32i.n	a0, a1, 4
400a5e36:	01b216        	beqz	a2, 400a5e55 <L3_ErrHPretreat..GH_1482204275+0xc5>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:424
        {   
            ptErrHEntry = L3_FCMDQAllocIntrErrHEntry(ucTLun, FALSE);
            ptCtrlEntry->ptErrHEntry = ptErrHEntry;
        }
        
        ptCtrlEntry->ptErrHEntry->bsErrHold = TRUE;
400a5e39:	00a272        	movi	a7, 0x200
400a5e3c:	0268      	l32i.n	a6, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:426
        
        L3_ErrHDetectErrCode(ucTLun, ptCtrlEntry);
400a5e3e:	003d      	mov.n	a3, a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:424
        {   
            ptErrHEntry = L3_FCMDQAllocIntrErrHEntry(ucTLun, FALSE);
            ptCtrlEntry->ptErrHEntry = ptErrHEntry;
        }
        
        ptCtrlEntry->ptErrHEntry->bsErrHold = TRUE;
400a5e40:	206670        	or	a6, a6, a7
400a5e43:	0269      	s32i.n	a6, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:426
        
        L3_ErrHDetectErrCode(ucTLun, ptCtrlEntry);
400a5e45:	0c2d      	mov.n	a2, a12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:437

        ASSERT(NULL != ptCtrlEntry->ptErrHEntry);
        ptCtrlEntry->ptErrHEntry->bsErrHold = FALSE;
    }

    return ptCtrlEntry;
400a5e47:	31c8      	l32i.n	a12, a1, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:426
            ptCtrlEntry->ptErrHEntry = ptErrHEntry;
        }
        
        ptCtrlEntry->ptErrHEntry->bsErrHold = TRUE;
        
        L3_ErrHDetectErrCode(ucTLun, ptCtrlEntry);
400a5e49:	ffdf05        	call0	400a5c3c <L3_ErrHDetectErrCode..FH_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:437

        ASSERT(NULL != ptCtrlEntry->ptErrHEntry);
        ptCtrlEntry->ptErrHEntry->bsErrHold = FALSE;
    }

    return ptCtrlEntry;
400a5e4c:	1128      	l32i.n	a2, a1, 4
400a5e4e:	2108      	l32i.n	a0, a1, 8
400a5e50:	20c112        	addi	a1, a1, 32
400a5e53:	f00d      	ret.n

400a5e55 <L3_ErrHPretreat..GH_1482204275+0xc5>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:418
        }
#endif

        // allcate a errh-entry for the current lun.
        ptCtrlEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucCurEptr, FALSE);
        if (NULL == ptCtrlEntry->ptErrHEntry)
400a5e55:	0c2d      	mov.n	a2, a12
400a5e57:	f2fe01        	l32r	a0, 400a2a50 <_mcu2dram_text_start+0x250>
400a5e5a:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:421
        {   
            ptErrHEntry = L3_FCMDQAllocIntrErrHEntry(ucTLun, FALSE);
            ptCtrlEntry->ptErrHEntry = ptErrHEntry;
400a5e5d:	4108      	l32i.n	a0, a1, 16
400a5e5f:	9029      	s32i.n	a2, a0, 36
400a5e61:	fff506        	j	400a5e39 <L3_ErrHPretreat..GH_1482204275+0xa9>

400a5e64 <L3_ExtHHandling>:
L3_ExtHHandling():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1059
Usage      : 
History    : 
    1. 2016.7.26 JasonGuo create function
==============================================================================*/
void MCU2_DRAM_TEXT L3_ExtHHandling(U8 ucTLun)
{
400a5e64:	e0c112        	addi	a1, a1, -32
400a5e67:	71c9      	s32i.n	a12, a1, 28
400a5e69:	6109      	s32i.n	a0, a1, 24
400a5e6b:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1060
    if (TRUE == L3_ExtHPrcErrFCmd(ucTLun))
400a5e6d:	fe3085        	call0	400a4178 <L3_ExtHPrcErrFCmd..HJ_1482204275>
400a5e70:	0a1226        	beqi	a2, 1, 400a5e7e <L3_ExtHHandling+0x1a>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1065
    {
        L3_ExtHPrcPendFCmd(ucTLun);
    }
    
    return;
400a5e73:	71c8      	l32i.n	a12, a1, 28
400a5e75:	6108      	l32i.n	a0, a1, 24
400a5e77:	20c112        	addi	a1, a1, 32
400a5e7a:	f00d      	ret.n

400a5e7c <L3_ExtHHandling+0x18>:
	...

400a5e7e <L3_ExtHHandling+0x1a>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:905
LOCAL void MCU2_DRAM_TEXT L3_ExtHPrcPendFCmd(U8 ucTLun)
{
    U8 ucCurPptr, ucCurWptr, ucCurCtrlPtr;
    FCMD_INTR_CTRL_ENTRY *ptCtrlEntry, *ptCtrlBakEntry;

    ASSERT(INVALID_DPTR == L3_FCMDQGetIntrEptr(ucTLun, TRUE));
400a5e7e:	0c2d      	mov.n	a2, a12
400a5e80:	01a032        	movi	a3, 1
400a5e83:	f2a501        	l32r	a0, 400a2918 <_mcu2dram_text_start+0x118>
400a5e86:	0000c0        	callx0	a0
400a5e89:	ffa002        	movi	a0, 255
400a5e8c:	021207        	beq	a2, a0, 400a5e92 <L3_ExtHHandling+0x2e>
400a5e8f:	002886        	j	400a5f35 <L3_ExtHHandling+0xd1>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:907
    
    ucCurWptr = L3_FCMDQGetIntrWptr(ucTLun, TRUE);
400a5e92:	0c2d      	mov.n	a2, a12
400a5e94:	01a032        	movi	a3, 1
400a5e97:	f2c901        	l32r	a0, 400a29bc <_mcu2dram_text_start+0x1bc>
400a5e9a:	0000c0        	callx0	a0
400a5e9d:	3129      	s32i.n	a2, a1, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:908
    ucCurPptr = L3_FCMDQGetIntrPptr(ucTLun, TRUE);
400a5e9f:	130c      	movi.n	a3, 1
400a5ea1:	0c2d      	mov.n	a2, a12
400a5ea3:	f2ca01        	l32r	a0, 400a29cc <_mcu2dram_text_start+0x1cc>
400a5ea6:	0000c0        	callx0	a0
400a5ea9:	020d      	mov.n	a0, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:910
    
    while ((INVALID_DPTR != ucCurPptr) && (ucCurPptr != ucCurWptr))
400a5eab:	ffa022        	movi	a2, 255
400a5eae:	631027        	beq	a0, a2, 400a5f15 <L3_ExtHHandling+0xb1>
400a5eb1:	3138      	l32i.n	a3, a1, 12
400a5eb3:	5e1037        	beq	a0, a3, 400a5f15 <L3_ExtHHandling+0xb1>
400a5eb6:	5139      	s32i.n	a3, a1, 20
400a5eb8:	4109      	s32i.n	a0, a1, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:912
    {
        ptCtrlBakEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucCurPptr, TRUE);
400a5eba:	0c2d      	mov.n	a2, a12
400a5ebc:	4138      	l32i.n	a3, a1, 16
400a5ebe:	140c      	movi.n	a4, 1
400a5ec0:	f29701        	l32r	a0, 400a291c <_mcu2dram_text_start+0x11c>
400a5ec3:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:913
        ASSERT(NULL == ptCtrlBakEntry->ptErrHEntry);
400a5ec6:	9248      	l32i.n	a4, a2, 36
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:912
    ucCurWptr = L3_FCMDQGetIntrWptr(ucTLun, TRUE);
    ucCurPptr = L3_FCMDQGetIntrPptr(ucTLun, TRUE);
    
    while ((INVALID_DPTR != ucCurPptr) && (ucCurPptr != ucCurWptr))
    {
        ptCtrlBakEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucCurPptr, TRUE);
400a5ec8:	2129      	s32i.n	a2, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:913
        ASSERT(NULL == ptCtrlBakEntry->ptErrHEntry);
400a5eca:	06a456        	bnez	a4, 400a5f38 <L3_ExtHHandling+0xd4>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:915

        ptCtrlEntry = L3_FCMDQAllocIntrEntry(ucTLun);
400a5ecd:	202cc0        	or	a2, a12, a12
400a5ed0:	f26901        	l32r	a0, 400a2874 <_mcu2dram_text_start+0x74>
400a5ed3:	0000c0        	callx0	a0
400a5ed6:	0129      	s32i.n	a2, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:918
        ucCurCtrlPtr = ptCtrlEntry->bsCtrlPtr;

        COM_MemCpy((U32*)ptCtrlEntry, (U32*)ptCtrlBakEntry, sizeof(FCMD_INTR_CTRL_ENTRY) / sizeof(U32));
400a5ed8:	2138      	l32i.n	a3, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:916
    {
        ptCtrlBakEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucCurPptr, TRUE);
        ASSERT(NULL == ptCtrlBakEntry->ptErrHEntry);

        ptCtrlEntry = L3_FCMDQAllocIntrEntry(ucTLun);
        ucCurCtrlPtr = ptCtrlEntry->bsCtrlPtr;
400a5eda:	1258      	l32i.n	a5, a2, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:918

        COM_MemCpy((U32*)ptCtrlEntry, (U32*)ptCtrlBakEntry, sizeof(FCMD_INTR_CTRL_ENTRY) / sizeof(U32));
400a5edc:	a40c      	movi.n	a4, 10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:916
    {
        ptCtrlBakEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucCurPptr, TRUE);
        ASSERT(NULL == ptCtrlBakEntry->ptErrHEntry);

        ptCtrlEntry = L3_FCMDQAllocIntrEntry(ucTLun);
        ucCurCtrlPtr = ptCtrlEntry->bsCtrlPtr;
400a5ede:	155c50        	extui	a5, a5, 28, 2
400a5ee1:	016152        	s32i	a5, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:918

        COM_MemCpy((U32*)ptCtrlEntry, (U32*)ptCtrlBakEntry, sizeof(FCMD_INTR_CTRL_ENTRY) / sizeof(U32));
400a5ee4:	f26501        	l32r	a0, 400a2878 <_mcu2dram_text_start+0x78>
400a5ee7:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:919
        ptCtrlEntry->bsCtrlPtr = ucCurCtrlPtr;
400a5eea:	0128      	l32i.n	a2, a1, 0
400a5eec:	1178      	l32i.n	a7, a1, 4
400a5eee:	1268      	l32i.n	a6, a2, 4
400a5ef0:	f1c764        	insbits	a6, a7, 28, 29
400a5ef3:	016262        	s32i	a6, a2, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:924

        #ifdef SIM
        L3_DbgFCmdCntDec(ptCtrlEntry);
        #endif
        L3_IFSendFCmd(ptCtrlEntry);
400a5ef6:	f2d701        	l32r	a0, 400a2a54 <_mcu2dram_text_start+0x254>
400a5ef9:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:926

        ucCurPptr = (ucCurPptr + 1) % NFCQ_DEPTH;
400a5efc:	ffa082        	movi	a8, 255
400a5eff:	4108      	l32i.n	a0, a1, 16
400a5f01:	4a0c      	movi.n	a10, 4
400a5f03:	901b      	addi.n	a9, a0, 1
400a5f05:	f299a0        	rems	a9, a9, a10
400a5f08:	740090        	extui	a0, a9, 0, 8
400a5f0b:	061087        	beq	a0, a8, 400a5f15 <L3_ExtHHandling+0xb1>
400a5f0e:	51b8      	l32i.n	a11, a1, 20
400a5f10:	4109      	s32i.n	a0, a1, 16
400a5f12:	a490b7        	bne	a0, a11, 400a5eba <L3_ExtHHandling+0x56>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:929
    }
    
    L3_FCMDQSetIntrPptr(ucTLun, INVALID_DPTR, TRUE);
400a5f15:	0c2d      	mov.n	a2, a12
400a5f17:	ffa032        	movi	a3, 255
400a5f1a:	140c      	movi.n	a4, 1
400a5f1c:	f2ad01        	l32r	a0, 400a29d0 <_mcu2dram_text_start+0x1d0>
400a5f1f:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:930
    L3_SchClrStsBit(ucTLun, STS_BMP_EXTH);
400a5f22:	0c2d      	mov.n	a2, a12
400a5f24:	430c      	movi.n	a3, 4
400a5f26:	f2cc01        	l32r	a0, 400a2a58 <_mcu2dram_text_start+0x258>
400a5f29:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1065
    if (TRUE == L3_ExtHPrcErrFCmd(ucTLun))
    {
        L3_ExtHPrcPendFCmd(ucTLun);
    }
    
    return;
400a5f2c:	71c8      	l32i.n	a12, a1, 28
400a5f2e:	6108      	l32i.n	a0, a1, 24
400a5f30:	20c112        	addi	a1, a1, 32
400a5f33:	f00d      	ret.n

400a5f35 <L3_ExtHHandling+0xd1>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:905
LOCAL void MCU2_DRAM_TEXT L3_ExtHPrcPendFCmd(U8 ucTLun)
{
    U8 ucCurPptr, ucCurWptr, ucCurCtrlPtr;
    FCMD_INTR_CTRL_ENTRY *ptCtrlEntry, *ptCtrlBakEntry;

    ASSERT(INVALID_DPTR == L3_FCMDQGetIntrEptr(ucTLun, TRUE));
400a5f35:	ffff06        	j	400a5f35 <L3_ExtHHandling+0xd1>

400a5f38 <L3_ExtHHandling+0xd4>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:913
    ucCurPptr = L3_FCMDQGetIntrPptr(ucTLun, TRUE);
    
    while ((INVALID_DPTR != ucCurPptr) && (ucCurPptr != ucCurWptr))
    {
        ptCtrlBakEntry = L3_FCMDQGetIntrCtrlEntry(ucTLun, ucCurPptr, TRUE);
        ASSERT(NULL == ptCtrlBakEntry->ptErrHEntry);
400a5f38:	ffff06        	j	400a5f38 <L3_ExtHHandling+0xd4>

400a5f3b <L3_ExtHHandling+0xd7>:
	...

400a5f3c <L3_ErrHHandling>:
L3_ErrHHandling():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1864
Usage      : 
History    : 
    1. 2016.7.22 JasonGuo create function
==============================================================================*/
void MCU2_DRAM_TEXT L3_ErrHHandling(U8 ucTLun)
{
400a5f3c:	f0c112        	addi	a1, a1, -16
400a5f3f:	21c9      	s32i.n	a12, a1, 8
400a5f41:	1109      	s32i.n	a0, a1, 4
400a5f43:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1867
    FCMD_INTR_CTRL_ENTRY *ptCtrlEntry;

    ptCtrlEntry = L3_ErrHPretreat(ucTLun);
400a5f45:	ffe485        	call0	400a5d90 <L3_ErrHPretreat..GH_1482204275>
400a5f48:	023d      	mov.n	a3, a2
400a5f4a:	0129      	s32i.n	a2, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1868
    if (TRUE == L3_ErrHIsPreDone(ucTLun, ptCtrlEntry))
400a5f4c:	0c2d      	mov.n	a2, a12
400a5f4e:	ffe1c5        	call0	400a5d6c <L3_ErrHIsPreDone..HH_1482204275>
400a5f51:	081226        	beqi	a2, 1, 400a5f5d <L3_ErrHHandling+0x21>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1873
    {
        L3_ErrHProcess(ucTLun, ptCtrlEntry);
    }

    return;
400a5f54:	21c8      	l32i.n	a12, a1, 8
400a5f56:	1108      	l32i.n	a0, a1, 4
400a5f58:	10c112        	addi	a1, a1, 16
400a5f5b:	f00d      	ret.n

400a5f5d <L3_ErrHHandling+0x21>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1870
    FCMD_INTR_CTRL_ENTRY *ptCtrlEntry;

    ptCtrlEntry = L3_ErrHPretreat(ucTLun);
    if (TRUE == L3_ErrHIsPreDone(ucTLun, ptCtrlEntry))
    {
        L3_ErrHProcess(ucTLun, ptCtrlEntry);
400a5f5d:	0c2d      	mov.n	a2, a12
400a5f5f:	0138      	l32i.n	a3, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1873
    }

    return;
400a5f61:	21c8      	l32i.n	a12, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1870
    FCMD_INTR_CTRL_ENTRY *ptCtrlEntry;

    ptCtrlEntry = L3_ErrHPretreat(ucTLun);
    if (TRUE == L3_ErrHIsPreDone(ucTLun, ptCtrlEntry))
    {
        L3_ErrHProcess(ucTLun, ptCtrlEntry);
400a5f63:	ffd4c5        	call0	400a5cb0 <L3_ErrHProcess..OI_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1873
    }

    return;
400a5f66:	1108      	l32i.n	a0, a1, 4
400a5f68:	10c112        	addi	a1, a1, 16
400a5f6b:	f00d      	ret.n

400a5f6d <L3_ErrHHandling+0x31>:
400a5f6d:	000000                                        ...

400a5f70 <HAL_FlashGetRetryParaTab>:
HAL_FlashGetRetryParaTab():
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:399
    20160415    abby   create
------------------------------------------------------------------------------*/
RETRY_TABLE MCU2_DRAM_TEXT HAL_FlashGetRetryParaTab(U32 ulIndex)                            
{
    RETRY_TABLE tRetryPara;
    tRetryPara = g_aRetryPara[ulIndex];
400a5f70:	f27c31        	l32r	a3, 400a2960 <_mcu2dram_text_start+0x160>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:397
    called when FW need get a new group of Vth para
History:
    20160415    abby   create
------------------------------------------------------------------------------*/
RETRY_TABLE MCU2_DRAM_TEXT HAL_FlashGetRetryParaTab(U32 ulIndex)                            
{
400a5f73:	f0c112        	addi	a1, a1, -16
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:399
    RETRY_TABLE tRetryPara;
    tRetryPara = g_aRetryPara[ulIndex];
400a5f76:	a02230        	addx4	a2, a2, a3
400a5f79:	4c2222        	l32i	a2, a2, 0x130
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:401
    
    return tRetryPara;
400a5f7c:	10c112        	addi	a1, a1, 16
400a5f7f:	f00d      	ret.n

400a5f81 <HAL_FlashGetRetryParaTab+0x11>:
400a5f81:	000000                                        ...

400a5f84 <HAL_FlashSelRetryPara>:
HAL_FlashSelRetryPara():
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:378
------------------------------------------------------------------------------*/
U32 MCU2_DRAM_TEXT HAL_FlashSelRetryPara(BOOL bTlcMode)                            
{
    U32 ulIndex = 0; //pending
    
    return ulIndex;
400a5f84:	020c      	movi.n	a2, 0
400a5f86:	f00d      	ret.n

400a5f88 <HAL_FlashRetryCheck>:
HAL_FlashRetryCheck():
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:349
History:
    20160415    abby   create
------------------------------------------------------------------------------*/
U32 MCU2_DRAM_TEXT HAL_FlashRetryCheck(U8 ucTime, BOOL bTlcMode)
{
    if (HAL_FLASH_READRETRY_CNT <= ucTime)
400a5f88:	04b2b6        	bltui	a2, 16, 400a5f90 <HAL_FlashRetryCheck+0x8>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:351
    {
        return NFC_STATUS_FAIL;
400a5f8b:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:355
    }
    else
    {
        return NFC_STATUS_SUCCESS;
400a5f8d:	f00d      	ret.n

400a5f8f <HAL_FlashRetryCheck+0x7>:
	...

400a5f90 <HAL_FlashRetryCheck+0x8>:
400a5f90:	120c      	movi.n	a2, 1
400a5f92:	f00d      	ret.n

400a5f94 <HAL_DecSramGetDecStsEntry>:
HAL_DecSramGetDecStsEntry():
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:145
    Called when need get DEC SRAM status entry 
History:
    20160310    abby    create
------------------------------------------------------------------------------*/
void MCU2_DRAM_TEXT HAL_DecSramGetDecStsEntry(FLASH_ADDR *pFlashAddr, DEC_SRAM_STATUS_ENTRY *pDecSramSts)
{
400a5f94:	e0c112        	addi	a1, a1, -32
400a5f97:	3109      	s32i.n	a0, a1, 12
400a5f99:	41c9      	s32i.n	a12, a1, 16
400a5f9b:	0139      	s32i.n	a3, a1, 0
400a5f9d:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:149
    U8 ucRp, ucPU, ucLun, ucWp;

    ucPU  = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
400a5f9f:	010c32        	l8ui	a3, a12, 1
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:148
------------------------------------------------------------------------------*/
void MCU2_DRAM_TEXT HAL_DecSramGetDecStsEntry(FLASH_ADDR *pFlashAddr, DEC_SRAM_STATUS_ENTRY *pDecSramSts)
{
    U8 ucRp, ucPU, ucLun, ucWp;

    ucPU  = pFlashAddr->ucPU;
400a5fa2:	000222        	l8ui	a2, a2, 0
400a5fa5:	016122        	s32i	a2, a1, 4
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:149
    ucLun = pFlashAddr->ucLun;
400a5fa8:	2139      	s32i.n	a3, a1, 8
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:150
    ucWp  = HAL_NfcGetWP(pFlashAddr->ucPU, ucLun);
400a5faa:	f2ac01        	l32r	a0, 400a2a5c <_mcu2dram_text_start+0x25c>
400a5fad:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:153
    ucRp  = (ucWp + NFCQ_DEPTH - 1) % NFCQ_DEPTH;

    *(volatile DEC_SRAM_STATUS_ENTRY *)pDecSramSts = *(volatile DEC_SRAM_STATUS_ENTRY *)(&g_pDecSramStsBase->aDecStsSram[ucPU][ucLun][ucRp][pFlashAddr->bsPln]);
400a5fb0:	2158      	l32i.n	a5, a1, 8
400a5fb2:	1148      	l32i.n	a4, a1, 4
400a5fb4:	470c      	movi.n	a7, 4
400a5fb6:	623b      	addi.n	a6, a2, 3
400a5fb8:	f22131        	l32r	a3, 400a283c <_mcu2dram_text_start+0x3c>
400a5fbb:	0128      	l32i.n	a2, a1, 0
400a5fbd:	222332        	l32i	a3, a3, 136
400a5fc0:	f26670        	rems	a6, a6, a7
400a5fc3:	445a      	add.n	a4, a4, a5
400a5fc5:	746060        	extui	a6, a6, 0, 8
400a5fc8:	0c58      	l32i.n	a5, a12, 0
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:155
    //DBG_Printf("pDecSramSts addr 0x%x *pDecSramSts 0x%x\n", pDecSramSts,*(U32*)pDecSramSts);
    return;
400a5fca:	41c8      	l32i.n	a12, a1, 16
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:153
    ucPU  = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
    ucWp  = HAL_NfcGetWP(pFlashAddr->ucPU, ucLun);
    ucRp  = (ucWp + NFCQ_DEPTH - 1) % NFCQ_DEPTH;

    *(volatile DEC_SRAM_STATUS_ENTRY *)pDecSramSts = *(volatile DEC_SRAM_STATUS_ENTRY *)(&g_pDecSramStsBase->aDecStsSram[ucPU][ucLun][ucRp][pFlashAddr->bsPln]);
400a5fcc:	b04460        	addx8	a4, a4, a6
400a5fcf:	355050        	extui	a5, a5, 16, 4
400a5fd2:	a04450        	addx4	a4, a4, a5
400a5fd5:	1144c0        	slli	a4, a4, 4
400a5fd8:	334a      	add.n	a3, a3, a4
400a5fda:	041c      	movi.n	a4, 16
400a5fdc:	f2a101        	l32r	a0, 400a2a60 <_mcu2dram_text_start+0x260>
400a5fdf:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:155
    //DBG_Printf("pDecSramSts addr 0x%x *pDecSramSts 0x%x\n", pDecSramSts,*(U32*)pDecSramSts);
    return;
400a5fe2:	3108      	l32i.n	a0, a1, 12
400a5fe4:	20c112        	addi	a1, a1, 32
400a5fe7:	f00d      	ret.n

400a5fe9 <HAL_DecSramGetDecStsEntry+0x55>:
400a5fe9:	000000                                        ...

400a5fec <HAL_NfcRedOnlyRead>:
HAL_NfcRedOnlyRead():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1515
    20140911    Gavin   modify to meet coding style
    20140918    Gavin   add header for this function
    20151106    abby    modify to meet VT3533, dynamic update RED to OTFB/DRAM
------------------------------------------------------------------------------*/
U32 MCU2_DRAM_TEXT HAL_NfcRedOnlyRead(FLASH_ADDR *pFlashAddr, NFC_READ_REQ_DES *pRdReq)
{
400a5fec:	d0c112        	addi	a1, a1, -48
400a5fef:	41c9      	s32i.n	a12, a1, 16
400a5ff1:	3109      	s32i.n	a0, a1, 12
400a5ff3:	71f9      	s32i.n	a15, a1, 28
400a5ff5:	51d9      	s32i.n	a13, a1, 20
400a5ff7:	61e9      	s32i.n	a14, a1, 24
400a5ff9:	03dd      	mov.n	a13, a3
400a5ffb:	02ed      	mov.n	a14, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1523
    NFCQ_ENTRY *pNFCQEntry;
    NFC_SCR_CONF eScrType = NORMAL_SCR;
    BOOL bIsRedOntf;

    ucPU  = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
400a5ffd:	0102f2        	l8ui	a15, a2, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1525
    ucPlnStart = pFlashAddr->bsPln;
    bIsRedOntf = pRdReq->bsRedOntf;
400a6000:	1308      	l32i.n	a0, a3, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1522
    U8  ucPageType = 0;
    NFCQ_ENTRY *pNFCQEntry;
    NFC_SCR_CONF eScrType = NORMAL_SCR;
    BOOL bIsRedOntf;

    ucPU  = pFlashAddr->ucPU;
400a6002:	0002c2        	l8ui	a12, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1525
    ucLun = pFlashAddr->ucLun;
    ucPlnStart = pFlashAddr->bsPln;
    bIsRedOntf = pRdReq->bsRedOntf;
400a6005:	040000        	extui	a0, a0, 0, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1527

    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a6008:	0c2d      	mov.n	a2, a12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1525
    BOOL bIsRedOntf;

    ucPU  = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
    ucPlnStart = pFlashAddr->bsPln;
    bIsRedOntf = pRdReq->bsRedOntf;
400a600a:	a109      	s32i.n	a0, a1, 40
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1527

    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a600c:	0f3d      	mov.n	a3, a15
400a600e:	f24c01        	l32r	a0, 400a2940 <_mcu2dram_text_start+0x140>
400a6011:	0000c0        	callx0	a0
400a6014:	12a216        	beqz	a2, 400a6142 <HAL_NfcRedOnlyRead+0x156>
400a6017:	91c9      	s32i.n	a12, a1, 36
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1533
    {
        return NFC_STATUS_FAIL;
    }

    /* adapter for different flash type */   
    if(FALSE != pRdReq->bsTlcMode)//TLC
400a6019:	0e08      	l32i.n	a0, a14, 0
400a601b:	2d28      	l32i.n	a2, a13, 8
400a601d:	350000        	extui	a0, a0, 16, 4
400a6020:	1c6267        	bbci	a2, 6, 400a6040 <HAL_NfcRedOnlyRead+0x54>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1535
    {
        ucPageType = pRdReq->bsTlcPgType;
400a6023:	144420        	extui	a4, a2, 4, 2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1537
        ucReqType  = NF_PRCQ_TLC_READ_LP_MULTIPLN + ucPageType;
        ucPlnStart = pFlashAddr->bsPln + (ucPageType * PLN_PER_LUN);
400a6026:	230c      	movi.n	a3, 2
400a6028:	1139      	s32i.n	a3, a1, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1535
    }

    /* adapter for different flash type */   
    if(FALSE != pRdReq->bsTlcMode)//TLC
    {
        ucPageType = pRdReq->bsTlcPgType;
400a602a:	0149      	s32i.n	a4, a1, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1537
        ucReqType  = NF_PRCQ_TLC_READ_LP_MULTIPLN + ucPageType;
        ucPlnStart = pFlashAddr->bsPln + (ucPageType * PLN_PER_LUN);
400a602c:	a05400        	addx4	a5, a4, a0
400a602f:	745050        	extui	a5, a5, 0, 8
400a6032:	8159      	s32i.n	a5, a1, 32
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1536

    /* adapter for different flash type */   
    if(FALSE != pRdReq->bsTlcMode)//TLC
    {
        ucPageType = pRdReq->bsTlcPgType;
        ucReqType  = NF_PRCQ_TLC_READ_LP_MULTIPLN + ucPageType;
400a6034:	12c442        	addi	a4, a4, 18
400a6037:	744040        	extui	a4, a4, 0, 8
400a603a:	2149      	s32i.n	a4, a1, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1537
        ucPlnStart = pFlashAddr->bsPln + (ucPageType * PLN_PER_LUN);
400a603c:	000386        	j	400a604e <HAL_NfcRedOnlyRead+0x62>

400a603f <HAL_NfcRedOnlyRead+0x53>:
	...

400a6040 <HAL_NfcRedOnlyRead+0x54>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1544
    }
    else//SLC mode
    {
        ucPageType = 0;
        ucReqType  = NF_PRCQ_READ_MULTIPLN;
        ucPlnStart = pFlashAddr->bsPln;
400a6040:	8109      	s32i.n	a0, a1, 32
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1545
        eScrType   = NORMAL_SCR;
400a6042:	060c      	movi.n	a6, 0
400a6044:	f70c      	movi.n	a7, 15
400a6046:	080c      	movi.n	a8, 0
400a6048:	1189      	s32i.n	a8, a1, 4
400a604a:	2179      	s32i.n	a7, a1, 8
400a604c:	0169      	s32i.n	a6, a1, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1549
    }

    /*  CONFIGURE NFCQ   */
    pNFCQEntry = (NFCQ_ENTRY *)HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
400a604e:	0c2d      	mov.n	a2, a12
400a6050:	0f3d      	mov.n	a3, a15
400a6052:	f23c01        	l32r	a0, 400a2944 <_mcu2dram_text_start+0x144>
400a6055:	0000c0        	callx0	a0
400a6058:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1550
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);
400a605a:	031c      	movi.n	a3, 16
400a605c:	f23b01        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a605f:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1559
    pNFCQEntry->bsOntfEn = TRUE;
    pNFCQEntry->bsXorEn  = FALSE;
    pNFCQEntry->bsOtfbBsSel = OTFB_BASE_SEL;
#endif

    pNFCQEntry->bsDCrcEn  = FALSE;
400a6062:	0cb8      	l32i.n	a11, a12, 0
400a6064:	f06c      	movi.n	a0, -17
400a6066:	10bb00        	and	a11, a11, a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1560
    pNFCQEntry->bsDsIndex = DS_ENTRY_SEL;
400a6069:	f27e01        	l32r	a0, 400a2a64 <_mcu2dram_text_start+0x264>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1561
    pNFCQEntry->bsEMEn    = pRdReq->bsEmEn;
400a606c:	2da8      	l32i.n	a10, a13, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1560
    pNFCQEntry->bsXorEn  = FALSE;
    pNFCQEntry->bsOtfbBsSel = OTFB_BASE_SEL;
#endif

    pNFCQEntry->bsDCrcEn  = FALSE;
    pNFCQEntry->bsDsIndex = DS_ENTRY_SEL;
400a606e:	10bb00        	and	a11, a11, a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1561
    pNFCQEntry->bsEMEn    = pRdReq->bsEmEn;
400a6071:	a505a0        	extui	a0, a10, 21, 11
400a6074:	2260b4        	insbits	a11, a0, 6, 6
400a6077:	0cb9      	s32i.n	a11, a12, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1564

    /*  NFCQ DW2: error injection  */
    if (FALSE != pRdReq->bsInjErrEn)
400a6079:	097a17        	bbci	a10, 17, 400a6086 <HAL_NfcRedOnlyRead+0x9a>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1566
    {
        HAL_NfcSetErrInj(pNFCQEntry, pRdReq->pErrInj);
400a607c:	0c2d      	mov.n	a2, a12
400a607e:	6d38      	l32i.n	a3, a13, 24
400a6080:	f27a01        	l32r	a0, 400a2a68 <_mcu2dram_text_start+0x268>
400a6083:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1571
    }

    /*  NFCQ DW3: DMA message, total data length  */
    //sector length invalid and ucDmaTotalLength = PLN number - 1 when bsRedOnly = 1
    pNFCQEntry->bsDmaTotalLength = PLN_PER_LUN - 1;
400a6086:	320c      	movi.n	a2, 3
400a6088:	0c4c22        	s8i	a2, a12, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1572
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a608b:	022122        	l32i	a2, a1, 8
400a608e:	f23001        	l32r	a0, 400a2950 <_mcu2dram_text_start+0x150>
400a6091:	0000c0        	callx0	a0
400a6094:	3c58      	l32i.n	a5, a12, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1575

    /*  NFCQ DW4: red and scramble   */
    pNFCQEntry->bsRedOnly = TRUE;
400a6096:	4c38      	l32i.n	a3, a12, 16
400a6098:	440c      	movi.n	a4, 4
400a609a:	203340        	or	a3, a3, a4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1572
    }

    /*  NFCQ DW3: DMA message, total data length  */
    //sector length invalid and ucDmaTotalLength = PLN number - 1 when bsRedOnly = 1
    pNFCQEntry->bsDmaTotalLength = PLN_PER_LUN - 1;
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a609d:	808254        	insbits	a5, a2, 8, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1576

    /*  NFCQ DW4: red and scramble   */
    pNFCQEntry->bsRedOnly = TRUE;
    pNFCQEntry->bsRedEn = TRUE;
400a60a0:	240c      	movi.n	a4, 2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1572
    }

    /*  NFCQ DW3: DMA message, total data length  */
    //sector length invalid and ucDmaTotalLength = PLN number - 1 when bsRedOnly = 1
    pNFCQEntry->bsDmaTotalLength = PLN_PER_LUN - 1;
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a60a2:	3c59      	s32i.n	a5, a12, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1576

    /*  NFCQ DW4: red and scramble   */
    pNFCQEntry->bsRedOnly = TRUE;
    pNFCQEntry->bsRedEn = TRUE;
400a60a4:	203340        	or	a3, a3, a4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1577
    pNFCQEntry->bsRedOntf = bIsRedOntf;
400a60a7:	a148      	l32i.n	a4, a1, 40
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1578
    pNFCQEntry->bsRedAddr = HAL_NfcGetRedRelativeAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPlnStart,bIsRedOntf);
400a60a9:	9128      	l32i.n	a2, a1, 36
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1577
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);

    /*  NFCQ DW4: red and scramble   */
    pNFCQEntry->bsRedOnly = TRUE;
    pNFCQEntry->bsRedEn = TRUE;
    pNFCQEntry->bsRedOntf = bIsRedOntf;
400a60ab:	000434        	insbits	a3, a4, 0, 0
400a60ae:	4c39      	s32i.n	a3, a12, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1578
    pNFCQEntry->bsRedAddr = HAL_NfcGetRedRelativeAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPlnStart,bIsRedOntf);
400a60b0:	0f3d      	mov.n	a3, a15
400a60b2:	f26a01        	l32r	a0, 400a2a5c <_mcu2dram_text_start+0x25c>
400a60b5:	0000c0        	callx0	a0
400a60b8:	0f3d      	mov.n	a3, a15
400a60ba:	8158      	l32i.n	a5, a1, 32
400a60bc:	024d      	mov.n	a4, a2
400a60be:	a168      	l32i.n	a6, a1, 40
400a60c0:	9128      	l32i.n	a2, a1, 36
400a60c2:	f26a01        	l32r	a0, 400a2a6c <_mcu2dram_text_start+0x26c>
400a60c5:	0000c0        	callx0	a0
400a60c8:	4c68      	l32i.n	a6, a12, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1579
    *(pRdReq->ppNfcRed) = (NFC_RED*)HAL_NfcGetRedAbsoulteAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPlnStart,bIsRedOntf);
400a60ca:	0f3d      	mov.n	a3, a15
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1578

    /*  NFCQ DW4: red and scramble   */
    pNFCQEntry->bsRedOnly = TRUE;
    pNFCQEntry->bsRedEn = TRUE;
    pNFCQEntry->bsRedOntf = bIsRedOntf;
    pNFCQEntry->bsRedAddr = HAL_NfcGetRedRelativeAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPlnStart,bIsRedOntf);
400a60cc:	833264        	insbits	a6, a2, 3, 19
400a60cf:	4c69      	s32i.n	a6, a12, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1579
    *(pRdReq->ppNfcRed) = (NFC_RED*)HAL_NfcGetRedAbsoulteAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPlnStart,bIsRedOntf);
400a60d1:	9128      	l32i.n	a2, a1, 36
400a60d3:	f26201        	l32r	a0, 400a2a5c <_mcu2dram_text_start+0x25c>
400a60d6:	0000c0        	callx0	a0
400a60d9:	0f3d      	mov.n	a3, a15
400a60db:	8158      	l32i.n	a5, a1, 32
400a60dd:	024d      	mov.n	a4, a2
400a60df:	a168      	l32i.n	a6, a1, 40
400a60e1:	9128      	l32i.n	a2, a1, 36
400a60e3:	f26301        	l32r	a0, 400a2a70 <_mcu2dram_text_start+0x270>
400a60e6:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1581

    HAL_ConfigScramble(pNFCQEntry, pFlashAddr->usPage, SCR_FULL_PLN, ucPageType, eScrType);
400a60e9:	031e32        	l16ui	a3, a14, 6
400a60ec:	240c      	movi.n	a4, 2
400a60ee:	0158      	l32i.n	a5, a1, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1579
    /*  NFCQ DW4: red and scramble   */
    pNFCQEntry->bsRedOnly = TRUE;
    pNFCQEntry->bsRedEn = TRUE;
    pNFCQEntry->bsRedOntf = bIsRedOntf;
    pNFCQEntry->bsRedAddr = HAL_NfcGetRedRelativeAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPlnStart,bIsRedOntf);
    *(pRdReq->ppNfcRed) = (NFC_RED*)HAL_NfcGetRedAbsoulteAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPlnStart,bIsRedOntf);
400a60f0:	5d78      	l32i.n	a7, a13, 20
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1581

    HAL_ConfigScramble(pNFCQEntry, pFlashAddr->usPage, SCR_FULL_PLN, ucPageType, eScrType);
400a60f2:	012162        	l32i	a6, a1, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1579
    /*  NFCQ DW4: red and scramble   */
    pNFCQEntry->bsRedOnly = TRUE;
    pNFCQEntry->bsRedEn = TRUE;
    pNFCQEntry->bsRedOntf = bIsRedOntf;
    pNFCQEntry->bsRedAddr = HAL_NfcGetRedRelativeAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPlnStart,bIsRedOntf);
    *(pRdReq->ppNfcRed) = (NFC_RED*)HAL_NfcGetRedAbsoulteAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPlnStart,bIsRedOntf);
400a60f5:	006722        	s32i	a2, a7, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1581

    HAL_ConfigScramble(pNFCQEntry, pFlashAddr->usPage, SCR_FULL_PLN, ucPageType, eScrType);
400a60f8:	202cc0        	or	a2, a12, a12
400a60fb:	f25e01        	l32r	a0, 400a2a74 <_mcu2dram_text_start+0x274>
400a60fe:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1584

    /* DEC FIFO status report config */
    if (FALSE != pRdReq->bsDecFifoEn)
400a6101:	080d82        	l8ui	a8, a13, 8
400a6104:	418780        	srli	a8, a8, 7
400a6107:	988c      	beqz.n	a8, 400a6114 <HAL_NfcRedOnlyRead+0x128>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1586
    {
        HAL_DecFifoTrigNfc(pNFCQEntry, pRdReq->bsDecFifoIndex);
400a6109:	090d32        	l8ui	a3, a13, 9
400a610c:	0c2d      	mov.n	a2, a12
400a610e:	f25a01        	l32r	a0, 400a2a78 <_mcu2dram_text_start+0x278>
400a6111:	0000c0        	callx0	a0
400a6114:	21d8      	l32i.n	a13, a1, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1590
    }
    
    /*  NFCQ DW8-15: flash address  */
    HAL_NfcSetFullPageRowAddr(pNFCQEntry, pFlashAddr, FALSE);
400a6116:	0c2d      	mov.n	a2, a12
400a6118:	0e3d      	mov.n	a3, a14
400a611a:	040c      	movi.n	a4, 0
400a611c:	f25801        	l32r	a0, 400a2a7c <_mcu2dram_text_start+0x27c>
400a611f:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1592

    HAL_NfcCmdTrigger(pFlashAddr, ucReqType, FALSE, INVALID_2F);
400a6122:	040c      	movi.n	a4, 0
400a6124:	ffa052        	movi	a5, 255
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1594

    return NFC_STATUS_SUCCESS;
400a6127:	41c8      	l32i.n	a12, a1, 16
400a6129:	71f8      	l32i.n	a15, a1, 28
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1592
    }
    
    /*  NFCQ DW8-15: flash address  */
    HAL_NfcSetFullPageRowAddr(pNFCQEntry, pFlashAddr, FALSE);

    HAL_NfcCmdTrigger(pFlashAddr, ucReqType, FALSE, INVALID_2F);
400a612b:	0d3d      	mov.n	a3, a13
400a612d:	0e2d      	mov.n	a2, a14
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1594

    return NFC_STATUS_SUCCESS;
400a612f:	51d8      	l32i.n	a13, a1, 20
400a6131:	61e8      	l32i.n	a14, a1, 24
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1592
    }
    
    /*  NFCQ DW8-15: flash address  */
    HAL_NfcSetFullPageRowAddr(pNFCQEntry, pFlashAddr, FALSE);

    HAL_NfcCmdTrigger(pFlashAddr, ucReqType, FALSE, INVALID_2F);
400a6133:	f20801        	l32r	a0, 400a2954 <_mcu2dram_text_start+0x154>
400a6136:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1594

    return NFC_STATUS_SUCCESS;
400a6139:	120c      	movi.n	a2, 1
400a613b:	3108      	l32i.n	a0, a1, 12
400a613d:	30c112        	addi	a1, a1, 48
400a6140:	f00d      	ret.n

400a6142 <HAL_NfcRedOnlyRead+0x156>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1529
    ucPlnStart = pFlashAddr->bsPln;
    bIsRedOntf = pRdReq->bsRedOntf;

    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
    {
        return NFC_STATUS_FAIL;
400a6142:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1594
    /*  NFCQ DW8-15: flash address  */
    HAL_NfcSetFullPageRowAddr(pNFCQEntry, pFlashAddr, FALSE);

    HAL_NfcCmdTrigger(pFlashAddr, ucReqType, FALSE, INVALID_2F);

    return NFC_STATUS_SUCCESS;
400a6144:	41c8      	l32i.n	a12, a1, 16
400a6146:	51d8      	l32i.n	a13, a1, 20
400a6148:	61e8      	l32i.n	a14, a1, 24
400a614a:	71f8      	l32i.n	a15, a1, 28
400a614c:	3108      	l32i.n	a0, a1, 12
400a614e:	30c112        	addi	a1, a1, 48
400a6151:	f00d      	ret.n

400a6153 <HAL_NfcRedOnlyRead+0x167>:
	...

400a6154 <HAL_NfcChangeColRead>:
HAL_NfcChangeColRead():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1612
Usage:
History:
    20151113    abby    create
------------------------------------------------------------------------------*/
U32 MCU2_DRAM_TEXT HAL_NfcChangeColRead(FLASH_ADDR *pFlashAddr, NFC_READ_REQ_DES *pRdReq)
{
400a6154:	d0c112        	addi	a1, a1, -48
400a6157:	5109      	s32i.n	a0, a1, 20
400a6159:	91f9      	s32i.n	a15, a1, 36
400a615b:	61c9      	s32i.n	a12, a1, 24
400a615d:	71d9      	s32i.n	a13, a1, 28
400a615f:	81e9      	s32i.n	a14, a1, 32
400a6161:	03dd      	mov.n	a13, a3
400a6163:	02ed      	mov.n	a14, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1620
    U8  ucPageType;
    NFCQ_ENTRY *pNFCQEntry;
    NORMAL_DSG_ENTRY * pDSG;
    NFC_SCR_CONF eScrType;
    
    ucPU  = pFlashAddr->ucPU;
400a6165:	0002c2        	l8ui	a12, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1621
    ucLun = pFlashAddr->ucLun;
400a6168:	0102f2        	l8ui	a15, a2, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1623
    
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a616b:	0c2d      	mov.n	a2, a12
400a616d:	0f3d      	mov.n	a3, a15
400a616f:	f1f401        	l32r	a0, 400a2940 <_mcu2dram_text_start+0x140>
400a6172:	0000c0        	callx0	a0
400a6175:	1c1216        	beqz	a2, 400a633a <HAL_NfcChangeColRead+0x1e6>
400a6178:	11c9      	s32i.n	a12, a1, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1629
    {
        return NFC_STATUS_FAIL;
    }
    
    /* adapter for different flash type */
    if(FALSE != pRdReq->bsTlcMode)//TLC
400a617a:	0e28      	l32i.n	a2, a14, 0
400a617c:	2d08      	l32i.n	a0, a13, 8
400a617e:	352020        	extui	a2, a2, 16, 4
400a6181:	136067        	bbci	a0, 6, 400a6198 <HAL_NfcChangeColRead+0x44>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1632
    {
        ucPageType = pRdReq->bsTlcPgType;
        ucPln      = pFlashAddr->bsPln + (ucPageType * PLN_PER_LUN);
400a6184:	230c      	movi.n	a3, 2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1631
    }
    
    /* adapter for different flash type */
    if(FALSE != pRdReq->bsTlcMode)//TLC
    {
        ucPageType = pRdReq->bsTlcPgType;
400a6186:	144400        	extui	a4, a0, 4, 2
400a6189:	2149      	s32i.n	a4, a1, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1632
        ucPln      = pFlashAddr->bsPln + (ucPageType * PLN_PER_LUN);
400a618b:	3139      	s32i.n	a3, a1, 12
400a618d:	a04420        	addx4	a4, a4, a2
400a6190:	744040        	extui	a4, a4, 0, 8
400a6193:	4149      	s32i.n	a4, a1, 16
400a6195:	000246        	j	400a61a2 <HAL_NfcChangeColRead+0x4e>

400a6198 <HAL_NfcChangeColRead+0x44>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1638
        eScrType   = TLC_RD_ONE_PG;
    }
    else
    {
        ucPageType = 0;
        ucPln      = pFlashAddr->bsPln;
400a6198:	4129      	s32i.n	a2, a1, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1639
        eScrType   = NORMAL_SCR;
400a619a:	050c      	movi.n	a5, 0
400a619c:	060c      	movi.n	a6, 0
400a619e:	3169      	s32i.n	a6, a1, 12
400a61a0:	2159      	s32i.n	a5, a1, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1642
    }
    /*  CONFIGURE NFCQ   */
    pNFCQEntry = (NFCQ_ENTRY *)HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
400a61a2:	0c2d      	mov.n	a2, a12
400a61a4:	0f3d      	mov.n	a3, a15
400a61a6:	f1e701        	l32r	a0, 400a2944 <_mcu2dram_text_start+0x144>
400a61a9:	0000c0        	callx0	a0
400a61ac:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1643
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);
400a61ae:	031c      	movi.n	a3, 16
400a61b0:	f1e601        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a61b3:	0000c0        	callx0	a0
400a61b6:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1652
    pNFCQEntry->bsOntfEn = TRUE;
    pNFCQEntry->bsXorEn  = FALSE;
    pNFCQEntry->bsOtfbBsSel = OTFB_BASE_SEL;
#endif

    pNFCQEntry->bsDCrcEn  = FALSE;
400a61b8:	f96c      	movi.n	a9, -17
400a61ba:	0c88      	l32i.n	a8, a12, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1653
    pNFCQEntry->bsDsIndex = DS_ENTRY_SEL;
400a61bc:	f22aa1        	l32r	a10, 400a2a64 <_mcu2dram_text_start+0x264>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1652
    pNFCQEntry->bsOntfEn = TRUE;
    pNFCQEntry->bsXorEn  = FALSE;
    pNFCQEntry->bsOtfbBsSel = OTFB_BASE_SEL;
#endif

    pNFCQEntry->bsDCrcEn  = FALSE;
400a61bf:	108890        	and	a8, a8, a9
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1654
    pNFCQEntry->bsDsIndex = DS_ENTRY_SEL;
    pNFCQEntry->bsEMEn    = pRdReq->bsEmEn;
400a61c2:	2d98      	l32i.n	a9, a13, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1653
    pNFCQEntry->bsXorEn  = FALSE;
    pNFCQEntry->bsOtfbBsSel = OTFB_BASE_SEL;
#endif

    pNFCQEntry->bsDCrcEn  = FALSE;
    pNFCQEntry->bsDsIndex = DS_ENTRY_SEL;
400a61c4:	1088a0        	and	a8, a8, a10
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1654
    pNFCQEntry->bsEMEn    = pRdReq->bsEmEn;
400a61c7:	a59590        	extui	a9, a9, 21, 11
400a61ca:	226984        	insbits	a8, a9, 6, 6
400a61cd:	0c89      	s32i.n	a8, a12, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1657

    /*  DSG configure   */
    while(FALSE == HAL_GetNormalDsg(&usCurDsgId))
400a61cf:	f22c01        	l32r	a0, 400a2a80 <_mcu2dram_text_start+0x280>
400a61d2:	0000c0        	callx0	a0
400a61d5:	153216        	beqz	a2, 400a632c <HAL_NfcChangeColRead+0x1d8>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1669
    /*  NFCQ DW1: sector enable and length   */
    pNFCQEntry->aSecAddr[0].bsSecStart = pRdReq->bsSecStart;
    pNFCQEntry->aSecAddr[0].bsSecLength = pRdReq->bsSecLen;

    /*  NFCQ DW2: error injection  */
    if (FALSE != pRdReq->bsInjErrEn)
400a61d8:	2da8      	l32i.n	a10, a13, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1662
    while(FALSE == HAL_GetNormalDsg(&usCurDsgId))
    {
        ;
    }
    pNFCQEntry->bsDsgEn = TRUE;
    pNFCQEntry->bsFstDsgPtr = usCurDsgId;
400a61da:	001102        	l16ui	a0, a1, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1661
    /*  DSG configure   */
    while(FALSE == HAL_GetNormalDsg(&usCurDsgId))
    {
        ;
    }
    pNFCQEntry->bsDsgEn = TRUE;
400a61dd:	80a032        	movi	a3, 128
400a61e0:	0c28      	l32i.n	a2, a12, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1665
    pNFCQEntry->bsFstDsgPtr = usCurDsgId;

    /*  NFCQ DW1: sector enable and length   */
    pNFCQEntry->aSecAddr[0].bsSecStart = pRdReq->bsSecStart;
400a61e2:	000db2        	l8ui	a11, a13, 0
400a61e5:	054cb2        	s8i	a11, a12, 5
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1661
    /*  DSG configure   */
    while(FALSE == HAL_GetNormalDsg(&usCurDsgId))
    {
        ;
    }
    pNFCQEntry->bsDsgEn = TRUE;
400a61e8:	202230        	or	a2, a2, a3
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1662
    pNFCQEntry->bsFstDsgPtr = usCurDsgId;
400a61eb:	010090        	slli	a0, a0, 23
400a61ee:	a20204        	insbits	a0, a2, 0, 22
400a61f1:	006c02        	s32i	a0, a12, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1666

    /*  NFCQ DW1: sector enable and length   */
    pNFCQEntry->aSecAddr[0].bsSecStart = pRdReq->bsSecStart;
    pNFCQEntry->aSecAddr[0].bsSecLength = pRdReq->bsSecLen;
400a61f4:	010d02        	l8ui	a0, a13, 1
400a61f7:	044c02        	s8i	a0, a12, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1669

    /*  NFCQ DW2: error injection  */
    if (FALSE != pRdReq->bsInjErrEn)
400a61fa:	0e7a17        	bbci	a10, 17, 400a620c <HAL_NfcChangeColRead+0xb8>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1671
    {
        HAL_NfcSetErrInj(pNFCQEntry, pRdReq->pErrInj);
400a61fd:	202cc0        	or	a2, a12, a12
400a6200:	062d32        	l32i	a3, a13, 24
400a6203:	f21901        	l32r	a0, 400a2a68 <_mcu2dram_text_start+0x268>
400a6206:	0000c0        	callx0	a0
400a6209:	010d02        	l8ui	a0, a13, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1678

    /*  NFCQ DW3: DMA message, total data length  */
    pNFCQEntry->bsDmaTotalLength = pRdReq->bsSecLen;
    
    /*  PRCQ start DW   */
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_CCLR_MULTIPLN);
400a620c:	721c      	movi.n	a2, 23
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1675
    {
        HAL_NfcSetErrInj(pNFCQEntry, pRdReq->pErrInj);
    }

    /*  NFCQ DW3: DMA message, total data length  */
    pNFCQEntry->bsDmaTotalLength = pRdReq->bsSecLen;
400a620e:	0c4c02        	s8i	a0, a12, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1678
    
    /*  PRCQ start DW   */
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_CCLR_MULTIPLN);
400a6211:	f1cf01        	l32r	a0, 400a2950 <_mcu2dram_text_start+0x150>
400a6214:	0000c0        	callx0	a0
400a6217:	3c58      	l32i.n	a5, a12, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1681

    /*  NFCQ DW4: red and scramble   */
    if (NULL != pRdReq->ppNfcRed)
400a6219:	5d48      	l32i.n	a4, a13, 20
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1678

    /*  NFCQ DW3: DMA message, total data length  */
    pNFCQEntry->bsDmaTotalLength = pRdReq->bsSecLen;
    
    /*  PRCQ start DW   */
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_CCLR_MULTIPLN);
400a621b:	808254        	insbits	a5, a2, 8, 16
400a621e:	3c59      	s32i.n	a5, a12, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1681

    /*  NFCQ DW4: red and scramble   */
    if (NULL != pRdReq->ppNfcRed)
400a6220:	054416        	beqz	a4, 400a6278 <HAL_NfcChangeColRead+0x124>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1685
    {
        pNFCQEntry->bsRedEn = TRUE;
        pNFCQEntry->bsRedOntf = pRdReq->bsRedOntf;
        pNFCQEntry->bsRedAddr = HAL_NfcGetRedRelativeAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPln,pRdReq->bsRedOntf);
400a6223:	1128      	l32i.n	a2, a1, 4
400a6225:	0f3d      	mov.n	a3, a15
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1684

    /*  NFCQ DW4: red and scramble   */
    if (NULL != pRdReq->ppNfcRed)
    {
        pNFCQEntry->bsRedEn = TRUE;
        pNFCQEntry->bsRedOntf = pRdReq->bsRedOntf;
400a6227:	1d78      	l32i.n	a7, a13, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1683
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_CCLR_MULTIPLN);

    /*  NFCQ DW4: red and scramble   */
    if (NULL != pRdReq->ppNfcRed)
    {
        pNFCQEntry->bsRedEn = TRUE;
400a6229:	4c68      	l32i.n	a6, a12, 16
400a622b:	280c      	movi.n	a8, 2
400a622d:	206680        	or	a6, a6, a8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1684
        pNFCQEntry->bsRedOntf = pRdReq->bsRedOntf;
400a6230:	000764        	insbits	a6, a7, 0, 0
400a6233:	046c62        	s32i	a6, a12, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1685
        pNFCQEntry->bsRedAddr = HAL_NfcGetRedRelativeAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPln,pRdReq->bsRedOntf);
400a6236:	f20901        	l32r	a0, 400a2a5c <_mcu2dram_text_start+0x25c>
400a6239:	0000c0        	callx0	a0
400a623c:	0f3d      	mov.n	a3, a15
400a623e:	4158      	l32i.n	a5, a1, 16
400a6240:	024d      	mov.n	a4, a2
400a6242:	1d68      	l32i.n	a6, a13, 4
400a6244:	012122        	l32i	a2, a1, 4
400a6247:	046060        	extui	a6, a6, 0, 1
400a624a:	f20801        	l32r	a0, 400a2a6c <_mcu2dram_text_start+0x26c>
400a624d:	0000c0        	callx0	a0
400a6250:	4c78      	l32i.n	a7, a12, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1686
        *(pRdReq->ppNfcRed) = (NFC_RED*)HAL_NfcGetRedAbsoulteAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPln,(pRdReq->bsRedOntf));
400a6252:	0f3d      	mov.n	a3, a15
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1685
    /*  NFCQ DW4: red and scramble   */
    if (NULL != pRdReq->ppNfcRed)
    {
        pNFCQEntry->bsRedEn = TRUE;
        pNFCQEntry->bsRedOntf = pRdReq->bsRedOntf;
        pNFCQEntry->bsRedAddr = HAL_NfcGetRedRelativeAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPln,pRdReq->bsRedOntf);
400a6254:	833274        	insbits	a7, a2, 3, 19
400a6257:	4c79      	s32i.n	a7, a12, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1686
        *(pRdReq->ppNfcRed) = (NFC_RED*)HAL_NfcGetRedAbsoulteAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPln,(pRdReq->bsRedOntf));
400a6259:	1128      	l32i.n	a2, a1, 4
400a625b:	f20001        	l32r	a0, 400a2a5c <_mcu2dram_text_start+0x25c>
400a625e:	0000c0        	callx0	a0
400a6261:	0f3d      	mov.n	a3, a15
400a6263:	4158      	l32i.n	a5, a1, 16
400a6265:	024d      	mov.n	a4, a2
400a6267:	1d68      	l32i.n	a6, a13, 4
400a6269:	1128      	l32i.n	a2, a1, 4
400a626b:	046060        	extui	a6, a6, 0, 1
400a626e:	f20001        	l32r	a0, 400a2a70 <_mcu2dram_text_start+0x270>
400a6271:	0000c0        	callx0	a0
400a6274:	5d78      	l32i.n	a7, a13, 20
400a6276:	0729      	s32i.n	a2, a7, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1688
    }
    HAL_ConfigScramble(pNFCQEntry, pFlashAddr->usPage, SCR_FULL_PLN, ucPageType, eScrType);
400a6278:	0c2d      	mov.n	a2, a12
400a627a:	031e32        	l16ui	a3, a14, 6
400a627d:	240c      	movi.n	a4, 2
400a627f:	2158      	l32i.n	a5, a1, 8
400a6281:	3168      	l32i.n	a6, a1, 12
400a6283:	f1fc01        	l32r	a0, 400a2a74 <_mcu2dram_text_start+0x274>
400a6286:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1694
    
    /* Raw data read = true, each CW 2K align */
    pNFCQEntry->bsRawReadEn = pRdReq->bsRawData;

    /*  NFCQ DW5: LBA for read, fill by FW, the same with corresponding LBA in write red   */
    if (pRdReq->bsLbaChkEn || pRdReq->bsEmEn)
400a6289:	1d28      	l32i.n	a2, a13, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1691
        *(pRdReq->ppNfcRed) = (NFC_RED*)HAL_NfcGetRedAbsoulteAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPln,(pRdReq->bsRedOntf));
    }
    HAL_ConfigScramble(pNFCQEntry, pFlashAddr->usPage, SCR_FULL_PLN, ucPageType, eScrType);
    
    /* Raw data read = true, each CW 2K align */
    pNFCQEntry->bsRawReadEn = pRdReq->bsRawData;
400a628b:	2d08      	l32i.n	a0, a13, 8
400a628d:	4c88      	l32i.n	a8, a12, 16
400a628f:	f59000        	extui	a9, a0, 16, 16
400a6292:	b04984        	insbits	a8, a9, 20, 20
400a6295:	046c82        	s32i	a8, a12, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1694

    /*  NFCQ DW5: LBA for read, fill by FW, the same with corresponding LBA in write red   */
    if (pRdReq->bsLbaChkEn || pRdReq->bsEmEn)
400a6298:	02e217        	bbsi	a2, 1, 400a629e <HAL_NfcChangeColRead+0x14a>
400a629b:	0a7057        	bbci	a0, 21, 400a62a9 <HAL_NfcChangeColRead+0x155>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1696
    {
        pNFCQEntry->bsRdLba = pRdReq->bsLba;
400a629e:	5ca8      	l32i.n	a10, a12, 20
400a62a0:	41b220        	srli	a11, a2, 2
400a62a3:	e33ba4        	insbits	a10, a11, 3, 31
400a62a6:	056ca2        	s32i	a10, a12, 20
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1700
    }

    /* DEC FIFO status report config */
    if (FALSE != pRdReq->bsDecFifoEn)
400a62a9:	70e077        	bbsi	a0, 7, 400a631d <HAL_NfcChangeColRead+0x1c9>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1706
    {
        HAL_DecFifoTrigNfc(pNFCQEntry, pRdReq->bsDecFifoIndex);
    }
    
    /*  NFCQ DW8-15: flash address  */
    HAL_NfcSetFullPageRowAddr(pNFCQEntry, pFlashAddr, FALSE);
400a62ac:	0c2d      	mov.n	a2, a12
400a62ae:	0e3d      	mov.n	a3, a14
400a62b0:	00a042        	movi	a4, 0
400a62b3:	f1f201        	l32r	a0, 400a2a7c <_mcu2dram_text_start+0x27c>
400a62b6:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1709

    /*  CONFIGURE DSG   */
    pDSG = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(usCurDsgId);
400a62b9:	001122        	l16ui	a2, a1, 0
400a62bc:	f1f201        	l32r	a0, 400a2a84 <_mcu2dram_text_start+0x284>
400a62bf:	0000c0        	callx0	a0
400a62c2:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1710
    COM_MemZero((U32*)pDSG,sizeof(NORMAL_DSG_ENTRY)>>2);
400a62c4:	430c      	movi.n	a3, 4
400a62c6:	f1a001        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a62c9:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1715
    /*  DSG DW0: transfer length and chain config, if req secLength = 0, should xfer 256 sectors  */
    pDSG->bsXferByteLen = pRdReq->bsSecLen << SEC_SZ_BITS ;
    pDSG->bsLast = TRUE;
    /*  DSG DW1: dram address  */
    pDSG->bsDramAddr =  HAL_NfcGetDmaAddr(pRdReq->bsRdBuffId, pRdReq->bsSecStart, LOGIC_PIPE_PG_SZ_BITS);
400a62cc:	000d32        	l8ui	a3, a13, 0
400a62cf:	041c      	movi.n	a4, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1713
    /*  CONFIGURE DSG   */
    pDSG = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(usCurDsgId);
    COM_MemZero((U32*)pDSG,sizeof(NORMAL_DSG_ENTRY)>>2);
    /*  DSG DW0: transfer length and chain config, if req secLength = 0, should xfer 256 sectors  */
    pDSG->bsXferByteLen = pRdReq->bsSecLen << SEC_SZ_BITS ;
    pDSG->bsLast = TRUE;
400a62d1:	00a202        	movi	a0, 0x200
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1712

    /*  CONFIGURE DSG   */
    pDSG = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(usCurDsgId);
    COM_MemZero((U32*)pDSG,sizeof(NORMAL_DSG_ENTRY)>>2);
    /*  DSG DW0: transfer length and chain config, if req secLength = 0, should xfer 256 sectors  */
    pDSG->bsXferByteLen = pRdReq->bsSecLen << SEC_SZ_BITS ;
400a62d4:	0cf8      	l32i.n	a15, a12, 0
400a62d6:	010d22        	l8ui	a2, a13, 1
400a62d9:	d4f0f0        	extui	a15, a15, 0, 14
400a62dc:	f272f4        	insbits	a15, a2, 23, 30
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1715
    pDSG->bsLast = TRUE;
    /*  DSG DW1: dram address  */
    pDSG->bsDramAddr =  HAL_NfcGetDmaAddr(pRdReq->bsRdBuffId, pRdReq->bsSecStart, LOGIC_PIPE_PG_SZ_BITS);
400a62df:	011d22        	l16ui	a2, a13, 2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1713
    /*  CONFIGURE DSG   */
    pDSG = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(usCurDsgId);
    COM_MemZero((U32*)pDSG,sizeof(NORMAL_DSG_ENTRY)>>2);
    /*  DSG DW0: transfer length and chain config, if req secLength = 0, should xfer 256 sectors  */
    pDSG->bsXferByteLen = pRdReq->bsSecLen << SEC_SZ_BITS ;
    pDSG->bsLast = TRUE;
400a62e2:	20ff00        	or	a15, a15, a0
400a62e5:	0cf9      	s32i.n	a15, a12, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1715
    /*  DSG DW1: dram address  */
    pDSG->bsDramAddr =  HAL_NfcGetDmaAddr(pRdReq->bsRdBuffId, pRdReq->bsSecStart, LOGIC_PIPE_PG_SZ_BITS);
400a62e7:	f1e801        	l32r	a0, 400a2a88 <_mcu2dram_text_start+0x288>
400a62ea:	0000c0        	callx0	a0
400a62ed:	1c08      	l32i.n	a0, a12, 4
400a62ef:	e31204        	insbits	a0, a2, 1, 31
400a62f2:	001122        	l16ui	a2, a1, 0
400a62f5:	1c09      	s32i.n	a0, a12, 4
400a62f7:	f1e501        	l32r	a0, 400a2a8c <_mcu2dram_text_start+0x28c>
400a62fa:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1721
    
    /*  Set DSG valid    */
    HAL_SetNormalDsgSts(usCurDsgId, NORMAL_DSG_VALID);

    /*  Trigger NFC    */
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_CCLR_MULTIPLN, FALSE, INVALID_2F);
400a62fd:	0e2d      	mov.n	a2, a14
400a62ff:	731c      	movi.n	a3, 23
400a6301:	040c      	movi.n	a4, 0
400a6303:	ffa052        	movi	a5, 255
400a6306:	f19301        	l32r	a0, 400a2954 <_mcu2dram_text_start+0x154>
400a6309:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1723

    return NFC_STATUS_SUCCESS;
400a630c:	120c      	movi.n	a2, 1
400a630e:	61c8      	l32i.n	a12, a1, 24
400a6310:	71d8      	l32i.n	a13, a1, 28
400a6312:	81e8      	l32i.n	a14, a1, 32
400a6314:	91f8      	l32i.n	a15, a1, 36
400a6316:	5108      	l32i.n	a0, a1, 20
400a6318:	30c112        	addi	a1, a1, 48
400a631b:	f00d      	ret.n

400a631d <HAL_NfcChangeColRead+0x1c9>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1702
    }

    /* DEC FIFO status report config */
    if (FALSE != pRdReq->bsDecFifoEn)
    {
        HAL_DecFifoTrigNfc(pNFCQEntry, pRdReq->bsDecFifoIndex);
400a631d:	0c2d      	mov.n	a2, a12
400a631f:	090d32        	l8ui	a3, a13, 9
400a6322:	f1d501        	l32r	a0, 400a2a78 <_mcu2dram_text_start+0x278>
400a6325:	0000c0        	callx0	a0
400a6328:	ffe006        	j	400a62ac <HAL_NfcChangeColRead+0x158>

400a632b <HAL_NfcChangeColRead+0x1d7>:
	...

400a632c <HAL_NfcChangeColRead+0x1d8>:
400a632c:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1657
    pNFCQEntry->bsDCrcEn  = FALSE;
    pNFCQEntry->bsDsIndex = DS_ENTRY_SEL;
    pNFCQEntry->bsEMEn    = pRdReq->bsEmEn;

    /*  DSG configure   */
    while(FALSE == HAL_GetNormalDsg(&usCurDsgId))
400a632e:	f1d401        	l32r	a0, 400a2a80 <_mcu2dram_text_start+0x280>
400a6331:	0000c0        	callx0	a0
400a6334:	ff4216        	beqz	a2, 400a632c <HAL_NfcChangeColRead+0x1d8>
400a6337:	ffa746        	j	400a61d8 <HAL_NfcChangeColRead+0x84>

400a633a <HAL_NfcChangeColRead+0x1e6>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1625
    ucPU  = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
    
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
    {
        return NFC_STATUS_FAIL;
400a633a:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1723
    HAL_SetNormalDsgSts(usCurDsgId, NORMAL_DSG_VALID);

    /*  Trigger NFC    */
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_CCLR_MULTIPLN, FALSE, INVALID_2F);

    return NFC_STATUS_SUCCESS;
400a633c:	61c8      	l32i.n	a12, a1, 24
400a633e:	71d8      	l32i.n	a13, a1, 28
400a6340:	81e8      	l32i.n	a14, a1, 32
400a6342:	91f8      	l32i.n	a15, a1, 36
400a6344:	5108      	l32i.n	a0, a1, 20
400a6346:	30c112        	addi	a1, a1, 48
400a6349:	f00d      	ret.n

400a634b <HAL_NfcChangeColRead+0x1f7>:
	...

400a634c <HAL_NfcSinglePlnCCLRead>:
HAL_NfcSinglePlnCCLRead():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2094
Usage:
History:
    20160308    abby    create
------------------------------------------------------------------------------*/
BOOL MCU2_DRAM_TEXT HAL_NfcSinglePlnCCLRead(FLASH_ADDR *pFlashAddr, NFC_READ_REQ_DES *pRdReq)
{
400a634c:	d0c112        	addi	a1, a1, -48
400a634f:	5109      	s32i.n	a0, a1, 20
400a6351:	91f9      	s32i.n	a15, a1, 36
400a6353:	71d9      	s32i.n	a13, a1, 28
400a6355:	61c9      	s32i.n	a12, a1, 24
400a6357:	81e9      	s32i.n	a14, a1, 32
400a6359:	03cd      	mov.n	a12, a3
400a635b:	02ed      	mov.n	a14, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2102
    U16 usCurDsgId;
    NFCQ_ENTRY *pNFCQEntry;
    NORMAL_DSG_ENTRY * pDSG;
    NFC_SCR_CONF eScrType = NORMAL_SCR;

    ucPU   = pFlashAddr->ucPU;
400a635d:	0002d2        	l8ui	a13, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2103
    ucLun  = pFlashAddr->ucLun;
400a6360:	0102f2        	l8ui	a15, a2, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2106
    ucPln  = pFlashAddr->bsPln;
    
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a6363:	0d2d      	mov.n	a2, a13
400a6365:	0f3d      	mov.n	a3, a15
400a6367:	f17601        	l32r	a0, 400a2940 <_mcu2dram_text_start+0x140>
400a636a:	0000c0        	callx0	a0
400a636d:	1bc216        	beqz	a2, 400a652d <HAL_NfcSinglePlnCCLRead+0x1e1>
400a6370:	11d9      	s32i.n	a13, a1, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2111
    {
        return NFC_STATUS_FAIL;
    }
    
    if(pRdReq->bsTlcMode)//TLC
400a6372:	0e28      	l32i.n	a2, a14, 0
400a6374:	2c08      	l32i.n	a0, a12, 8
400a6376:	352020        	extui	a2, a2, 16, 4
400a6379:	136067        	bbci	a0, 6, 400a6390 <HAL_NfcSinglePlnCCLRead+0x44>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2114
    {
        ucPageType = pRdReq->bsTlcPgType;
        ucPln = pFlashAddr->bsPln + ucPageType;
400a637c:	230c      	movi.n	a3, 2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2113
        return NFC_STATUS_FAIL;
    }
    
    if(pRdReq->bsTlcMode)//TLC
    {
        ucPageType = pRdReq->bsTlcPgType;
400a637e:	144400        	extui	a4, a0, 4, 2
400a6381:	2149      	s32i.n	a4, a1, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2114
        ucPln = pFlashAddr->bsPln + ucPageType;
400a6383:	3139      	s32i.n	a3, a1, 12
400a6385:	424a      	add.n	a4, a2, a4
400a6387:	744040        	extui	a4, a4, 0, 8
400a638a:	4149      	s32i.n	a4, a1, 16
400a638c:	000286        	j	400a639a <HAL_NfcSinglePlnCCLRead+0x4e>

400a638f <HAL_NfcSinglePlnCCLRead+0x43>:
	...

400a6390 <HAL_NfcSinglePlnCCLRead+0x44>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2120
        eScrType = TLC_RD_ONE_PG;
    }
    else
    {
        ucPageType = 0;
        ucPln = pFlashAddr->bsPln;
400a6390:	4129      	s32i.n	a2, a1, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2121
        eScrType = NORMAL_SCR;
400a6392:	050c      	movi.n	a5, 0
400a6394:	060c      	movi.n	a6, 0
400a6396:	3169      	s32i.n	a6, a1, 12
400a6398:	2159      	s32i.n	a5, a1, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2125
    }

    /*  CONFIGURE NFCQ   */
    pNFCQEntry = (NFCQ_ENTRY *)HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
400a639a:	0d2d      	mov.n	a2, a13
400a639c:	0f3d      	mov.n	a3, a15
400a639e:	f16901        	l32r	a0, 400a2944 <_mcu2dram_text_start+0x144>
400a63a1:	0000c0        	callx0	a0
400a63a4:	02dd      	mov.n	a13, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2126
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);
400a63a6:	031c      	movi.n	a3, 16
400a63a8:	f16801        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a63ab:	0000c0        	callx0	a0
400a63ae:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2135
    pNFCQEntry->bsOntfEn = TRUE;
    pNFCQEntry->bsXorEn  = FALSE;
    pNFCQEntry->bsOtfbBsSel = OTFB_BASE_SEL;
#endif

    pNFCQEntry->bsDCrcEn  = FALSE;
400a63b0:	f96c      	movi.n	a9, -17
400a63b2:	0d88      	l32i.n	a8, a13, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2136
    pNFCQEntry->bsDsIndex = DS_ENTRY_SEL;
400a63b4:	f1aca1        	l32r	a10, 400a2a64 <_mcu2dram_text_start+0x264>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2135
    pNFCQEntry->bsOntfEn = TRUE;
    pNFCQEntry->bsXorEn  = FALSE;
    pNFCQEntry->bsOtfbBsSel = OTFB_BASE_SEL;
#endif

    pNFCQEntry->bsDCrcEn  = FALSE;
400a63b7:	108890        	and	a8, a8, a9
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2137
    pNFCQEntry->bsDsIndex = DS_ENTRY_SEL;
    pNFCQEntry->bsEMEn    = pRdReq->bsEmEn;
400a63ba:	2c98      	l32i.n	a9, a12, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2136
    pNFCQEntry->bsXorEn  = FALSE;
    pNFCQEntry->bsOtfbBsSel = OTFB_BASE_SEL;
#endif

    pNFCQEntry->bsDCrcEn  = FALSE;
    pNFCQEntry->bsDsIndex = DS_ENTRY_SEL;
400a63bc:	1088a0        	and	a8, a8, a10
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2137
    pNFCQEntry->bsEMEn    = pRdReq->bsEmEn;
400a63bf:	a59590        	extui	a9, a9, 21, 11
400a63c2:	226984        	insbits	a8, a9, 6, 6
400a63c5:	0d89      	s32i.n	a8, a13, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2140

    /*  DSG configure   */
    while(FALSE == HAL_GetNormalDsg(&usCurDsgId))
400a63c7:	f1ae01        	l32r	a0, 400a2a80 <_mcu2dram_text_start+0x280>
400a63ca:	0000c0        	callx0	a0
400a63cd:	14e216        	beqz	a2, 400a651f <HAL_NfcSinglePlnCCLRead+0x1d3>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2152
    /*  NFCQ DW1: sector enable and length   */
    pNFCQEntry->aSecAddr[0].bsSecStart = pRdReq->bsSecStart;
    pNFCQEntry->aSecAddr[0].bsSecLength = pRdReq->bsSecLen;

    /*  NFCQ DW2: error injection  */
    if (FALSE != pRdReq->bsInjErrEn)
400a63d0:	2ca8      	l32i.n	a10, a12, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2145
    while(FALSE == HAL_GetNormalDsg(&usCurDsgId))
    {
        ;
    }
    pNFCQEntry->bsDsgEn = TRUE;
    pNFCQEntry->bsFstDsgPtr = usCurDsgId;
400a63d2:	001102        	l16ui	a0, a1, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2144
    /*  DSG configure   */
    while(FALSE == HAL_GetNormalDsg(&usCurDsgId))
    {
        ;
    }
    pNFCQEntry->bsDsgEn = TRUE;
400a63d5:	80a032        	movi	a3, 128
400a63d8:	0d28      	l32i.n	a2, a13, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2148
    pNFCQEntry->bsFstDsgPtr = usCurDsgId;

    /*  NFCQ DW1: sector enable and length   */
    pNFCQEntry->aSecAddr[0].bsSecStart = pRdReq->bsSecStart;
400a63da:	000cb2        	l8ui	a11, a12, 0
400a63dd:	054db2        	s8i	a11, a13, 5
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2144
    /*  DSG configure   */
    while(FALSE == HAL_GetNormalDsg(&usCurDsgId))
    {
        ;
    }
    pNFCQEntry->bsDsgEn = TRUE;
400a63e0:	202230        	or	a2, a2, a3
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2145
    pNFCQEntry->bsFstDsgPtr = usCurDsgId;
400a63e3:	010090        	slli	a0, a0, 23
400a63e6:	a20204        	insbits	a0, a2, 0, 22
400a63e9:	006d02        	s32i	a0, a13, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2149

    /*  NFCQ DW1: sector enable and length   */
    pNFCQEntry->aSecAddr[0].bsSecStart = pRdReq->bsSecStart;
    pNFCQEntry->aSecAddr[0].bsSecLength = pRdReq->bsSecLen;
400a63ec:	010c02        	l8ui	a0, a12, 1
400a63ef:	044d02        	s8i	a0, a13, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2152

    /*  NFCQ DW2: error injection  */
    if (FALSE != pRdReq->bsInjErrEn)
400a63f2:	0e7a17        	bbci	a10, 17, 400a6404 <HAL_NfcSinglePlnCCLRead+0xb8>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2154
    {
        HAL_NfcSetErrInj(pNFCQEntry, pRdReq->pErrInj);
400a63f5:	202dd0        	or	a2, a13, a13
400a63f8:	062c32        	l32i	a3, a12, 24
400a63fb:	f19b01        	l32r	a0, 400a2a68 <_mcu2dram_text_start+0x268>
400a63fe:	0000c0        	callx0	a0
400a6401:	010c02        	l8ui	a0, a12, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2160
    }

    /*  NFCQ DW3: DMA message, total data length  */
    pNFCQEntry->bsDmaTotalLength = pRdReq->bsSecLen;
    /*  PRCQ start DW   */
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_CCLR);
400a6404:	d20c      	movi.n	a2, 13
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2158
    {
        HAL_NfcSetErrInj(pNFCQEntry, pRdReq->pErrInj);
    }

    /*  NFCQ DW3: DMA message, total data length  */
    pNFCQEntry->bsDmaTotalLength = pRdReq->bsSecLen;
400a6406:	0c4d02        	s8i	a0, a13, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2160
    /*  PRCQ start DW   */
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_CCLR);
400a6409:	f15101        	l32r	a0, 400a2950 <_mcu2dram_text_start+0x150>
400a640c:	0000c0        	callx0	a0
400a640f:	3d58      	l32i.n	a5, a13, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2163

    /*  NFCQ DW4: red and scramble   */
    if (NULL != pRdReq->ppNfcRed)
400a6411:	5c48      	l32i.n	a4, a12, 20
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2160
    }

    /*  NFCQ DW3: DMA message, total data length  */
    pNFCQEntry->bsDmaTotalLength = pRdReq->bsSecLen;
    /*  PRCQ start DW   */
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_CCLR);
400a6413:	808254        	insbits	a5, a2, 8, 16
400a6416:	3d59      	s32i.n	a5, a13, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2163

    /*  NFCQ DW4: red and scramble   */
    if (NULL != pRdReq->ppNfcRed)
400a6418:	055416        	beqz	a4, 400a6471 <HAL_NfcSinglePlnCCLRead+0x125>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2167
    {
        pNFCQEntry->bsRedEn = TRUE;
        pNFCQEntry->bsRedOntf = pRdReq->bsRedOntf;
        pNFCQEntry->bsRedAddr = HAL_NfcGetRedRelativeAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPln,pRdReq->bsRedOntf);
400a641b:	1128      	l32i.n	a2, a1, 4
400a641d:	0f3d      	mov.n	a3, a15
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2166

    /*  NFCQ DW4: red and scramble   */
    if (NULL != pRdReq->ppNfcRed)
    {
        pNFCQEntry->bsRedEn = TRUE;
        pNFCQEntry->bsRedOntf = pRdReq->bsRedOntf;
400a641f:	1c78      	l32i.n	a7, a12, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2165
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_CCLR);

    /*  NFCQ DW4: red and scramble   */
    if (NULL != pRdReq->ppNfcRed)
    {
        pNFCQEntry->bsRedEn = TRUE;
400a6421:	4d68      	l32i.n	a6, a13, 16
400a6423:	280c      	movi.n	a8, 2
400a6425:	206680        	or	a6, a6, a8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2166
        pNFCQEntry->bsRedOntf = pRdReq->bsRedOntf;
400a6428:	000764        	insbits	a6, a7, 0, 0
400a642b:	046d62        	s32i	a6, a13, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2167
        pNFCQEntry->bsRedAddr = HAL_NfcGetRedRelativeAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPln,pRdReq->bsRedOntf);
400a642e:	f18b01        	l32r	a0, 400a2a5c <_mcu2dram_text_start+0x25c>
400a6431:	0000c0        	callx0	a0
400a6434:	0f3d      	mov.n	a3, a15
400a6436:	4158      	l32i.n	a5, a1, 16
400a6438:	024d      	mov.n	a4, a2
400a643a:	1c68      	l32i.n	a6, a12, 4
400a643c:	012122        	l32i	a2, a1, 4
400a643f:	046060        	extui	a6, a6, 0, 1
400a6442:	f18a01        	l32r	a0, 400a2a6c <_mcu2dram_text_start+0x26c>
400a6445:	0000c0        	callx0	a0
400a6448:	4d78      	l32i.n	a7, a13, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2168
        *(pRdReq->ppNfcRed) = (NFC_RED*)HAL_NfcGetRedAbsoulteAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPln,(pRdReq->bsRedOntf));
400a644a:	0f3d      	mov.n	a3, a15
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2167
    /*  NFCQ DW4: red and scramble   */
    if (NULL != pRdReq->ppNfcRed)
    {
        pNFCQEntry->bsRedEn = TRUE;
        pNFCQEntry->bsRedOntf = pRdReq->bsRedOntf;
        pNFCQEntry->bsRedAddr = HAL_NfcGetRedRelativeAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPln,pRdReq->bsRedOntf);
400a644c:	833274        	insbits	a7, a2, 3, 19
400a644f:	4d79      	s32i.n	a7, a13, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2168
        *(pRdReq->ppNfcRed) = (NFC_RED*)HAL_NfcGetRedAbsoulteAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPln,(pRdReq->bsRedOntf));
400a6451:	1128      	l32i.n	a2, a1, 4
400a6453:	f18201        	l32r	a0, 400a2a5c <_mcu2dram_text_start+0x25c>
400a6456:	0000c0        	callx0	a0
400a6459:	0f3d      	mov.n	a3, a15
400a645b:	4158      	l32i.n	a5, a1, 16
400a645d:	024d      	mov.n	a4, a2
400a645f:	1c68      	l32i.n	a6, a12, 4
400a6461:	012122        	l32i	a2, a1, 4
400a6464:	046060        	extui	a6, a6, 0, 1
400a6467:	f18201        	l32r	a0, 400a2a70 <_mcu2dram_text_start+0x270>
400a646a:	0000c0        	callx0	a0
400a646d:	5c78      	l32i.n	a7, a12, 20
400a646f:	0729      	s32i.n	a2, a7, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2170
    }
    HAL_ConfigScramble(pNFCQEntry, pFlashAddr->usPage, SCR_SINGLE_PLN, ucPageType, eScrType);
400a6471:	0d2d      	mov.n	a2, a13
400a6473:	031e32        	l16ui	a3, a14, 6
400a6476:	040c      	movi.n	a4, 0
400a6478:	022152        	l32i	a5, a1, 8
400a647b:	032162        	l32i	a6, a1, 12
400a647e:	f17d01        	l32r	a0, 400a2a74 <_mcu2dram_text_start+0x274>
400a6481:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2173

    /*  NFCQ DW5: LBA for read, fill by FW, the same with corresponding LBA in write red   */
    if (pRdReq->bsLbaChkEn || pRdReq->bsEmEn)
400a6484:	1c28      	l32i.n	a2, a12, 4
400a6486:	2c08      	l32i.n	a0, a12, 8
400a6488:	02e217        	bbsi	a2, 1, 400a648e <HAL_NfcSinglePlnCCLRead+0x142>
400a648b:	0a7057        	bbci	a0, 21, 400a6499 <HAL_NfcSinglePlnCCLRead+0x14d>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2175
    {
        pNFCQEntry->bsRdLba = pRdReq->bsLba;
400a648e:	5d88      	l32i.n	a8, a13, 20
400a6490:	419220        	srli	a9, a2, 2
400a6493:	e33984        	insbits	a8, a9, 3, 31
400a6496:	056d82        	s32i	a8, a13, 20
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2179
    }

    /* DEC FIFO status report config */
    if (FALSE != pRdReq->bsDecFifoEn)
400a6499:	74e077        	bbsi	a0, 7, 400a6511 <HAL_NfcSinglePlnCCLRead+0x1c5>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2185
    {
        HAL_DecFifoTrigNfc(pNFCQEntry, pRdReq->bsDecFifoIndex);
    }
    
    /*  NFCQ DW8-15: flash address  */
    pNFCQEntry->atRowAddr[0].bsRowAddr = HAL_NfcGetFlashRowAddr(pFlashAddr);
400a649c:	0e2d      	mov.n	a2, a14
400a649e:	f12b01        	l32r	a0, 400a294c <_mcu2dram_text_start+0x14c>
400a64a1:	0000c0        	callx0	a0
400a64a4:	082da2        	l32i	a10, a13, 32
400a64a7:	e102a4        	insbits	a10, a2, 0, 29
400a64aa:	086da2        	s32i	a10, a13, 32
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2188

    /*  CONFIGURE DSG   */
    pDSG = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(usCurDsgId);
400a64ad:	001122        	l16ui	a2, a1, 0
400a64b0:	f17501        	l32r	a0, 400a2a84 <_mcu2dram_text_start+0x284>
400a64b3:	0000c0        	callx0	a0
400a64b6:	02dd      	mov.n	a13, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2189
    COM_MemZero((U32*)pDSG,sizeof(NORMAL_DSG_ENTRY)>>2);
400a64b8:	430c      	movi.n	a3, 4
400a64ba:	f12301        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a64bd:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2194
    /*  DSG DW0: transfer length and chain config  */
    pDSG->bsXferByteLen = (pRdReq->bsSecLen) << SEC_SZ_BITS ;
    pDSG->bsLast = TRUE;
    /*  DSG DW1: dram address  */
    pDSG->bsDramAddr =  HAL_NfcGetDmaAddr(pRdReq->bsRdBuffId, pRdReq->bsSecStart, LOGIC_PG_SZ_BITS);
400a64c0:	011c22        	l16ui	a2, a12, 2
400a64c3:	000c32        	l8ui	a3, a12, 0
400a64c6:	e40c      	movi.n	a4, 14
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2192
    /*  CONFIGURE DSG   */
    pDSG = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(usCurDsgId);
    COM_MemZero((U32*)pDSG,sizeof(NORMAL_DSG_ENTRY)>>2);
    /*  DSG DW0: transfer length and chain config  */
    pDSG->bsXferByteLen = (pRdReq->bsSecLen) << SEC_SZ_BITS ;
    pDSG->bsLast = TRUE;
400a64c8:	00a2f2        	movi	a15, 0x200
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2191

    /*  CONFIGURE DSG   */
    pDSG = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(usCurDsgId);
    COM_MemZero((U32*)pDSG,sizeof(NORMAL_DSG_ENTRY)>>2);
    /*  DSG DW0: transfer length and chain config  */
    pDSG->bsXferByteLen = (pRdReq->bsSecLen) << SEC_SZ_BITS ;
400a64cb:	0db8      	l32i.n	a11, a13, 0
400a64cd:	010c02        	l8ui	a0, a12, 1
400a64d0:	d4b0b0        	extui	a11, a11, 0, 14
400a64d3:	f270b4        	insbits	a11, a0, 23, 30
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2192
    pDSG->bsLast = TRUE;
400a64d6:	20bbf0        	or	a11, a11, a15
400a64d9:	0db9      	s32i.n	a11, a13, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2194
    /*  DSG DW1: dram address  */
    pDSG->bsDramAddr =  HAL_NfcGetDmaAddr(pRdReq->bsRdBuffId, pRdReq->bsSecStart, LOGIC_PG_SZ_BITS);
400a64db:	f16b01        	l32r	a0, 400a2a88 <_mcu2dram_text_start+0x288>
400a64de:	0000c0        	callx0	a0
400a64e1:	1dc8      	l32i.n	a12, a13, 4
400a64e3:	e312c4        	insbits	a12, a2, 1, 31
400a64e6:	1dc9      	s32i.n	a12, a13, 4
400a64e8:	001122        	l16ui	a2, a1, 0
400a64eb:	f16801        	l32r	a0, 400a2a8c <_mcu2dram_text_start+0x28c>
400a64ee:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2199
    /*  Set DSG valid    */
    HAL_SetNormalDsgSts(usCurDsgId, NORMAL_DSG_VALID);

    /*  Trigger NFC    */
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_CCLR, FALSE, INVALID_2F);
400a64f1:	0e2d      	mov.n	a2, a14
400a64f3:	d30c      	movi.n	a3, 13
400a64f5:	040c      	movi.n	a4, 0
400a64f7:	ffa052        	movi	a5, 255
400a64fa:	f11601        	l32r	a0, 400a2954 <_mcu2dram_text_start+0x154>
400a64fd:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2201

    return NFC_STATUS_SUCCESS;
400a6500:	120c      	movi.n	a2, 1
400a6502:	61c8      	l32i.n	a12, a1, 24
400a6504:	71d8      	l32i.n	a13, a1, 28
400a6506:	81e8      	l32i.n	a14, a1, 32
400a6508:	91f8      	l32i.n	a15, a1, 36
400a650a:	5108      	l32i.n	a0, a1, 20
400a650c:	30c112        	addi	a1, a1, 48
400a650f:	f00d      	ret.n

400a6511 <HAL_NfcSinglePlnCCLRead+0x1c5>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2181
    }

    /* DEC FIFO status report config */
    if (FALSE != pRdReq->bsDecFifoEn)
    {
        HAL_DecFifoTrigNfc(pNFCQEntry, pRdReq->bsDecFifoIndex);
400a6511:	0d2d      	mov.n	a2, a13
400a6513:	090c32        	l8ui	a3, a12, 9
400a6516:	f15801        	l32r	a0, 400a2a78 <_mcu2dram_text_start+0x278>
400a6519:	0000c0        	callx0	a0
400a651c:	ffdf06        	j	400a649c <HAL_NfcSinglePlnCCLRead+0x150>

400a651f <HAL_NfcSinglePlnCCLRead+0x1d3>:
400a651f:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2140
    pNFCQEntry->bsDCrcEn  = FALSE;
    pNFCQEntry->bsDsIndex = DS_ENTRY_SEL;
    pNFCQEntry->bsEMEn    = pRdReq->bsEmEn;

    /*  DSG configure   */
    while(FALSE == HAL_GetNormalDsg(&usCurDsgId))
400a6521:	f15701        	l32r	a0, 400a2a80 <_mcu2dram_text_start+0x280>
400a6524:	0000c0        	callx0	a0
400a6527:	ff4216        	beqz	a2, 400a651f <HAL_NfcSinglePlnCCLRead+0x1d3>
400a652a:	ffa886        	j	400a63d0 <HAL_NfcSinglePlnCCLRead+0x84>

400a652d <HAL_NfcSinglePlnCCLRead+0x1e1>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2108
    ucLun  = pFlashAddr->ucLun;
    ucPln  = pFlashAddr->bsPln;
    
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
    {
        return NFC_STATUS_FAIL;
400a652d:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2201
    HAL_SetNormalDsgSts(usCurDsgId, NORMAL_DSG_VALID);

    /*  Trigger NFC    */
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_CCLR, FALSE, INVALID_2F);

    return NFC_STATUS_SUCCESS;
400a652f:	61c8      	l32i.n	a12, a1, 24
400a6531:	71d8      	l32i.n	a13, a1, 28
400a6533:	81e8      	l32i.n	a14, a1, 32
400a6535:	91f8      	l32i.n	a15, a1, 36
400a6537:	5108      	l32i.n	a0, a1, 20
400a6539:	30c112        	addi	a1, a1, 48
400a653c:	f00d      	ret.n

400a653e <HAL_NfcSinglePlnCCLRead+0x1f2>:
	...

400a6540 <HAL_NfcHostPageRead>:
HAL_NfcHostPageRead():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2196
    20140918    Gavin   add header for this function
    20151106    abby    modify to meet VT3533, dynamic update RED to OTFB/DRAM
    20160416    abby    add 3D MLC support
------------------------------------------------------------------------------*/
U32 MCU2_DRAM_TEXT HAL_NfcHostPageRead(FLASH_ADDR *pFlashAddr, U8 ucCmdTag, U16 usFirstHSGId, NFC_READ_REQ_DES *pRdReq)
{
400a6540:	d0c112        	addi	a1, a1, -48
400a6543:	4109      	s32i.n	a0, a1, 16
400a6545:	81f9      	s32i.n	a15, a1, 32
400a6547:	71e9      	s32i.n	a14, a1, 28
400a6549:	61d9      	s32i.n	a13, a1, 24
400a654b:	51c9      	s32i.n	a12, a1, 20
400a654d:	03dd      	mov.n	a13, a3
400a654f:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2205
    NFCQ_ENTRY *pNFCQEntry;
    NFC_SCR_CONF eScrType = NORMAL_SCR;
    BOOL bIsRedOntf = pRdReq->bsRedOntf;

    ucPU  = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
400a6551:	010ce2        	l8ui	a14, a12, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2204
    U16 usPage;
    NFCQ_ENTRY *pNFCQEntry;
    NFC_SCR_CONF eScrType = NORMAL_SCR;
    BOOL bIsRedOntf = pRdReq->bsRedOntf;

    ucPU  = pFlashAddr->ucPU;
400a6554:	000cf2        	l8ui	a15, a12, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2202
    U8  ucPU, ucLun, ucPln, ucReqType;
    U8  ucPageType = 0;
    U16 usPage;
    NFCQ_ENTRY *pNFCQEntry;
    NFC_SCR_CONF eScrType = NORMAL_SCR;
    BOOL bIsRedOntf = pRdReq->bsRedOntf;
400a6557:	1338      	l32i.n	a3, a3, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2206

    ucPU  = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
    ucPln = pFlashAddr->bsPln;
400a6559:	0228      	l32i.n	a2, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2202
    U8  ucPU, ucLun, ucPln, ucReqType;
    U8  ucPageType = 0;
    U16 usPage;
    NFCQ_ENTRY *pNFCQEntry;
    NFC_SCR_CONF eScrType = NORMAL_SCR;
    BOOL bIsRedOntf = pRdReq->bsRedOntf;
400a655b:	043030        	extui	a3, a3, 0, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2206

    ucPU  = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
    ucPln = pFlashAddr->bsPln;
400a655e:	352020        	extui	a2, a2, 16, 4
400a6561:	9129      	s32i.n	a2, a1, 36
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2202
    U8  ucPU, ucLun, ucPln, ucReqType;
    U8  ucPageType = 0;
    U16 usPage;
    NFCQ_ENTRY *pNFCQEntry;
    NFC_SCR_CONF eScrType = NORMAL_SCR;
    BOOL bIsRedOntf = pRdReq->bsRedOntf;
400a6563:	a139      	s32i.n	a3, a1, 40
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2209
    ucPU  = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
    ucPln = pFlashAddr->bsPln;
    usPage = pFlashAddr->usPage;
    
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a6565:	0f2d      	mov.n	a2, a15
400a6567:	203ee0        	or	a3, a14, a14
400a656a:	f0f501        	l32r	a0, 400a2940 <_mcu2dram_text_start+0x140>
400a656d:	0000c0        	callx0	a0
400a6570:	1a6216        	beqz	a2, 400a671a <HAL_NfcHostPageRead+0x1da>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2214
    {
        return NFC_STATUS_FAIL;
    }

    if (TRUE == HAL_SgqIsBusy(ucPU, ucLun))
400a6573:	0f2d      	mov.n	a2, a15
400a6575:	0e3d      	mov.n	a3, a14
400a6577:	f14701        	l32r	a0, 400a2a94 <_mcu2dram_text_start+0x294>
400a657a:	0000c0        	callx0	a0
400a657d:	420b      	addi.n	a4, a2, -1
400a657f:	197416        	beqz	a4, 400a671a <HAL_NfcHostPageRead+0x1da>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2222
    }

    /* adapter for different flash type */
    ucReqType   = NF_PRCQ_READ_MULTIPLN;

    if(FALSE != pRdReq->bsTlcMode)//TLC
400a6582:	2d08      	l32i.n	a0, a13, 8
400a6584:	01c9      	s32i.n	a12, a1, 0
400a6586:	206067        	bbci	a0, 6, 400a65aa <HAL_NfcHostPageRead+0x6a>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2226
    {
        ucPageType = pRdReq->bsTlcPgType;
        ucReqType  = NF_PRCQ_TLC_READ_LP_MULTIPLN + ucPageType;
        ucPln      = pFlashAddr->bsPln + (ucPageType * PLN_PER_LUN);
400a6589:	0c78      	l32i.n	a7, a12, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2224
    /* adapter for different flash type */
    ucReqType   = NF_PRCQ_READ_MULTIPLN;

    if(FALSE != pRdReq->bsTlcMode)//TLC
    {
        ucPageType = pRdReq->bsTlcPgType;
400a658b:	146400        	extui	a6, a0, 4, 2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2226
        ucReqType  = NF_PRCQ_TLC_READ_LP_MULTIPLN + ucPageType;
        ucPln      = pFlashAddr->bsPln + (ucPageType * PLN_PER_LUN);
400a658e:	250c      	movi.n	a5, 2
400a6590:	2159      	s32i.n	a5, a1, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2224
    /* adapter for different flash type */
    ucReqType   = NF_PRCQ_READ_MULTIPLN;

    if(FALSE != pRdReq->bsTlcMode)//TLC
    {
        ucPageType = pRdReq->bsTlcPgType;
400a6592:	1169      	s32i.n	a6, a1, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2225
        ucReqType  = NF_PRCQ_TLC_READ_LP_MULTIPLN + ucPageType;
400a6594:	12c682        	addi	a8, a6, 18
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2226
        ucPln      = pFlashAddr->bsPln + (ucPageType * PLN_PER_LUN);
400a6597:	357070        	extui	a7, a7, 16, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2225
    ucReqType   = NF_PRCQ_READ_MULTIPLN;

    if(FALSE != pRdReq->bsTlcMode)//TLC
    {
        ucPageType = pRdReq->bsTlcPgType;
        ucReqType  = NF_PRCQ_TLC_READ_LP_MULTIPLN + ucPageType;
400a659a:	748080        	extui	a8, a8, 0, 8
400a659d:	3189      	s32i.n	a8, a1, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2226
        ucPln      = pFlashAddr->bsPln + (ucPageType * PLN_PER_LUN);
400a659f:	a06670        	addx4	a6, a6, a7
400a65a2:	746060        	extui	a6, a6, 0, 8
400a65a5:	9169      	s32i.n	a6, a1, 36
400a65a7:	0002c6        	j	400a65b6 <HAL_NfcHostPageRead+0x76>

400a65aa <HAL_NfcHostPageRead+0x6a>:
400a65aa:	090c      	movi.n	a9, 0
400a65ac:	0a0c      	movi.n	a10, 0
400a65ae:	fb0c      	movi.n	a11, 15
400a65b0:	31b9      	s32i.n	a11, a1, 12
400a65b2:	21a9      	s32i.n	a10, a1, 8
400a65b4:	1199      	s32i.n	a9, a1, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2231
        eScrType   = TLC_RD_ONE_PG;
    }

    /*  CONFIGURE NFCQ   */
    pNFCQEntry = (NFCQ_ENTRY *)HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
400a65b6:	0f2d      	mov.n	a2, a15
400a65b8:	0e3d      	mov.n	a3, a14
400a65ba:	f0e201        	l32r	a0, 400a2944 <_mcu2dram_text_start+0x144>
400a65bd:	0000c0        	callx0	a0
400a65c0:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2232
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);
400a65c2:	031c      	movi.n	a3, 16
400a65c4:	f0e101        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a65c7:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2237

    /*  NFCQ DW0: mode configure   */
    pNFCQEntry->bsDCrcEn  = FALSE;
    pNFCQEntry->bsDsIndex = DS_ENTRY_SEL;
    pNFCQEntry->bsEMEn    = pRdReq->bsEmEn;
400a65ca:	2d28      	l32i.n	a2, a13, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2241

    /*  NFCQ DW1: sector enable and length   */
    pNFCQEntry->aSecAddr[0].bsSecStart = pRdReq->bsSecStart;
    pNFCQEntry->aSecAddr[0].bsSecLength = pRdReq->bsSecLen;
400a65cc:	010d02        	l8ui	a0, a13, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2235
    /*  CONFIGURE NFCQ   */
    pNFCQEntry = (NFCQ_ENTRY *)HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    /*  NFCQ DW0: mode configure   */
    pNFCQEntry->bsDCrcEn  = FALSE;
400a65cf:	f46c      	movi.n	a4, -17
400a65d1:	0c38      	l32i.n	a3, a12, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2240
    pNFCQEntry->bsDsIndex = DS_ENTRY_SEL;
    pNFCQEntry->bsEMEn    = pRdReq->bsEmEn;

    /*  NFCQ DW1: sector enable and length   */
    pNFCQEntry->aSecAddr[0].bsSecStart = pRdReq->bsSecStart;
400a65d3:	000d52        	l8ui	a5, a13, 0
400a65d6:	054c52        	s8i	a5, a12, 5
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2235
    /*  CONFIGURE NFCQ   */
    pNFCQEntry = (NFCQ_ENTRY *)HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    /*  NFCQ DW0: mode configure   */
    pNFCQEntry->bsDCrcEn  = FALSE;
400a65d9:	103340        	and	a3, a3, a4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2236
    pNFCQEntry->bsDsIndex = DS_ENTRY_SEL;
400a65dc:	f12241        	l32r	a4, 400a2a64 <_mcu2dram_text_start+0x264>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2241
    pNFCQEntry->bsEMEn    = pRdReq->bsEmEn;

    /*  NFCQ DW1: sector enable and length   */
    pNFCQEntry->aSecAddr[0].bsSecStart = pRdReq->bsSecStart;
    pNFCQEntry->aSecAddr[0].bsSecLength = pRdReq->bsSecLen;
400a65df:	044c02        	s8i	a0, a12, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2236
    pNFCQEntry = (NFCQ_ENTRY *)HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    /*  NFCQ DW0: mode configure   */
    pNFCQEntry->bsDCrcEn  = FALSE;
    pNFCQEntry->bsDsIndex = DS_ENTRY_SEL;
400a65e2:	103340        	and	a3, a3, a4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2237
    pNFCQEntry->bsEMEn    = pRdReq->bsEmEn;
400a65e5:	a54520        	extui	a4, a2, 21, 11
400a65e8:	226434        	insbits	a3, a4, 6, 6
400a65eb:	006c32        	s32i	a3, a12, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2244
    /*  NFCQ DW1: sector enable and length   */
    pNFCQEntry->aSecAddr[0].bsSecStart = pRdReq->bsSecStart;
    pNFCQEntry->aSecAddr[0].bsSecLength = pRdReq->bsSecLen;

    /*  NFCQ DW2: error injection  */
    if (FALSE != pRdReq->bsInjErrEn)
400a65ee:	0e7217        	bbci	a2, 17, 400a6600 <HAL_NfcHostPageRead+0xc0>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2246
    {
        HAL_NfcSetErrInj(pNFCQEntry, pRdReq->pErrInj);
400a65f1:	202cc0        	or	a2, a12, a12
400a65f4:	062d32        	l32i	a3, a13, 24
400a65f7:	f11c01        	l32r	a0, 400a2a68 <_mcu2dram_text_start+0x268>
400a65fa:	0000c0        	callx0	a0
400a65fd:	010d02        	l8ui	a0, a13, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2252
    }

    /*  NFCQ DW3: DMA message, total data length  */
    pNFCQEntry->bsDmaTotalLength = pRdReq->bsSecLen;
    /*  PRCQ start DW   */
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a6600:	3128      	l32i.n	a2, a1, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2250
    {
        HAL_NfcSetErrInj(pNFCQEntry, pRdReq->pErrInj);
    }

    /*  NFCQ DW3: DMA message, total data length  */
    pNFCQEntry->bsDmaTotalLength = pRdReq->bsSecLen;
400a6602:	0c4c02        	s8i	a0, a12, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2252
    /*  PRCQ start DW   */
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a6605:	f0d201        	l32r	a0, 400a2950 <_mcu2dram_text_start+0x150>
400a6608:	0000c0        	callx0	a0
400a660b:	3c78      	l32i.n	a7, a12, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2255

    /*  NFCQ DW4: red and scramble   */
    if (NULL != pRdReq->ppNfcRed)
400a660d:	5d68      	l32i.n	a6, a13, 20
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2252
    }

    /*  NFCQ DW3: DMA message, total data length  */
    pNFCQEntry->bsDmaTotalLength = pRdReq->bsSecLen;
    /*  PRCQ start DW   */
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a660f:	808274        	insbits	a7, a2, 8, 16
400a6612:	3c79      	s32i.n	a7, a12, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2255

    /*  NFCQ DW4: red and scramble   */
    if (NULL != pRdReq->ppNfcRed)
400a6614:	04d616        	beqz	a6, 400a6665 <HAL_NfcHostPageRead+0x125>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2257
    {
        pNFCQEntry->bsRedEn = TRUE;
400a6617:	290c      	movi.n	a9, 2
400a6619:	4c88      	l32i.n	a8, a12, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2259
        pNFCQEntry->bsRedOntf = bIsRedOntf;
        pNFCQEntry->bsRedAddr = HAL_NfcGetRedRelativeAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPln,bIsRedOntf);
400a661b:	0f2d      	mov.n	a2, a15
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2257
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);

    /*  NFCQ DW4: red and scramble   */
    if (NULL != pRdReq->ppNfcRed)
    {
        pNFCQEntry->bsRedEn = TRUE;
400a661d:	208890        	or	a8, a8, a9
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2258
        pNFCQEntry->bsRedOntf = bIsRedOntf;
400a6620:	a198      	l32i.n	a9, a1, 40
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2259
        pNFCQEntry->bsRedAddr = HAL_NfcGetRedRelativeAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPln,bIsRedOntf);
400a6622:	0e3d      	mov.n	a3, a14
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2258

    /*  NFCQ DW4: red and scramble   */
    if (NULL != pRdReq->ppNfcRed)
    {
        pNFCQEntry->bsRedEn = TRUE;
        pNFCQEntry->bsRedOntf = bIsRedOntf;
400a6624:	000984        	insbits	a8, a9, 0, 0
400a6627:	046c82        	s32i	a8, a12, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2259
        pNFCQEntry->bsRedAddr = HAL_NfcGetRedRelativeAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPln,bIsRedOntf);
400a662a:	f10c01        	l32r	a0, 400a2a5c <_mcu2dram_text_start+0x25c>
400a662d:	0000c0        	callx0	a0
400a6630:	0e3d      	mov.n	a3, a14
400a6632:	9158      	l32i.n	a5, a1, 36
400a6634:	024d      	mov.n	a4, a2
400a6636:	a168      	l32i.n	a6, a1, 40
400a6638:	0f2d      	mov.n	a2, a15
400a663a:	f10c01        	l32r	a0, 400a2a6c <_mcu2dram_text_start+0x26c>
400a663d:	0000c0        	callx0	a0
400a6640:	4ca8      	l32i.n	a10, a12, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2260
        *(pRdReq->ppNfcRed) = (NFC_RED*)HAL_NfcGetRedAbsoulteAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPln,bIsRedOntf);
400a6642:	0e3d      	mov.n	a3, a14
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2259
    /*  NFCQ DW4: red and scramble   */
    if (NULL != pRdReq->ppNfcRed)
    {
        pNFCQEntry->bsRedEn = TRUE;
        pNFCQEntry->bsRedOntf = bIsRedOntf;
        pNFCQEntry->bsRedAddr = HAL_NfcGetRedRelativeAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPln,bIsRedOntf);
400a6644:	8332a4        	insbits	a10, a2, 3, 19
400a6647:	4ca9      	s32i.n	a10, a12, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2260
        *(pRdReq->ppNfcRed) = (NFC_RED*)HAL_NfcGetRedAbsoulteAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPln,bIsRedOntf);
400a6649:	0f2d      	mov.n	a2, a15
400a664b:	f10401        	l32r	a0, 400a2a5c <_mcu2dram_text_start+0x25c>
400a664e:	0000c0        	callx0	a0
400a6651:	0e3d      	mov.n	a3, a14
400a6653:	9158      	l32i.n	a5, a1, 36
400a6655:	024d      	mov.n	a4, a2
400a6657:	a168      	l32i.n	a6, a1, 40
400a6659:	0f2d      	mov.n	a2, a15
400a665b:	f10501        	l32r	a0, 400a2a70 <_mcu2dram_text_start+0x270>
400a665e:	0000c0        	callx0	a0
400a6661:	5db8      	l32i.n	a11, a13, 20
400a6663:	0b29      	s32i.n	a2, a11, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2262
    }
    HAL_ConfigScramble(pNFCQEntry, pFlashAddr->usPage, SCR_FULL_PLN, ucPageType, eScrType);
400a6665:	0c2d      	mov.n	a2, a12
400a6667:	240c      	movi.n	a4, 2
400a6669:	1158      	l32i.n	a5, a1, 4
400a666b:	0138      	l32i.n	a3, a1, 0
400a666d:	2168      	l32i.n	a6, a1, 8
400a666f:	031332        	l16ui	a3, a3, 6
400a6672:	f10001        	l32r	a0, 400a2a74 <_mcu2dram_text_start+0x274>
400a6675:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2265
    
    /* Raw data read = true, each CW 2K align */
    pNFCQEntry->bsRawReadEn = pRdReq->bsRawData;
400a6678:	2d08      	l32i.n	a0, a13, 8
400a667a:	4c48      	l32i.n	a4, a12, 16
400a667c:	f55000        	extui	a5, a0, 16, 16
400a667f:	b04544        	insbits	a4, a5, 20, 20
400a6682:	4c49      	s32i.n	a4, a12, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2268

    /* DEC FIFO status report config */
    if (FALSE != pRdReq->bsDecFifoEn)
400a6684:	0a6077        	bbci	a0, 7, 400a6692 <HAL_NfcHostPageRead+0x152>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2270
    {
        HAL_DecFifoTrigNfc(pNFCQEntry, pRdReq->bsDecFifoIndex);
400a6687:	0c2d      	mov.n	a2, a12
400a6689:	743800        	extui	a3, a0, 8, 8
400a668c:	f0fb01        	l32r	a0, 400a2a78 <_mcu2dram_text_start+0x278>
400a668f:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2274
    }
    
    //set raw command queue
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a6692:	3128      	l32i.n	a2, a1, 12
400a6694:	f0af01        	l32r	a0, 400a2950 <_mcu2dram_text_start+0x150>
400a6697:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2283

    pNFCQEntry->bsOntfEn = TRUE;// MixVector use OTFB write mode,so this bit should enable
    pNFCQEntry->bsNcqNum = ucCmdTag;

    /*  NFCQ DW5: LBA for read, fill by FW, the same with corresponding LBA in write red   */
    if (pRdReq->bsLbaChkEn || pRdReq->bsEmEn)
400a669a:	2d08      	l32i.n	a0, a13, 8
400a669c:	1d48      	l32i.n	a4, a13, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2274
    {
        HAL_DecFifoTrigNfc(pNFCQEntry, pRdReq->bsDecFifoIndex);
    }
    
    //set raw command queue
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a669e:	3c88      	l32i.n	a8, a12, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2276
    //inform this is host request
    pNFCQEntry->bsTrigOmEn = TRUE;
400a66a0:	0c68      	l32i.n	a6, a12, 0
400a66a2:	00a472        	movi	a7, 0x400
400a66a5:	206670        	or	a6, a6, a7
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2274
    {
        HAL_DecFifoTrigNfc(pNFCQEntry, pRdReq->bsDecFifoIndex);
    }
    
    //set raw command queue
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a66a8:	808284        	insbits	a8, a2, 8, 16
400a66ab:	3c89      	s32i.n	a8, a12, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2277
    //inform this is host request
    pNFCQEntry->bsTrigOmEn = TRUE;
    pNFCQEntry->bsDsgEn = FALSE;
400a66ad:	7faf72        	movi	a7, -129
400a66b0:	106670        	and	a6, a6, a7
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2279

    pNFCQEntry->bsOntfEn = TRUE;// MixVector use OTFB write mode,so this bit should enable
400a66b3:	180c      	movi.n	a8, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2280
    pNFCQEntry->bsNcqNum = ucCmdTag;
400a66b5:	f0f671        	l32r	a7, 400a2a90 <_mcu2dram_text_start+0x290>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2279
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
    //inform this is host request
    pNFCQEntry->bsTrigOmEn = TRUE;
    pNFCQEntry->bsDsgEn = FALSE;

    pNFCQEntry->bsOntfEn = TRUE;// MixVector use OTFB write mode,so this bit should enable
400a66b8:	206680        	or	a6, a6, a8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2280
    pNFCQEntry->bsNcqNum = ucCmdTag;
400a66bb:	106670        	and	a6, a6, a7
400a66be:	0c69      	s32i.n	a6, a12, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2283

    /*  NFCQ DW5: LBA for read, fill by FW, the same with corresponding LBA in write red   */
    if (pRdReq->bsLbaChkEn || pRdReq->bsEmEn)
400a66c0:	02e417        	bbsi	a4, 1, 400a66c6 <HAL_NfcHostPageRead+0x186>
400a66c3:	097057        	bbci	a0, 21, 400a66d0 <HAL_NfcHostPageRead+0x190>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2285
    {
        pNFCQEntry->bsRdLba = pRdReq->bsLba;
400a66c6:	5c98      	l32i.n	a9, a12, 20
400a66c8:	41a240        	srli	a10, a4, 2
400a66cb:	e33a94        	insbits	a9, a10, 3, 31
400a66ce:	5c99      	s32i.n	a9, a12, 20
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2289
    }

    /*  NFCQ DW6-7: SSU 0 and SSU 1   */
    if(FALSE != pRdReq->bsSsu0En)
400a66d0:	5ae007        	bbsi	a0, 0, 400a672e <HAL_NfcHostPageRead+0x1ee>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2293
    {
        HAL_ConfigSsu0(pNFCQEntry, pRdReq->bsSsu0Addr, pRdReq->bsSsu0Ontf);
    }
    if(FALSE != pRdReq->bsSsu1En)
400a66d3:	6ae027        	bbsi	a0, 2, 400a6741 <HAL_NfcHostPageRead+0x201>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2299
    {
        HAL_ConfigSsu1(pNFCQEntry, pRdReq->bsSsu1Addr, pRdReq->bsSsu1Ontf);
    }
    
    /*  NFCQ DW8-15: flash address  */
    HAL_NfcSetFullPageRowAddr(pNFCQEntry, pFlashAddr, FALSE);
400a66d6:	0c2d      	mov.n	a2, a12
400a66d8:	0138      	l32i.n	a3, a1, 0
400a66da:	040c      	movi.n	a4, 0
400a66dc:	31d8      	l32i.n	a13, a1, 12
400a66de:	f0e701        	l32r	a0, 400a2a7c <_mcu2dram_text_start+0x27c>
400a66e1:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2303

    //fill SGQ
    g_pNfcqForHalDebug = pNFCQEntry;
    HAL_SgqBuildEntry(ucCmdTag, usFirstHSGId, ucPU, ucLun, FALSE);
400a66e4:	0f4d      	mov.n	a4, a15
400a66e6:	0e5d      	mov.n	a5, a14
400a66e8:	020c      	movi.n	a2, 0
400a66ea:	030c      	movi.n	a3, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2302
    
    /*  NFCQ DW8-15: flash address  */
    HAL_NfcSetFullPageRowAddr(pNFCQEntry, pFlashAddr, FALSE);

    //fill SGQ
    g_pNfcqForHalDebug = pNFCQEntry;
400a66ec:	f054b1        	l32r	a11, 400a283c <_mcu2dram_text_start+0x3c>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2303
    HAL_SgqBuildEntry(ucCmdTag, usFirstHSGId, ucPU, ucLun, FALSE);
400a66ef:	060c      	movi.n	a6, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2302
    
    /*  NFCQ DW8-15: flash address  */
    HAL_NfcSetFullPageRowAddr(pNFCQEntry, pFlashAddr, FALSE);

    //fill SGQ
    g_pNfcqForHalDebug = pNFCQEntry;
400a66f1:	4b6bc2        	s32i	a12, a11, 0x12c
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2303
    HAL_SgqBuildEntry(ucCmdTag, usFirstHSGId, ucPU, ucLun, FALSE);
400a66f4:	f0e901        	l32r	a0, 400a2a98 <_mcu2dram_text_start+0x298>
400a66f7:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2306

    //trigger command
    HAL_NfcCmdTrigger(pFlashAddr, ucReqType, FALSE, INVALID_2F);
400a66fa:	0128      	l32i.n	a2, a1, 0
400a66fc:	040c      	movi.n	a4, 0
400a66fe:	ffa052        	movi	a5, 255
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2308

    return NFC_STATUS_SUCCESS;
400a6701:	51c8      	l32i.n	a12, a1, 20
400a6703:	71e8      	l32i.n	a14, a1, 28
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2306
    //fill SGQ
    g_pNfcqForHalDebug = pNFCQEntry;
    HAL_SgqBuildEntry(ucCmdTag, usFirstHSGId, ucPU, ucLun, FALSE);

    //trigger command
    HAL_NfcCmdTrigger(pFlashAddr, ucReqType, FALSE, INVALID_2F);
400a6705:	0d3d      	mov.n	a3, a13
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2308

    return NFC_STATUS_SUCCESS;
400a6707:	81f8      	l32i.n	a15, a1, 32
400a6709:	61d8      	l32i.n	a13, a1, 24
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2306
    //fill SGQ
    g_pNfcqForHalDebug = pNFCQEntry;
    HAL_SgqBuildEntry(ucCmdTag, usFirstHSGId, ucPU, ucLun, FALSE);

    //trigger command
    HAL_NfcCmdTrigger(pFlashAddr, ucReqType, FALSE, INVALID_2F);
400a670b:	f09201        	l32r	a0, 400a2954 <_mcu2dram_text_start+0x154>
400a670e:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2308

    return NFC_STATUS_SUCCESS;
400a6711:	120c      	movi.n	a2, 1
400a6713:	4108      	l32i.n	a0, a1, 16
400a6715:	30c112        	addi	a1, a1, 48
400a6718:	f00d      	ret.n

400a671a <HAL_NfcHostPageRead+0x1da>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2211
    ucPln = pFlashAddr->bsPln;
    usPage = pFlashAddr->usPage;
    
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
    {
        return NFC_STATUS_FAIL;
400a671a:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2308
    HAL_SgqBuildEntry(ucCmdTag, usFirstHSGId, ucPU, ucLun, FALSE);

    //trigger command
    HAL_NfcCmdTrigger(pFlashAddr, ucReqType, FALSE, INVALID_2F);

    return NFC_STATUS_SUCCESS;
400a671c:	51c8      	l32i.n	a12, a1, 20
400a671e:	61d8      	l32i.n	a13, a1, 24
400a6720:	71e8      	l32i.n	a14, a1, 28
400a6722:	81f8      	l32i.n	a15, a1, 32
400a6724:	4108      	l32i.n	a0, a1, 16
400a6726:	30c112        	addi	a1, a1, 48
400a6729:	f00d      	ret.n

400a672b <HAL_NfcHostPageRead+0x1eb>:
400a672b:	000000                                        ...

400a672e <HAL_NfcHostPageRead+0x1ee>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2291
    }

    /*  NFCQ DW6-7: SSU 0 and SSU 1   */
    if(FALSE != pRdReq->bsSsu0En)
    {
        HAL_ConfigSsu0(pNFCQEntry, pRdReq->bsSsu0Addr, pRdReq->bsSsu0Ontf);
400a672e:	0c2d      	mov.n	a2, a12
400a6730:	061d32        	l16ui	a3, a13, 12
400a6733:	044100        	extui	a4, a0, 1, 1
400a6736:	f0d901        	l32r	a0, 400a2a9c <_mcu2dram_text_start+0x29c>
400a6739:	0000c0        	callx0	a0
400a673c:	2d08      	l32i.n	a0, a13, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2293
    }
    if(FALSE != pRdReq->bsSsu1En)
400a673e:	946027        	bbci	a0, 2, 400a66d6 <HAL_NfcHostPageRead+0x196>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2295
    {
        HAL_ConfigSsu1(pNFCQEntry, pRdReq->bsSsu1Addr, pRdReq->bsSsu1Ontf);
400a6741:	071d32        	l16ui	a3, a13, 14
400a6744:	202cc0        	or	a2, a12, a12
400a6747:	044300        	extui	a4, a0, 3, 1
400a674a:	f0d501        	l32r	a0, 400a2aa0 <_mcu2dram_text_start+0x2a0>
400a674d:	0000c0        	callx0	a0
400a6750:	ffe086        	j	400a66d6 <HAL_NfcHostPageRead+0x196>

400a6753 <HAL_NfcHostPageRead+0x213>:
	...

400a6754 <HAL_NfcPageRead>:
HAL_NfcPageRead():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1362
    20140918    Gavin   add header for this function
    20151106    abby    modify to meet VT3533, dynamic update RED to OTFB/DRAM
    20160416    abby    add 3D MLC support
------------------------------------------------------------------------------*/
U32 MCU2_DRAM_TEXT HAL_NfcPageRead(FLASH_ADDR *pFlashAddr, NFC_READ_REQ_DES *pRdReq)
{
400a6754:	d0c112        	addi	a1, a1, -48
400a6757:	81d9      	s32i.n	a13, a1, 32
400a6759:	6109      	s32i.n	a0, a1, 24
400a675b:	a1f9      	s32i.n	a15, a1, 40
400a675d:	71c9      	s32i.n	a12, a1, 28
400a675f:	91e9      	s32i.n	a14, a1, 36
400a6761:	03cd      	mov.n	a12, a3
400a6763:	02ed      	mov.n	a14, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1371
    NORMAL_DSG_ENTRY * pDSG;
    NFC_SCR_CONF eScrType;
    BOOL bIsRedOntf = pRdReq->bsRedOntf;

    ucPU  = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
400a6765:	0102f2        	l8ui	a15, a2, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1368
    U8  ucPU, ucLun, ucPln, ucReqType, ucPageType;
    U16 usCurDsgId, usPage;
    NFCQ_ENTRY *pNFCQEntry;
    NORMAL_DSG_ENTRY * pDSG;
    NFC_SCR_CONF eScrType;
    BOOL bIsRedOntf = pRdReq->bsRedOntf;
400a6768:	1308      	l32i.n	a0, a3, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1370

    ucPU  = pFlashAddr->ucPU;
400a676a:	0002d2        	l8ui	a13, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1368
    U8  ucPU, ucLun, ucPln, ucReqType, ucPageType;
    U16 usCurDsgId, usPage;
    NFCQ_ENTRY *pNFCQEntry;
    NORMAL_DSG_ENTRY * pDSG;
    NFC_SCR_CONF eScrType;
    BOOL bIsRedOntf = pRdReq->bsRedOntf;
400a676d:	040000        	extui	a0, a0, 0, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1374

    ucPU  = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
    usPage = pFlashAddr->usPage;
    
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a6770:	0d2d      	mov.n	a2, a13
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1368
    U8  ucPU, ucLun, ucPln, ucReqType, ucPageType;
    U16 usCurDsgId, usPage;
    NFCQ_ENTRY *pNFCQEntry;
    NORMAL_DSG_ENTRY * pDSG;
    NFC_SCR_CONF eScrType;
    BOOL bIsRedOntf = pRdReq->bsRedOntf;
400a6772:	b109      	s32i.n	a0, a1, 44
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1374

    ucPU  = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
    usPage = pFlashAddr->usPage;
    
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a6774:	0f3d      	mov.n	a3, a15
400a6776:	f07201        	l32r	a0, 400a2940 <_mcu2dram_text_start+0x140>
400a6779:	0000c0        	callx0	a0
400a677c:	20a216        	beqz	a2, 400a698a <HAL_NfcPageRead+0x236>
400a677f:	11d9      	s32i.n	a13, a1, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1380
    {
        return NFC_STATUS_FAIL;
    }
    
    /* adapter for different flash type */
    if(pRdReq->bsTlcMode)
400a6781:	0e28      	l32i.n	a2, a14, 0
400a6783:	2c08      	l32i.n	a0, a12, 8
400a6785:	352020        	extui	a2, a2, 16, 4
400a6788:	1c6067        	bbci	a0, 6, 400a67a8 <HAL_NfcPageRead+0x54>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1382
    {
        ucPageType = pRdReq->bsTlcPgType;
400a678b:	144400        	extui	a4, a0, 4, 2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1384
        ucReqType  = NF_PRCQ_TLC_READ_LP_MULTIPLN + ucPageType;
        ucPln      = pFlashAddr->bsPln + (ucPageType * PLN_PER_LUN);
400a678e:	230c      	movi.n	a3, 2
400a6790:	3139      	s32i.n	a3, a1, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1382
    }
    
    /* adapter for different flash type */
    if(pRdReq->bsTlcMode)
    {
        ucPageType = pRdReq->bsTlcPgType;
400a6792:	2149      	s32i.n	a4, a1, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1384
        ucReqType  = NF_PRCQ_TLC_READ_LP_MULTIPLN + ucPageType;
        ucPln      = pFlashAddr->bsPln + (ucPageType * PLN_PER_LUN);
400a6794:	a05420        	addx4	a5, a4, a2
400a6797:	745050        	extui	a5, a5, 0, 8
400a679a:	4159      	s32i.n	a5, a1, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1383
    
    /* adapter for different flash type */
    if(pRdReq->bsTlcMode)
    {
        ucPageType = pRdReq->bsTlcPgType;
        ucReqType  = NF_PRCQ_TLC_READ_LP_MULTIPLN + ucPageType;
400a679c:	12c442        	addi	a4, a4, 18
400a679f:	744040        	extui	a4, a4, 0, 8
400a67a2:	5149      	s32i.n	a4, a1, 20
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1384
        ucPln      = pFlashAddr->bsPln + (ucPageType * PLN_PER_LUN);
400a67a4:	000386        	j	400a67b6 <HAL_NfcPageRead+0x62>

400a67a7 <HAL_NfcPageRead+0x53>:
	...

400a67a8 <HAL_NfcPageRead+0x54>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1391
    }
    else//SLC mode
    {
        ucPageType = 0;
        ucReqType  = NF_PRCQ_READ_MULTIPLN;
        ucPln      = pFlashAddr->bsPln;
400a67a8:	4129      	s32i.n	a2, a1, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1392
        eScrType   = NORMAL_SCR;
400a67aa:	060c      	movi.n	a6, 0
400a67ac:	f70c      	movi.n	a7, 15
400a67ae:	080c      	movi.n	a8, 0
400a67b0:	3189      	s32i.n	a8, a1, 12
400a67b2:	5179      	s32i.n	a7, a1, 20
400a67b4:	2169      	s32i.n	a6, a1, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1396
    }

    /*  CONFIGURE NFCQ   */
    pNFCQEntry = (NFCQ_ENTRY *)HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
400a67b6:	0d2d      	mov.n	a2, a13
400a67b8:	0f3d      	mov.n	a3, a15
400a67ba:	f06201        	l32r	a0, 400a2944 <_mcu2dram_text_start+0x144>
400a67bd:	0000c0        	callx0	a0
400a67c0:	02dd      	mov.n	a13, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1397
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);
400a67c2:	031c      	movi.n	a3, 16
400a67c4:	f06101        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a67c7:	0000c0        	callx0	a0
400a67ca:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1406
    pNFCQEntry->bsOntfEn = TRUE;
    pNFCQEntry->bsXorEn  = FALSE;
    pNFCQEntry->bsOtfbBsSel = OTFB_BASE_SEL;
#endif

    pNFCQEntry->bsDCrcEn  = FALSE;
400a67cc:	fb6c      	movi.n	a11, -17
400a67ce:	0da8      	l32i.n	a10, a13, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1407
    pNFCQEntry->bsDsIndex = DS_ENTRY_SEL;
400a67d0:	f0a501        	l32r	a0, 400a2a64 <_mcu2dram_text_start+0x264>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1406
    pNFCQEntry->bsOntfEn = TRUE;
    pNFCQEntry->bsXorEn  = FALSE;
    pNFCQEntry->bsOtfbBsSel = OTFB_BASE_SEL;
#endif

    pNFCQEntry->bsDCrcEn  = FALSE;
400a67d3:	10aab0        	and	a10, a10, a11
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1408
    pNFCQEntry->bsDsIndex = DS_ENTRY_SEL;
    pNFCQEntry->bsEMEn    = pRdReq->bsEmEn;
400a67d6:	2cb8      	l32i.n	a11, a12, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1407
    pNFCQEntry->bsXorEn  = FALSE;
    pNFCQEntry->bsOtfbBsSel = OTFB_BASE_SEL;
#endif

    pNFCQEntry->bsDCrcEn  = FALSE;
    pNFCQEntry->bsDsIndex = DS_ENTRY_SEL;
400a67d8:	10aa00        	and	a10, a10, a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1408
    pNFCQEntry->bsEMEn    = pRdReq->bsEmEn;
400a67db:	a5b5b0        	extui	a11, a11, 21, 11
400a67de:	226ba4        	insbits	a10, a11, 6, 6
400a67e1:	0da9      	s32i.n	a10, a13, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1411
    
    /*  DSG configure   */
    while(FALSE == HAL_GetNormalDsg(&usCurDsgId))
400a67e3:	f0a701        	l32r	a0, 400a2a80 <_mcu2dram_text_start+0x280>
400a67e6:	0000c0        	callx0	a0
400a67e9:	18f216        	beqz	a2, 400a697c <HAL_NfcPageRead+0x228>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1423
    /*  NFCQ DW1: sector enable and length   */
    pNFCQEntry->aSecAddr[0].bsSecStart = pRdReq->bsSecStart;
    pNFCQEntry->aSecAddr[0].bsSecLength = pRdReq->bsSecLen;

    /*  NFCQ DW2: error injection  */
    if (FALSE != pRdReq->bsInjErrEn)
400a67ec:	2c28      	l32i.n	a2, a12, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1416
    while(FALSE == HAL_GetNormalDsg(&usCurDsgId))
    {
        ;
    }
    pNFCQEntry->bsDsgEn = TRUE;
    pNFCQEntry->bsFstDsgPtr = usCurDsgId;
400a67ee:	001142        	l16ui	a4, a1, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1415
    /*  DSG configure   */
    while(FALSE == HAL_GetNormalDsg(&usCurDsgId))
    {
        ;
    }
    pNFCQEntry->bsDsgEn = TRUE;
400a67f1:	80a062        	movi	a6, 128
400a67f4:	0d58      	l32i.n	a5, a13, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1420
    pNFCQEntry->bsFstDsgPtr = usCurDsgId;

    /*  NFCQ DW1: sector enable and length   */
    pNFCQEntry->aSecAddr[0].bsSecStart = pRdReq->bsSecStart;
    pNFCQEntry->aSecAddr[0].bsSecLength = pRdReq->bsSecLen;
400a67f6:	010c02        	l8ui	a0, a12, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1419
    }
    pNFCQEntry->bsDsgEn = TRUE;
    pNFCQEntry->bsFstDsgPtr = usCurDsgId;

    /*  NFCQ DW1: sector enable and length   */
    pNFCQEntry->aSecAddr[0].bsSecStart = pRdReq->bsSecStart;
400a67f9:	000c32        	l8ui	a3, a12, 0
400a67fc:	054d32        	s8i	a3, a13, 5
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1420
    pNFCQEntry->aSecAddr[0].bsSecLength = pRdReq->bsSecLen;
400a67ff:	044d02        	s8i	a0, a13, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1415
    /*  DSG configure   */
    while(FALSE == HAL_GetNormalDsg(&usCurDsgId))
    {
        ;
    }
    pNFCQEntry->bsDsgEn = TRUE;
400a6802:	205560        	or	a5, a5, a6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1416
    pNFCQEntry->bsFstDsgPtr = usCurDsgId;
400a6805:	014490        	slli	a4, a4, 23
400a6808:	a20544        	insbits	a4, a5, 0, 22
400a680b:	006d42        	s32i	a4, a13, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1423
    /*  NFCQ DW1: sector enable and length   */
    pNFCQEntry->aSecAddr[0].bsSecStart = pRdReq->bsSecStart;
    pNFCQEntry->aSecAddr[0].bsSecLength = pRdReq->bsSecLen;

    /*  NFCQ DW2: error injection  */
    if (FALSE != pRdReq->bsInjErrEn)
400a680e:	0e7217        	bbci	a2, 17, 400a6820 <HAL_NfcPageRead+0xcc>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1425
    {
        HAL_NfcSetErrInj(pNFCQEntry, pRdReq->pErrInj);
400a6811:	202dd0        	or	a2, a13, a13
400a6814:	062c32        	l32i	a3, a12, 24
400a6817:	f09401        	l32r	a0, 400a2a68 <_mcu2dram_text_start+0x268>
400a681a:	0000c0        	callx0	a0
400a681d:	010c02        	l8ui	a0, a12, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1431
    }

    /*  NFCQ DW3: DMA message, total data length  */
    pNFCQEntry->bsDmaTotalLength = pRdReq->bsSecLen;
    /*  PRCQ start DW   */
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a6820:	5128      	l32i.n	a2, a1, 20
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1429
    {
        HAL_NfcSetErrInj(pNFCQEntry, pRdReq->pErrInj);
    }

    /*  NFCQ DW3: DMA message, total data length  */
    pNFCQEntry->bsDmaTotalLength = pRdReq->bsSecLen;
400a6822:	0c4d02        	s8i	a0, a13, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1431
    /*  PRCQ start DW   */
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a6825:	f04a01        	l32r	a0, 400a2950 <_mcu2dram_text_start+0x150>
400a6828:	0000c0        	callx0	a0
400a682b:	3d88      	l32i.n	a8, a13, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1434

    /*  NFCQ DW4: red and scramble   */
    if (NULL != pRdReq->ppNfcRed)
400a682d:	5c78      	l32i.n	a7, a12, 20
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1431
    }

    /*  NFCQ DW3: DMA message, total data length  */
    pNFCQEntry->bsDmaTotalLength = pRdReq->bsSecLen;
    /*  PRCQ start DW   */
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a682f:	808284        	insbits	a8, a2, 8, 16
400a6832:	3d89      	s32i.n	a8, a13, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1434

    /*  NFCQ DW4: red and scramble   */
    if (NULL != pRdReq->ppNfcRed)
400a6834:	04d716        	beqz	a7, 400a6885 <HAL_NfcPageRead+0x131>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1436
    {
        pNFCQEntry->bsRedEn = TRUE;
400a6837:	2a0c      	movi.n	a10, 2
400a6839:	4d98      	l32i.n	a9, a13, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1438
        pNFCQEntry->bsRedOntf = bIsRedOntf;
        pNFCQEntry->bsRedAddr = HAL_NfcGetRedRelativeAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPln,bIsRedOntf);
400a683b:	1128      	l32i.n	a2, a1, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1436
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);

    /*  NFCQ DW4: red and scramble   */
    if (NULL != pRdReq->ppNfcRed)
    {
        pNFCQEntry->bsRedEn = TRUE;
400a683d:	2099a0        	or	a9, a9, a10
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1437
        pNFCQEntry->bsRedOntf = bIsRedOntf;
400a6840:	b1a8      	l32i.n	a10, a1, 44
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1438
        pNFCQEntry->bsRedAddr = HAL_NfcGetRedRelativeAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPln,bIsRedOntf);
400a6842:	0f3d      	mov.n	a3, a15
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1437

    /*  NFCQ DW4: red and scramble   */
    if (NULL != pRdReq->ppNfcRed)
    {
        pNFCQEntry->bsRedEn = TRUE;
        pNFCQEntry->bsRedOntf = bIsRedOntf;
400a6844:	000a94        	insbits	a9, a10, 0, 0
400a6847:	046d92        	s32i	a9, a13, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1438
        pNFCQEntry->bsRedAddr = HAL_NfcGetRedRelativeAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPln,bIsRedOntf);
400a684a:	f08401        	l32r	a0, 400a2a5c <_mcu2dram_text_start+0x25c>
400a684d:	0000c0        	callx0	a0
400a6850:	0f3d      	mov.n	a3, a15
400a6852:	4158      	l32i.n	a5, a1, 16
400a6854:	024d      	mov.n	a4, a2
400a6856:	b168      	l32i.n	a6, a1, 44
400a6858:	1128      	l32i.n	a2, a1, 4
400a685a:	f08401        	l32r	a0, 400a2a6c <_mcu2dram_text_start+0x26c>
400a685d:	0000c0        	callx0	a0
400a6860:	4db8      	l32i.n	a11, a13, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1439
        *(pRdReq->ppNfcRed) = (NFC_RED*)HAL_NfcGetRedAbsoulteAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPln,bIsRedOntf);
400a6862:	0f3d      	mov.n	a3, a15
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1438
    /*  NFCQ DW4: red and scramble   */
    if (NULL != pRdReq->ppNfcRed)
    {
        pNFCQEntry->bsRedEn = TRUE;
        pNFCQEntry->bsRedOntf = bIsRedOntf;
        pNFCQEntry->bsRedAddr = HAL_NfcGetRedRelativeAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPln,bIsRedOntf);
400a6864:	8332b4        	insbits	a11, a2, 3, 19
400a6867:	4db9      	s32i.n	a11, a13, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1439
        *(pRdReq->ppNfcRed) = (NFC_RED*)HAL_NfcGetRedAbsoulteAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPln,bIsRedOntf);
400a6869:	1128      	l32i.n	a2, a1, 4
400a686b:	f07c01        	l32r	a0, 400a2a5c <_mcu2dram_text_start+0x25c>
400a686e:	0000c0        	callx0	a0
400a6871:	0f3d      	mov.n	a3, a15
400a6873:	4158      	l32i.n	a5, a1, 16
400a6875:	024d      	mov.n	a4, a2
400a6877:	b168      	l32i.n	a6, a1, 44
400a6879:	1128      	l32i.n	a2, a1, 4
400a687b:	f07d01        	l32r	a0, 400a2a70 <_mcu2dram_text_start+0x270>
400a687e:	0000c0        	callx0	a0
400a6881:	5cf8      	l32i.n	a15, a12, 20
400a6883:	0f29      	s32i.n	a2, a15, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1441
    }
    HAL_ConfigScramble(pNFCQEntry, pFlashAddr->usPage, SCR_FULL_PLN, ucPageType, eScrType);
400a6885:	0d2d      	mov.n	a2, a13
400a6887:	031e32        	l16ui	a3, a14, 6
400a688a:	240c      	movi.n	a4, 2
400a688c:	2158      	l32i.n	a5, a1, 8
400a688e:	3168      	l32i.n	a6, a1, 12
400a6890:	f07901        	l32r	a0, 400a2a74 <_mcu2dram_text_start+0x274>
400a6893:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1444
    
    /* Raw data read = true, each CW 2K align */
    pNFCQEntry->bsRawReadEn = pRdReq->bsRawData;
400a6896:	2c08      	l32i.n	a0, a12, 8
400a6898:	4d28      	l32i.n	a2, a13, 16
400a689a:	f53000        	extui	a3, a0, 16, 16
400a689d:	b04324        	insbits	a2, a3, 20, 20
400a68a0:	4d29      	s32i.n	a2, a13, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1447

    /* DEC FIFO status report config */
    if (FALSE != pRdReq->bsDecFifoEn)
400a68a2:	0c6077        	bbci	a0, 7, 400a68b2 <HAL_NfcPageRead+0x15e>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1449
    {
        HAL_DecFifoTrigNfc(pNFCQEntry, pRdReq->bsDecFifoIndex);
400a68a5:	0d2d      	mov.n	a2, a13
400a68a7:	743800        	extui	a3, a0, 8, 8
400a68aa:	f07301        	l32r	a0, 400a2a78 <_mcu2dram_text_start+0x278>
400a68ad:	0000c0        	callx0	a0
400a68b0:	2c08      	l32i.n	a0, a12, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1453
    }

    /*  NFCQ DW5: LBA for read, fill by FW, the same with corresponding LBA in write red   */
    if (pRdReq->bsLbaChkEn || pRdReq->bsEmEn)
400a68b2:	1c58      	l32i.n	a5, a12, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1492
    HAL_SetNormalDsgSts(usCurDsgId, NORMAL_DSG_VALID);

    /*  Trigger NFC    */
    HAL_NfcCmdTrigger(pFlashAddr, ucReqType, FALSE, INVALID_2F);

    return NFC_STATUS_SUCCESS;
400a68b4:	a1f8      	l32i.n	a15, a1, 40
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1453
    {
        HAL_DecFifoTrigNfc(pNFCQEntry, pRdReq->bsDecFifoIndex);
    }

    /*  NFCQ DW5: LBA for read, fill by FW, the same with corresponding LBA in write red   */
    if (pRdReq->bsLbaChkEn || pRdReq->bsEmEn)
400a68b6:	02e517        	bbsi	a5, 1, 400a68bc <HAL_NfcPageRead+0x168>
400a68b9:	097057        	bbci	a0, 21, 400a68c6 <HAL_NfcPageRead+0x172>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1455
    {
        pNFCQEntry->bsRdLba = pRdReq->bsLba;
400a68bc:	5d48      	l32i.n	a4, a13, 20
400a68be:	416250        	srli	a6, a5, 2
400a68c1:	e33644        	insbits	a4, a6, 3, 31
400a68c4:	5d49      	s32i.n	a4, a13, 20
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1459
    }

    /*  NFCQ DW6-7: SSU 0 and SSU 1   */
    if(FALSE != pRdReq->bsSsu0En)
400a68c6:	7ee007        	bbsi	a0, 0, 400a6948 <HAL_NfcPageRead+0x1f4>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1463
    {
        HAL_ConfigSsu0(pNFCQEntry, pRdReq->bsSsu0Addr, pRdReq->bsSsu0Ontf);
    }
    if(FALSE != pRdReq->bsSsu1En)
400a68c9:	026027        	bbci	a0, 2, 400a68cf <HAL_NfcPageRead+0x17b>
400a68cc:	002386        	j	400a695e <HAL_NfcPageRead+0x20a>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1469
    {
        HAL_ConfigSsu1(pNFCQEntry, pRdReq->bsSsu1Addr, pRdReq->bsSsu1Ontf);
    }
    
    /*  NFCQ DW8-15: flash address  */
    HAL_NfcSetFullPageRowAddr(pNFCQEntry, pFlashAddr, FALSE);
400a68cf:	0d2d      	mov.n	a2, a13
400a68d1:	203ee0        	or	a3, a14, a14
400a68d4:	00a042        	movi	a4, 0
400a68d7:	f06901        	l32r	a0, 400a2a7c <_mcu2dram_text_start+0x27c>
400a68da:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1472

    /*  CONFIGURE DSG   */
    pDSG = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(usCurDsgId);
400a68dd:	001122        	l16ui	a2, a1, 0
400a68e0:	f06901        	l32r	a0, 400a2a84 <_mcu2dram_text_start+0x284>
400a68e3:	0000c0        	callx0	a0
400a68e6:	02dd      	mov.n	a13, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1473
    COM_MemZero((U32*)pDSG,sizeof(NORMAL_DSG_ENTRY)>>2);
400a68e8:	04a032        	movi	a3, 4
400a68eb:	f01701        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a68ee:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1479
    
    /*  DSG DW0: transfer length and chain config, if req secLength = 0, should xfer 256 sectors  */
    pDSG->bsXferByteLen = pRdReq->bsSecLen << SEC_SZ_BITS ;
    pDSG->bsLast = TRUE;
    /*  DSG DW1: dram address  */
    pDSG->bsDramAddr =  HAL_NfcGetDmaAddr(pRdReq->bsRdBuffId, pRdReq->bsSecStart, LOGIC_PIPE_PG_SZ_BITS);
400a68f1:	011c22        	l16ui	a2, a12, 2
400a68f4:	000c32        	l8ui	a3, a12, 0
400a68f7:	041c      	movi.n	a4, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1477
    pDSG = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(usCurDsgId);
    COM_MemZero((U32*)pDSG,sizeof(NORMAL_DSG_ENTRY)>>2);
    
    /*  DSG DW0: transfer length and chain config, if req secLength = 0, should xfer 256 sectors  */
    pDSG->bsXferByteLen = pRdReq->bsSecLen << SEC_SZ_BITS ;
    pDSG->bsLast = TRUE;
400a68f9:	00a282        	movi	a8, 0x200
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1476
    /*  CONFIGURE DSG   */
    pDSG = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(usCurDsgId);
    COM_MemZero((U32*)pDSG,sizeof(NORMAL_DSG_ENTRY)>>2);
    
    /*  DSG DW0: transfer length and chain config, if req secLength = 0, should xfer 256 sectors  */
    pDSG->bsXferByteLen = pRdReq->bsSecLen << SEC_SZ_BITS ;
400a68fc:	0d78      	l32i.n	a7, a13, 0
400a68fe:	010c92        	l8ui	a9, a12, 1
400a6901:	d47070        	extui	a7, a7, 0, 14
400a6904:	f27974        	insbits	a7, a9, 23, 30
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1477
    pDSG->bsLast = TRUE;
400a6907:	207780        	or	a7, a7, a8
400a690a:	0d79      	s32i.n	a7, a13, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1479
    /*  DSG DW1: dram address  */
    pDSG->bsDramAddr =  HAL_NfcGetDmaAddr(pRdReq->bsRdBuffId, pRdReq->bsSecStart, LOGIC_PIPE_PG_SZ_BITS);
400a690c:	f05f01        	l32r	a0, 400a2a88 <_mcu2dram_text_start+0x288>
400a690f:	0000c0        	callx0	a0
400a6912:	1d98      	l32i.n	a9, a13, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1482

    /*  DSG DW2-3: cache status  */
    if(FALSE != pRdReq->bsCSEn)
400a6914:	1c88      	l32i.n	a8, a12, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1479
    
    /*  DSG DW0: transfer length and chain config, if req secLength = 0, should xfer 256 sectors  */
    pDSG->bsXferByteLen = pRdReq->bsSecLen << SEC_SZ_BITS ;
    pDSG->bsLast = TRUE;
    /*  DSG DW1: dram address  */
    pDSG->bsDramAddr =  HAL_NfcGetDmaAddr(pRdReq->bsRdBuffId, pRdReq->bsSecStart, LOGIC_PIPE_PG_SZ_BITS);
400a6916:	e31294        	insbits	a9, a2, 1, 31
400a6919:	1d99      	s32i.n	a9, a13, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1482

    /*  DSG DW2-3: cache status  */
    if(FALSE != pRdReq->bsCSEn)
400a691b:	50f8f7        	bbsi	a8, 31, 400a696f <HAL_NfcPageRead+0x21b>
400a691e:	51c8      	l32i.n	a12, a1, 20
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1484
    {
        HAL_ConfigCacheStatus(pDSG, pRdReq->bsCsAddrOff);
400a6920:	001122        	l16ui	a2, a1, 0
400a6923:	f05a01        	l32r	a0, 400a2a8c <_mcu2dram_text_start+0x28c>
400a6926:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1490
    }
    /*  Set DSG valid    */
    HAL_SetNormalDsgSts(usCurDsgId, NORMAL_DSG_VALID);

    /*  Trigger NFC    */
    HAL_NfcCmdTrigger(pFlashAddr, ucReqType, FALSE, INVALID_2F);
400a6929:	0e2d      	mov.n	a2, a14
400a692b:	0c3d      	mov.n	a3, a12
400a692d:	040c      	movi.n	a4, 0
400a692f:	ffa052        	movi	a5, 255
400a6932:	f00801        	l32r	a0, 400a2954 <_mcu2dram_text_start+0x154>
400a6935:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1492

    return NFC_STATUS_SUCCESS;
400a6938:	120c      	movi.n	a2, 1
400a693a:	71c8      	l32i.n	a12, a1, 28
400a693c:	81d8      	l32i.n	a13, a1, 32
400a693e:	91e8      	l32i.n	a14, a1, 36
400a6940:	6108      	l32i.n	a0, a1, 24
400a6942:	30c112        	addi	a1, a1, 48
400a6945:	f00d      	ret.n

400a6947 <HAL_NfcPageRead+0x1f3>:
	...

400a6948 <HAL_NfcPageRead+0x1f4>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1461
    }

    /*  NFCQ DW6-7: SSU 0 and SSU 1   */
    if(FALSE != pRdReq->bsSsu0En)
    {
        HAL_ConfigSsu0(pNFCQEntry, pRdReq->bsSsu0Addr, pRdReq->bsSsu0Ontf);
400a6948:	0d2d      	mov.n	a2, a13
400a694a:	061c32        	l16ui	a3, a12, 12
400a694d:	044100        	extui	a4, a0, 1, 1
400a6950:	f05301        	l32r	a0, 400a2a9c <_mcu2dram_text_start+0x29c>
400a6953:	0000c0        	callx0	a0
400a6956:	2c08      	l32i.n	a0, a12, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1463
    }
    if(FALSE != pRdReq->bsSsu1En)
400a6958:	02e027        	bbsi	a0, 2, 400a695e <HAL_NfcPageRead+0x20a>
400a695b:	ffdc06        	j	400a68cf <HAL_NfcPageRead+0x17b>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1465
    {
        HAL_ConfigSsu1(pNFCQEntry, pRdReq->bsSsu1Addr, pRdReq->bsSsu1Ontf);
400a695e:	0d2d      	mov.n	a2, a13
400a6960:	071c32        	l16ui	a3, a12, 14
400a6963:	044300        	extui	a4, a0, 3, 1
400a6966:	f04e01        	l32r	a0, 400a2aa0 <_mcu2dram_text_start+0x2a0>
400a6969:	0000c0        	callx0	a0
400a696c:	ffd7c6        	j	400a68cf <HAL_NfcPageRead+0x17b>

400a696f <HAL_NfcPageRead+0x21b>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1484
    pDSG->bsDramAddr =  HAL_NfcGetDmaAddr(pRdReq->bsRdBuffId, pRdReq->bsSecStart, LOGIC_PIPE_PG_SZ_BITS);

    /*  DSG DW2-3: cache status  */
    if(FALSE != pRdReq->bsCSEn)
    {
        HAL_ConfigCacheStatus(pDSG, pRdReq->bsCsAddrOff);
400a696f:	0d2d      	mov.n	a2, a13
400a6971:	4c38      	l32i.n	a3, a12, 16
400a6973:	f04c01        	l32r	a0, 400a2aa4 <_mcu2dram_text_start+0x2a4>
400a6976:	0000c0        	callx0	a0
400a6979:	ffe846        	j	400a691e <HAL_NfcPageRead+0x1ca>

400a697c <HAL_NfcPageRead+0x228>:
400a697c:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1411
    pNFCQEntry->bsDCrcEn  = FALSE;
    pNFCQEntry->bsDsIndex = DS_ENTRY_SEL;
    pNFCQEntry->bsEMEn    = pRdReq->bsEmEn;
    
    /*  DSG configure   */
    while(FALSE == HAL_GetNormalDsg(&usCurDsgId))
400a697e:	f04001        	l32r	a0, 400a2a80 <_mcu2dram_text_start+0x280>
400a6981:	0000c0        	callx0	a0
400a6984:	ff4216        	beqz	a2, 400a697c <HAL_NfcPageRead+0x228>
400a6987:	ff9846        	j	400a67ec <HAL_NfcPageRead+0x98>

400a698a <HAL_NfcPageRead+0x236>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1376
    ucLun = pFlashAddr->ucLun;
    usPage = pFlashAddr->usPage;
    
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
    {
        return NFC_STATUS_FAIL;
400a698a:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1492
    HAL_SetNormalDsgSts(usCurDsgId, NORMAL_DSG_VALID);

    /*  Trigger NFC    */
    HAL_NfcCmdTrigger(pFlashAddr, ucReqType, FALSE, INVALID_2F);

    return NFC_STATUS_SUCCESS;
400a698c:	71c8      	l32i.n	a12, a1, 28
400a698e:	81d8      	l32i.n	a13, a1, 32
400a6990:	91e8      	l32i.n	a14, a1, 36
400a6992:	a1f8      	l32i.n	a15, a1, 40
400a6994:	6108      	l32i.n	a0, a1, 24
400a6996:	30c112        	addi	a1, a1, 48
400a6999:	f00d      	ret.n

400a699b <HAL_NfcPageRead+0x247>:
	...

400a699c <HAL_NfcSinglePlnRead>:
HAL_NfcSinglePlnRead():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1741
    NFCQ_ENTRY *pNFCQEntry;
    NORMAL_DSG_ENTRY *pDSG;
    NFC_SCR_CONF eScrType = NORMAL_SCR;
    volatile NFC_DATA_SYNTAX *pDsReg = (volatile NFC_DATA_SYNTAX*)NF_DS_REG_BASE;
    U8  ucDsIndex = pRdReq->bsDsIndex;
    U8  ucBufUnit = ((pDsReg->atDSEntry[ucDsIndex].bsCwNum % 16) ? CW_INFO_SZ_BITS : LOGIC_PG_SZ_BITS);
400a699c:	f04341        	l32r	a4, 400a2aa8 <_mcu2dram_text_start+0x2a8>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1732
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
    20151105    abby    modify to meet VT3533, dynamic update RED to OTFB/DRAM
------------------------------------------------------------------------------*/
BOOL MCU2_DRAM_TEXT HAL_NfcSinglePlnRead(FLASH_ADDR *pFlashAddr, NFC_READ_REQ_DES *pRdReq, BOOL bOTFBBuff)
{
400a699f:	c0c112        	addi	a1, a1, -64
400a69a2:	a1d9      	s32i.n	a13, a1, 40
400a69a4:	c1f9      	s32i.n	a15, a1, 48
400a69a6:	91c9      	s32i.n	a12, a1, 36
400a69a8:	8109      	s32i.n	a0, a1, 32
400a69aa:	03cd      	mov.n	a12, a3
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1740
    U16 usCurDsgId;
    NFCQ_ENTRY *pNFCQEntry;
    NORMAL_DSG_ENTRY *pDSG;
    NFC_SCR_CONF eScrType = NORMAL_SCR;
    volatile NFC_DATA_SYNTAX *pDsReg = (volatile NFC_DATA_SYNTAX*)NF_DS_REG_BASE;
    U8  ucDsIndex = pRdReq->bsDsIndex;
400a69ac:	2338      	l32i.n	a3, a3, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1732
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
    20151105    abby    modify to meet VT3533, dynamic update RED to OTFB/DRAM
------------------------------------------------------------------------------*/
BOOL MCU2_DRAM_TEXT HAL_NfcSinglePlnRead(FLASH_ADDR *pFlashAddr, NFC_READ_REQ_DES *pRdReq, BOOL bOTFBBuff)
{
400a69ae:	b1e9      	s32i.n	a14, a1, 44
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1740
    U16 usCurDsgId;
    NFCQ_ENTRY *pNFCQEntry;
    NORMAL_DSG_ENTRY *pDSG;
    NFC_SCR_CONF eScrType = NORMAL_SCR;
    volatile NFC_DATA_SYNTAX *pDsReg = (volatile NFC_DATA_SYNTAX*)NF_DS_REG_BASE;
    U8  ucDsIndex = pRdReq->bsDsIndex;
400a69b0:	253230        	extui	a3, a3, 18, 3
400a69b3:	4139      	s32i.n	a3, a1, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1732
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
    20151105    abby    modify to meet VT3533, dynamic update RED to OTFB/DRAM
------------------------------------------------------------------------------*/
BOOL MCU2_DRAM_TEXT HAL_NfcSinglePlnRead(FLASH_ADDR *pFlashAddr, NFC_READ_REQ_DES *pRdReq, BOOL bOTFBBuff)
{
400a69b5:	02ed      	mov.n	a14, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1741
    NFCQ_ENTRY *pNFCQEntry;
    NORMAL_DSG_ENTRY *pDSG;
    NFC_SCR_CONF eScrType = NORMAL_SCR;
    volatile NFC_DATA_SYNTAX *pDsReg = (volatile NFC_DATA_SYNTAX*)NF_DS_REG_BASE;
    U8  ucDsIndex = pRdReq->bsDsIndex;
    U8  ucBufUnit = ((pDsReg->atDSEntry[ucDsIndex].bsCwNum % 16) ? CW_INFO_SZ_BITS : LOGIC_PG_SZ_BITS);
400a69b7:	1133d0        	slli	a3, a3, 3
400a69ba:	334a      	add.n	a3, a3, a4
400a69bc:	0020c0        	memw
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1745

    
    ucPU  = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
400a69bf:	010ef2        	l8ui	a15, a14, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1744
    volatile NFC_DATA_SYNTAX *pDsReg = (volatile NFC_DATA_SYNTAX*)NF_DS_REG_BASE;
    U8  ucDsIndex = pRdReq->bsDsIndex;
    U8  ucBufUnit = ((pDsReg->atDSEntry[ucDsIndex].bsCwNum % 16) ? CW_INFO_SZ_BITS : LOGIC_PG_SZ_BITS);

    
    ucPU  = pFlashAddr->ucPU;
400a69c2:	000ed2        	l8ui	a13, a14, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1741
    NFCQ_ENTRY *pNFCQEntry;
    NORMAL_DSG_ENTRY *pDSG;
    NFC_SCR_CONF eScrType = NORMAL_SCR;
    volatile NFC_DATA_SYNTAX *pDsReg = (volatile NFC_DATA_SYNTAX*)NF_DS_REG_BASE;
    U8  ucDsIndex = pRdReq->bsDsIndex;
    U8  ucBufUnit = ((pDsReg->atDSEntry[ucDsIndex].bsCwNum % 16) ? CW_INFO_SZ_BITS : LOGIC_PG_SZ_BITS);
400a69c5:	a20c      	movi.n	a2, 10
400a69c7:	0338      	l32i.n	a3, a3, 0
400a69c9:	e00c      	movi.n	a0, 14
400a69cb:	343930        	extui	a3, a3, 9, 4
400a69ce:	930230        	movnez	a0, a2, a3
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1747

    
    ucPU  = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
    
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a69d1:	0d2d      	mov.n	a2, a13
400a69d3:	0f3d      	mov.n	a3, a15
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1741
    NFCQ_ENTRY *pNFCQEntry;
    NORMAL_DSG_ENTRY *pDSG;
    NFC_SCR_CONF eScrType = NORMAL_SCR;
    volatile NFC_DATA_SYNTAX *pDsReg = (volatile NFC_DATA_SYNTAX*)NF_DS_REG_BASE;
    U8  ucDsIndex = pRdReq->bsDsIndex;
    U8  ucBufUnit = ((pDsReg->atDSEntry[ucDsIndex].bsCwNum % 16) ? CW_INFO_SZ_BITS : LOGIC_PG_SZ_BITS);
400a69d5:	5109      	s32i.n	a0, a1, 20
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1747

    
    ucPU  = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
    
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a69d7:	efda01        	l32r	a0, 400a2940 <_mcu2dram_text_start+0x140>
400a69da:	0000c0        	callx0	a0
400a69dd:	1d5216        	beqz	a2, 400a6bb6 <HAL_NfcSinglePlnRead+0x21a>
400a69e0:	11d9      	s32i.n	a13, a1, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1760
        eScrType    = NORMAL_SCR;
        ucPln = pFlashAddr->bsPln;
    }
    else
    {
        if (pRdReq->bsTlcMode)//TLC
400a69e2:	0e28      	l32i.n	a2, a14, 0
400a69e4:	2c08      	l32i.n	a0, a12, 8
400a69e6:	352020        	extui	a2, a2, 16, 4
400a69e9:	196067        	bbci	a0, 6, 400a6a06 <HAL_NfcSinglePlnRead+0x6a>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1762
        {
            ucPageType = pRdReq->bsTlcPgType;
400a69ec:	144400        	extui	a4, a0, 4, 2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1764
            ucReqType  = NF_PRCQ_TLC_READ_LP + ucPageType;
            ucPln      = pFlashAddr->bsPln + ucPageType;
400a69ef:	230c      	movi.n	a3, 2
400a69f1:	3139      	s32i.n	a3, a1, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1762
    }
    else
    {
        if (pRdReq->bsTlcMode)//TLC
        {
            ucPageType = pRdReq->bsTlcPgType;
400a69f3:	2149      	s32i.n	a4, a1, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1764
            ucReqType  = NF_PRCQ_TLC_READ_LP + ucPageType;
            ucPln      = pFlashAddr->bsPln + ucPageType;
400a69f5:	524a      	add.n	a5, a2, a4
400a69f7:	745050        	extui	a5, a5, 0, 8
400a69fa:	6159      	s32i.n	a5, a1, 24
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1763
    else
    {
        if (pRdReq->bsTlcMode)//TLC
        {
            ucPageType = pRdReq->bsTlcPgType;
            ucReqType  = NF_PRCQ_TLC_READ_LP + ucPageType;
400a69fc:	44ab      	addi.n	a4, a4, 10
400a69fe:	744040        	extui	a4, a4, 0, 8
400a6a01:	7149      	s32i.n	a4, a1, 28
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1764
            ucPln      = pFlashAddr->bsPln + ucPageType;
400a6a03:	0003c6        	j	400a6a16 <HAL_NfcSinglePlnRead+0x7a>

400a6a06 <HAL_NfcSinglePlnRead+0x6a>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1772
        else
        {
            ucPageType = 0;
            ucReqType  = NF_PRCQ_READ;
            eScrType   = NORMAL_SCR;
            ucPln = pFlashAddr->bsPln;
400a6a06:	6129      	s32i.n	a2, a1, 24
400a6a08:	060c      	movi.n	a6, 0
400a6a0a:	770c      	movi.n	a7, 7
400a6a0c:	080c      	movi.n	a8, 0
400a6a0e:	3189      	s32i.n	a8, a1, 12
400a6a10:	076172        	s32i	a7, a1, 28
400a6a13:	026162        	s32i	a6, a1, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1777
        }
    }
    
    /*  CONFIGURE NFCQ   */
    pNFCQEntry = (NFCQ_ENTRY *)HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
400a6a16:	0d2d      	mov.n	a2, a13
400a6a18:	0f3d      	mov.n	a3, a15
400a6a1a:	efca01        	l32r	a0, 400a2944 <_mcu2dram_text_start+0x144>
400a6a1d:	0000c0        	callx0	a0
400a6a20:	02dd      	mov.n	a13, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1778
    COM_MemZero((U32*)pNFCQEntry,sizeof(NFCQ_ENTRY)>>2);
400a6a22:	031c      	movi.n	a3, 16
400a6a24:	efc901        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a6a27:	0000c0        	callx0	a0
400a6a2a:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1787
    pNFCQEntry->bsOntfEn = TRUE;
    pNFCQEntry->bsXorEn  = FALSE;
    pNFCQEntry->bsOtfbBsSel = OTFB_BASE_SEL;
#endif

    pNFCQEntry->bsDCrcEn  = FALSE;
400a6a2c:	fb6c      	movi.n	a11, -17
400a6a2e:	0da8      	l32i.n	a10, a13, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1788
    pNFCQEntry->bsDsIndex = ucDsIndex;  //select flash page layout by DS entry in IRS
400a6a30:	4108      	l32i.n	a0, a1, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1787
    pNFCQEntry->bsOntfEn = TRUE;
    pNFCQEntry->bsXorEn  = FALSE;
    pNFCQEntry->bsOtfbBsSel = OTFB_BASE_SEL;
#endif

    pNFCQEntry->bsDCrcEn  = FALSE;
400a6a32:	10aab0        	and	a10, a10, a11
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1789
    pNFCQEntry->bsDsIndex = ucDsIndex;  //select flash page layout by DS entry in IRS
    pNFCQEntry->bsEMEn    = pRdReq->bsEmEn;
400a6a35:	2cb8      	l32i.n	a11, a12, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1788
    pNFCQEntry->bsXorEn  = FALSE;
    pNFCQEntry->bsOtfbBsSel = OTFB_BASE_SEL;
#endif

    pNFCQEntry->bsDCrcEn  = FALSE;
    pNFCQEntry->bsDsIndex = ucDsIndex;  //select flash page layout by DS entry in IRS
400a6a37:	61b0a4        	insbits	a10, a0, 11, 13
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1789
    pNFCQEntry->bsEMEn    = pRdReq->bsEmEn;
400a6a3a:	a5b5b0        	extui	a11, a11, 21, 11
400a6a3d:	226ba4        	insbits	a10, a11, 6, 6
400a6a40:	006da2        	s32i	a10, a13, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1792
    
    /*  DSG configure   */
    while (FALSE == HAL_GetNormalDsg(&usCurDsgId))
400a6a43:	f00f01        	l32r	a0, 400a2a80 <_mcu2dram_text_start+0x280>
400a6a46:	0000c0        	callx0	a0
400a6a49:	15b216        	beqz	a2, 400a6ba8 <HAL_NfcSinglePlnRead+0x20c>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1811
    /*  NFCQ DW1: sector enable and length   */
    pNFCQEntry->aSecAddr[0].bsSecStart = pRdReq->bsSecStart;
    pNFCQEntry->aSecAddr[0].bsSecLength = pRdReq->bsSecLen;
    
    /*  NFCQ DW2: error injection  */
    if (FALSE != pRdReq->bsInjErrEn)
400a6a4c:	2c28      	l32i.n	a2, a12, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1797
    while (FALSE == HAL_GetNormalDsg(&usCurDsgId))
    {
        ;
    }
    pNFCQEntry->bsDsgEn = TRUE;
    pNFCQEntry->bsFstDsgPtr = usCurDsgId;
400a6a4e:	001142        	l16ui	a4, a1, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1796
    /*  DSG configure   */
    while (FALSE == HAL_GetNormalDsg(&usCurDsgId))
    {
        ;
    }
    pNFCQEntry->bsDsgEn = TRUE;
400a6a51:	80a062        	movi	a6, 128
400a6a54:	0d58      	l32i.n	a5, a13, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1808
        pNFCQEntry->bsTrigOmEn = TRUE;
    }
    
    /*  NFCQ DW1: sector enable and length   */
    pNFCQEntry->aSecAddr[0].bsSecStart = pRdReq->bsSecStart;
    pNFCQEntry->aSecAddr[0].bsSecLength = pRdReq->bsSecLen;
400a6a56:	010c02        	l8ui	a0, a12, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1807
        pNFCQEntry->bsOntfEn   = TRUE;
        pNFCQEntry->bsTrigOmEn = TRUE;
    }
    
    /*  NFCQ DW1: sector enable and length   */
    pNFCQEntry->aSecAddr[0].bsSecStart = pRdReq->bsSecStart;
400a6a59:	000c32        	l8ui	a3, a12, 0
400a6a5c:	054d32        	s8i	a3, a13, 5
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1808
    pNFCQEntry->aSecAddr[0].bsSecLength = pRdReq->bsSecLen;
400a6a5f:	044d02        	s8i	a0, a13, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1796
    /*  DSG configure   */
    while (FALSE == HAL_GetNormalDsg(&usCurDsgId))
    {
        ;
    }
    pNFCQEntry->bsDsgEn = TRUE;
400a6a62:	205560        	or	a5, a5, a6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1797
    pNFCQEntry->bsFstDsgPtr = usCurDsgId;
400a6a65:	014490        	slli	a4, a4, 23
400a6a68:	a20544        	insbits	a4, a5, 0, 22
400a6a6b:	006d42        	s32i	a4, a13, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1811
    /*  NFCQ DW1: sector enable and length   */
    pNFCQEntry->aSecAddr[0].bsSecStart = pRdReq->bsSecStart;
    pNFCQEntry->aSecAddr[0].bsSecLength = pRdReq->bsSecLen;
    
    /*  NFCQ DW2: error injection  */
    if (FALSE != pRdReq->bsInjErrEn)
400a6a6e:	0e7217        	bbci	a2, 17, 400a6a80 <HAL_NfcSinglePlnRead+0xe4>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1813
    {
        HAL_NfcSetErrInj(pNFCQEntry, pRdReq->pErrInj);
400a6a71:	202dd0        	or	a2, a13, a13
400a6a74:	062c32        	l32i	a3, a12, 24
400a6a77:	effc01        	l32r	a0, 400a2a68 <_mcu2dram_text_start+0x268>
400a6a7a:	0000c0        	callx0	a0
400a6a7d:	010c02        	l8ui	a0, a12, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1819
    }

    /*  NFCQ DW3: DMA message, total data length  */
    pNFCQEntry->bsDmaTotalLength = pRdReq->bsSecLen;
    /*  PRCQ start DW   */
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a6a80:	7128      	l32i.n	a2, a1, 28
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1817
    {
        HAL_NfcSetErrInj(pNFCQEntry, pRdReq->pErrInj);
    }

    /*  NFCQ DW3: DMA message, total data length  */
    pNFCQEntry->bsDmaTotalLength = pRdReq->bsSecLen;
400a6a82:	0c4d02        	s8i	a0, a13, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1819
    /*  PRCQ start DW   */
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a6a85:	efb201        	l32r	a0, 400a2950 <_mcu2dram_text_start+0x150>
400a6a88:	0000c0        	callx0	a0
400a6a8b:	3d88      	l32i.n	a8, a13, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1822
    
    /*  NFCQ DW4: red and scramble   */
    if (NULL != pRdReq->ppNfcRed)
400a6a8d:	5c78      	l32i.n	a7, a12, 20
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1819
    }

    /*  NFCQ DW3: DMA message, total data length  */
    pNFCQEntry->bsDmaTotalLength = pRdReq->bsSecLen;
    /*  PRCQ start DW   */
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a6a8f:	808284        	insbits	a8, a2, 8, 16
400a6a92:	3d89      	s32i.n	a8, a13, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1822
    
    /*  NFCQ DW4: red and scramble   */
    if (NULL != pRdReq->ppNfcRed)
400a6a94:	055716        	beqz	a7, 400a6aed <HAL_NfcSinglePlnRead+0x151>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1826
    {
        pNFCQEntry->bsRedOntf = pRdReq->bsRedOntf;
        pNFCQEntry->bsRedEn = TRUE;
        pNFCQEntry->bsRedAddr = HAL_NfcGetRedRelativeAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPln,pRdReq->bsRedOntf);
400a6a97:	1128      	l32i.n	a2, a1, 4
400a6a99:	0f3d      	mov.n	a3, a15
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1824
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
    
    /*  NFCQ DW4: red and scramble   */
    if (NULL != pRdReq->ppNfcRed)
    {
        pNFCQEntry->bsRedOntf = pRdReq->bsRedOntf;
400a6a9b:	1cb8      	l32i.n	a11, a12, 4
400a6a9d:	4d98      	l32i.n	a9, a13, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1825
        pNFCQEntry->bsRedEn = TRUE;
400a6a9f:	2a0c      	movi.n	a10, 2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1824
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
    
    /*  NFCQ DW4: red and scramble   */
    if (NULL != pRdReq->ppNfcRed)
    {
        pNFCQEntry->bsRedOntf = pRdReq->bsRedOntf;
400a6aa1:	000b94        	insbits	a9, a11, 0, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1825
        pNFCQEntry->bsRedEn = TRUE;
400a6aa4:	2099a0        	or	a9, a9, a10
400a6aa7:	046d92        	s32i	a9, a13, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1826
        pNFCQEntry->bsRedAddr = HAL_NfcGetRedRelativeAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPln,pRdReq->bsRedOntf);
400a6aaa:	efec01        	l32r	a0, 400a2a5c <_mcu2dram_text_start+0x25c>
400a6aad:	0000c0        	callx0	a0
400a6ab0:	0f3d      	mov.n	a3, a15
400a6ab2:	6158      	l32i.n	a5, a1, 24
400a6ab4:	024d      	mov.n	a4, a2
400a6ab6:	1c68      	l32i.n	a6, a12, 4
400a6ab8:	012122        	l32i	a2, a1, 4
400a6abb:	046060        	extui	a6, a6, 0, 1
400a6abe:	efeb01        	l32r	a0, 400a2a6c <_mcu2dram_text_start+0x26c>
400a6ac1:	0000c0        	callx0	a0
400a6ac4:	4d78      	l32i.n	a7, a13, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1827
        *(pRdReq->ppNfcRed) = (NFC_RED*)HAL_NfcGetRedAbsoulteAddr(ucPU, ucLun, HAL_NfcGetWP(ucPU, ucLun), ucPln, pRdReq->bsRedOntf);
400a6ac6:	0f3d      	mov.n	a3, a15
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1826
    /*  NFCQ DW4: red and scramble   */
    if (NULL != pRdReq->ppNfcRed)
    {
        pNFCQEntry->bsRedOntf = pRdReq->bsRedOntf;
        pNFCQEntry->bsRedEn = TRUE;
        pNFCQEntry->bsRedAddr = HAL_NfcGetRedRelativeAddr(ucPU,ucLun,HAL_NfcGetWP(ucPU, ucLun),ucPln,pRdReq->bsRedOntf);
400a6ac8:	833274        	insbits	a7, a2, 3, 19
400a6acb:	4d79      	s32i.n	a7, a13, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1827
        *(pRdReq->ppNfcRed) = (NFC_RED*)HAL_NfcGetRedAbsoulteAddr(ucPU, ucLun, HAL_NfcGetWP(ucPU, ucLun), ucPln, pRdReq->bsRedOntf);
400a6acd:	1128      	l32i.n	a2, a1, 4
400a6acf:	efe301        	l32r	a0, 400a2a5c <_mcu2dram_text_start+0x25c>
400a6ad2:	0000c0        	callx0	a0
400a6ad5:	0f3d      	mov.n	a3, a15
400a6ad7:	6158      	l32i.n	a5, a1, 24
400a6ad9:	024d      	mov.n	a4, a2
400a6adb:	1c68      	l32i.n	a6, a12, 4
400a6add:	012122        	l32i	a2, a1, 4
400a6ae0:	046060        	extui	a6, a6, 0, 1
400a6ae3:	efe301        	l32r	a0, 400a2a70 <_mcu2dram_text_start+0x270>
400a6ae6:	0000c0        	callx0	a0
400a6ae9:	5c78      	l32i.n	a7, a12, 20
400a6aeb:	0729      	s32i.n	a2, a7, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1829
    }
    HAL_ConfigScramble(pNFCQEntry, pFlashAddr->usPage, SCR_SINGLE_PLN, ucPageType, eScrType);
400a6aed:	0d2d      	mov.n	a2, a13
400a6aef:	031e32        	l16ui	a3, a14, 6
400a6af2:	040c      	movi.n	a4, 0
400a6af4:	2158      	l32i.n	a5, a1, 8
400a6af6:	3168      	l32i.n	a6, a1, 12
400a6af8:	efdf01        	l32r	a0, 400a2a74 <_mcu2dram_text_start+0x274>
400a6afb:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1832

    /*  NFCQ DW5: LBA for read, fill by FW, the same with corresponding LBA in write red   */
    if (pRdReq->bsLbaChkEn || pRdReq->bsEmEn)
400a6afe:	1c58      	l32i.n	a5, a12, 4
400a6b00:	2c08      	l32i.n	a0, a12, 8
400a6b02:	02e517        	bbsi	a5, 1, 400a6b08 <HAL_NfcSinglePlnRead+0x16c>
400a6b05:	097057        	bbci	a0, 21, 400a6b12 <HAL_NfcSinglePlnRead+0x176>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1834
    {
        pNFCQEntry->bsRdLba = pRdReq->bsLba;
400a6b08:	5d88      	l32i.n	a8, a13, 20
400a6b0a:	419250        	srli	a9, a5, 2
400a6b0d:	e33984        	insbits	a8, a9, 3, 31
400a6b10:	5d89      	s32i.n	a8, a13, 20
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1838
    }
    
    /* Raw data read = true, each CW 2K align */
    pNFCQEntry->bsRawReadEn = pRdReq->bsRawData;
400a6b12:	4da8      	l32i.n	a10, a13, 16
400a6b14:	f5b000        	extui	a11, a0, 16, 16
400a6b17:	b04ba4        	insbits	a10, a11, 20, 20
400a6b1a:	046da2        	s32i	a10, a13, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1841

    /* DEC FIFO status report config */
    if (FALSE != pRdReq->bsDecFifoEn)
400a6b1d:	78e077        	bbsi	a0, 7, 400a6b99 <HAL_NfcSinglePlnRead+0x1fd>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1847
    {
        HAL_DecFifoTrigNfc(pNFCQEntry, pRdReq->bsDecFifoIndex);
    }
    
    /*  NFCQ DW8-15: flash address  */ 
    pNFCQEntry->atRowAddr[0].bsRowAddr = HAL_NfcGetFlashRowAddr(pFlashAddr);
400a6b20:	0e2d      	mov.n	a2, a14
400a6b22:	ef8a01        	l32r	a0, 400a294c <_mcu2dram_text_start+0x14c>
400a6b25:	0000c0        	callx0	a0
400a6b28:	8df8      	l32i.n	a15, a13, 32
400a6b2a:	e102f4        	insbits	a15, a2, 0, 29
400a6b2d:	8df9      	s32i.n	a15, a13, 32
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1850

    /*  CONFIGURE DSG   */
    pDSG = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(usCurDsgId);
400a6b2f:	001122        	l16ui	a2, a1, 0
400a6b32:	efd401        	l32r	a0, 400a2a84 <_mcu2dram_text_start+0x284>
400a6b35:	0000c0        	callx0	a0
400a6b38:	02dd      	mov.n	a13, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1851
    COM_MemZero((U32*)pDSG,sizeof(NORMAL_DSG_ENTRY)>>2);
400a6b3a:	430c      	movi.n	a3, 4
400a6b3c:	51f8      	l32i.n	a15, a1, 20
400a6b3e:	ef8201        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a6b41:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1857

    /*  DSG DW0: transfer length and chain config  */ 
    pDSG->bsXferByteLen = (pRdReq->bsSecLen) << SEC_SZ_BITS;
    pDSG->bsLast = TRUE;
    /*  DSG DW1: dram address  */ 
    pDSG->bsDramAddr =  HAL_NfcGetDmaAddr(pRdReq->bsRdBuffId, pRdReq->bsSecStart, ucBufUnit);
400a6b44:	7440f0        	extui	a4, a15, 0, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1855
    pDSG = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(usCurDsgId);
    COM_MemZero((U32*)pDSG,sizeof(NORMAL_DSG_ENTRY)>>2);

    /*  DSG DW0: transfer length and chain config  */ 
    pDSG->bsXferByteLen = (pRdReq->bsSecLen) << SEC_SZ_BITS;
    pDSG->bsLast = TRUE;
400a6b47:	00a222        	movi	a2, 0x200
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1854
    /*  CONFIGURE DSG   */
    pDSG = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(usCurDsgId);
    COM_MemZero((U32*)pDSG,sizeof(NORMAL_DSG_ENTRY)>>2);

    /*  DSG DW0: transfer length and chain config  */ 
    pDSG->bsXferByteLen = (pRdReq->bsSecLen) << SEC_SZ_BITS;
400a6b4a:	0d08      	l32i.n	a0, a13, 0
400a6b4c:	010c32        	l8ui	a3, a12, 1
400a6b4f:	d40000        	extui	a0, a0, 0, 14
400a6b52:	f27304        	insbits	a0, a3, 23, 30
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1855
    pDSG->bsLast = TRUE;
400a6b55:	200020        	or	a0, a0, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1857
    /*  DSG DW1: dram address  */ 
    pDSG->bsDramAddr =  HAL_NfcGetDmaAddr(pRdReq->bsRdBuffId, pRdReq->bsSecStart, ucBufUnit);
400a6b58:	000c32        	l8ui	a3, a12, 0
400a6b5b:	011c22        	l16ui	a2, a12, 2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1855
    pDSG = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(usCurDsgId);
    COM_MemZero((U32*)pDSG,sizeof(NORMAL_DSG_ENTRY)>>2);

    /*  DSG DW0: transfer length and chain config  */ 
    pDSG->bsXferByteLen = (pRdReq->bsSecLen) << SEC_SZ_BITS;
    pDSG->bsLast = TRUE;
400a6b5e:	0d09      	s32i.n	a0, a13, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1857
    /*  DSG DW1: dram address  */ 
    pDSG->bsDramAddr =  HAL_NfcGetDmaAddr(pRdReq->bsRdBuffId, pRdReq->bsSecStart, ucBufUnit);
400a6b60:	efca01        	l32r	a0, 400a2a88 <_mcu2dram_text_start+0x288>
400a6b63:	0000c0        	callx0	a0
400a6b66:	1d38      	l32i.n	a3, a13, 4
400a6b68:	71c8      	l32i.n	a12, a1, 28
400a6b6a:	e31234        	insbits	a3, a2, 1, 31
400a6b6d:	016d32        	s32i	a3, a13, 4
400a6b70:	001122        	l16ui	a2, a1, 0
400a6b73:	efc601        	l32r	a0, 400a2a8c <_mcu2dram_text_start+0x28c>
400a6b76:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1862
    /*  Set DSG valid    */
    HAL_SetNormalDsgSts(usCurDsgId, NORMAL_DSG_VALID);

    /*  Trigger NFC    */
    HAL_NfcCmdTrigger(pFlashAddr,  ucReqType, FALSE, INVALID_2F);
400a6b79:	0e2d      	mov.n	a2, a14
400a6b7b:	0c3d      	mov.n	a3, a12
400a6b7d:	040c      	movi.n	a4, 0
400a6b7f:	ffa052        	movi	a5, 255
400a6b82:	ef7401        	l32r	a0, 400a2954 <_mcu2dram_text_start+0x154>
400a6b85:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1864
    
    return NFC_STATUS_SUCCESS;
400a6b88:	120c      	movi.n	a2, 1
400a6b8a:	91c8      	l32i.n	a12, a1, 36
400a6b8c:	a1d8      	l32i.n	a13, a1, 40
400a6b8e:	b1e8      	l32i.n	a14, a1, 44
400a6b90:	c1f8      	l32i.n	a15, a1, 48
400a6b92:	8108      	l32i.n	a0, a1, 32
400a6b94:	40c112        	addi	a1, a1, 64
400a6b97:	f00d      	ret.n

400a6b99 <HAL_NfcSinglePlnRead+0x1fd>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1843
    pNFCQEntry->bsRawReadEn = pRdReq->bsRawData;

    /* DEC FIFO status report config */
    if (FALSE != pRdReq->bsDecFifoEn)
    {
        HAL_DecFifoTrigNfc(pNFCQEntry, pRdReq->bsDecFifoIndex);
400a6b99:	0d2d      	mov.n	a2, a13
400a6b9b:	090c32        	l8ui	a3, a12, 9
400a6b9e:	efb601        	l32r	a0, 400a2a78 <_mcu2dram_text_start+0x278>
400a6ba1:	0000c0        	callx0	a0
400a6ba4:	ffde06        	j	400a6b20 <HAL_NfcSinglePlnRead+0x184>

400a6ba7 <HAL_NfcSinglePlnRead+0x20b>:
	...

400a6ba8 <HAL_NfcSinglePlnRead+0x20c>:
400a6ba8:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1792
    pNFCQEntry->bsDCrcEn  = FALSE;
    pNFCQEntry->bsDsIndex = ucDsIndex;  //select flash page layout by DS entry in IRS
    pNFCQEntry->bsEMEn    = pRdReq->bsEmEn;
    
    /*  DSG configure   */
    while (FALSE == HAL_GetNormalDsg(&usCurDsgId))
400a6baa:	efb501        	l32r	a0, 400a2a80 <_mcu2dram_text_start+0x280>
400a6bad:	0000c0        	callx0	a0
400a6bb0:	ff4216        	beqz	a2, 400a6ba8 <HAL_NfcSinglePlnRead+0x20c>
400a6bb3:	ffa546        	j	400a6a4c <HAL_NfcSinglePlnRead+0xb0>

400a6bb6 <HAL_NfcSinglePlnRead+0x21a>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1749
    ucPU  = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
    
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
    {
        return NFC_STATUS_FAIL;
400a6bb6:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1864
    HAL_SetNormalDsgSts(usCurDsgId, NORMAL_DSG_VALID);

    /*  Trigger NFC    */
    HAL_NfcCmdTrigger(pFlashAddr,  ucReqType, FALSE, INVALID_2F);
    
    return NFC_STATUS_SUCCESS;
400a6bb8:	91c8      	l32i.n	a12, a1, 36
400a6bba:	a1d8      	l32i.n	a13, a1, 40
400a6bbc:	b1e8      	l32i.n	a14, a1, 44
400a6bbe:	c1f8      	l32i.n	a15, a1, 48
400a6bc0:	8108      	l32i.n	a0, a1, 32
400a6bc2:	40c112        	addi	a1, a1, 64
400a6bc5:	f00d      	ret.n

400a6bc7 <HAL_NfcSinglePlnRead+0x22b>:
	...

400a6bc8 <HAL_DecSramGetFlashSts>:
HAL_DecSramGetFlashSts():
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:222
    Called when need get flash status value 
History:
    20160310    abby    create
------------------------------------------------------------------------------*/
void MCU2_DRAM_TEXT HAL_DecSramGetFlashSts(FLASH_ADDR *pFlashAddr, FLASH_STATUS_ENTRY *pFlashSts)
{
400a6bc8:	f0c112        	addi	a1, a1, -16
400a6bcb:	3109      	s32i.n	a0, a1, 12
400a6bcd:	0139      	s32i.n	a3, a1, 0
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:225
    U8 ucRp,ucWp, ucPU, ucLun;

    ucPU  = pFlashAddr->ucPU;
400a6bcf:	000202        	l8ui	a0, a2, 0
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:226
    ucLun = pFlashAddr->ucLun;
400a6bd2:	010232        	l8ui	a3, a2, 1
400a6bd5:	2139      	s32i.n	a3, a1, 8
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:225
------------------------------------------------------------------------------*/
void MCU2_DRAM_TEXT HAL_DecSramGetFlashSts(FLASH_ADDR *pFlashAddr, FLASH_STATUS_ENTRY *pFlashSts)
{
    U8 ucRp,ucWp, ucPU, ucLun;

    ucPU  = pFlashAddr->ucPU;
400a6bd7:	1109      	s32i.n	a0, a1, 4
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:227
    ucLun = pFlashAddr->ucLun;
    ucWp  = HAL_NfcGetWP(pFlashAddr->ucPU, ucLun);
400a6bd9:	002d      	mov.n	a2, a0
400a6bdb:	efa001        	l32r	a0, 400a2a5c <_mcu2dram_text_start+0x25c>
400a6bde:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:230
    ucRp  = (ucWp + NFCQ_DEPTH - 1) % NFCQ_DEPTH;
    
    *(volatile FLASH_STATUS_ENTRY *)pFlashSts = *(volatile FLASH_STATUS_ENTRY *)(&g_pDecSramStsBase->aDecStsSram[ucPU][ucLun][ucRp][0]);
400a6be1:	460c      	movi.n	a6, 4
400a6be3:	2158      	l32i.n	a5, a1, 8
400a6be5:	ef1531        	l32r	a3, 400a283c <_mcu2dram_text_start+0x3c>
400a6be8:	1148      	l32i.n	a4, a1, 4
400a6bea:	222332        	l32i	a3, a3, 136
400a6bed:	445a      	add.n	a4, a4, a5
400a6bef:	523b      	addi.n	a5, a2, 3
400a6bf1:	f25560        	rems	a5, a5, a6
400a6bf4:	0128      	l32i.n	a2, a1, 0
400a6bf6:	745050        	extui	a5, a5, 0, 8
400a6bf9:	b04450        	addx8	a4, a4, a5
400a6bfc:	1144a0        	slli	a4, a4, 6
400a6bff:	334a      	add.n	a3, a3, a4
400a6c01:	041c      	movi.n	a4, 16
400a6c03:	ef9701        	l32r	a0, 400a2a60 <_mcu2dram_text_start+0x260>
400a6c06:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:232

    return;
400a6c09:	3108      	l32i.n	a0, a1, 12
400a6c0b:	10c112        	addi	a1, a1, 16
400a6c0e:	f00d      	ret.n

400a6c10 <HAL_NfcHostPageWrite>:
HAL_NfcHostPageWrite():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2060
    20140918    Gavin   add header for this function
    20151106    abby    modify to meet VT3533, dynamic update RED to OTFB/DRAM
    20160416    abby    add 3D MLC support
------------------------------------------------------------------------------*/
U32 MCU2_DRAM_TEXT HAL_NfcHostPageWrite(FLASH_ADDR *pFlashAddr, U8 ucCmdTag, U16 usFirstHSGId, NFC_PRG_REQ_DES *pWrReq)
{
400a6c10:	c0c112        	addi	a1, a1, -64
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2068
    U32 ulPgSz;
    NFCQ_ENTRY *pNFCQEntry;
    NFC_RED *pTargetRed;
    NFC_SCR_CONF eScrType = NORMAL_SCR;
    BOOL bMultiRowAddr = FALSE;
    BOOL bRedOntf = pWrReq->bsRedOntf;
400a6c13:	0348      	l32i.n	a4, a3, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2060
    20140918    Gavin   add header for this function
    20151106    abby    modify to meet VT3533, dynamic update RED to OTFB/DRAM
    20160416    abby    add 3D MLC support
------------------------------------------------------------------------------*/
U32 MCU2_DRAM_TEXT HAL_NfcHostPageWrite(FLASH_ADDR *pFlashAddr, U8 ucCmdTag, U16 usFirstHSGId, NFC_PRG_REQ_DES *pWrReq)
{
400a6c15:	7109      	s32i.n	a0, a1, 28
400a6c17:	81c9      	s32i.n	a12, a1, 32
400a6c19:	91d9      	s32i.n	a13, a1, 36
400a6c1b:	a1e9      	s32i.n	a14, a1, 40
400a6c1d:	b1f9      	s32i.n	a15, a1, 44
400a6c1f:	02ed      	mov.n	a14, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2071
    NFC_SCR_CONF eScrType = NORMAL_SCR;
    BOOL bMultiRowAddr = FALSE;
    BOOL bRedOntf = pWrReq->bsRedOntf;

    ucPU   = pFlashAddr->ucPU;
    ucLun  = pFlashAddr->ucLun;
400a6c21:	0102f2        	l8ui	a15, a2, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2070
    NFC_RED *pTargetRed;
    NFC_SCR_CONF eScrType = NORMAL_SCR;
    BOOL bMultiRowAddr = FALSE;
    BOOL bRedOntf = pWrReq->bsRedOntf;

    ucPU   = pFlashAddr->ucPU;
400a6c24:	0002d2        	l8ui	a13, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2060
    20140918    Gavin   add header for this function
    20151106    abby    modify to meet VT3533, dynamic update RED to OTFB/DRAM
    20160416    abby    add 3D MLC support
------------------------------------------------------------------------------*/
U32 MCU2_DRAM_TEXT HAL_NfcHostPageWrite(FLASH_ADDR *pFlashAddr, U8 ucCmdTag, U16 usFirstHSGId, NFC_PRG_REQ_DES *pWrReq)
{
400a6c27:	03cd      	mov.n	a12, a3
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2073
    BOOL bRedOntf = pWrReq->bsRedOntf;

    ucPU   = pFlashAddr->ucPU;
    ucLun  = pFlashAddr->ucLun;
    ucPln  = pFlashAddr->bsPln;
    usPage = pFlashAddr->usPage;
400a6c29:	031202        	l16ui	a0, a2, 6
400a6c2c:	5109      	s32i.n	a0, a1, 20
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2072
    BOOL bMultiRowAddr = FALSE;
    BOOL bRedOntf = pWrReq->bsRedOntf;

    ucPU   = pFlashAddr->ucPU;
    ucLun  = pFlashAddr->ucLun;
    ucPln  = pFlashAddr->bsPln;
400a6c2e:	0238      	l32i.n	a3, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2068
    U32 ulPgSz;
    NFCQ_ENTRY *pNFCQEntry;
    NFC_RED *pTargetRed;
    NFC_SCR_CONF eScrType = NORMAL_SCR;
    BOOL bMultiRowAddr = FALSE;
    BOOL bRedOntf = pWrReq->bsRedOntf;
400a6c30:	054040        	extui	a4, a4, 16, 1
400a6c33:	6149      	s32i.n	a4, a1, 24
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2072

    ucPU   = pFlashAddr->ucPU;
    ucLun  = pFlashAddr->ucLun;
    ucPln  = pFlashAddr->bsPln;
400a6c35:	353030        	extui	a3, a3, 16, 4
400a6c38:	4139      	s32i.n	a3, a1, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2075
    usPage = pFlashAddr->usPage;

    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a6c3a:	0d2d      	mov.n	a2, a13
400a6c3c:	203ff0        	or	a3, a15, a15
400a6c3f:	ef4001        	l32r	a0, 400a2940 <_mcu2dram_text_start+0x140>
400a6c42:	0000c0        	callx0	a0
400a6c45:	048216        	beqz	a2, 400a6c91 <HAL_NfcHostPageWrite+0x81>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2080
    {
        return NFC_STATUS_FAIL;
    }
    
    if (FALSE == HAL_NfcIsPairPageAccessable(usPage))
400a6c48:	5128      	l32i.n	a2, a1, 20
400a6c4a:	ef9801        	l32r	a0, 400a2aac <_mcu2dram_text_start+0x2ac>
400a6c4d:	0000c0        	callx0	a0
400a6c50:	d2bc      	beqz.n	a2, 400a6c91 <HAL_NfcHostPageWrite+0x81>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2086
    {
        return NFC_STATUS_FAIL;
    }

    /*  SGQ busy check   */
    if (TRUE == HAL_SgqIsBusy(ucPU, ucLun))
400a6c52:	0d2d      	mov.n	a2, a13
400a6c54:	203ff0        	or	a3, a15, a15
400a6c57:	ef8f01        	l32r	a0, 400a2a94 <_mcu2dram_text_start+0x294>
400a6c5a:	0000c0        	callx0	a0
400a6c5d:	301226        	beqi	a2, 1, 400a6c91 <HAL_NfcHostPageWrite+0x81>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2092
    {
        return NFC_STATUS_FAIL;
    }

    /*  CONFIGURE NFCQ   */
    pNFCQEntry = (NFCQ_ENTRY *)HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
400a6c60:	0d2d      	mov.n	a2, a13
400a6c62:	31d9      	s32i.n	a13, a1, 12
400a6c64:	0f3d      	mov.n	a3, a15
400a6c66:	ef3701        	l32r	a0, 400a2944 <_mcu2dram_text_start+0x144>
400a6c69:	0000c0        	callx0	a0
400a6c6c:	02dd      	mov.n	a13, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2093
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);
400a6c6e:	031c      	movi.n	a3, 16
400a6c70:	ef3601        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a6c73:	0000c0        	callx0	a0
400a6c76:	1a0c      	movi.n	a10, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2101
    ucReqType   = NF_PRCQ_PRG_MULTIPLN;      
#ifdef FLASH_3D_MLC  
    bMultiRowAddr  = TRUE;
    eScrType    = MLC_RW_TWO_PG;
#else
    if(FALSE != pWrReq->bsTlcMode)
400a6c78:	0c08      	l32i.n	a0, a12, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2114
    ulPgSz = (FALSE == bMultiRowAddr) ? (LOGIC_PIPE_PG_SZ) : (LOGIC_PIPE_PG_SZ * PGADDR_PER_PRG * INTRPG_PER_PGADDR);
    ucRedPlnNum = (FALSE == bMultiRowAddr) ? (PLN_PER_LUN) : (PLN_PER_LUN * PGADDR_PER_PRG * INTRPG_PER_PGADDR);
    
    /*  NFCQ DW0: mode configure   */
    pNFCQEntry->bsDCrcEn  = FALSE;
    pNFCQEntry->bsDsIndex = DS_ENTRY_SEL;
400a6c7a:	ef7a51        	l32r	a5, 400a2a64 <_mcu2dram_text_start+0x264>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2115
    pNFCQEntry->bsLbaChk  = pWrReq->bsLbaChkEn;
400a6c7d:	e57100        	extui	a7, a0, 17, 15
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2101
    ucReqType   = NF_PRCQ_PRG_MULTIPLN;      
#ifdef FLASH_3D_MLC  
    bMultiRowAddr  = TRUE;
    eScrType    = MLC_RW_TWO_PG;
#else
    if(FALSE != pWrReq->bsTlcMode)
400a6c80:	1e70b7        	bbci	a0, 27, 400a6ca2 <HAL_NfcHostPageWrite+0x92>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2103
    {
        ucReqType  = NF_PRCQ_TLC_PRG_1ST_MULTIPLN + pWrReq->bsTlcPgCycle;
400a6c83:	180c      	movi.n	a8, 1
400a6c85:	353700        	extui	a3, a0, 23, 4
400a6c88:	e1c332        	addi	a3, a3, -31
400a6c8b:	743030        	extui	a3, a3, 0, 8
400a6c8e:	000506        	j	400a6ca6 <HAL_NfcHostPageWrite+0x96>

400a6c91 <HAL_NfcHostPageWrite+0x81>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2077
    ucPln  = pFlashAddr->bsPln;
    usPage = pFlashAddr->usPage;

    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
    {
        return NFC_STATUS_FAIL;
400a6c91:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2170
    HAL_SgqBuildEntry(ucCmdTag, usFirstHSGId, pFlashAddr->ucPU, pFlashAddr->ucLun, TRUE);

    /*  Trigger NFC    */
    HAL_NfcCmdTrigger(pFlashAddr, ucReqType, FALSE, INVALID_2F);
    
    return NFC_STATUS_SUCCESS;
400a6c93:	81c8      	l32i.n	a12, a1, 32
400a6c95:	91d8      	l32i.n	a13, a1, 36
400a6c97:	a1e8      	l32i.n	a14, a1, 40
400a6c99:	b1f8      	l32i.n	a15, a1, 44
400a6c9b:	7108      	l32i.n	a0, a1, 28
400a6c9d:	40c112        	addi	a1, a1, 64
400a6ca0:	f00d      	ret.n

400a6ca2 <HAL_NfcHostPageWrite+0x92>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2103
    bMultiRowAddr  = TRUE;
    eScrType    = MLC_RW_TWO_PG;
#else
    if(FALSE != pWrReq->bsTlcMode)
    {
        ucReqType  = NF_PRCQ_TLC_PRG_1ST_MULTIPLN + pWrReq->bsTlcPgCycle;
400a6ca2:	031c      	movi.n	a3, 16
400a6ca4:	080c      	movi.n	a8, 0
400a6ca6:	1139      	s32i.n	a3, a1, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2113

    ulPgSz = (FALSE == bMultiRowAddr) ? (LOGIC_PIPE_PG_SZ) : (LOGIC_PIPE_PG_SZ * PGADDR_PER_PRG * INTRPG_PER_PGADDR);
    ucRedPlnNum = (FALSE == bMultiRowAddr) ? (PLN_PER_LUN) : (PLN_PER_LUN * PGADDR_PER_PRG * INTRPG_PER_PGADDR);
    
    /*  NFCQ DW0: mode configure   */
    pNFCQEntry->bsDCrcEn  = FALSE;
400a6ca8:	0d48      	l32i.n	a4, a13, 0
400a6caa:	f66c      	movi.n	a6, -17
400a6cac:	104460        	and	a4, a4, a6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2114
    pNFCQEntry->bsDsIndex = DS_ENTRY_SEL;
400a6caf:	104450        	and	a4, a4, a5
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2116
    pNFCQEntry->bsLbaChk  = pWrReq->bsLbaChkEn;
    pNFCQEntry->bsEMEn    = pWrReq->bsEmEn;
400a6cb2:	4c68      	l32i.n	a6, a12, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2119

    //inform this is host request
    pNFCQEntry->bsTrigOmEn = TRUE;
400a6cb4:	00a452        	movi	a5, 0x400
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2115
    ucRedPlnNum = (FALSE == bMultiRowAddr) ? (PLN_PER_LUN) : (PLN_PER_LUN * PGADDR_PER_PRG * INTRPG_PER_PGADDR);
    
    /*  NFCQ DW0: mode configure   */
    pNFCQEntry->bsDCrcEn  = FALSE;
    pNFCQEntry->bsDsIndex = DS_ENTRY_SEL;
    pNFCQEntry->bsLbaChk  = pWrReq->bsLbaChkEn;
400a6cb7:	215744        	insbits	a4, a7, 5, 5
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2116
    pNFCQEntry->bsEMEn    = pWrReq->bsEmEn;
400a6cba:	416360        	srli	a6, a6, 3
400a6cbd:	226644        	insbits	a4, a6, 6, 6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2119

    //inform this is host request
    pNFCQEntry->bsTrigOmEn = TRUE;
400a6cc0:	204450        	or	a4, a4, a5
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2120
    pNFCQEntry->bsDsgEn    = FALSE;
400a6cc3:	7faf62        	movi	a6, -129
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2121
    pNFCQEntry->bsNcqCntEn = TRUE;
400a6cc6:	eed051        	l32r	a5, 400a2808 <_mcu2dram_text_start+0x8>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2120
    pNFCQEntry->bsLbaChk  = pWrReq->bsLbaChkEn;
    pNFCQEntry->bsEMEn    = pWrReq->bsEmEn;

    //inform this is host request
    pNFCQEntry->bsTrigOmEn = TRUE;
    pNFCQEntry->bsDsgEn    = FALSE;
400a6cc9:	104460        	and	a4, a4, a6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2121
    pNFCQEntry->bsNcqCntEn = TRUE;
400a6ccc:	204450        	or	a4, a4, a5
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2124

    pNFCQEntry->bsOntfEn = TRUE;
    pNFCQEntry->bsNcqNum = ucCmdTag;
400a6ccf:	ef7051        	l32r	a5, 400a2a90 <_mcu2dram_text_start+0x290>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2123
    //inform this is host request
    pNFCQEntry->bsTrigOmEn = TRUE;
    pNFCQEntry->bsDsgEn    = FALSE;
    pNFCQEntry->bsNcqCntEn = TRUE;

    pNFCQEntry->bsOntfEn = TRUE;
400a6cd2:	2044a0        	or	a4, a4, a10
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2124
    pNFCQEntry->bsNcqNum = ucCmdTag;
400a6cd5:	104450        	and	a4, a4, a5
400a6cd8:	0d49      	s32i.n	a4, a13, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2127

    /*  NFCQ DW2: error injection  */
    if (FALSE != pWrReq->bsInjErrEn)
400a6cda:	0f70e7        	bbci	a0, 30, 400a6ced <HAL_NfcHostPageWrite+0xdd>
400a6cdd:	c189      	s32i.n	a8, a1, 48
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2129
    {
        HAL_NfcSetErrInj(pNFCQEntry, pWrReq->pErrInj);
400a6cdf:	0d2d      	mov.n	a2, a13
400a6ce1:	052c32        	l32i	a3, a12, 20
400a6ce4:	ef6101        	l32r	a0, 400a2a68 <_mcu2dram_text_start+0x268>
400a6ce7:	0000c0        	callx0	a0
400a6cea:	0c2182        	l32i	a8, a1, 48
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2134
    }
    
    /*  NFCQ DW3: DMA message, total data length  */
    /*  Note: for write cmd, the unit of DmaTotalLength is 1KB */
    pNFCQEntry->bsDmaTotalLength = ulPgSz >> CW_INFO_SZ_BITS;
400a6ced:	2189      	s32i.n	a8, a1, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2136
    /*  PRCQ start DW   */
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a6cef:	1128      	l32i.n	a2, a1, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2134
        HAL_NfcSetErrInj(pNFCQEntry, pWrReq->pErrInj);
    }
    
    /*  NFCQ DW3: DMA message, total data length  */
    /*  Note: for write cmd, the unit of DmaTotalLength is 1KB */
    pNFCQEntry->bsDmaTotalLength = ulPgSz >> CW_INFO_SZ_BITS;
400a6cf1:	094c      	movi.n	a9, 64
400a6cf3:	80a072        	movi	a7, 128
400a6cf6:	837980        	moveqz	a7, a9, a8
400a6cf9:	0179      	s32i.n	a7, a1, 0
400a6cfb:	0c4d72        	s8i	a7, a13, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2136
    /*  PRCQ start DW   */
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a6cfe:	ef1401        	l32r	a0, 400a2950 <_mcu2dram_text_start+0x150>
400a6d01:	0000c0        	callx0	a0
400a6d04:	3d08      	l32i.n	a0, a13, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2139

    /*  NFCQ DW4: red and scramble   */
    if (NULL != pWrReq->pNfcRed)
400a6d06:	3cb8      	l32i.n	a11, a12, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2136
    
    /*  NFCQ DW3: DMA message, total data length  */
    /*  Note: for write cmd, the unit of DmaTotalLength is 1KB */
    pNFCQEntry->bsDmaTotalLength = ulPgSz >> CW_INFO_SZ_BITS;
    /*  PRCQ start DW   */
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a6d08:	808204        	insbits	a0, a2, 8, 16
400a6d0b:	3d09      	s32i.n	a0, a13, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2139

    /*  NFCQ DW4: red and scramble   */
    if (NULL != pWrReq->pNfcRed)
400a6d0d:	054b16        	beqz	a11, 400a6d65 <HAL_NfcHostPageWrite+0x155>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2141
    {
        pNFCQEntry->bsRedOntf = bRedOntf;
400a6d10:	6148      	l32i.n	a4, a1, 24
400a6d12:	4d28      	l32i.n	a2, a13, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2142
        pNFCQEntry->bsRedEn = TRUE;
400a6d14:	230c      	movi.n	a3, 2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2141
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);

    /*  NFCQ DW4: red and scramble   */
    if (NULL != pWrReq->pNfcRed)
    {
        pNFCQEntry->bsRedOntf = bRedOntf;
400a6d16:	000424        	insbits	a2, a4, 0, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2142
        pNFCQEntry->bsRedEn = TRUE;
400a6d19:	202230        	or	a2, a2, a3
400a6d1c:	4d29      	s32i.n	a2, a13, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2143
        pTargetRed = (NFC_RED*)HAL_NfcGetRedAbsoulteAddr(ucPU, ucLun, HAL_NfcGetWP(ucPU, ucLun), ucPln, bRedOntf);
400a6d1e:	0f3d      	mov.n	a3, a15
400a6d20:	3128      	l32i.n	a2, a1, 12
400a6d22:	ef4e01        	l32r	a0, 400a2a5c <_mcu2dram_text_start+0x25c>
400a6d25:	0000c0        	callx0	a0
400a6d28:	0f3d      	mov.n	a3, a15
400a6d2a:	4158      	l32i.n	a5, a1, 16
400a6d2c:	024d      	mov.n	a4, a2
400a6d2e:	6168      	l32i.n	a6, a1, 24
400a6d30:	3128      	l32i.n	a2, a1, 12
400a6d32:	ef4f01        	l32r	a0, 400a2a70 <_mcu2dram_text_start+0x270>
400a6d35:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2144
        COM_MemCpy((U32 *)pTargetRed, (U32 *)(pWrReq->pNfcRed), RED_SZ_DW * ucRedPlnNum);
400a6d38:	3c38      	l32i.n	a3, a12, 12
400a6d3a:	0148      	l32i.n	a4, a1, 0
400a6d3c:	eecf01        	l32r	a0, 400a2878 <_mcu2dram_text_start+0x78>
400a6d3f:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2145
        pNFCQEntry->bsRedAddr = HAL_NfcGetRedRelativeAddr(ucPU, ucLun, HAL_NfcGetWP(ucPU, ucLun), ucPln, bRedOntf);
400a6d42:	3128      	l32i.n	a2, a1, 12
400a6d44:	0f3d      	mov.n	a3, a15
400a6d46:	ef4501        	l32r	a0, 400a2a5c <_mcu2dram_text_start+0x25c>
400a6d49:	0000c0        	callx0	a0
400a6d4c:	0f3d      	mov.n	a3, a15
400a6d4e:	4158      	l32i.n	a5, a1, 16
400a6d50:	024d      	mov.n	a4, a2
400a6d52:	062162        	l32i	a6, a1, 24
400a6d55:	032122        	l32i	a2, a1, 12
400a6d58:	ef4501        	l32r	a0, 400a2a6c <_mcu2dram_text_start+0x26c>
400a6d5b:	0000c0        	callx0	a0
400a6d5e:	4d58      	l32i.n	a5, a13, 16
400a6d60:	833254        	insbits	a5, a2, 3, 19
400a6d63:	4d59      	s32i.n	a5, a13, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2147
    }
    HAL_ConfigScramble(pNFCQEntry, pFlashAddr->usPage, SCR_FULL_PLN, 0, eScrType);
400a6d65:	0d2d      	mov.n	a2, a13
400a6d67:	031e32        	l16ui	a3, a14, 6
400a6d6a:	240c      	movi.n	a4, 2
400a6d6c:	050c      	movi.n	a5, 0
400a6d6e:	2168      	l32i.n	a6, a1, 8
400a6d70:	ef4101        	l32r	a0, 400a2a74 <_mcu2dram_text_start+0x274>
400a6d73:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2150

    /*  NFCQ DW6-7: SSU 0 and SSU 1   */
    if(FALSE != pWrReq->bsSsu0En)
400a6d76:	0c08      	l32i.n	a0, a12, 0
400a6d78:	4af037        	bbsi	a0, 19, 400a6dc6 <HAL_NfcHostPageWrite+0x1b6>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2154
    {
        HAL_ConfigSsu0(pNFCQEntry, pWrReq->bsSsu0Addr, pWrReq->bsSsu0Ontf);
    }
    if(FALSE != pWrReq->bsSsu1En)
400a6d7b:	5af057        	bbsi	a0, 21, 400a6dd9 <HAL_NfcHostPageWrite+0x1c9>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2160
    {
        HAL_ConfigSsu1(pNFCQEntry, pWrReq->bsSsu1Addr, pWrReq->bsSsu1Ontf);
    }

    /*  NFCQ DW8-15: flash address  */
    HAL_NfcSetFullPageRowAddr(pNFCQEntry, pFlashAddr, bMultiRowAddr);
400a6d7e:	0d2d      	mov.n	a2, a13
400a6d80:	0e3d      	mov.n	a3, a14
400a6d82:	2148      	l32i.n	a4, a1, 8
400a6d84:	0121c2        	l32i	a12, a1, 4
400a6d87:	ef3d01        	l32r	a0, 400a2a7c <_mcu2dram_text_start+0x27c>
400a6d8a:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2165

    /*  CONFIGURE SGQ   */
    g_pNfcqForHalDebug = pNFCQEntry;

    HAL_SgqBuildEntry(ucCmdTag, usFirstHSGId, pFlashAddr->ucPU, pFlashAddr->ucLun, TRUE);
400a6d8d:	020c      	movi.n	a2, 0
400a6d8f:	030c      	movi.n	a3, 0
400a6d91:	000e42        	l8ui	a4, a14, 0
400a6d94:	010e52        	l8ui	a5, a14, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2163

    /*  NFCQ DW8-15: flash address  */
    HAL_NfcSetFullPageRowAddr(pNFCQEntry, pFlashAddr, bMultiRowAddr);

    /*  CONFIGURE SGQ   */
    g_pNfcqForHalDebug = pNFCQEntry;
400a6d97:	eea971        	l32r	a7, 400a283c <_mcu2dram_text_start+0x3c>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2165

    HAL_SgqBuildEntry(ucCmdTag, usFirstHSGId, pFlashAddr->ucPU, pFlashAddr->ucLun, TRUE);
400a6d9a:	160c      	movi.n	a6, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2163

    /*  NFCQ DW8-15: flash address  */
    HAL_NfcSetFullPageRowAddr(pNFCQEntry, pFlashAddr, bMultiRowAddr);

    /*  CONFIGURE SGQ   */
    g_pNfcqForHalDebug = pNFCQEntry;
400a6d9c:	4b67d2        	s32i	a13, a7, 0x12c
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2165

    HAL_SgqBuildEntry(ucCmdTag, usFirstHSGId, pFlashAddr->ucPU, pFlashAddr->ucLun, TRUE);
400a6d9f:	ef3e01        	l32r	a0, 400a2a98 <_mcu2dram_text_start+0x298>
400a6da2:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2168

    /*  Trigger NFC    */
    HAL_NfcCmdTrigger(pFlashAddr, ucReqType, FALSE, INVALID_2F);
400a6da5:	040c      	movi.n	a4, 0
400a6da7:	ffa052        	movi	a5, 255
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2170
    
    return NFC_STATUS_SUCCESS;
400a6daa:	91d8      	l32i.n	a13, a1, 36
400a6dac:	b1f8      	l32i.n	a15, a1, 44
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2168
    g_pNfcqForHalDebug = pNFCQEntry;

    HAL_SgqBuildEntry(ucCmdTag, usFirstHSGId, pFlashAddr->ucPU, pFlashAddr->ucLun, TRUE);

    /*  Trigger NFC    */
    HAL_NfcCmdTrigger(pFlashAddr, ucReqType, FALSE, INVALID_2F);
400a6dae:	0c3d      	mov.n	a3, a12
400a6db0:	0e2d      	mov.n	a2, a14
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2170
    
    return NFC_STATUS_SUCCESS;
400a6db2:	81c8      	l32i.n	a12, a1, 32
400a6db4:	a1e8      	l32i.n	a14, a1, 40
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2168
    g_pNfcqForHalDebug = pNFCQEntry;

    HAL_SgqBuildEntry(ucCmdTag, usFirstHSGId, pFlashAddr->ucPU, pFlashAddr->ucLun, TRUE);

    /*  Trigger NFC    */
    HAL_NfcCmdTrigger(pFlashAddr, ucReqType, FALSE, INVALID_2F);
400a6db6:	eee701        	l32r	a0, 400a2954 <_mcu2dram_text_start+0x154>
400a6db9:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2170
    
    return NFC_STATUS_SUCCESS;
400a6dbc:	120c      	movi.n	a2, 1
400a6dbe:	7108      	l32i.n	a0, a1, 28
400a6dc0:	40c112        	addi	a1, a1, 64
400a6dc3:	f00d      	ret.n

400a6dc5 <HAL_NfcHostPageWrite+0x1b5>:
	...

400a6dc6 <HAL_NfcHostPageWrite+0x1b6>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2152
    HAL_ConfigScramble(pNFCQEntry, pFlashAddr->usPage, SCR_FULL_PLN, 0, eScrType);

    /*  NFCQ DW6-7: SSU 0 and SSU 1   */
    if(FALSE != pWrReq->bsSsu0En)
    {
        HAL_ConfigSsu0(pNFCQEntry, pWrReq->bsSsu0Addr, pWrReq->bsSsu0Ontf);
400a6dc6:	0d2d      	mov.n	a2, a13
400a6dc8:	021c32        	l16ui	a3, a12, 4
400a6dcb:	054400        	extui	a4, a0, 20, 1
400a6dce:	ef3301        	l32r	a0, 400a2a9c <_mcu2dram_text_start+0x29c>
400a6dd1:	0000c0        	callx0	a0
400a6dd4:	0c08      	l32i.n	a0, a12, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2154
    }
    if(FALSE != pWrReq->bsSsu1En)
400a6dd6:	a47057        	bbci	a0, 21, 400a6d7e <HAL_NfcHostPageWrite+0x16e>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2156
    {
        HAL_ConfigSsu1(pNFCQEntry, pWrReq->bsSsu1Addr, pWrReq->bsSsu1Ontf);
400a6dd9:	031c32        	l16ui	a3, a12, 6
400a6ddc:	202dd0        	or	a2, a13, a13
400a6ddf:	054600        	extui	a4, a0, 22, 1
400a6de2:	ef2f01        	l32r	a0, 400a2aa0 <_mcu2dram_text_start+0x2a0>
400a6de5:	0000c0        	callx0	a0
400a6de8:	ffe486        	j	400a6d7e <HAL_NfcHostPageWrite+0x16e>

400a6deb <HAL_NfcHostPageWrite+0x1db>:
	...

400a6dec <HAL_NfcFullPageWrite>:
HAL_NfcFullPageWrite():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1182
History:
    20151127    abby    support RED dynamically update to DRAM or OTFB
    20160108    abby    add SLC/TLC mode support
------------------------------------------------------------------------------*/
U32 MCU2_DRAM_TEXT HAL_NfcFullPageWrite(FLASH_ADDR *pFlashAddr, NFC_PRG_REQ_DES *pWrReq)
{
400a6dec:	c0c112        	addi	a1, a1, -64
400a6def:	a109      	s32i.n	a0, a1, 40
400a6df1:	c1d9      	s32i.n	a13, a1, 48
400a6df3:	e1f9      	s32i.n	a15, a1, 56
400a6df5:	b1c9      	s32i.n	a12, a1, 44
400a6df7:	d1e9      	s32i.n	a14, a1, 52
400a6df9:	03cd      	mov.n	a12, a3
400a6dfb:	02ed      	mov.n	a14, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1194
    NFC_SCR_CONF eScrType;
    BOOL bMultiRowAddr;
    BOOL bRedOntf = pWrReq->bsRedOntf;

    ucPU   = pFlashAddr->ucPU;
    ucLun  = pFlashAddr->ucLun;
400a6dfd:	010ef2        	l8ui	a15, a14, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1193
    NORMAL_DSG_ENTRY * pDSG;
    NFC_SCR_CONF eScrType;
    BOOL bMultiRowAddr;
    BOOL bRedOntf = pWrReq->bsRedOntf;

    ucPU   = pFlashAddr->ucPU;
400a6e00:	000ed2        	l8ui	a13, a14, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1195
    ucLun  = pFlashAddr->ucLun;
    ucPln  = pFlashAddr->bsPln;
400a6e03:	0228      	l32i.n	a2, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1191
    NFCQ_ENTRY *pNFCQEntry;
    NFC_RED *pTargetRed;
    NORMAL_DSG_ENTRY * pDSG;
    NFC_SCR_CONF eScrType;
    BOOL bMultiRowAddr;
    BOOL bRedOntf = pWrReq->bsRedOntf;
400a6e05:	0338      	l32i.n	a3, a3, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1196

    ucPU   = pFlashAddr->ucPU;
    ucLun  = pFlashAddr->ucLun;
    ucPln  = pFlashAddr->bsPln;
    usPage = pFlashAddr->usPage;
400a6e07:	031e02        	l16ui	a0, a14, 6
400a6e0a:	9109      	s32i.n	a0, a1, 36
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1191
    NFCQ_ENTRY *pNFCQEntry;
    NFC_RED *pTargetRed;
    NORMAL_DSG_ENTRY * pDSG;
    NFC_SCR_CONF eScrType;
    BOOL bMultiRowAddr;
    BOOL bRedOntf = pWrReq->bsRedOntf;
400a6e0c:	053030        	extui	a3, a3, 16, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1195

    ucPU   = pFlashAddr->ucPU;
    ucLun  = pFlashAddr->ucLun;
    ucPln  = pFlashAddr->bsPln;
400a6e0f:	352020        	extui	a2, a2, 16, 4
400a6e12:	6129      	s32i.n	a2, a1, 24
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1191
    NFCQ_ENTRY *pNFCQEntry;
    NFC_RED *pTargetRed;
    NORMAL_DSG_ENTRY * pDSG;
    NFC_SCR_CONF eScrType;
    BOOL bMultiRowAddr;
    BOOL bRedOntf = pWrReq->bsRedOntf;
400a6e14:	f139      	s32i.n	a3, a1, 60
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1198
    ucPU   = pFlashAddr->ucPU;
    ucLun  = pFlashAddr->ucLun;
    ucPln  = pFlashAddr->bsPln;
    usPage = pFlashAddr->usPage;

    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a6e16:	0d2d      	mov.n	a2, a13
400a6e18:	203ff0        	or	a3, a15, a15
400a6e1b:	eec901        	l32r	a0, 400a2940 <_mcu2dram_text_start+0x140>
400a6e1e:	0000c0        	callx0	a0
400a6e21:	19c216        	beqz	a2, 400a6fc1 <HAL_NfcFullPageWrite+0x1d5>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1203
    {
        return NFC_STATUS_FAIL;
    }
    
    if (FALSE == HAL_NfcIsPairPageAccessable(usPage))
400a6e24:	092122        	l32i	a2, a1, 36
400a6e27:	ef2101        	l32r	a0, 400a2aac <_mcu2dram_text_start+0x2ac>
400a6e2a:	0000c0        	callx0	a0
400a6e2d:	190216        	beqz	a2, 400a6fc1 <HAL_NfcFullPageWrite+0x1d5>
400a6e30:	51d9      	s32i.n	a13, a1, 20
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1209
    {
        return NFC_STATUS_FAIL;
    }

    /*  CONFIGURE NFCQ   */
    pNFCQEntry = (NFCQ_ENTRY *)HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
400a6e32:	0d2d      	mov.n	a2, a13
400a6e34:	0f3d      	mov.n	a3, a15
400a6e36:	eec301        	l32r	a0, 400a2944 <_mcu2dram_text_start+0x144>
400a6e39:	0000c0        	callx0	a0
400a6e3c:	02dd      	mov.n	a13, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1210
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);
400a6e3e:	031c      	movi.n	a3, 16
400a6e40:	eec201        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a6e43:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1219
    eScrType        = MLC_RW_TWO_PG;
    ulPgSz          = LOGIC_PIPE_PG_SZ * PGADDR_PER_PRG * INTRPG_PER_PGADDR;
    ucRedPlnNum     = PLN_PER_LUN * PGADDR_PER_PRG * INTRPG_PER_PGADDR;
    bMultiRowAddr   = TRUE;
#elif defined(FLASH_INTEL_3DTLC)
    if(FALSE == pWrReq->bsTlcMode)//SLC mode
400a6e46:	0c48      	l32i.n	a4, a12, 0
400a6e48:	051c      	movi.n	a5, 16
400a6e4a:	054b40        	extui	a4, a4, 27, 1
400a6e4d:	181456        	bnez	a4, 400a6fd2 <HAL_NfcFullPageWrite+0x1e6>
400a6e50:	8159      	s32i.n	a5, a1, 32
400a6e52:	060c      	movi.n	a6, 0
400a6e54:	ee6d71        	l32r	a7, 400a2808 <_mcu2dram_text_start+0x8>
400a6e57:	480c      	movi.n	a8, 4
400a6e59:	090c      	movi.n	a9, 0
400a6e5b:	3199      	s32i.n	a9, a1, 12
400a6e5d:	016182        	s32i	a8, a1, 4
400a6e60:	076172        	s32i	a7, a1, 28
400a6e63:	046162        	s32i	a6, a1, 16

400a6e66 <HAL_NfcFullPageWrite+0x7a>:
400a6e66:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1265
        ucRedPlnNum     = PLN_PER_LUN;
        bMultiRowAddr   = FALSE;
    }
#endif

    pNFCQEntry->bsDsgEn = TRUE;
400a6e68:	0da8      	l32i.n	a10, a13, 0
400a6e6a:	80a0b2        	movi	a11, 128
400a6e6d:	20aab0        	or	a10, a10, a11
400a6e70:	006da2        	s32i	a10, a13, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1266
    while (FALSE == HAL_GetNormalDsg(&usCurDsgId))
400a6e73:	ef0301        	l32r	a0, 400a2a80 <_mcu2dram_text_start+0x280>
400a6e76:	0000c0        	callx0	a0
400a6e79:	1af216        	beqz	a2, 400a702c <HAL_NfcFullPageWrite+0x240>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1270
    {
        ;
    }
    pDSG = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(usCurDsgId);
400a6e7c:	001122        	l16ui	a2, a1, 0
400a6e7f:	ef0101        	l32r	a0, 400a2a84 <_mcu2dram_text_start+0x284>
400a6e82:	0000c0        	callx0	a0
400a6e85:	2129      	s32i.n	a2, a1, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1271
    COM_MemZero((U32*)pDSG,sizeof(NORMAL_DSG_ENTRY)>>2);
400a6e87:	04a032        	movi	a3, 4
400a6e8a:	eeaf01        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a6e8d:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1284
    pNFCQEntry->bsOtfbBsSel = OTFB_BASE_SEL;
#endif

    pNFCQEntry->bsDCrcEn  = FALSE;
    pNFCQEntry->bsDsIndex = DS_ENTRY_SEL;
    pNFCQEntry->bsLbaChk  = pWrReq->bsLbaChkEn;
400a6e90:	0c08      	l32i.n	a0, a12, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1283
    pNFCQEntry->bsXorEn  = FALSE;
    pNFCQEntry->bsOtfbBsSel = OTFB_BASE_SEL;
#endif

    pNFCQEntry->bsDCrcEn  = FALSE;
    pNFCQEntry->bsDsIndex = DS_ENTRY_SEL;
400a6e92:	eef431        	l32r	a3, 400a2a64 <_mcu2dram_text_start+0x264>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1282
    pNFCQEntry->bsOntfEn = TRUE;
    pNFCQEntry->bsXorEn  = FALSE;
    pNFCQEntry->bsOtfbBsSel = OTFB_BASE_SEL;
#endif

    pNFCQEntry->bsDCrcEn  = FALSE;
400a6e95:	f46c      	movi.n	a4, -17
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1273
        ;
    }
    pDSG = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(usCurDsgId);
    COM_MemZero((U32*)pDSG,sizeof(NORMAL_DSG_ENTRY)>>2);

    pNFCQEntry->bsFstDsgPtr = usCurDsgId;
400a6e97:	001122        	l16ui	a2, a1, 0
400a6e9a:	0d58      	l32i.n	a5, a13, 0
400a6e9c:	012290        	slli	a2, a2, 23
400a6e9f:	a20524        	insbits	a2, a5, 0, 22
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1282
    pNFCQEntry->bsOntfEn = TRUE;
    pNFCQEntry->bsXorEn  = FALSE;
    pNFCQEntry->bsOtfbBsSel = OTFB_BASE_SEL;
#endif

    pNFCQEntry->bsDCrcEn  = FALSE;
400a6ea2:	102240        	and	a2, a2, a4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1283
    pNFCQEntry->bsDsIndex = DS_ENTRY_SEL;
400a6ea5:	102230        	and	a2, a2, a3
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1284
    pNFCQEntry->bsLbaChk  = pWrReq->bsLbaChkEn;
400a6ea8:	e54100        	extui	a4, a0, 17, 15
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1285
    pNFCQEntry->bsEMEn    = pWrReq->bsEmEn;
400a6eab:	4c38      	l32i.n	a3, a12, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1284
    pNFCQEntry->bsOtfbBsSel = OTFB_BASE_SEL;
#endif

    pNFCQEntry->bsDCrcEn  = FALSE;
    pNFCQEntry->bsDsIndex = DS_ENTRY_SEL;
    pNFCQEntry->bsLbaChk  = pWrReq->bsLbaChkEn;
400a6ead:	215424        	insbits	a2, a4, 5, 5
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1285
    pNFCQEntry->bsEMEn    = pWrReq->bsEmEn;
400a6eb0:	413330        	srli	a3, a3, 3
400a6eb3:	226324        	insbits	a2, a3, 6, 6
400a6eb6:	0d29      	s32i.n	a2, a13, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1288

    /*  NFCQ DW2: error injection  */
    if (FALSE != pWrReq->bsInjErrEn)
400a6eb8:	0970e7        	bbci	a0, 30, 400a6ec5 <HAL_NfcFullPageWrite+0xd9>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1290
    {
        HAL_NfcSetErrInj(pNFCQEntry, pWrReq->pErrInj);
400a6ebb:	0d2d      	mov.n	a2, a13
400a6ebd:	5c38      	l32i.n	a3, a12, 20
400a6ebf:	eeea01        	l32r	a0, 400a2a68 <_mcu2dram_text_start+0x268>
400a6ec2:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1295
    }
    
    /*  NFCQ DW3: DMA message, total data length  */
    /*  Note: for write cmd, the unit of DmaTotalLength is 1KB */
    pNFCQEntry->bsDmaTotalLength = ulPgSz >> CW_INFO_SZ_BITS;
400a6ec5:	7138      	l32i.n	a3, a1, 28
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1297
    /*  PRCQ start DW   */
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a6ec7:	8128      	l32i.n	a2, a1, 32
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1295
        HAL_NfcSetErrInj(pNFCQEntry, pWrReq->pErrInj);
    }
    
    /*  NFCQ DW3: DMA message, total data length  */
    /*  Note: for write cmd, the unit of DmaTotalLength is 1KB */
    pNFCQEntry->bsDmaTotalLength = ulPgSz >> CW_INFO_SZ_BITS;
400a6ec9:	413a30        	srli	a3, a3, 10
400a6ecc:	0c4d32        	s8i	a3, a13, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1297
    /*  PRCQ start DW   */
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a6ecf:	eea001        	l32r	a0, 400a2950 <_mcu2dram_text_start+0x150>
400a6ed2:	0000c0        	callx0	a0
400a6ed5:	3d58      	l32i.n	a5, a13, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1300

    /*  NFCQ DW4: red and scramble   */
    if (NULL != pWrReq->pNfcRed)
400a6ed7:	3c48      	l32i.n	a4, a12, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1297
    
    /*  NFCQ DW3: DMA message, total data length  */
    /*  Note: for write cmd, the unit of DmaTotalLength is 1KB */
    pNFCQEntry->bsDmaTotalLength = ulPgSz >> CW_INFO_SZ_BITS;
    /*  PRCQ start DW   */
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a6ed9:	808254        	insbits	a5, a2, 8, 16
400a6edc:	3d59      	s32i.n	a5, a13, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1300

    /*  NFCQ DW4: red and scramble   */
    if (NULL != pWrReq->pNfcRed)
400a6ede:	057416        	beqz	a4, 400a6f39 <HAL_NfcFullPageWrite+0x14d>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1304
    {
        pNFCQEntry->bsRedOntf = bRedOntf;
        pNFCQEntry->bsRedEn = TRUE;
        pTargetRed = (NFC_RED*)HAL_NfcGetRedAbsoulteAddr(ucPU, ucLun, HAL_NfcGetWP(ucPU, ucLun), ucPln, bRedOntf);
400a6ee1:	5128      	l32i.n	a2, a1, 20
400a6ee3:	0f3d      	mov.n	a3, a15
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1302
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);

    /*  NFCQ DW4: red and scramble   */
    if (NULL != pWrReq->pNfcRed)
    {
        pNFCQEntry->bsRedOntf = bRedOntf;
400a6ee5:	f188      	l32i.n	a8, a1, 60
400a6ee7:	4d68      	l32i.n	a6, a13, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1303
        pNFCQEntry->bsRedEn = TRUE;
400a6ee9:	270c      	movi.n	a7, 2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1302
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);

    /*  NFCQ DW4: red and scramble   */
    if (NULL != pWrReq->pNfcRed)
    {
        pNFCQEntry->bsRedOntf = bRedOntf;
400a6eeb:	000864        	insbits	a6, a8, 0, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1303
        pNFCQEntry->bsRedEn = TRUE;
400a6eee:	206670        	or	a6, a6, a7
400a6ef1:	4d69      	s32i.n	a6, a13, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1304
        pTargetRed = (NFC_RED*)HAL_NfcGetRedAbsoulteAddr(ucPU, ucLun, HAL_NfcGetWP(ucPU, ucLun), ucPln, bRedOntf);
400a6ef3:	eeda01        	l32r	a0, 400a2a5c <_mcu2dram_text_start+0x25c>
400a6ef6:	0000c0        	callx0	a0
400a6ef9:	0f3d      	mov.n	a3, a15
400a6efb:	6158      	l32i.n	a5, a1, 24
400a6efd:	024d      	mov.n	a4, a2
400a6eff:	f168      	l32i.n	a6, a1, 60
400a6f01:	5128      	l32i.n	a2, a1, 20
400a6f03:	eedb01        	l32r	a0, 400a2a70 <_mcu2dram_text_start+0x270>
400a6f06:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1305
        COM_MemCpy((U32 *)pTargetRed, (U32 *)pWrReq->pNfcRed, RED_SZ_DW * ucRedPlnNum);
400a6f09:	1148      	l32i.n	a4, a1, 4
400a6f0b:	3c38      	l32i.n	a3, a12, 12
400a6f0d:	1144c0        	slli	a4, a4, 4
400a6f10:	ee5a01        	l32r	a0, 400a2878 <_mcu2dram_text_start+0x78>
400a6f13:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1306
        pNFCQEntry->bsRedAddr = HAL_NfcGetRedRelativeAddr(ucPU, ucLun, HAL_NfcGetWP(ucPU, ucLun), ucPln, bRedOntf);
400a6f16:	5128      	l32i.n	a2, a1, 20
400a6f18:	203ff0        	or	a3, a15, a15
400a6f1b:	eed001        	l32r	a0, 400a2a5c <_mcu2dram_text_start+0x25c>
400a6f1e:	0000c0        	callx0	a0
400a6f21:	0f3d      	mov.n	a3, a15
400a6f23:	6158      	l32i.n	a5, a1, 24
400a6f25:	024d      	mov.n	a4, a2
400a6f27:	f168      	l32i.n	a6, a1, 60
400a6f29:	052122        	l32i	a2, a1, 20
400a6f2c:	eed001        	l32r	a0, 400a2a6c <_mcu2dram_text_start+0x26c>
400a6f2f:	0000c0        	callx0	a0
400a6f32:	4d58      	l32i.n	a5, a13, 16
400a6f34:	833254        	insbits	a5, a2, 3, 19
400a6f37:	4d59      	s32i.n	a5, a13, 16
400a6f39:	21f8      	l32i.n	a15, a1, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1309
    }

    HAL_ConfigScramble(pNFCQEntry, pFlashAddr->usPage, SCR_FULL_PLN, 0, eScrType);
400a6f3b:	0d2d      	mov.n	a2, a13
400a6f3d:	031e32        	l16ui	a3, a14, 6
400a6f40:	240c      	movi.n	a4, 2
400a6f42:	050c      	movi.n	a5, 0
400a6f44:	4168      	l32i.n	a6, a1, 16
400a6f46:	eecb01        	l32r	a0, 400a2a74 <_mcu2dram_text_start+0x274>
400a6f49:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1312

    /*  NFCQ DW6-7: SSU 0 and SSU 1   */
    if(FALSE != pWrReq->bsSsu0En)
400a6f4c:	0c08      	l32i.n	a0, a12, 0
400a6f4e:	056300        	extui	a6, a0, 19, 1
400a6f51:	0a1656        	bnez	a6, 400a6ff6 <HAL_NfcFullPageWrite+0x20a>
400a6f54:	057500        	extui	a7, a0, 21, 1
400a6f57:	0af756        	bnez	a7, 400a700a <HAL_NfcFullPageWrite+0x21e>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1322
    {
        HAL_ConfigSsu1(pNFCQEntry, pWrReq->bsSsu1Addr, pWrReq->bsSsu1Ontf);
    }

    /*  NFCQ DW8-15: flash address  */
    HAL_NfcSetFullPageRowAddr(pNFCQEntry, pFlashAddr, bMultiRowAddr);
400a6f5a:	0d2d      	mov.n	a2, a13
400a6f5c:	203ee0        	or	a3, a14, a14
400a6f5f:	032142        	l32i	a4, a1, 12
400a6f62:	eec601        	l32r	a0, 400a2a7c <_mcu2dram_text_start+0x27c>
400a6f65:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1326

    pDSG->bsLast = TRUE;
    pDSG->bsXferByteLen = ulPgSz;
    pDSG->bsDramAddr = HAL_NfcGetDmaAddr(pWrReq->bsWrBuffId, 0, LOGIC_PIPE_PG_SZ_BITS);
400a6f68:	001c22        	l16ui	a2, a12, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1324
    }

    /*  NFCQ DW8-15: flash address  */
    HAL_NfcSetFullPageRowAddr(pNFCQEntry, pFlashAddr, bMultiRowAddr);

    pDSG->bsLast = TRUE;
400a6f6b:	00a292        	movi	a9, 0x200
400a6f6e:	0f88      	l32i.n	a8, a15, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1326
    pDSG->bsXferByteLen = ulPgSz;
    pDSG->bsDramAddr = HAL_NfcGetDmaAddr(pWrReq->bsWrBuffId, 0, LOGIC_PIPE_PG_SZ_BITS);
400a6f70:	030c      	movi.n	a3, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1324
    }

    /*  NFCQ DW8-15: flash address  */
    HAL_NfcSetFullPageRowAddr(pNFCQEntry, pFlashAddr, bMultiRowAddr);

    pDSG->bsLast = TRUE;
400a6f72:	208890        	or	a8, a8, a9
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1325
    pDSG->bsXferByteLen = ulPgSz;
400a6f75:	7198      	l32i.n	a9, a1, 28
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1326
    pDSG->bsDramAddr = HAL_NfcGetDmaAddr(pWrReq->bsWrBuffId, 0, LOGIC_PIPE_PG_SZ_BITS);
400a6f77:	10a042        	movi	a4, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1325

    /*  NFCQ DW8-15: flash address  */
    HAL_NfcSetFullPageRowAddr(pNFCQEntry, pFlashAddr, bMultiRowAddr);

    pDSG->bsLast = TRUE;
    pDSG->bsXferByteLen = ulPgSz;
400a6f7a:	e3e984        	insbits	a8, a9, 14, 31
400a6f7d:	006f82        	s32i	a8, a15, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1326
    pDSG->bsDramAddr = HAL_NfcGetDmaAddr(pWrReq->bsWrBuffId, 0, LOGIC_PIPE_PG_SZ_BITS);
400a6f80:	eec201        	l32r	a0, 400a2a88 <_mcu2dram_text_start+0x288>
400a6f83:	0000c0        	callx0	a0
400a6f86:	1fb8      	l32i.n	a11, a15, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1328
    /*  DSG DW2-3: cache status  */
    if(FALSE != pWrReq->bsCSEn)
400a6f88:	0ca8      	l32i.n	a10, a12, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1326
    /*  NFCQ DW8-15: flash address  */
    HAL_NfcSetFullPageRowAddr(pNFCQEntry, pFlashAddr, bMultiRowAddr);

    pDSG->bsLast = TRUE;
    pDSG->bsXferByteLen = ulPgSz;
    pDSG->bsDramAddr = HAL_NfcGetDmaAddr(pWrReq->bsWrBuffId, 0, LOGIC_PIPE_PG_SZ_BITS);
400a6f8a:	e312b4        	insbits	a11, a2, 1, 31
400a6f8d:	016fb2        	s32i	a11, a15, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1328
    /*  DSG DW2-3: cache status  */
    if(FALSE != pWrReq->bsCSEn)
400a6f90:	027a27        	bbci	a10, 18, 400a6f96 <HAL_NfcFullPageWrite+0x1aa>
400a6f93:	0021c6        	j	400a701e <HAL_NfcFullPageWrite+0x232>
400a6f96:	81c8      	l32i.n	a12, a1, 32
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1330
    {
        HAL_ConfigCacheStatus(pDSG, pWrReq->bsCsAddrOff);
400a6f98:	001122        	l16ui	a2, a1, 0
400a6f9b:	eebc01        	l32r	a0, 400a2a8c <_mcu2dram_text_start+0x28c>
400a6f9e:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1335
    }
    HAL_SetNormalDsgSts(usCurDsgId,1);

    /*  Trigger NFC    */
    HAL_NfcCmdTrigger(pFlashAddr, ucReqType, FALSE, INVALID_2F);
400a6fa1:	040c      	movi.n	a4, 0
400a6fa3:	ffa052        	movi	a5, 255
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1337
    
    return NFC_STATUS_SUCCESS;
400a6fa6:	c1d8      	l32i.n	a13, a1, 48
400a6fa8:	e1f8      	l32i.n	a15, a1, 56
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1335
        HAL_ConfigCacheStatus(pDSG, pWrReq->bsCsAddrOff);
    }
    HAL_SetNormalDsgSts(usCurDsgId,1);

    /*  Trigger NFC    */
    HAL_NfcCmdTrigger(pFlashAddr, ucReqType, FALSE, INVALID_2F);
400a6faa:	0c3d      	mov.n	a3, a12
400a6fac:	0e2d      	mov.n	a2, a14
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1337
    
    return NFC_STATUS_SUCCESS;
400a6fae:	b1c8      	l32i.n	a12, a1, 44
400a6fb0:	d1e8      	l32i.n	a14, a1, 52
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1335
        HAL_ConfigCacheStatus(pDSG, pWrReq->bsCsAddrOff);
    }
    HAL_SetNormalDsgSts(usCurDsgId,1);

    /*  Trigger NFC    */
    HAL_NfcCmdTrigger(pFlashAddr, ucReqType, FALSE, INVALID_2F);
400a6fb2:	ee6801        	l32r	a0, 400a2954 <_mcu2dram_text_start+0x154>
400a6fb5:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1337
    
    return NFC_STATUS_SUCCESS;
400a6fb8:	120c      	movi.n	a2, 1
400a6fba:	a108      	l32i.n	a0, a1, 40
400a6fbc:	40c112        	addi	a1, a1, 64
400a6fbf:	f00d      	ret.n

400a6fc1 <HAL_NfcFullPageWrite+0x1d5>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1200
    ucPln  = pFlashAddr->bsPln;
    usPage = pFlashAddr->usPage;

    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
    {
        return NFC_STATUS_FAIL;
400a6fc1:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1337
    HAL_SetNormalDsgSts(usCurDsgId,1);

    /*  Trigger NFC    */
    HAL_NfcCmdTrigger(pFlashAddr, ucReqType, FALSE, INVALID_2F);
    
    return NFC_STATUS_SUCCESS;
400a6fc3:	b1c8      	l32i.n	a12, a1, 44
400a6fc5:	c1d8      	l32i.n	a13, a1, 48
400a6fc7:	d1e8      	l32i.n	a14, a1, 52
400a6fc9:	e1f8      	l32i.n	a15, a1, 56
400a6fcb:	a108      	l32i.n	a0, a1, 40
400a6fcd:	40c112        	addi	a1, a1, 64
400a6fd0:	f00d      	ret.n

400a6fd2 <HAL_NfcFullPageWrite+0x1e6>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1229
        bMultiRowAddr   = FALSE;
        ucReqType       = NF_PRCQ_PRG_MULTIPLN_LOW_PG;
    }
    else//TLC mode
    {
        if(LOW_PAGE_WITHOUT_HIGH == HAL_GetFlashPairPageType(usPage))//(usPage >= 1505) && ((usPage % 2) == 1))
400a6fd2:	9128      	l32i.n	a2, a1, 36
400a6fd4:	eeb801        	l32r	a0, 400a2ab4 <_mcu2dram_text_start+0x2b4>
400a6fd7:	0000c0        	callx0	a0
400a6fda:	5c3226        	beqi	a2, 3, 400a703a <HAL_NfcFullPageWrite+0x24e>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1243
        {
    		ucReqType       = NF_PRCQ_TLC_PRG_MULTIPLN;  
            eScrType        = TLC_RW_TWO_PG;
            ulPgSz          = LOGIC_PIPE_PG_SZ * PGADDR_PER_PRG * INTRPG_PER_PGADDR;
            ucRedPlnNum     = PLN_PER_LUN * PGADDR_PER_PRG * INTRPG_PER_PGADDR;
            bMultiRowAddr   = TRUE;
400a6fdd:	301c      	movi.n	a0, 19
400a6fdf:	420c      	movi.n	a2, 4
400a6fe1:	eeb331        	l32r	a3, 400a2ab0 <_mcu2dram_text_start+0x2b0>
400a6fe4:	840c      	movi.n	a4, 8
400a6fe6:	150c      	movi.n	a5, 1
400a6fe8:	3159      	s32i.n	a5, a1, 12
400a6fea:	1149      	s32i.n	a4, a1, 4
400a6fec:	7139      	s32i.n	a3, a1, 28
400a6fee:	4129      	s32i.n	a2, a1, 16
400a6ff0:	8109      	s32i.n	a0, a1, 32
400a6ff2:	ff9c06        	j	400a6e66 <HAL_NfcFullPageWrite+0x7a>

400a6ff5 <HAL_NfcFullPageWrite+0x209>:
	...

400a6ff6 <HAL_NfcFullPageWrite+0x20a>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1314
    HAL_ConfigScramble(pNFCQEntry, pFlashAddr->usPage, SCR_FULL_PLN, 0, eScrType);

    /*  NFCQ DW6-7: SSU 0 and SSU 1   */
    if(FALSE != pWrReq->bsSsu0En)
    {
        HAL_ConfigSsu0(pNFCQEntry, pWrReq->bsSsu0Addr, pWrReq->bsSsu0Ontf);
400a6ff6:	0d2d      	mov.n	a2, a13
400a6ff8:	021c32        	l16ui	a3, a12, 4
400a6ffb:	054400        	extui	a4, a0, 20, 1
400a6ffe:	eea701        	l32r	a0, 400a2a9c <_mcu2dram_text_start+0x29c>
400a7001:	0000c0        	callx0	a0
400a7004:	0c08      	l32i.n	a0, a12, 0
400a7006:	ffd286        	j	400a6f54 <HAL_NfcFullPageWrite+0x168>

400a7009 <HAL_NfcFullPageWrite+0x21d>:
	...

400a700a <HAL_NfcFullPageWrite+0x21e>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1318
    }
    if(FALSE != pWrReq->bsSsu1En)
    {
        HAL_ConfigSsu1(pNFCQEntry, pWrReq->bsSsu1Addr, pWrReq->bsSsu1Ontf);
400a700a:	0d2d      	mov.n	a2, a13
400a700c:	031c32        	l16ui	a3, a12, 6
400a700f:	054600        	extui	a4, a0, 22, 1
400a7012:	eea301        	l32r	a0, 400a2aa0 <_mcu2dram_text_start+0x2a0>
400a7015:	0000c0        	callx0	a0
400a7018:	ffcf86        	j	400a6f5a <HAL_NfcFullPageWrite+0x16e>

400a701b <HAL_NfcFullPageWrite+0x22f>:
400a701b:	000000                                        ...

400a701e <HAL_NfcFullPageWrite+0x232>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1330
    pDSG->bsXferByteLen = ulPgSz;
    pDSG->bsDramAddr = HAL_NfcGetDmaAddr(pWrReq->bsWrBuffId, 0, LOGIC_PIPE_PG_SZ_BITS);
    /*  DSG DW2-3: cache status  */
    if(FALSE != pWrReq->bsCSEn)
    {
        HAL_ConfigCacheStatus(pDSG, pWrReq->bsCsAddrOff);
400a701e:	0f2d      	mov.n	a2, a15
400a7020:	2c38      	l32i.n	a3, a12, 8
400a7022:	eea001        	l32r	a0, 400a2aa4 <_mcu2dram_text_start+0x2a4>
400a7025:	0000c0        	callx0	a0
400a7028:	ffda86        	j	400a6f96 <HAL_NfcFullPageWrite+0x1aa>

400a702b <HAL_NfcFullPageWrite+0x23f>:
	...

400a702c <HAL_NfcFullPageWrite+0x240>:
400a702c:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1266
        bMultiRowAddr   = FALSE;
    }
#endif

    pNFCQEntry->bsDsgEn = TRUE;
    while (FALSE == HAL_GetNormalDsg(&usCurDsgId))
400a702e:	ee9401        	l32r	a0, 400a2a80 <_mcu2dram_text_start+0x280>
400a7031:	0000c0        	callx0	a0
400a7034:	ff4216        	beqz	a2, 400a702c <HAL_NfcFullPageWrite+0x240>
400a7037:	ff9046        	j	400a6e7c <HAL_NfcFullPageWrite+0x90>

400a703a <HAL_NfcFullPageWrite+0x24e>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1229
        bMultiRowAddr   = FALSE;
        ucReqType       = NF_PRCQ_PRG_MULTIPLN_LOW_PG;
    }
    else//TLC mode
    {
        if(LOW_PAGE_WITHOUT_HIGH == HAL_GetFlashPairPageType(usPage))//(usPage >= 1505) && ((usPage % 2) == 1))
400a703a:	461c      	movi.n	a6, 20
400a703c:	070c      	movi.n	a7, 0
400a703e:	edf281        	l32r	a8, 400a2808 <_mcu2dram_text_start+0x8>
400a7041:	490c      	movi.n	a9, 4
400a7043:	0a0c      	movi.n	a10, 0
400a7045:	31a9      	s32i.n	a10, a1, 12
400a7047:	1199      	s32i.n	a9, a1, 4
400a7049:	7189      	s32i.n	a8, a1, 28
400a704b:	4179      	s32i.n	a7, a1, 16
400a704d:	8169      	s32i.n	a6, a1, 32
400a704f:	ff84c6        	j	400a6e66 <HAL_NfcFullPageWrite+0x7a>

400a7052 <HAL_NfcFullPageWrite+0x266>:
	...

400a7054 <HAL_NfcSinglePlaneWrite>:
HAL_NfcSinglePlaneWrite():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1903
    NFC_RED *pTargetRed;
    NFC_SCR_CONF eScrType;
    BOOL bIsRedOntf = pWrReq->bsRedOntf;
    volatile NFC_DATA_SYNTAX *pDsReg = (volatile NFC_DATA_SYNTAX*)NF_DS_REG_BASE;
    U8  ucDsIndex = pWrReq->bsDsIndex;
    U8  ucBufUnit = ((pDsReg->atDSEntry[ucDsIndex].bsCwNum % 16) ? CW_INFO_SZ_BITS : LOGIC_PG_SZ_BITS);
400a7054:	ee9961        	l32r	a6, 400a2ab8 <_mcu2dram_text_start+0x2b8>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1891
    20140918    Gavin   add header for this function
    20141113    tobey   fix bsRedEn problem
    20151106    abby    modify to meet VT3533, dynamic update RED to OTFB/DRAM
------------------------------------------------------------------------------*/
BOOL MCU2_DRAM_TEXT HAL_NfcSinglePlaneWrite(FLASH_ADDR *pFlashAddr, NFC_PRG_REQ_DES *pWrReq)
{
400a7057:	b0c112        	addi	a1, a1, -80
400a705a:	e1e9      	s32i.n	a14, a1, 56
400a705c:	f1f9      	s32i.n	a15, a1, 60
400a705e:	b109      	s32i.n	a0, a1, 44
400a7060:	c1c9      	s32i.n	a12, a1, 48
400a7062:	d1d9      	s32i.n	a13, a1, 52
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1902
    NORMAL_DSG_ENTRY * pDSG;  
    NFC_RED *pTargetRed;
    NFC_SCR_CONF eScrType;
    BOOL bIsRedOntf = pWrReq->bsRedOntf;
    volatile NFC_DATA_SYNTAX *pDsReg = (volatile NFC_DATA_SYNTAX*)NF_DS_REG_BASE;
    U8  ucDsIndex = pWrReq->bsDsIndex;
400a7064:	4358      	l32i.n	a5, a3, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1900
    U32 ulPgSz;
    NFCQ_ENTRY *pNFCQEntry;
    NORMAL_DSG_ENTRY * pDSG;  
    NFC_RED *pTargetRed;
    NFC_SCR_CONF eScrType;
    BOOL bIsRedOntf = pWrReq->bsRedOntf;
400a7066:	0378      	l32i.n	a7, a3, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1902
    volatile NFC_DATA_SYNTAX *pDsReg = (volatile NFC_DATA_SYNTAX*)NF_DS_REG_BASE;
    U8  ucDsIndex = pWrReq->bsDsIndex;
400a7068:	245050        	extui	a5, a5, 0, 3
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1900
    U32 ulPgSz;
    NFCQ_ENTRY *pNFCQEntry;
    NORMAL_DSG_ENTRY * pDSG;  
    NFC_RED *pTargetRed;
    NFC_SCR_CONF eScrType;
    BOOL bIsRedOntf = pWrReq->bsRedOntf;
400a706b:	057070        	extui	a7, a7, 16, 1
400a706e:	106172        	s32i	a7, a1, 64
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1902
    volatile NFC_DATA_SYNTAX *pDsReg = (volatile NFC_DATA_SYNTAX*)NF_DS_REG_BASE;
    U8  ucDsIndex = pWrReq->bsDsIndex;
400a7071:	7159      	s32i.n	a5, a1, 28
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1891
    20140918    Gavin   add header for this function
    20141113    tobey   fix bsRedEn problem
    20151106    abby    modify to meet VT3533, dynamic update RED to OTFB/DRAM
------------------------------------------------------------------------------*/
BOOL MCU2_DRAM_TEXT HAL_NfcSinglePlaneWrite(FLASH_ADDR *pFlashAddr, NFC_PRG_REQ_DES *pWrReq)
{
400a7073:	02dd      	mov.n	a13, a2
400a7075:	03cd      	mov.n	a12, a3
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1903
    NFC_RED *pTargetRed;
    NFC_SCR_CONF eScrType;
    BOOL bIsRedOntf = pWrReq->bsRedOntf;
    volatile NFC_DATA_SYNTAX *pDsReg = (volatile NFC_DATA_SYNTAX*)NF_DS_REG_BASE;
    U8  ucDsIndex = pWrReq->bsDsIndex;
    U8  ucBufUnit = ((pDsReg->atDSEntry[ucDsIndex].bsCwNum % 16) ? CW_INFO_SZ_BITS : LOGIC_PG_SZ_BITS);
400a7077:	b05560        	addx8	a5, a5, a6
400a707a:	0020c0        	memw
400a707d:	a70c      	movi.n	a7, 10
400a707f:	7f2582        	l32i	a8, a5, 0x1fc
400a7082:	e60c      	movi.n	a6, 14
400a7084:	348980        	extui	a8, a8, 9, 4
400a7087:	936780        	movnez	a6, a7, a8
400a708a:	4169      	s32i.n	a6, a1, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1904
    U32 ulPgUnit  = (pDsReg->atDSEntry[ucDsIndex].bsCwNum % 16) ? (LOGIC_PG_SZ - CW_INFO_SZ) : LOGIC_PG_SZ;
400a708c:	ee8c41        	l32r	a4, 400a2abc <_mcu2dram_text_start+0x2bc>
400a708f:	ee4031        	l32r	a3, 400a2990 <_mcu2dram_text_start+0x190>
400a7092:	0020c0        	memw
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1907
    
    ucPU  = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
400a7095:	010de2        	l8ui	a14, a13, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1906
    volatile NFC_DATA_SYNTAX *pDsReg = (volatile NFC_DATA_SYNTAX*)NF_DS_REG_BASE;
    U8  ucDsIndex = pWrReq->bsDsIndex;
    U8  ucBufUnit = ((pDsReg->atDSEntry[ucDsIndex].bsCwNum % 16) ? CW_INFO_SZ_BITS : LOGIC_PG_SZ_BITS);
    U32 ulPgUnit  = (pDsReg->atDSEntry[ucDsIndex].bsCwNum % 16) ? (LOGIC_PG_SZ - CW_INFO_SZ) : LOGIC_PG_SZ;
    
    ucPU  = pFlashAddr->ucPU;
400a7098:	000df2        	l8ui	a15, a13, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1908
    ucLun = pFlashAddr->ucLun;
    ucPln = pFlashAddr->bsPln;
400a709b:	0228      	l32i.n	a2, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1904
    NFC_SCR_CONF eScrType;
    BOOL bIsRedOntf = pWrReq->bsRedOntf;
    volatile NFC_DATA_SYNTAX *pDsReg = (volatile NFC_DATA_SYNTAX*)NF_DS_REG_BASE;
    U8  ucDsIndex = pWrReq->bsDsIndex;
    U8  ucBufUnit = ((pDsReg->atDSEntry[ucDsIndex].bsCwNum % 16) ? CW_INFO_SZ_BITS : LOGIC_PG_SZ_BITS);
    U32 ulPgUnit  = (pDsReg->atDSEntry[ucDsIndex].bsCwNum % 16) ? (LOGIC_PG_SZ - CW_INFO_SZ) : LOGIC_PG_SZ;
400a709d:	7f2552        	l32i	a5, a5, 0x1fc
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1909
    
    ucPU  = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
    ucPln = pFlashAddr->bsPln;
    usPage = pFlashAddr->usPage;
400a70a0:	031d02        	l16ui	a0, a13, 6
400a70a3:	116102        	s32i	a0, a1, 68
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1904
    NFC_SCR_CONF eScrType;
    BOOL bIsRedOntf = pWrReq->bsRedOntf;
    volatile NFC_DATA_SYNTAX *pDsReg = (volatile NFC_DATA_SYNTAX*)NF_DS_REG_BASE;
    U8  ucDsIndex = pWrReq->bsDsIndex;
    U8  ucBufUnit = ((pDsReg->atDSEntry[ucDsIndex].bsCwNum % 16) ? CW_INFO_SZ_BITS : LOGIC_PG_SZ_BITS);
    U32 ulPgUnit  = (pDsReg->atDSEntry[ucDsIndex].bsCwNum % 16) ? (LOGIC_PG_SZ - CW_INFO_SZ) : LOGIC_PG_SZ;
400a70a6:	345950        	extui	a5, a5, 9, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1908
    
    ucPU  = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
    ucPln = pFlashAddr->bsPln;
400a70a9:	352020        	extui	a2, a2, 16, 4
400a70ac:	a129      	s32i.n	a2, a1, 40
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1904
    NFC_SCR_CONF eScrType;
    BOOL bIsRedOntf = pWrReq->bsRedOntf;
    volatile NFC_DATA_SYNTAX *pDsReg = (volatile NFC_DATA_SYNTAX*)NF_DS_REG_BASE;
    U8  ucDsIndex = pWrReq->bsDsIndex;
    U8  ucBufUnit = ((pDsReg->atDSEntry[ucDsIndex].bsCwNum % 16) ? CW_INFO_SZ_BITS : LOGIC_PG_SZ_BITS);
    U32 ulPgUnit  = (pDsReg->atDSEntry[ucDsIndex].bsCwNum % 16) ? (LOGIC_PG_SZ - CW_INFO_SZ) : LOGIC_PG_SZ;
400a70ae:	933450        	movnez	a3, a4, a5
400a70b1:	9139      	s32i.n	a3, a1, 36
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1911
    ucPU  = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
    ucPln = pFlashAddr->bsPln;
    usPage = pFlashAddr->usPage;
    
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a70b3:	0f2d      	mov.n	a2, a15
400a70b5:	0e3d      	mov.n	a3, a14
400a70b7:	ee2201        	l32r	a0, 400a2940 <_mcu2dram_text_start+0x140>
400a70ba:	0000c0        	callx0	a0
400a70bd:	175216        	beqz	a2, 400a7236 <HAL_NfcSinglePlaneWrite+0x1e2>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1916
    {
        return NFC_STATUS_FAIL;
    }
    
    if (FALSE == HAL_NfcIsPairPageAccessable(usPage))
400a70c0:	112122        	l32i	a2, a1, 68
400a70c3:	ee7a01        	l32r	a0, 400a2aac <_mcu2dram_text_start+0x2ac>
400a70c6:	0000c0        	callx0	a0
400a70c9:	169216        	beqz	a2, 400a7236 <HAL_NfcSinglePlaneWrite+0x1e2>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1922
    {
        return NFC_STATUS_FAIL;
    }
    
    /*  CONFIGURE NFCQ   */
    pNFCQEntry = (NFCQ_ENTRY *)HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
400a70cc:	0f2d      	mov.n	a2, a15
400a70ce:	0e3d      	mov.n	a3, a14
400a70d0:	61d9      	s32i.n	a13, a1, 24
400a70d2:	ee1c01        	l32r	a0, 400a2944 <_mcu2dram_text_start+0x144>
400a70d5:	0000c0        	callx0	a0
400a70d8:	02dd      	mov.n	a13, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1923
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);
400a70da:	031c      	movi.n	a3, 16
400a70dc:	ee1b01        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a70df:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1952
        eScrType    = NORMAL_SCR;
        ucRedPlnLen = 1;
    #endif
    }
#elif defined(FLASH_INTEL_3DTLC)
    ulPgSz      = ulPgUnit;
400a70e2:	9178      	l32i.n	a7, a1, 36
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1963
    {
        ucReqType   = NF_PRCQ_PRG;
    }
    else
    {
        if (pWrReq->bsTlcMode)//TLC
400a70e4:	0c68      	l32i.n	a6, a12, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1952
        eScrType    = NORMAL_SCR;
        ucRedPlnLen = 1;
    #endif
    }
#elif defined(FLASH_INTEL_3DTLC)
    ulPgSz      = ulPgUnit;
400a70e6:	8179      	s32i.n	a7, a1, 32
400a70e8:	056b60        	extui	a6, a6, 27, 1
400a70eb:	159656        	bnez	a6, 400a7248 <HAL_NfcSinglePlaneWrite+0x1f4>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1991
                }
            }
        }
        else
        {
            ucReqType   = NF_PRCQ_PRG;   
400a70ee:	080c      	movi.n	a8, 0
400a70f0:	890c      	movi.n	a9, 8
400a70f2:	5199      	s32i.n	a9, a1, 20
400a70f4:	3189      	s32i.n	a8, a1, 12

400a70f6 <HAL_NfcSinglePlaneWrite+0xa2>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2020
    pNFCQEntry->bsXorEn  = FALSE;
    pNFCQEntry->bsOtfbBsSel = OTFB_BASE_SEL;
#endif

    pNFCQEntry->bsDCrcEn  = FALSE;
    pNFCQEntry->bsDsIndex = ucDsIndex;
400a70f6:	7128      	l32i.n	a2, a1, 28
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2019
    pNFCQEntry->bsOntfEn = TRUE;
    pNFCQEntry->bsXorEn  = FALSE;
    pNFCQEntry->bsOtfbBsSel = OTFB_BASE_SEL;
#endif

    pNFCQEntry->bsDCrcEn  = FALSE;
400a70f8:	fb6c      	movi.n	a11, -17
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2021
    pNFCQEntry->bsDsIndex = ucDsIndex;
    pNFCQEntry->bsEMEn    = pWrReq->bsEmEn;
400a70fa:	4c08      	l32i.n	a0, a12, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2019
    pNFCQEntry->bsOntfEn = TRUE;
    pNFCQEntry->bsXorEn  = FALSE;
    pNFCQEntry->bsOtfbBsSel = OTFB_BASE_SEL;
#endif

    pNFCQEntry->bsDCrcEn  = FALSE;
400a70fc:	002da2        	l32i	a10, a13, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2021
    pNFCQEntry->bsDsIndex = ucDsIndex;
    pNFCQEntry->bsEMEn    = pWrReq->bsEmEn;
400a70ff:	410300        	srli	a0, a0, 3
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2019
    pNFCQEntry->bsOntfEn = TRUE;
    pNFCQEntry->bsXorEn  = FALSE;
    pNFCQEntry->bsOtfbBsSel = OTFB_BASE_SEL;
#endif

    pNFCQEntry->bsDCrcEn  = FALSE;
400a7102:	10aab0        	and	a10, a10, a11
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2020
    pNFCQEntry->bsDsIndex = ucDsIndex;
400a7105:	61b2a4        	insbits	a10, a2, 11, 13
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2024
    pNFCQEntry->bsEMEn    = pWrReq->bsEmEn;
    
    /*  DSG configure   */
    pNFCQEntry->bsDsgEn = TRUE;
400a7108:	80a0b2        	movi	a11, 128
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2025
    while (FALSE == HAL_GetNormalDsg(&usCurDsgId))
400a710b:	08c122        	addi	a2, a1, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2021
    pNFCQEntry->bsOtfbBsSel = OTFB_BASE_SEL;
#endif

    pNFCQEntry->bsDCrcEn  = FALSE;
    pNFCQEntry->bsDsIndex = ucDsIndex;
    pNFCQEntry->bsEMEn    = pWrReq->bsEmEn;
400a710e:	2260a4        	insbits	a10, a0, 6, 6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2024
    
    /*  DSG configure   */
    pNFCQEntry->bsDsgEn = TRUE;
400a7111:	20aab0        	or	a10, a10, a11
400a7114:	006da2        	s32i	a10, a13, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2025
    while (FALSE == HAL_GetNormalDsg(&usCurDsgId))
400a7117:	ee5a01        	l32r	a0, 400a2a80 <_mcu2dram_text_start+0x280>
400a711a:	0000c0        	callx0	a0
400a711d:	13f216        	beqz	a2, 400a7260 <HAL_NfcSinglePlaneWrite+0x20c>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2032
        ;
    }
    pNFCQEntry->bsFstDsgPtr = usCurDsgId;

    /*  NFCQ DW2: error injection  */
    if (FALSE != pWrReq->bsInjErrEn)
400a7120:	0c08      	l32i.n	a0, a12, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2029
    pNFCQEntry->bsDsgEn = TRUE;
    while (FALSE == HAL_GetNormalDsg(&usCurDsgId))
    {
        ;
    }
    pNFCQEntry->bsFstDsgPtr = usCurDsgId;
400a7122:	041122        	l16ui	a2, a1, 8
400a7125:	0d38      	l32i.n	a3, a13, 0
400a7127:	012290        	slli	a2, a2, 23
400a712a:	a20324        	insbits	a2, a3, 0, 22
400a712d:	0d29      	s32i.n	a2, a13, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2032

    /*  NFCQ DW2: error injection  */
    if (FALSE != pWrReq->bsInjErrEn)
400a712f:	0970e7        	bbci	a0, 30, 400a713c <HAL_NfcSinglePlaneWrite+0xe8>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2034
    {
        HAL_NfcSetErrInj(pNFCQEntry, pWrReq->pErrInj);
400a7132:	0d2d      	mov.n	a2, a13
400a7134:	5c38      	l32i.n	a3, a12, 20
400a7136:	ee4c01        	l32r	a0, 400a2a68 <_mcu2dram_text_start+0x268>
400a7139:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2039
    }
    
    /*  NFCQ DW3: DMA message, total data length  */
    /*    Note: for write cmd, the unit of DmaTotalLength is 1KB */
    pNFCQEntry->bsDmaTotalLength = ulPgSz >> CW_INFO_SZ_BITS;
400a713c:	8138      	l32i.n	a3, a1, 32
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2041
    /*  PRCQ start DW   */
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a713e:	5128      	l32i.n	a2, a1, 20
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2039
        HAL_NfcSetErrInj(pNFCQEntry, pWrReq->pErrInj);
    }
    
    /*  NFCQ DW3: DMA message, total data length  */
    /*    Note: for write cmd, the unit of DmaTotalLength is 1KB */
    pNFCQEntry->bsDmaTotalLength = ulPgSz >> CW_INFO_SZ_BITS;
400a7140:	413a30        	srli	a3, a3, 10
400a7143:	0c4d32        	s8i	a3, a13, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2041
    /*  PRCQ start DW   */
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a7146:	ee0201        	l32r	a0, 400a2950 <_mcu2dram_text_start+0x150>
400a7149:	0000c0        	callx0	a0
400a714c:	3d58      	l32i.n	a5, a13, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2044
    
    /*  NFCQ DW4: red and scramble   */
    if (NULL != pWrReq->pNfcRed)
400a714e:	3c48      	l32i.n	a4, a12, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2041
    
    /*  NFCQ DW3: DMA message, total data length  */
    /*    Note: for write cmd, the unit of DmaTotalLength is 1KB */
    pNFCQEntry->bsDmaTotalLength = ulPgSz >> CW_INFO_SZ_BITS;
    /*  PRCQ start DW   */
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a7150:	808254        	insbits	a5, a2, 8, 16
400a7153:	3d59      	s32i.n	a5, a13, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2044
    
    /*  NFCQ DW4: red and scramble   */
    if (NULL != pWrReq->pNfcRed)
400a7155:	057416        	beqz	a4, 400a71b0 <HAL_NfcSinglePlaneWrite+0x15c>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2048
    {
        pNFCQEntry->bsRedOntf = bIsRedOntf;
        pNFCQEntry->bsRedEn = TRUE;
        pTargetRed = (NFC_RED*)HAL_NfcGetRedAbsoulteAddr(ucPU, ucLun,HAL_NfcGetWP(ucPU, ucLun), ucPln, bIsRedOntf);
400a7158:	0f2d      	mov.n	a2, a15
400a715a:	0e3d      	mov.n	a3, a14
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2046
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
    
    /*  NFCQ DW4: red and scramble   */
    if (NULL != pWrReq->pNfcRed)
    {
        pNFCQEntry->bsRedOntf = bIsRedOntf;
400a715c:	102182        	l32i	a8, a1, 64
400a715f:	4d68      	l32i.n	a6, a13, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2047
        pNFCQEntry->bsRedEn = TRUE;
400a7161:	270c      	movi.n	a7, 2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2046
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
    
    /*  NFCQ DW4: red and scramble   */
    if (NULL != pWrReq->pNfcRed)
    {
        pNFCQEntry->bsRedOntf = bIsRedOntf;
400a7163:	000864        	insbits	a6, a8, 0, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2047
        pNFCQEntry->bsRedEn = TRUE;
400a7166:	206670        	or	a6, a6, a7
400a7169:	4d69      	s32i.n	a6, a13, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2048
        pTargetRed = (NFC_RED*)HAL_NfcGetRedAbsoulteAddr(ucPU, ucLun,HAL_NfcGetWP(ucPU, ucLun), ucPln, bIsRedOntf);
400a716b:	ee3c01        	l32r	a0, 400a2a5c <_mcu2dram_text_start+0x25c>
400a716e:	0000c0        	callx0	a0
400a7171:	0e3d      	mov.n	a3, a14
400a7173:	a158      	l32i.n	a5, a1, 40
400a7175:	024d      	mov.n	a4, a2
400a7177:	102162        	l32i	a6, a1, 64
400a717a:	0f2d      	mov.n	a2, a15
400a717c:	ee3d01        	l32r	a0, 400a2a70 <_mcu2dram_text_start+0x270>
400a717f:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2049
        COM_MemCpy((U32 *)pTargetRed, (U32 *)(pWrReq->pNfcRed), RED_SZ_DW * ucRedPlnLen);
400a7182:	3c38      	l32i.n	a3, a12, 12
400a7184:	041c      	movi.n	a4, 16
400a7186:	edbc01        	l32r	a0, 400a2878 <_mcu2dram_text_start+0x78>
400a7189:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2050
        pNFCQEntry->bsRedAddr = HAL_NfcGetRedRelativeAddr(ucPU, ucLun,HAL_NfcGetWP(ucPU, ucLun), ucPln, bIsRedOntf);
400a718c:	0f2d      	mov.n	a2, a15
400a718e:	0e3d      	mov.n	a3, a14
400a7190:	ee3301        	l32r	a0, 400a2a5c <_mcu2dram_text_start+0x25c>
400a7193:	0000c0        	callx0	a0
400a7196:	0e3d      	mov.n	a3, a14
400a7198:	a158      	l32i.n	a5, a1, 40
400a719a:	204220        	or	a4, a2, a2
400a719d:	102162        	l32i	a6, a1, 64
400a71a0:	202ff0        	or	a2, a15, a15
400a71a3:	ee3201        	l32r	a0, 400a2a6c <_mcu2dram_text_start+0x26c>
400a71a6:	0000c0        	callx0	a0
400a71a9:	4d98      	l32i.n	a9, a13, 16
400a71ab:	833294        	insbits	a9, a2, 3, 19
400a71ae:	4d99      	s32i.n	a9, a13, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2052
    }
    HAL_ConfigScramble(pNFCQEntry, usPage, SCR_SINGLE_PLN, 0, eScrType);
400a71b0:	112132        	l32i	a3, a1, 68
400a71b3:	0d2d      	mov.n	a2, a13
400a71b5:	040c      	movi.n	a4, 0
400a71b7:	050c      	movi.n	a5, 0
400a71b9:	3168      	l32i.n	a6, a1, 12
400a71bb:	ee2e01        	l32r	a0, 400a2a74 <_mcu2dram_text_start+0x274>
400a71be:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2055
    
    /*  NFCQ DW8-15: flash address  */ 
    pNFCQEntry->atRowAddr[0].bsRowAddr = HAL_NfcGetFlashRowAddr(pFlashAddr);
400a71c1:	6128      	l32i.n	a2, a1, 24
400a71c3:	ede201        	l32r	a0, 400a294c <_mcu2dram_text_start+0x14c>
400a71c6:	0000c0        	callx0	a0
400a71c9:	8da8      	l32i.n	a10, a13, 32
400a71cb:	41f8      	l32i.n	a15, a1, 16
400a71cd:	e102a4        	insbits	a10, a2, 0, 29
400a71d0:	8da9      	s32i.n	a10, a13, 32
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2058

    /*  CONFIGURE DSG   */
    pDSG = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(usCurDsgId);
400a71d2:	041122        	l16ui	a2, a1, 8
400a71d5:	0821d2        	l32i	a13, a1, 32
400a71d8:	ee2b01        	l32r	a0, 400a2a84 <_mcu2dram_text_start+0x284>
400a71db:	0000c0        	callx0	a0
400a71de:	02ed      	mov.n	a14, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2059
    COM_MemZero((U32*)pDSG, sizeof(NORMAL_DSG_ENTRY)>>2);
400a71e0:	04a032        	movi	a3, 4
400a71e3:	edd901        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a71e6:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2066
    pDSG->bsXferByteLen = ulPgSz;
    pDSG->bsLast = TRUE;

    /*  DSG DW1: dram address  */ 

    pDSG->bsDramAddr = HAL_NfcGetDmaAddr(pWrReq->bsWrBuffId, 0, ucBufUnit);
400a71e9:	7440f0        	extui	a4, a15, 0, 8
400a71ec:	030c      	movi.n	a3, 0
400a71ee:	001c22        	l16ui	a2, a12, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2061

    /*  CONFIGURE DSG   */
    pDSG = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(usCurDsgId);
    COM_MemZero((U32*)pDSG, sizeof(NORMAL_DSG_ENTRY)>>2);
    /*  DSG DW0: transfer length and chain config  */ 
    pDSG->bsXferByteLen = ulPgSz;
400a71f1:	0eb8      	l32i.n	a11, a14, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2062
    pDSG->bsLast = TRUE;
400a71f3:	00a202        	movi	a0, 0x200
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2061

    /*  CONFIGURE DSG   */
    pDSG = (NORMAL_DSG_ENTRY*)HAL_GetNormalDsgAddr(usCurDsgId);
    COM_MemZero((U32*)pDSG, sizeof(NORMAL_DSG_ENTRY)>>2);
    /*  DSG DW0: transfer length and chain config  */ 
    pDSG->bsXferByteLen = ulPgSz;
400a71f6:	e3edb4        	insbits	a11, a13, 14, 31
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2062
    pDSG->bsLast = TRUE;
400a71f9:	20bb00        	or	a11, a11, a0
400a71fc:	0eb9      	s32i.n	a11, a14, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2066

    /*  DSG DW1: dram address  */ 

    pDSG->bsDramAddr = HAL_NfcGetDmaAddr(pWrReq->bsWrBuffId, 0, ucBufUnit);
400a71fe:	ee2201        	l32r	a0, 400a2a88 <_mcu2dram_text_start+0x288>
400a7201:	0000c0        	callx0	a0
400a7204:	1e38      	l32i.n	a3, a14, 4
400a7206:	51c8      	l32i.n	a12, a1, 20
400a7208:	e31234        	insbits	a3, a2, 1, 31
400a720b:	1e39      	s32i.n	a3, a14, 4
400a720d:	041122        	l16ui	a2, a1, 8
400a7210:	ee1f01        	l32r	a0, 400a2a8c <_mcu2dram_text_start+0x28c>
400a7213:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2072

    /*  Set DSG valid    */
    HAL_SetNormalDsgSts(usCurDsgId, NORMAL_DSG_VALID);

    /*  Trigger NFC    */
    HAL_NfcCmdTrigger(pFlashAddr, ucReqType, FALSE, INVALID_2F);
400a7216:	6128      	l32i.n	a2, a1, 24
400a7218:	040c      	movi.n	a4, 0
400a721a:	ffa052        	movi	a5, 255
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2074

    return NFC_STATUS_SUCCESS;
400a721d:	d1d8      	l32i.n	a13, a1, 52
400a721f:	e1e8      	l32i.n	a14, a1, 56
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2072

    /*  Set DSG valid    */
    HAL_SetNormalDsgSts(usCurDsgId, NORMAL_DSG_VALID);

    /*  Trigger NFC    */
    HAL_NfcCmdTrigger(pFlashAddr, ucReqType, FALSE, INVALID_2F);
400a7221:	0c3d      	mov.n	a3, a12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2074

    return NFC_STATUS_SUCCESS;
400a7223:	f1f8      	l32i.n	a15, a1, 60
400a7225:	c1c8      	l32i.n	a12, a1, 48
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2072

    /*  Set DSG valid    */
    HAL_SetNormalDsgSts(usCurDsgId, NORMAL_DSG_VALID);

    /*  Trigger NFC    */
    HAL_NfcCmdTrigger(pFlashAddr, ucReqType, FALSE, INVALID_2F);
400a7227:	edcb01        	l32r	a0, 400a2954 <_mcu2dram_text_start+0x154>
400a722a:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2074

    return NFC_STATUS_SUCCESS;
400a722d:	120c      	movi.n	a2, 1
400a722f:	b108      	l32i.n	a0, a1, 44
400a7231:	50c112        	addi	a1, a1, 80
400a7234:	f00d      	ret.n

400a7236 <HAL_NfcSinglePlaneWrite+0x1e2>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1913
    ucPln = pFlashAddr->bsPln;
    usPage = pFlashAddr->usPage;
    
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
    {
        return NFC_STATUS_FAIL;
400a7236:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2074
    HAL_SetNormalDsgSts(usCurDsgId, NORMAL_DSG_VALID);

    /*  Trigger NFC    */
    HAL_NfcCmdTrigger(pFlashAddr, ucReqType, FALSE, INVALID_2F);

    return NFC_STATUS_SUCCESS;
400a7238:	c1c8      	l32i.n	a12, a1, 48
400a723a:	d1d8      	l32i.n	a13, a1, 52
400a723c:	e1e8      	l32i.n	a14, a1, 56
400a723e:	f1f8      	l32i.n	a15, a1, 60
400a7240:	b108      	l32i.n	a0, a1, 44
400a7242:	50c112        	addi	a1, a1, 80
400a7245:	f00d      	ret.n

400a7247 <HAL_NfcSinglePlaneWrite+0x1f3>:
	...

400a7248 <HAL_NfcSinglePlaneWrite+0x1f4>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1965
    }
    else
    {
        if (pWrReq->bsTlcMode)//TLC
        {
            if(LOW_PAGE_WITHOUT_HIGH == HAL_GetFlashPairPageType(usPage))
400a7248:	112122        	l32i	a2, a1, 68
400a724b:	ee1a01        	l32r	a0, 400a2ab4 <_mcu2dram_text_start+0x2b4>
400a724e:	0000c0        	callx0	a0
400a7251:	1b3266        	bnei	a2, 3, 400a7270 <HAL_NfcSinglePlaneWrite+0x21c>
400a7254:	040c      	movi.n	a4, 0
400a7256:	c50c      	movi.n	a5, 12
400a7258:	5159      	s32i.n	a5, a1, 20
400a725a:	3149      	s32i.n	a4, a1, 12
400a725c:	ffa586        	j	400a70f6 <HAL_NfcSinglePlaneWrite+0xa2>

400a725f <HAL_NfcSinglePlaneWrite+0x20b>:
	...

400a7260 <HAL_NfcSinglePlaneWrite+0x20c>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2025
    pNFCQEntry->bsDsIndex = ucDsIndex;
    pNFCQEntry->bsEMEn    = pWrReq->bsEmEn;
    
    /*  DSG configure   */
    pNFCQEntry->bsDsgEn = TRUE;
    while (FALSE == HAL_GetNormalDsg(&usCurDsgId))
400a7260:	218b      	addi.n	a2, a1, 8
400a7262:	ee0701        	l32r	a0, 400a2a80 <_mcu2dram_text_start+0x280>
400a7265:	0000c0        	callx0	a0
400a7268:	ff4216        	beqz	a2, 400a7260 <HAL_NfcSinglePlaneWrite+0x20c>
400a726b:	ffac46        	j	400a7120 <HAL_NfcSinglePlaneWrite+0xcc>

400a726e <HAL_NfcSinglePlaneWrite+0x21a>:
	...

400a7270 <HAL_NfcSinglePlaneWrite+0x21c>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1977
                eScrType    = TLC_RW_TWO_PG;
                ucRedPlnLen = INTRPG_PER_PGADDR;
                ucReqType   = NF_PRCQ_TLC_PRG;  
                FLASH_ADDR tFlashAddr = *pFlashAddr;

                if(EXTRA_PAGE == HAL_GetFlashPairPageType(usPage))
400a7270:	112122        	l32i	a2, a1, 68
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1975
            {
                ulPgSz      = ulPgUnit * PGADDR_PER_PRG;
                eScrType    = TLC_RW_TWO_PG;
                ucRedPlnLen = INTRPG_PER_PGADDR;
                ucReqType   = NF_PRCQ_TLC_PRG;  
                FLASH_ADDR tFlashAddr = *pFlashAddr;
400a7273:	6188      	l32i.n	a8, a1, 24
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1971
            {
                ucReqType   = NF_PRCQ_TLC_PRG_LOW_PG;
            }
            else
            {
                ulPgSz      = ulPgUnit * PGADDR_PER_PRG;
400a7275:	9168      	l32i.n	a6, a1, 36
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1975
                eScrType    = TLC_RW_TWO_PG;
                ucRedPlnLen = INTRPG_PER_PGADDR;
                ucReqType   = NF_PRCQ_TLC_PRG;  
                FLASH_ADDR tFlashAddr = *pFlashAddr;
400a7277:	1878      	l32i.n	a7, a8, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1971
            {
                ucReqType   = NF_PRCQ_TLC_PRG_LOW_PG;
            }
            else
            {
                ulPgSz      = ulPgUnit * PGADDR_PER_PRG;
400a7279:	1166f0        	slli	a6, a6, 1
400a727c:	8169      	s32i.n	a6, a1, 32
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1975
                eScrType    = TLC_RW_TWO_PG;
                ucRedPlnLen = INTRPG_PER_PGADDR;
                ucReqType   = NF_PRCQ_TLC_PRG;  
                FLASH_ADDR tFlashAddr = *pFlashAddr;
400a727e:	0888      	l32i.n	a8, a8, 0
400a7280:	0189      	s32i.n	a8, a1, 0
400a7282:	1179      	s32i.n	a7, a1, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1977

                if(EXTRA_PAGE == HAL_GetFlashPairPageType(usPage))
400a7284:	ee0c01        	l32r	a0, 400a2ab4 <_mcu2dram_text_start+0x2b4>
400a7287:	0000c0        	callx0	a0
400a728a:	029d      	mov.n	a9, a2
400a728c:	031122        	l16ui	a2, a1, 6
400a728f:	214926        	beqi	a9, 4, 400a72b4 <HAL_NfcSinglePlaneWrite+0x260>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1984
                    tFlashAddr.usPage = HAL_GetHighPageIndexfromExtra(tFlashAddr.usPage);
                    pNFCQEntry->atRowAddr[1].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);
                }
                else
                {
                    tFlashAddr.usPage++;
400a7292:	01c2a2        	addi	a10, a2, 1
400a7295:	0351a2        	s16i	a10, a1, 6
400a7298:	202110        	or	a2, a1, a1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1985
                    pNFCQEntry->atRowAddr[1].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);
400a729b:	edac01        	l32r	a0, 400a294c <_mcu2dram_text_start+0x14c>
400a729e:	0000c0        	callx0	a0
400a72a1:	9db8      	l32i.n	a11, a13, 36
400a72a3:	e102b4        	insbits	a11, a2, 0, 29
400a72a6:	9db9      	s32i.n	a11, a13, 36
400a72a8:	400c      	movi.n	a0, 4
400a72aa:	b20c      	movi.n	a2, 11
400a72ac:	5129      	s32i.n	a2, a1, 20
400a72ae:	3109      	s32i.n	a0, a1, 12
400a72b0:	ff9086        	j	400a70f6 <HAL_NfcSinglePlaneWrite+0xa2>

400a72b3 <HAL_NfcSinglePlaneWrite+0x25f>:
	...

400a72b4 <HAL_NfcSinglePlaneWrite+0x260>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1979
                ucReqType   = NF_PRCQ_TLC_PRG;  
                FLASH_ADDR tFlashAddr = *pFlashAddr;

                if(EXTRA_PAGE == HAL_GetFlashPairPageType(usPage))
                {
                    tFlashAddr.usPage = HAL_GetHighPageIndexfromExtra(tFlashAddr.usPage);
400a72b4:	ee0301        	l32r	a0, 400a2ac0 <_mcu2dram_text_start+0x2c0>
400a72b7:	0000c0        	callx0	a0
400a72ba:	035122        	s16i	a2, a1, 6
400a72bd:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1980
                    pNFCQEntry->atRowAddr[1].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);
400a72bf:	eda301        	l32r	a0, 400a294c <_mcu2dram_text_start+0x14c>
400a72c2:	0000c0        	callx0	a0
400a72c5:	9d38      	l32i.n	a3, a13, 36
400a72c7:	e10234        	insbits	a3, a2, 0, 29
400a72ca:	9d39      	s32i.n	a3, a13, 36
400a72cc:	fff606        	j	400a72a8 <HAL_NfcSinglePlaneWrite+0x254>

400a72cf <HAL_NfcSinglePlaneWrite+0x27b>:
	...

400a72d0 <HAL_NfcSyncResetFlash>:
HAL_NfcSyncResetFlash():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1314
    FW call this function to init 3D MLC after change trim file.
History:
    20160329    abby    create
------------------------------------------------------------------------------*/
BOOL MCU2_DRAM_TEXT HAL_NfcSyncResetFlash(FLASH_ADDR *pFlashAddr)
{
400a72d0:	e0c112        	addi	a1, a1, -32
400a72d3:	41c9      	s32i.n	a12, a1, 16
400a72d5:	3109      	s32i.n	a0, a1, 12
400a72d7:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1319
    NFCQ_ENTRY * pNFCQEntry;
    U8 ucPU, ucLun;

    ucPU = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
400a72d9:	010c32        	l8ui	a3, a12, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1318
BOOL MCU2_DRAM_TEXT HAL_NfcSyncResetFlash(FLASH_ADDR *pFlashAddr)
{
    NFCQ_ENTRY * pNFCQEntry;
    U8 ucPU, ucLun;

    ucPU = pFlashAddr->ucPU;
400a72dc:	000222        	l8ui	a2, a2, 0
400a72df:	1129      	s32i.n	a2, a1, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1319
    ucLun = pFlashAddr->ucLun;
400a72e1:	2139      	s32i.n	a3, a1, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1322

    // if reset PU, whatever the LUN is; but if reset LUN, the LUN num is meanful
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a72e3:	ed9701        	l32r	a0, 400a2940 <_mcu2dram_text_start+0x140>
400a72e6:	0000c0        	callx0	a0
400a72e9:	92cc      	bnez.n	a2, 400a72f6 <HAL_NfcSyncResetFlash+0x26>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1324
    {
        return NFC_STATUS_FAIL;
400a72eb:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1334

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SYNC_RESET);

    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SYNC_RESET, FALSE, INVALID_2F);

    return NFC_STATUS_SUCCESS;
400a72ed:	41c8      	l32i.n	a12, a1, 16
400a72ef:	3108      	l32i.n	a0, a1, 12
400a72f1:	20c112        	addi	a1, a1, 32
400a72f4:	f00d      	ret.n

400a72f6 <HAL_NfcSyncResetFlash+0x26>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1327
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
    {
        return NFC_STATUS_FAIL;
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
400a72f6:	1128      	l32i.n	a2, a1, 4
400a72f8:	2138      	l32i.n	a3, a1, 8
400a72fa:	ed9201        	l32r	a0, 400a2944 <_mcu2dram_text_start+0x144>
400a72fd:	0000c0        	callx0	a0
400a7300:	0129      	s32i.n	a2, a1, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1328
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);
400a7302:	031c      	movi.n	a3, 16
400a7304:	ed9101        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a7307:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1330

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SYNC_RESET);
400a730a:	220c      	movi.n	a2, 2
400a730c:	ed9101        	l32r	a0, 400a2950 <_mcu2dram_text_start+0x150>
400a730f:	0000c0        	callx0	a0
400a7312:	0138      	l32i.n	a3, a1, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1332

    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SYNC_RESET, FALSE, INVALID_2F);
400a7314:	040c      	movi.n	a4, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1330
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SYNC_RESET);
400a7316:	3308      	l32i.n	a0, a3, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1332

    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SYNC_RESET, FALSE, INVALID_2F);
400a7318:	ffa052        	movi	a5, 255
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1330
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SYNC_RESET);
400a731b:	808204        	insbits	a0, a2, 8, 16
400a731e:	3309      	s32i.n	a0, a3, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1332

    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SYNC_RESET, FALSE, INVALID_2F);
400a7320:	0c2d      	mov.n	a2, a12
400a7322:	230c      	movi.n	a3, 2
400a7324:	ed8c01        	l32r	a0, 400a2954 <_mcu2dram_text_start+0x154>
400a7327:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1334

    return NFC_STATUS_SUCCESS;
400a732a:	120c      	movi.n	a2, 1
400a732c:	41c8      	l32i.n	a12, a1, 16
400a732e:	3108      	l32i.n	a0, a1, 12
400a7330:	20c112        	addi	a1, a1, 32
400a7333:	f00d      	ret.n

400a7335 <HAL_NfcSyncResetFlash+0x65>:
400a7335:	000000                                        ...

400a7338 <HAL_NfcSetFeature>:
HAL_NfcSetFeature():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1475
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
    20151210    abby    modify to meet VT3533
------------------------------------------------------------------------------*/
BOOL MCU2_DRAM_TEXT HAL_NfcSetFeature(FLASH_ADDR *pFlashAddr, U32 ulData, U8 ucAddr)
{
400a7338:	e0c112        	addi	a1, a1, -32
400a733b:	1149      	s32i.n	a4, a1, 4
400a733d:	5109      	s32i.n	a0, a1, 20
400a733f:	61c9      	s32i.n	a12, a1, 24
400a7341:	0139      	s32i.n	a3, a1, 0
400a7343:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1480
    NFCQ_ENTRY *pNFCQEntry;
    U8 ucPU, ucLun;
    
    ucPU = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
400a7345:	010c32        	l8ui	a3, a12, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1479
BOOL MCU2_DRAM_TEXT HAL_NfcSetFeature(FLASH_ADDR *pFlashAddr, U32 ulData, U8 ucAddr)
{
    NFCQ_ENTRY *pNFCQEntry;
    U8 ucPU, ucLun;
    
    ucPU = pFlashAddr->ucPU;
400a7348:	000222        	l8ui	a2, a2, 0
400a734b:	2129      	s32i.n	a2, a1, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1480
    ucLun = pFlashAddr->ucLun;
400a734d:	3139      	s32i.n	a3, a1, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1482
    
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a734f:	ed7c01        	l32r	a0, 400a2940 <_mcu2dram_text_start+0x140>
400a7352:	0000c0        	callx0	a0
400a7355:	92cc      	bnez.n	a2, 400a7362 <HAL_NfcSetFeature+0x2a>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1484
    {
        return NFC_STATUS_FAIL;
400a7357:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1501

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);

    return NFC_STATUS_SUCCESS;
400a7359:	61c8      	l32i.n	a12, a1, 24
400a735b:	5108      	l32i.n	a0, a1, 20
400a735d:	20c112        	addi	a1, a1, 32
400a7360:	f00d      	ret.n

400a7362 <HAL_NfcSetFeature+0x2a>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1487
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
    {
        return NFC_STATUS_FAIL;
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
400a7362:	2128      	l32i.n	a2, a1, 8
400a7364:	3138      	l32i.n	a3, a1, 12
400a7366:	ed7701        	l32r	a0, 400a2944 <_mcu2dram_text_start+0x144>
400a7369:	0000c0        	callx0	a0
400a736c:	4129      	s32i.n	a2, a1, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1488
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);
400a736e:	031c      	movi.n	a3, 16
400a7370:	ed7601        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a7373:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1490

    pNFCQEntry->bsDmaByteEn = TRUE;
400a7376:	240c      	movi.n	a4, 2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1493
    
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);
400a7378:	400c      	movi.n	a0, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1495

    pNFCQEntry->ulSetFeatVal = ulData;
400a737a:	0158      	l32i.n	a5, a1, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1492
    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsDmaByteEn = TRUE;
    
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
400a737c:	4128      	l32i.n	a2, a1, 16
400a737e:	1168      	l32i.n	a6, a1, 4
400a7380:	025262        	s16i	a6, a2, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1495
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;
400a7383:	2259      	s32i.n	a5, a2, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1490
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsDmaByteEn = TRUE;
400a7385:	0238      	l32i.n	a3, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1493
    
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);
400a7387:	035202        	s16i	a0, a2, 6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1490
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsDmaByteEn = TRUE;
400a738a:	203340        	or	a3, a3, a4
400a738d:	0239      	s32i.n	a3, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a738f:	05a022        	movi	a2, 5
400a7392:	ed6f01        	l32r	a0, 400a2950 <_mcu2dram_text_start+0x150>
400a7395:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1499
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);
400a7398:	530c      	movi.n	a3, 5
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a739a:	4188      	l32i.n	a8, a1, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1499
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);
400a739c:	040c      	movi.n	a4, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a739e:	3878      	l32i.n	a7, a8, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1499
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);
400a73a0:	ffa052        	movi	a5, 255
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a73a3:	808274        	insbits	a7, a2, 8, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1499
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);
400a73a6:	0c2d      	mov.n	a2, a12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a73a8:	3879      	s32i.n	a7, a8, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1499
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);
400a73aa:	ed6a01        	l32r	a0, 400a2954 <_mcu2dram_text_start+0x154>
400a73ad:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1501

    return NFC_STATUS_SUCCESS;
400a73b0:	120c      	movi.n	a2, 1
400a73b2:	61c8      	l32i.n	a12, a1, 24
400a73b4:	5108      	l32i.n	a0, a1, 20
400a73b6:	20c112        	addi	a1, a1, 32
400a73b9:	f00d      	ret.n

400a73bb <HAL_NfcSetFeature+0x83>:
	...

400a73bc <HAL_NfcResetLun>:
HAL_NfcResetLun():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1273
    FW call this function to reset LUN in cache read error handle
History:
    20150223    abby   create
------------------------------------------------------------------------------*/
BOOL MCU2_DRAM_TEXT HAL_NfcResetLun(FLASH_ADDR *pFlashAddr)
{
400a73bc:	e0c112        	addi	a1, a1, -32
400a73bf:	41c9      	s32i.n	a12, a1, 16
400a73c1:	3109      	s32i.n	a0, a1, 12
400a73c3:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1278
    NFCQ_ENTRY * pNFCQEntry;
    U8 ucPU, ucLun;

    ucPU = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
400a73c5:	010c32        	l8ui	a3, a12, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1277
BOOL MCU2_DRAM_TEXT HAL_NfcResetLun(FLASH_ADDR *pFlashAddr)
{
    NFCQ_ENTRY * pNFCQEntry;
    U8 ucPU, ucLun;

    ucPU = pFlashAddr->ucPU;
400a73c8:	000222        	l8ui	a2, a2, 0
400a73cb:	0129      	s32i.n	a2, a1, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1278
    ucLun = pFlashAddr->ucLun;
400a73cd:	1139      	s32i.n	a3, a1, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1280

    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a73cf:	ed5c01        	l32r	a0, 400a2940 <_mcu2dram_text_start+0x140>
400a73d2:	0000c0        	callx0	a0
400a73d5:	92cc      	bnez.n	a2, 400a73e2 <HAL_NfcResetLun+0x26>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1282
    {
        return NFC_STATUS_FAIL;
400a73d7:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1293
    pNFCQEntry->atRowAddr[0].bsRowAddr = HAL_NfcGetFlashRowAddr(pFlashAddr);
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_RESET_LUN);

    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_RESET_LUN, FALSE, INVALID_2F);

    return NFC_STATUS_SUCCESS;
400a73d9:	41c8      	l32i.n	a12, a1, 16
400a73db:	3108      	l32i.n	a0, a1, 12
400a73dd:	20c112        	addi	a1, a1, 32
400a73e0:	f00d      	ret.n

400a73e2 <HAL_NfcResetLun+0x26>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1285
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
    {
        return NFC_STATUS_FAIL;
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
400a73e2:	0128      	l32i.n	a2, a1, 0
400a73e4:	1138      	l32i.n	a3, a1, 4
400a73e6:	ed5701        	l32r	a0, 400a2944 <_mcu2dram_text_start+0x144>
400a73e9:	0000c0        	callx0	a0
400a73ec:	2129      	s32i.n	a2, a1, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1286
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);
400a73ee:	031c      	movi.n	a3, 16
400a73f0:	ed5601        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a73f3:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1288
    
    pNFCQEntry->atRowAddr[0].bsRowAddr = HAL_NfcGetFlashRowAddr(pFlashAddr);
400a73f6:	0c2d      	mov.n	a2, a12
400a73f8:	ed5501        	l32r	a0, 400a294c <_mcu2dram_text_start+0x14c>
400a73fb:	0000c0        	callx0	a0
400a73fe:	2138      	l32i.n	a3, a1, 8
400a7400:	8308      	l32i.n	a0, a3, 32
400a7402:	e10204        	insbits	a0, a2, 0, 29
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1289
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_RESET_LUN);
400a7405:	03a022        	movi	a2, 3
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1288
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);
    
    pNFCQEntry->atRowAddr[0].bsRowAddr = HAL_NfcGetFlashRowAddr(pFlashAddr);
400a7408:	8309      	s32i.n	a0, a3, 32
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1289
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_RESET_LUN);
400a740a:	ed5101        	l32r	a0, 400a2950 <_mcu2dram_text_start+0x150>
400a740d:	0000c0        	callx0	a0
400a7410:	2158      	l32i.n	a5, a1, 8
400a7412:	3548      	l32i.n	a4, a5, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1291

    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_RESET_LUN, FALSE, INVALID_2F);
400a7414:	330c      	movi.n	a3, 3
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1289

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);
    
    pNFCQEntry->atRowAddr[0].bsRowAddr = HAL_NfcGetFlashRowAddr(pFlashAddr);
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_RESET_LUN);
400a7416:	808244        	insbits	a4, a2, 8, 16
400a7419:	3549      	s32i.n	a4, a5, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1291

    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_RESET_LUN, FALSE, INVALID_2F);
400a741b:	0c2d      	mov.n	a2, a12
400a741d:	040c      	movi.n	a4, 0
400a741f:	ffa052        	movi	a5, 255
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1293

    return NFC_STATUS_SUCCESS;
400a7422:	41c8      	l32i.n	a12, a1, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1291
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);
    
    pNFCQEntry->atRowAddr[0].bsRowAddr = HAL_NfcGetFlashRowAddr(pFlashAddr);
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_RESET_LUN);

    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_RESET_LUN, FALSE, INVALID_2F);
400a7424:	ed4c01        	l32r	a0, 400a2954 <_mcu2dram_text_start+0x154>
400a7427:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1293

    return NFC_STATUS_SUCCESS;
400a742a:	120c      	movi.n	a2, 1
400a742c:	3108      	l32i.n	a0, a1, 12
400a742e:	20c112        	addi	a1, a1, 32
400a7431:	f00d      	ret.n

400a7433 <HAL_NfcResetLun+0x77>:
	...

400a7434 <HAL_NfcSingleBlockErase>:
HAL_NfcSingleBlockErase():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1664
------------------------------------------------------------------------------*/
BOOL MCU2_DRAM_TEXT HAL_NfcSingleBlockErase(FLASH_ADDR *pFlashAddr, BOOL bTlcMode)
{
    U8 ucPU, ucLun, ucReqType;
    NFCQ_ENTRY *pNFCQEntry;
    FLASH_ADDR tFlashAddr = { 0 };
400a7434:	eda451        	l32r	a5, 400a2ac4 <_mcu2dram_text_start+0x2c4>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1661
    20140911    Gavin   modify to meet coding style
    20140918    Gavin   add header for this function
    20151029    abby    modify to meet VT3533
------------------------------------------------------------------------------*/
BOOL MCU2_DRAM_TEXT HAL_NfcSingleBlockErase(FLASH_ADDR *pFlashAddr, BOOL bTlcMode)
{
400a7437:	e0c112        	addi	a1, a1, -32
400a743a:	7109      	s32i.n	a0, a1, 28
400a743c:	3139      	s32i.n	a3, a1, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1664
    U8 ucPU, ucLun, ucReqType;
    NFCQ_ENTRY *pNFCQEntry;
    FLASH_ADDR tFlashAddr = { 0 };
400a743e:	1568      	l32i.n	a6, a5, 4
400a7440:	1169      	s32i.n	a6, a1, 4
400a7442:	0558      	l32i.n	a5, a5, 0
400a7444:	0159      	s32i.n	a5, a1, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1666
    
    tFlashAddr = *pFlashAddr;
400a7446:	1248      	l32i.n	a4, a2, 4
400a7448:	0238      	l32i.n	a3, a2, 0
400a744a:	0139      	s32i.n	a3, a1, 0
400a744c:	1149      	s32i.n	a4, a1, 4
400a744e:	742030        	extui	a2, a3, 0, 8
400a7451:	4129      	s32i.n	a2, a1, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1668
    /* force page = 0 in erase to avoid flash abnormal response */
    tFlashAddr.usPage = 0; 
400a7453:	040c      	movi.n	a4, 0
400a7455:	743830        	extui	a3, a3, 8, 8
400a7458:	056132        	s32i	a3, a1, 20
400a745b:	035142        	s16i	a4, a1, 6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1672
    ucPU = tFlashAddr.ucPU;
    ucLun = tFlashAddr.ucLun;
    
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a745e:	ed3801        	l32r	a0, 400a2940 <_mcu2dram_text_start+0x140>
400a7461:	0000c0        	callx0	a0
400a7464:	72cc      	bnez.n	a2, 400a746f <HAL_NfcSingleBlockErase+0x3b>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1674
    {
        return NFC_STATUS_FAIL;
400a7466:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1708
    pNFCQEntry->atRowAddr[0].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);    
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);

    HAL_NfcCmdTrigger(&tFlashAddr, ucReqType, FALSE, INVALID_2F);

    return NFC_STATUS_SUCCESS;
400a7468:	7108      	l32i.n	a0, a1, 28
400a746a:	20c112        	addi	a1, a1, 32
400a746d:	f00d      	ret.n

400a746f <HAL_NfcSingleBlockErase+0x3b>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1693
        {
            ucReqType = NF_PRCQ_TLC_ERS;
        }
    }
    
    pNFCQEntry = (NFCQ_ENTRY *)HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
400a746f:	4128      	l32i.n	a2, a1, 16
400a7471:	052132        	l32i	a3, a1, 20
400a7474:	ed3401        	l32r	a0, 400a2944 <_mcu2dram_text_start+0x144>
400a7477:	0000c0        	callx0	a0
400a747a:	6129      	s32i.n	a2, a1, 24
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1694
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);
400a747c:	031c      	movi.n	a3, 16
400a747e:	ed3201        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a7481:	0000c0        	callx0	a0
400a7484:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1703
    {
        HAL_NfcSetErrInj(pNFCQEntry, &g_tErrInj);
    }
#endif

    pNFCQEntry->atRowAddr[0].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);    
400a7486:	ed3101        	l32r	a0, 400a294c <_mcu2dram_text_start+0x14c>
400a7489:	0000c0        	callx0	a0
400a748c:	61a8      	l32i.n	a10, a1, 24
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1704
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a748e:	3188      	l32i.n	a8, a1, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1703
    {
        HAL_NfcSetErrInj(pNFCQEntry, &g_tErrInj);
    }
#endif

    pNFCQEntry->atRowAddr[0].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);    
400a7490:	8a98      	l32i.n	a9, a10, 32
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1704
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a7492:	670c      	movi.n	a7, 6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1703
    {
        HAL_NfcSetErrInj(pNFCQEntry, &g_tErrInj);
    }
#endif

    pNFCQEntry->atRowAddr[0].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);    
400a7494:	e10294        	insbits	a9, a2, 0, 29
400a7497:	8a99      	s32i.n	a9, a10, 32
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1704
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a7499:	920c      	movi.n	a2, 9
400a749b:	832780        	moveqz	a2, a7, a8
400a749e:	2129      	s32i.n	a2, a1, 8
400a74a0:	ed2c01        	l32r	a0, 400a2950 <_mcu2dram_text_start+0x150>
400a74a3:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1706

    HAL_NfcCmdTrigger(&tFlashAddr, ucReqType, FALSE, INVALID_2F);
400a74a6:	2138      	l32i.n	a3, a1, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1704
        HAL_NfcSetErrInj(pNFCQEntry, &g_tErrInj);
    }
#endif

    pNFCQEntry->atRowAddr[0].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);    
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a74a8:	6108      	l32i.n	a0, a1, 24
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1706

    HAL_NfcCmdTrigger(&tFlashAddr, ucReqType, FALSE, INVALID_2F);
400a74aa:	040c      	movi.n	a4, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1704
        HAL_NfcSetErrInj(pNFCQEntry, &g_tErrInj);
    }
#endif

    pNFCQEntry->atRowAddr[0].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);    
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a74ac:	30b8      	l32i.n	a11, a0, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1706

    HAL_NfcCmdTrigger(&tFlashAddr, ucReqType, FALSE, INVALID_2F);
400a74ae:	ffa052        	movi	a5, 255
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1704
        HAL_NfcSetErrInj(pNFCQEntry, &g_tErrInj);
    }
#endif

    pNFCQEntry->atRowAddr[0].bsRowAddr = HAL_NfcGetFlashRowAddr(&tFlashAddr);    
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a74b1:	8082b4        	insbits	a11, a2, 8, 16
400a74b4:	012d      	mov.n	a2, a1
400a74b6:	30b9      	s32i.n	a11, a0, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1706

    HAL_NfcCmdTrigger(&tFlashAddr, ucReqType, FALSE, INVALID_2F);
400a74b8:	ed2701        	l32r	a0, 400a2954 <_mcu2dram_text_start+0x154>
400a74bb:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1708

    return NFC_STATUS_SUCCESS;
400a74be:	120c      	movi.n	a2, 1
400a74c0:	7108      	l32i.n	a0, a1, 28
400a74c2:	20c112        	addi	a1, a1, 32
400a74c5:	f00d      	ret.n

400a74c7 <HAL_NfcSingleBlockErase+0x93>:
	...

400a74c8 <HAL_NfcClearINTSts>:
HAL_NfcClearINTSts():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:899
History:
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
    20151030    abby    add ucLun as para
------------------------------------------------------------------------------*/
void MCU2_DRAM_TEXT HAL_NfcClearINTSts(U8 ucPU, U8 ucLun)
{
400a74c8:	f0c112        	addi	a1, a1, -16
400a74cb:	0139      	s32i.n	a3, a1, 0
400a74cd:	1109      	s32i.n	a0, a1, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:900
    U8 ucPhyPuInTotal = HAL_NfcGetPhyPU(ucPU);
400a74cf:	ed5501        	l32r	a0, 400a2a24 <_mcu2dram_text_start+0x224>
400a74d2:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:903
    
#ifndef SIM
    g_pNfcCmdSts->aNfcqCmdStsReg[ucPhyPuInTotal][ucLun].bsIntSts = 1; // write 1, hardware clear it
400a74d5:	ecd931        	l32r	a3, 400a283c <_mcu2dram_text_start+0x3c>
400a74d8:	0148      	l32i.n	a4, a1, 0
400a74da:	3e2332        	l32i	a3, a3, 248
400a74dd:	a02240        	addx4	a2, a2, a4
400a74e0:	a02230        	addx4	a2, a2, a3
400a74e3:	efa042        	movi	a4, 239
400a74e6:	031c      	movi.n	a3, 16
400a74e8:	0020c0        	memw
400a74eb:	010202        	l8ui	a0, a2, 1
400a74ee:	100040        	and	a0, a0, a4
400a74f1:	200030        	or	a0, a0, a3
400a74f4:	0020c0        	memw
400a74f7:	014202        	s8i	a0, a2, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:906
#endif

    return;
400a74fa:	1108      	l32i.n	a0, a1, 4
400a74fc:	10c112        	addi	a1, a1, 16
400a74ff:	f00d      	ret.n

400a7501 <HAL_NfcClearINTSts+0x39>:
400a7501:	000000                                        ...

400a7504 <HAL_NfcResetCmdQue>:
HAL_NfcResetCmdQue():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:863
    20141127    Tobey   modify note.
    20150119    Tobey   HW don't support set function
    20151029     abby    add Lun
------------------------------------------------------------------------------*/
void MCU2_DRAM_TEXT HAL_NfcResetCmdQue(U8 ucPU, U8 ucLun)
{
400a7504:	f0c112        	addi	a1, a1, -16
400a7507:	0139      	s32i.n	a3, a1, 0
400a7509:	1109      	s32i.n	a0, a1, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:864
    U8 ucPhyPU = HAL_NfcGetPhyPU(ucPU);  
400a750b:	ed4601        	l32r	a0, 400a2a24 <_mcu2dram_text_start+0x224>
400a750e:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:875
    tLunLocation.ucPhyPuInCh = ucPhyPU / NFC_CH_TOTAL;
    tLunLocation.ucLunInPhyPu = ucLun;
    
    NFC_InterfaceResetCQ(&tLunLocation, 0);
#else
    g_pNfcCmdSts->aNfcqCmdStsReg[ucPhyPU][ucLun].bsPrst = TRUE;
400a7511:	ecca31        	l32r	a3, 400a283c <_mcu2dram_text_start+0x3c>
400a7514:	0148      	l32i.n	a4, a1, 0
400a7516:	3e2332        	l32i	a3, a3, 248
400a7519:	a02240        	addx4	a2, a2, a4
400a751c:	a02230        	addx4	a2, a2, a3
400a751f:	dfa042        	movi	a4, 223
400a7522:	032c      	movi.n	a3, 32
400a7524:	0020c0        	memw
400a7527:	010202        	l8ui	a0, a2, 1
400a752a:	100040        	and	a0, a0, a4
400a752d:	200030        	or	a0, a0, a3
400a7530:	0020c0        	memw
400a7533:	014202        	s8i	a0, a2, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:878
#endif

    return;
400a7536:	1108      	l32i.n	a0, a1, 4
400a7538:	10c112        	addi	a1, a1, 16
400a753b:	f00d      	ret.n

400a753d <HAL_NfcResetCmdQue+0x39>:
400a753d:	000000                                        ...

400a7540 <HAL_NfcSinglePlnReadSts>:
HAL_NfcSinglePlnReadSts():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2711
Usage:
History:
    20160811    abby    create
------------------------------------------------------------------------------*/
U32 MCU2_DRAM_TEXT HAL_NfcSinglePlnReadSts(FLASH_ADDR *pFlashAddr)
{
400a7540:	e0c112        	addi	a1, a1, -32
400a7543:	41c9      	s32i.n	a12, a1, 16
400a7545:	3109      	s32i.n	a0, a1, 12
400a7547:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2716
    U8  ucPU, ucLun;
    NFCQ_ENTRY *pNFCQEntry;
    
    ucPU  = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
400a7549:	010c32        	l8ui	a3, a12, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2715
U32 MCU2_DRAM_TEXT HAL_NfcSinglePlnReadSts(FLASH_ADDR *pFlashAddr)
{
    U8  ucPU, ucLun;
    NFCQ_ENTRY *pNFCQEntry;
    
    ucPU  = pFlashAddr->ucPU;
400a754c:	000222        	l8ui	a2, a2, 0
400a754f:	0129      	s32i.n	a2, a1, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2716
    ucLun = pFlashAddr->ucLun;
400a7551:	1139      	s32i.n	a3, a1, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2718
    
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a7553:	ecfb01        	l32r	a0, 400a2940 <_mcu2dram_text_start+0x140>
400a7556:	0000c0        	callx0	a0
400a7559:	92cc      	bnez.n	a2, 400a7566 <HAL_NfcSinglePlnReadSts+0x26>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2720
    {
        return NFC_STATUS_FAIL;
400a755b:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2732
    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_READ_STS_ENHANCE);
    pNFCQEntry->atRowAddr[0].bsRowAddr = HAL_NfcGetFlashRowAddr(pFlashAddr);

    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_READ_STS_ENHANCE, FALSE, INVALID_2F);

    return NFC_STATUS_SUCCESS;
400a755d:	41c8      	l32i.n	a12, a1, 16
400a755f:	3108      	l32i.n	a0, a1, 12
400a7561:	20c112        	addi	a1, a1, 32
400a7564:	f00d      	ret.n

400a7566 <HAL_NfcSinglePlnReadSts+0x26>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2724
    {
        return NFC_STATUS_FAIL;
    }
    
    /*  CONFIGURE NFCQ   */
    pNFCQEntry = (NFCQ_ENTRY *)HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
400a7566:	0128      	l32i.n	a2, a1, 0
400a7568:	1138      	l32i.n	a3, a1, 4
400a756a:	ecf601        	l32r	a0, 400a2944 <_mcu2dram_text_start+0x144>
400a756d:	0000c0        	callx0	a0
400a7570:	2129      	s32i.n	a2, a1, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2725
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);
400a7572:	031c      	movi.n	a3, 16
400a7574:	ecf501        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a7577:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2727

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_READ_STS_ENHANCE);
400a757a:	821c      	movi.n	a2, 24
400a757c:	ecf501        	l32r	a0, 400a2950 <_mcu2dram_text_start+0x150>
400a757f:	0000c0        	callx0	a0
400a7582:	2138      	l32i.n	a3, a1, 8
400a7584:	3308      	l32i.n	a0, a3, 12
400a7586:	808204        	insbits	a0, a2, 8, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2728
    pNFCQEntry->atRowAddr[0].bsRowAddr = HAL_NfcGetFlashRowAddr(pFlashAddr);
400a7589:	202cc0        	or	a2, a12, a12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2727
    
    /*  CONFIGURE NFCQ   */
    pNFCQEntry = (NFCQ_ENTRY *)HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_READ_STS_ENHANCE);
400a758c:	3309      	s32i.n	a0, a3, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2728
    pNFCQEntry->atRowAddr[0].bsRowAddr = HAL_NfcGetFlashRowAddr(pFlashAddr);
400a758e:	ecef01        	l32r	a0, 400a294c <_mcu2dram_text_start+0x14c>
400a7591:	0000c0        	callx0	a0
400a7594:	2158      	l32i.n	a5, a1, 8
400a7596:	8548      	l32i.n	a4, a5, 32
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2730

    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_READ_STS_ENHANCE, FALSE, INVALID_2F);
400a7598:	831c      	movi.n	a3, 24
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2728
    /*  CONFIGURE NFCQ   */
    pNFCQEntry = (NFCQ_ENTRY *)HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_READ_STS_ENHANCE);
    pNFCQEntry->atRowAddr[0].bsRowAddr = HAL_NfcGetFlashRowAddr(pFlashAddr);
400a759a:	e10244        	insbits	a4, a2, 0, 29
400a759d:	8549      	s32i.n	a4, a5, 32
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2730

    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_READ_STS_ENHANCE, FALSE, INVALID_2F);
400a759f:	0c2d      	mov.n	a2, a12
400a75a1:	040c      	movi.n	a4, 0
400a75a3:	ffa052        	movi	a5, 255
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2732

    return NFC_STATUS_SUCCESS;
400a75a6:	41c8      	l32i.n	a12, a1, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2730
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_READ_STS_ENHANCE);
    pNFCQEntry->atRowAddr[0].bsRowAddr = HAL_NfcGetFlashRowAddr(pFlashAddr);

    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_READ_STS_ENHANCE, FALSE, INVALID_2F);
400a75a8:	eceb01        	l32r	a0, 400a2954 <_mcu2dram_text_start+0x154>
400a75ab:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:2732

    return NFC_STATUS_SUCCESS;
400a75ae:	120c      	movi.n	a2, 1
400a75b0:	3108      	l32i.n	a0, a1, 12
400a75b2:	20c112        	addi	a1, a1, 32
400a75b5:	f00d      	ret.n

400a75b7 <HAL_NfcSinglePlnReadSts+0x77>:
	...

400a75b8 <HAL_NfcFullBlockErase>:
HAL_NfcFullBlockErase():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1121
U32 MCU2_DRAM_TEXT HAL_NfcFullBlockErase(FLASH_ADDR *pFlashAddr, BOOL bTLCMode)
{
    U8 ucPU, ucLun;
    U8 ucReqType;
    NFCQ_ENTRY *pNFCQEntry;
    FLASH_ADDR tFlashAddr = { 0 };
400a75b8:	ed4451        	l32r	a5, 400a2ac8 <_mcu2dram_text_start+0x2c8>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1117
    20140911    Gavin   modify to meet coding style
    20140918    Gavin   add header for this function
    20151106    abby    modify to meet VT3533
------------------------------------------------------------------------------*/
U32 MCU2_DRAM_TEXT HAL_NfcFullBlockErase(FLASH_ADDR *pFlashAddr, BOOL bTLCMode)
{
400a75bb:	e0c112        	addi	a1, a1, -32
400a75be:	7109      	s32i.n	a0, a1, 28
400a75c0:	3139      	s32i.n	a3, a1, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1121
    U8 ucPU, ucLun;
    U8 ucReqType;
    NFCQ_ENTRY *pNFCQEntry;
    FLASH_ADDR tFlashAddr = { 0 };
400a75c2:	1568      	l32i.n	a6, a5, 4
400a75c4:	1169      	s32i.n	a6, a1, 4
400a75c6:	0558      	l32i.n	a5, a5, 0
400a75c8:	0159      	s32i.n	a5, a1, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1123

    tFlashAddr = *pFlashAddr;
400a75ca:	1248      	l32i.n	a4, a2, 4
400a75cc:	0238      	l32i.n	a3, a2, 0
400a75ce:	0139      	s32i.n	a3, a1, 0
400a75d0:	1149      	s32i.n	a4, a1, 4
400a75d2:	742030        	extui	a2, a3, 0, 8
400a75d5:	4129      	s32i.n	a2, a1, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1125
    /* force page = 0 in erase to avoid flash abnormal response */
    tFlashAddr.usPage = 0;
400a75d7:	040c      	movi.n	a4, 0
400a75d9:	743830        	extui	a3, a3, 8, 8
400a75dc:	056132        	s32i	a3, a1, 20
400a75df:	035142        	s16i	a4, a1, 6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1129
    ucPU  = tFlashAddr.ucPU;
    ucLun = tFlashAddr.ucLun;

    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a75e2:	ecd701        	l32r	a0, 400a2940 <_mcu2dram_text_start+0x140>
400a75e5:	0000c0        	callx0	a0
400a75e8:	82cc      	bnez.n	a2, 400a75f4 <HAL_NfcFullBlockErase+0x3c>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1131
    {
        return NFC_STATUS_FAIL;
400a75ea:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1159

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);

    HAL_NfcCmdTrigger(&tFlashAddr, ucReqType, FALSE, INVALID_2F);

    return NFC_STATUS_SUCCESS;
400a75ec:	7108      	l32i.n	a0, a1, 28
400a75ee:	20c112        	addi	a1, a1, 32
400a75f1:	f00d      	ret.n

400a75f3 <HAL_NfcFullBlockErase+0x3b>:
	...

400a75f4 <HAL_NfcFullBlockErase+0x3c>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1134
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
    {
        return NFC_STATUS_FAIL;
    }

    pNFCQEntry = (NFCQ_ENTRY *)HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
400a75f4:	4128      	l32i.n	a2, a1, 16
400a75f6:	5138      	l32i.n	a3, a1, 20
400a75f8:	ecd301        	l32r	a0, 400a2944 <_mcu2dram_text_start+0x144>
400a75fb:	0000c0        	callx0	a0
400a75fe:	6129      	s32i.n	a2, a1, 24
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1135
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);
400a7600:	031c      	movi.n	a3, 16
400a7602:	ecd101        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a7605:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1153
    {
        HAL_NfcSetErrInj(pNFCQEntry, &g_tErrInj);
    }
#endif

    HAL_NfcSetFullPageRowAddr(pNFCQEntry, &tFlashAddr, FALSE);
400a7608:	6128      	l32i.n	a2, a1, 24
400a760a:	013d      	mov.n	a3, a1
400a760c:	040c      	movi.n	a4, 0
400a760e:	ed1b01        	l32r	a0, 400a2a7c <_mcu2dram_text_start+0x27c>
400a7611:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1155

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a7614:	3188      	l32i.n	a8, a1, 12
400a7616:	e70c      	movi.n	a7, 14
400a7618:	121c      	movi.n	a2, 17
400a761a:	832780        	moveqz	a2, a7, a8
400a761d:	2129      	s32i.n	a2, a1, 8
400a761f:	eccc01        	l32r	a0, 400a2950 <_mcu2dram_text_start+0x150>
400a7622:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1157

    HAL_NfcCmdTrigger(&tFlashAddr, ucReqType, FALSE, INVALID_2F);
400a7625:	2138      	l32i.n	a3, a1, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1155
    }
#endif

    HAL_NfcSetFullPageRowAddr(pNFCQEntry, &tFlashAddr, FALSE);

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a7627:	61a8      	l32i.n	a10, a1, 24
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1157

    HAL_NfcCmdTrigger(&tFlashAddr, ucReqType, FALSE, INVALID_2F);
400a7629:	040c      	movi.n	a4, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1155
    }
#endif

    HAL_NfcSetFullPageRowAddr(pNFCQEntry, &tFlashAddr, FALSE);

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a762b:	3a98      	l32i.n	a9, a10, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1157

    HAL_NfcCmdTrigger(&tFlashAddr, ucReqType, FALSE, INVALID_2F);
400a762d:	ffa052        	movi	a5, 255
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1155
    }
#endif

    HAL_NfcSetFullPageRowAddr(pNFCQEntry, &tFlashAddr, FALSE);

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(ucReqType);
400a7630:	808294        	insbits	a9, a2, 8, 16
400a7633:	3a99      	s32i.n	a9, a10, 12
400a7635:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1157

    HAL_NfcCmdTrigger(&tFlashAddr, ucReqType, FALSE, INVALID_2F);
400a7637:	ecc701        	l32r	a0, 400a2954 <_mcu2dram_text_start+0x154>
400a763a:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:1159

    return NFC_STATUS_SUCCESS;
400a763d:	120c      	movi.n	a2, 1
400a763f:	7108      	l32i.n	a0, a1, 28
400a7641:	20c112        	addi	a1, a1, 32
400a7644:	f00d      	ret.n

400a7646 <HAL_NfcFullBlockErase+0x8e>:
	...

400a7648 <TEST_NfcPattQStsInit>:
TEST_NfcPattQStsInit():
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a7648:	03eb70        	rsr.prid	a7
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattQ.c:49
    U32 ucWptr;
    U32 ulMcuId;

    ulMcuId = HAL_GetMcuId();
    
    for (ucWptr = 0; ucWptr < PATTQ_DEPTH; ucWptr++)
400a764b:	ffa022        	movi	a2, 255
400a764e:	030c      	movi.n	a3, 0
400a7650:	fec772        	addi	a7, a7, -2
400a7653:	160c      	movi.n	a6, 1
400a7655:	ec7941        	l32r	a4, 400a283c <_mcu2dram_text_start+0x3c>
400a7658:	050c      	movi.n	a5, 0
400a765a:	672442        	l32i	a4, a4, 0x19c
400a765d:	835670        	moveqz	a5, a6, a7
400a7660:	933250        	movnez	a3, a2, a5
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattQ.c:51
    {
        g_pPattStsQ->aPattStsQ[ucWptr] = (MCU1_ID == ulMcuId)? INVALID_2F : BASIC_PATTQ_STS_INIT;
400a7663:	0020c0        	memw
400a7666:	004432        	s8i	a3, a4, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattQ.c:49
    U32 ucWptr;
    U32 ulMcuId;

    ulMcuId = HAL_GetMcuId();
    
    for (ucWptr = 0; ucWptr < PATTQ_DEPTH; ucWptr++)
400a7669:	841b      	addi.n	a8, a4, 1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattQ.c:51
    {
        g_pPattStsQ->aPattStsQ[ucWptr] = (MCU1_ID == ulMcuId)? INVALID_2F : BASIC_PATTQ_STS_INIT;
400a766b:	0020c0        	memw
400a766e:	004832        	s8i	a3, a8, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattQ.c:53
    }
}
400a7671:	f00d      	ret.n

400a7673 <TEST_NfcPattQStsInit+0x2b>:
	...

400a7674 <TEST_NfcBasicSharedMemMap>:
TEST_NfcBasicSharedMemMap():
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattGenBasic.c:131
    
    return;
}

void MCU12_DRAM_TEXT TEST_NfcBasicSharedMemMap(SUBSYSTEM_MEM_BASE * pFreeMemBase)
{    
400a7674:	f0c112        	addi	a1, a1, -16
400a7677:	31d9      	s32i.n	a13, a1, 12
400a7679:	21c9      	s32i.n	a12, a1, 8
400a767b:	1109      	s32i.n	a0, a1, 4
400a767d:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattGenBasic.c:102
History:
    20160905    abby   create.
------------------------------------------------------------------------------*/
LOCAL void MCU12_DRAM_TEXT TEST_NfcBasicSharedDSRAM1MemMap(U32 *pFreeSharedSRAM1Base)
{
    U32 ulFreeBase = *pFreeSharedSRAM1Base;
400a767f:	5208      	l32i.n	a0, a2, 20
400a7681:	006102        	s32i	a0, a1, 0
400a7684:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattGenBasic.c:103
    COM_MemAddr16DWAlign(&ulFreeBase);
400a7686:	ed1401        	l32r	a0, 400a2ad8 <_mcu2dram_text_start+0x2d8>
400a7689:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattGenBasic.c:106
    
    // Part1:
    g_pPattQ = (BASIC_PATTQ *)ulFreeBase;//g_ptFCmdReq;
400a768c:	ec6cd1        	l32r	a13, 400a283c <_mcu2dram_text_start+0x3c>
400a768f:	0128      	l32i.n	a2, a1, 0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattGenBasic.c:108
    //ulFreeBase = (U32)g_pPattQ;
    COM_MemIncBaseAddr(&ulFreeBase, sizeof(BASIC_PATTQ));
400a7691:	033c      	movi.n	a3, 48
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattGenBasic.c:106
{
    U32 ulFreeBase = *pFreeSharedSRAM1Base;
    COM_MemAddr16DWAlign(&ulFreeBase);
    
    // Part1:
    g_pPattQ = (BASIC_PATTQ *)ulFreeBase;//g_ptFCmdReq;
400a7693:	666d22        	s32i	a2, a13, 0x198
400a7696:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattGenBasic.c:108
    //ulFreeBase = (U32)g_pPattQ;
    COM_MemIncBaseAddr(&ulFreeBase, sizeof(BASIC_PATTQ));
400a7698:	ed1101        	l32r	a0, 400a2adc <_mcu2dram_text_start+0x2dc>
400a769b:	0000c0        	callx0	a0
400a769e:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattGenBasic.c:109
    COM_MemAddr16DWAlign(&ulFreeBase);
400a76a0:	ed0e01        	l32r	a0, 400a2ad8 <_mcu2dram_text_start+0x2d8>
400a76a3:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattGenBasic.c:112

    // Part2:
    g_pPattQDptr = (BASIC_PATTQ_DPTR *)ulFreeBase;
400a76a6:	0138      	l32i.n	a3, a1, 0
400a76a8:	012d      	mov.n	a2, a1
400a76aa:	686d32        	s32i	a3, a13, 0x1a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattGenBasic.c:113
    COM_MemIncBaseAddr(&ulFreeBase, sizeof(BASIC_PATTQ_DPTR));
400a76ad:	230c      	movi.n	a3, 2
400a76af:	ed0b01        	l32r	a0, 400a2adc <_mcu2dram_text_start+0x2dc>
400a76b2:	0000c0        	callx0	a0
400a76b5:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattGenBasic.c:114
    COM_MemAddr16DWAlign(&ulFreeBase);
400a76b7:	ed0801        	l32r	a0, 400a2ad8 <_mcu2dram_text_start+0x2d8>
400a76ba:	0000c0        	callx0	a0
400a76bd:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattGenBasic.c:117

    g_pPattStsQ = (BASIC_PATT_STSQ *)ulFreeBase;
    COM_MemIncBaseAddr(&ulFreeBase, sizeof(BASIC_PATT_STSQ));
400a76bf:	230c      	movi.n	a3, 2
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattGenBasic.c:116
    // Part2:
    g_pPattQDptr = (BASIC_PATTQ_DPTR *)ulFreeBase;
    COM_MemIncBaseAddr(&ulFreeBase, sizeof(BASIC_PATTQ_DPTR));
    COM_MemAddr16DWAlign(&ulFreeBase);

    g_pPattStsQ = (BASIC_PATT_STSQ *)ulFreeBase;
400a76c1:	0148      	l32i.n	a4, a1, 0
400a76c3:	676d42        	s32i	a4, a13, 0x19c
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattGenBasic.c:117
    COM_MemIncBaseAddr(&ulFreeBase, sizeof(BASIC_PATT_STSQ));
400a76c6:	ed0501        	l32r	a0, 400a2adc <_mcu2dram_text_start+0x2dc>
400a76c9:	0000c0        	callx0	a0
400a76cc:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattGenBasic.c:118
    COM_MemAddr16DWAlign(&ulFreeBase);
400a76ce:	ed0201        	l32r	a0, 400a2ad8 <_mcu2dram_text_start+0x2d8>
400a76d1:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattGenBasic.c:120

    ASSERT(ulFreeBase - DSRAM1_MCU12_SHARE_BASE <= DSRAM1_MCU12_SHARE_SIZE);
400a76d4:	ecfe61        	l32r	a6, 400a2acc <_mcu2dram_text_start+0x2cc>
400a76d7:	0108      	l32i.n	a0, a1, 0
400a76d9:	ecfd51        	l32r	a5, 400a2ad0 <_mcu2dram_text_start+0x2d0>
400a76dc:	606a      	add.n	a6, a0, a6
400a76de:	2a3567        	bltu	a5, a6, 400a770c <TEST_NfcBasicSharedMemMap+0x98>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattGenBasic.c:122
    
    DBG_Printf("NFC BASIC UT Alloc shared SRAM1 0x%x B, Rsvd 0x%x B.\n"
400a76e1:	5c48      	l32i.n	a4, a12, 20
400a76e3:	ecfc21        	l32r	a2, 400a2ad4 <_mcu2dram_text_start+0x2d4>
400a76e6:	c03040        	sub	a3, a0, a4
400a76e9:	c04400        	sub	a4, a4, a0
400a76ec:	62d442        	addmi	a4, a4, 0x6200
400a76ef:	ec5201        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a76f2:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattGenBasic.c:125
        , ulFreeBase - *pFreeSharedSRAM1Base, DSRAM1_MCU12_SHARE_SIZE - (ulFreeBase - *pFreeSharedSRAM1Base));

    *pFreeSharedSRAM1Base = ulFreeBase;
400a76f5:	0168      	l32i.n	a6, a1, 0
400a76f7:	5c69      	s32i.n	a6, a12, 20
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a76f9:	03eb50        	rsr.prid	a5
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattGenBasic.c:139
    /* checklist files allocate in MCU1 dram */
    if (MCU1_ID == HAL_GetMcuId())
    {
        TEST_NfcCheckListAllocDram(&pFreeMemBase->ulDRAMBase);
    }
}
400a76fc:	31d8      	l32i.n	a13, a1, 12
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattGenBasic.c:135
void MCU12_DRAM_TEXT TEST_NfcBasicSharedMemMap(SUBSYSTEM_MEM_BASE * pFreeMemBase)
{    
    TEST_NfcBasicSharedDSRAM1MemMap(&pFreeMemBase->ulFreeSRAM1SharedBase);

    /* checklist files allocate in MCU1 dram */
    if (MCU1_ID == HAL_GetMcuId())
400a76fe:	0e2526        	beqi	a5, 2, 400a7710 <TEST_NfcBasicSharedMemMap+0x9c>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattGenBasic.c:139
    {
        TEST_NfcCheckListAllocDram(&pFreeMemBase->ulDRAMBase);
    }
}
400a7701:	21c8      	l32i.n	a12, a1, 8
400a7703:	1108      	l32i.n	a0, a1, 4
400a7705:	10c112        	addi	a1, a1, 16
400a7708:	f00d      	ret.n

400a770a <TEST_NfcBasicSharedMemMap+0x96>:
	...

400a770c <TEST_NfcBasicSharedMemMap+0x98>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattGenBasic.c:120

    g_pPattStsQ = (BASIC_PATT_STSQ *)ulFreeBase;
    COM_MemIncBaseAddr(&ulFreeBase, sizeof(BASIC_PATT_STSQ));
    COM_MemAddr16DWAlign(&ulFreeBase);

    ASSERT(ulFreeBase - DSRAM1_MCU12_SHARE_BASE <= DSRAM1_MCU12_SHARE_SIZE);
400a770c:	ffff06        	j	400a770c <TEST_NfcBasicSharedMemMap+0x98>

400a770f <TEST_NfcBasicSharedMemMap+0x9b>:
	...

400a7710 <TEST_NfcBasicSharedMemMap+0x9c>:
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattGenBasic.c:137
    TEST_NfcBasicSharedDSRAM1MemMap(&pFreeMemBase->ulFreeSRAM1SharedBase);

    /* checklist files allocate in MCU1 dram */
    if (MCU1_ID == HAL_GetMcuId())
    {
        TEST_NfcCheckListAllocDram(&pFreeMemBase->ulDRAMBase);
400a7710:	10cc22        	addi	a2, a12, 16
400a7713:	ecf301        	l32r	a0, 400a2ae0 <_mcu2dram_text_start+0x2e0>
400a7716:	0000c0        	callx0	a0
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC\NFC_BASIC/TEST_NfcPattGenBasic.c:139
    }
}
400a7719:	21c8      	l32i.n	a12, a1, 8
400a771b:	31d8      	l32i.n	a13, a1, 12
400a771d:	1108      	l32i.n	a0, a1, 4
400a771f:	10c112        	addi	a1, a1, 16
400a7722:	f00d      	ret.n

400a7724 <TEST_NfcSetSsu0Base..LO_1482204275>:
TEST_NfcSetSsu0Base():
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:388
LOCAL void MCU2_DRAM_TEXT TEST_NfcSetSsu0Base(void)
{
    volatile NF_SSU_BASEADDR_REG *pSsuBaseAddr;
    pSsuBaseAddr = (volatile NF_SSU_BASEADDR_REG *)&rNfcSsuBaseAddr;

    g_ulSsuInOtfbBase = ((pSsuBaseAddr->bsSsuOtfbBase) << 10) + OTFB_START_ADDRESS;
400a7724:	ecf051        	l32r	a5, 400a2ae4 <_mcu2dram_text_start+0x2e4>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:384
    20151030    abby    create.  
    20151116    abby    rmv MCU1 support 
    20160304    abby    rmv SSU1 base addr assignment
------------------------------------------------------------------------------*/
LOCAL void MCU2_DRAM_TEXT TEST_NfcSetSsu0Base(void)
{
400a7727:	ec4531        	l32r	a3, 400a283c <_mcu2dram_text_start+0x3c>
400a772a:	ecef21        	l32r	a2, 400a2ae8 <_mcu2dram_text_start+0x2e8>
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:388
    volatile NF_SSU_BASEADDR_REG *pSsuBaseAddr;
    pSsuBaseAddr = (volatile NF_SSU_BASEADDR_REG *)&rNfcSsuBaseAddr;

    g_ulSsuInOtfbBase = ((pSsuBaseAddr->bsSsuOtfbBase) << 10) + OTFB_START_ADDRESS;
400a772d:	0020c0        	memw
400a7730:	0248      	l32i.n	a4, a2, 0
400a7732:	944040        	extui	a4, a4, 0, 10
400a7735:	114460        	slli	a4, a4, 10
400a7738:	445a      	add.n	a4, a4, a5
400a773a:	606342        	s32i	a4, a3, 0x180
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:389
    g_ulSsuInDramBase = ((pSsuBaseAddr->bsSsuDramBase) << 10) + DRAM_START_ADDRESS;
400a773d:	eceb41        	l32r	a4, 400a2aec <_mcu2dram_text_start+0x2ec>
400a7740:	0020c0        	memw
400a7743:	0228      	l32i.n	a2, a2, 0
400a7745:	412a20        	srli	a2, a2, 10
400a7748:	112260        	slli	a2, a2, 10
400a774b:	224a      	add.n	a2, a2, a4
400a774d:	616322        	s32i	a2, a3, 0x184
D:\IM_3D_TLC\unittest\HAL_UnitTest\NFC/TEST_NfcMCU2.c:391

    return;
400a7750:	f00d      	ret.n

400a7752 <TEST_NfcSetSsu0Base..LO_1482204275+0x2e>:
	...

400a7754 <FW_ChkNtfnMsg>:
FW_ChkNtfnMsg():
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:183
Usage      : allocate a new message entry for construction.
History    : 
    1. 2014.11.11 JasonGuo create function
==============================================================================*/
GLOBAL void MCU12_DRAM_TEXT FW_ChkNtfnMsg(void)
{
400a7754:	f0c112        	addi	a1, a1, -16
400a7757:	0109      	s32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a7759:	03eb20        	rsr.prid	a2
400a775c:	ec3831        	l32r	a3, 400a283c <_mcu2dram_text_start+0x3c>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:211
        DBG_Printf("Notification message sequence mismatch!\n");
        DBG_Getch();
    }
#endif

    switch (l_pFWNtfnMsg->ulMsgCode)
400a775f:	2b2302        	l32i	a0, a3, 172
400a7762:	1008      	l32i.n	a0, a0, 4
400a7764:	322026        	beqi	a0, 2, 400a779a <FW_ChkNtfnMsg+0x46>
400a7767:	024026        	beqi	a0, 4, 400a776d <FW_ChkNtfnMsg+0x19>
400a776a:	106026        	beqi	a0, 6, 400a777e <FW_ChkNtfnMsg+0x2a>

400a776d <FW_ChkNtfnMsg+0x19>:
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:234
    }

    /* Increasing local message sequence number after receiving one message. */
    l_ulNtfnMsgSeqNum++;

    return;
400a776d:	0108      	l32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:232
        default:
            break;
    }

    /* Increasing local message sequence number after receiving one message. */
    l_ulNtfnMsgSeqNum++;
400a776f:	2d2342        	l32i	a4, a3, 180
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:234

    return;
400a7772:	10c112        	addi	a1, a1, 16
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:232
        default:
            break;
    }

    /* Increasing local message sequence number after receiving one message. */
    l_ulNtfnMsgSeqNum++;
400a7775:	441b      	addi.n	a4, a4, 1
400a7777:	2d6342        	s32i	a4, a3, 180
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:234

    return;
400a777a:	f00d      	ret.n

400a777c <FW_ChkNtfnMsg+0x28>:
	...

400a777e <FW_ChkNtfnMsg+0x2a>:
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:224
            /* This notification message only wakes a subsystem MCU up from WAITI state. */
            break;

        case SMSG_DBG_GETCH_CLEAR_SCQ:
            /* Notify MCU12 to clear SCQ and enter debug mode after debug getch */
            CommSetEvent(COMM_EVENT_OWNER_L1, COMM_EVENT_OFFSET_DBG);
400a777e:	020c      	movi.n	a2, 0
400a7780:	830c      	movi.n	a3, 8
400a7782:	ecdb01        	l32r	a0, 400a2af0 <_mcu2dram_text_start+0x2f0>
400a7785:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:232
        default:
            break;
    }

    /* Increasing local message sequence number after receiving one message. */
    l_ulNtfnMsgSeqNum++;
400a7788:	ec2d61        	l32r	a6, 400a283c <_mcu2dram_text_start+0x3c>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:234

    return;
400a778b:	0108      	l32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:232
        default:
            break;
    }

    /* Increasing local message sequence number after receiving one message. */
    l_ulNtfnMsgSeqNum++;
400a778d:	2d2652        	l32i	a5, a6, 180
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:234

    return;
400a7790:	10c112        	addi	a1, a1, 16
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:232
        default:
            break;
    }

    /* Increasing local message sequence number after receiving one message. */
    l_ulNtfnMsgSeqNum++;
400a7793:	551b      	addi.n	a5, a5, 1
400a7795:	2d6652        	s32i	a5, a6, 180
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:234

    return;
400a7798:	f00d      	ret.n

400a779a <FW_ChkNtfnMsg+0x46>:
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:215

    switch (l_pFWNtfnMsg->ulMsgCode)
    {
        case SMSG_FORCE_CLEAR_SCQ:
            /* We only used the notification message to pass force clear SCQ request. */
            CommSetEvent(COMM_EVENT_OWNER_L1, COMM_EVENT_OFFSET_ERR);
400a779a:	020c      	movi.n	a2, 0
400a779c:	430c      	movi.n	a3, 4
400a779e:	ecd401        	l32r	a0, 400a2af0 <_mcu2dram_text_start+0x2f0>
400a77a1:	0000c0        	callx0	a0
400a77a4:	ec2631        	l32r	a3, 400a283c <_mcu2dram_text_start+0x3c>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:234
    }

    /* Increasing local message sequence number after receiving one message. */
    l_ulNtfnMsgSeqNum++;

    return;
400a77a7:	0108      	l32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:232
        default:
            break;
    }

    /* Increasing local message sequence number after receiving one message. */
    l_ulNtfnMsgSeqNum++;
400a77a9:	2d2342        	l32i	a4, a3, 180
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:234

    return;
400a77ac:	10c112        	addi	a1, a1, 16
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:232
        default:
            break;
    }

    /* Increasing local message sequence number after receiving one message. */
    l_ulNtfnMsgSeqNum++;
400a77af:	441b      	addi.n	a4, a4, 1
400a77b1:	2d6342        	s32i	a4, a3, 180
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:234

    return;
400a77b4:	f00d      	ret.n

400a77b6 <FW_ChkNtfnMsg+0x62>:
	...

400a77b8 <HAL_FlashRetryPreConditon>:
HAL_FlashRetryPreConditon():
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:421
History:
    20160415    abby   create
------------------------------------------------------------------------------*/
BOOL MCU2_DRAM_TEXT HAL_FlashRetryPreConditon(FLASH_ADDR *pFlashAddr)
{
    return NFC_STATUS_SUCCESS;//do not need any actual precondion
400a77b8:	120c      	movi.n	a2, 1
400a77ba:	f00d      	ret.n

400a77bc <HAL_FlashBasicSendRetryPreConditon>:
HAL_FlashBasicSendRetryPreConditon():
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_ViaCmd.c:108
    FLASH_ADDR FlashAddr = {0};

    FlashAddr.ucPU = ucPU;
    FlashAddr.ucLun = ucBlun;

    return HAL_FlashRetryPreConditon(&FlashAddr);
400a77bc:	120c      	movi.n	a2, 1
400a77be:	f00d      	ret.n

400a77c0 <HAL_FlashRetrySendParam>:
HAL_FlashRetrySendParam():
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:445
    called when do read retry sequence
History:
    20160415    abby   create
------------------------------------------------------------------------------*/
BOOL MCU2_DRAM_TEXT HAL_FlashRetrySendParam(FLASH_ADDR *pFlashAddr, RETRY_TABLE *pRetryPara, BOOL bTlcMode, U8 ucParaNum)                            
{
400a77c0:	e0c112        	addi	a1, a1, -32
400a77c3:	6109      	s32i.n	a0, a1, 24
400a77c5:	71c9      	s32i.n	a12, a1, 28
400a77c7:	5139      	s32i.n	a3, a1, 20
400a77c9:	20c220        	or	a12, a2, a2
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:450
    U8 ucPU, ucLun;
    ucPU  = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
    
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a77cc:	000222        	l8ui	a2, a2, 0
400a77cf:	010c32        	l8ui	a3, a12, 1
400a77d2:	ec5b01        	l32r	a0, 400a2940 <_mcu2dram_text_start+0x140>
400a77d5:	0000c0        	callx0	a0
400a77d8:	084216        	beqz	a2, 400a7860 <HAL_FlashRetrySendParam+0xa0>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:455
    {
        return NFC_STATUS_FAIL;
    }
    
    return HAL_NfcSetFeature(pFlashAddr, pRetryPara->aRetryPara[0].bsData, pRetryPara->aRetryPara[0].bsAddr);
400a77db:	5108      	l32i.n	a0, a1, 20
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1480
{
    NFCQ_ENTRY *pNFCQEntry;
    U8 ucPU, ucLun;
    
    ucPU = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
400a77dd:	010c32        	l8ui	a3, a12, 1
400a77e0:	3139      	s32i.n	a3, a1, 12
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:455
400a77e2:	020022        	l8ui	a2, a0, 2
400a77e5:	0129      	s32i.n	a2, a1, 0
400a77e7:	010002        	l8ui	a0, a0, 1
400a77ea:	1109      	s32i.n	a0, a1, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1479
BOOL MCU2_DRAM_TEXT HAL_NfcSetFeature(FLASH_ADDR *pFlashAddr, U32 ulData, U8 ucAddr)
{
    NFCQ_ENTRY *pNFCQEntry;
    U8 ucPU, ucLun;
    
    ucPU = pFlashAddr->ucPU;
400a77ec:	000c22        	l8ui	a2, a12, 0
400a77ef:	026122        	s32i	a2, a1, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1482
    ucLun = pFlashAddr->ucLun;
    
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a77f2:	ec5301        	l32r	a0, 400a2940 <_mcu2dram_text_start+0x140>
400a77f5:	0000c0        	callx0	a0
400a77f8:	a2cc      	bnez.n	a2, 400a7806 <HAL_FlashRetrySendParam+0x46>
400a77fa:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:455
400a77fc:	71c8      	l32i.n	a12, a1, 28
400a77fe:	6108      	l32i.n	a0, a1, 24
400a7800:	20c112        	addi	a1, a1, 32
400a7803:	f00d      	ret.n

400a7805 <HAL_FlashRetrySendParam+0x45>:
	...

400a7806 <HAL_FlashRetrySendParam+0x46>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1487
    {
        return NFC_STATUS_FAIL;
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
400a7806:	2128      	l32i.n	a2, a1, 8
400a7808:	3138      	l32i.n	a3, a1, 12
400a780a:	ec4e01        	l32r	a0, 400a2944 <_mcu2dram_text_start+0x144>
400a780d:	0000c0        	callx0	a0
400a7810:	4129      	s32i.n	a2, a1, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1488
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);
400a7812:	031c      	movi.n	a3, 16
400a7814:	ec4d01        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a7817:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a781a:	520c      	movi.n	a2, 5
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1490
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsDmaByteEn = TRUE;
400a781c:	260c      	movi.n	a6, 2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1493
    
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);
400a781e:	430c      	movi.n	a3, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1495

    pNFCQEntry->ulSetFeatVal = ulData;
400a7820:	0178      	l32i.n	a7, a1, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1492
    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsDmaByteEn = TRUE;
    
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
400a7822:	4148      	l32i.n	a4, a1, 16
400a7824:	1188      	l32i.n	a8, a1, 4
400a7826:	025482        	s16i	a8, a4, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1495
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;
400a7829:	2479      	s32i.n	a7, a4, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1490
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsDmaByteEn = TRUE;
400a782b:	002452        	l32i	a5, a4, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1493
    
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);
400a782e:	035432        	s16i	a3, a4, 6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1490
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsDmaByteEn = TRUE;
400a7831:	205560        	or	a5, a5, a6
400a7834:	0459      	s32i.n	a5, a4, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a7836:	ec4601        	l32r	a0, 400a2950 <_mcu2dram_text_start+0x150>
400a7839:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1499
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);
400a783c:	530c      	movi.n	a3, 5
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a783e:	41a8      	l32i.n	a10, a1, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1499
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);
400a7840:	040c      	movi.n	a4, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a7842:	3a98      	l32i.n	a9, a10, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1499
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);
400a7844:	ffa052        	movi	a5, 255
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a7847:	808294        	insbits	a9, a2, 8, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1499
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);
400a784a:	0c2d      	mov.n	a2, a12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a784c:	3a99      	s32i.n	a9, a10, 12
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:455
400a784e:	71c8      	l32i.n	a12, a1, 28
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1499
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);
400a7850:	ec4101        	l32r	a0, 400a2954 <_mcu2dram_text_start+0x154>
400a7853:	0000c0        	callx0	a0
400a7856:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:455
400a7858:	6108      	l32i.n	a0, a1, 24
400a785a:	20c112        	addi	a1, a1, 32
400a785d:	f00d      	ret.n

400a785f <HAL_FlashRetrySendParam+0x9f>:
	...

400a7860 <HAL_FlashRetrySendParam+0xa0>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:452
    ucPU  = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
    
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
    {
        return NFC_STATUS_FAIL;
400a7860:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:455
    }
    
    return HAL_NfcSetFeature(pFlashAddr, pRetryPara->aRetryPara[0].bsData, pRetryPara->aRetryPara[0].bsAddr);
400a7862:	71c8      	l32i.n	a12, a1, 28
400a7864:	6108      	l32i.n	a0, a1, 24
400a7866:	20c112        	addi	a1, a1, 32
400a7869:	f00d      	ret.n

400a786b <HAL_FlashRetrySendParam+0xab>:
	...

400a786c <HAL_FlashRetryEn>:
HAL_FlashRetryEn():
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:476
History
    20160116    abby    create
------------------------------------------------------------------------------*/
BOOL MCU2_DRAM_TEXT HAL_FlashRetryEn(FLASH_ADDR *pFlashAddr, BOOL bRetry)
{
    return  NFC_STATUS_SUCCESS;
400a786c:	120c      	movi.n	a2, 1
400a786e:	f00d      	ret.n

400a7870 <HAL_FlashBasicSendRetryVal>:
HAL_FlashBasicSendRetryVal():
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_ViaCmd.c:88
{
    BOOL bTlcMode = ulParam;
    return HAL_FlashRetryTerminate(ucPU,ucBlun, bTlcMode);
}
BOOL MCU12_DRAM_TEXT HAL_FlashBasicSendRetryVal(U8 ucPU, U8 ucBlun, U32 ulParam)
{
400a7870:	e0c112        	addi	a1, a1, -32
400a7873:	7109      	s32i.n	a0, a1, 28
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_ViaCmd.c:90
    U8 ucParaNum = ulParam;
    FLASH_ADDR FlashAddr = {0};
400a7875:	ec9f01        	l32r	a0, 400a2af4 <_mcu2dram_text_start+0x2f4>
400a7878:	1048      	l32i.n	a4, a0, 4
400a787a:	1149      	s32i.n	a4, a1, 4
400a787c:	0008      	l32i.n	a0, a0, 0
400a787e:	006102        	s32i	a0, a1, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_ViaCmd.c:92

    FlashAddr.ucPU = ucPU;
400a7881:	004122        	s8i	a2, a1, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_ViaCmd.c:93
    FlashAddr.ucLun = ucBlun;
400a7884:	014132        	s8i	a3, a1, 1
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:450
{
    U8 ucPU, ucLun;
    ucPU  = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
    
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a7887:	ec2e01        	l32r	a0, 400a2940 <_mcu2dram_text_start+0x140>
400a788a:	0000c0        	callx0	a0
400a788d:	07d216        	beqz	a2, 400a790e <HAL_FlashBasicSendRetryVal+0x9e>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:455
    {
        return NFC_STATUS_FAIL;
    }
    
    return HAL_NfcSetFeature(pFlashAddr, pRetryPara->aRetryPara[0].bsData, pRetryPara->aRetryPara[0].bsAddr);
400a7890:	050c      	movi.n	a5, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1480
{
    NFCQ_ENTRY *pNFCQEntry;
    U8 ucPU, ucLun;
    
    ucPU = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
400a7892:	010132        	l8ui	a3, a1, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1479
BOOL MCU2_DRAM_TEXT HAL_NfcSetFeature(FLASH_ADDR *pFlashAddr, U32 ulData, U8 ucAddr)
{
    NFCQ_ENTRY *pNFCQEntry;
    U8 ucPU, ucLun;
    
    ucPU = pFlashAddr->ucPU;
400a7895:	000122        	l8ui	a2, a1, 0
400a7898:	4129      	s32i.n	a2, a1, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1480
    ucLun = pFlashAddr->ucLun;
400a789a:	5139      	s32i.n	a3, a1, 20
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:455
400a789c:	020562        	l8ui	a6, a5, 2
400a789f:	2169      	s32i.n	a6, a1, 8
400a78a1:	010552        	l8ui	a5, a5, 1
400a78a4:	3159      	s32i.n	a5, a1, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1482
    
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a78a6:	ec2601        	l32r	a0, 400a2940 <_mcu2dram_text_start+0x140>
400a78a9:	0000c0        	callx0	a0
400a78ac:	82cc      	bnez.n	a2, 400a78b8 <HAL_FlashBasicSendRetryVal+0x48>
400a78ae:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_ViaCmd.c:98
    //ucParaNum = (FALSE == bTlcMode) ? HAL_FLASH_RETRY_PARA_MAX : HAL_TLC_FLASH_RETRY_PARA_MAX;
    
    HAL_FlashRetryEn(&FlashAddr, FALSE);

    return  HAL_FlashRetrySendParam(&FlashAddr, NULL, 0, ucParaNum);
400a78b0:	7108      	l32i.n	a0, a1, 28
400a78b2:	20c112        	addi	a1, a1, 32
400a78b5:	f00d      	ret.n

400a78b7 <HAL_FlashBasicSendRetryVal+0x47>:
	...

400a78b8 <HAL_FlashBasicSendRetryVal+0x48>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1487
    {
        return NFC_STATUS_FAIL;
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
400a78b8:	4128      	l32i.n	a2, a1, 16
400a78ba:	5138      	l32i.n	a3, a1, 20
400a78bc:	ec2201        	l32r	a0, 400a2944 <_mcu2dram_text_start+0x144>
400a78bf:	0000c0        	callx0	a0
400a78c2:	6129      	s32i.n	a2, a1, 24
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1488
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);
400a78c4:	031c      	movi.n	a3, 16
400a78c6:	ec2001        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a78c9:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a78cc:	520c      	movi.n	a2, 5
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1490
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsDmaByteEn = TRUE;
400a78ce:	2a0c      	movi.n	a10, 2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1492
    
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
400a78d0:	3108      	l32i.n	a0, a1, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1493
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);
400a78d2:	470c      	movi.n	a7, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1492
    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsDmaByteEn = TRUE;
    
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
400a78d4:	6188      	l32i.n	a8, a1, 24
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1495
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;
400a78d6:	21b8      	l32i.n	a11, a1, 8
400a78d8:	28b9      	s32i.n	a11, a8, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1493
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsDmaByteEn = TRUE;
    
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);
400a78da:	035872        	s16i	a7, a8, 6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1490
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsDmaByteEn = TRUE;
400a78dd:	0898      	l32i.n	a9, a8, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1492
    
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
400a78df:	025802        	s16i	a0, a8, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1490
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsDmaByteEn = TRUE;
400a78e2:	2099a0        	or	a9, a9, a10
400a78e5:	0899      	s32i.n	a9, a8, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a78e7:	ec1a01        	l32r	a0, 400a2950 <_mcu2dram_text_start+0x150>
400a78ea:	0000c0        	callx0	a0
400a78ed:	6148      	l32i.n	a4, a1, 24
400a78ef:	3438      	l32i.n	a3, a4, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1499
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);
400a78f1:	ffa052        	movi	a5, 255
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a78f4:	808234        	insbits	a3, a2, 8, 16
400a78f7:	3439      	s32i.n	a3, a4, 12
400a78f9:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1499
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);
400a78fb:	530c      	movi.n	a3, 5
400a78fd:	040c      	movi.n	a4, 0
400a78ff:	ec1501        	l32r	a0, 400a2954 <_mcu2dram_text_start+0x154>
400a7902:	0000c0        	callx0	a0
400a7905:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_ViaCmd.c:98
400a7907:	7108      	l32i.n	a0, a1, 28
400a7909:	20c112        	addi	a1, a1, 32
400a790c:	f00d      	ret.n

400a790e <HAL_FlashBasicSendRetryVal+0x9e>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:450
{
    U8 ucPU, ucLun;
    ucPU  = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
    
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a790e:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_ViaCmd.c:98
400a7910:	7108      	l32i.n	a0, a1, 28
400a7912:	20c112        	addi	a1, a1, 32
400a7915:	f00d      	ret.n

400a7917 <HAL_FlashBasicSendRetryVal+0xa7>:
	...

400a7918 <HAL_FlashRetryTerminate>:
HAL_FlashRetryTerminate():
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:496
History:
    20140911    Gavin   modify to meet coding style
    20151123    abby    rename from HAL_FlashReadRetryTerminate
------------------------------------------------------------------------------*/
BOOL MCU2_DRAM_TEXT HAL_FlashRetryTerminate(U8 ucPU, U8 ucLun, BOOL bTlcMode)
{
400a7918:	e0c112        	addi	a1, a1, -32
400a791b:	51d9      	s32i.n	a13, a1, 20
400a791d:	61e9      	s32i.n	a14, a1, 24
400a791f:	71f9      	s32i.n	a15, a1, 28
400a7921:	2129      	s32i.n	a2, a1, 8
400a7923:	3109      	s32i.n	a0, a1, 12
400a7925:	41c9      	s32i.n	a12, a1, 16
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:497
    FLASH_ADDR tFlashAddr = {0};
400a7927:	ec2f01        	l32r	a0, 400a29e4 <_mcu2dram_text_start+0x1e4>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:496
History:
    20140911    Gavin   modify to meet coding style
    20151123    abby    rename from HAL_FlashReadRetryTerminate
------------------------------------------------------------------------------*/
BOOL MCU2_DRAM_TEXT HAL_FlashRetryTerminate(U8 ucPU, U8 ucLun, BOOL bTlcMode)
{
400a792a:	03cd      	mov.n	a12, a3
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:497
    FLASH_ADDR tFlashAddr = {0};
400a792c:	1038      	l32i.n	a3, a0, 4
400a792e:	1139      	s32i.n	a3, a1, 4
400a7930:	0008      	l32i.n	a0, a0, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1482
    U8 ucPU, ucLun;
    
    ucPU = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
    
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a7932:	0c3d      	mov.n	a3, a12
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:497
400a7934:	0109      	s32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:499

    tFlashAddr.ucPU = ucPU;
400a7936:	004122        	s8i	a2, a1, 0
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:500
    tFlashAddr.ucLun = ucLun;
400a7939:	0141c2        	s8i	a12, a1, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1482
400a793c:	ec0101        	l32r	a0, 400a2940 <_mcu2dram_text_start+0x140>
400a793f:	0000c0        	callx0	a0
400a7942:	4d0c      	movi.n	a13, 4
400a7944:	0f0c      	movi.n	a15, 0
400a7946:	89a0e2        	movi	a14, 137
400a7949:	073256        	bnez	a2, 400a79c0 <HAL_FlashRetryTerminate+0xa8>

400a794c <HAL_FlashRetryTerminate+0x34>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1479
BOOL MCU2_DRAM_TEXT HAL_NfcSetFeature(FLASH_ADDR *pFlashAddr, U32 ulData, U8 ucAddr)
{
    NFCQ_ENTRY *pNFCQEntry;
    U8 ucPU, ucLun;
    
    ucPU = pFlashAddr->ucPU;
400a794c:	0001d2        	l8ui	a13, a1, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1480
    ucLun = pFlashAddr->ucLun;
400a794f:	0101c2        	l8ui	a12, a1, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1482
    
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a7952:	0d2d      	mov.n	a2, a13
400a7954:	0c3d      	mov.n	a3, a12
400a7956:	ebfa01        	l32r	a0, 400a2940 <_mcu2dram_text_start+0x140>
400a7959:	0000c0        	callx0	a0
400a795c:	42cc      	bnez.n	a2, 400a7964 <HAL_FlashRetryTerminate+0x4c>
400a795e:	000c      	movi.n	a0, 0
400a7960:	001206        	j	400a79ac <HAL_FlashRetryTerminate+0x94>

400a7963 <HAL_FlashRetryTerminate+0x4b>:
	...

400a7964 <HAL_FlashRetryTerminate+0x4c>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1487
    {
        return NFC_STATUS_FAIL;
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
400a7964:	0d2d      	mov.n	a2, a13
400a7966:	0c3d      	mov.n	a3, a12
400a7968:	ebf701        	l32r	a0, 400a2944 <_mcu2dram_text_start+0x144>
400a796b:	0000c0        	callx0	a0
400a796e:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1488
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);
400a7970:	10a032        	movi	a3, 16
400a7973:	ebf501        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a7976:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1492

    pNFCQEntry->bsDmaByteEn = TRUE;
    
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
400a7979:	025ce2        	s16i	a14, a12, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1495
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;
400a797c:	2cf9      	s32i.n	a15, a12, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a797e:	520c      	movi.n	a2, 5
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1490
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsDmaByteEn = TRUE;
400a7980:	2d0c      	movi.n	a13, 2
400a7982:	0c58      	l32i.n	a5, a12, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1493
    
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);
400a7984:	460c      	movi.n	a6, 4
400a7986:	035c62        	s16i	a6, a12, 6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1490
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsDmaByteEn = TRUE;
400a7989:	2055d0        	or	a5, a5, a13
400a798c:	0c59      	s32i.n	a5, a12, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a798e:	ebf001        	l32r	a0, 400a2950 <_mcu2dram_text_start+0x150>
400a7991:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1499
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);
400a7994:	530c      	movi.n	a3, 5
400a7996:	040c      	movi.n	a4, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a7998:	3c78      	l32i.n	a7, a12, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1499
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);
400a799a:	ffa052        	movi	a5, 255
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a799d:	808274        	insbits	a7, a2, 8, 16
400a79a0:	3c79      	s32i.n	a7, a12, 12
400a79a2:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1499
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);
400a79a4:	ebec01        	l32r	a0, 400a2954 <_mcu2dram_text_start+0x154>
400a79a7:	0000c0        	callx0	a0
400a79aa:	100c      	movi.n	a0, 1
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:502

    while (NFC_STATUS_SUCCESS != HAL_NfcSetFeature(&tFlashAddr, 0, 0x89)); 
400a79ac:	9c1066        	bnei	a0, 1, 400a794c <HAL_FlashRetryTerminate+0x34>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:504

    return NFC_STATUS_SUCCESS;
400a79af:	120c      	movi.n	a2, 1
400a79b1:	41c8      	l32i.n	a12, a1, 16
400a79b3:	51d8      	l32i.n	a13, a1, 20
400a79b5:	61e8      	l32i.n	a14, a1, 24
400a79b7:	71f8      	l32i.n	a15, a1, 28
400a79b9:	3108      	l32i.n	a0, a1, 12
400a79bb:	20c112        	addi	a1, a1, 32
400a79be:	f00d      	ret.n

400a79c0 <HAL_FlashRetryTerminate+0xa8>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1487
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
    {
        return NFC_STATUS_FAIL;
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
400a79c0:	0c3d      	mov.n	a3, a12
400a79c2:	2128      	l32i.n	a2, a1, 8
400a79c4:	ebe001        	l32r	a0, 400a2944 <_mcu2dram_text_start+0x144>
400a79c7:	0000c0        	callx0	a0
400a79ca:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1488
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);
400a79cc:	10a032        	movi	a3, 16
400a79cf:	ebde01        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a79d2:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1492

    pNFCQEntry->bsDmaByteEn = TRUE;
    
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
400a79d5:	025ce2        	s16i	a14, a12, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1493
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);
400a79d8:	035cd2        	s16i	a13, a12, 6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1495

    pNFCQEntry->ulSetFeatVal = ulData;
400a79db:	2cf9      	s32i.n	a15, a12, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a79dd:	520c      	movi.n	a2, 5
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1490
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsDmaByteEn = TRUE;
400a79df:	0c88      	l32i.n	a8, a12, 0
400a79e1:	290c      	movi.n	a9, 2
400a79e3:	208890        	or	a8, a8, a9
400a79e6:	0c89      	s32i.n	a8, a12, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a79e8:	ebda01        	l32r	a0, 400a2950 <_mcu2dram_text_start+0x150>
400a79eb:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1499
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);
400a79ee:	530c      	movi.n	a3, 5
400a79f0:	040c      	movi.n	a4, 0
400a79f2:	ffa052        	movi	a5, 255
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:504
400a79f5:	51d8      	l32i.n	a13, a1, 20
400a79f7:	61e8      	l32i.n	a14, a1, 24
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a79f9:	3ca8      	l32i.n	a10, a12, 12
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:504
400a79fb:	71f8      	l32i.n	a15, a1, 28
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
400a79fd:	8082a4        	insbits	a10, a2, 8, 16
400a7a00:	3ca9      	s32i.n	a10, a12, 12
400a7a02:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:504
400a7a04:	41c8      	l32i.n	a12, a1, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1499
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);
400a7a06:	ebd301        	l32r	a0, 400a2954 <_mcu2dram_text_start+0x154>
400a7a09:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:504
400a7a0c:	120c      	movi.n	a2, 1
400a7a0e:	3108      	l32i.n	a0, a1, 12
400a7a10:	20c112        	addi	a1, a1, 32
400a7a13:	f00d      	ret.n

400a7a15 <HAL_FlashRetryTerminate+0xfd>:
400a7a15:	000000                                        ...

400a7a18 <HAL_FlashBasicSendRetryTerminate>:
HAL_FlashBasicSendRetryTerminate():
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_ViaCmd.c:83
    FlashAddr.ucPU = ucPU;
    return HAL_NfcResetFlash(&FlashAddr);

}
BOOL MCU12_DRAM_TEXT HAL_FlashBasicSendRetryTerminate(U8 ucPU, U8 ucBlun, U32 ulParam)
{
400a7a18:	e0c112        	addi	a1, a1, -32
400a7a1b:	51d9      	s32i.n	a13, a1, 20
400a7a1d:	61e9      	s32i.n	a14, a1, 24
400a7a1f:	71f9      	s32i.n	a15, a1, 28
400a7a21:	2129      	s32i.n	a2, a1, 8
400a7a23:	3109      	s32i.n	a0, a1, 12
400a7a25:	41c9      	s32i.n	a12, a1, 16
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:497
    20140911    Gavin   modify to meet coding style
    20151123    abby    rename from HAL_FlashReadRetryTerminate
------------------------------------------------------------------------------*/
BOOL MCU2_DRAM_TEXT HAL_FlashRetryTerminate(U8 ucPU, U8 ucLun, BOOL bTlcMode)
{
    FLASH_ADDR tFlashAddr = {0};
400a7a27:	ebef01        	l32r	a0, 400a29e4 <_mcu2dram_text_start+0x1e4>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_ViaCmd.c:83
400a7a2a:	03cd      	mov.n	a12, a3
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:497
400a7a2c:	1038      	l32i.n	a3, a0, 4
400a7a2e:	1139      	s32i.n	a3, a1, 4
400a7a30:	0008      	l32i.n	a0, a0, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1482
    U8 ucPU, ucLun;
    
    ucPU = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;
    
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a7a32:	0c3d      	mov.n	a3, a12
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:497
400a7a34:	0109      	s32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:499

    tFlashAddr.ucPU = ucPU;
400a7a36:	004122        	s8i	a2, a1, 0
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:500
    tFlashAddr.ucLun = ucLun;
400a7a39:	0141c2        	s8i	a12, a1, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1482
400a7a3c:	ebc101        	l32r	a0, 400a2940 <_mcu2dram_text_start+0x140>
400a7a3f:	0000c0        	callx0	a0
400a7a42:	4d0c      	movi.n	a13, 4
400a7a44:	0f0c      	movi.n	a15, 0
400a7a46:	89a0e2        	movi	a14, 137
400a7a49:	073256        	bnez	a2, 400a7ac0 <HAL_FlashBasicSendRetryTerminate+0xa8>

400a7a4c <HAL_FlashBasicSendRetryTerminate+0x34>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1479
BOOL MCU2_DRAM_TEXT HAL_NfcSetFeature(FLASH_ADDR *pFlashAddr, U32 ulData, U8 ucAddr)
{
    NFCQ_ENTRY *pNFCQEntry;
    U8 ucPU, ucLun;
    
    ucPU = pFlashAddr->ucPU;
400a7a4c:	0001d2        	l8ui	a13, a1, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1480
    ucLun = pFlashAddr->ucLun;
400a7a4f:	0101c2        	l8ui	a12, a1, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1482
    
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a7a52:	0d2d      	mov.n	a2, a13
400a7a54:	0c3d      	mov.n	a3, a12
400a7a56:	ebba01        	l32r	a0, 400a2940 <_mcu2dram_text_start+0x140>
400a7a59:	0000c0        	callx0	a0
400a7a5c:	42cc      	bnez.n	a2, 400a7a64 <HAL_FlashBasicSendRetryTerminate+0x4c>
400a7a5e:	000c      	movi.n	a0, 0
400a7a60:	001206        	j	400a7aac <HAL_FlashBasicSendRetryTerminate+0x94>

400a7a63 <HAL_FlashBasicSendRetryTerminate+0x4b>:
	...

400a7a64 <HAL_FlashBasicSendRetryTerminate+0x4c>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1487
    {
        return NFC_STATUS_FAIL;
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
400a7a64:	0d2d      	mov.n	a2, a13
400a7a66:	0c3d      	mov.n	a3, a12
400a7a68:	ebb701        	l32r	a0, 400a2944 <_mcu2dram_text_start+0x144>
400a7a6b:	0000c0        	callx0	a0
400a7a6e:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1488
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);
400a7a70:	10a032        	movi	a3, 16
400a7a73:	ebb501        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a7a76:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1492

    pNFCQEntry->bsDmaByteEn = TRUE;
    
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
400a7a79:	025ce2        	s16i	a14, a12, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1495
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;
400a7a7c:	2cf9      	s32i.n	a15, a12, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a7a7e:	520c      	movi.n	a2, 5
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1490
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsDmaByteEn = TRUE;
400a7a80:	2d0c      	movi.n	a13, 2
400a7a82:	0c58      	l32i.n	a5, a12, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1493
    
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);
400a7a84:	460c      	movi.n	a6, 4
400a7a86:	035c62        	s16i	a6, a12, 6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1490
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsDmaByteEn = TRUE;
400a7a89:	2055d0        	or	a5, a5, a13
400a7a8c:	0c59      	s32i.n	a5, a12, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a7a8e:	ebb001        	l32r	a0, 400a2950 <_mcu2dram_text_start+0x150>
400a7a91:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1499
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);
400a7a94:	530c      	movi.n	a3, 5
400a7a96:	040c      	movi.n	a4, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a7a98:	3c78      	l32i.n	a7, a12, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1499
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);
400a7a9a:	ffa052        	movi	a5, 255
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a7a9d:	808274        	insbits	a7, a2, 8, 16
400a7aa0:	3c79      	s32i.n	a7, a12, 12
400a7aa2:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1499
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);
400a7aa4:	ebac01        	l32r	a0, 400a2954 <_mcu2dram_text_start+0x154>
400a7aa7:	0000c0        	callx0	a0
400a7aaa:	100c      	movi.n	a0, 1
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:502

    while (NFC_STATUS_SUCCESS != HAL_NfcSetFeature(&tFlashAddr, 0, 0x89)); 
400a7aac:	9c1066        	bnei	a0, 1, 400a7a4c <HAL_FlashBasicSendRetryTerminate+0x34>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_ViaCmd.c:85
    BOOL bTlcMode = ulParam;
    return HAL_FlashRetryTerminate(ucPU,ucBlun, bTlcMode);
400a7aaf:	120c      	movi.n	a2, 1
400a7ab1:	41c8      	l32i.n	a12, a1, 16
400a7ab3:	51d8      	l32i.n	a13, a1, 20
400a7ab5:	61e8      	l32i.n	a14, a1, 24
400a7ab7:	71f8      	l32i.n	a15, a1, 28
400a7ab9:	3108      	l32i.n	a0, a1, 12
400a7abb:	20c112        	addi	a1, a1, 32
400a7abe:	f00d      	ret.n

400a7ac0 <HAL_FlashBasicSendRetryTerminate+0xa8>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1487
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
    {
        return NFC_STATUS_FAIL;
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
400a7ac0:	0c3d      	mov.n	a3, a12
400a7ac2:	2128      	l32i.n	a2, a1, 8
400a7ac4:	eba001        	l32r	a0, 400a2944 <_mcu2dram_text_start+0x144>
400a7ac7:	0000c0        	callx0	a0
400a7aca:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1488
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);
400a7acc:	10a032        	movi	a3, 16
400a7acf:	eb9e01        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a7ad2:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1492

    pNFCQEntry->bsDmaByteEn = TRUE;
    
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
400a7ad5:	025ce2        	s16i	a14, a12, 4
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1493
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);
400a7ad8:	035cd2        	s16i	a13, a12, 6
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1495

    pNFCQEntry->ulSetFeatVal = ulData;
400a7adb:	2cf9      	s32i.n	a15, a12, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a7add:	520c      	movi.n	a2, 5
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1490
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsDmaByteEn = TRUE;
400a7adf:	0c88      	l32i.n	a8, a12, 0
400a7ae1:	290c      	movi.n	a9, 2
400a7ae3:	208890        	or	a8, a8, a9
400a7ae6:	0c89      	s32i.n	a8, a12, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a7ae8:	eb9a01        	l32r	a0, 400a2950 <_mcu2dram_text_start+0x150>
400a7aeb:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1499
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);
400a7aee:	530c      	movi.n	a3, 5
400a7af0:	040c      	movi.n	a4, 0
400a7af2:	ffa052        	movi	a5, 255
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_ViaCmd.c:85
400a7af5:	51d8      	l32i.n	a13, a1, 20
400a7af7:	61e8      	l32i.n	a14, a1, 24
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
    pNFCQEntry->aByteAddr.usByteAddr = ucAddr;
    pNFCQEntry->aByteAddr.usByteLength = sizeof(U32);

    pNFCQEntry->ulSetFeatVal = ulData;

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_SETFEATURE);
400a7af9:	3ca8      	l32i.n	a10, a12, 12
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_ViaCmd.c:85
400a7afb:	71f8      	l32i.n	a15, a1, 28
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1497
400a7afd:	8082a4        	insbits	a10, a2, 8, 16
400a7b00:	3ca9      	s32i.n	a10, a12, 12
400a7b02:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_ViaCmd.c:85
400a7b04:	41c8      	l32i.n	a12, a1, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1499
    
    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_SETFEATURE, FALSE, INVALID_2F);
400a7b06:	eb9301        	l32r	a0, 400a2954 <_mcu2dram_text_start+0x154>
400a7b09:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_ViaCmd.c:85
400a7b0c:	120c      	movi.n	a2, 1
400a7b0e:	3108      	l32i.n	a0, a1, 12
400a7b10:	20c112        	addi	a1, a1, 32
400a7b13:	f00d      	ret.n

400a7b15 <HAL_FlashBasicSendRetryTerminate+0xfd>:
400a7b15:	000000                                        ...

400a7b18 <HAL_FlashBasicReset>:
HAL_FlashBasicReset():
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_ViaCmd.c:77
GLOBAL MCU12_VAR_ATTR DEVICE_PARAM_PAGE *g_pSubSystemDevParamPage;
GLOBAL BOOL gbGlobalInfoSaveFlag;

BOOL MCU12_DRAM_TEXT HAL_FlashBasicReset(U8 ucPU, U8 ucBlun, U32 ulParam)
{
    FLASH_ADDR FlashAddr = {0};
400a7b18:	ebf831        	l32r	a3, 400a2af8 <_mcu2dram_text_start+0x2f8>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_ViaCmd.c:76

GLOBAL MCU12_VAR_ATTR DEVICE_PARAM_PAGE *g_pSubSystemDevParamPage;
GLOBAL BOOL gbGlobalInfoSaveFlag;

BOOL MCU12_DRAM_TEXT HAL_FlashBasicReset(U8 ucPU, U8 ucBlun, U32 ulParam)
{
400a7b1b:	e0c112        	addi	a1, a1, -32
400a7b1e:	41c9      	s32i.n	a12, a1, 16
400a7b20:	3109      	s32i.n	a0, a1, 12
400a7b22:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_ViaCmd.c:77
    FLASH_ADDR FlashAddr = {0};
400a7b24:	1348      	l32i.n	a4, a3, 4
400a7b26:	1149      	s32i.n	a4, a1, 4
400a7b28:	0338      	l32i.n	a3, a3, 0
400a7b2a:	0139      	s32i.n	a3, a1, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_ViaCmd.c:78
    FlashAddr.ucPU = ucPU;
400a7b2c:	004122        	s8i	a2, a1, 0
400a7b2f:	743830        	extui	a3, a3, 8, 8
400a7b32:	2139      	s32i.n	a3, a1, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1200

    ucPU = pFlashAddr->ucPU;
    ucLun = pFlashAddr->ucLun;

    // if reset PU, whatever the LUN is; but if reset LUN, the LUN num is meanful
    if (FALSE == HAL_NfcIsLunAccessable(ucPU, ucLun))
400a7b34:	eb8301        	l32r	a0, 400a2940 <_mcu2dram_text_start+0x140>
400a7b37:	0000c0        	callx0	a0
400a7b3a:	a2cc      	bnez.n	a2, 400a7b48 <HAL_FlashBasicReset+0x30>
400a7b3c:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_ViaCmd.c:79
    return HAL_NfcResetFlash(&FlashAddr);
400a7b3e:	41c8      	l32i.n	a12, a1, 16
400a7b40:	3108      	l32i.n	a0, a1, 12
400a7b42:	20c112        	addi	a1, a1, 32
400a7b45:	f00d      	ret.n

400a7b47 <HAL_FlashBasicReset+0x2f>:
	...

400a7b48 <HAL_FlashBasicReset+0x30>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1205
    {
        return NFC_STATUS_FAIL;
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
400a7b48:	0c2d      	mov.n	a2, a12
400a7b4a:	2138      	l32i.n	a3, a1, 8
400a7b4c:	eb7e01        	l32r	a0, 400a2944 <_mcu2dram_text_start+0x144>
400a7b4f:	0000c0        	callx0	a0
400a7b52:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1206
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);
400a7b54:	031c      	movi.n	a3, 16
400a7b56:	eb7c01        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a7b59:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1208

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_RESET);
400a7b5c:	020c      	movi.n	a2, 0
400a7b5e:	eb7c01        	l32r	a0, 400a2950 <_mcu2dram_text_start+0x150>
400a7b61:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1210

    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_RESET, FALSE, INVALID_2F);
400a7b64:	030c      	movi.n	a3, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1208
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_RESET);
400a7b66:	3c58      	l32i.n	a5, a12, 12
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1210

    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_RESET, FALSE, INVALID_2F);
400a7b68:	040c      	movi.n	a4, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1208
    }

    pNFCQEntry = HAL_NfcGetNfcqEntryAddr(ucPU, ucLun);
    COM_MemZero((U32*)pNFCQEntry, sizeof(NFCQ_ENTRY)>>2);

    pNFCQEntry->bsPrcqStartDw = HAL_NfcGetPrcqStartDw(NF_PRCQ_RESET);
400a7b6a:	808254        	insbits	a5, a2, 8, 16
400a7b6d:	3c59      	s32i.n	a5, a12, 12
400a7b6f:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1210

    HAL_NfcCmdTrigger(pFlashAddr, NF_PRCQ_RESET, FALSE, INVALID_2F);
400a7b71:	ffa052        	movi	a5, 255
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_ViaCmd.c:79
400a7b74:	41c8      	l32i.n	a12, a1, 16
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:1210
400a7b76:	eb7701        	l32r	a0, 400a2954 <_mcu2dram_text_start+0x154>
400a7b79:	0000c0        	callx0	a0
400a7b7c:	120c      	movi.n	a2, 1
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_ViaCmd.c:79
400a7b7e:	3108      	l32i.n	a0, a1, 12
400a7b80:	20c112        	addi	a1, a1, 32
400a7b83:	f00d      	ret.n

400a7b85 <HAL_FlashBasicReset+0x6d>:
400a7b85:	000000                                        ...

400a7b88 <HAL_NfcPrcqTableInit>:
HAL_NfcPrcqTableInit():
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:772
    U32 ulPioQECnt = 0;
    U32 ulBasePioStartDw = 0;
    BOOL bIsPrcqOver = FALSE;

    /*  init normal cmd: 1 byte for 1 QE, need to align in DW    */
    for (ucCmdCodeIndex = 0; ucCmdCodeIndex < FLASH_PRCQ_NON_PIO_NUM; ucCmdCodeIndex++)
400a7b88:	ebdd51        	l32r	a5, 400a2afc <_mcu2dram_text_start+0x2fc>
400a7b8b:	070c      	movi.n	a7, 0
400a7b8d:	040c      	movi.n	a4, 0
400a7b8f:	080c      	movi.n	a8, 0
400a7b91:	ffa062        	movi	a6, 255
400a7b94:	3b0c      	movi.n	a11, 3
400a7b96:	9a1c      	movi.n	a10, 25
400a7b98:	ebda91        	l32r	a9, 400a2b00 <_mcu2dram_text_start+0x300>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:762
History:
    20140902    tobey   uniform coding style.
    20151105    abby    modify to meet VT3533
------------------------------------------------------------------------------*/
void MCU12_DRAM_TEXT HAL_NfcPrcqTableInit(void)
{
400a7b9b:	f0c112        	addi	a1, a1, -16
400a7b9e:	0109      	s32i.n	a0, a1, 0
400a7ba0:	000406        	j	400a7bb4 <HAL_NfcPrcqTableInit+0x2c>

400a7ba3 <HAL_NfcPrcqTableInit+0x1b>:
	...

400a7ba4 <HAL_NfcPrcqTableInit+0x1c>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:785
            ulByteCnt++;
            ulQECnt++;
        }while ( (QE_GRP_ATTR(PRCQ_FINISH)|QE_INDEX(END)) != l_aQETable[ulQECnt-1] );

        /* align in DW  */
        ulByteCnt = ALIGN_IN_DW(ulByteCnt);
400a7ba4:	040d      	mov.n	a0, a4
400a7ba6:	004d      	mov.n	a4, a0
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:788

        /*  Get next cmd start DW  */
        ulPrcqDwCnt = ulByteCnt / sizeof(U32);
400a7ba8:	418200        	srli	a8, a0, 2
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:772
    U32 ulPioQECnt = 0;
    U32 ulBasePioStartDw = 0;
    BOOL bIsPrcqOver = FALSE;

    /*  init normal cmd: 1 byte for 1 QE, need to align in DW    */
    for (ucCmdCodeIndex = 0; ucCmdCodeIndex < FLASH_PRCQ_NON_PIO_NUM; ucCmdCodeIndex++)
400a7bab:	01c772        	addi	a7, a7, 1
400a7bae:	747070        	extui	a7, a7, 0, 8
400a7bb1:	2b17a7        	beq	a7, a10, 400a7be0 <HAL_NfcPrcqTableInit+0x58>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:775
    {
        /*  get start PRCQ DW of this cmdCode   */
        g_aPrcqTable[ucCmdCodeIndex].bsPRCQStartDw = ulPrcqDwCnt;
400a7bb4:	a02790        	addx4	a2, a7, a9
400a7bb7:	042202        	l32i	a0, a2, 16
400a7bba:	f03d      	nop.n
400a7bbc:	83b804        	insbits	a0, a8, 11, 19
400a7bbf:	4209      	s32i.n	a0, a2, 16
400a7bc1:	098076        	loop	a0, 400a7bce <HAL_NfcPrcqTableInit+0x46>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:780

        /*  ACC QE and byte number  */
        do 
        {
            ulByteCnt++;
400a7bc4:	441b      	addi.n	a4, a4, 1
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:782
            ulQECnt++;
        }while ( (QE_GRP_ATTR(PRCQ_FINISH)|QE_INDEX(END)) != l_aQETable[ulQECnt-1] );
400a7bc6:	800532        	l8ui	a3, a5, 128
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:781

        /*  ACC QE and byte number  */
        do 
        {
            ulByteCnt++;
            ulQECnt++;
400a7bc9:	551b      	addi.n	a5, a5, 1
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:782
        }while ( (QE_GRP_ATTR(PRCQ_FINISH)|QE_INDEX(END)) != l_aQETable[ulQECnt-1] );
400a7bcb:	021367        	beq	a3, a6, 400a7bd1 <HAL_NfcPrcqTableInit+0x49>

400a7bce <HAL_NfcPrcqTableInit+0x46>:
400a7bce:	fffbc6        	j	400a7bc1 <HAL_NfcPrcqTableInit+0x39>

400a7bd1 <HAL_NfcPrcqTableInit+0x49>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:785

        /* align in DW  */
        ulByteCnt = ALIGN_IN_DW(ulByteCnt);
400a7bd1:	cf0b47        	bnone	a11, a4, 400a7ba4 <HAL_NfcPrcqTableInit+0x1c>
400a7bd4:	c07c      	movi.n	a0, -4
400a7bd6:	100400        	and	a0, a4, a0
400a7bd9:	004b      	addi.n	a0, a0, 4
400a7bdb:	fff1c6        	j	400a7ba6 <HAL_NfcPrcqTableInit+0x1e>

400a7bde <HAL_NfcPrcqTableInit+0x56>:
	...

400a7be0 <HAL_NfcPrcqTableInit+0x58>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:795

    /*  Set a base DW for ACC to avoid ulPioQECnt over l_aPioCmdTable[] definition*/
    ulBasePioStartDw = ulPrcqDwCnt;
    
    /*  init PIO cmd: 1 DW for 1 PIO QE, don't need to align in DW    */
    for (ucCmdCodeIndex = FLASH_PRCQ_NON_PIO_NUM; ucCmdCodeIndex < FLASH_PRCQ_CNT; ucCmdCodeIndex++)
400a7be0:	ebc951        	l32r	a5, 400a2b04 <_mcu2dram_text_start+0x304>
400a7be3:	971c      	movi.n	a7, 25
400a7be5:	040c      	movi.n	a4, 0
400a7be7:	b61c      	movi.n	a6, 27
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:798
    {
        /*  get start PRCQ DW of PIO cmdCode  */
        g_aPrcqTable[ucCmdCodeIndex].bsPRCQStartDw = ulBasePioStartDw + ulPioQECnt;
400a7be9:	a03790        	addx4	a3, a7, a9
400a7bec:	4328      	l32i.n	a2, a3, 16
400a7bee:	a48a      	add.n	a10, a4, a8
400a7bf0:	83ba24        	insbits	a2, a10, 11, 19
400a7bf3:	4329      	s32i.n	a2, a3, 16
400a7bf5:	098076        	loop	a0, 400a7c02 <HAL_NfcPrcqTableInit+0x7a>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:803

        /*  ACC PIO QE number  */
        do
        {
            ulPioQECnt++;
400a7bf8:	441b      	addi.n	a4, a4, 1
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:804
        }while (RAW_PIO_IO_LAST_PHS(1) != (l_aPioCmdTable[ulPioQECnt-1]&(0x1<<31)) );
400a7bfa:	ea25b2        	l32i	a11, a5, 0x3a8
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:803
        g_aPrcqTable[ucCmdCodeIndex].bsPRCQStartDw = ulBasePioStartDw + ulPioQECnt;

        /*  ACC PIO QE number  */
        do
        {
            ulPioQECnt++;
400a7bfd:	554b      	addi.n	a5, a5, 4
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:804
        }while (RAW_PIO_IO_LAST_PHS(1) != (l_aPioCmdTable[ulPioQECnt-1]&(0x1<<31)) );
400a7bff:	002b96        	bltz	a11, 400a7c05 <HAL_NfcPrcqTableInit+0x7d>

400a7c02 <HAL_NfcPrcqTableInit+0x7a>:
400a7c02:	fffbc6        	j	400a7bf5 <HAL_NfcPrcqTableInit+0x6d>

400a7c05 <HAL_NfcPrcqTableInit+0x7d>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:795

    /*  Set a base DW for ACC to avoid ulPioQECnt over l_aPioCmdTable[] definition*/
    ulBasePioStartDw = ulPrcqDwCnt;
    
    /*  init PIO cmd: 1 DW for 1 PIO QE, don't need to align in DW    */
    for (ucCmdCodeIndex = FLASH_PRCQ_NON_PIO_NUM; ucCmdCodeIndex < FLASH_PRCQ_CNT; ucCmdCodeIndex++)
400a7c05:	771b      	addi.n	a7, a7, 1
400a7c07:	747070        	extui	a7, a7, 0, 8
400a7c0a:	db9767        	bne	a7, a6, 400a7be9 <HAL_NfcPrcqTableInit+0x61>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:809
        }while (RAW_PIO_IO_LAST_PHS(1) != (l_aPioCmdTable[ulPioQECnt-1]&(0x1<<31)) );

        ulPrcqDwCnt = ulPioQECnt + ulBasePioStartDw;
    }

    return;
400a7c0d:	0108      	l32i.n	a0, a1, 0
400a7c0f:	10c112        	addi	a1, a1, 16
400a7c12:	f00d      	ret.n

400a7c14 <HAL_NfcInterfaceInitBasic>:
HAL_NfcInterfaceInitBasic():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:301
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
    20141024    Gavin   move Red pointer initialization to last step
    20151030    abby    modify to meet VT3533, add PRCQ table init
------------------------------------------------------------------------------*/
void MCU2_DRAM_TEXT HAL_NfcInterfaceInitBasic(void)
{
400a7c14:	ebc381        	l32r	a8, 400a2b20 <_mcu2dram_text_start+0x320>
400a7c17:	eb5271        	l32r	a7, 400a2960 <_mcu2dram_text_start+0x160>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:268
    
    /* PU Mapping */
    g_pNfcLogicPU   = (NFC_LOGIC_PU *)NF_LOGIC_PU_REG_BASE;

    /* NFCQ & DPTR */
    g_pNfcq         = (NFCQ*)NFCQ_ENTRY_BASE;        
400a7c1a:	ebbc51        	l32r	a5, 400a2b0c <_mcu2dram_text_start+0x30c>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:273
    g_pNfcCmdSts    = (NFC_CMD_STS*)NF_CMD_STS_REG_BASE;

    /* PRCQ */    
    g_pNfcPRCQ      = (U32*)PRCQ_ENTRY_BASE;
    g_pNfcPRCQQe    = (NFC_PRCQ_QE*)NF_QE_REG_BASE;
400a7c1d:	ebbd31        	l32r	a3, 400a2b14 <_mcu2dram_text_start+0x314>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:269
    /* PU Mapping */
    g_pNfcLogicPU   = (NFC_LOGIC_PU *)NF_LOGIC_PU_REG_BASE;

    /* NFCQ & DPTR */
    g_pNfcq         = (NFCQ*)NFCQ_ENTRY_BASE;        
    g_pNfcCmdSts    = (NFC_CMD_STS*)NF_CMD_STS_REG_BASE;
400a7c20:	ebbc41        	l32r	a4, 400a2b10 <_mcu2dram_text_start+0x310>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:274

    /* PRCQ */    
    g_pNfcPRCQ      = (U32*)PRCQ_ENTRY_BASE;
    g_pNfcPRCQQe    = (NFC_PRCQ_QE*)NF_QE_REG_BASE;
    g_pNfcPRCQQeExt = (NFC_PRCQ_QE_EXT*)NF_QE_EXT_REG_BASE;
400a7c23:	ebbd21        	l32r	a2, 400a2b18 <_mcu2dram_text_start+0x318>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:265
{
    /* Data Syntax */
    g_pNfcDsColAddr = (NFC_DS_COLADDR *)DS_SRAM_BASE;
    
    /* PU Mapping */
    g_pNfcLogicPU   = (NFC_LOGIC_PU *)NF_LOGIC_PU_REG_BASE;
400a7c26:	ebb861        	l32r	a6, 400a2b08 <_mcu2dram_text_start+0x308>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:301
    20140909    Tobey   moved from HAL_FlashDriver.c and update code
    20141024    Gavin   move Red pointer initialization to last step
    20151030    abby    modify to meet VT3533, add PRCQ table init
------------------------------------------------------------------------------*/
void MCU2_DRAM_TEXT HAL_NfcInterfaceInitBasic(void)
{
400a7c29:	f0c112        	addi	a1, a1, -16
400a7c2c:	11c9      	s32i.n	a12, a1, 4
400a7c2e:	0109      	s32i.n	a0, a1, 0
400a7c30:	eb03c1        	l32r	a12, 400a283c <_mcu2dram_text_start+0x3c>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:277
    g_pNfcPRCQ      = (U32*)PRCQ_ENTRY_BASE;
    g_pNfcPRCQQe    = (NFC_PRCQ_QE*)NF_QE_REG_BASE;
    g_pNfcPRCQQeExt = (NFC_PRCQ_QE_EXT*)NF_QE_EXT_REG_BASE;

    /* NFC Trigger */
    g_pNfcTrigger   = (NFC_TRIGGER*)NF_TRIGGER_REG_BASE;
400a7c33:	ebba01        	l32r	a0, 400a2b1c <_mcu2dram_text_start+0x31c>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:265
{
    /* Data Syntax */
    g_pNfcDsColAddr = (NFC_DS_COLADDR *)DS_SRAM_BASE;
    
    /* PU Mapping */
    g_pNfcLogicPU   = (NFC_LOGIC_PU *)NF_LOGIC_PU_REG_BASE;
400a7c36:	3a6c62        	s32i	a6, a12, 232
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:274
    g_pNfcCmdSts    = (NFC_CMD_STS*)NF_CMD_STS_REG_BASE;

    /* PRCQ */    
    g_pNfcPRCQ      = (U32*)PRCQ_ENTRY_BASE;
    g_pNfcPRCQQe    = (NFC_PRCQ_QE*)NF_QE_REG_BASE;
    g_pNfcPRCQQeExt = (NFC_PRCQ_QE_EXT*)NF_QE_EXT_REG_BASE;
400a7c39:	416c22        	s32i	a2, a12, 0x104
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:277

    /* NFC Trigger */
    g_pNfcTrigger   = (NFC_TRIGGER*)NF_TRIGGER_REG_BASE;
400a7c3c:	426c02        	s32i	a0, a12, 0x108
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:269
    /* PU Mapping */
    g_pNfcLogicPU   = (NFC_LOGIC_PU *)NF_LOGIC_PU_REG_BASE;

    /* NFCQ & DPTR */
    g_pNfcq         = (NFCQ*)NFCQ_ENTRY_BASE;        
    g_pNfcCmdSts    = (NFC_CMD_STS*)NF_CMD_STS_REG_BASE;
400a7c3f:	3e6c42        	s32i	a4, a12, 248
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:273

    /* PRCQ */    
    g_pNfcPRCQ      = (U32*)PRCQ_ENTRY_BASE;
    g_pNfcPRCQQe    = (NFC_PRCQ_QE*)NF_QE_REG_BASE;
400a7c42:	406c32        	s32i	a3, a12, 0x100
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:268
    
    /* PU Mapping */
    g_pNfcLogicPU   = (NFC_LOGIC_PU *)NF_LOGIC_PU_REG_BASE;

    /* NFCQ & DPTR */
    g_pNfcq         = (NFCQ*)NFCQ_ENTRY_BASE;        
400a7c45:	3d6c52        	s32i	a5, a12, 244
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:671
------------------------------------------------------------------------------*/
void MCU2_DRAM_TEXT HAL_NfcQEEInit(void)
{
    U32 ulQeIndex;

    for (ulQeIndex = 0; ulQeIndex < QE_CMD_GROUP_DEPTH; ulQeIndex++)
400a7c48:	ebb731        	l32r	a3, 400a2b24 <_mcu2dram_text_start+0x324>
400a7c4b:	ebb751        	l32r	a5, 400a2b28 <_mcu2dram_text_start+0x328>
400a7c4e:	074d      	mov.n	a4, a7
400a7c50:	080d      	mov.n	a0, a8
400a7c52:	10a022        	movi	a2, 16
400a7c55:	19a276        	loopgtz	a2, 400a7c72 <HAL_NfcInterfaceInitBasic+0x5e>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:673
    {
        g_pNfcPRCQQe->aPRCQ_CQE1E[ulQeIndex] = g_aCQE1E[ulQeIndex];
400a7c58:	800022        	l8ui	a2, a0, 128
400a7c5b:	0020c0        	memw
400a7c5e:	804322        	s8i	a2, a3, 128
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:674
        g_pNfcPRCQQe->aPRCQ_CQE2E[ulQeIndex] = g_aCQE2E[ulQeIndex];
400a7c61:	c01422        	l16ui	a2, a4, 0x180
400a7c64:	0020c0        	memw
400a7c67:	5e5522        	s16i	a2, a5, 188
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:671
------------------------------------------------------------------------------*/
void MCU2_DRAM_TEXT HAL_NfcQEEInit(void)
{
    U32 ulQeIndex;

    for (ulQeIndex = 0; ulQeIndex < QE_CMD_GROUP_DEPTH; ulQeIndex++)
400a7c6a:	442b      	addi.n	a4, a4, 2
400a7c6c:	331b      	addi.n	a3, a3, 1
400a7c6e:	001b      	addi.n	a0, a0, 1
400a7c70:	552b      	addi.n	a5, a5, 2

400a7c72 <HAL_NfcInterfaceInitBasic+0x5e>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:677
    {
        g_pNfcPRCQQe->aPRCQ_CQE1E[ulQeIndex] = g_aCQE1E[ulQeIndex];
        g_pNfcPRCQQe->aPRCQ_CQE2E[ulQeIndex] = g_aCQE2E[ulQeIndex];
    }
    //extend CQEE, add in 533
    for (ulQeIndex = 0; ulQeIndex < QE_CMD_GROUP_DEPTH; ulQeIndex++)
400a7c72:	ebae31        	l32r	a3, 400a2b2c <_mcu2dram_text_start+0x32c>
400a7c75:	ebae51        	l32r	a5, 400a2b30 <_mcu2dram_text_start+0x330>
400a7c78:	074d      	mov.n	a4, a7
400a7c7a:	10a022        	movi	a2, 16
400a7c7d:	19a276        	loopgtz	a2, 400a7c9a <HAL_NfcInterfaceInitBasic+0x86>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:679
    {
        g_pNfcPRCQQeExt->aPRCQ_CQE1E[ulQeIndex] = g_aCQE1E[ulQeIndex];//g_aCQE1EExt[ulQeIndex];//extend for future
400a7c80:	800822        	l8ui	a2, a8, 128
400a7c83:	0020c0        	memw
400a7c86:	804322        	s8i	a2, a3, 128
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:680
        g_pNfcPRCQQeExt->aPRCQ_CQE2E[ulQeIndex] = g_aCQE2E[ulQeIndex];//g_aCQE2EExt[ulQeIndex];//extend for future
400a7c89:	c01422        	l16ui	a2, a4, 0x180
400a7c8c:	0020c0        	memw
400a7c8f:	7e5522        	s16i	a2, a5, 252
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:677
    {
        g_pNfcPRCQQe->aPRCQ_CQE1E[ulQeIndex] = g_aCQE1E[ulQeIndex];
        g_pNfcPRCQQe->aPRCQ_CQE2E[ulQeIndex] = g_aCQE2E[ulQeIndex];
    }
    //extend CQEE, add in 533
    for (ulQeIndex = 0; ulQeIndex < QE_CMD_GROUP_DEPTH; ulQeIndex++)
400a7c92:	331b      	addi.n	a3, a3, 1
400a7c94:	442b      	addi.n	a4, a4, 2
400a7c96:	881b      	addi.n	a8, a8, 1
400a7c98:	552b      	addi.n	a5, a5, 2
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:682
    {
        g_pNfcPRCQQeExt->aPRCQ_CQE1E[ulQeIndex] = g_aCQE1E[ulQeIndex];//g_aCQE1EExt[ulQeIndex];//extend for future
        g_pNfcPRCQQeExt->aPRCQ_CQE2E[ulQeIndex] = g_aCQE2E[ulQeIndex];//g_aCQE2EExt[ulQeIndex];//extend for future
    }
    for (ulQeIndex = 0; ulQeIndex < QE_OPRATION_GROUP_DEPTH; ulQeIndex++)
400a7c9a:	eba331        	l32r	a3, 400a2b28 <_mcu2dram_text_start+0x328>
400a7c9d:	820c      	movi.n	a2, 8
400a7c9f:	f03d      	nop.n
400a7ca1:	0ca276        	loopgtz	a2, 400a7cb1 <HAL_NfcInterfaceInitBasic+0x9d>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:684
    {
        g_pNfcPRCQQe->aPRCQ_SQEE[ulQeIndex] = g_aSQEE[ulQeIndex];
400a7ca4:	d01722        	l16ui	a2, a7, 0x1a0
400a7ca7:	0020c0        	memw
400a7caa:	7e5322        	s16i	a2, a3, 252
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:682
    for (ulQeIndex = 0; ulQeIndex < QE_CMD_GROUP_DEPTH; ulQeIndex++)
    {
        g_pNfcPRCQQeExt->aPRCQ_CQE1E[ulQeIndex] = g_aCQE1E[ulQeIndex];//g_aCQE1EExt[ulQeIndex];//extend for future
        g_pNfcPRCQQeExt->aPRCQ_CQE2E[ulQeIndex] = g_aCQE2E[ulQeIndex];//g_aCQE2EExt[ulQeIndex];//extend for future
    }
    for (ulQeIndex = 0; ulQeIndex < QE_OPRATION_GROUP_DEPTH; ulQeIndex++)
400a7cad:	772b      	addi.n	a7, a7, 2
400a7caf:	332b      	addi.n	a3, a3, 2
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:715
    
    /*  g_pNfcPRCQ ->PRCQ_ENTRY_BASE  */
    volatile U8 *pNfcQe = (volatile U8 *)g_pNfcPRCQ;
    
    /*  fill every QE into SRAM align in byte unit  */
    for (ucCmdCodeIndex = 0; ucCmdCodeIndex < FLASH_PRCQ_NON_PIO_NUM; ucCmdCodeIndex++)
400a7cb1:	080c      	movi.n	a8, 0
400a7cb3:	eba041        	l32r	a4, 400a2b34 <_mcu2dram_text_start+0x334>
400a7cb6:	050c      	movi.n	a5, 0
400a7cb8:	eb91b1        	l32r	a11, 400a2afc <_mcu2dram_text_start+0x2fc>
400a7cbb:	3a0c      	movi.n	a10, 3
400a7cbd:	991c      	movi.n	a9, 25
400a7cbf:	070d      	mov.n	a0, a7
400a7cc1:	ffa072        	movi	a7, 255
400a7cc4:	000306        	j	400a7cd4 <HAL_NfcInterfaceInitBasic+0xc0>

400a7cc7 <HAL_NfcInterfaceInitBasic+0xb3>:
	...

400a7cc8 <HAL_NfcInterfaceInitBasic+0xb4>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:725
            pNfcQe++;
            ulQeCnt++;

        }while ((QE_GRP_ATTR(PRCQ_FINISH)|QE_INDEX(END)) != l_aQETable[ulQeCnt-1]);
        /*  align in DW    */
        pNfcQe = (volatile U8 *)ALIGN_IN_DW((U32)((U32 *)pNfcQe));
400a7cc8:	040d      	mov.n	a0, a4
400a7cca:	004d      	mov.n	a4, a0
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:715
    
    /*  g_pNfcPRCQ ->PRCQ_ENTRY_BASE  */
    volatile U8 *pNfcQe = (volatile U8 *)g_pNfcPRCQ;
    
    /*  fill every QE into SRAM align in byte unit  */
    for (ucCmdCodeIndex = 0; ucCmdCodeIndex < FLASH_PRCQ_NON_PIO_NUM; ucCmdCodeIndex++)
400a7ccc:	881b      	addi.n	a8, a8, 1
400a7cce:	748080        	extui	a8, a8, 0, 8
400a7cd1:	291897        	beq	a8, a9, 400a7cfe <HAL_NfcInterfaceInitBasic+0xea>
400a7cd4:	65ba      	add.n	a6, a5, a11
400a7cd6:	148076        	loop	a0, 400a7cee <HAL_NfcInterfaceInitBasic+0xda>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:719
    {
        do
        {
            *pNfcQe = l_aQETable[ulQeCnt];
400a7cd9:	800622        	l8ui	a2, a6, 128
400a7cdc:	0020c0        	memw
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:721
            pNfcQe++;
            ulQeCnt++;
400a7cdf:	551b      	addi.n	a5, a5, 1
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:719
    /*  fill every QE into SRAM align in byte unit  */
    for (ucCmdCodeIndex = 0; ucCmdCodeIndex < FLASH_PRCQ_NON_PIO_NUM; ucCmdCodeIndex++)
    {
        do
        {
            *pNfcQe = l_aQETable[ulQeCnt];
400a7ce1:	004422        	s8i	a2, a4, 0
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:721
            pNfcQe++;
            ulQeCnt++;
400a7ce4:	661b      	addi.n	a6, a6, 1
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:723

        }while ((QE_GRP_ATTR(PRCQ_FINISH)|QE_INDEX(END)) != l_aQETable[ulQeCnt-1]);
400a7ce6:	7f0602        	l8ui	a0, a6, 127
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:720
    for (ucCmdCodeIndex = 0; ucCmdCodeIndex < FLASH_PRCQ_NON_PIO_NUM; ucCmdCodeIndex++)
    {
        do
        {
            *pNfcQe = l_aQETable[ulQeCnt];
            pNfcQe++;
400a7ce9:	441b      	addi.n	a4, a4, 1
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:723
            ulQeCnt++;

        }while ((QE_GRP_ATTR(PRCQ_FINISH)|QE_INDEX(END)) != l_aQETable[ulQeCnt-1]);
400a7ceb:	021077        	beq	a0, a7, 400a7cf1 <HAL_NfcInterfaceInitBasic+0xdd>

400a7cee <HAL_NfcInterfaceInitBasic+0xda>:
400a7cee:	fff906        	j	400a7cd6 <HAL_NfcInterfaceInitBasic+0xc2>

400a7cf1 <HAL_NfcInterfaceInitBasic+0xdd>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:725
        /*  align in DW    */
        pNfcQe = (volatile U8 *)ALIGN_IN_DW((U32)((U32 *)pNfcQe));
400a7cf1:	d30a47        	bnone	a10, a4, 400a7cc8 <HAL_NfcInterfaceInitBasic+0xb4>
400a7cf4:	c07c      	movi.n	a0, -4
400a7cf6:	100400        	and	a0, a4, a0
400a7cf9:	004b      	addi.n	a0, a0, 4
400a7cfb:	fff2c6        	j	400a7cca <HAL_NfcInterfaceInitBasic+0xb6>

400a7cfe <HAL_NfcInterfaceInitBasic+0xea>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:729
    }
    
    /*  continue to fill PIO QE into SRAM by DW align  */
    g_pNfcPRCQ = (U32 *)pNfcQe;
400a7cfe:	005d      	mov.n	a5, a0
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:731
    
    for (ucCmdCodeIndex = FLASH_PRCQ_NON_PIO_NUM; ucCmdCodeIndex < FLASH_PRCQ_CNT; ucCmdCodeIndex++)
400a7d00:	981c      	movi.n	a8, 25
400a7d02:	040c      	movi.n	a4, 0
400a7d04:	eb8d61        	l32r	a6, 400a2b38 <_mcu2dram_text_start+0x338>
400a7d07:	b71c      	movi.n	a7, 27
400a7d09:	a03460        	addx4	a3, a4, a6
400a7d0c:	f03d      	nop.n
400a7d0e:	198076        	loop	a0, 400a7d2b <HAL_NfcInterfaceInitBasic+0x117>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:735
    {
        do
        {
            *g_pNfcPRCQ = l_aPioCmdTable[ulPioQeCnt];
400a7d11:	05d392        	addmi	a9, a3, 0x500
400a7d14:	142992        	l32i	a9, a9, 80
400a7d17:	0020c0        	memw
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:737
            g_pNfcPRCQ++;
            ulPioQeCnt++;
400a7d1a:	441b      	addi.n	a4, a4, 1
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:735
    
    for (ucCmdCodeIndex = FLASH_PRCQ_NON_PIO_NUM; ucCmdCodeIndex < FLASH_PRCQ_CNT; ucCmdCodeIndex++)
    {
        do
        {
            *g_pNfcPRCQ = l_aPioCmdTable[ulPioQeCnt];
400a7d1c:	0599      	s32i.n	a9, a5, 0
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:737
            g_pNfcPRCQ++;
            ulPioQeCnt++;
400a7d1e:	334b      	addi.n	a3, a3, 4
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:739

        } while ( RAW_PIO_IO_LAST_PHS(1) != (l_aPioCmdTable[ulPioQeCnt-1] & (0x1 << 31)) );
400a7d20:	05d322        	addmi	a2, a3, 0x500
400a7d23:	132222        	l32i	a2, a2, 76
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:736
    for (ucCmdCodeIndex = FLASH_PRCQ_NON_PIO_NUM; ucCmdCodeIndex < FLASH_PRCQ_CNT; ucCmdCodeIndex++)
    {
        do
        {
            *g_pNfcPRCQ = l_aPioCmdTable[ulPioQeCnt];
            g_pNfcPRCQ++;
400a7d26:	554b      	addi.n	a5, a5, 4
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:739
            ulPioQeCnt++;

        } while ( RAW_PIO_IO_LAST_PHS(1) != (l_aPioCmdTable[ulPioQeCnt-1] & (0x1 << 31)) );
400a7d28:	004296        	bltz	a2, 400a7d30 <HAL_NfcInterfaceInitBasic+0x11c>

400a7d2b <HAL_NfcInterfaceInitBasic+0x117>:
400a7d2b:	fff746        	j	400a7d0c <HAL_NfcInterfaceInitBasic+0xf8>

400a7d2e <HAL_NfcInterfaceInitBasic+0x11a>:
	...

400a7d30 <HAL_NfcInterfaceInitBasic+0x11c>:
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashCmd.c:731
    }
    
    /*  continue to fill PIO QE into SRAM by DW align  */
    g_pNfcPRCQ = (U32 *)pNfcQe;
    
    for (ucCmdCodeIndex = FLASH_PRCQ_NON_PIO_NUM; ucCmdCodeIndex < FLASH_PRCQ_CNT; ucCmdCodeIndex++)
400a7d30:	3f6c52        	s32i	a5, a12, 252
400a7d33:	881b      	addi.n	a8, a8, 1
400a7d35:	748080        	extui	a8, a8, 0, 8
400a7d38:	cd9877        	bne	a8, a7, 400a7d09 <HAL_NfcInterfaceInitBasic+0xf5>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:308
    HAL_NfcBaseAddrInit();

    /* PRCQ relative init */
    HAL_NfcQEEInit();
    HAL_NfcPrcqInit();
    HAL_NfcPrcqTableInit();
400a7d3b:	ffe4c5        	call0	400a7b88 <HAL_NfcPrcqTableInit>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:311

    /* Redundent */    
    HAL_NfcSetRedInDramBase(DRAM_RED_MCU12_SHARE_BASE);
400a7d3e:	eb7fa1        	l32r	a10, 400a2b3c <_mcu2dram_text_start+0x33c>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2255
{
    volatile NF_RED_DRAM_BASE_REG *pRedBaseAddr;
    
    pRedBaseAddr = (volatile NF_RED_DRAM_BASE_REG *)&rNfcRedDramBase;

    *(U32*)pRedBaseAddr = 0;    
400a7d41:	020c      	movi.n	a2, 0
400a7d43:	0a29      	s32i.n	a2, a10, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2256
    pRedBaseAddr->bsRedDramBaseAddr = (ulRedBaseAddr-DRAM_START_ADDRESS)>>3;
400a7d45:	eb7eb1        	l32r	a11, 400a2b40 <_mcu2dram_text_start+0x340>
400a7d48:	0020c0        	memw
400a7d4b:	0a08      	l32i.n	a0, a10, 0
400a7d4d:	0200b4        	insbits	a11, a0, 0, 2
400a7d50:	0020c0        	memw
400a7d53:	0ab9      	s32i.n	a11, a10, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:236
LOCAL void MCU2_DRAM_TEXT HAL_NfcSetRedDataBase(void)
{
    volatile NF_RED_DRAM_BASE_REG *pRedBaseAddr;
    pRedBaseAddr = (volatile NF_RED_DRAM_BASE_REG *)&rNfcRedDramBase;
    
    g_ulRedDataDramBase = ((pRedBaseAddr->bsRedDramBaseAddr) << 3) + DRAM_START_ADDRESS;   
400a7d55:	eb65b1        	l32r	a11, 400a2aec <_mcu2dram_text_start+0x2ec>
400a7d58:	0020c0        	memw
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:314

    /* Redundent */    
    HAL_NfcSetRedInDramBase(DRAM_RED_MCU12_SHARE_BASE);
    HAL_NfcSetRedDataBase();
    
    return;
400a7d5b:	0108      	l32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:236
LOCAL void MCU2_DRAM_TEXT HAL_NfcSetRedDataBase(void)
{
    volatile NF_RED_DRAM_BASE_REG *pRedBaseAddr;
    pRedBaseAddr = (volatile NF_RED_DRAM_BASE_REG *)&rNfcRedDramBase;
    
    g_ulRedDataDramBase = ((pRedBaseAddr->bsRedDramBaseAddr) << 3) + DRAM_START_ADDRESS;   
400a7d5d:	0aa8      	l32i.n	a10, a10, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:237
    g_ulRedDataOtfbBase = OTFB_RED_MCU12_SHARE_BASE;
400a7d5f:	eb7991        	l32r	a9, 400a2b44 <_mcu2dram_text_start+0x344>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:236
LOCAL void MCU2_DRAM_TEXT HAL_NfcSetRedDataBase(void)
{
    volatile NF_RED_DRAM_BASE_REG *pRedBaseAddr;
    pRedBaseAddr = (volatile NF_RED_DRAM_BASE_REG *)&rNfcRedDramBase;
    
    g_ulRedDataDramBase = ((pRedBaseAddr->bsRedDramBaseAddr) << 3) + DRAM_START_ADDRESS;   
400a7d62:	41a3a0        	srli	a10, a10, 3
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:237
    g_ulRedDataOtfbBase = OTFB_RED_MCU12_SHARE_BASE;
400a7d65:	3c6c92        	s32i	a9, a12, 240
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:236
LOCAL void MCU2_DRAM_TEXT HAL_NfcSetRedDataBase(void)
{
    volatile NF_RED_DRAM_BASE_REG *pRedBaseAddr;
    pRedBaseAddr = (volatile NF_RED_DRAM_BASE_REG *)&rNfcRedDramBase;
    
    g_ulRedDataDramBase = ((pRedBaseAddr->bsRedDramBaseAddr) << 3) + DRAM_START_ADDRESS;   
400a7d68:	11aad0        	slli	a10, a10, 3
400a7d6b:	aaba      	add.n	a10, a10, a11
400a7d6d:	3b6ca2        	s32i	a10, a12, 236
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:314

    /* Redundent */    
    HAL_NfcSetRedInDramBase(DRAM_RED_MCU12_SHARE_BASE);
    HAL_NfcSetRedDataBase();
    
    return;
400a7d70:	11c8      	l32i.n	a12, a1, 4
400a7d72:	10c112        	addi	a1, a1, 16
400a7d75:	f00d      	ret.n

400a7d77 <HAL_NfcInterfaceInitBasic+0x163>:
	...

400a7d78 <HAL_NfcSetSsuInOtfbBase>:
HAL_NfcSetSsuInOtfbBase():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2297
Usage      :
History    :
1. 2016.3.18 JasonGuo create function
==============================================================================*/
void MCU2_DRAM_TEXT HAL_NfcSetSsuInOtfbBase(U32 ulSsuBaseAddr)
{
400a7d78:	eb5c41        	l32r	a4, 400a2ae8 <_mcu2dram_text_start+0x2e8>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2301
    volatile NF_SSU_BASEADDR_REG *pSsuBaseAddr;
    pSsuBaseAddr = (volatile NF_SSU_BASEADDR_REG *)&rNfcSsuBaseAddr;

    pSsuBaseAddr->bsSsuOtfbBase = (ulSsuBaseAddr - OTFB_START_ADDRESS) >> 10;
400a7d7b:	0020c0        	memw
400a7d7e:	eb7251        	l32r	a5, 400a2b48 <_mcu2dram_text_start+0x348>
400a7d81:	0438      	l32i.n	a3, a4, 0
400a7d83:	525a      	add.n	a5, a2, a5
400a7d85:	415a50        	srli	a5, a5, 10
400a7d88:	410534        	insbits	a3, a5, 0, 9
400a7d8b:	0020c0        	memw
400a7d8e:	0439      	s32i.n	a3, a4, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2303
    
    return;
400a7d90:	f00d      	ret.n

400a7d92 <HAL_NfcSetSsuInOtfbBase+0x1a>:
	...

400a7d94 <HAL_NfcSetRedInDramBase>:
HAL_NfcSetRedInDramBase():
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2250
Usage      : 
History    : 
    1. 2016.3.18 JasonGuo create function
==============================================================================*/
void MCU2_DRAM_TEXT HAL_NfcSetRedInDramBase(U32 ulRedBaseAddr)
{
400a7d94:	eb6a41        	l32r	a4, 400a2b3c <_mcu2dram_text_start+0x33c>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2255
    volatile NF_RED_DRAM_BASE_REG *pRedBaseAddr;
    
    pRedBaseAddr = (volatile NF_RED_DRAM_BASE_REG *)&rNfcRedDramBase;

    *(U32*)pRedBaseAddr = 0;    
400a7d97:	050c      	movi.n	a5, 0
400a7d99:	0459      	s32i.n	a5, a4, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2256
    pRedBaseAddr->bsRedDramBaseAddr = (ulRedBaseAddr-DRAM_START_ADDRESS)>>3;
400a7d9b:	eb6c31        	l32r	a3, 400a2b4c <_mcu2dram_text_start+0x34c>
400a7d9e:	323a      	add.n	a3, a2, a3
400a7da0:	0020c0        	memw
400a7da3:	0458      	l32i.n	a5, a4, 0
400a7da5:	020534        	insbits	a3, a5, 0, 2
400a7da8:	0020c0        	memw
400a7dab:	0439      	s32i.n	a3, a4, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2258
    
    return;
400a7dad:	f00d      	ret.n

400a7daf <HAL_NfcSetRedInDramBase+0x1b>:
	...

400a7db0 <L3_FCmdIntrErrHInit..HE_1482204275>:
L3_FCmdIntrErrHInit():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:101
Usage      : 
History    : 
    1. 2016.7.14 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_FCmdIntrErrHInit(BOOL bIsBak)
{
400a7db0:	f0c112        	addi	a1, a1, -16
400a7db3:	0109      	s32i.n	a0, a1, 0
400a7db5:	eaa101        	l32r	a0, 400a283c <_mcu2dram_text_start+0x3c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:105
    U32 ulDWSize;
    FCMD_INTR_ERRH *ptErrH;
    
    if (TRUE != bIsBak)
400a7db8:	1c1226        	beqi	a2, 1, 400a7dd8 <L3_FCmdIntrErrHInit..HE_1482204275+0x28>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:107
    {
        ptErrH   = g_ptFCmdIntrErrH;
400a7dbb:	1c2022        	l32i	a2, a0, 112

400a7dbe <L3_FCmdIntrErrHInit..HE_1482204275+0xe>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:116
    {
        ptErrH   = g_ptFCmdIntrErrHBak;
        ulDWSize = FCMD_INTR_ERRH_SZ_BAK/sizeof(U32);
    }
    
    COM_MemZero((U32*)ptErrH, ulDWSize);
400a7dbe:	e038      	l32i.n	a3, a0, 56
400a7dc0:	a03330        	addx4	a3, a3, a3
400a7dc3:	1133c0        	slli	a3, a3, 4
400a7dc6:	413230        	srli	a3, a3, 2
400a7dc9:	eadf01        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a7dcc:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:118

    return;
400a7dcf:	0108      	l32i.n	a0, a1, 0
400a7dd1:	10c112        	addi	a1, a1, 16
400a7dd4:	f00d      	ret.n

400a7dd6 <L3_FCmdIntrErrHInit..HE_1482204275+0x26>:
	...

400a7dd8 <L3_FCmdIntrErrHInit..HE_1482204275+0x28>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:112
        ptErrH   = g_ptFCmdIntrErrH;
        ulDWSize = FCMD_INTR_ERRH_SZ/sizeof(U32);
    }
    else
    {
        ptErrH   = g_ptFCmdIntrErrHBak;
400a7dd8:	1d2022        	l32i	a2, a0, 116
400a7ddb:	fff7c6        	j	400a7dbe <L3_FCmdIntrErrHInit..HE_1482204275+0xe>

400a7dde <L3_FCmdIntrErrHInit..HE_1482204275+0x2e>:
	...

400a7de0 <L3_ErrHAllocDram>:
L3_ErrHAllocDram():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1798
Usage      : 
History    : 
    1. 2016.7.27 JasonGuo create function
==============================================================================*/
void MCU2_DRAM_TEXT L3_ErrHAllocDram(U32 *pFreeDramBase)
{
400a7de0:	f0c112        	addi	a1, a1, -16
400a7de3:	21c9      	s32i.n	a12, a1, 8
400a7de5:	1109      	s32i.n	a0, a1, 4
400a7de7:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1799
    U32 ulFreeBase = *pFreeDramBase;
400a7de9:	0208      	l32i.n	a0, a2, 0
400a7deb:	0109      	s32i.n	a0, a1, 0
400a7ded:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1800
    COM_MemAddr16DWAlign(&ulFreeBase);
400a7def:	eb3a01        	l32r	a0, 400a2ad8 <_mcu2dram_text_start+0x2d8>
400a7df2:	0000c0        	callx0	a0
400a7df5:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1803
        
    // FCMD_INTR_ERRH
    g_ptFCmdIntrErrH = (FCMD_INTR_ERRH *)ulFreeBase;
400a7df7:	ea9151        	l32r	a5, 400a283c <_mcu2dram_text_start+0x3c>
400a7dfa:	0148      	l32i.n	a4, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1804
    COM_MemIncBaseAddr(&ulFreeBase, FCMD_INTR_ERRH_SZ);
400a7dfc:	e538      	l32i.n	a3, a5, 56
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1803
{
    U32 ulFreeBase = *pFreeDramBase;
    COM_MemAddr16DWAlign(&ulFreeBase);
        
    // FCMD_INTR_ERRH
    g_ptFCmdIntrErrH = (FCMD_INTR_ERRH *)ulFreeBase;
400a7dfe:	1c6542        	s32i	a4, a5, 112
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1804
    COM_MemIncBaseAddr(&ulFreeBase, FCMD_INTR_ERRH_SZ);
400a7e01:	a03330        	addx4	a3, a3, a3
400a7e04:	1133c0        	slli	a3, a3, 4
400a7e07:	eb3501        	l32r	a0, 400a2adc <_mcu2dram_text_start+0x2dc>
400a7e0a:	0000c0        	callx0	a0
400a7e0d:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1805
    COM_MemAddr16DWAlign(&ulFreeBase);   
400a7e0f:	eb3201        	l32r	a0, 400a2ad8 <_mcu2dram_text_start+0x2d8>
400a7e12:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1807
            
    ASSERT(ulFreeBase-DRAM_DATA_BUFF_MCU2_BASE < DATA_BUFF_MCU2_SIZE);
400a7e15:	ea8901        	l32r	a0, 400a283c <_mcu2dram_text_start+0x3c>
400a7e18:	0028      	l32i.n	a2, a0, 0
400a7e1a:	eb4d61        	l32r	a6, 400a2b50 <_mcu2dram_text_start+0x350>
400a7e1d:	0228      	l32i.n	a2, a2, 0
400a7e1f:	1008      	l32i.n	a0, a0, 4
400a7e21:	626a      	add.n	a6, a2, a6
400a7e23:	15b607        	bgeu	a6, a0, 400a7e3c <L3_ErrHAllocDram+0x5c>
400a7e26:	c04020        	sub	a4, a0, a2
400a7e29:	eb4a51        	l32r	a5, 400a2b54 <_mcu2dram_text_start+0x354>
400a7e2c:	0108      	l32i.n	a0, a1, 0
400a7e2e:	445a      	add.n	a4, a4, a5
400a7e30:	eb4a51        	l32r	a5, 400a2b58 <_mcu2dram_text_start+0x358>
400a7e33:	c03020        	sub	a3, a0, a2
400a7e36:	803350        	add	a3, a3, a5
400a7e39:	033347        	bltu	a3, a4, 400a7e40 <L3_ErrHAllocDram+0x60>

400a7e3c <L3_ErrHAllocDram+0x5c>:
400a7e3c:	ffff06        	j	400a7e3c <L3_ErrHAllocDram+0x5c>

400a7e3f <L3_ErrHAllocDram+0x5f>:
	...

400a7e40 <L3_ErrHAllocDram+0x60>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1808
    *pFreeDramBase = ulFreeBase;
400a7e40:	0c09      	s32i.n	a0, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:1810

    return;
400a7e42:	21c8      	l32i.n	a12, a1, 8
400a7e44:	1108      	l32i.n	a0, a1, 4
400a7e46:	10c112        	addi	a1, a1, 16
400a7e49:	f00d      	ret.n

400a7e4b <L3_ErrHAllocDram+0x6b>:
	...

400a7e4c <L3_ErrHBuildBrthLunMap>:
L3_ErrHBuildBrthLunMap():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHBasic.c:76
void MCU2_DRAM_TEXT L3_ErrHBuildBrthLunMap(void)
{
    U8 ucPU, ucCEInPU, ucLunInCE, ucBrthLunInCE;
    U8 ucTLun, ucBrthLun, ucTBrthLun;
    
    if (1 == LUN_PER_CE)
400a7e4c:	f00d      	ret.n

400a7e4e <L3_ErrHBuildBrthLunMap+0x2>:
	...

400a7e50 <L3_FCMDQIntrInit>:
L3_FCMDQIntrInit():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:209
Usage      : Called in L3_TaskInit after the memory allocation done.
History    : 
    1. 2016.7.6 JasonGuo create function
==============================================================================*/
void MCU2_DRAM_TEXT L3_FCMDQIntrInit(BOOL bIsBak)
{
400a7e50:	f0c112        	addi	a1, a1, -16
400a7e53:	0109      	s32i.n	a0, a1, 0
400a7e55:	11c9      	s32i.n	a12, a1, 4
400a7e57:	21d9      	s32i.n	a13, a1, 8
400a7e59:	02cd      	mov.n	a12, a2
400a7e5b:	ea78d1        	l32r	a13, 400a283c <_mcu2dram_text_start+0x3c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:74
LOCAL void MCU2_DRAM_TEXT L3_FCmdIntrCtrlInit(BOOL bIsBak)
{
    U32 ulDWSize;
    FCMD_INTR_CTRL *ptCtrl;
    
    if (TRUE != bIsBak)
400a7e5e:	431226        	beqi	a2, 1, 400a7ea5 <L3_FCMDQIntrInit+0x55>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:76
    {
        ptCtrl   = g_ptFCmdIntrCtrl;
400a7e61:	1a2d22        	l32i	a2, a13, 104

400a7e64 <L3_FCMDQIntrInit+0x14>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:85
    {
        ptCtrl   = g_ptFCmdIntrCtrlBak;
        ulDWSize = FCMD_INTR_CTRL_SZ_BAK/sizeof(U32);
    }
    
    COM_MemZero((U32*)ptCtrl, ulDWSize);
400a7e64:	ed38      	l32i.n	a3, a13, 56
400a7e66:	a03330        	addx4	a3, a3, a3
400a7e69:	1133b0        	slli	a3, a3, 5
400a7e6c:	413230        	srli	a3, a3, 2
400a7e6f:	eab601        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a7e72:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:211
    1. 2016.7.6 JasonGuo create function
==============================================================================*/
void MCU2_DRAM_TEXT L3_FCMDQIntrInit(BOOL bIsBak)
{
    L3_FCmdIntrCtrlInit(bIsBak);
    L3_FCmdIntrErrHInit(bIsBak);
400a7e75:	0c2d      	mov.n	a2, a12
400a7e77:	fff385        	call0	400a7db0 <L3_FCmdIntrErrHInit..HE_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:148
    {
        ulTNum = FCMD_INTR_BAK_NUM;
        ptCurDptr = g_ptFCmdIntrDptrBak;
    }

    for (ulTLun = 0; ulTLun < ulTNum; ulTLun++)
400a7e7a:	ffaf42        	movi	a4, -1
400a7e7d:	0e2d52        	l32i	a5, a13, 56
400a7e80:	00a022        	movi	a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:137
{
    U32 ulTLun, ulDepthIdx, ulTNum;
    FCMD_INTR_DPTR *ptCurDptr;
    FCMD_INTR_Q_DPTR *ptQDptr;

    if (TRUE != bIsBak)
400a7e83:	251c26        	beqi	a12, 1, 400a7eac <L3_FCMDQIntrInit+0x5c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:140
    {
        ulTNum = SUBSYSTEM_LUN_NUM;
        ptCurDptr = g_ptFCmdIntrDptr;
400a7e86:	1e2d02        	l32i	a0, a13, 120
400a7e89:	0d9576        	loopnez	a5, 400a7e9a <L3_FCMDQIntrInit+0x4a>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:153
    for (ulTLun = 0; ulTLun < ulTNum; ulTLun++)
    {
        ptQDptr = &ptCurDptr->atIntrQDptr[ulTLun];
        for (ulDepthIdx = 0; ulDepthIdx < NFCQ_DEPTH; ulDepthIdx++)
        {
            ptQDptr->ucWptr = 0;
400a7e8c:	004022        	s8i	a2, a0, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:154
            ptQDptr->ucRptr = INVALID_DPTR;
400a7e8f:	014042        	s8i	a4, a0, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:155
            ptQDptr->ucPptr = INVALID_DPTR;
400a7e92:	024042        	s8i	a4, a0, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:156
            ptQDptr->ucEptr = INVALID_DPTR;
400a7e95:	034042        	s8i	a4, a0, 3
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:148
    {
        ulTNum = FCMD_INTR_BAK_NUM;
        ptCurDptr = g_ptFCmdIntrDptrBak;
    }

    for (ulTLun = 0; ulTLun < ulTNum; ulTLun++)
400a7e98:	004b      	addi.n	a0, a0, 4

400a7e9a <L3_FCMDQIntrInit+0x4a>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:214
{
    L3_FCmdIntrCtrlInit(bIsBak);
    L3_FCmdIntrErrHInit(bIsBak);
    L3_FCmdIntrDptrInit(bIsBak);
    
    return;
400a7e9a:	21d8      	l32i.n	a13, a1, 8
400a7e9c:	11c8      	l32i.n	a12, a1, 4
400a7e9e:	0108      	l32i.n	a0, a1, 0
400a7ea0:	10c112        	addi	a1, a1, 16
400a7ea3:	f00d      	ret.n

400a7ea5 <L3_FCMDQIntrInit+0x55>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:81
        ptCtrl   = g_ptFCmdIntrCtrl;
        ulDWSize = FCMD_INTR_CTRL_SZ/sizeof(U32);
    }
    else
    {
        ptCtrl   = g_ptFCmdIntrCtrlBak;
400a7ea5:	1b2d22        	l32i	a2, a13, 108
400a7ea8:	ffee06        	j	400a7e64 <L3_FCMDQIntrInit+0x14>

400a7eab <L3_FCMDQIntrInit+0x5b>:
	...

400a7eac <L3_FCMDQIntrInit+0x5c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:145
        ptCurDptr = g_ptFCmdIntrDptr;
    }
    else
    {
        ulTNum = FCMD_INTR_BAK_NUM;
        ptCurDptr = g_ptFCmdIntrDptrBak;
400a7eac:	1f2d02        	l32i	a0, a13, 124
400a7eaf:	fff586        	j	400a7e89 <L3_FCMDQIntrInit+0x39>

400a7eb2 <L3_FCMDQIntrInit+0x62>:
	...

400a7eb4 <L3_AllocMem..FE_1482204275>:
L3_AllocMem():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Init.c:127
Usage      : 
History    : 
    1. 2016.7.27 JasonGuo create function
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_AllocMem(SUBSYSTEM_MEM_BASE *pFreeMemBase)
{
400a7eb4:	e0c112        	addi	a1, a1, -32
400a7eb7:	61d9      	s32i.n	a13, a1, 24
400a7eb9:	71e9      	s32i.n	a14, a1, 28
400a7ebb:	51c9      	s32i.n	a12, a1, 20
400a7ebd:	4109      	s32i.n	a0, a1, 16
400a7ebf:	02cd      	mov.n	a12, a2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:178
History    : 
    1. 2016.7.27 JasonGuo create function
==============================================================================*/
void MCU2_DRAM_TEXT L3_FCMDQAllocSRAM0(U32 *pFreeSram0Base)
{
    U32 ulFreeBase = *pFreeSram0Base;
400a7ec1:	0208      	l32i.n	a0, a2, 0
400a7ec3:	0109      	s32i.n	a0, a1, 0
400a7ec5:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:179
    COM_MemAddr16DWAlign(&ulFreeBase);
400a7ec7:	eb0401        	l32r	a0, 400a2ad8 <_mcu2dram_text_start+0x2d8>
400a7eca:	0000c0        	callx0	a0
400a7ecd:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:182

    // FCMD_INTR_DPTR
    g_ptFCmdIntrDptr = (FCMD_INTR_DPTR *)ulFreeBase;
400a7ecf:	ea5bd1        	l32r	a13, 400a283c <_mcu2dram_text_start+0x3c>
400a7ed2:	0148      	l32i.n	a4, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:183
    COM_MemIncBaseAddr(&ulFreeBase, FCMD_INTR_DPTR_SZ);
400a7ed4:	ed38      	l32i.n	a3, a13, 56
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:182
{
    U32 ulFreeBase = *pFreeSram0Base;
    COM_MemAddr16DWAlign(&ulFreeBase);

    // FCMD_INTR_DPTR
    g_ptFCmdIntrDptr = (FCMD_INTR_DPTR *)ulFreeBase;
400a7ed6:	1e6d42        	s32i	a4, a13, 120
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:183
    COM_MemIncBaseAddr(&ulFreeBase, FCMD_INTR_DPTR_SZ);
400a7ed9:	1133e0        	slli	a3, a3, 2
400a7edc:	eb0001        	l32r	a0, 400a2adc <_mcu2dram_text_start+0x2dc>
400a7edf:	0000c0        	callx0	a0
400a7ee2:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:184
    COM_MemAddr16DWAlign(&ulFreeBase);
400a7ee4:	eafd01        	l32r	a0, 400a2ad8 <_mcu2dram_text_start+0x2d8>
400a7ee7:	0000c0        	callx0	a0
400a7eea:	202110        	or	a2, a1, a1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:188
    
    // FCMD_INTR_CTRL
    g_ptFCmdIntrCtrl = (FCMD_INTR_CTRL *)ulFreeBase;
    COM_MemIncBaseAddr(&ulFreeBase, FCMD_INTR_CTRL_SZ);
400a7eed:	ed38      	l32i.n	a3, a13, 56
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:187
    g_ptFCmdIntrDptr = (FCMD_INTR_DPTR *)ulFreeBase;
    COM_MemIncBaseAddr(&ulFreeBase, FCMD_INTR_DPTR_SZ);
    COM_MemAddr16DWAlign(&ulFreeBase);
    
    // FCMD_INTR_CTRL
    g_ptFCmdIntrCtrl = (FCMD_INTR_CTRL *)ulFreeBase;
400a7eef:	002142        	l32i	a4, a1, 0
400a7ef2:	1a6d42        	s32i	a4, a13, 104
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:188
    COM_MemIncBaseAddr(&ulFreeBase, FCMD_INTR_CTRL_SZ);
400a7ef5:	a03330        	addx4	a3, a3, a3
400a7ef8:	1133b0        	slli	a3, a3, 5
400a7efb:	eaf801        	l32r	a0, 400a2adc <_mcu2dram_text_start+0x2dc>
400a7efe:	0000c0        	callx0	a0
400a7f01:	012d      	mov.n	a2, a1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:189
    COM_MemAddr16DWAlign(&ulFreeBase);
400a7f03:	eaf501        	l32r	a0, 400a2ad8 <_mcu2dram_text_start+0x2d8>
400a7f06:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:191
        
    DBG_Printf("L3: FCMDQAllcSRAM0 %dKB, -> %dKB -> totalSRAM0 %dKB\n", (ulFreeBase - *pFreeSram0Base) / 1024, (ulFreeBase - DSRAM0_MCU2_BASE) / 1024, DSRAM0_MCU2_MAX_SIZE / 1024);
400a7f09:	eb1621        	l32r	a2, 400a2b64 <_mcu2dram_text_start+0x364>
400a7f0c:	eb15d1        	l32r	a13, 400a2b60 <_mcu2dram_text_start+0x360>
400a7f0f:	0c38      	l32i.n	a3, a12, 0
400a7f11:	0148      	l32i.n	a4, a1, 0
400a7f13:	eb12e1        	l32r	a14, 400a2b5c <_mcu2dram_text_start+0x35c>
400a7f16:	c03430        	sub	a3, a4, a3
400a7f19:	413a30        	srli	a3, a3, 10
400a7f1c:	c044e0        	sub	a4, a4, a14
400a7f1f:	414a40        	srli	a4, a4, 10
400a7f22:	c0ede0        	sub	a14, a13, a14
400a7f25:	41eae0        	srli	a14, a14, 10
400a7f28:	0e5d      	mov.n	a5, a14
400a7f2a:	ea4301        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a7f2d:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:192
    ASSERT(ulFreeBase-DSRAM0_MCU2_BASE < DSRAM0_MCU2_MAX_SIZE);
400a7f30:	0108      	l32i.n	a0, a1, 0
400a7f32:	0220d7        	blt	a0, a13, 400a7f38 <L3_AllocMem..FE_1482204275+0x84>
400a7f35:	0071c6        	j	400a8100 <L3_AllocMem..FE_1482204275+0x24c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:68
    1. 2016.7.28 JasonGuo create function
==============================================================================*/
void MCU2_DRAM_TEXT L3_FMAllocSRAM0(U32 *pFreeSram0Base)
{
    U32 ulFreeBase = *pFreeSram0Base;
    COM_MemAddr16DWAlign(&ulFreeBase);
400a7f38:	214b      	addi.n	a2, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:193
    *pFreeSram0Base = ulFreeBase;
400a7f3a:	0c09      	s32i.n	a0, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:67
History    : 
    1. 2016.7.28 JasonGuo create function
==============================================================================*/
void MCU2_DRAM_TEXT L3_FMAllocSRAM0(U32 *pFreeSram0Base)
{
    U32 ulFreeBase = *pFreeSram0Base;
400a7f3c:	1109      	s32i.n	a0, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:68
    COM_MemAddr16DWAlign(&ulFreeBase);
400a7f3e:	eae601        	l32r	a0, 400a2ad8 <_mcu2dram_text_start+0x2d8>
400a7f41:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:72
    
    // FLASH_MONITOR_INTR
    l_ptFMIntrMgr = (FM_INTR_ITEM *)ulFreeBase;
    COM_MemIncBaseAddr(&ulFreeBase, FM_INTR_TOT_SZ);
400a7f44:	214b      	addi.n	a2, a1, 4
400a7f46:	ea3d51        	l32r	a5, 400a283c <_mcu2dram_text_start+0x3c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:71
{
    U32 ulFreeBase = *pFreeSram0Base;
    COM_MemAddr16DWAlign(&ulFreeBase);
    
    // FLASH_MONITOR_INTR
    l_ptFMIntrMgr = (FM_INTR_ITEM *)ulFreeBase;
400a7f49:	1148      	l32i.n	a4, a1, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:72
    COM_MemIncBaseAddr(&ulFreeBase, FM_INTR_TOT_SZ);
400a7f4b:	e538      	l32i.n	a3, a5, 56
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:71
{
    U32 ulFreeBase = *pFreeSram0Base;
    COM_MemAddr16DWAlign(&ulFreeBase);
    
    // FLASH_MONITOR_INTR
    l_ptFMIntrMgr = (FM_INTR_ITEM *)ulFreeBase;
400a7f4d:	216542        	s32i	a4, a5, 132
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:72
    COM_MemIncBaseAddr(&ulFreeBase, FM_INTR_TOT_SZ);
400a7f50:	903330        	addx2	a3, a3, a3
400a7f53:	1133e0        	slli	a3, a3, 2
400a7f56:	eae101        	l32r	a0, 400a2adc <_mcu2dram_text_start+0x2dc>
400a7f59:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:73
    COM_MemAddr16DWAlign(&ulFreeBase);
400a7f5c:	214b      	addi.n	a2, a1, 4
400a7f5e:	eade01        	l32r	a0, 400a2ad8 <_mcu2dram_text_start+0x2d8>
400a7f61:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:75
    
    DBG_Printf("L3: FMAllcSRAM0 %dKB, -> %dKB -> totalSRAM0 %dKB\n", (ulFreeBase - *pFreeSram0Base) / 1024, (ulFreeBase - DSRAM0_MCU2_BASE) / 1024, DSRAM0_MCU2_MAX_SIZE / 1024);
400a7f64:	eb0121        	l32r	a2, 400a2b68 <_mcu2dram_text_start+0x368>
400a7f67:	eafd41        	l32r	a4, 400a2b5c <_mcu2dram_text_start+0x35c>
400a7f6a:	1138      	l32i.n	a3, a1, 4
400a7f6c:	002c52        	l32i	a5, a12, 0
400a7f6f:	c04340        	sub	a4, a3, a4
400a7f72:	c03350        	sub	a3, a3, a5
400a7f75:	414a40        	srli	a4, a4, 10
400a7f78:	205ee0        	or	a5, a14, a14
400a7f7b:	413a30        	srli	a3, a3, 10
400a7f7e:	ea2e01        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a7f81:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:76
    ASSERT(ulFreeBase-DSRAM0_MCU2_BASE < DSRAM0_MCU2_MAX_SIZE);
400a7f84:	1108      	l32i.n	a0, a1, 4
400a7f86:	0220d7        	blt	a0, a13, 400a7f8c <L3_AllocMem..FE_1482204275+0xd8>
400a7f89:	005dc6        	j	400a8104 <L3_AllocMem..FE_1482204275+0x250>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Init.c:87
History    : 
    1. 2016.7.27 JasonGuo create function
==============================================================================*/
void MCU2_DRAM_TEXT L3_AllocDRAM(U32 *pFreeDRAMBase)
{
    L3_ErrHAllocDram(pFreeDRAMBase);
400a7f8c:	10cc22        	addi	a2, a12, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:77
    *pFreeSram0Base = ulFreeBase;
400a7f8f:	0c09      	s32i.n	a0, a12, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Init.c:87
400a7f91:	ffe4c5        	call0	400a7de0 <L3_ErrHAllocDram>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1012
    1. 2016.7.27 JasonGuo create function
==============================================================================*/
void MCU2_DRAM_TEXT L3_ExtHAllcDram(U32 *pFreeDramBase)
{
    U32 ulFreeBase = *pFreeDramBase;
    COM_MemAddr16DWAlign(&ulFreeBase);
400a7f94:	218b      	addi.n	a2, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1011
History    : 
    1. 2016.7.27 JasonGuo create function
==============================================================================*/
void MCU2_DRAM_TEXT L3_ExtHAllcDram(U32 *pFreeDramBase)
{
    U32 ulFreeBase = *pFreeDramBase;
400a7f96:	4c58      	l32i.n	a5, a12, 16
400a7f98:	026152        	s32i	a5, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1012
    COM_MemAddr16DWAlign(&ulFreeBase);
400a7f9b:	eacf01        	l32r	a0, 400a2ad8 <_mcu2dram_text_start+0x2d8>
400a7f9e:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1016
    
    // Backup for SetFeatureCommand
    g_ptFCmdReqBak2 = (FCMD_REQ_ENTRY *)ulFreeBase;
    COM_MemIncBaseAddr(&ulFreeBase, SUBSYSTEM_LUN_NUM * sizeof(FCMD_REQ_ENTRY));
400a7fa1:	ea2631        	l32r	a3, 400a283c <_mcu2dram_text_start+0x3c>
400a7fa4:	e338      	l32i.n	a3, a3, 56
400a7fa6:	218b      	addi.n	a2, a1, 8
400a7fa8:	903330        	addx2	a3, a3, a3
400a7fab:	1133c0        	slli	a3, a3, 4
400a7fae:	eacb01        	l32r	a0, 400a2adc <_mcu2dram_text_start+0x2dc>
400a7fb1:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1017
    COM_MemAddr16DWAlign(&ulFreeBase);
400a7fb4:	218b      	addi.n	a2, a1, 8
400a7fb6:	eac801        	l32r	a0, 400a2ad8 <_mcu2dram_text_start+0x2d8>
400a7fb9:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1021

    // FCMD_INTR_BAKUP mem    
    g_ptFCmdReqBak = (FCMD_REQ_ENTRY *)ulFreeBase;
    COM_MemIncBaseAddr(&ulFreeBase, SUBSYSTEM_LUN_NUM * sizeof(FCMD_REQ_ENTRY));
400a7fbc:	218b      	addi.n	a2, a1, 8
400a7fbe:	ea1f51        	l32r	a5, 400a283c <_mcu2dram_text_start+0x3c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1020
    g_ptFCmdReqBak2 = (FCMD_REQ_ENTRY *)ulFreeBase;
    COM_MemIncBaseAddr(&ulFreeBase, SUBSYSTEM_LUN_NUM * sizeof(FCMD_REQ_ENTRY));
    COM_MemAddr16DWAlign(&ulFreeBase);

    // FCMD_INTR_BAKUP mem    
    g_ptFCmdReqBak = (FCMD_REQ_ENTRY *)ulFreeBase;
400a7fc1:	2148      	l32i.n	a4, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1021
    COM_MemIncBaseAddr(&ulFreeBase, SUBSYSTEM_LUN_NUM * sizeof(FCMD_REQ_ENTRY));
400a7fc3:	e538      	l32i.n	a3, a5, 56
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1020
    g_ptFCmdReqBak2 = (FCMD_REQ_ENTRY *)ulFreeBase;
    COM_MemIncBaseAddr(&ulFreeBase, SUBSYSTEM_LUN_NUM * sizeof(FCMD_REQ_ENTRY));
    COM_MemAddr16DWAlign(&ulFreeBase);

    // FCMD_INTR_BAKUP mem    
    g_ptFCmdReqBak = (FCMD_REQ_ENTRY *)ulFreeBase;
400a7fc5:	206542        	s32i	a4, a5, 128
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1021
    COM_MemIncBaseAddr(&ulFreeBase, SUBSYSTEM_LUN_NUM * sizeof(FCMD_REQ_ENTRY));
400a7fc8:	903330        	addx2	a3, a3, a3
400a7fcb:	1133c0        	slli	a3, a3, 4
400a7fce:	eac301        	l32r	a0, 400a2adc <_mcu2dram_text_start+0x2dc>
400a7fd1:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1022
    COM_MemAddr16DWAlign(&ulFreeBase);
400a7fd4:	218b      	addi.n	a2, a1, 8
400a7fd6:	eac001        	l32r	a0, 400a2ad8 <_mcu2dram_text_start+0x2d8>
400a7fd9:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1025

    g_ptFCmdIntrDptrBak = (FCMD_INTR_DPTR *)ulFreeBase;
    COM_MemIncBaseAddr(&ulFreeBase, FCMD_INTR_DPTR_SZ_BAK);
400a7fdc:	218b      	addi.n	a2, a1, 8
400a7fde:	ea1751        	l32r	a5, 400a283c <_mcu2dram_text_start+0x3c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1024
    // FCMD_INTR_BAKUP mem    
    g_ptFCmdReqBak = (FCMD_REQ_ENTRY *)ulFreeBase;
    COM_MemIncBaseAddr(&ulFreeBase, SUBSYSTEM_LUN_NUM * sizeof(FCMD_REQ_ENTRY));
    COM_MemAddr16DWAlign(&ulFreeBase);

    g_ptFCmdIntrDptrBak = (FCMD_INTR_DPTR *)ulFreeBase;
400a7fe1:	2148      	l32i.n	a4, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1025
    COM_MemIncBaseAddr(&ulFreeBase, FCMD_INTR_DPTR_SZ_BAK);
400a7fe3:	e538      	l32i.n	a3, a5, 56
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1024
    // FCMD_INTR_BAKUP mem    
    g_ptFCmdReqBak = (FCMD_REQ_ENTRY *)ulFreeBase;
    COM_MemIncBaseAddr(&ulFreeBase, SUBSYSTEM_LUN_NUM * sizeof(FCMD_REQ_ENTRY));
    COM_MemAddr16DWAlign(&ulFreeBase);

    g_ptFCmdIntrDptrBak = (FCMD_INTR_DPTR *)ulFreeBase;
400a7fe5:	1f6542        	s32i	a4, a5, 124
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1025
    COM_MemIncBaseAddr(&ulFreeBase, FCMD_INTR_DPTR_SZ_BAK);
400a7fe8:	1133e0        	slli	a3, a3, 2
400a7feb:	eabc01        	l32r	a0, 400a2adc <_mcu2dram_text_start+0x2dc>
400a7fee:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1026
    COM_MemAddr16DWAlign(&ulFreeBase);
400a7ff1:	218b      	addi.n	a2, a1, 8
400a7ff3:	eab901        	l32r	a0, 400a2ad8 <_mcu2dram_text_start+0x2d8>
400a7ff6:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1029
   
    g_ptFCmdIntrCtrlBak = (FCMD_INTR_CTRL *)ulFreeBase;
    COM_MemIncBaseAddr(&ulFreeBase, FCMD_INTR_CTRL_SZ_BAK);
400a7ff9:	218b      	addi.n	a2, a1, 8
400a7ffb:	ea1051        	l32r	a5, 400a283c <_mcu2dram_text_start+0x3c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1028

    g_ptFCmdIntrDptrBak = (FCMD_INTR_DPTR *)ulFreeBase;
    COM_MemIncBaseAddr(&ulFreeBase, FCMD_INTR_DPTR_SZ_BAK);
    COM_MemAddr16DWAlign(&ulFreeBase);
   
    g_ptFCmdIntrCtrlBak = (FCMD_INTR_CTRL *)ulFreeBase;
400a7ffe:	2148      	l32i.n	a4, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1029
    COM_MemIncBaseAddr(&ulFreeBase, FCMD_INTR_CTRL_SZ_BAK);
400a8000:	e538      	l32i.n	a3, a5, 56
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1028

    g_ptFCmdIntrDptrBak = (FCMD_INTR_DPTR *)ulFreeBase;
    COM_MemIncBaseAddr(&ulFreeBase, FCMD_INTR_DPTR_SZ_BAK);
    COM_MemAddr16DWAlign(&ulFreeBase);
   
    g_ptFCmdIntrCtrlBak = (FCMD_INTR_CTRL *)ulFreeBase;
400a8002:	1b6542        	s32i	a4, a5, 108
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1029
    COM_MemIncBaseAddr(&ulFreeBase, FCMD_INTR_CTRL_SZ_BAK);
400a8005:	a03330        	addx4	a3, a3, a3
400a8008:	1133b0        	slli	a3, a3, 5
400a800b:	eab401        	l32r	a0, 400a2adc <_mcu2dram_text_start+0x2dc>
400a800e:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1030
    COM_MemAddr16DWAlign(&ulFreeBase);
400a8011:	218b      	addi.n	a2, a1, 8
400a8013:	eab101        	l32r	a0, 400a2ad8 <_mcu2dram_text_start+0x2d8>
400a8016:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1033

    g_ptFCmdIntrErrHBak = (FCMD_INTR_ERRH *)ulFreeBase;
    COM_MemIncBaseAddr(&ulFreeBase, FCMD_INTR_ERRH_SZ_BAK);
400a8019:	218b      	addi.n	a2, a1, 8
400a801b:	ea0851        	l32r	a5, 400a283c <_mcu2dram_text_start+0x3c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1032
   
    g_ptFCmdIntrCtrlBak = (FCMD_INTR_CTRL *)ulFreeBase;
    COM_MemIncBaseAddr(&ulFreeBase, FCMD_INTR_CTRL_SZ_BAK);
    COM_MemAddr16DWAlign(&ulFreeBase);

    g_ptFCmdIntrErrHBak = (FCMD_INTR_ERRH *)ulFreeBase;
400a801e:	2148      	l32i.n	a4, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1033
    COM_MemIncBaseAddr(&ulFreeBase, FCMD_INTR_ERRH_SZ_BAK);
400a8020:	e538      	l32i.n	a3, a5, 56
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1032
   
    g_ptFCmdIntrCtrlBak = (FCMD_INTR_CTRL *)ulFreeBase;
    COM_MemIncBaseAddr(&ulFreeBase, FCMD_INTR_CTRL_SZ_BAK);
    COM_MemAddr16DWAlign(&ulFreeBase);

    g_ptFCmdIntrErrHBak = (FCMD_INTR_ERRH *)ulFreeBase;
400a8022:	1d6542        	s32i	a4, a5, 116
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1033
    COM_MemIncBaseAddr(&ulFreeBase, FCMD_INTR_ERRH_SZ_BAK);
400a8025:	a03330        	addx4	a3, a3, a3
400a8028:	1133c0        	slli	a3, a3, 4
400a802b:	eaac01        	l32r	a0, 400a2adc <_mcu2dram_text_start+0x2dc>
400a802e:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1034
    COM_MemAddr16DWAlign(&ulFreeBase);
400a8031:	218b      	addi.n	a2, a1, 8
400a8033:	eaa901        	l32r	a0, 400a2ad8 <_mcu2dram_text_start+0x2d8>
400a8036:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1038

    // RED Mem
    l_aExtHSpareTmp = (U32 *)ulFreeBase;
    COM_MemIncBaseAddr(&ulFreeBase, SUBSYSTEM_LUN_NUM*PG_PER_SLC_BLK*PG_PER_WL*sizeof(U32));
400a8039:	218b      	addi.n	a2, a1, 8
400a803b:	ea0051        	l32r	a5, 400a283c <_mcu2dram_text_start+0x3c>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1037
    g_ptFCmdIntrErrHBak = (FCMD_INTR_ERRH *)ulFreeBase;
    COM_MemIncBaseAddr(&ulFreeBase, FCMD_INTR_ERRH_SZ_BAK);
    COM_MemAddr16DWAlign(&ulFreeBase);

    // RED Mem
    l_aExtHSpareTmp = (U32 *)ulFreeBase;
400a803e:	2148      	l32i.n	a4, a1, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1038
    COM_MemIncBaseAddr(&ulFreeBase, SUBSYSTEM_LUN_NUM*PG_PER_SLC_BLK*PG_PER_WL*sizeof(U32));
400a8040:	e538      	l32i.n	a3, a5, 56
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1037
    g_ptFCmdIntrErrHBak = (FCMD_INTR_ERRH *)ulFreeBase;
    COM_MemIncBaseAddr(&ulFreeBase, FCMD_INTR_ERRH_SZ_BAK);
    COM_MemAddr16DWAlign(&ulFreeBase);

    // RED Mem
    l_aExtHSpareTmp = (U32 *)ulFreeBase;
400a8042:	236542        	s32i	a4, a5, 140
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1038
    COM_MemIncBaseAddr(&ulFreeBase, SUBSYSTEM_LUN_NUM*PG_PER_SLC_BLK*PG_PER_WL*sizeof(U32));
400a8045:	903330        	addx2	a3, a3, a3
400a8048:	113350        	slli	a3, a3, 11
400a804b:	eaa401        	l32r	a0, 400a2adc <_mcu2dram_text_start+0x2dc>
400a804e:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1039
    COM_MemZero(l_aExtHSpareTmp, SUBSYSTEM_LUN_NUM*PG_PER_SLC_BLK*PG_PER_WL);
400a8051:	e9fa21        	l32r	a2, 400a283c <_mcu2dram_text_start+0x3c>
400a8054:	e238      	l32i.n	a3, a2, 56
400a8056:	232222        	l32i	a2, a2, 140
400a8059:	903330        	addx2	a3, a3, a3
400a805c:	113370        	slli	a3, a3, 9
400a805f:	ea3a01        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a8062:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1040
    COM_MemAddr16DWAlign(&ulFreeBase);
400a8065:	218b      	addi.n	a2, a1, 8
400a8067:	ea9c01        	l32r	a0, 400a2ad8 <_mcu2dram_text_start+0x2d8>
400a806a:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1042
        
    ASSERT(ulFreeBase-DRAM_DATA_BUFF_MCU2_BASE < DATA_BUFF_MCU2_SIZE);
400a806d:	e9f301        	l32r	a0, 400a283c <_mcu2dram_text_start+0x3c>
400a8070:	0028      	l32i.n	a2, a0, 0
400a8072:	eab7d1        	l32r	a13, 400a2b50 <_mcu2dram_text_start+0x350>
400a8075:	0228      	l32i.n	a2, a2, 0
400a8077:	1008      	l32i.n	a0, a0, 4
400a8079:	32da      	add.n	a3, a2, a13
400a807b:	023307        	bltu	a3, a0, 400a8081 <L3_AllocMem..FE_1482204275+0x1cd>
400a807e:	002186        	j	400a8108 <L3_AllocMem..FE_1482204275+0x254>
400a8081:	eab5e1        	l32r	a14, 400a2b58 <_mcu2dram_text_start+0x358>
400a8084:	eab451        	l32r	a5, 400a2b54 <_mcu2dram_text_start+0x354>
400a8087:	c04020        	sub	a4, a0, a2
400a808a:	2108      	l32i.n	a0, a1, 8
400a808c:	445a      	add.n	a4, a4, a5
400a808e:	c03020        	sub	a3, a0, a2
400a8091:	33ea      	add.n	a3, a3, a14
400a8093:	71b347        	bgeu	a3, a4, 400a8108 <L3_AllocMem..FE_1482204275+0x254>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:109
==============================================================================*/
void MCU2_DRAM_TEXT L3_MgrAllcDram(U32 *pFreeDramBase)
{
    U32 ulFreeBase = *pFreeDramBase;

    COM_MemAddr16DWAlign(&ulFreeBase);
400a8096:	21cb      	addi.n	a2, a1, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1043
    *pFreeDramBase = ulFreeBase;
400a8098:	4c09      	s32i.n	a0, a12, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:107
History    : 
    1. 2016.8.15 JasonGuo create function
==============================================================================*/
void MCU2_DRAM_TEXT L3_MgrAllcDram(U32 *pFreeDramBase)
{
    U32 ulFreeBase = *pFreeDramBase;
400a809a:	3109      	s32i.n	a0, a1, 12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:109

    COM_MemAddr16DWAlign(&ulFreeBase);
400a809c:	ea8f01        	l32r	a0, 400a2ad8 <_mcu2dram_text_start+0x2d8>
400a809f:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:111
    l_ulSDLRedMemBase = ulFreeBase;
    COM_MemIncBaseAddr(&ulFreeBase, SDL_RED_NUM * SDL_RED_SIZE);
400a80a2:	21cb      	addi.n	a2, a1, 12
400a80a4:	eab231        	l32r	a3, 400a2b6c <_mcu2dram_text_start+0x36c>
400a80a7:	ea8d01        	l32r	a0, 400a2adc <_mcu2dram_text_start+0x2dc>
400a80aa:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:113
        
    COM_MemAddrPageBoundaryAlign(&ulFreeBase);
400a80ad:	21cb      	addi.n	a2, a1, 12
400a80af:	eab001        	l32r	a0, 400a2b70 <_mcu2dram_text_start+0x370>
400a80b2:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:115
    l_ulSDLBufMemBase = ulFreeBase;
    COM_MemIncBaseAddr(&ulFreeBase, SDL_BUF_NUM * SDL_BUF_SIZE);
400a80b5:	21cb      	addi.n	a2, a1, 12
400a80b7:	eaa431        	l32r	a3, 400a2b48 <_mcu2dram_text_start+0x348>
400a80ba:	ea8801        	l32r	a0, 400a2adc <_mcu2dram_text_start+0x2dc>
400a80bd:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:117
    
    ASSERT(ulFreeBase-DRAM_DATA_BUFF_MCU2_BASE < DATA_BUFF_MCU2_SIZE);
400a80c0:	e9df01        	l32r	a0, 400a283c <_mcu2dram_text_start+0x3c>
400a80c3:	0028      	l32i.n	a2, a0, 0
400a80c5:	0228      	l32i.n	a2, a2, 0
400a80c7:	1008      	l32i.n	a0, a0, 4
400a80c9:	62da      	add.n	a6, a2, a13
400a80cb:	3db607        	bgeu	a6, a0, 400a810c <L3_AllocMem..FE_1482204275+0x258>
400a80ce:	eaa151        	l32r	a5, 400a2b54 <_mcu2dram_text_start+0x354>
400a80d1:	c04020        	sub	a4, a0, a2
400a80d4:	3108      	l32i.n	a0, a1, 12
400a80d6:	445a      	add.n	a4, a4, a5
400a80d8:	c03020        	sub	a3, a0, a2
400a80db:	33ea      	add.n	a3, a3, a14
400a80dd:	2bb347        	bgeu	a3, a4, 400a810c <L3_AllocMem..FE_1482204275+0x258>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Init.c:109
History    : 
    1. 2016.7.27 JasonGuo create function
==============================================================================*/
void MCU2_DRAM_TEXT L3_SharedMemMap(SUBSYSTEM_MEM_BASE *pFreeMemBase)
{
    L1_SharedMemMap(pFreeMemBase);
400a80e0:	0c2d      	mov.n	a2, a12
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:118
    *pFreeDramBase = ulFreeBase;
400a80e2:	4c09      	s32i.n	a0, a12, 16
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Init.c:109
400a80e4:	eaa401        	l32r	a0, 400a2b74 <_mcu2dram_text_start+0x374>
400a80e7:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Init.c:111

    L2_SharedMemMap(pFreeMemBase);
400a80ea:	0c2d      	mov.n	a2, a12
400a80ec:	eaa301        	l32r	a0, 400a2b78 <_mcu2dram_text_start+0x378>
400a80ef:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Init.c:134

    L3_AllocDRAM(&pFreeMemBase->ulDRAMBase);

    L3_SharedMemMap(pFreeMemBase);

    return;
400a80f2:	51c8      	l32i.n	a12, a1, 20
400a80f4:	61d8      	l32i.n	a13, a1, 24
400a80f6:	71e8      	l32i.n	a14, a1, 28
400a80f8:	4108      	l32i.n	a0, a1, 16
400a80fa:	20c112        	addi	a1, a1, 32
400a80fd:	f00d      	ret.n

400a80ff <L3_AllocMem..FE_1482204275+0x24b>:
	...

400a8100 <L3_AllocMem..FE_1482204275+0x24c>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FCMDQ.c:192
    g_ptFCmdIntrCtrl = (FCMD_INTR_CTRL *)ulFreeBase;
    COM_MemIncBaseAddr(&ulFreeBase, FCMD_INTR_CTRL_SZ);
    COM_MemAddr16DWAlign(&ulFreeBase);
        
    DBG_Printf("L3: FCMDQAllcSRAM0 %dKB, -> %dKB -> totalSRAM0 %dKB\n", (ulFreeBase - *pFreeSram0Base) / 1024, (ulFreeBase - DSRAM0_MCU2_BASE) / 1024, DSRAM0_MCU2_MAX_SIZE / 1024);
    ASSERT(ulFreeBase-DSRAM0_MCU2_BASE < DSRAM0_MCU2_MAX_SIZE);
400a8100:	ffff06        	j	400a8100 <L3_AllocMem..FE_1482204275+0x24c>

400a8103 <L3_AllocMem..FE_1482204275+0x24f>:
	...

400a8104 <L3_AllocMem..FE_1482204275+0x250>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:76
    l_ptFMIntrMgr = (FM_INTR_ITEM *)ulFreeBase;
    COM_MemIncBaseAddr(&ulFreeBase, FM_INTR_TOT_SZ);
    COM_MemAddr16DWAlign(&ulFreeBase);
    
    DBG_Printf("L3: FMAllcSRAM0 %dKB, -> %dKB -> totalSRAM0 %dKB\n", (ulFreeBase - *pFreeSram0Base) / 1024, (ulFreeBase - DSRAM0_MCU2_BASE) / 1024, DSRAM0_MCU2_MAX_SIZE / 1024);
    ASSERT(ulFreeBase-DSRAM0_MCU2_BASE < DSRAM0_MCU2_MAX_SIZE);
400a8104:	ffff06        	j	400a8104 <L3_AllocMem..FE_1482204275+0x250>

400a8107 <L3_AllocMem..FE_1482204275+0x253>:
	...

400a8108 <L3_AllocMem..FE_1482204275+0x254>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_ErrHExtend.c:1042
    l_aExtHSpareTmp = (U32 *)ulFreeBase;
    COM_MemIncBaseAddr(&ulFreeBase, SUBSYSTEM_LUN_NUM*PG_PER_SLC_BLK*PG_PER_WL*sizeof(U32));
    COM_MemZero(l_aExtHSpareTmp, SUBSYSTEM_LUN_NUM*PG_PER_SLC_BLK*PG_PER_WL);
    COM_MemAddr16DWAlign(&ulFreeBase);
        
    ASSERT(ulFreeBase-DRAM_DATA_BUFF_MCU2_BASE < DATA_BUFF_MCU2_SIZE);
400a8108:	ffff06        	j	400a8108 <L3_AllocMem..FE_1482204275+0x254>

400a810b <L3_AllocMem..FE_1482204275+0x257>:
	...

400a810c <L3_AllocMem..FE_1482204275+0x258>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_BufMgr.c:117
        
    COM_MemAddrPageBoundaryAlign(&ulFreeBase);
    l_ulSDLBufMemBase = ulFreeBase;
    COM_MemIncBaseAddr(&ulFreeBase, SDL_BUF_NUM * SDL_BUF_SIZE);
    
    ASSERT(ulFreeBase-DRAM_DATA_BUFF_MCU2_BASE < DATA_BUFF_MCU2_SIZE);
400a810c:	ffff06        	j	400a810c <L3_AllocMem..FE_1482204275+0x258>

400a810f <L3_AllocMem..FE_1482204275+0x25b>:
	...

400a8110 <DBG_Getch>:
DBG_Getch():
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:86
Description :Recording context and pending MCU when a fatal error is encountered.
Others      :
Modify      :
****************************************************************************/
void MCU12_DRAM_TEXT DBG_Getch()
{
400a8110:	f0c112        	addi	a1, a1, -16
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a8113:	03eb30        	rsr.prid	a3
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_Debug.c:89
    U32 ulMcuId = HAL_GetMcuId();

    DBG_Printf("Fatal Error, MCU %d DBG_Getch!!!\n", ulMcuId);  while(1);
400a8116:	ea9921        	l32r	a2, 400a2b7c <_mcu2dram_text_start+0x37c>
400a8119:	e9c701        	l32r	a0, 400a2838 <_mcu2dram_text_start+0x38>
400a811c:	0000c0        	callx0	a0

400a811f <DBG_Getch+0xf>:
400a811f:	ffff06        	j	400a811f <DBG_Getch+0xf>

400a8122 <DBG_Getch+0x12>:
	...

400a8124 <HAL_LdpcSInit>:
HAL_LdpcSInit():
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcSoftDec.c:56
Usage      : 
History    : 
    1. 2016.01.21 MapleXu create function
==============================================================================*/
void MCU2_DRAM_TEXT HAL_LdpcSInit(void)
{
400a8124:	ea9771        	l32r	a7, 400a2b80 <_mcu2dram_text_start+0x380>
400a8127:	ea9731        	l32r	a3, 400a2b84 <_mcu2dram_text_start+0x384>
400a812a:	f0c112        	addi	a1, a1, -16
400a812d:	ea9661        	l32r	a6, 400a2b88 <_mcu2dram_text_start+0x388>
400a8130:	0109      	s32i.n	a0, a1, 0
400a8132:	ea9601        	l32r	a0, 400a2b8c <_mcu2dram_text_start+0x38c>
400a8135:	ea96b1        	l32r	a11, 400a2b90 <_mcu2dram_text_start+0x390>
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcSoftDec.c:57
    pSoftMcu1CfgReg = (volatile SOFT_MCU1_CFG_REG *)LDPC_SOFT_MCU1_CFG_REG_BASE;
400a8138:	7e60b2        	s32i	a11, a0, 0x1f8
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcSoftDec.c:58
    pSoftMcu2CfgReg = (volatile SOFT_MCU2_CFG_REG *)LDPC_SOFT_MCU2_CFG_REG_BASE;
400a813b:	7f6062        	s32i	a6, a0, 0x1fc
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcSoftDec.c:59
    pSoftIntStsReg  = (volatile SOFT_INT_STS_REG  *)LDPC_SOFT_INT_STS_REG;
400a813e:	806032        	s32i	a3, a0, 0x200
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcSoftDec.c:56
Usage      : 
History    : 
    1. 2016.01.21 MapleXu create function
==============================================================================*/
void MCU2_DRAM_TEXT HAL_LdpcSInit(void)
{
400a8141:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcSoftDec.c:61
    pSoftMcu1CfgReg = (volatile SOFT_MCU1_CFG_REG *)LDPC_SOFT_MCU1_CFG_REG_BASE;
    pSoftMcu2CfgReg = (volatile SOFT_MCU2_CFG_REG *)LDPC_SOFT_MCU2_CFG_REG_BASE;
    pSoftIntStsReg  = (volatile SOFT_INT_STS_REG  *)LDPC_SOFT_INT_STS_REG;

    pSoftMcu1CfgReg->bsRDesAddrBase1 = LDPC_SOFT_RDESADDR_BASE1;
400a8143:	00ac42        	movi	a4, 0xfffffc00
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcSoftDec.c:67
    pSoftMcu1CfgReg->bsWptr1 = 0;
    pSoftMcu1CfgReg->bsIntEn = FALSE;
    pSoftMcu1CfgReg->bsSoftMaxIter = LDPC_SOFT_DEC_MAX_ITER;
    pSoftMcu1CfgReg->bsBothMcuMode = LDPC_SOFT_DEC_BOTH_MCU_MODE;

    pSoftMcu2CfgReg->bsRDesAddrBase2 = (pSoftMcu1CfgReg->bsBothMcuMode) 
400a8146:	029d      	mov.n	a9, a2
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcSoftDec.c:61
{
    pSoftMcu1CfgReg = (volatile SOFT_MCU1_CFG_REG *)LDPC_SOFT_MCU1_CFG_REG_BASE;
    pSoftMcu2CfgReg = (volatile SOFT_MCU2_CFG_REG *)LDPC_SOFT_MCU2_CFG_REG_BASE;
    pSoftIntStsReg  = (volatile SOFT_INT_STS_REG  *)LDPC_SOFT_INT_STS_REG;

    pSoftMcu1CfgReg->bsRDesAddrBase1 = LDPC_SOFT_RDESADDR_BASE1;
400a8148:	0020c0        	memw
400a814b:	0ba8      	l32i.n	a10, a11, 0
400a814d:	10aa40        	and	a10, a10, a4
400a8150:	0020c0        	memw
400a8153:	0ba9      	s32i.n	a10, a11, 0
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcSoftDec.c:62
    pSoftMcu1CfgReg->bsWptr1 = 0;
400a8155:	0020c0        	memw
400a8158:	0b88      	l32i.n	a8, a11, 0
400a815a:	108870        	and	a8, a8, a7
400a815d:	0020c0        	memw
400a8160:	0b89      	s32i.n	a8, a11, 0
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcSoftDec.c:63
    pSoftMcu1CfgReg->bsIntEn = FALSE;
400a8162:	ea8c51        	l32r	a5, 400a2b94 <_mcu2dram_text_start+0x394>
400a8165:	0020c0        	memw
400a8168:	0b48      	l32i.n	a4, a11, 0
400a816a:	104450        	and	a4, a4, a5
400a816d:	0020c0        	memw
400a8170:	0b49      	s32i.n	a4, a11, 0
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcSoftDec.c:64
    pSoftMcu1CfgReg->bsSoftMaxIter = LDPC_SOFT_DEC_MAX_ITER;
400a8172:	ea8981        	l32r	a8, 400a2b98 <_mcu2dram_text_start+0x398>
400a8175:	ea89a1        	l32r	a10, 400a2b9c <_mcu2dram_text_start+0x39c>
400a8178:	0020c0        	memw
400a817b:	0b58      	l32i.n	a5, a11, 0
400a817d:	1055a0        	and	a5, a5, a10
400a8180:	205580        	or	a5, a5, a8
400a8183:	0020c0        	memw
400a8186:	0b59      	s32i.n	a5, a11, 0
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcSoftDec.c:65
    pSoftMcu1CfgReg->bsBothMcuMode = LDPC_SOFT_DEC_BOTH_MCU_MODE;
400a8188:	0020c0        	memw
400a818b:	0b48      	l32i.n	a4, a11, 0
400a818d:	e20424        	insbits	a2, a4, 0, 30
400a8190:	0020c0        	memw
400a8193:	0b29      	s32i.n	a2, a11, 0
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcSoftDec.c:67

    pSoftMcu2CfgReg->bsRDesAddrBase2 = (pSoftMcu1CfgReg->bsBothMcuMode) 
400a8195:	0020c0        	memw
400a8198:	0bb8      	l32i.n	a11, a11, 0
400a819a:	00a2a2        	movi	a10, 0x200
400a819d:	05bfb0        	extui	a11, a11, 31, 1
400a81a0:	939ab0        	movnez	a9, a10, a11
400a81a3:	0020c0        	memw
400a81a6:	0688      	l32i.n	a8, a6, 0
400a81a8:	410984        	insbits	a8, a9, 0, 9
400a81ab:	0020c0        	memw
400a81ae:	0689      	s32i.n	a8, a6, 0
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcSoftDec.c:69
                     ? LDPC_SOFT_RDESADDR_BASE2 : LDPC_SOFT_RDESADDR_BASE1;
    pSoftMcu2CfgReg->bsWptr2 = 0;
400a81b0:	0020c0        	memw
400a81b3:	0658      	l32i.n	a5, a6, 0
400a81b5:	105570        	and	a5, a5, a7
400a81b8:	0020c0        	memw
400a81bb:	0659      	s32i.n	a5, a6, 0
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcSoftDec.c:71

    pSoftIntStsReg->bsSoftDecIntSts = 0;
400a81bd:	c47c      	movi.n	a4, -4
400a81bf:	0020c0        	memw
400a81c2:	002322        	l32i	a2, a3, 0
400a81c5:	102240        	and	a2, a2, a4
400a81c8:	0020c0        	memw
400a81cb:	006322        	s32i	a2, a3, 0
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcSoftDec.c:75

    /* Descriptor base addr */
    g_pSoftDesc = (volatile DESCRIPTOR *) LDPC_SOFT_DESC_BASE_ADDR;
    COM_MemZero((U32 *)g_pSoftDesc, sizeof(DESCRIPTOR)>>2);
400a81ce:	00a132        	movi	a3, 0x100
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcSoftDec.c:74
    pSoftMcu2CfgReg->bsWptr2 = 0;

    pSoftIntStsReg->bsSoftDecIntSts = 0;

    /* Descriptor base addr */
    g_pSoftDesc = (volatile DESCRIPTOR *) LDPC_SOFT_DESC_BASE_ADDR;
400a81d1:	ea7321        	l32r	a2, 400a2ba0 <_mcu2dram_text_start+0x3a0>
400a81d4:	816022        	s32i	a2, a0, 0x204
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcSoftDec.c:75
    COM_MemZero((U32 *)g_pSoftDesc, sizeof(DESCRIPTOR)>>2);
400a81d7:	e9dc01        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a81da:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcSoftDec.c:77
    
    COM_MemZero((U32 *)g_aCodeWordSegment, sizeof(g_aCodeWordSegment)>>2);
400a81dd:	ea7121        	l32r	a2, 400a2ba4 <_mcu2dram_text_start+0x3a4>
400a81e0:	430c      	movi.n	a3, 4
400a81e2:	e9d901        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a81e5:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcSoftDec.c:79

    return;
400a81e8:	0108      	l32i.n	a0, a1, 0
400a81ea:	10c112        	addi	a1, a1, 16
400a81ed:	f00d      	ret.n

400a81ef <HAL_LdpcSInit+0xcb>:
	...

400a81f0 <HAL_LdpcDownloadHMatix>:
HAL_LdpcDownloadHMatix():
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:293
    FW call this function to Download H Matix in the initialization.
History:
    20151228    abby    create
------------------------------------------------------------------------------*/
 void MCU2_DRAM_TEXT HAL_LdpcDownloadHMatix(void)
 {
400a81f0:	ea7061        	l32r	a6, 400a2bb0 <_mcu2dram_text_start+0x3b0>
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:199
{
    l_aMatPara[0].bsCodeLen = 417;
    l_aMatPara[0].bsCodeStaAddr = (U32)LdpcMatParaAddr;

    l_aMatPara[1].bsCodeLen = 1224;
    l_aMatPara[1].bsCodeStaAddr = (U32)LdpcMatParaAddr + (ENC1_MAT_NUM<<2);
400a81f3:	ea6ea1        	l32r	a10, 400a2bac <_mcu2dram_text_start+0x3ac>
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:196
    20151221    abby    create
------------------------------------------------------------------------------*/
void MCU2_DRAM_TEXT HAL_LdpcMatParaInit(void)
{
    l_aMatPara[0].bsCodeLen = 417;
    l_aMatPara[0].bsCodeStaAddr = (U32)LdpcMatParaAddr;
400a81f6:	ea6f41        	l32r	a4, 400a2bb4 <_mcu2dram_text_start+0x3b4>
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:293
    FW call this function to Download H Matix in the initialization.
History:
    20151228    abby    create
------------------------------------------------------------------------------*/
 void MCU2_DRAM_TEXT HAL_LdpcDownloadHMatix(void)
 {
400a81f9:	ea6b31        	l32r	a3, 400a2ba8 <_mcu2dram_text_start+0x3a8>
400a81fc:	f0c112        	addi	a1, a1, -16
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:202

    l_aMatPara[1].bsCodeLen = 1224;
    l_aMatPara[1].bsCodeStaAddr = (U32)LdpcMatParaAddr + (ENC1_MAT_NUM<<2);

    l_aMatPara[2].bsCodeLen = 468;
    l_aMatPara[2].bsCodeStaAddr = (U32)LdpcMatParaAddr + ((ENC1_MAT_NUM + ENC2_MAT_NUM)<<2);
400a81ff:	ea6e21        	l32r	a2, 400a2bb8 <_mcu2dram_text_start+0x3b8>
400a8202:	0109      	s32i.n	a0, a1, 0
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:296
------------------------------------------------------------------------------*/
 void MCU2_DRAM_TEXT HAL_LdpcDownloadHMatix(void)
 {
    U32 ulRamIndex = 1;
    volatile DL_MAT_COFG_REG *pDlMatConfReg = (volatile DL_MAT_COFG_REG *)LDPC_H_MAT_CFG_REG_BASE;
    g_pCodeStaAddr = (volatile U32*)LDPC_H_MAT_ADDR_REG_BASE;
400a8204:	e98e01        	l32r	a0, 400a283c <_mcu2dram_text_start+0x3c>
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:202

    l_aMatPara[1].bsCodeLen = 1224;
    l_aMatPara[1].bsCodeStaAddr = (U32)LdpcMatParaAddr + (ENC1_MAT_NUM<<2);

    l_aMatPara[2].bsCodeLen = 468;
    l_aMatPara[2].bsCodeStaAddr = (U32)LdpcMatParaAddr + ((ENC1_MAT_NUM + ENC2_MAT_NUM)<<2);
400a8207:	816322        	s32i	a2, a3, 0x204
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:195
History:
    20151221    abby    create
------------------------------------------------------------------------------*/
void MCU2_DRAM_TEXT HAL_LdpcMatParaInit(void)
{
    l_aMatPara[0].bsCodeLen = 417;
400a820a:	7c2392        	l32i	a9, a3, 0x1f0
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:204
    l_aMatPara[1].bsCodeStaAddr = (U32)LdpcMatParaAddr + (ENC1_MAT_NUM<<2);

    l_aMatPara[2].bsCodeLen = 468;
    l_aMatPara[2].bsCodeStaAddr = (U32)LdpcMatParaAddr + ((ENC1_MAT_NUM + ENC2_MAT_NUM)<<2);

    l_aMatPara[3].bsCodeLen = 775;
400a820d:	822352        	l32i	a5, a3, 0x208
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:201
    l_aMatPara[0].bsCodeStaAddr = (U32)LdpcMatParaAddr;

    l_aMatPara[1].bsCodeLen = 1224;
    l_aMatPara[1].bsCodeStaAddr = (U32)LdpcMatParaAddr + (ENC1_MAT_NUM<<2);

    l_aMatPara[2].bsCodeLen = 468;
400a8210:	802372        	l32i	a7, a3, 0x200
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:198
void MCU2_DRAM_TEXT HAL_LdpcMatParaInit(void)
{
    l_aMatPara[0].bsCodeLen = 417;
    l_aMatPara[0].bsCodeStaAddr = (U32)LdpcMatParaAddr;

    l_aMatPara[1].bsCodeLen = 1224;
400a8213:	7e2382        	l32i	a8, a3, 0x1f8
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:196
    20151221    abby    create
------------------------------------------------------------------------------*/
void MCU2_DRAM_TEXT HAL_LdpcMatParaInit(void)
{
    l_aMatPara[0].bsCodeLen = 417;
    l_aMatPara[0].bsCodeStaAddr = (U32)LdpcMatParaAddr;
400a8216:	7d6342        	s32i	a4, a3, 0x1f4
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:199

    l_aMatPara[1].bsCodeLen = 1224;
    l_aMatPara[1].bsCodeStaAddr = (U32)LdpcMatParaAddr + (ENC1_MAT_NUM<<2);
400a8219:	7f63a2        	s32i	a10, a3, 0x1fc
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:301
    g_pCodeStaAddr = (volatile U32*)LDPC_H_MAT_ADDR_REG_BASE;

    HAL_LdpcMatParaInit();

    /*  0: default 1/2: encoder matrix 3:OTF & Soft decoder 4:Soft decoder & Hard+ decoder  */
    for (ulRamIndex = ENCODE_RAM1; ulRamIndex < LDPC_MAT_CNT; ulRamIndex++)
400a821c:	140c      	movi.n	a4, 1
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:205

    l_aMatPara[2].bsCodeLen = 468;
    l_aMatPara[2].bsCodeStaAddr = (U32)LdpcMatParaAddr + ((ENC1_MAT_NUM + ENC2_MAT_NUM)<<2);

    l_aMatPara[3].bsCodeLen = 775;
    l_aMatPara[3].bsCodeStaAddr = (U32)LdpcMatParaAddr + ((ENC1_MAT_NUM + ENC2_MAT_NUM + OTF_MAT_NUM)<<2);//DRAM_CODE4_BASE_ADDR;
400a821e:	35daa2        	addmi	a10, a10, 0x3500
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:198
void MCU2_DRAM_TEXT HAL_LdpcMatParaInit(void)
{
    l_aMatPara[0].bsCodeLen = 417;
    l_aMatPara[0].bsCodeStaAddr = (U32)LdpcMatParaAddr;

    l_aMatPara[1].bsCodeLen = 1224;
400a8221:	108860        	and	a8, a8, a6
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:201
    l_aMatPara[1].bsCodeStaAddr = (U32)LdpcMatParaAddr + (ENC1_MAT_NUM<<2);

    l_aMatPara[2].bsCodeLen = 468;
400a8224:	107760        	and	a7, a7, a6
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:204
    l_aMatPara[2].bsCodeStaAddr = (U32)LdpcMatParaAddr + ((ENC1_MAT_NUM + ENC2_MAT_NUM)<<2);

    l_aMatPara[3].bsCodeLen = 775;
400a8227:	105560        	and	a5, a5, a6
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:205
    l_aMatPara[3].bsCodeStaAddr = (U32)LdpcMatParaAddr + ((ENC1_MAT_NUM + ENC2_MAT_NUM + OTF_MAT_NUM)<<2);//DRAM_CODE4_BASE_ADDR;
400a822a:	8363a2        	s32i	a10, a3, 0x20c
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:195
History:
    20151221    abby    create
------------------------------------------------------------------------------*/
void MCU2_DRAM_TEXT HAL_LdpcMatParaInit(void)
{
    l_aMatPara[0].bsCodeLen = 417;
400a822d:	109960        	and	a9, a9, a6
400a8230:	a1a1a2        	movi	a10, 0x1a1
400a8233:	2099a0        	or	a9, a9, a10
400a8236:	7c6392        	s32i	a9, a3, 0x1f0
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:198
    l_aMatPara[0].bsCodeStaAddr = (U32)LdpcMatParaAddr;

    l_aMatPara[1].bsCodeLen = 1224;
400a8239:	c8a492        	movi	a9, 0x4c8
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:204
    l_aMatPara[1].bsCodeStaAddr = (U32)LdpcMatParaAddr + (ENC1_MAT_NUM<<2);

    l_aMatPara[2].bsCodeLen = 468;
    l_aMatPara[2].bsCodeStaAddr = (U32)LdpcMatParaAddr + ((ENC1_MAT_NUM + ENC2_MAT_NUM)<<2);

    l_aMatPara[3].bsCodeLen = 775;
400a823c:	07a362        	movi	a6, 0x307
400a823f:	205560        	or	a5, a5, a6
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:198
void MCU2_DRAM_TEXT HAL_LdpcMatParaInit(void)
{
    l_aMatPara[0].bsCodeLen = 417;
    l_aMatPara[0].bsCodeStaAddr = (U32)LdpcMatParaAddr;

    l_aMatPara[1].bsCodeLen = 1224;
400a8242:	208890        	or	a8, a8, a9
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:301
    g_pCodeStaAddr = (volatile U32*)LDPC_H_MAT_ADDR_REG_BASE;

    HAL_LdpcMatParaInit();

    /*  0: default 1/2: encoder matrix 3:OTF & Soft decoder 4:Soft decoder & Hard+ decoder  */
    for (ulRamIndex = ENCODE_RAM1; ulRamIndex < LDPC_MAT_CNT; ulRamIndex++)
400a8245:	ea4161        	l32r	a6, 400a2b4c <_mcu2dram_text_start+0x34c>
400a8248:	e97c      	movi.n	a9, -2
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:204
    l_aMatPara[1].bsCodeStaAddr = (U32)LdpcMatParaAddr + (ENC1_MAT_NUM<<2);

    l_aMatPara[2].bsCodeLen = 468;
    l_aMatPara[2].bsCodeStaAddr = (U32)LdpcMatParaAddr + ((ENC1_MAT_NUM + ENC2_MAT_NUM)<<2);

    l_aMatPara[3].bsCodeLen = 775;
400a824a:	826352        	s32i	a5, a3, 0x208
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:198
void MCU2_DRAM_TEXT HAL_LdpcMatParaInit(void)
{
    l_aMatPara[0].bsCodeLen = 417;
    l_aMatPara[0].bsCodeStaAddr = (U32)LdpcMatParaAddr;

    l_aMatPara[1].bsCodeLen = 1224;
400a824d:	7e6382        	s32i	a8, a3, 0x1f8
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:301
    g_pCodeStaAddr = (volatile U32*)LDPC_H_MAT_ADDR_REG_BASE;

    HAL_LdpcMatParaInit();

    /*  0: default 1/2: encoder matrix 3:OTF & Soft decoder 4:Soft decoder & Hard+ decoder  */
    for (ulRamIndex = ENCODE_RAM1; ulRamIndex < LDPC_MAT_CNT; ulRamIndex++)
400a8250:	ea5c51        	l32r	a5, 400a2bc0 <_mcu2dram_text_start+0x3c0>
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:201
    l_aMatPara[0].bsCodeStaAddr = (U32)LdpcMatParaAddr;

    l_aMatPara[1].bsCodeLen = 1224;
    l_aMatPara[1].bsCodeStaAddr = (U32)LdpcMatParaAddr + (ENC1_MAT_NUM<<2);

    l_aMatPara[2].bsCodeLen = 468;
400a8253:	d4a182        	movi	a8, 0x1d4
400a8256:	207780        	or	a7, a7, a8
400a8259:	806372        	s32i	a7, a3, 0x200
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:301
    g_pCodeStaAddr = (volatile U32*)LDPC_H_MAT_ADDR_REG_BASE;

    HAL_LdpcMatParaInit();

    /*  0: default 1/2: encoder matrix 3:OTF & Soft decoder 4:Soft decoder & Hard+ decoder  */
    for (ulRamIndex = ENCODE_RAM1; ulRamIndex < LDPC_MAT_CNT; ulRamIndex++)
400a825c:	180c      	movi.n	a8, 1
400a825e:	ea5931        	l32r	a3, 400a2bc4 <_mcu2dram_text_start+0x3c4>
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:293
    FW call this function to Download H Matix in the initialization.
History:
    20151228    abby    create
------------------------------------------------------------------------------*/
 void MCU2_DRAM_TEXT HAL_LdpcDownloadHMatix(void)
 {
400a8261:	ea5671        	l32r	a7, 400a2bbc <_mcu2dram_text_start+0x3bc>
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:296
    U32 ulRamIndex = 1;
    volatile DL_MAT_COFG_REG *pDlMatConfReg = (volatile DL_MAT_COFG_REG *)LDPC_H_MAT_CFG_REG_BASE;
    g_pCodeStaAddr = (volatile U32*)LDPC_H_MAT_ADDR_REG_BASE;
400a8264:	396072        	s32i	a7, a0, 228
400a8267:	000186        	j	400a8271 <HAL_LdpcDownloadHMatix+0x81>

400a826a <HAL_LdpcDownloadHMatix+0x7a>:
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:301

    HAL_LdpcMatParaInit();

    /*  0: default 1/2: encoder matrix 3:OTF & Soft decoder 4:Soft decoder & Hard+ decoder  */
    for (ulRamIndex = ENCODE_RAM1; ulRamIndex < LDPC_MAT_CNT; ulRamIndex++)
400a826a:	558b      	addi.n	a5, a5, 8
400a826c:	441b      	addi.n	a4, a4, 1
400a826e:	4e5426        	beqi	a4, 5, 400a82c0 <HAL_LdpcDownloadHMatix+0xd0>
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:304
    {
        /*  config H Matrix parameter   */
        pDlMatConfReg->bsHCodeSel = ulRamIndex;
400a8271:	0020c0        	memw
400a8274:	0308      	l32i.n	a0, a3, 0
400a8276:	031404        	insbits	a0, a4, 1, 3
400a8279:	0020c0        	memw
400a827c:	0309      	s32i.n	a0, a3, 0
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:305
        pDlMatConfReg->bsHCodeLen = l_aMatPara[ulRamIndex-1].bsCodeLen;
400a827e:	0020c0        	memw
400a8281:	fe25b2        	l32i	a11, a5, 0x3f8
400a8284:	03a8      	l32i.n	a10, a3, 0
400a8286:	634ba4        	insbits	a10, a11, 4, 15
400a8289:	0020c0        	memw
400a828c:	03a9      	s32i.n	a10, a3, 0
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:306
        *g_pCodeStaAddr = l_aMatPara[ulRamIndex-1].bsCodeStaAddr - DRAM_START_ADDRESS;
400a828e:	ff2522        	l32i	a2, a5, 0x3fc
400a8291:	226a      	add.n	a2, a2, a6
400a8293:	0020c0        	memw
400a8296:	0729      	s32i.n	a2, a7, 0
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:313
        /*  Prepare matrix data into DRAM   */
    #ifdef INIT_MATRIX
        HAL_LdpInitHMatix(ulRamIndex);
    #endif
        /*  Trigger H Matrix download   */
        pDlMatConfReg->bsDlHTrigger = 1;
400a8298:	0020c0        	memw
400a829b:	0308      	l32i.n	a0, a3, 0
400a829d:	100090        	and	a0, a0, a9
400a82a0:	200080        	or	a0, a0, a8
400a82a3:	0020c0        	memw
400a82a6:	0309      	s32i.n	a0, a3, 0
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:318
    #ifdef SIM
        pDlMatConfReg->bsDlHTrigger = 0;
    #else
        /*  wait HW done and clr trigger bit    */
        while(FALSE != pDlMatConfReg->bsDlHTrigger)
400a82a8:	0020c0        	memw
400a82ab:	0023b2        	l32i	a11, a3, 0
400a82ae:	b86b07        	bbci	a11, 0, 400a826a <HAL_LdpcDownloadHMatix+0x7a>
400a82b1:	078076        	loop	a0, 400a82bc <HAL_LdpcDownloadHMatix+0xcc>
400a82b4:	0020c0        	memw
400a82b7:	0328      	l32i.n	a2, a3, 0
400a82b9:	ad6207        	bbci	a2, 0, 400a826a <HAL_LdpcDownloadHMatix+0x7a>

400a82bc <HAL_LdpcDownloadHMatix+0xcc>:
400a82bc:	fffc46        	j	400a82b1 <HAL_LdpcDownloadHMatix+0xc1>

400a82bf <HAL_LdpcDownloadHMatix+0xcf>:
	...

400a82c0 <HAL_LdpcDownloadHMatix+0xd0>:
D:\IM_3D_TLC\firmware\HAL\LDPC/HAL_LdpcEngine.c:325
            ;
        }
    #endif
    }

    return;
400a82c0:	0108      	l32i.n	a0, a1, 0
400a82c2:	10c112        	addi	a1, a1, 16
400a82c5:	f00d      	ret.n

400a82c7 <HAL_LdpcDownloadHMatix+0xd7>:
	...

400a82c8 <HAL_FlashInit>:
HAL_FlashInit():
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:92
------------------------------------------------------------------------------*/
void MCU2_DRAM_TEXT HAL_DecStsInit(void)
{
    /* Base Addr Init */
    g_pDecSramStsBase = (DEC_STATUS_SRAM *)DEC_STS_SRAM_BASE; 
    g_pDecFifoStsBase = (DEC_FIFO_STATUS *)DEC_STS_FIFO_BASE;
400a82c8:	ea4321        	l32r	a2, 400a2bd4 <_mcu2dram_text_start+0x3d4>
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:91
    20160310    abby    create
------------------------------------------------------------------------------*/
void MCU2_DRAM_TEXT HAL_DecStsInit(void)
{
    /* Base Addr Init */
    g_pDecSramStsBase = (DEC_STATUS_SRAM *)DEC_STS_SRAM_BASE; 
400a82cb:	ea4141        	l32r	a4, 400a2bd0 <_mcu2dram_text_start+0x3d0>
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:93
    g_pDecFifoStsBase = (DEC_FIFO_STATUS *)DEC_STS_FIFO_BASE;
    g_pDecFifoCfg     = (XOR_DEC_FIFO_CFG_REG *)DEC_FIFO_CFG_REG;
400a82ce:	ea3f51        	l32r	a5, 400a2bcc <_mcu2dram_text_start+0x3cc>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:265
    20141020    tobey   create to sync FW with BootLoader
    20141024    Gavin   adjust code strcuture
    20151118    abby    support single MCU arch
------------------------------------------------------------------------------*/
void MCU2_DRAM_TEXT HAL_FlashInit(void)
{
400a82d1:	e95a31        	l32r	a3, 400a283c <_mcu2dram_text_start+0x3c>
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:94
    g_pDecFifoStsTab  = (DEC_FIFO_STATUS *)DRAM_DEC_FIFO_STATUS_BASE;
400a82d4:	ea3d61        	l32r	a6, 400a2bc8 <_mcu2dram_text_start+0x3c8>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:265
400a82d7:	f0c112        	addi	a1, a1, -16
400a82da:	11c9      	s32i.n	a12, a1, 4
400a82dc:	006102        	s32i	a0, a1, 0
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:94
400a82df:	346362        	s32i	a6, a3, 208
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:93
void MCU2_DRAM_TEXT HAL_DecStsInit(void)
{
    /* Base Addr Init */
    g_pDecSramStsBase = (DEC_STATUS_SRAM *)DEC_STS_SRAM_BASE; 
    g_pDecFifoStsBase = (DEC_FIFO_STATUS *)DEC_STS_FIFO_BASE;
    g_pDecFifoCfg     = (XOR_DEC_FIFO_CFG_REG *)DEC_FIFO_CFG_REG;
400a82e2:	326352        	s32i	a5, a3, 200
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:91
    20160310    abby    create
------------------------------------------------------------------------------*/
void MCU2_DRAM_TEXT HAL_DecStsInit(void)
{
    /* Base Addr Init */
    g_pDecSramStsBase = (DEC_STATUS_SRAM *)DEC_STS_SRAM_BASE; 
400a82e5:	226342        	s32i	a4, a3, 136
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:92
    g_pDecFifoStsBase = (DEC_FIFO_STATUS *)DEC_STS_FIFO_BASE;
400a82e8:	336322        	s32i	a2, a3, 204
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:265
400a82eb:	000c      	movi.n	a0, 0
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:97
    g_pDecFifoCfg     = (XOR_DEC_FIFO_CFG_REG *)DEC_FIFO_CFG_REG;
    g_pDecFifoStsTab  = (DEC_FIFO_STATUS *)DRAM_DEC_FIFO_STATUS_BASE;
    
    /* Clear RP */
    g_ucDecFifoRp = 0;
400a82ed:	0020c0        	memw
400a82f0:	d44302        	s8i	a0, a3, 212
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:100
    
    //Maple add
    COM_MemZero((U32*)g_pDecFifoStsBase, sizeof(DEC_FIFO_STATUS)/sizeof(U32));
400a82f3:	80a132        	movi	a3, 0x180
400a82f6:	e99401        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a82f9:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\DecSts/HAL_DecStsReport.c:103

    /* Reset DEC FIFO module */
    HAL_DecFifoReset();
400a82fc:	ea4901        	l32r	a0, 400a2c20 <_mcu2dram_text_start+0x420>
400a82ff:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:268
    HAL_DecStsInit();
    
    HAL_NfcInterfaceInitBasic();
400a8302:	ff9105        	call0	400a7c14 <HAL_NfcInterfaceInitBasic>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:82
void MCU2_DRAM_TEXT HAL_FlashNfcFeatureInit(void)
{
    volatile PG_CONF_REG *pNfcPgCfg = (volatile PG_CONF_REG *) &rNfcPgCfg;

    /*  MULTI-LUN related  */
    pNfcPgCfg->bsMulLun = NFC_LUN_PER_PU_BITS;
400a8305:	ea3761        	l32r	a6, 400a2be4 <_mcu2dram_text_start+0x3e4>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:270

    HalNfcInterfaceInitExt();
400a8308:	ea38b1        	l32r	a11, 400a2be8 <_mcu2dram_text_start+0x3e8>
400a830b:	00a222        	movi	a2, 0x200
400a830e:	140c      	movi.n	a4, 1
400a8310:	0c2c      	movi.n	a12, 32
400a8312:	ea3831        	l32r	a3, 400a2bf4 <_mcu2dram_text_start+0x3f4>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:205
void MCU2_DRAM_TEXT HalNfcInterfaceInitExt(void)
{
    /* PU Accelaration */
    pNfHpustREG     = (NF_HPUST_REG *)      NF_HPUST_REG_BASE;
    pNfPpustREG     = (NF_PPUST_REG*)       NF_PPUST_REG_BASE;
    pNfLpustREG     = (NF_LPUST_REG *)      NF_LPUST_REG_BASE;
400a8315:	ea3271        	l32r	a7, 400a2be0 <_mcu2dram_text_start+0x3e0>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:207
    pNfcLlunstREG   = (NF_LLUNST_REG *)     NF_LLUNST_REG_BASE;
    pNfcLLunSwBitmap= (NF_LLUN_SW_BITMAP_REG *) NF_LLUNST_SW_REG_BASE;
400a8318:	ea30a1        	l32r	a10, 400a2bd8 <_mcu2dram_text_start+0x3d8>
400a831b:	e94881        	l32r	a8, 400a283c <_mcu2dram_text_start+0x3c>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:206
{
    /* PU Accelaration */
    pNfHpustREG     = (NF_HPUST_REG *)      NF_HPUST_REG_BASE;
    pNfPpustREG     = (NF_PPUST_REG*)       NF_PPUST_REG_BASE;
    pNfLpustREG     = (NF_LPUST_REG *)      NF_LPUST_REG_BASE;
    pNfcLlunstREG   = (NF_LLUNST_REG *)     NF_LLUNST_REG_BASE;
400a831e:	ea2f91        	l32r	a9, 400a2bdc <_mcu2dram_text_start+0x3dc>
400a8321:	496892        	s32i	a9, a8, 0x124
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:207
    pNfcLLunSwBitmap= (NF_LLUN_SW_BITMAP_REG *) NF_LLUNST_SW_REG_BASE;
400a8324:	4a68a2        	s32i	a10, a8, 0x128
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:205
void MCU2_DRAM_TEXT HalNfcInterfaceInitExt(void)
{
    /* PU Accelaration */
    pNfHpustREG     = (NF_HPUST_REG *)      NF_HPUST_REG_BASE;
    pNfPpustREG     = (NF_PPUST_REG*)       NF_PPUST_REG_BASE;
    pNfLpustREG     = (NF_LPUST_REG *)      NF_LPUST_REG_BASE;
400a8327:	486872        	s32i	a7, a8, 0x120
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:270
{
    HAL_DecStsInit();
    
    HAL_NfcInterfaceInitBasic();

    HalNfcInterfaceInitExt();
400a832a:	e9efa1        	l32r	a10, 400a2ae8 <_mcu2dram_text_start+0x2e8>
400a832d:	ea3071        	l32r	a7, 400a2bf0 <_mcu2dram_text_start+0x3f0>
400a8330:	ea2f81        	l32r	a8, 400a2bec <_mcu2dram_text_start+0x3ec>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:82
400a8333:	0020c0        	memw
400a8336:	0358      	l32i.n	a5, a3, 0
400a8338:	105560        	and	a5, a5, a6
400a833b:	0020c0        	memw
400a833e:	0359      	s32i.n	a5, a3, 0
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:93
        pNfcPgCfg->bsMulLunToggle = FALSE;
        pNfcPgCfg->bsLunBdEn = FALSE;
    }
    else
    {
        pNfcPgCfg->bsDelayAccEn = TRUE;
400a8340:	ea2e61        	l32r	a6, 400a2bf8 <_mcu2dram_text_start+0x3f8>
400a8343:	0020c0        	memw
400a8346:	0308      	l32i.n	a0, a3, 0
400a8348:	e20064        	insbits	a6, a0, 0, 30
400a834b:	0020c0        	memw
400a834e:	0369      	s32i.n	a6, a3, 0
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:97
    }
    
    /*  CRC enable  */
    pNfcPgCfg->bsDCrcChkEn = FALSE;
400a8350:	ea2b51        	l32r	a5, 400a2bfc <_mcu2dram_text_start+0x3fc>
400a8353:	0020c0        	memw
400a8356:	0308      	l32i.n	a0, a3, 0
400a8358:	100050        	and	a0, a0, a5
400a835b:	0020c0        	memw
400a835e:	0309      	s32i.n	a0, a3, 0
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:98
    pNfcPgCfg->bsNcrcChkEn = TRUE;
400a8360:	ea2861        	l32r	a6, 400a2c00 <_mcu2dram_text_start+0x400>
400a8363:	ea2851        	l32r	a5, 400a2c04 <_mcu2dram_text_start+0x404>
400a8366:	0020c0        	memw
400a8369:	0308      	l32i.n	a0, a3, 0
400a836b:	100060        	and	a0, a0, a6
400a836e:	200050        	or	a0, a0, a5
400a8371:	0020c0        	memw
400a8374:	0309      	s32i.n	a0, a3, 0
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:107
    {
        pNfcPgCfg->bsAccProgMode = TRUE;
    }

    /*  CDC issue patch in ICB  */
    pNfcPgCfg->bsIcbRdy = FALSE;//TRUE;
400a8376:	ffad62        	movi	a6, 0xfffffdff
400a8379:	0020c0        	memw
400a837c:	0358      	l32i.n	a5, a3, 0
400a837e:	105560        	and	a5, a5, a6
400a8381:	0020c0        	memw
400a8384:	0359      	s32i.n	a5, a3, 0
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:110

    /*  scramble enable    */
    pNfcPgCfg->bsScrBps = SCRAMBLE_MSK_EN;
400a8386:	707c      	movi.n	a0, -9
400a8388:	0020c0        	memw
400a838b:	0368      	l32i.n	a6, a3, 0
400a838d:	106600        	and	a6, a6, a0
400a8390:	0020c0        	memw
400a8393:	0369      	s32i.n	a6, a3, 0
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:118
#ifdef HOST_SATA
    pNfcPgCfg->bsFstDatRdyMod = TRUE;
    pNfcPgCfg->bsOtfbmEn = FALSE;
    pNfcPgCfg->bsWbPcieMode = FALSE;
#elif defined(HOST_NVME)
    pNfcPgCfg->bsOtfbmEn = TRUE;
400a8395:	e57c      	movi.n	a5, -2
400a8397:	0020c0        	memw
400a839a:	0308      	l32i.n	a0, a3, 0
400a839c:	100050        	and	a0, a0, a5
400a839f:	200040        	or	a0, a0, a4
400a83a2:	0020c0        	memw
400a83a5:	0309      	s32i.n	a0, a3, 0
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:119
    pNfcPgCfg->bsWbPcieMode = TRUE;
400a83a7:	dfaf92        	movi	a9, -33
400a83aa:	0020c0        	memw
400a83ad:	0368      	l32i.n	a6, a3, 0
400a83af:	106690        	and	a6, a6, a9
400a83b2:	2066c0        	or	a6, a6, a12
400a83b5:	0020c0        	memw
400a83b8:	0369      	s32i.n	a6, a3, 0
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:122
#endif

    pNfcPgCfg->bsRTSB3dTlc = TRUE;
400a83ba:	ea1351        	l32r	a5, 400a2c08 <_mcu2dram_text_start+0x408>
400a83bd:	e92a41        	l32r	a4, 400a2868 <_mcu2dram_text_start+0x68>
400a83c0:	0020c0        	memw
400a83c3:	0308      	l32i.n	a0, a3, 0
400a83c5:	100050        	and	a0, a0, a5
400a83c8:	200040        	or	a0, a0, a4
400a83cb:	0020c0        	memw
400a83ce:	0309      	s32i.n	a0, a3, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:233
    20151203    abby    add new feature control variable in VT3533
------------------------------------------------------------------------------*/
void MCU2_DRAM_TEXT HalNfcFeatureInitExt(void)
{
    //Enable Cachestatus(bit1) into OTFB, bit0 SSU enable single invalid
    rGlbTrfc |= 0x2;
400a83d0:	290c      	movi.n	a9, 2
400a83d2:	0020c0        	memw
400a83d5:	992762        	l32i	a6, a7, 0x264
400a83d8:	206690        	or	a6, a6, a9
400a83db:	0020c0        	memw
400a83de:	996762        	s32i	a6, a7, 0x264
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2301
void MCU2_DRAM_TEXT HAL_NfcSetSsuInOtfbBase(U32 ulSsuBaseAddr)
{
    volatile NF_SSU_BASEADDR_REG *pSsuBaseAddr;
    pSsuBaseAddr = (volatile NF_SSU_BASEADDR_REG *)&rNfcSsuBaseAddr;

    pSsuBaseAddr->bsSsuOtfbBase = (ulSsuBaseAddr - OTFB_START_ADDRESS) >> 10;
400a83e1:	00ac52        	movi	a5, 0xfffffc00
400a83e4:	f42c      	movi.n	a4, 47
400a83e6:	0020c0        	memw
400a83e9:	0a38      	l32i.n	a3, a10, 0
400a83eb:	103350        	and	a3, a3, a5
400a83ee:	203340        	or	a3, a3, a4
400a83f1:	0020c0        	memw
400a83f4:	0a39      	s32i.n	a3, a10, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2323
void MCU2_DRAM_TEXT HAL_NfcSetSsuInDramBase(U32 ulSsuBaseAddr)
{
    volatile NF_SSU_BASEADDR_REG *pSsuBaseAddr;
    pSsuBaseAddr = (volatile NF_SSU_BASEADDR_REG *)&rNfcSsuBaseAddr;

    pSsuBaseAddr->bsSsuDramBase = (ulSsuBaseAddr - DRAM_START_ADDRESS) >> 10;
400a83f6:	ea0591        	l32r	a9, 400a2c0c <_mcu2dram_text_start+0x40c>
400a83f9:	0020c0        	memw
400a83fc:	0a08      	l32i.n	a0, a10, 0
400a83fe:	410094        	insbits	a9, a0, 0, 9
400a8401:	0020c0        	memw
400a8404:	0a99      	s32i.n	a9, a10, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2277
{
    U32 ulBaseOtfbAdr0 = ulBaseAddr0>>20;
    U32 ulBaseOtfbAdr1 = ulBaseAddr1>>20;
    U32 ulBaseOtfbAdr2 = ulBaseAddr2>>20;

    REG_SET_VALUE(rNfcMisc, 12, ulBaseOtfbAdr0, 16);
400a8406:	0020c0        	memw
400a8409:	852872        	l32i	a7, a8, 0x214
400a840c:	1077b0        	and	a7, a7, a11
400a840f:	0020c0        	memw
400a8412:	856872        	s32i	a7, a8, 0x214
400a8415:	e9fe61        	l32r	a6, 400a2c10 <_mcu2dram_text_start+0x410>
400a8418:	0020c0        	memw
400a841b:	852852        	l32i	a5, a8, 0x214
400a841e:	205560        	or	a5, a5, a6
400a8421:	0020c0        	memw
400a8424:	856852        	s32i	a5, a8, 0x214
400a8427:	0020c0        	memw
400a842a:	856852        	s32i	a5, a8, 0x214
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2278
    REG_SET_VALUE(rNfcOtfbAdsBase, 12, ulBaseOtfbAdr1, 0);
400a842d:	e9e041        	l32r	a4, 400a2bb0 <_mcu2dram_text_start+0x3b0>
400a8430:	0020c0        	memw
400a8433:	862832        	l32i	a3, a8, 0x218
400a8436:	103340        	and	a3, a3, a4
400a8439:	0020c0        	memw
400a843c:	866832        	s32i	a3, a8, 0x218
400a843f:	0020c0        	memw
400a8442:	862802        	l32i	a0, a8, 0x218
400a8445:	200020        	or	a0, a0, a2
400a8448:	0020c0        	memw
400a844b:	866802        	s32i	a0, a8, 0x218
400a844e:	0020c0        	memw
400a8451:	866802        	s32i	a0, a8, 0x218
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:2279
    REG_SET_VALUE(rNfcOtfbAdsBase, 12, ulBaseOtfbAdr2, 16);
400a8454:	0020c0        	memw
400a8457:	8628a2        	l32i	a10, a8, 0x218
400a845a:	10aab0        	and	a10, a10, a11
400a845d:	0020c0        	memw
400a8460:	8668a2        	s32i	a10, a8, 0x218
400a8463:	e9ec91        	l32r	a9, 400a2c14 <_mcu2dram_text_start+0x414>
400a8466:	0020c0        	memw
400a8469:	862872        	l32i	a7, a8, 0x218
400a846c:	207790        	or	a7, a7, a9
400a846f:	0020c0        	memw
400a8472:	866872        	s32i	a7, a8, 0x218
400a8475:	0020c0        	memw
400a8478:	866872        	s32i	a7, a8, 0x218
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:147
------------------------------------------------------------------------------*/
void MCU2_DRAM_TEXT HAL_FlashInitSLCMapping(void)
{
    U32 ulLogicPage;
    
    for(ulLogicPage = 0; ulLogicPage < (PG_PER_BLK/3); ulLogicPage++)
400a847b:	e9e721        	l32r	a2, 400a2c18 <_mcu2dram_text_start+0x418>
400a847e:	000c      	movi.n	a0, 0
400a8480:	034c      	movi.n	a3, 64
400a8482:	2aa376        	loopgtz	a3, 400a84b0 <HAL_FlashInit+0x1e8>
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:149
    {
        l_aSLCPageMap[ulLogicPage] = ulLogicPage;
400a8485:	7e5202        	s16i	a0, a2, 252
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:147
------------------------------------------------------------------------------*/
void MCU2_DRAM_TEXT HAL_FlashInitSLCMapping(void)
{
    U32 ulLogicPage;
    
    for(ulLogicPage = 0; ulLogicPage < (PG_PER_BLK/3); ulLogicPage++)
400a8488:	301b      	addi.n	a3, a0, 1
400a848a:	402b      	addi.n	a4, a0, 2
400a848c:	503b      	addi.n	a5, a0, 3
400a848e:	604b      	addi.n	a6, a0, 4
400a8490:	705b      	addi.n	a7, a0, 5
400a8492:	806b      	addi.n	a8, a0, 6
400a8494:	907b      	addi.n	a9, a0, 7
400a8496:	10c222        	addi	a2, a2, 16
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:149
    {
        l_aSLCPageMap[ulLogicPage] = ulLogicPage;
400a8499:	775232        	s16i	a3, a2, 238
400a849c:	785242        	s16i	a4, a2, 240
400a849f:	795252        	s16i	a5, a2, 242
400a84a2:	7a5262        	s16i	a6, a2, 244
400a84a5:	7b5272        	s16i	a7, a2, 246
400a84a8:	7c5282        	s16i	a8, a2, 248
400a84ab:	7d5292        	s16i	a9, a2, 250
D:\IM_3D_TLC\firmware\HAL\Flash\INTEL_3D_TLC/HAL_FlashChipFeature.c:147
------------------------------------------------------------------------------*/
void MCU2_DRAM_TEXT HAL_FlashInitSLCMapping(void)
{
    U32 ulLogicPage;
    
    for(ulLogicPage = 0; ulLogicPage < (PG_PER_BLK/3); ulLogicPage++)
400a84ae:	008b      	addi.n	a0, a0, 8

400a84b0 <HAL_FlashInit+0x1e8>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:279
    /*    add 533 NFC new feature control variables init */
    HalNfcFeatureInitExt();

    HAL_FlashInitSLCMapping();  
    
    HAL_NfcSetLogicPUReg(HAL_NfcGetPhyPUBitMap());
400a84b0:	e9dd01        	l32r	a0, 400a2c24 <_mcu2dram_text_start+0x424>
400a84b3:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:186
    U8 ucPhyPU;   
    U8 ucLogicPU;

    /* set LogicPU register into a no map sts */
    ucLogicPU = 0;
    for (ucPhyPU = 0; ucPhyPU < NFC_PU_MAX; ucPhyPU++)
400a84b6:	000c      	movi.n	a0, 0
400a84b8:	dfa062        	movi	a6, 223
400a84bb:	e0a072        	movi	a7, 224
400a84be:	040c      	movi.n	a4, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:279
400a84c0:	02ad      	mov.n	a10, a2
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:186
400a84c2:	e8de51        	l32r	a5, 400a283c <_mcu2dram_text_start+0x3c>
400a84c5:	022c      	movi.n	a2, 32
400a84c7:	3a2552        	l32i	a5, a5, 232
400a84ca:	33a276        	loopgtz	a2, 400a8501 <HAL_FlashInit+0x239>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:188
    {
        g_pNfcLogicPU->aNfcLogicPUReg[NFC_CH_NUM(ucPhyPU)][NFC_PU_IN_CH(ucPhyPU)].bsPuEnable = FALSE;   
400a84cd:	742200        	extui	a2, a0, 2, 8
400a84d0:	143000        	extui	a3, a0, 0, 2
400a84d3:	b02320        	addx8	a2, a3, a2
400a84d6:	252a      	add.n	a2, a5, a2
400a84d8:	0020c0        	memw
400a84db:	000232        	l8ui	a3, a2, 0
400a84de:	103360        	and	a3, a3, a6
400a84e1:	203340        	or	a3, a3, a4
400a84e4:	0020c0        	memw
400a84e7:	004232        	s8i	a3, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:189
        g_pNfcLogicPU->aNfcLogicPUReg[NFC_CH_NUM(ucPhyPU)][NFC_PU_IN_CH(ucPhyPU)].bsLogicPU = ucLogicPU++;
400a84ea:	0020c0        	memw
400a84ed:	000232        	l8ui	a3, a2, 0
400a84f0:	103370        	and	a3, a3, a7
400a84f3:	200034        	insbits	a3, a0, 0, 4
400a84f6:	0020c0        	memw
400a84f9:	004232        	s8i	a3, a2, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:186
    U8 ucPhyPU;   
    U8 ucLogicPU;

    /* set LogicPU register into a no map sts */
    ucLogicPU = 0;
    for (ucPhyPU = 0; ucPhyPU < NFC_PU_MAX; ucPhyPU++)
400a84fc:	201b      	addi.n	a2, a0, 1
400a84fe:	740020        	extui	a0, a2, 0, 8
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:193
        g_pNfcLogicPU->aNfcLogicPUReg[NFC_CH_NUM(ucPhyPU)][NFC_PU_IN_CH(ucPhyPU)].bsPuEnable = FALSE;   
        g_pNfcLogicPU->aNfcLogicPUReg[NFC_CH_NUM(ucPhyPU)][NFC_PU_IN_CH(ucPhyPU)].bsLogicPU = ucLogicPU++;
    }
    
    ucLogicPU = 0;
    for (ucPhyPU = 0; ucPhyPU < NFC_PU_MAX; ucPhyPU++)
400a8501:	020c      	movi.n	a2, 0
400a8503:	00a002        	movi	a0, 0
400a8506:	20a082        	movi	a8, 32
400a8509:	38a876        	loopgtz	a8, 400a8545 <HAL_FlashInit+0x27d>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:195
    {
        if (0 != (ulPhyPUBitMap & (1 << ucPhyPU)))
400a850c:	305a07        	bbc	a10, a0, 400a8540 <HAL_FlashInit+0x278>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:197
        {
            g_pNfcLogicPU->aNfcLogicPUReg[NFC_CH_NUM(ucPhyPU)][NFC_PU_IN_CH(ucPhyPU)].bsPuEnable = TRUE;   
400a850f:	743200        	extui	a3, a0, 2, 8
400a8512:	14b000        	extui	a11, a0, 0, 2
400a8515:	b0bb30        	addx8	a11, a11, a3
400a8518:	b5ba      	add.n	a11, a5, a11
400a851a:	0020c0        	memw
400a851d:	000b32        	l8ui	a3, a11, 0
400a8520:	103360        	and	a3, a3, a6
400a8523:	2033c0        	or	a3, a3, a12
400a8526:	0020c0        	memw
400a8529:	004b32        	s8i	a3, a11, 0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:198
            g_pNfcLogicPU->aNfcLogicPUReg[NFC_CH_NUM(ucPhyPU)][NFC_PU_IN_CH(ucPhyPU)].bsLogicPU = ucLogicPU++;
400a852c:	0020c0        	memw
400a852f:	000b92        	l8ui	a9, a11, 0
400a8532:	109970        	and	a9, a9, a7
400a8535:	200294        	insbits	a9, a2, 0, 4
400a8538:	0020c0        	memw
400a853b:	004b92        	s8i	a9, a11, 0
400a853e:	221b      	addi.n	a2, a2, 1

400a8540 <HAL_FlashInit+0x278>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:193
        g_pNfcLogicPU->aNfcLogicPUReg[NFC_CH_NUM(ucPhyPU)][NFC_PU_IN_CH(ucPhyPU)].bsPuEnable = FALSE;   
        g_pNfcLogicPU->aNfcLogicPUReg[NFC_CH_NUM(ucPhyPU)][NFC_PU_IN_CH(ucPhyPU)].bsLogicPU = ucLogicPU++;
    }
    
    ucLogicPU = 0;
    for (ucPhyPU = 0; ucPhyPU < NFC_PU_MAX; ucPhyPU++)
400a8540:	001b      	addi.n	a0, a0, 1
400a8542:	740000        	extui	a0, a0, 0, 8

400a8545 <HAL_FlashInit+0x27d>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:203
            g_pNfcLogicPU->aNfcLogicPUReg[NFC_CH_NUM(ucPhyPU)][NFC_PU_IN_CH(ucPhyPU)].bsLogicPU = ucLogicPU++;
        }       
    }
    
    //invalid PU
    for (ucPhyPU = 0; ucPhyPU < NFC_PU_MAX; ucPhyPU++)
400a8545:	000c      	movi.n	a0, 0
400a8547:	032c      	movi.n	a3, 32
400a8549:	2ca376        	loopgtz	a3, 400a8579 <HAL_FlashInit+0x2b1>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:205
    {
        if (TRUE != (g_pNfcLogicPU->aNfcLogicPUReg[NFC_CH_NUM(ucPhyPU)][NFC_PU_IN_CH(ucPhyPU)].bsPuEnable))
400a854c:	744200        	extui	a4, a0, 2, 8
400a854f:	143000        	extui	a3, a0, 0, 2
400a8552:	b03340        	addx8	a3, a3, a4
400a8555:	353a      	add.n	a3, a5, a3
400a8557:	0020c0        	memw
400a855a:	000342        	l8ui	a4, a3, 0
400a855d:	13e457        	bbsi	a4, 5, 400a8574 <HAL_FlashInit+0x2ac>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:207
        {
            g_pNfcLogicPU->aNfcLogicPUReg[NFC_CH_NUM(ucPhyPU)][NFC_PU_IN_CH(ucPhyPU)].bsLogicPU = ucLogicPU++;
400a8560:	0020c0        	memw
400a8563:	000362        	l8ui	a6, a3, 0
400a8566:	106670        	and	a6, a6, a7
400a8569:	200264        	insbits	a6, a2, 0, 4
400a856c:	0020c0        	memw
400a856f:	004362        	s8i	a6, a3, 0
400a8572:	221b      	addi.n	a2, a2, 1

400a8574 <HAL_FlashInit+0x2ac>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:203
            g_pNfcLogicPU->aNfcLogicPUReg[NFC_CH_NUM(ucPhyPU)][NFC_PU_IN_CH(ucPhyPU)].bsLogicPU = ucLogicPU++;
        }       
    }
    
    //invalid PU
    for (ucPhyPU = 0; ucPhyPU < NFC_PU_MAX; ucPhyPU++)
400a8574:	001b      	addi.n	a0, a0, 1
400a8576:	740000        	extui	a0, a0, 0, 8

400a8579 <HAL_FlashInit+0x2b1>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:280
    HAL_NfcBuildPuMapping(HAL_NfcGetPhyPUBitMap());    
400a8579:	e9aa01        	l32r	a0, 400a2c24 <_mcu2dram_text_start+0x424>
400a857c:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:113
void MCU2_DRAM_TEXT HAL_NfcBuildPuMapping(U32 ulBitMap)
{
    U8 ucPhyPU;
    U8 ucPU = 0;

    for (ucPhyPU = 0; ucPhyPU < NFC_PU_MAX; ucPhyPU++)
400a857f:	040c      	movi.n	a4, 0
400a8581:	000c      	movi.n	a0, 0
400a8583:	e9a631        	l32r	a3, 400a2c1c <_mcu2dram_text_start+0x41c>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:280
400a8586:	02ad      	mov.n	a10, a2
400a8588:	022c      	movi.n	a2, 32
400a858a:	11a276        	loopgtz	a2, 400a859f <HAL_FlashInit+0x2d7>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:115
    {
        if (0 != (ulBitMap & (1 << ucPhyPU)))
400a858d:	095a47        	bbc	a10, a4, 400a859a <HAL_FlashInit+0x2d2>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:117
        {
            l_aPhyPUMap[ucPU] = ucPhyPU;
400a8590:	203a      	add.n	a2, a0, a3
400a8592:	804242        	s8i	a4, a2, 128
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:118
            ucPU++;
400a8595:	001b      	addi.n	a0, a0, 1
400a8597:	740000        	extui	a0, a0, 0, 8

400a859a <HAL_FlashInit+0x2d2>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:113
void MCU2_DRAM_TEXT HAL_NfcBuildPuMapping(U32 ulBitMap)
{
    U8 ucPhyPU;
    U8 ucPU = 0;

    for (ucPhyPU = 0; ucPhyPU < NFC_PU_MAX; ucPhyPU++)
400a859a:	441b      	addi.n	a4, a4, 1
400a859c:	744040        	extui	a4, a4, 0, 8

400a859f <HAL_FlashInit+0x2d7>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:123
            ucPU++;
        }
    }

    /*  PU without CE link will be invalid  */
    for (; ucPU < NFC_PU_MAX; ucPU++)
400a859f:	11c0f6        	bgeui	a0, 32, 400a85b4 <HAL_FlashInit+0x2ec>
400a85a2:	f47c      	movi.n	a4, -1
400a85a4:	c02c00        	sub	a2, a12, a0
400a85a7:	099276        	loopnez	a2, 400a85b4 <HAL_FlashInit+0x2ec>
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:125
    {
        l_aPhyPUMap[ucPU] = INVALID_2F;
400a85aa:	203a      	add.n	a2, a0, a3
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:123
            ucPU++;
        }
    }

    /*  PU without CE link will be invalid  */
    for (; ucPU < NFC_PU_MAX; ucPU++)
400a85ac:	001b      	addi.n	a0, a0, 1
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:125
    {
        l_aPhyPUMap[ucPU] = INVALID_2F;
400a85ae:	804242        	s8i	a4, a2, 128
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverBasic.c:123
            ucPU++;
        }
    }

    /*  PU without CE link will be invalid  */
    for (; ucPU < NFC_PU_MAX; ucPU++)
400a85b1:	740000        	extui	a0, a0, 0, 8

400a85b4 <HAL_FlashInit+0x2ec>:
D:\IM_3D_TLC\firmware\HAL\NFC/HAL_FlashDriverExt.c:282

    return;
400a85b4:	11c8      	l32i.n	a12, a1, 4
400a85b6:	0108      	l32i.n	a0, a1, 0
400a85b8:	10c112        	addi	a1, a1, 16
400a85bb:	f00d      	ret.n

400a85bd <HAL_FlashInit+0x2f5>:
400a85bd:	000000                                        ...

400a85c0 <L3_TaskInit>:
L3_TaskInit():
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Init.c:151
Usage      : 
History    : 
    1. 2016.7.27 JasonGuo create function
==============================================================================*/
void MCU2_DRAM_TEXT L3_TaskInit(SUBSYSTEM_MEM_BASE *pFreeMemBase)
{
400a85c0:	f0c112        	addi	a1, a1, -16
400a85c3:	006102        	s32i	a0, a1, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Init.c:152
    L3_AllocMem(pFreeMemBase);
400a85c6:	ff8ec5        	call0	400a7eb4 <L3_AllocMem..FE_1482204275>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Init.c:154

    L3_FCMDQIntrInit(FALSE);
400a85c9:	020c      	movi.n	a2, 0
400a85cb:	ff8845        	call0	400a7e50 <L3_FCMDQIntrInit>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Init.c:155
    L3_FCMDQIntrInit(TRUE);
400a85ce:	01a022        	movi	a2, 1
400a85d1:	ff87c5        	call0	400a7e50 <L3_FCMDQIntrInit>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Init.c:157

    L3_IFNFCIRSInit();
400a85d4:	e99801        	l32r	a0, 400a2c34 <_mcu2dram_text_start+0x434>
400a85d7:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Init.c:159

    L3_ErrHBuildBrthLunMap();
400a85da:	ff8705        	call0	400a7e4c <L3_ErrHBuildBrthLunMap>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:68
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_SchInitStsBmp(void)
{    
    U8 ucLunInPU;    

    for (ucLunInPU = 0; ucLunInPU < NFC_LUN_MAX_PER_PU; ucLunInPU++)
400a85dd:	000c      	movi.n	a0, 0
400a85df:	e99231        	l32r	a3, 400a2c28 <_mcu2dram_text_start+0x428>
400a85e2:	f47c      	movi.n	a4, -1
400a85e4:	050c      	movi.n	a5, 0
400a85e6:	04a022        	movi	a2, 4
400a85e9:	3da276        	loopgtz	a2, 400a862a <L3_TaskInit+0x6a>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:70
    {        
        l_aTLunStsBmp[STS_BMP_POPREQ][ucLunInPU] = 0;
400a85ec:	a02030        	addx4	a2, a0, a3
400a85ef:	0020c0        	memw
400a85f2:	7f6252        	s32i	a5, a2, 0x1fc
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:71
        l_aTLunStsBmp[STS_BMP_PEND][ucLunInPU] = 0;
400a85f5:	0020c0        	memw
400a85f8:	836252        	s32i	a5, a2, 0x20c
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:72
        l_aTLunStsBmp[STS_BMP_RECYCLE][ucLunInPU] = 0;
400a85fb:	0020c0        	memw
400a85fe:	876252        	s32i	a5, a2, 0x21c
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:73
        l_aTLunStsBmp[STS_BMP_ERRH][ucLunInPU] = 0;
400a8601:	0020c0        	memw
400a8604:	8b6252        	s32i	a5, a2, 0x22c
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:74
        l_aTLunStsBmp[STS_BMP_EXTH][ucLunInPU] = 0;
400a8607:	0020c0        	memw
400a860a:	8f6252        	s32i	a5, a2, 0x23c
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:75
        l_aTLunStsBmp[STS_BMP_LOCK][ucLunInPU] = 0;
400a860d:	0020c0        	memw
400a8610:	936252        	s32i	a5, a2, 0x24c
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:76
        l_aTLunStsBmp[STS_BMP_NFC_UNFULL][ucLunInPU] = INVALID_8F;
400a8613:	0020c0        	memw
400a8616:	976242        	s32i	a4, a2, 0x25c
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:77
        l_aTLunStsBmp[STS_BMP_NFC_EMPTY][ucLunInPU] = INVALID_8F;
400a8619:	0020c0        	memw
400a861c:	9b6242        	s32i	a4, a2, 0x26c
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:78
        l_aTLunStsBmp[STS_BMP_NFC_ERROR][ucLunInPU] = 0;
400a861f:	0020c0        	memw
400a8622:	9f6252        	s32i	a5, a2, 0x27c
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:68
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_SchInitStsBmp(void)
{    
    U8 ucLunInPU;    

    for (ucLunInPU = 0; ucLunInPU < NFC_LUN_MAX_PER_PU; ucLunInPU++)
400a8625:	201b      	addi.n	a2, a0, 1
400a8627:	740020        	extui	a0, a2, 0, 8

400a862a <L3_TaskInit+0x6a>:
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:302
==============================================================================*/
LOCAL void MCU2_DRAM_TEXT L3_SchInitArbBmp(void)
{   
    U8 ucIdx;

    for (ucIdx = 0; ucIdx < ARB_BMP_NUM; ucIdx++)
400a862a:	e98021        	l32r	a2, 400a2c2c <_mcu2dram_text_start+0x42c>
400a862d:	000c      	movi.n	a0, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:304
    {
        l_aLunInPU[ucIdx] = 0;
400a862f:	802a      	add.n	a8, a0, a2
400a8631:	0020c0        	memw
400a8634:	030c      	movi.n	a3, 0
400a8636:	804832        	s8i	a3, a8, 128
400a8639:	170c      	movi.n	a7, 1
400a863b:	772a      	add.n	a7, a7, a2
400a863d:	0020c0        	memw
400a8640:	804732        	s8i	a3, a7, 128
400a8643:	260c      	movi.n	a6, 2
400a8645:	662a      	add.n	a6, a6, a2
400a8647:	0020c0        	memw
400a864a:	804632        	s8i	a3, a6, 128
400a864d:	350c      	movi.n	a5, 3
400a864f:	552a      	add.n	a5, a5, a2
400a8651:	0020c0        	memw
400a8654:	804532        	s8i	a3, a5, 128
400a8657:	440c      	movi.n	a4, 4
400a8659:	442a      	add.n	a4, a4, a2
400a865b:	0020c0        	memw
400a865e:	804432        	s8i	a3, a4, 128
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:307
    }
    
    COM_MemZero((U32*)&l_aTLunArbBmp[0][0], ARB_BMP_NUM*NFC_LUN_MAX_PER_PU);
400a8661:	e97321        	l32r	a2, 400a2c30 <_mcu2dram_text_start+0x430>
400a8664:	431c      	movi.n	a3, 20
400a8666:	e8b801        	l32r	a0, 400a2948 <_mcu2dram_text_start+0x148>
400a8669:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:112
==============================================================================*/
void MCU2_DRAM_TEXT L3_FMIntrInit(void)
{
    U8 ucTLun;

    for (ucTLun = 0; ucTLun < SUBSYSTEM_LUN_NUM; ucTLun++)
400a866c:	000c      	movi.n	a0, 0
400a866e:	e87a61        	l32r	a6, 400a2858 <_mcu2dram_text_start+0x58>
400a8671:	f37c      	movi.n	a3, -1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Schedule.c:615
==============================================================================*/
void MCU2_DRAM_TEXT L3_SchInit(void)
{
    L3_SchInitStsBmp();

    L3_SchInitArbBmp();
400a8673:	e87251        	l32r	a5, 400a283c <_mcu2dram_text_start+0x3c>
400a8676:	040c      	movi.n	a4, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:112
400a8678:	e528      	l32i.n	a2, a5, 56
400a867a:	212552        	l32i	a5, a5, 132
400a867d:	259276        	loopnez	a2, 400a86a6 <L3_TaskInit+0xe6>
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:114
    {
        l_ptFMIntrMgr[ucTLun].bsPhyBlk = INVALID_4F;
400a8680:	902000        	addx2	a2, a0, a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:112
==============================================================================*/
void MCU2_DRAM_TEXT L3_FMIntrInit(void)
{
    U8 ucTLun;

    for (ucTLun = 0; ucTLun < SUBSYSTEM_LUN_NUM; ucTLun++)
400a8683:	001b      	addi.n	a0, a0, 1
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:114
    {
        l_ptFMIntrMgr[ucTLun].bsPhyBlk = INVALID_4F;
400a8685:	a02250        	addx4	a2, a2, a5
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:112
==============================================================================*/
void MCU2_DRAM_TEXT L3_FMIntrInit(void)
{
    U8 ucTLun;

    for (ucTLun = 0; ucTLun < SUBSYSTEM_LUN_NUM; ucTLun++)
400a8688:	740000        	extui	a0, a0, 0, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:114
    {
        l_ptFMIntrMgr[ucTLun].bsPhyBlk = INVALID_4F;
400a868b:	005262        	s16i	a6, a2, 0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:115
        l_ptFMIntrMgr[ucTLun].bsPhyPage = INVALID_4F;
400a868e:	015262        	s16i	a6, a2, 2
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:116
        l_ptFMIntrMgr[ucTLun].bsCmdType = 0;
400a8691:	044242        	s8i	a4, a2, 4
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:118

        l_ptFMIntrMgr[ucTLun].bsVthShiftRd = 0;
400a8694:	054242        	s8i	a4, a2, 5
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:119
        l_ptFMIntrMgr[ucTLun].bsSlcVthRetryDft = 0;
400a8697:	0a4242        	s8i	a4, a2, 10
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:120
        l_ptFMIntrMgr[ucTLun].bsMlcVthRetryDft = 0;
400a869a:	0b4242        	s8i	a4, a2, 11
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:122

        l_ptFMIntrMgr[ucTLun].bsSlcVthRetry = l_ptFMIntrMgr[ucTLun].bsSlcVthRetryDft;
400a869d:	084242        	s8i	a4, a2, 8
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:123
        l_ptFMIntrMgr[ucTLun].bsMlcVthRetry = l_ptFMIntrMgr[ucTLun].bsMlcVthRetryDft;
400a86a0:	094242        	s8i	a4, a2, 9
D:\IM_3D_TLC\firmware\algorithm\L3/L3_FlashMonitor.c:126

        // init to invalid for swith the related mode in the first command. avoid to care about the defaut mode type after power on.
        l_ptFMIntrMgr[ucTLun].bsSLCMode = INVALID_2F; 
400a86a3:	064232        	s8i	a3, a2, 6
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Init.c:163

    L3_SchInit();

    L3_FMIntrInit();
400a86a6:	e96401        	l32r	a0, 400a2c38 <_mcu2dram_text_start+0x438>
400a86a9:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\algorithm\L3/L3_Init.c:171
    //L3_RedMgrInit();
    
    L3_DbgInit();
    L2_FCmdReqStsInit(MCU2_ID);

    return;
400a86ac:	0108      	l32i.n	a0, a1, 0
400a86ae:	10c112        	addi	a1, a1, 16
400a86b1:	f00d      	ret.n

400a86b3 <L3_TaskInit+0xf3>:
	...

400a86b4 <FW_InitMSD>:
FW_InitMSD():
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a86b4:	03eb20        	rsr.prid	a2
400a86b7:	e86141        	l32r	a4, 400a283c <_mcu2dram_text_start+0x3c>
400a86ba:	e96031        	l32r	a3, 400a2c3c <_mcu2dram_text_start+0x43c>
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:76
    {
        g_apSubMcShareData = (PMCSD)(DSRAM1_MCU01_SHARE_BASE + sizeof(SCQ) + sizeof(SMQ) + sizeof(SMSG));
    }
    else
    {
        g_apSubMcShareData = (PMCSD)(DSRAM1_MCU01_SHARE_BASE + sizeof(SCQ) + sizeof(SMQ) + sizeof(SMSG));
400a86bd:	0020c0        	memw
400a86c0:	2e6432        	s32i	a3, a4, 184
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:79
    }

    return;
400a86c3:	f00d      	ret.n

400a86c5 <FW_InitMSD+0x11>:
400a86c5:	000000                                        ...

400a86c8 <FW_InitSMSG>:
FW_InitSMSG():
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a86c8:	03eb60        	rsr.prid	a6
400a86cb:	e95e21        	l32r	a2, 400a2c44 <_mcu2dram_text_start+0x444>
400a86ce:	e95c41        	l32r	a4, 400a2c40 <_mcu2dram_text_start+0x440>
400a86d1:	e85a31        	l32r	a3, 400a283c <_mcu2dram_text_start+0x3c>
400a86d4:	050c      	movi.n	a5, 0
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:61
    {
        l_pFWSMsgQueue = (PSMQ)(DSRAM1_MCU01_SHARE_BASE + sizeof(SCQ));
        l_pFWNtfnMsg = (PSMSG)(DSRAM1_MCU01_SHARE_BASE + sizeof(SCQ) + sizeof(SMQ));    
    }

    l_ulMsgSeqNum = 0;
400a86d6:	2c6352        	s32i	a5, a3, 176
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:62
    l_ulNtfnMsgSeqNum = 0;
400a86d9:	2d6352        	s32i	a5, a3, 180
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a86dc:	2b6342        	s32i	a4, a3, 172
400a86df:	2a6322        	s32i	a2, a3, 168
D:\IM_3D_TLC\firmware\algorithm\Misc/FW_SMSG.c:64

    return;
400a86e2:	f00d      	ret.n

400a86e4 <HAL_AHCIInit>:
HAL_AHCIInit():
D:\IM_3D_TLC\firmware\HAL/HAL_Init.c:71
    return;
}

#else
void MCU12_DRAM_TEXT HAL_AHCIInit(void)
{
400a86e4:	f0c112        	addi	a1, a1, -16
400a86e7:	006102        	s32i	a0, a1, 0
D:\IM_3D_TLC\firmware\HAL/HAL_Init.c:72
    HAL_NormalDsgInit();
400a86ea:	e95701        	l32r	a0, 400a2c48 <_mcu2dram_text_start+0x448>
400a86ed:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL/HAL_Init.c:73
    HAL_HsgInit();
400a86f0:	e95701        	l32r	a0, 400a2c4c <_mcu2dram_text_start+0x44c>
400a86f3:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL/HAL_Init.c:74
    HAL_DrqInit();
400a86f6:	e95601        	l32r	a0, 400a2c50 <_mcu2dram_text_start+0x450>
400a86f9:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL/HAL_Init.c:75
    HAL_DwqInit();
400a86fc:	e95601        	l32r	a0, 400a2c54 <_mcu2dram_text_start+0x454>
400a86ff:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL/HAL_Init.c:76
    HAL_SgeInitChainCnt();
400a8702:	e95501        	l32r	a0, 400a2c58 <_mcu2dram_text_start+0x458>
400a8705:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL/HAL_Init.c:77
    HAL_ChainMaintainInit();
400a8708:	e95501        	l32r	a0, 400a2c5c <_mcu2dram_text_start+0x45c>
400a870b:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL/HAL_Init.c:79

    return;
400a870e:	0108      	l32i.n	a0, a1, 0
400a8710:	10c112        	addi	a1, a1, 16
400a8713:	f00d      	ret.n

400a8715 <HAL_AHCIInit+0x31>:
400a8715:	000000                                        ...

400a8718 <HAL_CommInit>:
HAL_CommInit():
D:\IM_3D_TLC\firmware\HAL/HAL_Init.c:42
space for data structures used by HAL routines.
Others      :
Modify      :
****************************************************************************/
void MCU12_DRAM_TEXT HAL_CommInit(void)
{
400a8718:	e95261        	l32r	a6, 400a2c60 <_mcu2dram_text_start+0x460>
400a871b:	f0c112        	addi	a1, a1, -16
400a871e:	2109      	s32i.n	a0, a1, 8
400a8720:	e95191        	l32r	a9, 400a2c64 <_mcu2dram_text_start+0x464>
400a8723:	080c      	movi.n	a8, 0
400a8725:	e93221        	l32r	a2, 400a2bf0 <_mcu2dram_text_start+0x3f0>
D:\IM_3D_TLC\firmware\HAL/HAL_Init.c:157
    */

    OTFB_MODEL_CTRL_REG0 tOtfbMCtrl0;
    OTFB_MODEL_CTRL_REG1 tOtfbMCtrl1;
    
    tOtfbMCtrl0.ulOtfbModelCtrl0DW0 = 0;
400a8728:	0020c0        	memw
400a872b:	0189      	s32i.n	a8, a1, 0
D:\IM_3D_TLC\firmware\HAL/HAL_Init.c:158
    tOtfbMCtrl1.ulOtfbModelCtrl1DW0 = 0;
400a872d:	0020c0        	memw
400a8730:	1189      	s32i.n	a8, a1, 4
D:\IM_3D_TLC\firmware\HAL/HAL_Init.c:159
    tOtfbMCtrl0.bROtfbHostHoldNfc = 1;
400a8732:	ffad72        	movi	a7, 0xfffffdff
400a8735:	00a252        	movi	a5, 0x200
400a8738:	0020c0        	memw
400a873b:	0148      	l32i.n	a4, a1, 0
400a873d:	104470        	and	a4, a4, a7
400a8740:	204450        	or	a4, a4, a5
400a8743:	0020c0        	memw
400a8746:	0149      	s32i.n	a4, a1, 0
D:\IM_3D_TLC\firmware\HAL/HAL_Init.c:160
    tOtfbMCtrl0.bROtfbHostHoldNfcCjhold = 1;
400a8748:	ffab32        	movi	a3, 0xfffffbff
400a874b:	00a402        	movi	a0, 0x400
400a874e:	0020c0        	memw
400a8751:	01b8      	l32i.n	a11, a1, 0
400a8753:	10bb30        	and	a11, a11, a3
400a8756:	20bb00        	or	a11, a11, a0
400a8759:	0020c0        	memw
400a875c:	01b9      	s32i.n	a11, a1, 0
D:\IM_3D_TLC\firmware\HAL/HAL_Init.c:169
    
    tOtfbMCtrl1.ulROtfbmCh032kSel0 = 2;
    tOtfbMCtrl1.ulROtfbmCh132kSel0 = 3;
    tOtfbMCtrl1.ulROtfbmCh232kSel0 = 4;
#else
    tOtfbMCtrl0.bROtfbBfuNum = 1;
400a875e:	e942a1        	l32r	a10, 400a2c68 <_mcu2dram_text_start+0x468>
400a8761:	e8d381        	l32r	a8, 400a2ab0 <_mcu2dram_text_start+0x2b0>
400a8764:	0020c0        	memw
400a8767:	0178      	l32i.n	a7, a1, 0
400a8769:	1077a0        	and	a7, a7, a10
400a876c:	207780        	or	a7, a7, a8
400a876f:	0020c0        	memw
400a8772:	0179      	s32i.n	a7, a1, 0
D:\IM_3D_TLC\firmware\HAL/HAL_Init.c:170
    tOtfbMCtrl0.ulROtfbmCh332kSel0 = 8;
400a8774:	e93e71        	l32r	a7, 400a2c6c <_mcu2dram_text_start+0x46c>
400a8777:	0020c0        	memw
400a877a:	0158      	l32i.n	a5, a1, 0
400a877c:	105590        	and	a5, a5, a9
400a877f:	205570        	or	a5, a5, a7
400a8782:	0020c0        	memw
400a8785:	0159      	s32i.n	a5, a1, 0
D:\IM_3D_TLC\firmware\HAL/HAL_Init.c:171
    tOtfbMCtrl0.ulROtfbmCh332kSel1 = 9;
400a8787:	e93a51        	l32r	a5, 400a2c70 <_mcu2dram_text_start+0x470>
400a878a:	0020c0        	memw
400a878d:	0148      	l32i.n	a4, a1, 0
400a878f:	104460        	and	a4, a4, a6
400a8792:	204450        	or	a4, a4, a5
400a8795:	0020c0        	memw
400a8798:	0149      	s32i.n	a4, a1, 0
D:\IM_3D_TLC\firmware\HAL/HAL_Init.c:173

    tOtfbMCtrl1.ulROtfbmCh032kSel0 = 2;
400a879a:	036c      	movi.n	a3, -32
400a879c:	200c      	movi.n	a0, 2
400a879e:	0020c0        	memw
400a87a1:	11b8      	l32i.n	a11, a1, 4
400a87a3:	10bb30        	and	a11, a11, a3
400a87a6:	20bb00        	or	a11, a11, a0
400a87a9:	0020c0        	memw
400a87ac:	11b9      	s32i.n	a11, a1, 4
D:\IM_3D_TLC\firmware\HAL/HAL_Init.c:174
    tOtfbMCtrl1.ulROtfbmCh032kSel1 = 3;
400a87ae:	1faca2        	movi	a10, 0xfffffc1f
400a87b1:	60a082        	movi	a8, 96
400a87b4:	0020c0        	memw
400a87b7:	1178      	l32i.n	a7, a1, 4
400a87b9:	1077a0        	and	a7, a7, a10
400a87bc:	207780        	or	a7, a7, a8
400a87bf:	0020c0        	memw
400a87c2:	1179      	s32i.n	a7, a1, 4
D:\IM_3D_TLC\firmware\HAL/HAL_Init.c:175
    tOtfbMCtrl1.ulROtfbmCh132kSel0 = 4;
400a87c4:	e92c51        	l32r	a5, 400a2c74 <_mcu2dram_text_start+0x474>
400a87c7:	e92c41        	l32r	a4, 400a2c78 <_mcu2dram_text_start+0x478>
400a87ca:	0020c0        	memw
400a87cd:	1138      	l32i.n	a3, a1, 4
400a87cf:	103350        	and	a3, a3, a5
400a87d2:	203340        	or	a3, a3, a4
400a87d5:	0020c0        	memw
400a87d8:	1139      	s32i.n	a3, a1, 4
D:\IM_3D_TLC\firmware\HAL/HAL_Init.c:176
    tOtfbMCtrl1.ulROtfbmCh132kSel1 = 5;
400a87da:	e92801        	l32r	a0, 400a2c7c <_mcu2dram_text_start+0x47c>
400a87dd:	e928b1        	l32r	a11, 400a2c80 <_mcu2dram_text_start+0x480>
400a87e0:	0020c0        	memw
400a87e3:	11a8      	l32i.n	a10, a1, 4
400a87e5:	10aa00        	and	a10, a10, a0
400a87e8:	20aab0        	or	a10, a10, a11
400a87eb:	0020c0        	memw
400a87ee:	11a9      	s32i.n	a10, a1, 4
D:\IM_3D_TLC\firmware\HAL/HAL_Init.c:177
    tOtfbMCtrl1.ulROtfbmCh232kSel0 = 6;
400a87f0:	e92581        	l32r	a8, 400a2c84 <_mcu2dram_text_start+0x484>
400a87f3:	0020c0        	memw
400a87f6:	1178      	l32i.n	a7, a1, 4
400a87f8:	107790        	and	a7, a7, a9
400a87fb:	207780        	or	a7, a7, a8
400a87fe:	0020c0        	memw
400a8801:	1179      	s32i.n	a7, a1, 4
D:\IM_3D_TLC\firmware\HAL/HAL_Init.c:178
    tOtfbMCtrl1.ulROtfbmCh232kSel1 = 7;
400a8803:	e92151        	l32r	a5, 400a2c88 <_mcu2dram_text_start+0x488>
400a8806:	0020c0        	memw
400a8809:	1148      	l32i.n	a4, a1, 4
400a880b:	104460        	and	a4, a4, a6
400a880e:	204450        	or	a4, a4, a5
400a8811:	0020c0        	memw
400a8814:	1149      	s32i.n	a4, a1, 4
D:\IM_3D_TLC\firmware\HAL/HAL_Init.c:180
#endif
    rGlbOTFBMCtrl0 = tOtfbMCtrl0.ulOtfbModelCtrl0DW0;
400a8816:	0020c0        	memw
400a8819:	002132        	l32i	a3, a1, 0
400a881c:	0020c0        	memw
400a881f:	8a6232        	s32i	a3, a2, 0x228
D:\IM_3D_TLC\firmware\HAL/HAL_Init.c:181
    rGlbOTFBMCtrl1 = tOtfbMCtrl1.ulOtfbModelCtrl1DW0;
400a8822:	0020c0        	memw
400a8825:	012102        	l32i	a0, a1, 4
400a8828:	0020c0        	memw
400a882b:	8b6202        	s32i	a0, a2, 0x22c
D:\IM_3D_TLC\firmware\HAL/HAL_Init.c:46
void MCU12_DRAM_TEXT HAL_CommInit(void)
{
    HalOtfbMemMapInit();

#ifdef DMAE_ENABLE
    HAL_DMAEInit();
400a882e:	e91701        	l32r	a0, 400a2c8c <_mcu2dram_text_start+0x48c>
400a8831:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL/HAL_Init.c:50
#endif

#ifdef SEARCH_ENGINE
    HAL_SEInit();
400a8834:	e91701        	l32r	a0, 400a2c90 <_mcu2dram_text_start+0x490>
400a8837:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL/HAL_Init.c:54
#endif

#ifdef HOST_NVME
    HAL_HwDebugInit();
400a883a:	e91601        	l32r	a0, 400a2c94 <_mcu2dram_text_start+0x494>
400a883d:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL/HAL_Init.c:56
#endif
    HAL_TemperatureSensor_Init();
400a8840:	e91601        	l32r	a0, 400a2c98 <_mcu2dram_text_start+0x498>
400a8843:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\HAL/HAL_Init.c:57
    return;
400a8846:	2108      	l32i.n	a0, a1, 8
400a8848:	10c112        	addi	a1, a1, 16
400a884b:	f00d      	ret.n

400a884d <HAL_CommInit+0x135>:
400a884d:	000000                                        ...

400a8850 <DiskConfig_IsColdStart>:
DiskConfig_IsColdStart():
D:\IM_3D_TLC\firmware\config/Disk_Config.c:97
    return (U8)(l_BootStaticFlag.bsBootMethodSel);
}

BOOL MCU12_DRAM_TEXT DiskConfig_IsColdStart(void)
{
    if (TRUE == l_BootStaticFlag.bsWarmBoot)
400a8850:	e7fb21        	l32r	a2, 400a283c <_mcu2dram_text_start+0x3c>
400a8853:	2f2222        	l32i	a2, a2, 188
400a8856:	036227        	bbci	a2, 2, 400a885d <DiskConfig_IsColdStart+0xd>
D:\IM_3D_TLC\firmware\config/Disk_Config.c:99
    {
        return FALSE;
400a8859:	020c      	movi.n	a2, 0
D:\IM_3D_TLC\firmware\config/Disk_Config.c:103
    }
    else
    {
        return TRUE;
400a885b:	f00d      	ret.n

400a885d <DiskConfig_IsColdStart+0xd>:
400a885d:	120c      	movi.n	a2, 1
400a885f:	f00d      	ret.n

400a8861 <DiskConfig_IsColdStart+0x11>:
400a8861:	000000                                        ...

400a8864 <DiskConfig_Init>:
DiskConfig_Init():
D:\IM_3D_TLC\firmware\config/Disk_Config.c:48
    pBootLoader = (BOOTLOADER_FILE *)OTFB_BOOTLOADER_BASE;

    l_BootStaticFlag.ulStaticFlag = pBootLoader->tSysParameterTable.sBootStaticFlag.ulStaticFlag;
    l_ulSubSysNum = pBootLoader->tSysParameterTable.ulSubSysNum;

    l_ulSubsysNumBits = 0;
400a8864:	00a042        	movi	a4, 0
D:\IM_3D_TLC\firmware\config/Disk_Config.c:40
LOCAL U32 l_ulSubSysPuNum;
LOCAL U32 l_ulSubSysMaxLBACnt;
LOCAL U32 l_ulSubsysNumBits;

void MCU12_DRAM_TEXT DiskConfig_Init(void)
{
400a8867:	e7f581        	l32r	a8, 400a283c <_mcu2dram_text_start+0x3c>
400a886a:	e90c71        	l32r	a7, 400a2c9c <_mcu2dram_text_start+0x49c>
400a886d:	f0c112        	addi	a1, a1, -16
400a8870:	006102        	s32i	a0, a1, 0
D:\IM_3D_TLC\firmware\config/Disk_Config.c:46
    BOOTLOADER_FILE *pBootLoader;

    pBootLoader = (BOOTLOADER_FILE *)OTFB_BOOTLOADER_BASE;

    l_BootStaticFlag.ulStaticFlag = pBootLoader->tSysParameterTable.sBootStaticFlag.ulStaticFlag;
    l_ulSubSysNum = pBootLoader->tSysParameterTable.ulSubSysNum;
400a8873:	6e2752        	l32i	a5, a7, 0x1b8
D:\IM_3D_TLC\firmware\config/Disk_Config.c:45
{
    BOOTLOADER_FILE *pBootLoader;

    pBootLoader = (BOOTLOADER_FILE *)OTFB_BOOTLOADER_BASE;

    l_BootStaticFlag.ulStaticFlag = pBootLoader->tSysParameterTable.sBootStaticFlag.ulStaticFlag;
400a8876:	512702        	l32i	a0, a7, 0x144
400a8879:	2f6802        	s32i	a0, a8, 188
D:\IM_3D_TLC\firmware\config/Disk_Config.c:46
    l_ulSubSysNum = pBootLoader->tSysParameterTable.ulSubSysNum;
400a887c:	306852        	s32i	a5, a8, 192
D:\IM_3D_TLC\firmware\config/Disk_Config.c:51

    l_ulSubsysNumBits = 0;

    /*Calculate Subsystem number bit*/
    while ((1u << l_ulSubsysNumBits) < l_ulSubSysNum)
400a887f:	1525b6        	bltui	a5, 2, 400a8898 <DiskConfig_Init+0x34>
400a8882:	01a062        	movi	a6, 1
400a8885:	0a8076        	loop	a0, 400a8893 <DiskConfig_Init+0x2f>
D:\IM_3D_TLC\firmware\config/Disk_Config.c:53
    {
        l_ulSubsysNumBits++;
400a8888:	441b      	addi.n	a4, a4, 1
D:\IM_3D_TLC\firmware\config/Disk_Config.c:51
    l_ulSubSysNum = pBootLoader->tSysParameterTable.ulSubSysNum;

    l_ulSubsysNumBits = 0;

    /*Calculate Subsystem number bit*/
    while ((1u << l_ulSubsysNumBits) < l_ulSubSysNum)
400a888a:	401400        	ssl	a4
400a888d:	a12600        	sll	a2, a6
400a8890:	04b257        	bgeu	a2, a5, 400a8898 <DiskConfig_Init+0x34>

400a8893 <DiskConfig_Init+0x2f>:
400a8893:	fffb86        	j	400a8885 <DiskConfig_Init+0x21>

400a8896 <DiskConfig_Init+0x32>:
	...

400a8898 <DiskConfig_Init+0x34>:
400a8898:	316842        	s32i	a4, a8, 196
D:\IM_3D_TLC\firmware\HAL\Xtensa/HAL_Xtensa.c:68
400a889b:	03eb40        	rsr.prid	a4
D:\IM_3D_TLC\firmware\config/Disk_Config.c:69
    
    l_ulSubSysPuNum     = pBootLoader->tSysParameterTable.ulSubSysCeNum;
    l_ulSubSysMaxLBACnt = (pBootLoader->tSysParameterTable.ulSysMaxLBACnt >> l_ulSubsysNumBits);

    //initialize DRAM total size parameter
    g_ulDramTotalSize = pBootLoader->tSysParameterTable.tHALFeature.aFeatureDW[0];
400a889e:	ad2732        	l32i	a3, a7, 0x2b4
400a88a1:	1839      	s32i.n	a3, a8, 4
D:\IM_3D_TLC\firmware\config/Disk_Config.c:71

    HAL_InitGlobalPUNum();
400a88a3:	e8ff01        	l32r	a0, 400a2ca0 <_mcu2dram_text_start+0x4a0>
400a88a6:	0000c0        	callx0	a0
D:\IM_3D_TLC\firmware\config/Disk_Config.c:73

    return;
400a88a9:	0108      	l32i.n	a0, a1, 0
400a88ab:	10c112        	addi	a1, a1, 16
400a88ae:	f00d      	ret.n

400a88b0 <g_aLdpRecc>:
.mcu2dram.text_symbol_1482204275():
400a88b0:	4a4a4a4a                                JJJJ

400a88b4 <g_aLdpRecc+0x4>:
400a88b4:	00000000                                ....

400a88b8 <g_atLdpcMatTable>:
400a88b8:	68584888 80787088                       .HXh.px.

400a88c0 <g_aDsEntryTab>:
400a88c0:	0000203e 00000000 0000202e 00000000     > ....... ......
400a88d0:	0000201e 00000000 0000200e 00000000     . ....... ......
400a88e0:	00001e2e 00000000 00001e20 00000000     ........ .......
400a88f0:	00001e0e 00000000 00001e00 00000000     ................

400a8900 <g_aAsyncTConfTab_1202>:
400a8900:	538c8108 0010048c 00000089 000ba900     ...S............
	...
400a891c:	51808208 0010248c 00000089 1f89a900     ...Q.$..........
	...
400a8934:	00000001 51808208 0010248c 00002089     .......Q.$... ..
400a8944:	1f89a900 00000000 00000000 00000002     ................
400a8954:	518d03bd 0411148c 000030af 1f89a900     ...Q.....0......
400a8964:	00000000 2c2c2c2c 00000013 538c8910     ....,,,,.......S
400a8974:	0010c48c 00000089 0009a900 00000000     ................
	...
400a898c:	50610bc8 ce119484 000000af 1fe9a900     ..aP............
	...
400a89a4:	00000001 53808b10 0010c48c 000000af     .......S........
400a89b4:	0009a900 00000000 2c2c2c2c 00000002     ........,,,,....
400a89c4:	53ac8bc8 ce11948c 000030af 0f89a900     ...S.....0......
400a89d4:	00000000 2c2c2c2c 00000013              ....,,,,....

400a89e0 <g_aRetryPara_2063>:
400a89e0:	ff0089ef ff0189ef ff0289ef ff0389ef     ................
400a89f0:	ff0489ef ff0589ef ff0689ef ff0789ef     ................
400a8a00:	ff0889ef ff0989ef ff0a89ef ff0b89ef     ................
400a8a10:	ff0c89ef ff0d89ef ff0e89ef ff0f89ef     ................

400a8a20 <g_aCQE1E>:
400a8a20:	fcff0def 60300090 853feed0 fadfda09     ......0`..?.....

400a8a30 <g_aCQE2E>:
400a8a30:	10803000 d0601181 10811180 1185e005     .0....`.........
400a8a40:	15803060 31003200 15813160 e0061a80     `0...2.1`1......

400a8a50 <g_aSQEE>:
400a8a50:	2e703e70 0e703d70 3d78be70 3e782e78     p>p.p=p.p.x=x.x>

400a8a60 <l_aQETable>:
400a8a60:	02ffc002 0fff03ff 04ffc060 00ff8040     ........`...@...
400a8a70:	ffc09040 d760230d 200dff60 0560d770     @....#`.`.. p.`.
400a8a80:	e1502670 310dffa0 60d7b070 60230eff     p&P....1p..`..#`
400a8a90:	0eff60d7 60d77020 50267005 0effa0e1     .`.. p.`.p&P....
400a8aa0:	d6b07031 b1713160 0eff61d7 d7b07031     1p..`1q..a..1p..
400a8ab0:	5026ff60 0dffa0e1 076007e1 23620761     `.&P......`.a.b#
400a8ac0:	d760d763 d762d761 e10dff63 60d6702a     c.`.a.b.c...*p.`
400a8ad0:	61d6712a 62d6722a 63d77320 50267005     *q.a*r.b s.c.p&P
400a8ae0:	7105a0e1 a1e15126 52267205 7305a2e1     ...q&Q...r&R...s
400a8af0:	a3e15326 34e10dff 60d6b070 d6b17134     &S.....4p..`4q..
400a8b00:	b2723461 733162d6 d760d7b3 d762d761     a4r..b1s..`.a.b.
400a8b10:	070eff63 07610760 d7632362 d761d760     c...`.a.b#c.`.a.
400a8b20:	ff63d762 d6702a0e d6712a60 d6722a61     b.c..*p.`*q.a*r.
400a8b30:	d7732062 26700563 05a0e150 e1512671     b s.c.p&P...q&Q.
400a8b40:	267205a1 05a2e152 e1532673 340effa3     ..r&R...s&S....4
400a8b50:	60d6b070 d6b17134 b2723461 733162d6     p..`4q..a4r..b1s
400a8b60:	d660d6b3 d662d661 b4743463 753464d6     ..`.a.b.c4t..d4u
400a8b70:	3465d6b5 66d6b676 d7b77731 d765d764     ..e4v..f1w..d.e.
400a8b80:	ff67d766 b070340e 713460d6 3461d6b1     f.g..4p..`4q..a4
400a8b90:	62d6b272 d7b37331 d761d760 ff63d762     r..b1s..`.a.b.c.
400a8ba0:	b070340e 713460d6 3461d6b1 62d6b272     .4p..`4q..a4r..b
400a8bb0:	d6b37331 d661d660 2463d662 2464d674     1s..`.a.b.c$t.d$
400a8bc0:	2465d675 2166d676 d764d777 d766d765     u.e$v.f!w.d.e.f.
400a8bd0:	4009ff67 ff8005c0 50267005 7105a0e1     g..@.....p&P...q
400a8be0:	a1e15126 52267205 7305a2e1 a3e15326     &Q...r&R...s&S..
400a8bf0:	ff60d7ff                                ..`.

400a8bf4 <l_aQETable+0x194>:
	...

400a8c00 <l_aPioCmdTable>:
400a8c00:	021100ef 02140001 03100015 03100000     ................
400a8c10:	03100000 83100000 021100ef 02140001     ................
400a8c20:	03100005 03100000 03100000 83100000     ................

400a8c30 <l_LdpcRawFirstRetryTable_2073>:
400a8c30:	ff000455                                U...

400a8c34 <l_LdpcRawFirstRetryTable_2073+0x4>:
400a8c34:	00000000                                ....

400a8c38 <l_LdpcRawSecondRetryTable_2074>:
400a8c38:	fffc0455 ff040455                       U...U...

400a8c40 <l_LdpcRawThirdRetryTable_2075>:
400a8c40:	fffc0455 ff000455 ff040455              U...U...U...

400a8c4c <l_LdpcRawThirdRetryTable_2075+0xc>:
400a8c4c:	00000000                                ....

400a8c50 <l_LdpcRawFourthRetryTable_2076>:
400a8c50:	fff80455 fffc0455 ff040455 ff080455     U...U...U...U...

400a8c60 <l_LdpcRawFifthRetryTable_2077>:
400a8c60:	fff80455 fffc0455 ff000455 ff040455     U...U...U...U...
400a8c70:	ff080455                                U...

400a8c74 <l_LdpcRawFifthRetryTable_2077+0x14>:
	...

400a8c80 <l_aLdpcLlrEntry_2078>:
400a8c80:	000002cf 00000200 0000500e 00006100     .........P...a..
400a8c90:	000af86a 000e3080 012e00ac 01e71840     j....0......@...
400a8ca0:	2bdf846c 3ef38c20                       l..+ ..>

400a8ca8 <l_aLdpcLlrEntry_2078+0x28>:
	...

400a8cb0 <l_aMatPara_1090>:
	...

400a8cd0 <pSoftMcu1CfgReg>:
400a8cd0:	00000000                                ....

400a8cd4 <pSoftMcu2CfgReg>:
400a8cd4:	00000000                                ....

400a8cd8 <pSoftIntStsReg>:
400a8cd8:	00000000                                ....

400a8cdc <g_pSoftDesc>:
400a8cdc:	00000000                                ....

400a8ce0 <g_aCodeWordSegment>:
	...

400a8cf0 <l_ucFifoFwReadPtr_1102>:
	...

400a8cf1 <l_ucFifoFwWritePtr_1112>:
	...

400a8d00 <l_aLdpcSDescCfgCw_1118>:
	...

400a8d10 <g_aCwNumPerDesc>:
	...

400a9000 <LdpcMatParaAddr>:
LdpcMatParaAddr():
400a9000:	8096eee9 1f16c5a0 414005ed 521ca314     ..........@A...R
400a9010:	616d896e 3caed49c 40057254 0eb8d310     n.ma...<Tr.@....
400a9020:	a39583f5 6ddac49c 8047281d e9f8b520     .......m.(G. ...
400a9030:	61642945 159ac524 a25bba72 1cd2d41c     E)da$...r.[.....
400a9040:	41afcbe3 30b0d598 20f35044 9998c5a9     ...A...0DP. ....
400a9050:	83187e87 593c8314 c0a431a5 7cb4d49c     .~....<Y.1.....|
400a9060:	e122ddba 8ac4c5a8 62233be0 e1d48290     .."......;#b....
400a9070:	2036162a 35e4d610 629aaa46 60f8a314     *.6 ...5F..b...`
400a9080:	e6f57b4c 29bab4a0 40b9ca3d 3ac2d490     L{.....)=..@...:
400a9090:	6191fdec 2eeaa41c a22c6384 0246c5a8     ...a.....c,...F.
400a90a0:	6069cac5 85929314 e1c3b4d2 d91ac5a0     ..i`............
400a90b0:	41f69449 f8ccd410 c0ad0553 a284d49c     I..A....S.......
400a90c0:	837c167e 8914c514 41bde612 779cd59c     ~.|........A...w
400a90d0:	008898a3 26bac525 832c0122 09e4b314     ....%..&".,.....
400a90e0:	60d1b37f b200d390 41fc8500 753eb28c     ...`.......A..>u
400a90f0:	06b2b48e 25aac525 2015a2bd 19169308     ....%..%... ....
400a9100:	a4ab1296 8956c59c 02001449 c7ead5a9     ......V.I.......
400a9110:	a0e362c3 6832a4a0 61082bfd f1608390     .b....2h.+.a..`.
400a9120:	262e8edd 796cd62d 203342c5 5d96d50c     ...&-.ly.B3 ...]
400a9130:	a2b6df43 c98ec398 24d8d562 9dead62d     C.......b..$-...
400a9140:	40bf2cf3 64f2a20c a132cf72 4d9a8398     .,.@...dr.2....M
400a9150:	20b9498a 36b0c51c 622a6d05 4de6b310     .I. ...6.m*b...M
400a9160:	a1e17bf9 0adcd4a0 60d8369c 677ed61c     .{.......6.`..~g
400a9170:	c2888eb9 ec7cb524 a41f4d45 a95ed520     ....$.|.EM.. .^.
400a9180:	40ae915c b18ac310 a19525f3 b81cb4a0     \..@.....%......
400a9190:	a3e00bb8 4bf0c51c 208a3c86 371e8188     .......K.<. ...7
400a91a0:	e4cded49 7340d5a4 c46f3b46 10ecd61c     I.....@sF;o.....
400a91b0:	40c99018 694cb30c a12f55a7 cc5ea4a0     ...@..Li.U/...^.
400a91c0:	20f1557c f1e6d5a8 621b74f8 ed629290     |U. .....t.b..b.
400a91d0:	c365c758 dd70c41c 205d3afa 081ab488     X.e...p..:] ....
400a91e0:	a4a21a2c 4b94d41c c2542fef 5390c520     ,......K./T. ..S
400a91f0:	60db072a 3e18c514 813c6cab 2c72d49c     *..`...>.l<...r,
400a9200:	c14bb2a5 e6aeb4a0 a0cb7e39 614ad61c     ..K.....9~....Ja
400a9210:	6227246e 7804b518 831daf8b e3aad628     n$'b...x....(...
400a9220:	8019789e 8710941c 41384eca dc5eb314     .x.......N8A..^.
400a9230:	20dc5caf c582b51c 82cc0604 9aa08314     .\. ............
400a9240:	03508dbe a728d625 40405040 3f06b394     ..P.%.(.@P@@...?
400a9250:	8170b321 470cc498 835a8c31 57acd514     !.p....G1.Z....W
400a9260:	60ea2353 cd84d598 418f2c1a e1e4c4a0     S#.`.....,.A....
400a9270:	82ac353d 9560a41c 20149a15 45c2b314     =5....`.... ...E
400a9280:	e3e2102d e928d524 c14bcb0b 4246c520     -...$.(...K. .FB
400a9290:	607ced02 d42ad49c 82014703 d124c594     ..|`..*..G....$.
400a92a0:	80f7d80e 69329394 4173555e 2eb4b518     ......2i^UsA....
400a92b0:	624fb40d 22c8d620 a065dda7 f0e2d5a0     ..Ob .."..e.....
400a92c0:	61b11b7a b4dec498 8205d6ac e954d51c     z..a..........T.
400a92d0:	208a80cb a7d4a498 8329f955 c4eeb41c     ... ....U.).....
400a92e0:	41458bd5 c070d614 8049e966 976cc5a4     ..EA..p.f.I...l.
400a92f0:	a3cb7998 bf7aa418 073dc5cb f558b525     .y....z...=.%.X.
400a9300:	604adbc6 fc20d314 410fea59 4c20c390     ..J`.. .Y..A.. L
400a9310:	e08317d6 f11ad62c 41ce58e5 74b49414     ....,....X.A...t
400a9320:	832ee5a1 3ca4d518 20c5d641 1c3e4188     .......<A.. .A>.
400a9330:	c51a5039 7f48a41c 8128b6f8 df7ac5a4     9P....H...(...z.
400a9340:	40c641e6 29c4a418 a37a3bc9 c50cc49c     .A.@...).;z.....
400a9350:	83cc7941 eb42d5a4 a0ed6e46 aebed618     Ay....B.Fn......
400a9360:	41db123c 888eb520 621de111 387ad51c     <..A ......b..z8
400a9370:	80e8f200 3b2ac59c a1a1d7fc b9dc9418     ......*;........
400a9380:	20e33957 32f89208 c363221b 7946d41c     W9. ...2."c...Fy
400a9390:	a3b5432b 828ac5a8 808fc5dc 5e609314     +C............`^
400a93a0:	e10b5823 0242c5a8 402c076f b3fad620     #X....B.o.,@ ...
400a93b0:	81fd2e1e 76c2d41c a2dabd97 b660a498     .......v......`.
400a93c0:	624e4d65 d120b394 00694a3c 042cd5a9     eMNb.. .<Ji...,.
400a93d0:	81ef91d0 0898c498 6129fcf8 d7fcb498     ..........)a....
400a93e0:	40d3c39f 1722820c e52624eb d4f0d628     ...@.."..$&.(...
400a93f0:	8009aab0 3846d5a0 a1cbda61 fa28c518     ......F8a.....(.
400a9400:	627038e2 811ac49c d342f75d e6ca69de     .8pb....].B..i..
400a9410:	0f1f05e8 cf797e83 b7d93baf 729da5fd     .....~y..;.....r
400a9420:	e49041e0 e5eef3a9 4ee30e82 05027ad8     .A.........N.z..
400a9430:	6efb2e00 e94f9c05 ae3e3872 755bb2de     ...n..O.r8>...[u
400a9440:	466a75eb dd3381b2 426c1ca5 bb9bd796     .ujF..3...lB....
400a9450:	811bbc71 6858b494 827551fc 6c16d4a0     q.....Xh.Qu....l
400a9460:	c45a2a88 2ee0e624 e62f217f 339cb520     .*Z.$....!/. ..3
400a9470:	82aab649 22969394 039387ac 189ed62d     I......"....-...
400a9480:	60bf462a 214cd590 c1129265 5c38a4a0     *F.`..L!e.....8\
400a9490:	a2edccab a290e6b0 a235e89f e6e4941c     ..........5.....
400a94a0:	80411584 99b4c518 610de30c 48a8b49c     ..A........a...H
400a94b0:	208e7bd8 72e0e208 a359084c 7cf4a418     .{. ...rL.Y....|
400a94c0:	674c474b e420e6b1 6001842b 307ad5a0     KGLg.. .+..`..z0
400a94d0:	417ad9bd 52bae514 c4558d17 2570c49c     ..zA...R..U...p%
400a94e0:	6088fab8 75467314 41a5e7d3 6086d520     ...`.sFu...A ..`
400a94f0:	24ed7a88 82b4e62d 601314d1 daa66290     .z.$-......`.b..
400a9500:	e16579c2 3cc0c4a0 42ab820f 5954e6ad     .ye....<...B..TY
400a9510:	4027923a ccd8d28c e1593552 c74ae520     :.'@....R5Y. .J.
400a9520:	c4ad0089 defac5a4 60bc78fc 2c8ea414     .........x.`...,
400a9530:	c15f4c42 cd10d5a4 8209fe8e c502e61c     BL_.............
400a9540:	6013f91c 0fa4c494 412ae59f 0406a398     ...`......*A....
400a9550:	04e1f335 5914e6ad 40170d97 b574e60c     5......Y...@..t.
400a9560:	a127c90d 3672a4a0 c436e6d0 8c8ed59c     ..'...r6..6.....
400a9570:	609141e2 20989418 41f8a0cd c60ec290     .A.`... ...A....
400a9580:	470a1fe3 c29ee6ad a0d90ee6 0762c5a0     ...G..........b.
400a9590:	61de9870 7aaee524 829f2921 b42ed398     p..a$..z!)......
400a95a0:	20e8ba95 e3fcd290 e2cf5580 f4c8e5a4     ... .....U......
400a95b0:	c36766d5 c910c520 6098c23b a9dc9314     .fg. ...;..`....
400a95c0:	0195a5d3 99fee6b1 824aef13 63beb51c     ..........J....c
400a95d0:	40a85e4c 57d0d5a8 61be4215 3ec68310     L^.@...W.B.a...>
400a95e0:	e560d0c8 70e6e624 009ad5fd c300d62d     ..`.$..p....-...
400a95f0:	41836aff f5909390 a3dc4680 3f2ee518     .j.A.....F.....?
400a9600:	2088b396 0780d490 a2607fe1 a832a398     ... ......`...2.
400a9610:	0303099f 610ae62d c0adad53 fca6d51c     ....-..aS.......
400a9620:	a18ba381 7a5ce5a4 62e1fe86 977ac410     ......\z...b..z.
400a9630:	6041d7b2 9f0ed290 41204e7c 47fce618     ..A`....|N A...G
400a9640:	07a133c8 73ccb525 c029c715 89f4d4a0     .3..%..s..).....
400a9650:	816975a6 044ab514 626374cb 952ee61c     .ui...J..tcb....
400a9660:	00512036 ca30c5a9 a1f2dbfe 5032e398     6 Q...0.......2P
400a9670:	62b37c73 b910d490 a0b1a6b6 42368398     s|.b..........6B
400a9680:	4119416e 427ad62c 830408b0 6bb4e524     nA.A,.zB....$..k
400a9690:	2073c0d7 ad52c524 6280a008 7224b290     ..s $.R....b..$r
400a96a0:	e6ab2664 9bd4e6a0 4061d6f4 63d29314     d&........a@...c
400a96b0:	6101d129 6feee69c 044c7f86 4f2ac5a9     )..a...o..L...*O
400a96c0:	a0b42b49 073cd624 6165f8d7 c112e510     I+..$.<...ea....
400a96d0:	c2351c45 e8d6b41c a039a838 d738a418     E.5.....8.9...8.
400a96e0:	4160746c 3b1ce390 23013ce0 c44cd62d     lt`A...;.<.#-.L.
400a96f0:	c0f5f4d1 17e4e5a0 e15b7e5f a88ad524     ........_~[.$...
400a9700:	62b83bf9 fe4cc290 808c35c9 95807314     .;.b..L..5...s..
400a9710:	217ce89d f2d6e6a9 62d945d7 9c50c5a0     ..|!.....E.b..P.
400a9720:	208e9ef9 8886d490 62946b70 0e10b314     ... ....pk.b....
400a9730:	072a06ef e9a0e629 40ad9b8b 86e4a498     ..*.)......@....
400a9740:	61660683 b6ae8290 6765a4e3 b092e6b1     ..fa......eg....
400a9750:	6077e4d5 7388d314 014c84ce 0732e5a5     ..w`...s..L...2.
400a9760:	82f53f5c 15a4c51c 2042278e d662e58c     \?.......'B ..b.
400a9770:	82ea74c2 0630c518 e5d796e0 5408d4a0     .t....0........T
400a9780:	40ec0a87 38ba941c 619cd2e8 897ed614     ...@...8...a..~.
400a9790:	c4fe2ba5 2b32e5a8 6064c285 04dee494     .+....2+..d`....
400a97a0:	c14ab735 9e14c59c 82ea1be8 fdb0d520     5.J......... ...
400a97b0:	807e2f14 6b4cd61c c110cf51 796ce5a8     ./~...LkQ.....ly
400a97c0:	6253739b 07449414 60ccf94d dfcad624     .sSb..D.M..`$...
400a97d0:	41d511c6 039ce414 c48eb9af c13cb51c     ...A..........<.
400a97e0:	20e54350 3814e594 62b9a5c5 aebc8398     PC. ...8...b....
400a97f0:	247a9ec5 9ff0d629 6005b496 afd0b51c     ..z$)......`....
400a9800:	41b8fa01 d2dae310 051d8009 83e8d625     ...A........%...
400a9810:	803dc369 ee8ad398 a1c0bd7c 5178e628     i.=.....|...(.xQ
400a9820:	6231fdad 0864b4a0 a0447268 0312d628     ..1b..d.hrD.(...
400a9830:	61c4a5c5 cb58e5a0 824c807f c3609398     ...a..X...L...`.
400a9840:	20cdb3a9 5cbe8394 62efcb03 383ed5a4     ... ...\...b..>8
400a9850:	c4a2771d 2266e628 a2c075a7 8808642f     .w..(.f".u../d..
400a9860:	e7d48402 7182befb fbfef897 d49818ff     .......q........
400a9870:	52b242c6 a933fe8a 65fc008d 59b9f861     .B.R..3....ea..Y
400a9880:	5a31af88 730396c3 eff8dcc9 5e848e1b     ..1Z...s.......^
400a9890:	09693bf5 c9082dbe da05dc07 f88afd32     .;i..-......2...
400a98a0:	2087f32a 166cf731 8186761a a290d520     *.. 1.l..v.. ...
400a98b0:	6223e113 dfdcb398 a22a4544 f34cf620     ..#b....DE*. .L.
400a98c0:	809cad2f dd7ea498 a1fccfeb 9c02d59c     /.....~.........
400a98d0:	62aff87f fbb4f724 c07446ae f4e2e5a0     ...b$....Ft.....
400a98e0:	61bf9c3d 6bbed514 e4b6a7da 20fcd62c     =..a...k....,.. 
400a98f0:	2022dbea 442cf608 83710d94 8e9aa414     .." ..,D..q.....
400a9900:	e620515a c3fae524 405755e5 2736f4a0     ZQ .$....UW@..6'
400a9910:	e1970b1a 19ccd62c 83a1ef8d 8056e314     ....,.........V.
400a9920:	208cd385 ed7eb524 822ea4c6 6f84f735     ... $.~.....5..o
400a9930:	a3a2c3c7 974c8398 6182be52 2a20d390     ......L.R..a.. *
400a9940:	405c2cec c840e5a0 a4421a00 9752c524     .,\@..@...B.$.R.
400a9950:	c58652e7 385af41c 2015685d 308aa310     .R....Z8]h. ...0
400a9960:	22c5c33f 0b0cf735 0347aab1 e39ef62d     ?.."5.....G.-...
400a9970:	40e7dec4 01b8d314 e145e439 ea76e524     ...@....9.E.$.v.
400a9980:	83189471 306ce62c 20614db1 87e0620c     q...,.l0.Ma .b..
400a9990:	62d3124b 6ad4f620 e51e2016 9b9ce6a4     K..b ..j. ......
400a99a0:	82523cdc 0bcab518 a0ea73c0 3732e6a0     .<R......s....27
400a99b0:	e17d932a 77fcc524 c30dcec3 7668f62c     *.}.$..w....,.hv
400a99c0:	20241662 856cd288 81b4a90b 344cf520     b.$ ..l..... .L4
400a99d0:	e57ce471 d4cef5a4 40ffb80c 735e830c     q.|........@..^s
400a99e0:	e400730a 03a2e628 2169d406 33a0d62d     .s..(.....i!-..3
400a99f0:	40f1cfe0 9618d394 43ddb61e 94a2f72d     ...@.......C-...
400a9a00:	80437b71 96de9418 a19a38b9 c588c41c     q{C......8......
400a9a10:	22c84243 a774f6a9 83b52297 f262e598     CB."..t.."....b.
400a9a20:	60c9464f 41d2e414 4115a74c 5b40a498     OF.`...AL..A..@[
400a9a30:	e43b40db e79cd62c e5fdea1e d40ef628     .@;.,.......(...
400a9a40:	20d072a1 f412920c 02019c29 d1acf6ad     .r. ....).......
400a9a50:	c1f15a8c b036f724 60592ddb 1ec6d598     .Z..$.6..-Y`....
400a9a60:	82eba958 9876e620 e58aca30 3e20a4a0     X... .v.0..... >
400a9a70:	40384141 049ce60c a197c98d 9966b51c     AA8@..........f.
400a9a80:	c40b0aa1 e070f6a8 20b995ff 8e749414     ......p.... ..t.
400a9a90:	621f33b6 3324e610 e67967de 6b70f6ac     .3.b..$3.gy...pk
400a9aa0:	809406e8 71e8941c 61cecb36 762ef628     .......q6..a(..v
400a9ab0:	a2a1108a 5888d598 82878642 6bd8f728     .......XB...(..k
400a9ac0:	20c0a954 f724d418 a3e5d32d 3882c59c     T.. ..$.-......8
400a9ad0:	2710b03d 4720f729 406d53b7 9bacb410     =..'). G.Sm@....
400a9ae0:	61480f0a de00c498 a4413fba ffa2e6b0     ..Ha.....?A.....
400a9af0:	20df13af bf92d488 e3fd26fd f6f2f720     ... .....&.. ...
400a9b00:	a2732982 6116b518 8033fac6 842ad398     .)s....a..3...*.
400a9b10:	61986a26 28d0f514 282bc7f8 23c6e62d     &j.a...(..+(-..#
400a9b20:	2026a66c 7770830c a2bae8c7 5e1ef72c     l.& ..pw....,..^
400a9b30:	e4cd5eb7 fe8cd524 600fd18b 3cf4e624     .^..$......`$..<
400a9b40:	c1f86aa9 470af5a8 82a23b65 1718c394     .j.....Ge;......
400a9b50:	803bf980 836af6a0 a1804141 6d4ce5a4     ..;...j.AA....Lm
400a9b60:	62020c48 205806a0 e6071fe0 9892b520     H..b..X .... ...
400a9b70:	c04aa839 e76ce6a4 a11124cf 70eac51c     9.J...l..$.....p
400a9b80:	6256e775 a200f410 40f1e210 a800e524     u.Vb.......@$...
400a9b90:	81ade8ed 1b54f618 a34ab119 0182d59c     ......T...J.....
400a9ba0:	60582325 b2fa9314 4191a7a1 6932f734     %#X`.......A4.2i
400a9bb0:	e4170b11 814ec5a8 6055b166 3994b410     ......N.f.U`...9
400a9bc0:	e160452f 68ace524 a27661ce 1722f6b0     /E`.$..h.av...".
400a9bd0:	62864855 596cb418 80619679 87aad398     UH.b..lYy.a.....
400a9be0:	215bbd0e 1c06f731 05519535 d17af629     ..[!1...5.Q.).z.
400a9bf0:	20e14af3 9198d50c c2d34688 7f9ab49c     .J. .....F......
400a9c00:	a471b3b7 fcdce5a0 80dc9112 2308e624     ..q.........$..#
400a9c10:	41ead9fe fdb8f69c a38d685e a0eea418     ...A....^h......
400a9c20:	206d4cc2 8662e5a8 a2b1b617 f78cf69c     .Lm ..b.........
400a9c30:	c330eba5 72eac4a0 407706c6 df22d610     ..0....r..w@..".
400a9c40:	81385c57 52f4a414 c3a9833b 2b9ef724     W\8....R;...$..+
400a9c50:	e2952291 5f98b520 20761a5b 55b0f730     .".. .._[.v 0..U
400a9c60:	8393efd9 1eb8d594 c32bd1ce 2dc6b49c     ..........+....-
400a9c70:	20c3d869 4baee418 82397f74 1a34d628     i.. ...Kt.9.(.4.
400a9c80:	e51dcb58 86ccf524 4035eab3 a808c48c     X...$.....5@....
400a9c90:	81f24dcf bba48398 65484a91 0c64f735     .M.......JHe5.d.
400a9ca0:	80ee74be 92f6d41c a179152f e698e62c     .t....../.y.,...
400a9cb0:	621a2ef0 d28af518 808ebebd 6faca498     ...b...........o
400a9cc0:	41a33cf4 a08ce414 e36756e9 d754f62c     .<.A.....Vg.,.T.
400a9cd0:	49e68f5e 0206f735 a0cd02ae 6232b41c     ^..I5.........2b
400a9ce0:	4172a74b 80fac310 a3e91785 b742f6a4     K.rA..........B.
400a9cf0:	8100000d fac3d870 8108914e 52b9e078     ....p...N...x..R
400a9d00:	8a11228f 2a944d80 00000000 00000000     ."...M.*........
	...
400a9d40:	f143d2f2 27eb4709 5e483fad ac51b706     ..C..G.'.?H^..Q.
400a9d50:	025b015e 1d7a3301 50575a8f 5f069bce     ^.[..3z..ZWP..._
400a9d60:	1ad410ef dbf750bb 44feb44a ab3ed27d     .....P..J..D}.>.
400a9d70:	3740e77f a6fc0fa7 2a11f0f3 f4dc0594     ..@7.......*....
400a9d80:	9ad1d8bd fc27c2eb 4760507c 5658a303     ......'.|P`G..XV
400a9d90:	1fc353c3 576992ed 080403d2 d3da498e     .S....iW.....I..
400a9da0:	0c948374 011e1cbc 91aa14eb 68d8390e     t............9.h
400a9db0:	8510709b c59a9371 0f85685a 493da21d     .p..q...Zh....=I
400a9dc0:	f0fa247b 2f76b796 d6260c66 d5b4212d     {$....v/f.&.-!..
400a9dd0:	a79445ec 302971ef 1b9e2d97 4f728d08     .E...q)0.-....rO
400a9de0:	5a357438 e80d7a91 40e35271 c2791b93     8t5Z.z..qR.@..y.
400a9df0:	b174f3a9 ab364826 00bed882 5d57bc58     ..t.&H6.....X.W]
400a9e00:	8e81fbd7 e92e6b72 cbddc363 907e151e     ....rk..c.....~.
400a9e10:	b2353078 9f89f8fe c9d5d170 8f4621d9     x05.....p....!F.
400a9e20:	97cdd0e2 dafb4886 c1f207cd 1f8c7af4     .....H.......z..
400a9e30:	33b0dbd9 6c19c93e f70f6278 cb4db729     ...3>..lxb..).M.
400a9e40:	a03f700e 25445acf 6d46ac4e 4a74f6e1     .p?..ZD%N.Fm..tJ
400a9e50:	67146132 5b59f6cf 8cb14c45 9efa8e1d     2a.g..Y[EL......
400a9e60:	48e1f3c4 1673af29 5f0e20e0 642cf979     ...H).s.. ._y.,d
400a9e70:	4d6a3ec1 7157a5b5 bfa3c46f f952bf23     .>jM..Wqo...#.R.
400a9e80:	54f1e356 0113c531 7c071228 48d9df32     V..T1...(..|2..H
400a9e90:	49a68a0e c62329c5 210390e4 ebd8e013     ...I.)#....!....
400a9ea0:	cbcb5a50 8b68c992 fa680bcb 11c2ca42     PZ....h...h.B...
400a9eb0:	9fc13925 f7fa1dd6 3f99aec8 2e10e89d     %9.........?....
400a9ec0:	31e0dc89 2c8a778e af9c4834 8d947ce0     ...1.w.,4H...|..
400a9ed0:	28e98dd6 9a448cd4 992f15e7 1b9f9bfd     ...(..D.../.....
400a9ee0:	0120c3b9 48a877d6 7845db02 d5bc59d6     .. ..w.H..Ex.Y..
400a9ef0:	d3791606 4bbeaceb 2cf5d0f4 4333cc40     ..y....K...,@.3C
400a9f00:	230ae8a4 58dfa9c6 16ba5928 1ea9ee38     ...#...X(Y..8...
400a9f10:	987dbe52 25f0101d 1d568425 31ef51ef     R.}....%%.V..Q.1
400a9f20:	06a6f42f 4a3ff979 7ab27b86 ffff6f8d     /...y.?J.{.z.o..
400a9f30:	4ae90a4a 69cc9a95 15afc90e 495b3839     J..J...i....98[I
400a9f40:	bf63f1e1 22133584 4995f450 229e5221     ..c..5."P..I!R."
400a9f50:	88a7858d 4b3a4a74 362de22e c43c0f37     ....tJ:K..-67.<.
400a9f60:	360ea303 dcff45e3 d792ae5f 7ad28dfb     ...6.E.._......z
400a9f70:	672cbe42 5422cdb1 2511fac5 8f5fe0f8     B.,g.."T...%.._.
400a9f80:	7b572c5a 80ce7757 60415694 157a47f3     Z,W{Ww...VA`.Gz.
400a9f90:	9cf4308c 4426a293 db8bb705 4bf7308a     .0....&D.....0.K
400a9fa0:	1050a8d8 06b6c3a9 4fc5c7d4 a97bb751     ..P........OQ.{.
400a9fb0:	3c47bc75 d86a2ec0 44478ba7 d7c09060     u.G<..j...GD`...
400a9fc0:	6d9aac05 cd2f0c46 0980ffdc a485e922     ...mF./....."...
400a9fd0:	95a6b55b b1394b47 12338abf 2daad873     [...GK9...3.s..-
400a9fe0:	b68a4015 3b27ceae 83c83d89 e3be2e17     .@....';.=......
400a9ff0:	413faccf 298c1be4 cfb8eacb 321bc524     ..?A...)....$..2
400aa000:	1f520c13 86d89afd f22fa33e a9b43ec6     ..R.....>./..>..
400aa010:	b4d122d0 ff5605c0 db2f5af7 58fdf920     ."....V..Z/. ..X
400aa020:	285fa1e8 f6fbb386 f98db537 c8ad93a1     .._(....7.......
400aa030:	5af11439 0852b1e2 e27f8383 b01c2527     9..Z..R.....'%..
400aa040:	815b2e8d 0858fa9c 084409f9 8598f927     ..[...X...D.'...
400aa050:	bd9d2fda 33ab9dc0 dfad9bd8 b45317b7     ./.....3......S.
400aa060:	327d6524 a7591876 34257174 063f8882     $e}2v.Y.tq%4..?.
400aa070:	b88a798a febc5e7c c0e24335 e5d1b088     .y..|^..5C......
400aa080:	e12f529a ba92d0b9 e98701a7 d68ea5c9     .R/.............
400aa090:	361cef14 1ec7c2fa d2c4537c 71e5daea     ...6....|S.....q
400aa0a0:	4ce4f937 4ebd3560 12143a92 a9555c51     7..L`5.N.:..Q\U.
400aa0b0:	9d40b29b e9056b6c cb47840f 97c03975     ..@.lk....G.u9..
400aa0c0:	26fce895 e79dfeed a91f0c2b 525acf5f     ...&....+..._.ZR
400aa0d0:	7bafd866 edb15c76 31624c7b 330fa581     f..{v\..{Lb1...3
400aa0e0:	8b70e3e9 af724640 362c6c42 ba003c23     ..p.@Fr.Bl,6#<..
400aa0f0:	10d0c565 09d4b668 f6d1a526 14fe74de     e...h...&....t..
400aa100:	22f0a53c f4f2f820 50fe137b 0a47558a     <.." ...{..P.UG.
400aa110:	15f38168 e565a842 15a4460e 76183066     h...B.e..F..f0.v
400aa120:	1a7633a9 d06a3ffc 63ef984d 98c26730     .3v..?j.M..c0g..
400aa130:	118f4712 0071cec1 724947ac 95b66139     .G....q..GIr9a..
400aa140:	da78127f df579215 021990de 30f8ce6a     ..x...W.....j..0
400aa150:	5ea26396 6791d1c8 d8ca5ac7 0eae4555     .c.^...g.Z..UE..
400aa160:	8f2292c9 5e2c6b13 9d261541 44a4f760     .."..k,^A.&.`..D
400aa170:	6c94f839 9a50864e c9af388f 2124d05d     9..lN.P..8..].$!
400aa180:	7d0f0f92 c034ac43 c95259e6 9b15399a     ...}C.4..YR..9..
400aa190:	523f4a24 a92fdc88 2ff06a81 a3eb3e5d     $J?R../..j./]>..
400aa1a0:	bff7bc20 07cf4583 b5bb2a35 8cb1a050      ....E..5*..P...
400aa1b0:	ac0d97c4 45db32dc edab2ab3 d9e3fa8e     .....2.E.*......
400aa1c0:	1095cdc1 24d52d9a bad1f6c8 a099229a     .....-.$....."..
400aa1d0:	f1b23363 ff2d7494 273b4882 4e0b4ee3     c3...t-..H;'.N.N
400aa1e0:	56bb3d13 76bc925d b7655e3c e4b67836     .=.V]..v<^e.6x..
400aa1f0:	0a6ae185 0cc42ef2 909bf109 f6635cd7     ..j..........\c.
400aa200:	619a2ecf 9cd67393 1283c8bc 9de7cf2d     ...a.s......-...
400aa210:	6ab00bd0 d611a7d5 8ca90bdb c58ae1ee     ...j............
400aa220:	772ca477 8ad44593 d215ca95 49fbfbcf     w.,w.E.........I
400aa230:	3d0a1600 dd2e65fe 5dea165e b5fa4949     ...=.e..^..]II..
400aa240:	7b384126 2e6c23b7 3920bb19 c5eba5cb     &A8{.#l... 9....
400aa250:	dba4b339 b6b36a02 312fe766 436a1c77     9....j..f./1w.jC
400aa260:	3ab7bbeb f8d64581 68e6a0ea 11e0f761     ...:.E.....ha...
400aa270:	204c6edf 8d206391 ae619c32 f8861977     .nL .c .2.a.w...
400aa280:	000de76e 6065278b 3051a927 f1ca836e     n....'e`'.Q0n...
400aa290:	48ca2173 6be89bc3 790bb1fe 339cecae     s!.H...k...y...3
400aa2a0:	b6807724 388178b5 52c153b7 e062f6e8     $w...x.8.S.R..b.
400aa2b0:	809026ef c15ca7d1 0de9686b ee645a19     .&....\.kh...Zd.
400aa2c0:	597e8970 20b2dabf a86fc0a7 504a3f7e     p.~Y... ..o.~?JP
400aa2d0:	0a9af3e0 349e4354 d0959172 634fe1ad     ....TC.4r.....Oc
400aa2e0:	df84bf70 c2f80cef 43839fe8 0ac1874e     p..........CN...
400aa2f0:	c7cd7787 4fc1f350 2ecd163b a52a5bea     .w..P..O;....[*.
400aa300:	346556f1 9c306c03 b5edcf0f 028c4443     .Ve4.l0.....CD..
400aa310:	f33b7408 5493e363 8690d882 1462dd21     .t;.c..T....!.b.
400aa320:	073dfcc5 e468e0c2 edb9ce42 3228c7ce     ..=...h.B.....(2
400aa330:	3ab77741 d7bee84b f4139396 53d2dcd8     Aw.:K..........S
400aa340:	e325f337 4bf3462b a3d0b6e0 50dfbd54     7.%.+F.K....T..P
400aa350:	d75f7dfe 6f662c92 76cf9401 dac5825c     .}_..,fo...v\...
400aa360:	fecc3949 42f9e870 3bb806a0 78a144a5     I9..p..B...;.D.x
400aa370:	83cb41ea 465b0a36 f4575468 572a0f88     .A..6.[FhTW...*W
400aa380:	208b354c cc738ac5 79757915 d5ceb08d     L5. ..s..yuy....
400aa390:	e7eed019 0a9dd3b7 eaec7c9b 4adc87a5     .........|.....J
400aa3a0:	0592997e 8c319f44 ba1a8f87 40193db1     ~...D.1......=.@
400aa3b0:	5962d80a ae9aed29 b574663a edcfb4ff     ..bY)...:ft.....
400aa3c0:	cc9b94cb 9a5b8ff0 f0aa9b79 216fca3e     ......[.y...>.o!
400aa3d0:	926fc946 ce27372d d6e550eb f6467ee7     F.o.-7'..P...~F.
400aa3e0:	e842e01a daf2728b 9a573697 d8beb3b2     ..B..r...6W.....
400aa3f0:	6d0c7610 66dd9c5e 5e953f44 9b4e7fc6     .v.m^..fD?.^..N.
400aa400:	57958a15 eff0c632 79b7b122 6c5917a5     ...W2..."..y..Yl
400aa410:	3d6c7af8 91e6ee9d 25507641 e003dabd     .zl=....AvP%....
400aa420:	26f0f946 4b1e5ebd ff28bdfc c1469f89     F..&.^.K..(...F.
400aa430:	c42e82e1 3ec90510 089193d3 9db24097     .......>.....@..
400aa440:	e2690048 2d6ab6a7 1a648572 dccac339     H.i...j-r.d.9...
400aa450:	65cc097b 8fbfe557 fd93a681 3e5c8d33     {..eW.......3.\>
400aa460:	0bce28b4 5a6440df ac2003f7 610be2f1     .(...@dZ.. ....a
400aa470:	72401769 aeff9bc5 538563dc 7e306cc9     i.@r.....c.S.l0~
400aa480:	9a608c50 d72d22fb 6c653645 8cef197f     P.`.."-.E6el....
400aa490:	9795e54d b3da2cfe 72845673 28f4d3c0     M....,..sV.r...(
400aa4a0:	e46d331c c0024bc7 a5b975f2 f6bea64c     .3m..K...u..L...
400aa4b0:	f0922f53 46a70268 43cebc78 cc122acd     S/..h..Fx..C.*..
400aa4c0:	4d604b36 4e7355d4 c8f89e6b a7ffbac9     6K`M.UsNk.......
400aa4d0:	fb36943c a50ac0d6 4d580d58 863b3833     <.6.....X.XM38;.
400aa4e0:	04e5ca9c 5a11b33f 9ccea806 6e014980     ....?..Z.....I.n
400aa4f0:	d104a380 5061684c ece06575 0ad99d0e     ....LhaPue......
400aa500:	e60f9641 e54c7202 f3cec7da 0adac317     A....rL.........
400aa510:	8d861aaf 5290ac3a d2a3b7be 927a51b7     ....:..R.....Qz.
400aa520:	f97e0b62 f251d15c 92e9bde4 74038ecb     b.~.\.Q........t
400aa530:	24d3441c c6e17365 0ba8cf56 7490a08b     .D.$es..V......t
400aa540:	99dba9d3 dc1c5dda 93bd8017 b1b213e5     .....]..........
400aa550:	3d43e0e0 bb0255c6 1eeb585a 6608949f     ..C=.U..ZX.....f
400aa560:	84f9d828 d7ef48fb e9e5cd10 485f1366     (....H......f._H
400aa570:	ae009e21 d4c74a06 47e9bcb4 998fdc3e     !....J.....G>...
400aa580:	48e425a7 feea69a6 81d85f3b 34021f5f     .%.H.i..;_.._..4
400aa590:	79a1fb69 11f9910a 60e998fe 3e949daf     i..y.......`...>
400aa5a0:	a7e358b7 e69391fb 17b685f7 ea093e67     .X..........g>..
400aa5b0:	292c160a 2f43c710 91aff788 ef5eabe1     ..,)..C/......^.
400aa5c0:	1ed3d632 44ff0d6f 12f714ad b937f631     2...o..D....1.7.
400aa5d0:	0f98f041 8d54e673 eaabb91b 5473f4a7     A...s.T.......sT
400aa5e0:	7f5aa193 497c1654 1e18acfa 7b6ec17f     ..Z.T.|I......n{
400aa5f0:	325469bd 4cb5f997 fcbdb0a8 4f31fd0d     .iT2...L......1O
400aa600:	a3a8d987 d5f9abe7 c7a6b74d c4a99e69     ........M...i...
400aa610:	05a96971 03c6701a fbabdd04 4e56d8b0     qi...p........VN
400aa620:	399cb717 37030a52 dba641bd 89e29847     ...9R..7.A..G...
400aa630:	0a510f9b a9664863 86411009 9b3b30ea     ..Q.cHf...A..0;.
400aa640:	a4ab060e 01f87fc2 3dd35e2f 309e07ff     ......../^.=...0
400aa650:	1ab027a5 b33b3654 b35fa2f1 a223c4df     .'..T6;..._...#.
400aa660:	741d4f5c 1edf0c3b e0b72cb5 5868cd9a     \O.t;....,....hX
400aa670:	8d6aa42b 0329fd0e a3a68e0f 2e88edbe     +.j...).........
400aa680:	05d748bf 313fe64b 9c945b92 2612f267     .H..K.?1.[..g..&
400aa690:	d834dd21 b9310f18 b948a917 93273079     !.4...1...H.y0'.
400aa6a0:	e2cbcd21 71d6465d 5267dd09 68283113     !...]F.q..gR.1(h
400aa6b0:	d73d1441 f82c4389 589d5bc3 f428f890     A.=..C,..[.X..(.
400aa6c0:	05c9ad14 328e9bd7 56496d89 10f8c97a     .......2.mIVz...
400aa6d0:	a1738fff 5e616374 96334aeb 059ed220     ..s.tca^.J3. ...
400aa6e0:	005ddd11 d158d30d e4c28cd0 2a26b1ff     ..]...X.......&*
400aa6f0:	11e63fd3 a4ca0b5e c8d921f0 75072aaa     .?..^....!...*.u
400aa700:	a3d7f947 1ebab1ef c38420bb 301db64f     G........ ..O..0
400aa710:	ac11ac30 6877dec4 678289d3 0c890270     0.....wh...gp...
400aa720:	9eab3c97 f675ffd3 332602b1 71b28d38     .<....u...&38..q
400aa730:	38e9cee4 4b0ff92f efc1ee8f 1cf61130     ...8/..K....0...
400aa740:	a037718e c5c72645 4f91b108 b67dd2d9     .q7.E&.....O..}.
400aa750:	8dd80333 1162ac2c f762b855 956962f3     3...,.b.U.b..bi.
400aa760:	509db97f bb53b9ab 01571c75 eeedb760     ...P..S.u.W.`...
400aa770:	4ed72694 a0383795 9b6d2ee5 8addf5ca     .&.N.78...m.....
400aa780:	1bbd4550 17d9964f 48fc7fdb 6f1ca72c     PE..O......H,..o
400aa790:	77bf7487 b506088c f2e63b87 c7b47965     .t.w.....;..ey..
400aa7a0:	9e6a3846 9f629b7c 53cafecb 57ec7614     F8j.|.b....S.v.W
400aa7b0:	d0acc8ed e8ba482f 1e78ac04 5bac597d     ..../H....x.}Y.[
400aa7c0:	4b70cda8 ed7c5761 df46aad6 30dbbc53     ..pKaW|...F.S..0
400aa7d0:	87a760d3 0c3c609c cb1cb929 7952bce8     .`...`<.).....Ry
400aa7e0:	bd8f58f4 ae0108b3 b05a7461 97129ece     .X......atZ.....
400aa7f0:	e3749fdd 8348c575 bbcca9bb 3bca201d     ..t.u.H...... .;
400aa800:	61fe65dc 1e0655bd e8b870a9 a91410ca     .e.a.U...p......
400aa810:	5e7f2426 c52dd6b8 8058ffd0 7a645843     &$.^..-...X.CXdz
400aa820:	e1529e48 c780a8f0 a7c6fdcb 90ef4e7d     H.R.........}N..
400aa830:	d9771ab0 9d9c2d12 5e6d818b 5dec04c5     ..w..-....m^...]
400aa840:	ca96000c f3eeb775 6ea11b80 4510865c     ....u......n\..E
400aa850:	edc72b37 b5e242f5 657217e2 45e7f171     7+...B....req..E
400aa860:	8759a64a 8a576ff8 47fbe2c3 59baf9c7     J.Y..oW....G...Y
400aa870:	25588983 7c4ba030 e768a367 f66cbe9a     ..X%0.K|g.h...l.
400aa880:	a88ae509 54de7578 9992a20a 4c181e04     ....xu.T.......L
400aa890:	1f767f44 4709762f fb117b14 e6cdb64b     D.v./v.G.{..K...
400aa8a0:	224df508 a4fcdbb9 3c05fcd9 722f99f9     ..M".......<../r
400aa8b0:	74e4bf82 09393680 e70f9c0d db7b4dcd     ...t.69......M{.
400aa8c0:	693b0c5f e7d238c7 35481d7f 16dec8b1     _.;i.8....H5....
400aa8d0:	d112829d 9ac3a323 b7e6b75d cbe8855c     ....#...]...\...
400aa8e0:	d4e383be 32bdcce5 b53a5d2f 9ca15b59     .......2/]:.Y[..
400aa8f0:	3002e11d 286fc70a fa6a8b34 ef5bdb19     ...0..o(4.j...[.
400aa900:	7669abad d2c29010 3c785d22 12504c3c     ..iv...."]x<<LP.
400aa910:	c578dc3d eca1cf6e 6a91c6e8 50280528     =.x.n......j(.(P
400aa920:	94f7c229 e685ee32 4d1c3f63 254e9276     )...2...c?.Mv.N%
400aa930:	8cb19258 edea80f5 481b325c 01e6e8fc     X.......\2.H....
400aa940:	5f872b87 5b139086 dc65304b df2e982f     .+._...[K0e./...
400aa950:	c513c349 b4d9e824 d9f5742d 6f6717ff     I...$...-t....go
400aa960:	1fbad392 bb74354a 891b68d1 f40aba2f     ....J5t..h../...
400aa970:	efc87749 f401cd4a c5b2105f ee36a68a     Iw..J..._.....6.
400aa980:	5e860b65 bb0cceee 503f2b06 da7c193a     e..^.....+?P:.|.
400aa990:	177d6fa7 6864348b 5b9ab566 1fad8156     .o}..4dhf..[V...
400aa9a0:	c5fe1b2d dcbe3257 d891d59b eb9677b1     -...W2.......w..
400aa9b0:	183ad900 71fcfcd9 5be3fdfe 532b1e91     ..:....q...[..+S
400aa9c0:	1d6d11a4 aab08d98 1b84b718 68518e87     ..m...........Qh
400aa9d0:	16d10fb9 2de69ccd 9ed5d088 bd64e7c7     .......-......d.
400aa9e0:	6cc420a3 db7086b7 9e12a352 995c645b     . .l..p.R...[d\.
400aa9f0:	db6a819f ba03b066 e046ad60 47a595b5     ..j.f...`.F....G
400aaa00:	b82c991a 7d7bca93 981fde20 054e233b     ..,...{} ...;#N.
400aaa10:	f734fe11 16ff9a83 6a97ff5b 4228ba5f     ..4.....[..j_.(B
400aaa20:	09bd92bb 2716e535 a6164db8 58ac9dd8     ....5..'.M.....X
400aaa30:	dac078d4 8b6621b5 cf9e4b49 a5e37ddc     .x...!f.IK...}..
400aaa40:	9ae2c6a9 6c579e01 f029ead2 f1184fe7     ......Wl..)..O..
400aaa50:	ad49a8da 940c315d 8fb6a6b1 f7f48f83     ..I.]1..........
400aaa60:	3967abef 8af5918c af41de9d 49a6de86     ..g9......A....I
400aaa70:	f32bd88e ad95d158 c99b46da 44de6152     ..+.X....F..Ra.D
400aaa80:	cab6a086 82f0e0eb 5ba177a5 e356e394     .........w.[..V.
400aaa90:	9f14e60e d339c993 40a9b88a 123ad0c7     ......9....@..:.
400aaaa0:	49fe001a f8a9d325 2ba5e330 4cca9e61     ...I%...0..+a..L
400aaab0:	1593876a e2ae5b68 76c2fb3e 769dca2d     j...h[..>..v-..v
400aaac0:	406eb68f cbefa560 5f74cf75 0bf9fc1c     ..n@`...u.t_....
400aaad0:	63a14b8f 0eb4a493 0f995c2d d11a0a08     .K.c....-\......
400aaae0:	09c56696 df927473 e3842b33 e8bf8326     .f..st..3+..&...
400aaaf0:	5ac3a691 4495775c a31a6fb6 eacd5d5d     ...Z\w.D.o..]]..
400aab00:	6c33286e aebdf016 eac20a36 ec08414e     n(3l....6...NA..
400aab10:	333e04d7 2e035701 7709d8b8 00fbdf21     ..>3.W.....w!...
400aab20:	dc4dc500 ec5b66d1 6fba68ec 49065f72     ..M..f[..h.or_.I
400aab30:	ed2b6029 1bb06ab0 778b8f99 862fb181     )`+..j.....w../.
400aab40:	685043d3 eb863072 050f5e7d dbcdafd6     .CPhr0..}^......
400aab50:	2386dbb7 6e9c8f1a 59ee7179 bfe44932     ...#...nyq.Y2I..
400aab60:	352a1a72 b578f568 df538b44 d68e72c3     r.*5h.x.D.S..r..
400aab70:	6daf815b 6aed87cb b4823861 467650de     [..m...ja8...PvF
400aab80:	3ef7382a ef107571 7f41f998 898fb2c7     *8.>qu....A.....
400aab90:	8b6efdd0 985ce488 a8ca7b32 04fa0837     ..n...\.2{..7...
400aaba0:	9ef3e0bb 088bdf2b ba1cd2be 6a16ce6d     ....+.......m..j
400aabb0:	24a17279 d6673e06 2e299d71 a5c66ac1     yr.$.>g.q.)..j..
400aabc0:	0afc3b7f 8643dc58 09ac6788 50a4f90d     .;..X.C..g.....P
400aabd0:	1cf629b0 4634f723 e7e4819e 0ab0a5a6     .)..#.4F........
400aabe0:	dcef5554 03dab271 064db023 7347e5e4     TU..q...#.M...Gs
400aabf0:	6da4d294 d3256e6f 6da33113 23ecaa7d     ...mon%..1.m}..#
400aac00:	6880747a 9a91f5dc 58c8808d e32c87b8     zt.h.......X..,.
400aac10:	b74e9dc9 0ce58f92 fd9d110e ef446a58     ..N.........XjD.
400aac20:	9dc4aee3 d50fc75e 97cbdb03 817be1e6     ....^.........{.
400aac30:	5fc2dcb5 087a43ec dfb326eb 2679e2ef     ..._.Cz..&....y&
400aac40:	15526dc3 5bdcab57 27dd8efc a52a1a56     .mR.W..[...'V.*.
400aac50:	311e9ad1 2c341c98 59b3dd05 4c495725     ...1..4,...Y%WIL
400aac60:	3e1240ad 56123e4c 0c2aab98 5f2b0242     .@.>L>.V..*.B.+_
400aac70:	29722060 7c812a85 15ff81a6 f922576a     ` r).*.|....jW".
400aac80:	f5e8a1dd d543bcbb f06aa02d b0579ef3     ......C.-.j...W.
400aac90:	922aec34 ecf0228e 9c9e5365 7e5c068d     4.*.."..eS....\~
400aaca0:	b06fa9dc 77a171e3 df89d094 f772f7bb     ..o..q.w......r.
400aacb0:	5c3451ec 3c632ab1 09010c2b b3d9432b     .Q4\.*c<+...+C..
400aacc0:	b9e040e6 6b5d2d2d 8aa8774c be564cbc     .@..--]kLw...LV.
400aacd0:	ffd3b46c b0ec604e ae4eabc1 da61b621     l...N`....N.!.a.
400aace0:	721e67cb e844177e bc773a72 9dfa9f00     .g.r~.D.r:w.....
400aacf0:	a42ddf4e 4b2db559 a315d41e 460ba0bd     N.-.Y.-K.......F
400aad00:	2e3e0f47 353cb50b 1ab90ae1 f0ee997c     G.>...<5....|...
400aad10:	32567420 86fa73d7 6daf9459 c7949fce      tV2.s..Y..m....
400aad20:	5a7b67c7 570e6765 a5ad5037 21897304     .g{Zeg.W7P...s.!
400aad30:	43301d41 efb74ca4 d8283a2d 16656136     A.0C.L..-:(.6ae.
400aad40:	bcd1aabd 37614774 93c35d32 950d4118     ....tGa72]...A..
400aad50:	eea979bf 6afffe16 d3a86276 af90a87d     .y.....jvb..}...
400aad60:	f899a9a8 eb841e84 8cfac6ab 1eea96f4     ................
400aad70:	346a5ba8 0b7f65a6 c125fab9 635c7b7b     .[j4.e....%.{{\c
400aad80:	e7787580 8fc84719 bce4a472 de68c9ce     .ux..G..r.....h.
400aad90:	e2d362c5 dac04c98 8b79988b 89bd590f     .b...L....y..Y..
400aada0:	714aac6c 17839c15 81877fba d770579f     l.Jq.........Wp.
400aadb0:	20ac865d 2c252da8 fa5bd1a8 c529d7bc     ].. .-%,..[...).
400aadc0:	fd065f43 ee005bc2 1ecab18b 347fb5bc     C_...[.........4
400aadd0:	e538352b 8c7f2236 459e2905 08e13a64     +58.6"...).Ed:..
400aade0:	7c2352b9 49a7e361 b7bbb08c e2426a68     .R#|a..I....hjB.
400aadf0:	bc663ba1 8c332961 9c871117 7703fd81     .;f.a)3........w
400aae00:	89d8e6a6 b8275fae 2e77ad9e 9f382941     ....._'...w.A)8.
400aae10:	6bc03830 cb073ddb 5de3968c e417ce1d     08.k.=.....]....
400aae20:	e60de6dd 4449ab42 c33065f6 fd6b1cbf     ....B.ID.e0...k.
400aae30:	09180f54 c6f78cba 860ab464 372ecb63     T.......d...c..7
400aae40:	c1b675d3 c9e64929 ee93fad5 945746aa     .u..)I.......FW.
400aae50:	a97b406f 71ad06ca 4eea4a3e 1befbcab     o@{....q>J.N....
400aae60:	37c60aac 4bdc4dd6 7ae9f909 c7b9432a     ...7.M.K...z*C..
400aae70:	736b8467 7b203407 e64f7faa 2c3accde     g.ks.4 {..O...:,
400aae80:	f43bcdc1 d264c54b 7a9c0e85 1ddff543     ..;.K.d....zC...
400aae90:	a2abd23b 77437260 4c0f9c8d c385c69f     ;...`rCw...L....
400aaea0:	86d23008 372a3370 83b8de57 7aa67102     .0..p3*7W....q.z
400aaeb0:	f154252a a1a8b7ae 0e7f1823 82bca5dc     *%T.....#.......
400aaec0:	819603cf 438e350a e3a3ab4b 27532701     .....5.CK....'S'
400aaed0:	2ce513ca e48e97b0 a46a6a7d 42691818     ...,....}jj...iB
400aaee0:	4f6ef397 607d7149 deb7f92e 283aeb04     ..nOIq}`......:(
400aaef0:	d1b2e619 73d43fcf 5b752095 65351bc9     .....?.s. u[..5e
400aaf00:	4512642e 5a19a5d2 ba774e48 c92dc526     .d.E...ZHNw.&.-.
400aaf10:	e2383689 fe45e657 fc96d181 c029b5e4     .68.W.E.......).
400aaf20:	72734b03 a96cd61d f418dc1f 4b120d9f     .Ksr..l........K
400aaf30:	8214692b 5240166f 172978c8 bc4b6cfe     +i..o.@R.x)..lK.
400aaf40:	e32067d8 33050d28 1cd8c54f 6baae01d     .g .(..3O......k
400aaf50:	4586098e d59c519f 484a96dd 78e96672     ...E.Q....JHrf.x
400aaf60:	282807f1 24e934a9 50fbe707 b64c4cac     ..((.4.$...P.LL.
400aaf70:	be7db22d 39ffb152 5e40e1b3 402376e1     -.}.R..9..@^.v#@
400aaf80:	d09215f4 3ce979f5 a4d2d95b 0fa63123     .....y.<[...#1..
400aaf90:	a5e49f97 caa30f36 de10d666 761db681     ....6...f......v
400aafa0:	5ef525ef 8e9ca818 749e1019 f9dcddc5     .%.^.......t....
400aafb0:	1c5cde39 59aefe89 32633663 1188ca16     9.\....Yc6c2....
400aafc0:	63f5c64a 0a383f1f 9575d598 dda36235     J..c.?8...u.5b..
400aafd0:	cbd2da61 821fb228 83c98fe2 d92c495f     a...(......._I,.
400aafe0:	c421dccd f8b5465a 4caa1e8f 204d2162     ..!.ZF.....Lb!M 
400aaff0:	1fb0b125 9ccdc679 3ba0f0f7 4b45f691     %...y......;..EK
400ab000:	85d094f0 f6feafa0 f82ad38c fea03a86     ..........*..:..
400ab010:	3f1fb4fa 1e005d1c b26e78be 10772e74     ...?.]...xn.t.w.
400ab020:	9f0a2ac4 cd7df5c7 a8b2eb05 6bc5c5c3     .*....}........k
400ab030:	2b2a9ccd 0227b6de 074ec22b 2c7e640e     ..*+..'.+.N..d~,
400ab040:	300f86a8 99cac3d1 849117e1 19513163     ...0........c1Q.
400ab050:	81f8635e c22f4cde 337a743a 82fa4b1b     ^c...L/.:tz3.K..
400ab060:	bb527775 c01f4b25 f7a86802 5dd5b65e     uwR.%K...h..^..]
400ab070:	1c649cd7 2edfd020 16b2359a 8812b77a     ..d. ....5..z...
400ab080:	40ec93d1 1fdc8345 80796770 d9a55ff1     ...@E...pgy.._..
400ab090:	d933d102 f1166f90 3079a27e aaf3e8f1     ..3..o..~.y0....
400ab0a0:	f0b14718 14f85dd0 42111f7b 76e5e189     .G...]..{..B...v
400ab0b0:	f339d993 553b1928 5452b443 7f8a7c12     ..9.(.;UC.RT.|..
400ab0c0:	2efbab63 99e8200d aae0d755 cc4ac1a4     c.... ..U.....J.
400ab0d0:	b8b4caa7 89cb8b01 8c790720 894ecd7a     ........ .y.z.N.
400ab0e0:	7b8cd70b 25fdc354 efa455c2 85331c37     ...{T..%.U..7.3.
400ab0f0:	50aa21b9 85e646bd e0a60c94 49be3373     .!.P.F......s3.I
400ab100:	86234ae6 4aadcd30 da062bf9 4cf45ff5     .J#.0..J.+..._.L
400ab110:	69e0e64a f23794da 20a255af 5caa217b     J..i..7..U. {!.\
400ab120:	67a0ba8a f3da58c4 dca851e0 cc42987a     ...g.X...Q..z.B.
400ab130:	9fc041d2 7fa107bb 858577b4 4819012e     .A.......w.....H
400ab140:	41264ab2 2cd3be48 0389c103 fbfacf6a     .J&AH..,....j...
400ab150:	3a6519e5 31b511cc d7595c06 8032287a     ..e:...1.\Y.z(2.
400ab160:	1edcac40 d0ec4e91 74bb67b8 ca315c13     @....N...g.t.\1.
400ab170:	2e082b61 d8a53a98 eaa7c1a0 76003b48     a+...:......H;.v
400ab180:	e36d4967 f1a40fb5 b3842545 b8ba8950     gIm.....E%..P...
400ab190:	028db008 9d5ea75b 7a4e6fd6 078e20a7     ....[.^..oNz. ..
400ab1a0:	327ff82e a7497d40 164882f1 c5fd0419     ...2@}I...H.....
400ab1b0:	94f9746c 12ad7a52 eccd5b19 4613543f     lt..Rz...[..?T.F
400ab1c0:	6d0e6f31 074fd410 b0ba3946 f2f4b557     1o.m..O.F9..W...
400ab1d0:	11266edc a02350d7 c03c1a40 e53c04d8     .n&..P#.@.<...<.
400ab1e0:	5f960d83 844608c6 e09bc0cf 3f795251     ..._..F.....QRy?
400ab1f0:	9813c306 ef85b426 b8a5eaad 427364dd     ....&........dsB
400ab200:	bac3af5a fa8b66ed fa532324 b174f360     Z....f..$#S.`.t.
400ab210:	f562614e 97130634 e63bb535 edf95b4a     Nab.4...5.;.J[..
400ab220:	8bc4fd5b 5f13fa99 f89fa577 770e2a93     [......_w....*.w
400ab230:	d6d4c777 bc68efa8 0f0878c0 de885807     w.....h..x...X..
400ab240:	29d3eb51 b2d2b55b 45615f4b c7c017ba     Q..)[...K_aE....
400ab250:	4afb6973 62bbbd96 ffa03e2b 2d2f5d70     si.J...b+>..p]/-
400ab260:	dc2a5ca5 292365d1 5d47515c 4ce0448e     .\*..e#)\QG].D.L
400ab270:	7cd69c77 23870f6d 42b1f4e6 41285737     w..|m..#...B7W(A
400ab280:	130e9b62 a63f40d2 27965dea b4efbfe8     b....@?..].'....
400ab290:	cda74ac2 f6ca8577 162763ee 13369de9     .J..w....c'...6.
400ab2a0:	17a4354a cedaf91c abfb9c18 0b725a65     J5..........eZr.
400ab2b0:	dd1ddca4 12cc62d9 41cf8bbc 4285c61f     .....b.....A...B
400ab2c0:	7069e28e 140b0f4c cea2cbe1 210c0e9b     ..ipL..........!
400ab2d0:	85474f6a b586c0fd 825a8a97 079ec03e     jOG.......Z.>...
400ab2e0:	5b37f646 90923925 0c11582f b74f3453     F.7[%9../X..S4O.
400ab2f0:	f21497e8 4a42840e e8883f22 ccd4d925     ......BJ"?..%...
400ab300:	cfe51331 a023b33c ae89b1c4 71a43452     1...<.#.....R4.q
400ab310:	959f5c9f e10ccb20 07750117 0ce517bd     .\.. .....u.....
400ab320:	8b10d20f 1f05ccec 20b140db 2596e4b3     .........@. ...%
400ab330:	5b1c14d0 65384a09 aa4bfbd5 1417f4d5     ...[.J8e..K.....
400ab340:	8c8c1ab0 cea4e887 8386a918 f4262081     ............. &.
400ab350:	2c757db0 87f8663d af677660 848fa091     .}u,=f..`vg.....
400ab360:	5d904aa0 7daa1c96 b77c0569 161faf42     .J.]...}i.|.B...
400ab370:	ea492071 a8bdb644 7aec004a dc47c75d     q I.D...J..z].G.
400ab380:	13d38e8e e3db2eca d3da1a87 6781eaf5     ...............g
400ab390:	89ded9af cb636e55 b8f1aa07 6f499b85     ....Unc.......Io
400ab3a0:	4310f2e4 19db1963 f81348e8 2177790e     ...Cc....H...yw!
400ab3b0:	7196e574 739b9685 c846c263 b499097b     t..q...sc.F.{...
400ab3c0:	10798983 c41501d3 43fd27ac 92cca398     ..y......'.C....
400ab3d0:	ca755218 1b184b70 ed0dffdd b26d707f     .Ru.pK.......pm.
400ab3e0:	7e250530 edcd480e 7db1b2fe cb44baa4     0.%~.H.....}..D.
400ab3f0:	f2cbc0ad 79a45b62 ac43848d c8eb9ca4     ....b[.y..C.....
400ab400:	4657e6a7 9f25b071 42c2850c 6be15acf     ..WFq.%....B.Z.k
400ab410:	b5173158 c3a6363f eef2eb7b d7a57d4e     X1..?6..{...N}..
400ab420:	da7017cd d13c2aba 98568f6f 20268cf6     ..p..*<.o.V...& 
400ab430:	5939006a 280a51fc cdfec902 5c227936     j.9Y.Q.(....6y"\
400ab440:	45cc68b8 707ce74e f9e94dc5 b5dea644     .h.EN.|p.M..D...
400ab450:	2459dd84 eb580b1a 4650fb75 2321067a     ..Y$..X.u.PFz.!#
400ab460:	92ac901b ece4b0dc 7691bdb4 9bd5a20e     ...........v....
400ab470:	025365a0 c22460a8 b786990f 3ebec456     .eS..`$.....V..>
400ab480:	2ca34755 42a9e286 cff31293 22ada1d6     UG.,...B......."
400ab490:	cbf17fe7 1e88a012 36ab10e4 9593f023     ...........6#...
400ab4a0:	78cf287c a585f2e2 0fdc8ede 4aa2bde6     |(.x...........J
400ab4b0:	8e3691ce 41276dd2 d0d79e76 63b11fb8     ..6..m'Av......c
400ab4c0:	eba16485 65788e24 e7761423 561dad76     .d..$.xe#.v.v..V
400ab4d0:	0b62ffc0 23244640 7c61aab3 427031f1     ..b.@F$#..a|.1pB
400ab4e0:	3dcef5cb 8eb1ca10 f6dfdf86 63f8a9e3     ...=...........c
400ab4f0:	e3f34116 0d55c3d2 0999999b ab11c525     .A....U.....%...
400ab500:	e274f85f e79e6983 7ff83de8 4d2d8e7c     _.t..i...=..|.-M
400ab510:	3bf4c360 59ce101f 5b71ddad b909d160     `..;...Y..q[`...
400ab520:	686a3dea 5a6f5001 35b094d6 d17beb49     .=jh.PoZ...5I.{.
400ab530:	553db910 5a607261 368fe34f 141d9779     ..=Uar`ZO..6y...
400ab540:	0b883b7e fab1237b 5a1328d0 78b47b99     ~;..{#...(.Z.{.x
400ab550:	39863da9 3b79ef43 873323ca 4ad23785     .=.9C.y;.#3..7.J
400ab560:	3bd7ee0c 3f8acc3e 3b1896e8 f82117cf     ...;>..?...;..!.
400ab570:	47482d68 07eabd0f f97d42c2 c55b2737     h-HG.....B}.7'[.
400ab580:	51d59014 66e805da 08fb08e6 cdaccd36     ...Q...f....6...
400ab590:	d3682e4f 53e00af8 6c5533a5 e530d884     O.h....S.3Ul..0.
400ab5a0:	996c5cde f7a42fe4 206a5b8d 99daa687     .\l../...[j ....
400ab5b0:	07c4b4b4 a7c1b141 0a33f1d3 801cd66f     ....A.....3.o...
400ab5c0:	bdd4867d f226fbed e59f66d2 120c3a04     }.....&..f...:..
400ab5d0:	f60472b4 130f1574 aa136b6c 97468c73     .r..t...lk..s.F.
400ab5e0:	17065057 639b32d7 5c4b69a5 4f98cdd9     WP...2.c.iK\...O
400ab5f0:	4c0d5f8a 54063f90 5cdcbc8f 7f5ce6a8     ._.L.?.T...\..\.
400ab600:	aeea6d2e b9a5380d 41097f6e 09cfd384     .m...8..n..A....
400ab610:	d1c56995 9111ff0b 9d6184c3 8a784f47     .i........a.GOx.
400ab620:	274713db 94d61499 fcb37033 befd5110     ..G'....3p...Q..
400ab630:	c3afc88a d954002d de670eed c783c4b4     ....-.T...g.....
400ab640:	d7634e31 6398ec41 eeddf7bf 854b574b     1Nc.A..c....KWK.
400ab650:	1c76bd46 b9ff5f41 4851de2b c21b8816     F.v.A_..+.QH....
400ab660:	553054fb cadacd89 68f84abd 2504a59b     .T0U.....J.h...%
400ab670:	dfcbe521 29e924b9 0ef0f55f c56318e7     !....$.)_.....c.
400ab680:	2bb01c48 ba7b43c9 b4d71bed 758dd914     H..+.C{........u
400ab690:	69265995 f227fe2a 08e65a83 d2341cb5     .Y&i*.'..Z....4.
400ab6a0:	c339e024 70c72503 c87ccf4f 84c776cd     $.9..%.pO.|..v..
400ab6b0:	f61f0d56 1b155869 c63e4638 e9d422dd     V...iX..8F>.."..
400ab6c0:	cdf92630 e33127c9 605b8117 5fb6327d     0&...'1...[`}2._
400ab6d0:	a235eda3 b8a3f59a 30b90acb d222b2c5     ..5........0..".
400ab6e0:	e0194be0 63cd2af5 d2083c79 f7e2bef4     .K...*.cy<......
400ab6f0:	38e0e463 797d3a8a 71b8ee08 2fea48d6     c..8.:}y...q.H./
400ab700:	6e0bf9fe 0803fb3a 7b25b678 5e1d443d     ...n:...x.%{=D.^
400ab710:	0cbbe974 220abbb9 7b6d06b5 0d596635     t......"..m{5fY.
400ab720:	25058452 3487031e aa3306b9 d8a8fdcb     R..%...4..3.....
400ab730:	15cb73db 2dbcbc9c 2e974753 bab081cb     .s.....-SG......
400ab740:	dc1476d2 525de931 e5867b63 985e4f94     .v..1.]Rc{...O^.
400ab750:	a72cb7a8 da8e64d9 d6d8d580 d0882775     ..,..d......u'..
400ab760:	039a958e 33c448c2 5835e345 b8487c64     .....H.3E.5Xd|H.
400ab770:	605f0fe8 a573b13e 8f092967 11968558     .._`>.s.g)..X...
400ab780:	a7762394 c47f76ae 0b406568 7a6073ec     .#v..v..he@..s`z
400ab790:	107fe6a1 08a4f430 3430c2d4 8ec203c7     ....0.....04....
400ab7a0:	982cea9a e4645e8b 686cbd44 c371763f     ..,..^d.D.lh?vq.
400ab7b0:	079cc35a db237bd5 75a1c958 abf74d42     Z....{#.X..uBM..
400ab7c0:	c91b6bb2 c4785373 ee3aae19 0152b79a     .k..sSx...:...R.
400ab7d0:	814c9c1e ec8d539e 641bda87 768338cb     ..L..S.....d.8.v
400ab7e0:	e32d3069 78df6db3 389e88fd 5bfb1a61     i0-..m.x...8a..[
400ab7f0:	e443616b e882c090 e40f6cb4 31ba648c     kaC......l...d.1
400ab800:	0747c4fb 95b87a09 63a2f8a8 148ca8b1     ..G..z.....c....
400ab810:	3be52b7e b4887eff 3b800d4e ed28261a     ~+.;.~..N..;.&(.
400ab820:	f58d6cf8 02a0a560 9bd8a8e2 d4f4f2a2     .l..`...........
400ab830:	52d9c171 b707df95 44b40040 215044dc     q..R....@..D.DP!
400ab840:	d6e74c6d 014c1237 4af1c1d0 4cbb7c38     mL..7.L....J8|.L
400ab850:	9077aabc ad1172d7 114e8664 d3508eda     ..w..r..d.N...P.
400ab860:	56c6903f 8c4662a6 283b8a61 cd076ed7     ?..V.bF.a.;(.n..
400ab870:	589ca4a3 b47ed211 83a52aea 110fc1bd     ...X..~..*......
400ab880:	6451abb6 452e974e 07c74020 30ba17b4     ..QdN..E @.....0
400ab890:	7bea14c3 362d18a1 7f652629 f5534157     ...{..-6)&e.WAS.
400ab8a0:	261d0f3c 648baf15 e1299031 3e3d3b0d     <..&...d1.)..;=>
400ab8b0:	e88d491d b30563b5 51decc11 aa1b96fa     .I...c.....Q....
400ab8c0:	e93ee84b e11d4bbb a3e25645 6a396975     K.>..K..EV..ui9j
400ab8d0:	9e71facb fc30e7fa 2ff5635c 9a070f17     ..q...0.\c./....
400ab8e0:	69ba85b5 4a6e5a7c 2d65decd 415aac50     ...i|ZnJ..e-P.ZA
400ab8f0:	b36ecce8 af6e61a4 6ed444a7 a6da402b     ..n..an..D.n+@..
400ab900:	bf6b2719 67cf7d7a 87c8e13e 06d36d66     .'k.z}.g>...fm..
400ab910:	4e62b47d 187e8b6c eaf6a54c eec155c2     }.bNl.~.L....U..
400ab920:	816739cb 3acad82d 26ab8f41 1a5f99ba     .9g.-..:A..&.._.
400ab930:	9deebfb0 25436cab 6f344c5b eaf83464     .....lC%[L4od4..
400ab940:	ad61505b d0e01e7d fcc39860 f16f3bde     [Pa.}...`....;o.
400ab950:	6e3f68b8 b21baa79 9d41bbf3 98c1fa68     .h?ny.....A.h...
400ab960:	b95f85d6 bef442ec 44c5c404 51b18f1c     .._..B.....D...Q
400ab970:	568fd3b8 0b05272d b0130b0e 9e7077d1     ...V-'.......wp.
400ab980:	d57e4648 98339a88 d229118b b10feb4e     HF~...3...).N...
400ab990:	c4843511 ba7bd17d 7f45f22c 2884fba4     .5..}.{.,.E....(
400ab9a0:	31d6020c 278d2063 c0f0b956 5f854235     ...1c .'V...5B._
400ab9b0:	e0f61d6b 52df496c b52de401 75d83399     k...lI.R..-..3.u
400ab9c0:	057bcb96 e9a6cc21 3c4bc88f b4674323     ..{.!.....K<#Cg.
400ab9d0:	1f2cb721 abe9b0df cbf703bd 97e646e8     !.,..........F..
400ab9e0:	3d854895 ede1c354 8c2ef8b9 6c4d2b98     .H.=T........+Ml
400ab9f0:	a517bca8 56556af5 f5854ab2 7e1c3b45     .....jUV.J..E;.~
400aba00:	fa6fbb7f 85de7d0e d59a0e5c b986970b     ..o..}..\.......
400aba10:	7fbd6db0 72e47788 e6c30800 be7ce606     .m...w.r......|.
400aba20:	095e42d9 a515b4fb f65facae 19056c5f     .B^......._._l..
400aba30:	9b910c0c c12c276d 449ca39e d00d4df6     ....m',....D.M..
400aba40:	1c601411 5c1fbd7a f85c75c2 22b1f404     ..`.z..\.u\...."
400aba50:	29796348 4a452fc9 2a24769e 6dda3e50     Hcy)./EJ.v$*P>.m
400aba60:	253fd426 208837cc 0026a9ef dcfab4c6     &.?%.7. ..&.....
400aba70:	9c0b8a6a 02016dfe 5c374ad6 948ea811     j....m...J7\....
400aba80:	10771209 4a241fa8 0346c5e4 ad7dbc0e     ..w...$J..F...}.
400aba90:	e65484c7 f84b913c 149e6c55 a314f793     ..T.<.K.Ul......
400abaa0:	2e4654f4 0831a38c 5cad82d5 b73abaa4     .TF...1....\..:.
400abab0:	9876328a f1264ac4 c2c06db2 6092ed29     .2v..J&..m..)..`
400abac0:	08d9f869 fb4c8745 3328a60d 1eb1d71f     i...E.L...(3....
400abad0:	31f566ac 4e9201c0 6b2ccf66 0d8db4a5     .f.1...Nf.,k....
400abae0:	87e8dee3 1c06e059 b3b9e478 fcfe9ed5     ....Y...x.......
400abaf0:	9c62c85c d98d579d 066c2c26 f4f5366e     \.b..W..&,l.n6..
400abb00:	efb7d954 72e381f3 4b72fcea 30f42e05     T......r..rK...0
400abb10:	a3c9ec71 96f8c571 940f64a5 5b1c9588     q...q....d.....[
400abb20:	336f64df fcf13de1 62efbd3d ea1900ea     .do3.=..=..b....
400abb30:	b352a795 d6fda19c 53212f97 c54b62f0     ..R....../!S.bK.
400abb40:	ca9ae0ff 3ca65d10 613c64c1 ec1900d1     .....].<.d<a....
400abb50:	2c95f9ed d62bea87 5cdd5fe4 82ebd371     ...,..+.._.\q...
400abb60:	4adf6946 7c70cdb1 9ec65c3c a72f408f     Fi.J..p|<\...@/.
400abb70:	0427cae0 821f490b 22f43693 8d5e7467     ..'..I...6."gt^.
400abb80:	9d725c06 6f442649 f9a8f266 e4002e2c     .\r.I&Dof...,...
400abb90:	19c514df 9e7d0bb3 ce7c3a4b 13a89e90     ......}.K:|.....
400abba0:	db73ff36 463ff805 578edd0e cdc95645     6.s...?F...WEV..
400abbb0:	d8cde424 161a4411 052824ed ecf94760     $....D...$(.`G..
400abbc0:	fe431fee 11f8b1c0 4788557e 9fcf873e     ..C.....~U.G>...
400abbd0:	e8aa6704 cc905c81 2a6532dd c008e672     .g...\...2e*r...
400abbe0:	469bccfe d8b9a9e9 776bbe99 12767e38     ...F......kw8~v.
400abbf0:	519439f8 ce039084 b3dfcba6 e43716db     .9.Q..........7.
400abc00:	2b2d374a cc812d0c 354236fd 45b44486     J7-+.-...6B5.D.E
400abc10:	f799bf43 977e95c2 39e5fb5f 7ccb57e8     C.....~._..9.W.|
400abc20:	c31fb26f 94e2d6e1 f0206055 50ce7546     o.......U` .Fu.P
400abc30:	ef35dca3 b57e3bff 384ce346 45e89a9f     ..5..;~.F.L8...E
400abc40:	fa01f452 2e33032d 8e5b4760 58554b0a     R...-.3.`G[..KUX
400abc50:	3e2eef9f 0862cd07 e822f032 a1ed30f6     ...>..b.2."..0..
400abc60:	73156780 d0f0fc4c 6e510129 085f728d     .g.sL...).Qn.r_.
400abc70:	b45ffed7 74fb3c03 c4f8695c 1e159b59     .._..<.t\i..Y...
400abc80:	5b144809 0a52b2bf 851369df 81b46e0f     .H.[..R..i...n..
400abc90:	e9394418 35c3b401 c0bd3bfc 59788a47     .D9....5.;..G.xY
400abca0:	e978b30e 2c1cce1e fe2ad321 dbafe7b5     ..x....,!.*.....
400abcb0:	d33a95fa 7f494263 f1c75a46 12ff2cdb     ..:.cBI.FZ...,..
400abcc0:	bbb61d61 726acc31 1f4b0832 9fc8ba09     a...1.jr2.K.....
400abcd0:	fa2a2489 c3efc82d 486a282a 62a691e3     .$*.-...*(jH...b
400abce0:	63f6cda2 df867303 e6f039e5 de21c963     ...c.s...9..c.!.
400abcf0:	d6a3e950 e1db8e21 41514a85 e58b53c9     P...!....JQA.S..
400abd00:	db5bf164 a21642c4 bcd3fbd8 67d4305b     d.[..B......[0.g
400abd10:	91e2d4df 2e0b1bb5 6f887ec1 cd52268d     .........~.o.&R.
400abd20:	2090ccb2 d030f1f6 adb16f76 89fbc812     ... ..0.vo......
400abd30:	e087bde7 90e81ed6 1fbf24a4 0d7880ac     .........$....x.
400abd40:	95745f68 18aa7a60 f3ddc189 ac411eb6     h_t.`z........A.
400abd50:	f9cbe269 78e64fb5 7d8c7143 89f0b8fb     i....O.xCq.}....
400abd60:	2cb89727 10948624 b54fee2b 496fc221     '..,$...+.O.!.oI
400abd70:	0012e7b8 b49482dd 4f8d3781 c517c8a9     .........7.O....
400abd80:	c0a839fe a79d9955 7b3d0155 d1737765     .9..U...U.={ews.
400abd90:	4b00b5fa 0d4bf9ad c1f67f0a 11540b3f     ...K..K.....?.T.
400abda0:	59327946 403580ac 3ba32255 e5d993ea     Fy2Y..5@U".;....
400abdb0:	80534615 e6631f4e cd25d480 09e34847     .FS.N.c...%.GH..
400abdc0:	e35d9551 639232a7 a75abb46 f6332bff     Q.]..2.cF.Z..+3.
400abdd0:	4db4443a b96fbcca e2ecea81 fa55211a     :D.M..o......!U.
400abde0:	d7c14452 4070d977 ee88bc4e ce7edff1     RD..w.p@N.....~.
400abdf0:	13856cc9 7180614d 611cd0f4 56e1c2bf     .l..Ma.q...a...V
400abe00:	1e60f60e 4890d22b 2ff44fe2 10f0b6ea     ..`.+..H.O./....
400abe10:	1c2210f5 7c800bc6 c5dd3562 3fd72977     .."....|b5..w).?
400abe20:	1d12dbac 417737a9 e54ae02b 895532ee     .....7wA+.J..2U.
400abe30:	8efa0821 377404c4 ce52d29e ac59e200     !.....t7..R...Y.
400abe40:	6c8a1069 c17ac7dd f30b5f23 448351c1     i..l..z.#_...Q.D
400abe50:	1a3a6e3b 974a10b8 071ed4a8 ed7a9b94     ;n:...J.......z.
400abe60:	c1a08050 d313942a 349b8604 3059b44b     P...*......4K.Y0
400abe70:	b69930fd cf3cefa8 d0cd88e3 0cee751f     .0....<......u..
400abe80:	e84b5b40 a1299f51 6a7e8a26 195a0c62     @[K.Q.).&.~jb.Z.
400abe90:	d5762f16 cc098af3 d23a42b8 dbd166d0     ./v......B:..f..
400abea0:	c984f1a1 5ca06e72 4e6e6de0 2219cddf     ....rn.\.mnN..."
400abeb0:	85db66e8 66a01fb6 9b685421 af78ccca     .f.....f!Th...x.
400abec0:	aa3ca4a0 03181e02 80bdace5 bead9e14     ..<.............
400abed0:	d52fd51d c267026b c36ccc4b dd87ef59     ../.k.g.K.l.Y...
400abee0:	657beecb 9f77fc42 52f2e6bb 6869dc63     ..{eB.w....Rc.ih
400abef0:	452ae2f2 93678f31 812f7ab2 2e6f7888     ..*E1.g..z/..xo.
400abf00:	3cf9ea82 42223f1b 47f3f9c2 ab76df3b     ...<.?"B...G;.v.
400abf10:	ec1b40bd df290bbb 7bea8753 ec5411a9     .@....).S..{..T.
400abf20:	48253a01 2a6e2209 722d78b3 b5c484d6     .:%H."n*.x-r....
400abf30:	b6def3d8 8b400a7d e6fcf8dd 0a65a1a4     ....}.@.......e.
400abf40:	bbde214b ff22e0df 830e92d8 f42dde48     K!....".....H.-.
400abf50:	d09875f8 f86cee17 1823adfc d1459b91     .u....l...#...E.
400abf60:	9bdeb601 8af51ccd cf2902db 5810fef5     ..........)....X
400abf70:	dd078d97 dd371a26 5c1f6c15 6ecd08ef     ....&.7..l.\...n
400abf80:	1b239b15 81e39bf9 3c15a992 74a6eb11     ..#........<...t
400abf90:	c5d74d23 356341f9 2f9a34a9 db978c4e     #M...Ac5.4./N...
400abfa0:	7399560a bcb58adf fdba9bab cf11f97a     .V.s........z...
400abfb0:	e04bcff0 252c3f93 c4ad6589 84d08ce3     ..K..?,%.e......
400abfc0:	354fa6dc 6df1d808 76eda5ec 5d89195b     ..O5...m...v[..]
400abfd0:	5f56d834 36edbd0b 792b6945 cf555132     4.V_...6Ei+y2QU.
400abfe0:	a3cc3dc6 d9585c60 f9ff1419 5318bd41     .=..`\X.....A..S
400abff0:	14f6fe72 80523b5a 651c3bc6 c6c4ba6f     r...Z;R..;.eo...
400ac000:	11bca868 248c0985 b9ad071e 580ba27f     h......$.......X
400ac010:	afacf8db e619d771 5a4169a6 8326ff0d     ....q....iAZ..&.
400ac020:	6d4177ca fdd696e4 50838b85 027b93ca     .wAm.......P..{.
400ac030:	3139c1fc 8b3a1304 f94397e3 6c91fd3f     ..91..:...C.?..l
400ac040:	7a3689dd 40cdf991 e9729714 f929777e     ..6z...@..r.~w).
400ac050:	fa811046 26185d56 1ee04f73 30237961     F...V].&sO..ay#0
400ac060:	3b9a4cb7 d898d6a1 0b67d19c 0cb9e2ad     .L.;......g.....
400ac070:	b2d5284e 7a07785b 18f2904a 58a98d38     N(..[x.zJ...8..X
400ac080:	cd654f87 2e032169 3f95ca4e 8d8a958d     .Oe.i!..N..?....
400ac090:	b5e68a76 5de996c0 17b97232 fdca281c     v......]2r...(..
400ac0a0:	4f57f506 e70aaa74 df9dc557 2308d8a7     ..WOt...W......#
400ac0b0:	31aa1807 18213e03 ff7812b2 6bf3a47e     ...1.>!...x.~..k
400ac0c0:	7813780a 6d83e6ed 3febba31 81082fe5     .x.x...m1..?./..
400ac0d0:	f586da2e f6fefe42 bac69d8f fafccbdf     ....B...........
400ac0e0:	311e8d8e 3900a1dc 8ee53bae 028cb446     ...1...9.;..F...
400ac0f0:	eb852e51 2387e99e a34eddb1 53525d14     Q......#..N..]RS
400ac100:	a25541bd 5c6be40d 8e85d8b5 162c5384     .AU...k\.....S,.
400ac110:	7ca53fa5 6e05c870 66e5865b 1368f262     .?.|p..n[..fb.h.
400ac120:	101de579 a2deddf7 f56ff3ed 91a114b0     y.........o.....
400ac130:	4bab54f3 21eb1339 5dfccb22 2f6ad829     .T.K9..!"..]).j/
400ac140:	ad29bcf6 05688746 268290f7 ae8eb986     ..).F.h....&....
400ac150:	5e3a7c03 a0524c34 7444c91e 6d279169     .|:^4LR...Dti.'m
400ac160:	f1fd6d6d d845065a a686eabd e3d6eb31     mm..Z.E.....1...
400ac170:	f7f8d834 e3cf16f2 dd1def8a 97e9daa7     4...............
400ac180:	0b6e68f5 a2f31bc2 0d18f054 ef71dcfe     .hn.....T.....q.
400ac190:	a1ed63f4 3e769688 f231afe3 5aa88454     .c....v>..1.T..Z
400ac1a0:	72dace9b 99bec63c f81b4094 394baed1     ...r<....@....K9
400ac1b0:	3b51f5bb 639165ae e151b1c3 0024832e     ..Q;.e.c..Q...$.
400ac1c0:	46c33632 12c3a1f8 0b8c9432 c75cfc13     26.F....2.....\.
400ac1d0:	c2830e50 11c80b3d eec6b369 95aa1a66     P...=...i...f...
400ac1e0:	8447b4bc b848fe61 fb8594c5 b34d6dec     ..G.a.H......mM.
400ac1f0:	c2fdaa1a cdc015a5 3e6da45c e01866c5     ........\.m>.f..
400ac200:	cd41e2fc cf854a27 91aa7ac7 7d55d658     ..A.'J...z..X.U}
400ac210:	932b8518 052f49d3 41c715f4 4d28b039     ..+..I/....A9.(M
400ac220:	f1c339b2 62dcf5c9 60aff180 bfffed8e     .9.....b...`....
400ac230:	6cd972f3 e29f9d7c 0863adad 196cd724     .r.l|.....c.$.l.
400ac240:	897a757c 7d14ed0a d71100fc 11b1aa92     |uz....}........
400ac250:	41d1b123 63bf2e43 65619e51 fb595a7c     #..AC..cQ.ae|ZY.
400ac260:	a3092035 d5e95379 e2a03301 9d340da4     5 ..yS...3....4.
400ac270:	adb9a5a1 b4072208 b43a5689 1a0750c0     ....."...V:..P..
400ac280:	0b7b1e85 383bdf05 ca3388cf d1469b4b     ..{...;8..3.K.F.
400ac290:	66438d91 e4b16bce 9bc0e024 f5af8bb1     ..Cf.k..$.......
400ac2a0:	e57cd27c 4a867f31 df864bf3 d4a94c57     |.|.1..J.K..WL..
400ac2b0:	1f1e47e9 95fe8b7e fdb7e5b0 f70ca267     .G..~.......g...
400ac2c0:	36520d64 1ecb3256 457b36fa bc2ac0a4     d.R6V2...6{E..*.
400ac2d0:	520b7f6f 24f8c9f7 5386c39c a1812fca     o..R...$...S./..
400ac2e0:	f0bcbb24 7ba5249d cbb8ed52 f995b190     $....$.{R.......
400ac2f0:	d37451cb 44be6b2d 059e138e 02d083bc     .Qt.-k.D........
400ac300:	4f79eafd 45ce567d 54bf19ee a979d878     ..yO}V.E...Tx.y.
400ac310:	ac4c2f40 29552460 d2e71c46 96a92de8     @/L.`$U)F....-..
400ac320:	601c8a62 8851308c 99bb70f1 ca1073c8     b..`.0Q..p...s..
400ac330:	d4619eae 881a2ca6 b13b2274 96480a8a     ..a..,..t";...H.
400ac340:	1ce8d5aa 9245269e d6546674 2e9cbfbf     .....&E.tfT.....
400ac350:	8855eaca dc0fc364 535e50fb 9ed164a0     ..U.d....P^S.d..
400ac360:	eb0d7542 8707465a 3029d3a5 e953cfda     Bu..ZF....)0..S.
400ac370:	1921ae3c e224a139 8bcb8c77 74d093f0     <.!.9.$.w......t
400ac380:	5f68a480 1d172b2e 32e5b441 b6208280     ..h_.+..A..2.. .
400ac390:	4ca7b861 6e04db58 31245040 3f260b57     a..LX..n@P$1W.&?
400ac3a0:	49e7d4a3 12872b18 54087480 0a628af2     ...I.+...t.T..b.
400ac3b0:	54a91461 cc7ecb02 4527c8a2 0994b37b     a..T..~...'E{...
400ac3c0:	5de68c41 d0575b7c 582a1120 034be335     A..]|[W. .*X5.K.
400ac3d0:	37451c83 00ca3207 48c794c0 84254b43     ..E7.2.....HCK%.
400ac3e0:	5ecae8e1 bf50432d 2de48062 91524233     ...^-CP.b..-3BR.
400ac3f0:	6304a820 27266b61 35251862 b3ad32aa      ..cak&'b.%5.2..
400ac400:	4da830e6 5b27ead7 4d04f440 d0d9735c     .0.M..'[@..M\s..
400ac410:	46e7b061 d0b3229f 59ca10a2 9c1a5b06     a..F.".....Y.[..
400ac420:	35651460 1e5ed25c 5a6848e1 5bfd833b     `.e5\.^..HhZ;..[
400ac430:	42242441 255deb69 4aa74cc0 0e1b5b50     A$$Bi.]%.L.JP[..
400ac440:	5325f883 a5c0fb01 5b074841 61857b5e     ..%S....AH.[^{.a
400ac450:	54498d00 3c8d1309 30858883 a7b25ac0     ..IT...<...0.Z..
400ac460:	39a4fc60 c8d9a35b 2a830041 0b55fac8     `..9[...A..*..U.
400ac470:	52493906 bb3d632b 3142f420 79802a5a     .9IR+c=. .B1Z*.y
400ac480:	594758a4 1c915331 5a2a2502 1a900341     .XGY1S...%*ZA...
400ac490:	49680ca0 6cf9c2b6 3de4f461 004c1202     ..hI...la..=..L.
400ac4a0:	676b7526 ff4e5b68 51631420 8d326374     &ukgh[N. .cQtc2.
400ac4b0:	3fa60ca2 fc096b2d 62ab8924 6e87b34d     ...?-k..$..bM..n
400ac4c0:	2663cc40 a4777ab2 3fa6c8a1 4216622c     @.c&.zw....?,b.B
400ac4d0:	54c72820 825d7314 36841462 6caa52e6      (.T.s].b..6.R.l
400ac4e0:	4de8e4a1 9687c357 63477060 3799b343     ...MW...`pGcC..7
400ac4f0:	5749e4c2 625112c8 56a814a4 bedc3b74     ..IW..Qb...Vt;..
400ac500:	30a47040 5e1f5b29 4ae8cca1 b6312ad2     @p.0)[.^...J.*1.
400ac510:	55c7e0a3 77c3c300 1e421820 79ef1223     ...U...w .B.#..y
400ac520:	5ea924e4 605b9b5e 65a718c4 38bcdb73     .$.^^.[`...es..8
400ac530:	30036040 b84192d9 4ac89ca1 ddfa5ab5     @`.0..A....J.Z..
400ac540:	5aaaf020 7d8be355 2a64e062 287a3277      ..ZU..}b.d*w2z(
400ac550:	43a760c3 11d8cb1c 4d62e820 efb8bad3     .`.C.... .bM....
400ac560:	4507b0a4 b8454361 57e8bcc2 a2beab02     ...EaCE....W....
400ac570:	5385a860 0731b330 4e47ac81 1c267b46     `..S0.1...GNF{&.
400ac580:	494894c1 f72e92fb 6707e4a0 ce9d9377     ..HI.......gw...
400ac590:	5226b862 660e4af2 67ca2c83 75843b5a     b.&R.J.f.,.gZ;.u
400ac5a0:	44477880 ce5c3257 37652841 491472c4     .xGDW2\.A(e7.r.I
400ac5b0:	5647bc20 d54fbac5 33051082 83bb9a00      .GV..O....3....
400ac5c0:	66c9f903 0cd2a348 38250040 704a82c5     ...fH...@.%8..Jp
400ac5d0:	49868481 bc40e30b 5605c483 f260b368     ...I..@....Vh.`.
400ac5e0:	59a64c60 a4bfd362 4e086841 6df91b32     `L.Yb...Ah.N2..m
400ac5f0:	4287f482 e8b35a83 35055420 04162ac9     ...B.Z.. T.5.*..
400ac600:	5009b4e3 ca63c361 55882cc1 7916933c     ...Pa.c..,.U<..y
400ac610:	4e870860 50fafb4e 5b850c82 d3c20314     `..NN..P...[....
400ac620:	3c053880 12edea7d 52a67841 0cc6e2f5     .8.<}...Ax.R....
400ac630:	62083462 10109b7b 5ec89ca0 6296cb5d     b4.b{......^]..b
400ac640:	4da6e861 7caf6311 5347b082 3c320b5d     a..M.c.|..GS].2<
400ac650:	48662c20 ffbf12a8 44a75483 fa4a52df      ,fH.....T.D.RJ.
400ac660:	65e55441 ac2a8b58 5ca99880 1b62931e     AT.eX.*....\..b.
400ac670:	44c660a3 4a6792b7 52e92d07 9c667adc     .`.D..gJ.-.R.zf.
400ac680:	35e51860 5d16936d 3d246441 79721b3e     `..5m..]Ad$=>.ry
400ac690:	63eb58e0 95d50371 44659441 63ed9a65     .X.cq...A.eDe..c
400ac6a0:	52c68483 5b625b6e 1b220420 dc69891d     ...Rn[b[ ."...i.
400ac6b0:	4007e4c5 762c32a5 5b69e081 b9f4530b     ...@.2,v..i[.S..
400ac6c0:	40e69840 4ba98aa4 4de724a3 2c46f323     @..@...K.$.M#.F,
400ac6d0:	5ca90483 120f9b47 672618a0 da4bdb56     ...\G.....&gV.K.
400ac6e0:	5108f041 530db2f1 50874462 b1ae3b5e     A..Q...SbD.P^;..
400ac6f0:	59070080 b84bd30f 43e6f0a1 fe61425d     ...Y..K....C]Ba.
400ac700:	24a25c20 59d3c273 41076cc3 432ec372      \.$s..Y.l.Ar..C
400ac710:	598aaca3 d4936b14 32e57080 c47b1a7c     ...Y.k...p.2|.{.
400ac720:	5c0a8ce1 55bc1335 63a8bc40 1a665b40     ...\5..U@..c@[f.
400ac730:	47077881 006dfb52 4ec65ca2 a241b2ab     .x.GR.m..\.N..A.
400ac740:	3ea59462 f5b29ae4 5d0af100 43f4d354     b..>.......]T..C
400ac750:	48e64081 7e97db39 4e66e061 d2a652df     .@.H9..~a.fN.R..
400ac760:	21c37c40 53f9a23c 626aace5 665c4b62     @|.!<..S..jbbK\f
400ac770:	5d48c080 b46e135a 552684a1 2a6d933d     ..H]Z.n...&U=.m*
400ac780:	4c678862 1a24e303 41c6f480 c16bfa66     b.gL..$....Af.k.
400ac790:	3b459041 314ea355 50649c61 2556dad1     A.E;U.N1a.dP..V%
400ac7a0:	61259c40 01f9cb7d 4ac844e3 2731128d     @.%a}....D.J..1'
400ac7b0:	3fe6ec61 118902ff 45c58080 5727f371     a..?.......Eq.'W
400ac7c0:	538954c2 da218b12 4e2860c5 2663a2f1     .T.S..!..`(N..c&
400ac7d0:	5a070020 600e233e 57246462 aad85349      ..Z>#.`bd$WIS..
400ac7e0:	3f46c040 fcb6a264 42e41c61 89967aa4     @.F?d...a..B.z..
400ac7f0:	61ab88a3 3eb74b75 902dce2c c0ca11ca     ...auK.>,.-.....
400ac800:	f7debd40 7eb19e26 68b92421 237c3bb1     @...&..~!$.h.;|#
400ac810:	bc80a939 7365952c e61e7fb3 1e195983     9...,.es.....Y..
400ac820:	20f5db26 b3893d91 489aec6a 6ae50e1c     &.. .=..j..H...j
400ac830:	822f2116 100f72fb ed8c1464 85791a62     .!/..r..d...b.y.
400ac840:	f01f856a 9a8b634c 3ff35dd9 68b66876     j...Lc...].?vh.h
400ac850:	0f1a7980 24d5ca82 4e25c481 975432fb     .y.....$..%N.2T.
400ac860:	48e8f082 9e62eb55 654920c4 ab22b3a2     ...HU.b.. Ie..".
400ac870:	50a8fce6 824a5af2 3b252482 ae67526b     ...P.ZJ..$%;kRg.
400ac880:	63cbb103 b21f2378 5b04a860 958f7b74     ...cx#..`..[t{..
400ac890:	492894c1 a6be22a9 6e4caca2 6105db9c     ..(I."....Ln...a
400ac8a0:	44477ca2 51d06a5e 52c61080 09728311     .|GD^j.Q...R..r.
400ac8b0:	49873061 c4861ade 25e26020 43491ba7     a0.I.... `.%..IC
400ac8c0:	442630a3 d92ab290 6bac2d67 bca29b84     .0&D..*.g-.k....
400ac8d0:	5a08ac60 9fc20358 54c5f441 12c6f3ad     `..ZX...A..T....
400ac8e0:	4e875cc4 e6ccab18 3545e060 647511cf     .\.N....`.E5..ud
400ac8f0:	53e84c41 66054b5e 654b2124 1dabdb97     AL.S^K.f$!Ke....
400ac900:	2a644460 a0ae21b1 4ce808e1 9416cb17     `Dd*.!.....L....
400ac910:	690b3d42 8ff153b8 2903e840 0dda4b79     B=.i.S..@..)yK..
400ac920:	52a848e1 b2d6b393 584924c4 04fd5b10     .H.R.....$IX.[..
400ac930:	4465f060 2e417a87 5e2908c1 9a5ebb74     `.eD.zA...)^t.^.
400ac940:	67473882 78ee139f 4c857060 f13a233f     .8Gg...x`p.L?#:.
400ac950:	3ac67c41 52fc52ae 698bd504 706bc39f     A|.:.R.R...i..kp
400ac960:	66c35c40 434c2bb0 4c8834a1 3ff24abc     @\.f.+LC.4.L.J.?
400ac970:	5b6740c4 82006b6e 40e68860 9e9d2254     .@g[nk..`..@T"..
400ac980:	28643441 ae67f30a 6feb8d47 c9a413a1     A4d(..g.G..o....
400ac990:	5f6898a0 08e9b310 5429c061 5af1bba9     ..h_....a.)T...Z
400ac9a0:	3c868482 d8e93b72 2d445420 b5ffd34b     ...<r;.. TD-K...
400ac9b0:	5ac900e2 0e8b9bb5 536854c3 e416cb36     ...Z.....ThS6...
400ac9c0:	3105ec60 533b324c 6aec4d01 06ad2b9a     `..1L2;S.M.j.+..
400ac9d0:	57874c82 06ac92ee 5f2a3040 5c215345     .L.W....@0*_ES!\
400ac9e0:	31045461 5a737a24 606920e5 324cc38d     aT.1$zsZ. i`..L2
400ac9f0:	62ebf500 d587336d 3d64fc41 c2fd0276     ...bm3..A.d=v...
400aca00:	534600a3 e745bb84 49c45820 c8db134b     ..FS..E. X.IK...
400aca10:	3fe684a2 3418c287 64cb7d03 69fc03b0     ...?...4.}.d...i
400aca20:	56a74cc0 c5f95b5a 59c904a1 b2a713ba     .L.VZ[.....Y....
400aca30:	47441862 6c5fc31f 2bc4c860 6aee835d     b.DG.._l`..+]..j
400aca40:	6726f041 55764384 51e92107 ee2b42d3     A.&g.CvU.!.Q.B+.
400aca50:	4b8854c0 33e8535c 52c59881 d96ed2d7     .T.K\S.3...R..n.
400aca60:	62672c62 ae0ec3b7 580ad900 6d88a312     b,gb.......X...m
400aca70:	3de6f8a1 53a9e3ad 4e24cc62 6e336377     ...=...Sb.$Nwc3n
400aca80:	3b46d8a0 4585621a 60abb841 432c3354     ..F;.b.EA..`T3,C
400aca90:	5449c083 72f00b80 50695c20 3e82e33c     ..IT...r \iP<..>
400acaa0:	28042062 401302ca 6b2890e6 a3ab53b2     b .(...@..(k.S..
400acab0:	3365d040 ae22c25d 6887a461 4c8c039d     @.e3].".a..h...L
400acac0:	5fca1904 3ade9b07 65a924a0 18b36b42     ..._...:.$.eBk..
400acad0:	54645c61 ccf0cb9f 462714c2 8a4e6ad1     a\dT......'F.jN.
400acae0:	4406e0a0 364e729a 3a24b041 e7d8c387     ...D.rN6A.$:....
400acaf0:	666b8123 97f60353 5a6844c0 b6bdeb9f     #.kfS....DhZ....
400acb00:	57297ce1 7ab8b377 2de4e462 77e57303     .|)Ww..zb..-.s.w
400acb10:	32e52480 f2ad19c3 6c4a7521 d3d6fb8e     .$.2....!uJl....
400acb20:	5ae85c62 89dbb314 4f64e420 d6ab1b69     b\.Z.... .dOi...
400acb30:	35a5c062 43212ac6 636abd07 2e4853a0     b..5.*!C..jc.SH.
400acb40:	4dc62c40 6c8b5a99 2b440c61 891aca20     @,.M.Z.la.D+ ...
400acb50:	6a6c8d67 6740cb9a 32655460 c748eb7e     g.lj..@g`Te2~.H.
400acb60:	5a693901 8aea9b88 57a77082 3c0deb13     .9iZ.....p.W...<
400acb70:	5bc33820 0eba83a2 52660882 9445d327      8.[......fR'.E.
400acb80:	4b6880e5 d07dab79 45471c40 12b7da40     ..hKy.}.@.GE@...
400acb90:	6165a061 a2bd3b4d 5dca94c4 c555fba2     a.eaM;.....]..U.
400acba0:	49451460 bd2ecb8c 5b87d4c1 de0e932b     `.EI.......[+...
400acbb0:	55e8a082 8223d361 67875080 8956fb62     ...Ua.#..P.gb.V.
400acbc0:	5faa44c1 5850238c 41c56c62 c748a277     .D._.#PXbl.Aw.H.
400acbd0:	64a93460 c56d9b4f 40e51841 93ffab91     `4.dO.m.A..@....
400acbe0:	54c7bcc4 d0d11aeb 59a54020 6f01cb94     ...T.... @.Y...o
400acbf0:	3ae61462 457b721a 676a1524 bb66f369     b..:.r{E$.jgi.f.
400acc00:	52475860 cb500adb 35040441 71a1738f     `XGR..P.A..5.s.q
400acc10:	60092505 71963b58 39a6a480 54027b5c     .%.`X;.q...9\{.T
400acc20:	66aaf0a1 4101838b 4ec8b462 17ba62df     ...f...Ab..N.b..
400acc30:	612aa0a0 62288b47 5ae81461 a7878b8a     ..*aG.(ba..Z....
400acc40:	3826fc82 0b4e9a48 39c5a420 84059a1b     ..&8H.N. ..9....
400acc50:	5d890c62 79c9db7c 638a74c4 b93d43a7     b..]|..y.t.c.C=.
400acc60:	3ee42860 a68e8b05 54c8a441 f8ddf2c8     `(.>....A..T....
400acc70:	6c69f0c5 e8da0b86 4366f420 af288b83     ..il.... .fC..(.
400acc80:	38e4d062 64cebb27 56290cc5 2bd16359     b..8'..d..)VYc.+
400acc90:	5c88e8e3 74c64b53 63aa3440 801f4397     ...\SK.t@4.c.C..
400acca0:	5685a460 1dfb8ade 6447c4c1 2675d3b7     `..V......Gd..u&
400accb0:	2e62bc20 f8e63b61 57c8fce3 e7c282c2      .b.a;.....W....
400accc0:	2c423020 3f5ca240 6ecc9c83 738eb3a7      0B,@.\?...n...s
400accd0:	50a66c20 01efe395 2dc852f7 a4b8a31b      l.P.....R.-....
400acce0:	3995841c a5865961 f85022fd 4fe352f9     ...9aY..."P..R.O
400accf0:	f1f9e571 59f7a69a 2cd03602 2fbf9cd8     q......Y.6.,.../
400acd00:	a656d4f8 9b25f37f dba02be9 d51781d9     ..V...%..+......
400acd10:	7358ef7a 8a852dc1 06202f3b 3eb121cf     z.Xs.-..;/ ..!.>
400acd20:	3422e2ef 312c33c2 1054b49c 353f5e5b     .."4.3,1..T.[^?5
400acd30:	718ca920 e3830bff 53086881 03570b67      ..q.....h.Sg.W.
400acd40:	38864c62 72f642fe 62a810a2 fb2e53e4     bL.8.B.r...b.S..
400acd50:	4e86bc80 1abb3a8a 5fe7aca1 11dffb4c     ...N.:....._L...
400acd60:	7429fc62 cff55bff 5b48b8c0 2fdceb84     b.)t.[....H[.../
400acd70:	5605f461 7a537b79 63eb68e4 7cad6b6a     a..Vy{Sz.h.cjk.|
400acd80:	65e2a820 a63043ed 46c55083 e5a0e290      ..e.C0..P.F....
400acd90:	50a968e6 643e4385 4ae89440 39ecabf5     .h.P.C>d@..J...9
400acda0:	658b68e1 c1c92b70 37c53483 1f1b439e     .h.ep+...4.7.C..
400acdb0:	51c91420 e2a91acd 726d1982 90025bea      ..Q......mr.[..
400acdc0:	39e61ca3 e71d422c 3f244861 b6e7036b     ...9,B..aH$?k...
400acdd0:	5e68b040 6ad4bb82 550900a4 85ae8321     @.h^...j...U!...
400acde0:	41679cc5 56850be5 34247420 44302a96     ..gA...V t$4.*0D
400acdf0:	718dfd22 b3c18bdc 654bc503 3f228bfa     "..q......Ke.."?
400ace00:	37651040 4b6dcb7d 5209e4e1 a7c28b9e     @.e7}.mK...R....
400ace10:	622bc483 ef943389 26c3c420 167ec194     ..+b.3.. ..&..~.
400ace20:	61282c62 4bb7a3f1 680958e5 14763ba2     b,(a...K.X.h.;v.
400ace30:	56667082 0ae6a2e3 69e800a0 fdd1d3a7     .pfV.......i....
400ace40:	5189a8e1 3db8fb19 676b0cc3 2b401bdc     ...Q...=..kg..@+
400ace50:	2b228820 336e4b41 54882c81 6ca76bca      ."+AKn3.,.T.k.l
400ace60:	5a29c4e5 832afbce 34033040 1ff1fa3b     ..)Z..*.@0.4;...
400ace70:	618a28e4 89240387 620b1921 8dc2d35d     .(.a..$.!..b]...
400ace80:	3fe58040 e1d9e35c 730b7943 e173bbdb     @..?\...Cy.s..s.
400ace90:	45a6c480 8a8e8277 4447e4a1 1c973323     ...Ew.....GD#3..
400acea0:	692a0d22 968f93c4 59465c83 10156b92     ".*i.....\FY.k..
400aceb0:	43253c60 a0ab9394 4ba63041 7dde2a9a     `<%C....A0.K.*.}
400acec0:	606b6ce4 40c87374 650a78e5 9309fbde     .lk`ts.@.x.e....
400aced0:	21438420 735da247 6e0ba502 ac3a03d9      .C!G.]s...n..:.
400acee0:	754930c1 50cbe3d5 5ee66c60 ecdab352     .0Iu...P`l.^R...
400acef0:	64a86082 983bd3ba 4d08c0e5 b6c512ac     .`.d..;....M....
400acf00:	60a30440 53a67384 54c734a1 813d2afc     @..`.s.S.4.T.*=.
400acf10:	6d4a84c4 7d4013f0 42e5fc20 ee6b7259     ..Jm..@} ..BYrk.
400acf20:	61c4d862 33be3bb3 6beb78e6 b2f4f3d6     b..a.;.3.x.k....
400acf30:	4367a080 647f2a40 658ad861 81559bec     ..gC@*.da..e..U.
400acf40:	584628a2 8fb34351 732a0882 765b0bf8     .(FXQC....*s..[v
400acf50:	44a65020 594b834a 5987b4a3 e63bcb1d      P.DJ.KY...Y..;.
400acf60:	700af527 cd1023cb 41c4dc40 8698dad5     '..p.#..@..A....
400acf70:	4f862861 b2389300 6fcce8a4 ed9a8393     a(.O..8....o....
400acf80:	49c2bc20 dbc3bb71 7368f4e3 d9e3fbd2      ..Iq.....hs....
400acf90:	54c608a2 757ae2f2 3d661880 f1fa637f     ...T..zu..f=.c..
400acfa0:	55059861 8eb333c6 63ebe128 c96453bc     a..U.3..(..c.Sd.
400acfb0:	3323b020 651a4a2a 746b1ca2 5f6b73ee      .#3*J.e..kt.sk_
400acfc0:	5749dce4 c6579b55 60c92c60 56a41bbd     ..IWU.W.`,.`...V
400acfd0:	5d4aa4c1 d99df3c6 3da59482 1e554323     ..J].......=#CU.
400acfe0:	6cc80080 f8dc73ff 58a904a1 8b4f0384     ...l.s.....X..O.
400acff0:	6e282062 1b8c0020 57e880e6 5e800af1     b (n ......W...^
400ad000:	6c09e4c0 e16493aa 52673ca1 9a742312     ...l..d..<gR.#t.
400ad010:	43a4d462 c25eabee 51094040 2d67e39e     b..C..^.@@.Q..g-
400ad020:	6466b481 d6775bde 588764a3 5528936b     ..fd.[w..d.Xk.(U
400ad030:	31859460 4a5ab242 73cd8441 163d23da     `..1B.ZJA..s.#=.
400ad040:	5d8a44e4 3f782b30 40a49860 9550aadb     .D.]0+x?`..@..P.
400ad050:	5289bce1 4a08c384 68ec38a2 b182ebe6     ...R...J.8.h....
400ad060:	44265462 4d430ae4 3b26e480 09eac359     bT&D..CM..&;Y...
400ad070:	768c3921 ba52b3fb 628ad505 41a2a3d9     !9.v..R....b...A
400ad080:	5563cc20 805dc354 4b4720c2 5091a2f4      .cUT.].. GK...P
400ad090:	59c8dca4 6ba2e39b 60894880 8067bb89     ...Y...k.H.`..g.
400ad0a0:	6ce7f841 b37dd3ed 442678a3 35b71a96     A..l..}..x&D...5
400ad0b0:	5e6a0820 ec36db94 6b075ca2 b5b563db      .j^..6..\.k.c..
400ad0c0:	4dc894c3 b7f6630e 63641840 b55ceb70     ...M.c..@.dcp.\.
400ad0d0:	46255c81 4a5c7285 7189ecc3 56cd53d8     .\%F.r\J...q.S.V
400ad0e0:	514844e2 51ab2ad2 752c6c20 cebcebe1     .DHQ.*.Q l,u....
400ad0f0:	5fe56483 dc9b237e 48e738c3 55a852fd     .d._~#...8.H.R.U
400ad100:	4426a420 033183bd 67aad082 13207357      .&D..1....gWs .
400ad110:	55a960e5 13723bdc 4d43cc40 700e6b1e     .`.U.;r.@.CM.k.p
400ad120:	3ee63c81 3d37e224 754d4565 17b093c4     .<.>$.7=eEMu....
400ad130:	4247f880 8227db67 628bbca1 4d02f391     ..GBg.'....b...M
400ad140:	5766c062 785c33e2 4f46f480 d1b51aab     b.fW.3\x..FO....
400ad150:	4665d041 ce9543b3 636ba4e3 53e4cbf5     A.eF.C....kc...S
400ad160:	77ad7949 a179cbe8 4147b8a0 46759ad0     Iy.w..y...GA..uF
400ad170:	33a42c41 7730e32a 6bc914a3 e131d3d1     A,.3*.0w...k..1.
400ad180:	3946f840 d54d32b1 4d48d081 9c695ba9     @.F9.2M...HM.[i.
400ad190:	65ab90a3 52135b50 64483020 9c30e343     ...eP[.R 0HdC.0.
400ad1a0:	36249c62 e60faabf 704b0127 3582cbd6     b.$6....'.Kp...5
400ad1b0:	67cab900 dd6eb3b3 4a84c041 9542d2fa     ...g..n.A..J..B.
400ad1c0:	68a620a3 9df5cbf7 5f6708a1 6085fb9d     . .h......g_...`
400ad1d0:	3144ec40 1a3f335f 7a8c3147 f770000b     @.D1_3?.G1.z..p.
400ad1e0:	4e68bce6 701e0362 67ea0860 6d4e23aa     ..hNb..p`..g.#Nm
400ad1f0:	5c4898a1 f90f8bd7 53a9b482 a76fcafe     ..H\.......S..o.
400ad200:	a14aecef 8ca391b3 86d94d8e 6862f9c0     ..J......M....bh
400ad210:	86d9ee8f 0c15bc50 86dfef99 43ace1f0     ....P..........C
	...
400ad240:	9a88031b d000f7c1 99801b7f 9608a642     ............B...
400ad250:	1ce82aef 0a0ee8c3 da004b04 4814fe03     .*.......K.....H
400ad260:	8ef05b57 d61afac4 4de07373 0220b745     W[......ss.ME. .
400ad270:	1bb88b52 f628ea46 d488a266 1a2eaec6     R...F.(.f.......
400ad280:	99e0bb55 3c34d1c7 5dd8d31e 4c3a6a08     U.....4<...].j:L
400ad290:	12e0e34c ca42e189 d850fa7b f848ddc9     L.....B.{.P...H.
400ad2a0:	9a311288 084e804a 52d12b74 b454d10b     ..1.J.N.t+.R..T.
400ad2b0:	1ab14291 2e589c0c dad15312 9660e38c     .B....X..S....`.
400ad2c0:	9af16b4a 9868930d 5aa98315 9e6eda8e     Jk....h....Z..n.
400ad2d0:	1b819a1e e474ec8f dbb1b2ce e47a948f     ......t.......z.
400ad2e0:	9961c344 0c8096d0 50a1dae9 bc88d411     D.a........P....
400ad2f0:	1921f30a 0a8eb952 d3420b4e ac94d252     ..!.R...N.B.R...
400ad300:	9a9a227a ce9add13 559232c9 30a08dd4     z".......2.U...0
400ad310:	1c1a4af0 0ea6ef55 ceea6346 6eacfc95     .J..U...Fc.....n
400ad320:	9aea7afb 5cb4eb96 54aa9361 3ebae117     .z.....\a..T...>
400ad330:	1b1aa243 78c09a98 dd82bb67 c4c6bad8     C......xg.......
400ad340:	922ad29e a0ceda19 5d3aeb2e 92d4d21a     ..*.......:]....
400ad350:	1b0b036e 38dae25b da6b1360 dae0e95b     n...[..8`.k.[...
400ad360:	9c3b290f 88e6d8dc 57fb428f 64eef8dd     .);......B.W...d
400ad370:	1b8b5b45 2ef4e41e db7b7306 ccfaccde     E[.......s{.....
400ad380:	906b8248 2500d15f 597b9a5d e106a760     H.k._..%].{Y`...
400ad390:	1d7bab75 f90eb361 1cc3cb66 3b14a6a2     u.{.a...f......;
400ad3a0:	567be20c 651ad922 dbcbf37e ad20eaa2     ..{V"..e~..... .
400ad3b0:	53640a41 a128d6a3 dc242347 672eef23     A.dS..(.G#$.#..g
400ad3c0:	17d43b42 b802d7c0 d5e4533c c60ad041     B;......<S..A...
400ad3d0:	d7ec626c 9210d442 00c00ab0 fc140a83     lb..B...........
400ad3e0:	1d101365 981cd6c4 dab83327 44200144     e.......'3..D. D
400ad3f0:	99384355 e426d805 5d506338 9c2e0746     UC8...&.8cP]F...
400ad400:	1b48702a 5236ebc7 d5b0929c ec3a0c47     *pH...6R....G.:.
400ad410:	95b8ab10 8e44c848 5810b343 e0480889     ....H.D.C..X..H.
400ad420:	1c48cb51 b44af4ca 80a8eac1 8a52d98a     Q.H...J.......R.
400ad430:	9cd8f83d c65ac68b 50891a3e 6a62aecc     =.....Z.>..P..bj
400ad440:	13012805 6468084d 80b14a34 0c6cf10d     .(..M.hd4J....l.
400ad450:	9cf1500a ba76b6ce 5dc16348 427a0fcf     .P....v.Hc.]..zB
400ad460:	17318adb ac82f350 dc219806 80880510     ..1.P.....!.....
400ad470:	9bd1bab5 9490cb91 00b9c03c 60940bd2     ........<......`
400ad480:	1c01d83a 629cf693 dd39fb71 f0a00b13     :......bq.9.....
400ad490:	9d4202ee 0ea8f094 5b522af2 0aaee815     ..B......*R[....
400ad4a0:	1d0a302f 52b6cf16 81ca5324 32bcf556     /0.....R$S..V..2
400ad4b0:	913a6b1d dcc2f717 5d6a7815 48c8ea18     .k:......xj]...H
400ad4c0:	c0728b2e 9cd0fa98 dacaaae4 20d40cd9     ..r............ 
400ad4d0:	9972c314 e2dcf19a 5de2d00b 80e0009b     ..r........]....
400ad4e0:	1c5ae36f 18e8ac9c 80830b3d 3aee06dc     o.Z.....=......:
400ad4f0:	9c931a4d 80f40a5d 5c832801 04fc811e     M...]....(.\....
400ad500:	1c7b3b36 0d02e89f 814b62ca f308e61f     6;{......bK.....
400ad510:	96137a58 bf10c920 01eb8017 1f16e561     Xz.. .......a...
400ad520:	9c33a33e 0b1a0322 c17bb341 cf22b9a2     >.3."...A.{...".
400ad530:	4063d305 4526e063 c0dbdaf6 1730f3e3     ..c@c.&E......0.
400ad540:	5b1bfb0e 1e04be00 12b4136c 8206fd81     ...[....l.......
400ad550:	1c2c1ae5 c40cf542 539c32e0 e8141142     ..,.B....2.SB...
400ad560:	02bc5000 e41a0943 03ec6ab1 7422fd44     .P..C....j..D."t
400ad570:	c298086d 9e280b04 dcb01814 5830f3c5     m.....(.......0X
400ad580:	01d03b6a f4340106 5df04063 883cf307     j;....4.c@.]..<.
400ad590:	c2f86a38 5e40bb07 40b87a9a 8c481dc8     8j....@^.z.@..H.
400ad5a0:	4268883d 3e4e0309 5ac89b35 5654080a     =.hB..N>5..Z..TV
400ad5b0:	dc68b049 285cf38a d770c852 6a62130b     I.h...\(R.p...bj
400ad5c0:	0060e840 7a6af00c 03f8f84d 5c70e18d     @.`...jzM.....p\
400ad5d0:	d5410b40 9c74004d d8413313 9a7cee4e     @.A.M.t..3A.N.|.
400ad5e0:	43e14033 3c84d60f 5d415af6 3686f7d0     3@.C...<.ZA]...6
400ad5f0:	1aa172de 208e0dd1 8371801c 0e9417d1     .r..... ..q.....
400ad600:	5701986c 2298b912 c1a1b018 2aa2f492     l..W...".......*
400ad610:	1799ca7a 08aac614 8361d871 6eb0d814     z.......q.a....n
400ad620:	9891eb2b 08b8fad5 585212f7 44ba0416     +.........RX...D
400ad630:	d6da284a bec21856 405a3a0d facaf8d7     J(..V....:Z@....
400ad640:	981a4800 36ccb7d8 1832685a e6d6b319     .H.....6Zh2.....
400ad650:	803a7295 46dc1f99 da329b00 96e2f51a     .r:....F..2.....
400ad660:	9362a85e 36e6019b 0232b36d 2aecb6dc     ^.b....6m.2....*
400ad670:	d092cb7f 12f6dc9c 820ae055 7afa0cdd     ........U......z
400ad680:	97a30859 0d04fe9e 536b1865 c1081d1f     Y.......e.kS....
400ad690:	da2b2858 931012df 834b4026 8b140fa0     X(+.....&@K.....
400ad6a0:	594b607c 3f1ca2e1 006b6b79 3d221c22     |`KY...?ykk."."=
400ad6b0:	c223804e fb280ee2 42b3a82f 3532b1e3     N.#...(./..B..25
400ad6c0:	5ae3ba8a 820424c1 8153c2ed 4a0c2fc1     ...Z.$....S../.J
400ad6d0:	c263e01f 48101f42 55540324 6a16a903     ..c.B..H$.TU...j
400ad6e0:	c15c1064 781ee603 81c42027 1c248604     d.\....x' ....$.
400ad6f0:	408c430f 5e261485 04745b76 9232fbc6     .C.@..&^v[t...2.
400ad700:	c1e46030 2a38ee86 80e0106e 683a1147     0`....8*n...G.:h
400ad710:	44f8231b 483c22c8 01103045 5e46ff49     .#.D."<HE0..I.F^
400ad720:	0380523a 3c4e250a 193868a0 c456f24b     :R...%N<.h8.K.V.
400ad730:	41d87886 385ee4cb 42a8906c dc6003cc     .x.A..^8l..B..`.
400ad740:	5c48a005 94681a4d 1c00c321 306e06ce     ..H\M.h.!.....n0
400ad750:	c430daf5 5874210e 0190e03f 187c2d8f     ..0..!tX?....-|.
400ad760:	4458e894 f6821d90 0599187d a08ac1d1     ..XD....}.......
400ad770:	ddf92846 cc901291 44414080 8c96f052     F(.......@ADR...
400ad780:	03495885 9a9c1993 c2b9681c f8a01b53     .XI......h..S...
400ad790:	da019308 44a602d4 85c998b1 78b02215     .......D.....".x
400ad7a0:	44b9b0a8 38b82d56 c581c8b8 b0bedb96     ...DV-.8........
400ad7b0:	8219d327 1cc00957 00a9f02a 06c60998     '...W...*.......
400ad7c0:	c28210ae c4cc2558 c3421b79 0ed41e19     ....X%..y.B.....
400ad7d0:	402a436c d6dea75a 84da5b6a d4e4cd1b     lC*@Z...j[......
400ad7e0:	c06a6013 9aeaf59b c42a8348 42f0d71c     .`j.....H.*....B
400ad7f0:	40b29002 56f2bd9d 856ab08d d0fa2dde     ...@...V..j..-..
400ad800:	022ac07a f3042c1f c41adaf6 e10af9df     z.*..,..........
400ad810:	4052f28e b712f1a0 45a30006 e118d561     ..R@.......Ea...
400ad820:	dbbb2375 2d1c29e1 414b2884 e724f1e2     u#...).-.(KA..$.
400ad830:	17834b22 c72e00a3 9d53534d 180216a3     "K......MSS.....
400ad840:	038b6891 d4080bc0 45e38b68 0212d4c0     .h......h..E....
400ad850:	9d539313 70163500 044bc0a5 7c1e3341     ..S..5.p..K.A3.|
400ad860:	8773d878 482639c1 8023e0af 322acc02     x.s..9&H..#...*2
400ad870:	05c400a2 5e2e1103 595c1867 8c383c44     .......^g.\YD<8.
400ad880:	1c2c2a9e 0c3a3785 4614307b de402705     .*,..7:.{0.F.'@.
400ad890:	98ac5899 5c4a12c6 44746847 e450e007     .X....J\GhtD..P.
400ad8a0:	1c447357 ba580c48 db980029 9c5e35c8     WsD.H.X.)....5^.
400ad8b0:	45b018b5 4a64dc89 4508281d 02683f4a     ...E..dJ.(.EJ?h.
400ad8c0:	82a850c7 1a70260a c49868cf 0678ff8b     .P...&p..h....x.
400ad8d0:	4798706e b67c360c 056088ab 40800a0d     np.G.6|...`....@
400ad8e0:	83c0b088 b286208d c7a0c0fe 508e25ce     ..... .......%.P
400ad8f0:	0760d8e2 de92ec0f 0330e0ce 509a0190     ..`.......0....P
400ad900:	07f10316 8aa4d351 c78118f2 3eaa2951     ....Q.......Q).>
400ad910:	47c13b4a 2aac0012 596940ff 40b83a13     J;.G...*.@iY.:.@
400ad920:	c66158ef 06bc1b53 85297b79 cac4ced4     .Xa.S...y{).....
400ad930:	87b180a9 ccc637d5 c049a34d f6ce0e55     .....7..M.I.U...
400ad940:	8211ab65 6ad8e916 86b9c8db 66da0497     e......j.......f
400ad950:	84e1e358 fae62558 0411f86b 68e815d9     X...X%..k......h
400ad960:	1c0a18cb 42f0365a c542201e 6cf62d1a     ....Z6.B. B..-.l
400ad970:	00a23884 c8fc13db 56ea5061 d3000f9c     .8......aP.V....
400ad980:	1b1258f1 4f060f5d 853a70bd cb10249d     .X..]..O.p:..$..
400ad990:	014a9883 d1161d1e 45faa00e 7d1c329f     ..J........E.2.}
400ad9a0:	1cc2c8ac 9f222920 476ad8d5 552823e0     .... )"...jG.#(U
400ad9b0:	469ae826 fd322b61 873b0890 4c062123     &..Fa+2...;.#!.L
400ad9c0:	080320e1 200a1ac0 088328d4 9e103cc1     . ..... .(...<..
400ad9d0:	055b3878 52164882 44fb50c1 9c1e4c42     x8[..H.R.P.DBL..
400ad9e0:	46637000 e82431c3 054b808e 482a4004     .pcF.1$...K..@*H
400ad9f0:	8793981c a22cf7c4 48f3b05e 94342dc5     ......,.^..H.-4.
400ada00:	078bd050 523eee46 c73be0ee f4420006     P...F.>R..;...B.
400ada10:	8643f030 c4482a07 826c083d 344cf848     0.C..*H.=.l.H.L4
400ada20:	483c18dc 2c5427c9 c1343820 145a1e49     ..<H.'T, 84.I.Z.
400ada30:	890c58e0 e460328a 466c68d0 3a66f04b     .X...2`..hlFK.f:
400ada40:	9d4008aa 6872a78c 460020f5 e676134d     ..@...rh. .FM.v.
400ada50:	c50838b2 4c7a160d 82085133 9a84228e     .8....zL3Q..."..
400ada60:	09f86904 348a3b4f 098078e3 24924e90     .i..O;.4.x...N.$
400ada70:	c3f09884 c6982090 41b0a0e6 4c9c3091     ..... .....A.0.L
400ada80:	4850c11b aea221d2 c538d922 64aa4212     ..PH.!..".8..B.d
400ada90:	8048e8f4 3aae1053 41c10116 14b613d4     ..H.S..:...A....
400adaa0:	88a11003 54be3655 c8713083 d0c039d5     ....U6.T.0q..9..
400adab0:	c7e94872 6cca2396 88316079 f6d2fb17     rH...#.ly`1.....
400adac0:	07f17905 dad84dd8 5a598873 f4de3799     .y...M..s.YZ.7..
400adad0:	c71990f8 2ce225d9 4629b867 2ee8469a     .....%.,g.)F.F..
400adae0:	8799c924 b2f0499b 0409e12c 66f8fe5c     $....I..,...\..f
400adaf0:	83e9f0f2 94fefb9c dbca0839 73021bdd     ........9......s
400adb00:	43e228b1 bf082fde c1423914 730e0b9e     .(.C./...9B....s
400adb10:	832a4881 9b12315f ddfa593f bf183920     .H*._1..?Y.. 9..
400adb20:	9aa27853 51243221 465a9919 2f2610a2     Sx..!2$Q..ZF..&/
400adb30:	c572a112 f13019a2 44f2b827 4a043c63     ..r...0.'..Dc<.J
400adb40:	8842e09a 8e084140 d7aaf0d8 6e0e0b80     ..B.@A.........n
400adb50:	c32b00e9 1818ee01 889318be 2c1e5802     ..+..........X.,
400adb60:	4aab32ba c8245203 48bb48c9 342c59c4     .2.J.R$..H.H.Y,4
400adb70:	8b2b5806 902e4d44 4a9b787c 3e345085     .X+.DM..|x.J.P4>
400adb80:	884b90eb e23a4106 0213993b b44045c7     ..K..A:.;....E@.
400adb90:	c5bbb897 d44630c7 c883c0d0 5e4e36c8     .....0F......6N^
400adba0:	072beb77 8c584f09 481bf861 5c5e4cca     w.+..OX.a..H.L^\
400adbb0:	06ac10b6 9e62244b 4a2420a2 aa6c130b     ....K$b.. $J..l.
400adbc0:	48e4390e ea6e370c 4ad44acc 1478484d     .9.H.7n..J.JMHx.
400adbd0:	caf470e2 287ef88d 40980969 14845e0e     .p....~(i..@.^..
400adbe0:	45e8190e a288144f c0a8408c ae903c8f     ...EO....@...<..
400adbf0:	cb88514d ec985910 4b205825 409a4951     MQ...Y..%X KQI.@
400adc00:	9cb07941 16a03452 ca1082c3 02a81a52     Ay..R4......R...
400adc10:	0428a171 0ab2bfd4 4b40b813 16b40e54     q.(.......@KT...
400adc20:	0088d97c fabc4d95 cb60f314 d4c05d95     |....M....`..]..
400adc30:	cac8f890 accc3316 45192375 62ce4817     .....3..u#.E.H.b
400adc40:	0b59317a 52d62218 0889494b 54de50d9     z1Y..".RKI...P.T
400adc50:	09295932 9ee4395a 83a970b9 96ea3eda     2Y).Z9...p...>..
400adc60:	42898124 74f2339b 4979a906 c8f41e1c     $..B.3.t..yI....
400adc70:	c691b0d9 4efc4a1c 8939d0d8 1b0432dd     .....J.N..9..2..
400adc80:	0921e8af 93064f5e 48120065 1b10435f     ..!.^O..e..H_C..
400adc90:	08ea10e3 a3142320 cbe22949 cb1c43a0     .... #..I)...C..
400adca0:	02f23968 11245f61 8a1a512b 67284561     h9..a_$.+Q..aE(g
400adcb0:	838a60fa ef2cd022 c3527961 d8046ea3     .`..".,.ayR..n..
400adcc0:	cdfa884b 3a0a5500 0a92a8b7 0a124681     K....U.:.....F..
400adcd0:	4a1ac0f3 82186682 c602d078 6c1c1682     ...J.f..x......l
400adce0:	9d6af14e b8246743 4ceb017e da264c84     N.j.Cg$.~..L.L&.
400adcf0:	8c9b2135 282c6904 82133179 5e361e45     5!...i,(y1..E.6^
400add00:	429340a1 a63e5586 49635973 48441a87     .@.B.U>.sYcI..DH
400add10:	ccc37963 644c5c47 cc5b88db ea504288     cy..G\Ld..[..BP.
400add20:	9df39965 f0545749 4c73b95f 3c5a5a4a     e...IWT._.sLJZZ<
400add30:	c403d137 726446ca c94bd8fb 2866578b     7....Fdr..K..Wf(
400add40:	8a43f948 7a725c0c 085c0911 e276564d     H.C..\rz..\.MVv.
400add50:	cc4430c4 5c7e678d 4d144095 9e804cce     .0D..g~\.@.M.L..
400add60:	96c44958 528a57cf 4644608a 808cff10     XI...W.R.`DF....
400add70:	cdf010f7 08963f50 4c00215a ae9a6511     ....P?..Z!.L.e..
400add80:	8d203977 c0a44dd2 06d859a1 38aa5d93     w9 ..M...Y...].8
400add90:	0d60607a 06b26814 89b0818c b4b65114     z``..h.......Q..
400adda0:	42f890cb f0be5ad5 cd00a852 b0c44455     ...B.Z..R...UD..
400addb0:	1db0b982 a0c81bd7 dd38c886 90ce6017     ..........8..`..
400addc0:	8908e10e 26d66498 4b010174 62dc2a59     .....d.&t..KY*.b
400addd0:	85191913 24e25059 8d3931b0 d4ec245a     ....YP.$.19.Z$..
400adde0:	094149af d0f26e5b 4db9505c eef8561c     .IA.[n..\P.M.V..
400addf0:	cc1968fe fcfc6b5c 47e19176 3b00451d     .h..\k..v..G.E.;
400ade00:	0c79a109 9d0a3a5e 4c39a9a7 430e571f     ..y.^:....9L.W.C
400ade10:	8a69d185 211469df 4871e17c a31ef9e0     ..i..i.!|.qH....
400ade20:	4901f907 09265e61 c7d2097f 552afd61     ...Ia^&.....a.*U
400ade30:	8d8a2104 d32c6be2 07fa3043 28024fa3     .!...k,.C0...O.(
400ade40:	485a4944 06065440 ce327117 600e6b00     DIZH@T...q2..k.`
400ade50:	476280ed 50165681 cd2290f2 241a2c81     ..bG.V.P.."..,.$
400ade60:	4fe2a15d 5a247f02 4d7ac92e 922821c3     ]..O..$Z..zM.!(.
400ade70:	c72ad910 cc2c7683 c462faf1 e2323c44     ..*..v,...b.D<2.
400ade80:	8f2b0915 d63c3f85 4e1b1016 f24253c6     ..+..?<....N.SB.
400ade90:	cb233187 364a4646 09ab4966 ee4e6108     .1#.FFJ6fI...aN.
400adea0:	8abb68f3 7a586288 0c6b7108 b05a7049     .h...bXz.qk.IpZ.
400adeb0:	caab89ad ec605ec9 0c33a063 2c6a2a4b     .....^`.c.3.K*j,
400adec0:	829bb11a 7270434b 4c5bc16f 80727e0c     ....KCpro.[L.~r.
400aded0:	c1ebe96b 147a508c 06fc00c1 ce80794e     k....Pz.....Ny..
400adee0:	c92c117b b288694e 8e4428d1 9a8e41cf     {.,.Ni...(D..A..
400adef0:	cc3c3180 0296778f 81b45050 1e9eed90     .1<..w..PP......
400adf00:	4e9461aa 1aa067d1 8fa80112 f4ac4992     .a.N.g.......I..
400adf10:	48302903 68b03a53 0f0039d2 88b277d4     .)0HS:.h.9...w..
400adf20:	4dd051bf b2b84454 0c106955 b8c64595     .Q.MTD..Ui...E..
400adf30:	460081e1 b4cc60d6 0f7891e8 4ed25d57     ...F.`....x.W].N
400adf40:	8bc8a9c1 10d855d7 4270b118 d8de6d58     .....U....pBXm..
400adf50:	4fd8d023 94e46259 8eb0f18e cee85519     #..OYb.......U..
400adf60:	c8390889 88ec7e5a 8b491148 44f4671b     ..9.Z~..H.I..g.D
400adf70:	0a5119c0 f0fc761c cea149e0 4100755c     ..Q..v...I..\u.A
400adf80:	ca496176 3108501d 86497970 1b0e719e     vaI..P.1pyI..q..
400adf90:	06918964 af164d9f 8ec198ff db1a159f     d....M..........
400adfa0:	85e9b96f 49200ba0 0d41d1ff d52c7121     o..... I..A.!q,.
400adfb0:	cf51e1f9 33305f21 0ff9e990 00000aa3     ..Q.!_03........
400adfc0:	0a5201a5 d8086580 507221f5 7a0c3880     ..R..e...!rP.8.z
400adfd0:	8d1239b3 36187ac0 0ffa40fe 061a8781     .9...z.6.@......
400adfe0:	d1026896 be201241 517a71ef 2a2a5a02     .h..A. ..qzQ.Z**
400adff0:	ce9289a1 78302fc2 4f22b0c3 ca3675c4     ...../0x.."O.u6.
400ae000:	0842b94f 563e7a85 9182d9fa 32447885     O.B..z>V.....xD2
400ae010:	8dcaf191 9c4c7806 0d7af9cb 46521187     .....xL...z...RF
400ae020:	8adb1942 9c588647 90c331e5 0e5c20c8     B...G.X..1... \.
400ae030:	1083419d 3a626f49 078b608c 36684b4a     .A..Iob:.`..JKh6
400ae040:	ceb379be f66c678a 4cd389ea ae72810b     .y...gl....L..r.
400ae050:	8fdba8ae b27a854c 0f53b1da 2280894d     ....L.z...S.M.."
400ae060:	89ebc83c b48c7f4d 8a6be138 4890610e     <...M...8.k..a.H
400ae070:	903bf13a 109428cf d0040998 2a9e8e0f     :.;..(.........*
400ae080:	083429c5 18a470d1 c9943943 9ca63ed1     .)4..p..C9...>..
400ae090:	03644999 e0ae5112 cddc690d 90b469d2     .Id..Q...i...i..
400ae0a0:	8b2011f3 f0ba2e13 c70021c9 fec06514     .. ......!...e..
400ae0b0:	4ed030e0 4ec87955 02e84804 aad01396     .0.NUy.N.H......
400ae0c0:	897059fd 60d67696 4d58822a 5cda4c97     .Yp..v.`*.XM.L.\
400ae0d0:	50288934 e8e48818 50f0a1be 2cea6459     4.(P.......PYd.,
400ae0e0:	91d8b9fb 12f27d99 4a10d23f acf8755a     .....}..?..JZu..
400ae0f0:	90e8f204 f8fa3d1b c6c0f9ab e5066c5b     .....=......[l..
400ae100:	0829122b 2b0cf1dd d1b9219d 5f12565d     +.)....+.!..]V._
400ae110:	91493922 2f168fde 4e596228 f11e701f     "9I..../(bYN.p..
400ae120:	c7497181 8f22499f cd398a3b b92c8be0     .qI..I".;.9...,.
400ae130:	8d71a1ec b5324c21 4aa1ba1f 1a0283e3     ..q.!L2....J....
400ae140:	d169c94f e6089740 d2d9d8a8 2a105241     O.i.@.......AR.*
400ae150:	8dd9f9d4 5e168302 50320231 4e189003     .......^1.2P...N
400ae160:	0a3a222f a4209fc4 d1fa4238 842a9e44     /":... .8B..D.*.
400ae170:	c47a51bf d62e6bc5 51f26a02 3c369386     .Qz..k...j.Q..6<
400ae180:	d14281d3 a6406c06 cee291da 3a449347     ..B..l@.....G.D:
400ae190:	926aa1c0 bc4a8988 8f1ac1a4 70507089     ..j...J......pPp
400ae1a0:	1242d1a5 ba56378a 10dae93f cc5c918b     ..B..7V.?.....\.
400ae1b0:	cf92fa0c 70629acb 056b1a0e 3a66728c     ......bp..k..rf:
400ae1c0:	4d533923 c2729d8d ce8b49f4 3076758d     #9SM..r..I...uv0
400ae1d0:	4f2b5124 7878624e 92237a0b 86823d8f     $Q+ONbxx.z#..=..
400ae1e0:	0a0b8105 5e8645d0 905399a7 288c90d0     .....E.^..S....(
400ae1f0:	d2f3b9b5 ca986311 13cbd1b2 049c5792     .....c.......W..
400ae200:	51c3d9ac 06a496d3 c9e401e0 cea86053     ...Q........S`..
400ae210:	51a40a19 3ab28c94 53f42a37 50b67fd5     ...Q...:7*.S...P
400ae220:	122c4187 4eba9596 11644a00 50c476d7     .A,....N.Jd..v.P
400ae230:	529461f0 b8c89c17 8eb00990 ced287d8     .a.R............
400ae240:	0ca02a12 78d43a59 0c48325d 18de835a     .*..Y:.x]2H.Z...
400ae250:	d1904a7d f2e01c5a 4d6061fc dae8825b     }J..Z....a`M[...
400ae260:	4e2879bc c4ec821c 13b09205 f4f6425d     .y(N........]B..
400ae270:	4e48994a 58f89bdd 4bc8c168 8f0469de     J.HN...Xh..K.i..
400ae280:	cb08d267 77069e1e 0df8f259 5d0c97a0     g......wY......]
400ae290:	91110a08 9d147d60 93411242 9f1c6da1     ....`}..B.A..m..
400ae2a0:	048128e9 4d208422 4b51413d 352a7322     .(..". M=AQK"s*5
400ae2b0:	102151ee f72e3f63 cc81724e 99329863     .Q!.c?..Nr..c.2.
400ae2c0:	12597a3f 3c047280 d4c991d2 460a7340     ?zY..r.<....@s.F
400ae2d0:	5191ba56 720e8a81 88e1c059 70127141     V..Q...rY...Aq.p
400ae2e0:	d329ea03 d81c7482 8e59f154 aa20a583     ..)..t..T.Y... .
400ae2f0:	d04211a1 562883c3 13121933 1e328e45     ..B...(V3...E.2.
400ae300:	d5ca31d3 bc384805 92725978 5840ac46     .1...H8.xYr.F.@X
400ae310:	121a7228 08466e07 10ba8261 9c4c9f48     (r...nF.a...H.L.
400ae320:	ce9a8a10 8a529288 94e2a9a0 5a56ae89     ......R.......VZ
400ae330:	d0aac9c3 f25e6209 d2fad27a 9e647a0a     .....b^.z....zd.
400ae340:	d522f23b 9a6a81cb 1462fa45 3a6e66cc     ;."...j.E.b..fn:
400ae350:	d0d32198 2a76aa4c 103b3221 247e704e     .!..L.v*!2;.Np~$
400ae360:	9363420d 528463ce 94ab6229 5a8a744f     .Bc..c.R)b..Ot.Z
400ae370:	141b69da 2e8e8190 94939161 aa98aa90     .i......a.......
400ae380:	84bba1fd 0e9e99d1 4ab3ba4b b4a25712     ........K..J.W..
400ae390:	544bca2c 70a8a713 11e3e9e8 60ae9fd4     ,.KT...p.......`
400ae3a0:	d29bf994 4ab2a414 1064190e 94be79d5     .......J..d..y..
400ae3b0:	51ec2a55 b2c4a116 ccfc4276 46c68e96     U*.Q....vB.....F
400ae3c0:	cf1c5910 06cc8f57 53ac6a2b 38d69018     .Y..W...+j.S...8
400ae3d0:	c6200233 0ad88358 15a02a9f 9ce0a85a     3. .X....*..Z...
400ae3e0:	8e78418d d4eca4da 54784ab4 6cf05fdb     .Ax......JxT._.l
400ae3f0:	55c062b7 fef2935c 8a388266 b0fe545c     .b.U\...f.8.\T..
400ae400:	55309ab8 4302595d 9368aa28 dd0a7c9e     ..0U]Y.C(.h..|..
400ae410:	1198c9c6 470e88df d280d98b 8d18525f     .......G...._R..
400ae420:	95b0e977 df1e90a0 d17901e7 57229821     w.........y.!."W
400ae430:	54990ab0 132678a2 1471225e f7308d63     ...T.x&.^"q.c.0.
400ae440:	93c13a73 0b32aec0 56d159a4 76009881     s:....2..Y.V...v
400ae450:	0a39729a 600683c2 95f98a53 8212b2c2     .r9....`S.......
400ae460:	9691a269 04142f83 53e9b199 f01cb104     i..../.....S....
400ae470:	1769c280 9a222185 9211da44 a02aabc5     ..i..!".D.....*.
400ae480:	96da0257 0e32b406 4f2a1297 8e38be07     W.....2...*O..8.
400ae490:	922a298a 643c8a07 47d232b2 f444a188     .)*...<d.2.G..D.
400ae4a0:	4ba249cb 6c46b849 d7326195 f450aec9     .I.KI.Fl.a2...P.
400ae4b0:	151a79bc 3252b34b 90229978 fa5a80cb     .y..K.R2x."...Z.
400ae4c0:	9252aaa7 c864bc4c d6b2ba27 3c66ad8c     ..R.L.d.'.....f<
400ae4d0:	1652da2b 1870854e d0caea79 be743fce     +.R.N.p.y....?t.
400ae4e0:	4c5afab3 847c494f 4f2311c9 1682a010     ..ZLOI|...#O....
400ae4f0:	96133a70 628ab710 967b5262 5e909491     p:.....bbR{....^
400ae500:	15036285 ec925112 566371c7 0c9eb753     .b...Q...qcVS...
400ae510:	92ab9288 eea69dd3 d703a295 62aa7154     ............Tq.b
400ae520:	8b5bc1ef 7ab6ac95 5713caac 2abc6ed6     ..[....z...W.n.*
400ae530:	142bda6b 44c4b557 d783f230 5eca5e57     k.+.W..D0...W^.^
400ae540:	95541a8a 12d09998 149c31e1 48d2a159     ..T......1..Y..H
400ae550:	ca144a43 78da9159 973c51ee 22e49f9a     CJ..Y..x.Q<...."
400ae560:	0f34716b a8e6455b d35002f7 acee139b     kq4.[E....P.....
400ae570:	1570224d 2af6a69d d2c03297 10fa9bdd     M"p....*.2......
400ae580:	54b04ac7 d102bf5e d5f062db 4b0ab69e     .J.T^....b.....K
400ae590:	14587109 4b106ca0 4e609ac5 7318b8e0     .qX..l.K..`N...s
400ae5a0:	4f80aaf5 031a8861 15d0c29e 5f20ad62     ...Oa.......b. _
400ae5b0:	8ea8d299 1f2aa222 8878f281 9d2eaae3     ....".*...x.....
400ae5c0:	524102f9 6002ae80 596122ed 860abcc1     ..AR...`."aY....
400ae5d0:	97d931c0 e010ad81 19513af8 0212c0c2     .1.......:Q.....
400ae5e0:	9939529a f61ccd43 d74169e9 2022c343     .R9.C....iA.C." 
400ae5f0:	d4598182 4e267d44 d78192b8 38309345     ..Y.D}&N....E.08
400ae600:	0a81a9c6 9a346f06 1719d23d 543e9887     .....o4.=.....>T
400ae610:	1699ea93 46428608 d6f9f286 50485208     ......BF.....RHP
400ae620:	971209ff 4052cf49 4faa1a9c a054780a     ....I.R@...O.xT.
400ae630:	8b7a4252 9c5caeca 981a5251 0e64c68b     RBz...\.QR....d.
400ae640:	172a6a71 e46aba4c d9ca8a96 526eb10c     qj*.L.j.......nR
400ae650:	92ba9aec e678a18d 548ab22b 987ebdce     ......x.+..T..~.
400ae660:	0b9ac25b 6684b5cf d372e169 1e88898f     [......fi.r.....
400ae670:	13aaeaf4 fc92c551 999309c5 e4949191     ....Q...........
400ae680:	90cb12d2 a69a7352 0ecb3aff faa4a793     ....Rs...:......
400ae690:	995b4a7b 08ac8653 d96b599d 3cb08bd4     {J[.S....Yk....<
400ae6a0:	54fb72eb beb49295 156392d9 50beb9d6     .r.T......c....P
400ae6b0:	93d3a2cd aac22f56 d83baa23 becac7d7     ....V/..#.;.....
400ae6c0:	0cfbd242 30ce7fd8 53e3ea8f 30d4a919     B......0...S...0
400ae6d0:	d8d3fab5 22dc7199 d4cc0259 7ee270da     .....q."Y....p.~
400ae6e0:	19ec2174 cae6cb5b d924429f 50f0b99b     t!..[....B$....P
400ae6f0:	19ac52c6 2cf6cddd d97c72e8 68feb65d     .R.....,.r|.]..h
400ae700:	0f981243 0300851e d85019aa ad0ca7de     C.........P.....
400ae710:	d7f83a1b b7129cdf d31842ef 1b18c6e0     .:.......B......
400ae720:	94985a66 e91ac661 d7b0732c a7246ca1     fZ..a...,s...l$.
400ae730:	cb308a52 212861e2 9988b214 2f2c97a3     R.0..a(!......,/
400ae740:	99a0ba5b ea00ccc0 1af8cad1 360c9782     [..............6
400ae750:	09e0e1d9 dc0eb643 9a790aff 8018a0c3     ....C.....y.....
400ae760:	15892323 fc1e6284 19212a98 5622d5c5     ##...b...*!..."V
400ae770:	db913b29 cc28b545 54196261 8430d406     );..E.(.ab.T..0.
400ae780:	59196b33 ee36acc7 1ac97a93 9238cf48     3k.Y..6..z..H.8.
400ae790:	58a9a2d5 1a3ed948 9b09ab28 c842d4c9     ...XH.>.(.....B.
400ae7a0:	1471c2e7 a250ce4a d7f1e207 4e56b0ca     ..q.J.P.......VN
400ae7b0:	9a59fa49 825eb6cb 985a0b3b 7860878c     I.Y...^.;.Z...`x
400ae7c0:	559a1b2d 426c9acd 1882430c bc70c00e     -..U..lB.C....p.
400ae7d0:	97425aae bc74c28e 582262d8 247cc50f     .ZB...t..b"X..|$
400ae7e0:	590a8297 2a86a7d0 ce7a9251 1c8ca2d0     ...Y...*Q.z.....
400ae7f0:	d40ab318 6292df51 9bc2bafc 3e968dd2     ....Q..b.......>
400ae800:	1b1acaa4 2c9ec393 d5d2e339 5ca2b2d3     .......,9......\
400ae810:	8e8b01a5 9aa6c194 16f3132f 62aeb715     ......../......b
400ae820:	1a8b229d aeb4da16 195352ec a4baa797     .".......RS.....
400ae830:	dbfb5b25 b4c2df17 565b6aa9 a0c8a518     %[.......j[V....
400ae840:	d7738a26 3cd0c1d8 16ebab0b 22d8b05a     &.s....<....Z.."
400ae850:	526bb22d dedacb9a 57c3cac6 8ae0b1db     -.kR.......W....
400ae860:	1123eb27 36ea931c 972bf2e8 c4eece1c     '.#....6..+.....
400ae870:	8cfc11ff a6f48cdd 592c233c fcfed69e     ........<#,Y....
400ae880:	173c3a0d 7f02c35f 180c5a81 d1088d60     .:<._....Z..`...
400ae890:	dbdc7334 a70cdae0 10707135 231690a1     4s......5qp....#
400ae8a0:	188b4a85 131eb522 981ac86a 6d20c8e2     .J.."...j..... m
400ae8b0:	9b7f7fa1 a126b8a3 d53874c8 932ec6a3     ......&..t8.....
400ae8c0:	8fca4387 4200e8a6 38cf6af0 c806c995     .C.....B.j.8....
400ae8d0:	9f12911d c40ceb05 ce0d9d99 0a14c6e8     ................
400ae8e0:	87befc0a a41a9819 6c14a6b2 ec22e84d     ...........lM.".
400ae8f0:	66008112 182c8f1f f0cd6601 9e30e541     ...f..,..f..A.0.
400ae900:	d8966dbb 4232c5cf d40221b5 6e3cc0d4     .m....2B.!....<n
400ae910:	c0784b59 3c46c9d1 397bc14c 404aa8da     YKx...F<L.{9..J@
400ae920:	f45ced4b 8a4cb46e 62b8b2d6 6a56e71c     K.\.n.L....b..Vj
400ae930:	8678f5d6 f45cdb90 fdc38984 5266c856     ..x...\.....V.fR
400ae940:	aa9751ca 186ad9df 4596937c 146ce9fd     .Q....j.|..E..l.
400ae950:	f259d2e6 aa78d4ae 35cb32c0 967ed201     ..Y...x..2.5..~.
400ae960:	488f7eb6 fe82c1ce 58d56a66 4286ea5a     .~.H....fj.XZ..B
400ae970:	8aafa926 3a8cee4c 8d678d3f b096eb5f     &...L..:?.g._...
400ae980:	433958c9 089ca83e 67f5f11d 70a2e022     .X9C>......g"..p
400ae990:	21fbe14a 76a8be00 78af0a79 caacd3c1     J..!...vy..x....
400ae9a0:	ed269517 90b889ed f29ea220 a8bcc352     ..&..... ...R...
400ae9b0:	002abef1 4cc2e28c 32d9ed67 30cadde8     ..*....Lg..2...0
400ae9c0:	6e10cb8a 0cd0e6e8 0dab25ee a2d2ceca     ...n.....%......
400ae9d0:	6fa85fd7 eadcd378 773d6c15 cae2d44d     ._.ox....l=wM...
400ae9e0:	04801a8a 08eae4aa cae28ff9 32eeef2f     ............/..2
400ae9f0:	8aaf7043 58f8aada b0c8b28d 7cfee383     Cp.....X.......|
400aea00:	aae00b00 5904a937 ece9c6f9 770ac90e     ....7..Y.......w
400aea10:	4923c696 ff0ce475 3f7d5009 6712da50     ..#Iu....P}?P..g
400aea20:	a70b409b 811ee0f4 885ecc6a dd24d0a5     .@......j.^...$.
400aea30:	4c97c9a8 7b2acdd0 a7ef60e3 b530b69c     ...L..*{.`....0.
400aea40:	c737b386 42ec1a50 91b33232 bf12d2ff     ..7.P..B22......
400aea50:	2a8b76b7 ba324844 0174efcf 45bbb7a2     .v.*DH2...t....E
400aea60:	df509334 9ab03444 15dacf8a d58f1fd7     4.P.D4..........
400aea70:	db7c539e 5d21513f                       .S|.?Q!]

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000054 00000002 00040000 00000000     T...............
  10:	20000d7c 00000022 400a2ca4 000002c0     |.. "....,.@....
  20:	20000da0 00000fda 400a2f64 00000075     ... ....d/.@u...
  30:	20001d7c 000022ca 400a2fdc 0000121a     |.. .".../.@....
  40:	20004048 00000025 400a41f8 0000009c     H@. %....A.@....
	...
  58:	00000104 082a0002 00040000 00000000     ......*.........
  68:	400a4294 000000f5 2000b420 0000001f     .B.@.... .. ....
  78:	400a438c 00000016 20004070 00000122     .C.@....p@. "...
  88:	400a43a4 000000f8 20004194 0000009f     .C.@.....A. ....
  98:	400a449c 0000005a 20004234 00000137     .D.@Z...4B. 7...
  a8:	400a44f8 00000083 2000436c 00000011     .D.@....lC. ....
  b8:	400a457c 000001cf 20004380 00000096     |E.@.....C. ....
  c8:	400a474c 00000017 20004418 00000088     LG.@.....D. ....
  d8:	400a4764 000009f8 200044a0 00000012     dG.@.....D. ....
  e8:	400a515c 000009df 200044b4 00000020     \Q.@.....D.  ...
  f8:	400a5b3c 0000000c 200044d4 00000103     <[.@.....D. ....
 108:	400a5b48 000000f2 200045d8 00000020     H[.@.....E.  ...
 118:	400a5c3c 00000074 200045f8 00000117     <\.@t....E. ....
 128:	400a5cb0 000001b4 20004710 00000c07     .\.@.....G. ....
 138:	400a5e64 00000109 20005318 00000647     d^.@.....S. G...
 148:	400a5f70 00000079 20005960 000003be     p_.@y...`Y. ....
	...
 160:	00000074 16f70002 00040000 00000000     t...............
 170:	400a5fec 00000552 20005d20 00000006     ._.@R... ]. ....
 180:	400a6540 000006d0 20005d28 0000087c     @e.@....(]. |...
 190:	400a6c10 000006bf 200065a4 000001e0     .l.@.....e. ....
 1a0:	400a72d0 0000026d 20006784 00000785     .r.@m....g. ....
 1b0:	400a7540 00000077 20006f0c 00000051     @u.@w....o. Q...
 1c0:	400a75b8 0000008e 20006f60 000023f7     .u.@....`o. .#..
	...
 1d8:	00000104 212f0002 00040000 00000000     ....../!........
 1e8:	20009358 000007cc 2000b440 0000004f     X.. ....@.. O...
 1f8:	400a7648 0000010a 20009b24 000004c0     Hv.@....$.. ....
 208:	400a7754 00000062 20009fe4 00000097     Tw.@b...... ....
 218:	400a77b8 0000035d 2000a07c 00000111     .w.@]...|.. ....
 228:	400a7b18 0000006d 2000a190 00000008     .{.@m...... ....
 238:	400a7b88 0000008c 2000a198 0000001e     .{.@....... ....
 248:	400a7c14 000001ca 2000a1b8 0000031b     .|.@....... ....
 258:	2000b490 000000ad 2000a4d4 0000001a     ... ....... ....
 268:	400a7de0 0000006b 2000a4f0 0000003c     .}.@k...... <...
 278:	400a7e4c 00000002 2000a52c 00000023     L~.@....,.. #...
 288:	400a7e50 000002bf 2000a550 00000301     P~.@....P.. ....
 298:	400a8110 00000012 2000a854 00000219     ...@....T.. ....
 2a8:	400a8124 0000058f 2000aa70 000001f4     $..@....p.. ....
 2b8:	400a86b4 000001ad 2000ac64 00000208     ...@....d.. ....
 2c8:	400a8864 0000004c 2000ae6c 0000022e     d..@L...l.. ....
	...
 2e0:	0000001c 2f000002 00040000 00000000     ......./........
 2f0:	2000b0f4 00000087 00000000 00000000     ... ............
 300:	00000024 32910002 00040000 00000000     $......2........
 310:	2000b17c 00000027 2000b1a4 0000000f     |.. '...... ....
	...
 328:	0000001c 36560002 00040000 00000000     ......V6........
 338:	2000b1f0 00000131 00000000 00000000     ... 1...........
 348:	0000001c 372d0002 00040000 00000000     ......-7........
 358:	2000b324 00000074 00000000 00000000     $.. t...........
 368:	0000001c 38040002 00040000 00000000     .......8........
 378:	2000b398 00000027 00000000 00000000     ... '...........
 388:	0000001c 38d80002 00040000 00000000     .......8........
 398:	20000280 0000000b 00000000 00000000     ... ............
 3a8:	0000001c 39a50002 00040000 00000000     .......9........
 3b8:	200003d0 00000006 00000000 00000000     ... ............
 3c8:	0000001c 3a730002 00040000 00000000     ......s:........
 3d8:	20000300 00000006 00000000 00000000     ... ............
 3e8:	0000001c 3b410002 00040000 00000000     ......A;........
 3f8:	200002c0 00000003 00000000 00000000     ... ............
 408:	0000001c 3c0c0002 00040000 00000000     .......<........
 418:	2000b3c0 00000019 00000000 00000000     ... ............
 428:	0000001c 3cd40002 00040000 00000000     .......<........
 438:	2000b3dc 00000019 00000000 00000000     ... ............
 448:	0000001c 3d9c0002 00040000 00000000     .......=........
 458:	2000b3f8 00000002 00000000 00000000     ... ............
 468:	0000001c 3e640002 00040000 00000000     ......d>........
 478:	2000b1b4 0000001e 00000000 00000000     ... ............
 488:	0000001c 3f3c0002 00040000 00000000     ......<?........
 498:	2000b1d4 0000001c 00000000 00000000     ... ............

Disassembly of section .debug_pubnames:

00000000 <.debug_pubnames>:
       0:	000002ad 00000002 082a0000 006c0000     ..........*...l.
      10:	4c540000 6172545f 6f4c6563 00900067     ..TL_TraceLog...
      20:	41480000 67535f4c 74654765 546c6c41     ..HAL_SgeGetAllT
      30:	736e6172 00687346 000000bd 5f4c4148     ransFsh.....HAL_
      40:	47656753 6c417465 676e456c 656c6449     SgeGetAllEngIdle
      50:	0000e900 5f574600 53676244 41776f68     .....FW_DbgShowA
      60:	10006c6c 48000001 485f4c41 62654477     ll.....HAL_HwDeb
      70:	72546775 00656361 00000138 535f334c     ugTrace.8...L3_S
      80:	664e7465 75437163 6d6f7473 0001df00     etNfcqCustom....
      90:	5f334c00 65534649 43464e74 726f5851     .L3_IFSetNFCQXor
      a0:	0002e500 5f324c00 49746242 62424773     .....L2_BbtIsGBb
      b0:	64614274 636f6c42 0337006b 41480000     tBadBlock.7...HA
      c0:	6f585f4c 664e6572 646f4d63 6e6f4365     L_XoreNfcModeCon
      d0:	00676966 00000363 5f4c4148 58746547     fig.c...HAL_GetX
      e0:	0065726f 00000385 415f334c 636f6c6c     ore.....L3_Alloc
      f0:	6f736552 65637275 0003ae00 5f334c00     Resource.....L3_
     100:	6f6c6c41 726f5863 03d20065 334c0000     AllocXore.....L3
     110:	4e73495f 44646565 726f586f 0003f800     _IsNeedDoXor....
     120:	5f334c00 6c547349 726f5863 67734436     .L3_IsTlcXor6Dsg
     130:	75737349 04c40065 334c0000 6863535f     Issue.....L3_Sch
     140:	53726c43 69427374 04eb0074 324c0000     ClrStsBit.....L2
     150:	7462425f 62507349 6e69426e 676e6964     _BbtIsPbnBinding
     160:	6c626154 616e4565 00656c62 00000520     TableEnable. ...
     170:	525f334c 674d6465 6c655272 65736165     L3_RedMgrRelease
     180:	65646f4e 00054d00 5f334c00 4d646552     Node.M...L3_RedM
     190:	65477267 64655274 72646441 6f4e7942     grGetRedAddrByNo
     1a0:	7f006564 4c000005 65525f33 72674d64     de.....L3_RedMgr
     1b0:	6f6c6c41 65746163 65646f4e 0005ac00     AllocateNode....
     1c0:	5f334c00 4d667542 65527267 7361656c     .L3_BufMgrReleas
     1d0:	646f4e65 05d80065 334c0000 6675425f     eNode.....L3_Buf
     1e0:	4772674d 75427465 42444966 646f4e79     MgrGetBufIDByNod
     1f0:	06070065 334c0000 4d43465f 6c415144     e.....L3_FCMDQAl
     200:	54636f6c 6552706d 746e4571 38007972     locTmpReqEntry.8
     210:	4c000006 75425f33 72674d66 6f6c6c41     ...L3_BufMgrAllo
     220:	65746163 65646f4e 00066500 5f334c00     cateNode.e...L3_
     230:	4d646552 65477267 65724674 746e4365     RedMgrGetFreeCnt
     240:	00069000 5f334c00 4d667542 65477267     .....L3_BufMgrGe
     250:	65724674 746e4365 0006ba00 5f324c00     tFreeCnt.....L2_
     260:	65534553 68637261 636f6c42 07af006b     SESearchBlock...
     270:	334c0000 534d465f 68507465 67615079     ..L3_FMSetPhyPag
     280:	07d60065 334c0000 534d465f 68507465     e.....L3_FMSetPh
     290:	6b6c4279 0007fc00 5f334c00 70554d46     yBlk.....L3_FMUp
     2a0:	73557464 69614672 746e436c 00000000     dtUsrFailCnt....
     2b0:	0004f000 2a000200 cd000008 6c00000e     .......*.......l
     2c0:	4c000000 62425f32 64644174 42746242     ...L2_BbtAddBbtB
     2d0:	6c426461 0097006b 324c0000 4942505f     adBlk.....L2_PBI
     2e0:	65535f54 4c545f74 00be0043 324c0000     T_Set_TLC.....L2
     2f0:	5442565f 7465475f 73796850 6c616369     _VBT_GetPhysical
     300:	636f6c42 6464416b 00f10072 324c0000     BlockAddr.....L2
     310:	5f4d425f 6f6c6c41 65746163 65657246     _BM_AllocateFree
     320:	636f6c42 0121006b 324c0000 4942505f     Block.!...L2_PBI
     330:	65535f54 72455f74 00726f72 0000016f     T_Set_Error.o...
     340:	465f334c 51444d43 49746553 5772746e     L3_FCMDQSetIntrW
     350:	00727470 0000019a 465f334c 51444d43     ptr.....L3_FCMDQ
     360:	49746547 4572746e 45487272 7972746e     GetIntrErrHEntry
     370:	0001ca00 5f334c00 53686353 74537465     .....L3_SchSetSt
     380:	74694273 0001f100 5f334c00 44747352     sBit.....L3_RstD
     390:	78547461 6c727443 19007265 46000002     atTxCtrler.....F
     3a0:	65525f57 74726f70 47534d53 00023e00     W_ReportSMSG.>..
     3b0:	5f334c00 654d564e 646e6148 6555656c     .L3_NVMeHandleUe
     3c0:	73526363 72614d70 0072656b 00000271     ccRspMarker.q...
     3d0:	485f334c 5274736f 52646165 766f6365     L3_HostReadRecov
     3e0:	c4007265 4c000002 4d465f33 43746553     er.....L3_FMSetC
     3f0:	7954646d 6b006570 4c000003 72455f33     mdType.k...L3_Er
     400:	65524872 8e006461 4c000003 62425f32     rHRead.....L2_Bb
     410:	74654774 426e6250 69646e69 6154676e     tGetPbnBindingTa
     420:	00656c62 000003ee 485f334c 5274736f     ble.....L3_HostR
     430:	45646165 7974706d 00041600 5f334c00     eadEmpty.....L3_
     440:	61746144 6f636552 79726576 00053500     DataRecovery.5..
     450:	5f334c00 73494649 79636552 64656c63     .L3_IFIsRecycled
     460:	0006b800 5f334c00 47686353 74537465     .....L3_SchGetSt
     470:	74694273 00070600 5f334c00 55686353     sBit.....L3_SchU
     480:	74616470 73745365 00706d42 0000075d     pdateStsBmp.]...
     490:	5f4c4148 4763664e 68507465 00555079     HAL_NfcGetPhyPU.
     4a0:	00000784 465f334c 51444d43 49746547     ....L3_FCMDQGetI
     4b0:	4572746e 00727470 000007db 465f334c     ntrEptr.....L3_F
     4c0:	51444d43 6f6c6c41 746e4963 72724572     CMDQAllocIntrErr
     4d0:	746e4548 0e007972 4c000008 43465f33     HEntry.....L3_FC
     4e0:	5351444d 6e497465 70457274 3a007274     MDQSetIntrEptr.:
     4f0:	48000008 4e5f4c41 65476366 63664e74     ...HAL_NfcGetNfc
     500:	746e4571 64417972 525f7264 086d0050     qEntryAddr_RP.m.
     510:	41480000 664e5f4c 74654763 48727245     ..HAL_NfcGetErrH
     520:	00646c6f 0000092d 5f524f58 74726150     old.-...XOR_Part
     530:	4f6c6169 61726570 65526574 65736976     ialOperateRevise
     540:	00095c00 4c414800 726f585f 616f4c65     .\...HAL_XoreLoa
     550:	6f745364 6f4d6572 6f436564 6769666e     dStoreModeConfig
     560:	0009c200 4c414800 726f585f 72615065     .....HAL_XorePar
     570:	6c616974 7265704f 00657461 000009ef     tialOperate.....
     580:	5f4c4148 65726f58 58746553 6150726f     HAL_XoreSetXorPa
     590:	69536567 1d00657a 4c00000a 46495f33     geSize.....L3_IF
     5a0:	646e6553 6d726f4e 43466c61 6d00646d     SendNormalFCmd.m
     5b0:	4800000a 525f4c41 61656c65 6f586573     ...HAL_ReleaseXo
     5c0:	c2006572 4c00000a 43465f33 5351444d     re.....L3_FCMDQS
     5d0:	6e497465 70527274 ee007274 4c00000a     etIntrRptr.....L
     5e0:	46495f33 74647055 53716552 75746174     3_IFUpdtReqStatu
     5f0:	0b190073 334c0000 726f585f 6c655265     s.....L3_XoreRel
     600:	65736165 000b3f00 5f334c00 73494649     ease.?...L3_IFIs
     610:	646d4346 696e6946 64656873 000b6b00     FCmdFinished.k..
     620:	5f334c00 444d4346 74654751 72746e49     .L3_FCMDQGetIntr
     630:	72747052 000b9600 5f334c00 444d4346     Rptr.....L3_FCMD
     640:	74655351 72746e49 72747050 000bc200     QSetIntrPptr....
     650:	5f334c00 444d4346 74654751 72746e49     .L3_FCMDQGetIntr
     660:	72747057 000bed00 5f334c00 444d4346     Wptr.....L3_FCMD
     670:	74654751 72746e49 6c727443 72746e45     QGetIntrCtrlEntr
     680:	0c1d0079 334c0000 4d43465f 65475144     y.....L3_FCMDQGe
     690:	746e4974 74705072 0c480072 334c0000     tIntrPptr.H...L3
     6a0:	5346495f 46646e65 00646d43 00000c6f     _IFSendFCmd.o...
     6b0:	465f334c 51444d43 6f6c6c41 746e4963     L3_FCMDQAllocInt
     6c0:	746e4572 9e007972 4c00000c 78455f33     rEntry.....L3_Ex
     6d0:	61484874 696c646e c600676e 4c00000c     tHHandling.....L
     6e0:	72455f33 61484872 696c646e ed00676e     3_ErrHHandling..
     6f0:	4c00000c 46495f33 46706f50 51646d43     ...L3_IFPopFCmdQ
     700:	000d9000 4c414800 616c465f 65476873     .....HAL_FlashGe
     710:	74655274 61507972 61546172 0dc00062     tRetryParaTab...
     720:	41480000 6c465f4c 53687361 65526c65     ..HAL_FlashSelRe
     730:	50797274 00617261 00000ded 5f4c4148     tryPara.....HAL_
     740:	73616c46 74655268 68437972 006b6365     FlashRetryCheck.
     750:	00000e18 5f4c4148 53636544 476d6172     ....HAL_DecSramG
     760:	65447465 73745363 72746e45 0e480079     etDecStsEntry.H.
     770:	41480000 65445f4c 66694663 6972546f     ..HAL_DecFifoTri
     780:	63664e67 000e9b00 53455400 664e5f54     gNfc.....TEST_Nf
     790:	53645263 6e417374 74614464 6b684361     cRdStsAndDataChk
     7a0:	00000000 00041a00 f7000200 38000016     ...............8
     7b0:	6e00000a 48000000 4e5f4c41 65526366     ...n...HAL_NfcRe
     7c0:	6c6e4f64 61655279 00980064 41480000     dOnlyRead.....HA
     7d0:	664e5f4c 61684363 4365676e 65526c6f     L_NfcChangeColRe
     7e0:	c4006461 48000000 4e5f4c41 69536366     ad.....HAL_NfcSi
     7f0:	656c676e 436e6c50 65524c43 43006461     nglePlnCCLRead.C
     800:	48000001 4e5f4c41 6f486366 61507473     ...HAL_NfcHostPa
     810:	65526567 6e006461 48000001 4e5f4c41     geRead.n...HAL_N
     820:	61506366 65526567 95006461 48000001     fcPageRead.....H
     830:	4e5f4c41 69536366 656c676e 526e6c50     AL_NfcSinglePlnR
     840:	00646165 000001c2 5f4c4148 53636544     ead.....HAL_DecS
     850:	476d6172 6c467465 53687361 ef007374     ramGetFlashSts..
     860:	48000001 535f4c41 75427167 45646c69     ...HAL_SgqBuildE
     870:	7972746e 00021900 4c414800 7167535f     ntry.....HAL_Sgq
     880:	75427349 3f007973 48000002 435f4c41     IsBusy.?...HAL_C
     890:	69666e6f 63614367 74536568 73757461     onfigCacheStatus
     8a0:	00026c00 4c414800 6e6f435f 53676966     .l...HAL_ConfigS
     8b0:	00317573 00000292 5f4c4148 666e6f43     su1.....HAL_Conf
     8c0:	73536769 b8003075 48000002 535f4c41     igSsu0.....HAL_S
     8d0:	6f4e7465 6c616d72 53677344 e3007374     etNormalDsgSts..
     8e0:	48000002 4e5f4c41 65476366 616d4474     ...HAL_NfcGetDma
     8f0:	72646441 00030c00 4c414800 7465475f     Addr.....HAL_Get
     900:	6d726f4e 73446c61 64644167 03380072     NormalDsgAddr.8.
     910:	41480000 6f435f4c 6769666e 61726353     ..HAL_ConfigScra
     920:	656c626d 00036300 4c414800 63664e5f     mble.c...HAL_Nfc
     930:	52746547 65526465 6974616c 64416576     GetRedRelativeAd
     940:	95007264 43000003 4d5f4d4f 70436d65     dr.....COM_MemCp
     950:	03b60079 41480000 664e5f4c 74654763     y.....HAL_NfcGet
     960:	41646552 756f7362 4165746c 00726464     RedAbsoulteAddr.
     970:	000003e7 5f4c4148 4763664e 50577465     ....HAL_NfcGetWP
     980:	00040c00 4c414800 63664e5f 45746553     .....HAL_NfcSetE
     990:	6e497272 0434006a 41480000 65475f4c     rrInj.4...HAL_Ge
     9a0:	726f4e74 446c616d 5c006773 48000004     tNormalDsg.\...H
     9b0:	475f4c41 69487465 61506867 6e496567     AL_GetHighPageIn
     9c0:	66786564 456d6f72 61727478 00049000     dexfromExtra....
     9d0:	4c414800 63664e5f 61507349 61507269     .HAL_NfcIsPairPa
     9e0:	63416567 73736563 656c6261 0004c400     geAccessable....
     9f0:	4c414800 7465475f 73616c46 69615068     .HAL_GetFlashPai
     a00:	67615072 70795465 051b0065 41480000     rPageType.....HA
     a10:	664e5f4c 736f4863 67615074 69725765     L_NfcHostPageWri
     a20:	48006574 48000005 4e5f4c41 75466366     te.H...HAL_NfcFu
     a30:	61506c6c 72576567 00657469 00000575     llPageWrite.u...
     a40:	5f4c4148 5363664e 6c676e69 616c5065     HAL_NfcSinglePla
     a50:	7257656e 00657469 000005d2 5f4c4148     neWrite.....HAL_
     a60:	5363664e 75467465 61506c6c 6f526567     NfcSetFullPageRo
     a70:	64644177 06040072 41480000 664e5f4c     wAddr.....HAL_Nf
     a80:	6e795363 73655263 6c467465 00687361     cSyncResetFlash.
     a90:	00000631 5f4c4148 5363664e 65467465     1...HAL_NfcSetFe
     aa0:	72757461 065a0065 41480000 664e5f4c     ature.Z...HAL_Nf
     ab0:	73655263 754c7465 0681006e 41480000     cResetLun.....HA
     ac0:	664e5f4c 6e695363 42656c67 6b636f6c     L_NfcSingleBlock
     ad0:	73617245 06b00065 41480000 664e5f4c     Erase.....HAL_Nf
     ae0:	656c4363 4e497261 73745354 0006da00     cClearINTSts....
     af0:	4c414800 63664e5f 65736552 646d4374     .HAL_NfcResetCmd
     b00:	00657551 00000704 5f4c4148 4763664e     Que.....HAL_NfcG
     b10:	72457465 646f4372 07aa0065 41480000     etErrCode.....HA
     b20:	664e5f4c 74654763 73616c46 776f5268     L_NfcGetFlashRow
     b30:	72646441 0007d800 4c414800 63664e5f     Addr.....HAL_Nfc
     b40:	676e6953 6c50656c 6165526e 73745364     SinglePlnReadSts
     b50:	00080700 4c414800 63664e5f 74696157     .....HAL_NfcWait
     b60:	74617453 31007375 48000008 4e5f4c41     Status.1...HAL_N
     b70:	75466366 6c426c6c 456b636f 65736172     fcFullBlockErase
     b80:	00085e00 53455400 664e5f54 61655263     .^...TEST_NfcRea
     b90:	6c6c4164 00088700 53455400 664e5f54     dAll.....TEST_Nf
     ba0:	69725763 6c416574 08b1006c 45540000     cWriteAll.....TE
     bb0:	4e5f5453 72456366 41657361 00006c6c     ST_NfcEraseAll..
     bc0:	4f000000 02000006 00212f00 000dd100     ...O...../!.....
     bd0:	0000cb00 53455400 664e5f54 65684363     .....TEST_NfcChe
     be0:	694c6b63 6c417473 44636f6c 006d6172     ckListAllocDram.
     bf0:	000000fc 54534554 63664e5f 74746150     ....TEST_NfcPatt
     c00:	73745351 74696e49 00012800 53455400     QStsInit.(...TES
     c10:	664e5f54 73614263 68536369 64657261     T_NfcBasicShared
     c20:	4d6d654d 83007061 54000001 5f545345     MemMap.....TEST_
     c30:	4563664e 61507478 75527474 01ad006e     NfcExtPattRun...
     c40:	45540000 4e5f5453 61426366 50636973     ..TEST_NfcBasicP
     c50:	52747461 6e496e75 de007469 55000001     attRunInit.....U
     c60:	664e5f54 69614d63 0201006e 41480000     T_NfcMain.....HA
     c70:	6c465f4c 49687361 6e45746e 00797274     L_FlashIntEntry.
     c80:	0000022a 5f4c4148 41544153 45746e49     *...HAL_SATAIntE
     c90:	7972746e 00025200 4c414800 54354c5f     ntry.R...HAL_L5T
     ca0:	72656d69 45746e49 7972746e 00027d00     imerIntEntry.}..
     cb0:	4c414800 54344c5f 72656d69 45746e49     .HAL_L4TimerIntE
     cc0:	7972746e 0002a800 4c414800 7373415f     ntry.....HAL_Ass
     cd0:	49747265 cd004950 46000002 68435f57     ertIPI.....FW_Ch
     ce0:	66744e6b 67734d6e 0002f200 4c414800     kNtfnMsg.....HAL
     cf0:	6d43485f 6d695464 6e497265 72726574     _HCmdTimerInterr
     d00:	45747075 7972746e 00032500 4c414800     uptEntry.%...HAL
     d10:	6573555f 63784572 746e4570 4e007972     _UserExcpEntry.N
     d20:	48000003 465f4c41 6873616c 72746552     ...HAL_FlashRetr
     d30:	65725079 646e6f43 6e6f7469 00037f00     yPreConditon....
     d40:	4c414800 616c465f 61426873 53636973     .HAL_FlashBasicS
     d50:	52646e65 79727465 43657250 69646e6f     endRetryPreCondi
     d60:	006e6f74 000003b9 5f4c4148 73616c46     ton.....HAL_Flas
     d70:	74655268 65537972 6150646e 006d6172     hRetrySendParam.
     d80:	000003e9 5f4c4148 73616c46 74655268     ....HAL_FlashRet
     d90:	6e457972 00041100 4c414800 616c465f     ryEn.....HAL_Fla
     da0:	61426873 53636973 52646e65 79727465     shBasicSendRetry
     db0:	006c6156 00000443 5f4c4148 73616c46     Val.C...HAL_Flas
     dc0:	74655268 65547972 6e696d72 00657461     hRetryTerminate.
     dd0:	00000473 5f4c4148 73616c46 73614268     s...HAL_FlashBas
     de0:	65536369 6552646e 54797274 696d7265     icSendRetryTermi
     df0:	6574616e 0004ab00 4c414800 63664e5f     nate.....HAL_Nfc
     e00:	54646d43 67676972 d5007265 48000004     CmdTrigger.....H
     e10:	4e5f4c41 65476366 63725074 61745371     AL_NfcGetPrcqSta
     e20:	77447472 00050200 4c414800 63664e5f     rtDw.....HAL_Nfc
     e30:	4e746547 45716366 7972746e 72646441     GetNfcqEntryAddr
     e40:	00053200 4c414800 63664e5f 754c7349     .2...HAL_NfcIsLu
     e50:	6363416e 61737365 00656c62 00000561     nAccessable.a...
     e60:	5f4c4148 73616c46 73614268 65526369     HAL_FlashBasicRe
     e70:	00746573 0000058c 5f4c4148 53746547     set.....HAL_GetS
     e80:	79536275 6d657473 614d4543 05ba0070     ubSystemCEMap...
     e90:	41480000 664e5f4c 63725063 62615471     ..HAL_NfcPrcqTab
     ea0:	6e49656c e6007469 48000005 445f4c41     leInit.....HAL_D
     eb0:	69466365 65526f66 00746573 0000060d     ecFifoReset.....
     ec0:	5f4c4148 4963664e 7265746e 65636166     HAL_NfcInterface
     ed0:	74696e49 69736142 063f0063 41480000     InitBasic.?...HA
     ee0:	664e5f4c 74655363 49757353 66744f6e     L_NfcSetSsuInOtf
     ef0:	73614262 066e0065 41480000 664e5f4c     bBase.n...HAL_Nf
     f00:	74655363 49646552 6172446e 7361426d     cSetRedInDramBas
     f10:	07df0065 324c0000 6168535f 4d646572     e.....L2_SharedM
     f20:	614d6d65 08060070 314c0000 6168535f     emMap.....L1_Sha
     f30:	4d646572 614d6d65 082d0070 4f430000     redMemMap.-...CO
     f40:	654d5f4d 6464416d 67615072 756f4265     M_MemAddrPageBou
     f50:	7261646e 696c4179 60006e67 4c000008     ndaryAlign.`...L
     f60:	72455f33 6c414872 44636f6c 006d6172     3_ErrHAllocDram.
     f70:	00000888 5f4d4f43 496d654d 6142636e     ....COM_MemIncBa
     f80:	64416573 b1007264 43000008 4d5f4d4f     seAddr.....COM_M
     f90:	64416d65 36317264 6c415744 006e6769     emAddr16DWAlign.
     fa0:	000008dc 465f324c 52646d43 74537165     ....L2_FCmdReqSt
     fb0:	696e4973 09040074 334c0000 7272455f     sInit.....L3_Err
     fc0:	69754248 7242646c 754c6874 70614d6e     HBuildBrthLunMap
     fd0:	00093100 5f334c00 464e4649 53524943     .1...L3_IFNFCIRS
     fe0:	74696e49 00095800 5f334c00 444d4346     Init.X...L3_FCMD
     ff0:	746e4951 696e4972 09a20074 4f430000     QIntrInit.....CO
    1000:	654d5f4d 72655a6d 09c4006f 41480000     M_MemZero.....HA
    1010:	68435f4c 4d6e6961 746e6961 496e6961     L_ChainMaintainI
    1020:	0074696e 000009f1 5f4c4148 49656753     nit.....HAL_SgeI
    1030:	4374696e 6e696168 00746e43 00000a1d     nitChainCnt.....
    1040:	5f4c4148 49717744 0074696e 00000a41     HAL_DwqInit.A...
    1050:	5f4c4148 49717244 0074696e 00000a64     HAL_DrqInit.d...
    1060:	5f4c4148 49677348 0074696e 00000a87     HAL_HsgInit.....
    1070:	5f4c4148 6d726f4e 73446c61 696e4967     HAL_NormalDsgIni
    1080:	0ab00074 42440000 65475f47 00686374     t.....DBG_Getch.
    1090:	00000ad0 5f4c4148 706d6554 74617265     ....HAL_Temperat
    10a0:	53657275 6f736e65 6e495f72 02007469     ureSensor_Init..
    10b0:	4800000b 485f4c41 62654477 6e496775     ...HAL_HwDebugIn
    10c0:	29007469 4800000b 535f4c41 696e4945     it.)...HAL_SEIni
    10d0:	0b4b0074 41480000 4d445f4c 6e494541     t.K...HAL_DMAEIn
    10e0:	6e007469 4800000b 495f4c41 4774696e     it.n...HAL_InitG
    10f0:	61626f6c 4e55506c 99006d75 4800000b     lobalPUNum.....H
    1100:	4c5f4c41 53637064 74696e49 000bbd00     AL_LdpcSInit....
    1110:	4c414800 70644c5f 776f4463 616f6c6e     .HAL_LdpcDownloa
    1120:	614d4864 00786974 00000bec 5f4c4148     dHMatix.....HAL_
    1130:	73616c46 696e4968 0c120074 334c0000     FlashInit.....L3
    1140:	7361545f 696e496b 0c350074 324c0000     _TaskInit.5...L2
    1150:	6165535f 45686372 6e69676e 49575365     _SearchEngineSWI
    1160:	0074696e 00000c62 495f5746 4d74696e     nit.b...FW_InitM
    1170:	84004453 4600000c 6e495f57 4d537469     SD.....FW_InitSM
    1180:	a7004753 4800000c 415f4c41 49494348     SG.....HAL_AHCII
    1190:	0074696e 00000cca 5f4c4148 6d6d6f43     nit.....HAL_Comm
    11a0:	74696e49 000cee00 73694400 6e6f436b     Init.....DiskCon
    11b0:	5f676966 6f437349 7453646c 00747261     fig_IsColdStart.
    11c0:	00000d1b 5f676264 6e697270 3f006674     ....dbg_printf.?
    11d0:	4400000d 436b7369 69666e6f 6e495f67     ...DiskConfig_In
    11e0:	66007469 5400000d 5f545345 4d63664e     it.f...TEST_NfcM
    11f0:	4d325543 006e6961 00000d8f 6d6d6f43     CU2Main.....Comm
    1200:	45746553 746e6576 000db200 69616d00     SetEvent.....mai
    1210:	0000006e 00170000 00020000 00002f00     n............/..
    1220:	00000391 00000335 646e6172 00000000     ....5...rand....
    1230:	00004100 91000200 c5000032 51000003     .A......2......Q
    1240:	5f000003 6e656572 74705f74 036a0072     ..._reent_ptr.j.
    1250:	695f0000 5f74696e 6e656572 039d0074     .._init_reent...
    1260:	695f0000 5f74696e 6e656572 73625f74     .._init_reent_bs
    1270:	00000073 00000000                                s.....

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	00000826 00000002 01040000 495c3a44     &...........D:\I
      10:	44335f4d 434c545f 7269665c 7261776d     M_3D_TLC\firmwar
      20:	6c615c65 69726f67 5c6d6874 4c5c334c     e\algorithm\L3\L
      30:	63535f33 75646568 632e656c 5c3a4400     3_Schedule.c.D:\
      40:	335f4d49 4c545f44 69665c43 61776d72     IM_3D_TLC\firmwa
      50:	78006572 63782d74 6f662063 31312072     re.xt-xcc for 11
      60:	312e302e 00010020 00000000 01060102     .0.1 ...........
      70:	545f4c54 65636172 00676f4c 03010101     TL_TraceLog.....
      80:	02000192 0d7c0091 0d7e2000 01002000     ......|.. ~.. ..
      90:	02aa0103 5f4c4148 47656753 6c417465     ....HAL_SgeGetAl
      a0:	6172546c 7346736e 01010068 00019203     lTransFsh.......
      b0:	80009102 8e20000d 0020000d 99010301     ...... ... .....
      c0:	4c414802 6567535f 41746547 6e456c6c     .HAL_SgeGetAllEn
      d0:	6c644967 01010065 00019203 90009102     gIdle...........
      e0:	9e20000d 0020000d 84010201 5f574601     .. ... ......FW_
      f0:	53676244 41776f68 01006c6c 92040101     DbgShowAll......
     100:	0200c001 2ca42891 2f64400a 0140400a     .....(.,.@d/.@@.
     110:	48d20104 485f4c41 62654477 72546775     ...HAL_HwDebugTr
     120:	00656361 03010101 02200192 0da01091     ace....... .....
     130:	0ffe2000 01202000 4cd70104 65535f33     . ...  ....L3_Se
     140:	63664e74 73754371 006d6f74 03010101     tNfcqCustom.....
     150:	02100192 10000091 114c2000 01102000     ......... L.. ..
     160:	04bd0105 495f334c 74655346 5143464e     ....L3_IFSetNFCQ
     170:	41776f52 00726464 92040101 0300f001     RowAddr.........
     180:	4c00c091 6e200011 70200015 83010501     ...L.. n.. p....
     190:	5f334c04 73494649 62616e45 7353656c     .L3_IFIsEnableSs
     1a0:	01003175 01920301 00910200 20001570     u1..........p.. 
     1b0:	2000158e 01050100 334c046d 4946495f     ... ....m.L3_IFI
     1c0:	616e4573 53656c62 00307573 92030101     sEnableSsu0.....
     1d0:	91020001 00159000 0015ae20 03010020     ........ ... ...
     1e0:	4c013801 46495f33 4e746553 58514346     .8.L3_IFSetNFCQX
     1f0:	0100726f 01920301 00910210 200015b0     or............. 
     200:	20001610 01050110 334c043d 5346495f     ... ....=.L3_IFS
     210:	464e7465 61445143 78546174 00726566     etNFCQDataTxfer.
     220:	92030101 91021001 00161004 00176f20     ............ o..
     230:	05011020 4c03dd01 46495f33 4e746553      ......L3_IFSetN
     240:	53514346 616d7263 00656c62 92030101     FCQScrmable.....
     250:	91022001 00177004 0019ec20 05012020     . ...p.. ...  ..
     260:	4c052301 46495f33 4e746553 54514346     .#.L3_IFSetNFCQT
     270:	65636172 03010100 02000192 19ec0091     race............
     280:	1a252000 01002000 028e0105 5f4c4148     . %.. ......HAL_
     290:	45414d44 56746553 65756c61 4c6e654c     DMAESetValueLenL
     2a0:	74696d69 03010100 02200192 1a280091     imit...... ...(.
     2b0:	1d442000 01202000 011b0106 425f324c     . D..  .....L2_B
     2c0:	65477462 62424774 64614274 426b6c42     btGetGBbtBadBlkB
     2d0:	01007469 00019203 44009102 7a20001d     it.........D.. z
     2e0:	0020001d 05010201 5f324c03 49746242     .. ......L2_BbtI
     2f0:	62424773 64614274 636f6c42 0101006b     sGBbtBadBlock...
     300:	01920301 00910210 400a2f64 400a2fd9     ........d/.@./.@
     310:	01070110 5f334c3d 4d726f58 6e497061     ....=L3_XorMapIn
     320:	74726573 92030100 91020001 001d7c00     sert.........|..
     330:	001da320 08010020 4148fc01 6f585f4c      ... .....HAL_Xo
     340:	664e6572 646f4d63 6e6f4365 00676966     reNfcModeConfig.
     350:	92030101 91020001 001da400 001e1b20     ............ ...
     360:	08010020 41489301 65475f4c 726f5874      .....HAL_GetXor
     370:	01010065 00019203 1c009102 0020001e     e............. .
     380:	0020001f bc010401 415f334c 636f6c6c     .. .....L3_Alloc
     390:	6f736552 65637275 01010100 e0019204     Resource........
     3a0:	28910200 20001f00 20002cc0 01040160     ...(... .,. `...
     3b0:	5f334c99 6f6c6c41 726f5863 01010065     .L3_AllocXore...
     3c0:	01920301 10910220 20002cc0 20002dd7     .... ....,. .-. 
     3d0:	01040120 5f334c63 654e7349 6f446465      ...cL3_IsNeedDo
     3e0:	00726f58 03010101 02000192 2dd80091     Xor............-
     3f0:	2dff2000 01002000 4c8a0104 73495f33     . .-. .....L3_Is
     400:	58636c54 4436726f 73496773 00657573     TlcXor6DsgIssue.
     410:	03010101 02100192 2e000091 2e472000     ............. G.
     420:	01102000 06410105 495f334c 64705546     . ....A.L3_IFUpd
     430:	746e4974 72744372 0101006c 00019203     tIntrCtrl.......
     440:	48009102 c220002e 0020002e da010501     ...H.. ... .....
     450:	5f334c05 6f434649 6769666e 5143464e     .L3_IFConfigNFCQ
     460:	03010100 02200192 2ec40491 31232000     ...... ...... #1
     470:	01202000 03770105 495f334c 61644146     .  ...w.L3_IFAda
     480:	43467470 0100646d 01920301 0c910220     ptFCmd...... ...
     490:	20003124 200033bd 01050120 334c0207     $1. .3.  .....L3
     4a0:	4146495f 636f6c6c 6f736552 65637275     _IFAllocResource
     4b0:	03010100 02100192 33c00491 34df2000     ...........3. .4
     4c0:	01102000 01170103 535f334c 6c436863     . ......L3_SchCl
     4d0:	73745372 00746942 92030101 91020001     rStsBit.........
     4e0:	0034e000 00350620 03010020 4c0d5301     ..4. .5. ....S.L
     4f0:	62425f32 50734974 69426e62 6e69646e     2_BbtIsPbnBindin
     500:	62615467 6e45656c 656c6261 03010100     gTableEnable....
     510:	02000192 35080091 35152000 01002000     .......5. .5. ..
     520:	01130102 525f334c 674d6465 6c655272     ....L3_RedMgrRel
     530:	65736165 65646f4e 01010100 10019203     easeNode........
     540:	18009102 80200035 10200036 26010201     ....5. .6. ....&
     550:	5f334c01 4d646552 65477267 64655274     .L3_RedMgrGetRed
     560:	72646441 6f4e7942 01006564 92030101     AddrByNode......
     570:	91020001 00368000 00369420 04010020     ......6. .6. ...
     580:	334cfe01 6465525f 4172674d 636f6c6c     ..L3_RedMgrAlloc
     590:	4e657461 0065646f 03010101 02100192     ateNode.........
     5a0:	36940091 37972000 01102000 4cb10104     ...6. .7. .....L
     5b0:	75425f33 72674d66 656c6552 4e657361     3_BufMgrReleaseN
     5c0:	0065646f 03010101 02100192 37980091     ode............7
     5d0:	39002000 01102000 4cc40104 75425f33     . .9. .....L3_Bu
     5e0:	72674d66 42746547 44496675 6f4e7942     fMgrGetBufIDByNo
     5f0:	01006564 92030101 91020001 00390000     de............9.
     600:	00391c20 02010020 4c028701 43465f33      .9. ......L3_FC
     610:	4151444d 636f6c6c 52706d54 6e457165     MDQAllocTmpReqEn
     620:	00797274 03010101 02100192 391c0091     try............9
     630:	39612000 01102000 4c9c0104 75425f33     . a9. .....L3_Bu
     640:	72674d66 6f6c6c41 65746163 65646f4e     fMgrAllocateNode
     650:	01010100 10019203 64009102 63200039     ...........d9. c
     660:	1020003a 39010301 5f334c01 4d646552     :. ....9.L3_RedM
     670:	65477267 65724674 746e4365 03010100     grGetFreeCnt....
     680:	02000192 3a640091 3a6f2000 01002000     ......d:. o:. ..
     690:	4cd90108 75425f33 72674d66 46746547     ...L3_BufMgrGetF
     6a0:	43656572 0100746e 01920301 00910200     reeCnt..........
     6b0:	20003a70 20003a7b 01020100 324c0107     p:. {:. ......L2
     6c0:	5345535f 63726165 6f6c4268 01006b63     _SESearchBlock..
     6d0:	92030101 91022001 003a7c00 00404620     ..... ...|:. F@.
     6e0:	05012020 4c018801 78455f33 72574874       .....L3_ExtHWr
     6f0:	4c657469 50747361 00656761 92040101     iteLastPage.....
     700:	0200c001 2fdc3491 31b6400a 0140400a     .....4./.@.1.@@.
     710:	4cae0109 78455f33 6f434874 61447970     ...L3_ExtHCopyDa
     720:	01006174 01920401 910200e0 0a31b83c     ta..........<.1.
     730:	0a367740 05016040 4c029901 78455f33     @w6.@`.....L3_Ex
     740:	72504874 47525063 04010100 01800192     tHPrcPRG........
     750:	00f49103 400a3678 400a3c4d 01050180     ....x6.@M<.@....
     760:	334c01f6 7478455f 63725048 43434555     ..L3_ExtHPrcUECC
     770:	04010100 01800192 00f49103 400a3c50     ............P<.@
     780:	400a4177 01050180 334c0355 7478455f     wA.@....U.L3_Ext
     790:	63725048 46727245 00646d43 92030101     HPrcErrFCmd.....
     7a0:	91021001 0a417800 0a41f640 03011040     .....xA.@.A.@...
     7b0:	4c011801 4d465f33 50746553 61507968     ...L3_FMSetPhyPa
     7c0:	01006567 01920301 00910200 20004048     ge..........H@. 
     7d0:	20004059 01030100 334c0108 534d465f     Y@. ......L3_FMS
     7e0:	68507465 6b6c4279 03010100 02000192     etPhyBlk........
     7f0:	405c0091 406d2000 01002000 01e00102     ..\@. m@. ......
     800:	465f334c 6470554d 72735574 6c696146     L3_FMUpdtUsrFail
     810:	00746e43 03010101 02100192 41f80091     Cnt............A
     820:	4294400a 0110400a 0ec90000 00020000     .@.B.@..........
     830:	000000fe 3a440104 5f4d495c 545f4433     ......D:\IM_3D_T
     840:	665c434c 776d7269 5c657261 6f676c61     LC\firmware\algo
     850:	68746972 334c5c6d 5f334c5c 65686353     rithm\L3\L3_Sche
     860:	656c7564 4400632e 4d495c3a 5f44335f     dule.c.D:\IM_3D_
     870:	5c434c54 6d726966 65726177 2d747800     TLC\firmware.xt-
     880:	20636378 20726f66 302e3131 0020312e     xcc for 11.0.1 .
     890:	4e860001 01020000 324c02bf 7462425f     ...N......L2_Bbt
     8a0:	42646441 61427462 6b6c4264 01010100     AddBbtBadBlk....
     8b0:	30019203 94009102 89400a42 30400a43     ...0....B.@.C.@0
     8c0:	7e010301 5f324c01 54494250 7465535f     ...~.L2_PBIT_Set
     8d0:	434c545f 03010100 02000192 b4200091     _TLC.......... .
     8e0:	b43f2000 01002000 01a10103 565f324c     . ?.. ......L2_V
     8f0:	475f5442 68507465 63697379 6c426c61     BT_GetPhysicalBl
     900:	416b636f 00726464 92030101 91020001     ockAddr.........
     910:	0a438c00 0a43a240 02010040 4c036101     ..C.@.C.@....a.L
     920:	4d425f32 6c6c415f 7461636f 65724665     2_BM_AllocateFre
     930:	6f6c4265 01006b63 92030101 91023001     eBlock.......0..
     940:	00407018 00419220 03013020 4c014801     .p@. .A. 0...H.L
     950:	42505f32 535f5449 455f7465 726f7272     2_PBIT_Set_Error
     960:	03010100 02000192 43a40091 43c5400a     ...........C.@.C
     970:	0100400a 02760104 455f334c 52487272     .@....v.L3_ErrHR
     980:	754c7473 0101006e 20019203 c8089102     stLun...... ....
     990:	9c400a43 20400a44 51010301 5f334c01     C.@.D.@ ...Q.L3_
     9a0:	444d4346 74655351 72746e49 72747057     FCMDQSetIntrWptr
     9b0:	03010100 02000192 41940091 41a82000     ...........A. .A
     9c0:	01002000 02550103 465f334c 51444d43     . ....U.L3_FCMDQ
     9d0:	49746547 4572746e 45487272 7972746e     GetIntrErrHEntry
     9e0:	03010100 02000192 41a80091 41b82000     ...........A. .A
     9f0:	01002000 01020103 535f334c 65536863     . ......L3_SchSe
     a00:	73745374 00746942 92030101 91020001     tStsBit.........
     a10:	0041b800 0041d920 05010020 334cf501     ..A. .A. .....L3
     a20:	7473525f 54746144 72744378 0072656c     _RstDatTxCtrler.
     a30:	92030101 91020001 0041dc00 00423320     ..........A. 3B.
     a40:	06010020 57469a01 7065525f 5374726f      .....FW_ReportS
     a50:	0047534d 03010101 02000192 449c0091     MSG............D
     a60:	44f6400a 0100400a 011a0102 4e5f334c     .@.D.@......L3_N
     a70:	48654d56 6c646e61 63655565 70735263     VMeHandleUeccRsp
     a80:	6b72614d 01007265 92030101 91021001     Marker..........
     a90:	00423400 0042d820 02011020 4c016701     .4B. .B. ....g.L
     aa0:	6f485f33 65527473 65526461 65766f63     3_HostReadRecove
     ab0:	01010072 01920301 14910220 200042d8     r....... ....B. 
     ac0:	2000436b 01070120 334c0222 7272455f     kC.  ...".L3_Err
     ad0:	4e734948 45646565 00487478 01920301     HIsNeedExtH.....
     ae0:	00910210 400a44f8 400a457b 01030110     .....D.@{E.@....
     af0:	334c0128 534d465f 6d437465 70795464     (.L3_FMSetCmdTyp
     b00:	01010065 00019203 6c009102 7d200043     e..........lC. }
     b10:	00200043 cf010401 5f334c02 48727245     C. ......L3_ErrH
     b20:	50746553 6d617261 72657465 03010100     SetParameter....
     b30:	02200192 457c0c91 468d400a 0120400a     .. ...|E.@.F.@ .
     b40:	03200104 455f334c 47487272 74567465     .. .L3_ErrHGetVt
     b50:	6c615668 01006575 01920301 00910200     hValue..........
     b60:	400a4690 400a46ba 01040100 334c02ac     .F.@.F.@......L3
     b70:	7272455f 65725048 646e6f43 6f697469     _ErrHPreConditio
     b80:	0101006e 10019203 bc009102 f5400a46     n...........F.@.
     b90:	10400a46 87010301 5f334c03 48727245     F.@......L3_ErrH
     ba0:	64616552 03010100 02100192 46f80091     Read...........F
     bb0:	474b400a 0110400a 096a0102 425f324c     .@KG.@....j.L2_B
     bc0:	65477462 6e625074 646e6942 54676e69     btGetPbnBindingT
     bd0:	656c6261 01010100 10019203 80049102     able............
     be0:	16200043 10200044 a8010701 5f334c03     C. .D. ......L3_
     bf0:	48727245 65446552 74636574 74706d45     ErrHReDetectEmpt
     c00:	67615079 03010065 02100192 474c0091     yPage.........LG
     c10:	4763400a 0110400a 014e0103 485f334c     .@cG.@....N.L3_H
     c20:	5274736f 45646165 7974706d 03010100     ostReadEmpty....
     c30:	02100192 44180491 447f2000 01102000     .......D. .D. ..
     c40:	01520103 445f334c 52617461 766f6365     ..R.L3_DataRecov
     c50:	00797265 92030101 91021001 00448004     ery...........D.
     c60:	0044a020 04011020 4c040401 72455f33      .D. ......L3_Er
     c70:	65524872 65526461 00797274 92040101     rHReadRetry.....
     c80:	0300e001 6400d091 1c400a47 60400a4b     .......dG.@.K.@`
     c90:	b7010401 5f334c03 48727245 74706d45     .....L3_ErrHEmpt
     ca0:	67615079 01010065 f0019204 dc910300     yPage...........
     cb0:	0a4b1c00 0a4cd040 04017040 4c04aa01     ..K.@.L.@p.....L
     cc0:	72455f33 72504872 63655563 69614663     3_ErrHPrcUeccFai
     cd0:	0101006c 90019204 e8910301 0a4cd000     l.............L.
     ce0:	0a4f5e40 08019040 334ccf01 7272455f     @^O.@.....L3_Err
     cf0:	69614648 676f4c6c 03010100 02100192     HFailLog........
     d00:	4f600091 4ff4400a 0110400a 033f0104     ..`O.@.O.@....?.
     d10:	455f334c 55487272 56746470 65526874     L3_ErrHUpdtVthRe
     d20:	00797274 92030101 91020001 0a4ff400     try...........O.
     d30:	0a503d40 04010040 4c030001 72455f33     @=P.@......L3_Er
     d40:	65544872 6e696d72 00657461 92030101     rHTerminate.....
     d50:	91022001 0a504008 0a515c40 02012040     . ...@P.@\Q.@ ..
     d60:	4c062b01 46495f33 65527349 6c637963     .+.L3_IFIsRecycl
     d70:	01006465 92030101 91020001 0044a000     ed............D.
     d80:	0044b220 04010020 4c01ea01 72455f33      .D. ......L3_Er
     d90:	73414872 74726573 00646d43 92030101     rHAssertCmd.....
     da0:	91021001 0a515c00 0a51e340 04011040     .....\Q.@.Q.@...
     db0:	4c06ac01 72455f33 6f4e4872 00766544     ...L3_ErrHNoDev.
     dc0:	92030101 91021001 0a51e400 0a51ff40     ..........Q.@.Q.
     dd0:	04011040 4c062b01 72455f33 72454872     @....+.L3_ErrHEr
     de0:	00657361 92040101 0300f001 0000d091     ase.............
     df0:	be400a52 70400a55 f2010401 5f334c05     R.@.U.@p.....L3_
     e00:	48727245 676f7250 006d6172 92040101     ErrHProgram.....
     e10:	03018001 c000d891 ff400a55 80400a57     ........U.@.W.@.
     e20:	e0010701 5f334c05 48727245 64616552     .....L3_ErrHRead
     e30:	0041424c 01920301 04910210 400a5800     LBA..........X.@
     e40:	400a581c 01070110 334c05ce 7272455f     .X.@......L3_Err
     e50:	61655248 52434464 03010043 02100192     HReadDCRC.......
     e60:	581c0491 5838400a 0110400a 054d0104     ...X.@8X.@....M.
     e70:	455f334c 52487272 55646165 00434345     L3_ErrHReadUECC.
     e80:	92030101 91021001 0a583808 0a59ad40     .........8X.@.Y.
     e90:	04011040 4c050301 72455f33 65524872     @......L3_ErrHRe
     ea0:	45526461 01004343 01920401 910300e0     adRECC..........
     eb0:	59b000cc 5ad4400a 0160400a 025f0104     ...Y.@.Z.@`..._.
     ec0:	455f334c 52487272 6d437473 01005164     L3_ErrHRstCmdQ..
     ed0:	01920301 00910210 400a5ad4 400a5b3b     .........Z.@;[.@
     ee0:	01050110 5f334cef 47686353 74537465     .....L3_SchGetSt
     ef0:	74694273 03010100 02000192 44b40091     sBit...........D
     f00:	44d42000 01002000 4c860109 72455f33     . .D. .....L3_Er
     f10:	65474872 72425474 754c6874 0301006e     rHGetTBrthLun...
     f20:	02000192 5b3c0091 5b48400a 0100400a     ......<[.@H[.@..
     f30:	4cbc0106 63535f33 64705568 53657461     ...L3_SchUpdateS
     f40:	6d427374 01010070 01920301 00910210     tsBmp...........
     f50:	200044d4 200045d7 01070110 334c010a     .D. .E. ......L3
     f60:	7272455f 74654448 45746365 7974706d     _ErrHDetectEmpty
     f70:	65676150 92030100 91021001 0a5b4800     Page.........H[.
     f80:	0a5c3a40 03011040 4801e801 4e5f4c41     @:\.@......HAL_N
     f90:	65476366 79685074 01005550 01920301     fcGetPhyPU......
     fa0:	00910200 200045d8 200045e2 01030100     .....E. .E. ....
     fb0:	334c01d5 4d43465f 65475144 746e4974     ..L3_FCMDQGetInt
     fc0:	74704572 01010072 00019203 e4009102     rEptr...........
     fd0:	f8200045 00200045 64010401 5f334c01     E. .E. ....d.L3_
     fe0:	48727245 65746544 72457463 646f4372     ErrHDetectErrCod
     ff0:	01010065 10019203 3c049102 b0400a5c     e..........<\.@.
    1000:	10400a5c 3e010201 5f334c02 444d4346     \.@....>.L3_FCMD
    1010:	6c6c4151 6e49636f 72457274 6e454872     QAllocIntrErrHEn
    1020:	00797274 03010101 02100192 45f80091     try............E
    1030:	46392000 01102000 01e90102 465f334c     . 9F. ......L3_F
    1040:	51444d43 49746553 4572746e 00727470     CMDQSetIntrEptr.
    1050:	03010101 02000192 463c0091 46c12000     ..........<F. .F
    1060:	01002000 02fd0102 5f4c4148 4763664e     . ......HAL_NfcG
    1070:	664e7465 6e457163 41797274 5f726464     etNfcqEntryAddr_
    1080:	01005052 92030101 91020001 0046c400     RP............F.
    1090:	0046ed20 02010020 48027701 4e5f4c41      .F. ....w.HAL_N
    10a0:	65476366 72724574 646c6f48 01010100     fcGetErrHold....
    10b0:	00019203 f0009102 0f200046 00200047     ........F. .G. .
    10c0:	bf010401 5f334c06 48727245 636f7250     .....L3_ErrHProc
    10d0:	00737365 92030101 91021001 0a5cb004     ess...........\.
    10e0:	0a5d6c40 07011040 4c01c501 72455f33     @l].@......L3_Er
    10f0:	73494872 44657250 00656e6f 01920301     rHIsPreDone.....
    1100:	00910210 400a5d6c 400a5d8f 01070110     ....l].@.].@....
    1110:	334c0184 7272455f 65725048 61657274     ..L3_ErrHPretrea
    1120:	03010074 02200192 5d900891 5e64400a     t..... ....].@d^
    1130:	0120400a 4c450109 6f585f33 70614d72     .@ ...EL3_XorMap
    1140:	646e6946 92030100 91020001 00471000     Find..........G.
    1150:	00474a20 05010020 4f582601 61505f52      JG. ....&XOR_Pa
    1160:	61697472 65704f6c 65746172 69766552     rtialOperateRevi
    1170:	01006573 01920301 00910200 2000474c     se..........LG. 
    1180:	200047c3 01030100 41480153 6f585f4c     .G. ....S.HAL_Xo
    1190:	6f4c6572 74536461 4d65726f 4365646f     reLoadStoreModeC
    11a0:	69666e6f 01010067 00019203 c4009102     onfig...........
    11b0:	5a200047 00200048 ce010901 475f334c     G. ZH. .....L3_G
    11c0:	6c547465 726f5863 79706f43 6b636142     etTlcXorCopyBack
    11d0:	75646552 6464416e 03010072 02000192     RedunAddr.......
    11e0:	485c0091 48972000 01002000 48e90105     ..\H. .H. .....H
    11f0:	585f4c41 5065726f 69747261 704f6c61     AL_XorePartialOp
    1200:	74617265 01010065 10019203 98089102     erate...........
    1210:	0f200048 10200049 9f010301 4c414801     H. .I. ......HAL
    1220:	726f585f 74655365 50726f58 53656761     _XoreSetXorPageS
    1230:	00657a69 92030101 91020001 00491000     ize...........I.
    1240:	00493920 02010020 4c067201 46495f33      9I. ....r.L3_IF
    1250:	646e6553 6d726f4e 43466c61 0100646d     SendNormalFCmd..
    1260:	92030101 91023001 00493c24 004aef20     .....0..$<I. .J.
    1270:	09013020 334c5701 726f585f 4570614d      0...WL3_XorMapE
    1280:	65736172 92030100 91021001 004af008     rase..........J.
    1290:	004b2f20 05011020 4148dd01 65525f4c      /K. .....HAL_Re
    12a0:	7361656c 726f5865 01010065 00019203     leaseXore.......
    12b0:	30009102 6b20004b 0020004b d8010801     ...0K. kK. .....
    12c0:	545f334c 6f58636c 706f4372 63614279     L3_TlcXorCopyBac
    12d0:	446f546b 006d6172 92040101 0200c001     kToDram.........
    12e0:	4b6c2491 4cbb2000 01402000 01790102     .$lK. .L. @...y.
    12f0:	465f334c 51444d43 49746553 5272746e     L3_FCMDQSetIntrR
    1300:	00727470 03010101 02000192 4cbc0091     ptr............L
    1310:	4d352000 01002000 06f20102 495f334c     . 5M. ......L3_I
    1320:	64705546 71655274 74617453 01007375     FUpdtReqStatus..
    1330:	92030101 91020001 004d3800 004dac20     .........8M. .M.
    1340:	03010020 4c010501 6f585f33 65526572      ......L3_XoreRe
    1350:	7361656c 01010065 10019203 ac009102     lease...........
    1360:	5720004d 1020004e b8010201 5f334c06     M. WN. ......L3_
    1370:	73494649 646d4346 696e6946 64656873     IFIsFCmdFinished
    1380:	01010100 10019203 58009102 ff20004e     ...........XN. .
    1390:	1020004e 65010301 5f334c01 444d4346     N. ....e.L3_FCMD
    13a0:	74654751 72746e49 72747052 03010100     QGetIntrRptr....
    13b0:	02000192 4f000091 4f0e2000 01002000     .......O. .O. ..
    13c0:	01b10102 465f334c 51444d43 49746553     ....L3_FCMDQSetI
    13d0:	5072746e 00727470 03010101 02000192     ntrPptr.........
    13e0:	4f100091 4f852000 01002000 013d0103     ...O. .O. ....=.
    13f0:	465f334c 51444d43 49746547 5772746e     L3_FCMDQGetIntrW
    1400:	00727470 92030101 91020001 004f8800     ptr...........O.
    1410:	004f9c20 03010020 4c022801 43465f33      .O. ....(.L3_FC
    1420:	4751444d 6e497465 74437274 6e456c72     MDQGetIntrCtrlEn
    1430:	00797274 92030101 91020001 004f9c00     try...........O.
    1440:	004fc020 03010020 4c019d01 43465f33      .O. ......L3_FC
    1450:	4751444d 6e497465 70507274 01007274     MDQGetIntrPptr..
    1460:	01920301 00910200 20004fc0 20004fd4     .........O. .O. 
    1470:	01020100 334c0698 5346495f 46646e65     ......L3_IFSendF
    1480:	00646d43 04010101 00c00192 d4249102     Cmd...........$.
    1490:	ad20004f 40200052 0c010201 5f334c02     O. .R. @.....L3_
    14a0:	444d4346 6c6c4151 6e49636f 6e457274     FCMDQAllocIntrEn
    14b0:	00797274 03010101 02100192 52b00091     try............R
    14c0:	53172000 01102000 04230102 455f334c     . .S. ....#.L3_E
    14d0:	48487478 6c646e61 00676e69 03010101     xtHHandling.....
    14e0:	02200192 5e641891 5f3b400a 0120400a     .. ...d^.@;_.@ .
    14f0:	07480103 455f334c 48487272 6c646e61     ..H.L3_ErrHHandl
    1500:	00676e69 92030101 91021001 0a5f3c04     ing..........<_.
    1510:	0a5f6d40 02011040 4c075b01 46495f33     @m_.@....[.L3_IF
    1520:	46706f50 51646d43 01010100 10019203     PopFCmdQ........
    1530:	18009102 eb200053 10200053 de010401     ....S. .S. .....
    1540:	5f334c01 53686353 4c546c65 01006e75     .L3_SchSelTLun..
    1550:	01920301 04910220 200053ec 20005680     .... ....S. .V. 
    1560:	01040120 334c01fe 6863535f 6e657645      .....L3_SchEven
    1570:	6e614874 72656c64 03010100 02100192     tHandler........
    1580:	56800091 57ec2000 01102000 03980104     ...V. .W. ......
    1590:	54534554 63664e5f 63656843 6c50316b     TEST_NfcCheck1Pl
    15a0:	7461446e 01010061 c0019204 04910200     nData...........
    15b0:	200057ec 2000595f 01030140 4148018d     .W. _Y. @.....HA
    15c0:	6c465f4c 47687361 65527465 50797274     L_FlashGetRetryP
    15d0:	54617261 01006261 01920301 04910210     araTab..........
    15e0:	400a5f70 400a5f81 01030110 41480177     p_.@._.@....w.HA
    15f0:	6c465f4c 53687361 65526c65 50797274     L_FlashSelRetryP
    1600:	00617261 92030101 91020001 0a5f8400     ara..........._.
    1610:	0a5f8840 03010040 48015c01 465f4c41     @._.@....\.HAL_F
    1620:	6873616c 72746552 65684379 01006b63     lashRetryCheck..
    1630:	01920301 00910200 400a5f88 400a5f94     ........._.@._.@
    1640:	01050100 4c414891 6365445f 6d617253     .....HAL_DecSram
    1650:	44746547 74536365 746e4573 01007972     GetDecStsEntry..
    1660:	01920301 0c910220 400a5f94 400a5fe9     .... ...._.@._.@
    1670:	01030120 41480130 65445f4c 66694663      ...0.HAL_DecFif
    1680:	6972546f 63664e67 03010100 02000192     oTrigNfc........
    1690:	59600091 597a2000 01002000 06e10104     ..`Y. zY. ......
    16a0:	54534554 63664e5f 65676150 72746552     TEST_NfcPageRetr
    16b0:	01010079 30019203 7c0c9102 07200059     y......0...|Y. .
    16c0:	3020005c af010201 53455405 664e5f54     \. 0.....TEST_Nf
    16d0:	53645263 6e417374 74614464 6b684361     cRdStsAndDataChk
    16e0:	01010100 20019203 08149102 1e20005c     ....... ....\. .
    16f0:	2020005d 34000001 0200000a 0001fc00     ].  ...4........
    1700:	44010400 4d495c3a 5f44335f 5c434c54     ...D:\IM_3D_TLC\
    1710:	6d726966 65726177 4c41485c 43464e5c     firmware\HAL\NFC
    1720:	4c41485c 616c465f 72446873 72657669     \HAL_FlashDriver
    1730:	2e747845 3a440063 5f4d495c 545f4433     Ext.c.D:\IM_3D_T
    1740:	665c434c 776d7269 00657261 782d7478     LC\firmware.xt-x
    1750:	66206363 3120726f 2e302e31 01002031     cc for 11.0.1 ..
    1760:	008e7f00 eb010200 4c414805 63664e5f     .........HAL_Nfc
    1770:	4f646552 52796c6e 00646165 92030101     RedOnlyRead.....
    1780:	91023001 0a5fec0c 0a615340 02013040     .0...._.@Sa.@0..
    1790:	48064c01 4e5f4c41 68436366 65676e61     .L.HAL_NfcChange
    17a0:	526c6f43 00646165 92030101 91023001     ColRead......0..
    17b0:	0a615414 0a634b40 02013040 48082e01     .Ta.@Kc.@0.....H
    17c0:	4e5f4c41 69536366 656c676e 436e6c50     AL_NfcSinglePlnC
    17d0:	65524c43 01006461 01920301 14910230     CLRead......0...
    17e0:	400a634c 400a653e 01030130 455403f3     Lc.@>e.@0.....TE
    17f0:	4e5f5453 68436366 446b6365 00617461     ST_NfcCheckData.
    1800:	01920301 00910200 20005d20 20005d22     ........ ]. "]. 
    1810:	01040100 455404a4 4e5f5453 68436366     ......TEST_NfcCh
    1820:	526b6365 01006465 01920301 00910200     eckRed..........
    1830:	20005d24 20005d26 01020100 41480894     $]. &]. ......HA
    1840:	664e5f4c 736f4863 67615074 61655265     L_NfcHostPageRea
    1850:	01010064 30019203 40109102 53400a65     d......0...@e.@S
    1860:	30400a67 52010201 4c414805 63664e5f     g.@0...R.HAL_Nfc
    1870:	65676150 64616552 03010100 02300192     PageRead......0.
    1880:	67541891 699b400a 0130400a 06c40102     ..Tg.@.i.@0.....
    1890:	5f4c4148 5363664e 6c676e69 6e6c5065     HAL_NfcSinglePln
    18a0:	64616552 04010100 00c00192 9c209102     Read.......... .
    18b0:	c7400a69 40400a6b de010501 5f4c4148     i.@.k.@@....HAL_
    18c0:	53636544 476d6172 6c467465 53687361     DecSramGetFlashS
    18d0:	01007374 01920301 0c910210 400a6bc8     ts...........k.@
    18e0:	400a6c10 01060110 414801e3 67535f4c     .l.@......HAL_Sg
    18f0:	69754271 6e45646c 00797274 03010101     qBuildEntry.....
    1900:	02100192 5d280091 5da62000 01102000     ......(]. .]. ..
    1910:	019b0106 5f4c4148 49716753 73754273     ....HAL_SgqIsBus
    1920:	01010079 01920301 04910210 20005da8     y............]. 
    1930:	20005e56 01020110 414803f2 6f435f4c     V^. ......HAL_Co
    1940:	6769666e 68636143 61745365 00737574     nfigCacheStatus.
    1950:	92030101 91020001 005e5800 005e7b20     .........X^. {^.
    1960:	02010020 4803dd01 435f4c41 69666e6f      ......HAL_Confi
    1970:	75735367 01010031 00019203 7c009102     gSsu1..........|
    1980:	9720005e 0020005e c8010201 4c414803     ^. .^. ......HAL
    1990:	6e6f435f 53676966 00307573 92030101     _ConfigSsu0.....
    19a0:	91020001 005e9800 005eb320 02010020     ......^. .^. ...
    19b0:	48014f01 535f4c41 6f4e7465 6c616d72     .O.HAL_SetNormal
    19c0:	53677344 01007374 01920301 00910200     DsgSts..........
    19d0:	20005eb4 20005ef3 01020100 414802d9     .^. .^. ......HA
    19e0:	664e5f4c 74654763 41616d44 00726464     L_NfcGetDmaAddr.
    19f0:	92030101 91020001 005ef400 005f0420     ..........^. ._.
    1a00:	02010020 48013101 475f4c41 6f4e7465      ....1.HAL_GetNo
    1a10:	6c616d72 41677344 00726464 92030101     rmalDsgAddr.....
    1a20:	91021001 005f0400 005f2f20 06011020     ......_. /_. ...
    1a30:	4805f801 435f4c41 69666e6f 72635367     ...HAL_ConfigScr
    1a40:	6c626d61 01010065 01920301 00910220     amble....... ...
    1a50:	20005f30 20006172 01060120 4148042c     0_. ra.  ...,.HA
    1a60:	664e5f4c 74654763 52646552 74616c65     L_NfcGetRedRelat
    1a70:	41657669 00726464 03010101 02000192     iveAddr.........
    1a80:	61740091 61a92000 01002000 43500105     ..ta. .a. ....PC
    1a90:	4d5f4d4f 70436d65 01010079 10019203     OM_MemCpy.......
    1aa0:	ac009102 f9200061 10200061 08010201     ....a. .a. .....
    1ab0:	4c414804 63664e5f 52746547 62416465     .HAL_NfcGetRedAb
    1ac0:	6c756f73 64416574 01007264 01920301     soulteAddr......
    1ad0:	00910200 200061fc 2000621e 01060100     .....a. .b. ....
    1ae0:	414801fe 664e5f4c 74654763 01005057     ..HAL_NfcGetWP..
    1af0:	92030101 91020001 00622000 00623f20     ......... b. ?b.
    1b00:	02010020 48065901 4e5f4c41 65536366      ....Y.HAL_NfcSe
    1b10:	72724574 006a6e49 92030101 91020001     tErrInj.........
    1b20:	00624000 00626b20 07010020 4148a001     .@b. kb. .....HA
    1b30:	65475f4c 726f4e74 446c616d 01006773     L_GetNormalDsg..
    1b40:	92030101 91022001 00626c04 00635a20     ..... ...lb. Zc.
    1b50:	05012020 4148df01 65475f4c 67694874       ....HAL_GetHig
    1b60:	67615068 646e4965 72667865 78456d6f     hPageIndexfromEx
    1b70:	00617274 92030101 91021001 00635c00     tra..........\c.
    1b80:	0063f920 06011020 48048601 4e5f4c41      .c. ......HAL_N
    1b90:	73496366 72696150 65676150 65636341     fcIsPairPageAcce
    1ba0:	62617373 0100656c 92030101 91020001     ssable..........
    1bb0:	0063fc00 00640020 05010020 4148ac01     ..c. .d. .....HA
    1bc0:	65475f4c 616c4674 61506873 61507269     L_GetFlashPairPa
    1bd0:	79546567 01006570 01920301 00910200     geType..........
    1be0:	20006400 2000645c 01040100 45540542     .d. \d. ....B.TE
    1bf0:	4e5f5453 74576366 43737453 01006b68     ST_NfcWtStsChk..
    1c00:	01920301 10910220 2000645c 200065a4     .... ...\d. .e. 
    1c10:	01020120 4148080c 664e5f4c 736f4863      .....HAL_NfcHos
    1c20:	67615074 69725765 01006574 01920401     tPageWrite......
    1c30:	910200c0 0a6c101c 0a6deb40 02014040     ......l.@.m.@@..
    1c40:	48049e01 4e5f4c41 75466366 61506c6c     ...HAL_NfcFullPa
    1c50:	72576567 00657469 92040101 0200c001     geWrite.........
    1c60:	6dec2891 7052400a 0140400a 07630102     .(.m.@Rp.@@...c.
    1c70:	5f4c4148 5363664e 6c676e69 616c5065     HAL_NfcSinglePla
    1c80:	7257656e 00657469 92040101 0200d001     neWrite.........
    1c90:	70542c91 72cf400a 0150400a 04e90104     .,Tp.@.r.@P.....
    1ca0:	54534554 63664e5f 65477457 67615074     TEST_NfcWtGetPag
    1cb0:	64644165 01010072 00019203 a4009102     eAddr...........
    1cc0:	14200065 00200066 11010601 4c414804     e. .f. ......HAL
    1cd0:	63664e5f 46746553 506c6c75 52656761     _NfcSetFullPageR
    1ce0:	6441776f 01007264 92030101 91022001     owAddr....... ..
    1cf0:	00661410 00678420 02012020 48052201     ..f. .g.  ...".H
    1d00:	4e5f4c41 79536366 6552636e 46746573     AL_NfcSyncResetF
    1d10:	6873616c 03010100 02200192 72d00c91     lash...... ....r
    1d20:	7335400a 0120400a 05c30102 5f4c4148     .@5s.@ .....HAL_
    1d30:	5363664e 65467465 72757461 01010065     NfcSetFeature...
    1d40:	20019203 38149102 bb400a73 20400a73     ... ...8s.@.s.@ 
    1d50:	f9010201 4c414804 63664e5f 65736552     .....HAL_NfcRese
    1d60:	6e754c74 03010100 02200192 73bc0c91     tLun...... ....s
    1d70:	7433400a 0120400a 067d0102 5f4c4148     .@3t.@ ...}.HAL_
    1d80:	5363664e 6c676e69 6f6c4265 72456b63     NfcSingleBlockEr
    1d90:	00657361 92030101 91022001 0a74341c     ase...... ...4t.
    1da0:	0a74c740 02012040 48038301 4e5f4c41     @.t.@ .....HAL_N
    1db0:	6c436366 49726165 7453544e 01010073     fcClearINTSts...
    1dc0:	10019203 c8049102 01400a74 10400a75     ........t.@.u.@.
    1dd0:	5f010201 4c414803 63664e5f 65736552     ..._.HAL_NfcRese
    1de0:	646d4374 00657551 92030101 91021001     tCmdQue.........
    1df0:	0a750404 0a753d40 06011040 48028f01     ..u.@=u.@......H
    1e00:	4e5f4c41 65476366 72724574 65646f43     AL_NfcGetErrCode
    1e10:	01010100 00019203 84009102 a3200067     ............g. .
    1e20:	00200067 ba010401 5345540b 664e5f54     g. ......TEST_Nf
    1e30:	72724563 49746942 01006a6e 01920301     cErrBitInj......
    1e40:	04910220 200067a4 20006954 01040120      ....g. Ti.  ...
    1e50:	45540b9d 4e5f5453 72456366 73745372     ..TEST_NfcErrSts
    1e60:	006a6e49 92040101 0200e001 69543491     Inj..........4Ti
    1e70:	6e2f2000 01602000 0b670103 54534554     . /n. `...g.TEST
    1e80:	63664e5f 54727245 49657079 01006a6e     _NfcErrTypeInj..
    1e90:	20019203 30009102 f020006e 2020006e     ... ...0n. .n.  
    1ea0:	37010201 4c414803 63664e5f 46746547     ...7.HAL_NfcGetF
    1eb0:	6873616c 41776f52 00726464 92030101     lashRowAddr.....
    1ec0:	91020001 006ef000 006f0920 02010020     ......n. .o. ...
    1ed0:	480a9701 4e5f4c41 69536366 656c676e     ...HAL_NfcSingle
    1ee0:	526e6c50 53646165 01007374 01920301     PlnReadSts......
    1ef0:	0c910220 400a7540 400a75b7 01060120      ...@u.@.u.@ ...
    1f00:	4148044c 664e5f4c 69615763 61745374     L.HAL_NfcWaitSta
    1f10:	00737574 03010101 02100192 6f0c0091     tus............o
    1f20:	6f5d2000 01102000 045d0102 5f4c4148     . ]o. ....].HAL_
    1f30:	4663664e 426c6c75 6b636f6c 73617245     NfcFullBlockEras
    1f40:	01010065 20019203 b81c9102 46400a75     e...... ....u.@F
    1f50:	20400a76 06010601 53455408 664e5f54     v.@ .....TEST_Nf
    1f60:	61655263 6c6c4164 01010100 c0019204     cReadAll........
    1f70:	24910200 20006f60 200073a3 01060140     ...$`o. .s. @...
    1f80:	4554078e 4e5f5453 72576366 41657469     ..TEST_NfcWriteA
    1f90:	01006c6c 92040101 0200c001 73a42491     ll...........$.s
    1fa0:	76482000 01402000 074b0106 54534554     . Hv. @...K.TEST
    1fb0:	63664e5f 73617245 6c6c4165 01010100     _NfcEraseAll....
    1fc0:	30019203 48109102 6f200076 30200078     ...0...Hv. ox. 0
    1fd0:	29010301 5345540c 664e5f54 72724563     ...).TEST_NfcErr
    1fe0:	446a6e49 65526365 03010070 02100192     InjDecRep.......
    1ff0:	78700091 78862000 01102000 0af50104     ..px. .x. ......
    2000:	54534554 63664e5f 426e754c 614d7469     TEST_NfcLunBitMa
    2010:	01010070 30019203 880c9102 1b200078     p......0....x. .
    2020:	3020007c 7a010401 5345540a 664e5f54     |. 0...z.TEST_Nf
    2030:	42755063 614d7469 01010070 20019203     cPuBitMap...... 
    2040:	1c0c9102 7f20007c 2020007e e1010401     ....|. .~.  ....
    2050:	53455409 664e5f54 64655263 616e7944     .TEST_NfcRedDyna
    2060:	6470556d 00657461 92030101 91022001     mUpdate...... ..
    2070:	007e8000 007fb020 04012020 54097a01     ..~. ...  ...z.T
    2080:	5f545345 5363664e 6e615553 00534364     EST_NfcSSUandCS.
    2090:	92040101 0200e001 7fb03491 84c72000     .........4... ..
    20a0:	01602000 09640104 54534554 63664e5f     . `...d.TEST_Nfc
    20b0:	4f646552 52796c6e 00646165 92040101     RedOnlyRead.....
    20c0:	0200e001 84c83491 89932000 01602000     .....4... ... `.
    20d0:	09160104 54534554 63664e5f 6e616843     ....TEST_NfcChan
    20e0:	6f436567 6e6d756c 64616552 04010100     geColumnRead....
    20f0:	00e00192 94349102 76200089 6020008e     ......4... v.. `
    2100:	3e010401 53455409 664e5f54 72615063     ...>.TEST_NfcPar
    2110:	6c616974 64616552 04010100 00e00192     tialRead........
    2120:	78349102 5720008e 60200093 cd000001     ..4x.. W.. `....
    2130:	0200000d 0002c100 44010400 4d495c3a     ...........D:\IM
    2140:	5f44335f 5c434c54 6d726966 65726177     _3D_TLC\firmware
    2150:	4c41485c 746e495c 75727265 485c7470     \HAL\Interrupt\H
    2160:	495f4c41 7265746e 74707572 4400632e     AL_Interrupt.c.D
    2170:	4d495c3a 5f44335f 5c434c54 6d726966     :\IM_3D_TLC\firm
    2180:	65726177 2d747800 20636378 20726f66     ware.xt-xcc for 
    2190:	302e3131 0020312e dd9d0001 01020000     11.0.1 .........
    21a0:	455408bf 4e5f5453 754d6366 5069746c     ..TEST_NfcMultiP
    21b0:	57456e6c 01010052 e0019204 34910200     lnEWR..........4
    21c0:	20009358 20009827 01020160 45540e4a     X.. '.. `...J.TE
    21d0:	4e5f5453 61426366 54636973 50747365     ST_NfcBasicTestP
    21e0:	65747461 01006e72 01920301 18910220     attern...... ...
    21f0:	20009828 20009b24 01030120 53455438     (.. $..  ...8TES
    2200:	664e5f54 65684363 694c6b63 6c417473     T_NfcCheckListAl
    2210:	44636f6c 006d6172 92030101 91021001     locDram.........
    2220:	00b44004 00b48f20 04011020 45542b01     .@.. ... ....+TE
    2230:	4e5f5453 61506366 53517474 6e497374     ST_NfcPattQStsIn
    2240:	01007469 92030101 91020001 0a764800     it...........Hv.
    2250:	0a767340 04010040 45548301 4e5f5453     @sv.@.....TEST_N
    2260:	61426366 53636973 65726168 6d654d64     fcBasicSharedMem
    2270:	0070614d 03010101 02100192 76740491     Map...........tv
    2280:	7724400a 0110400a 01800105 54534554     .@$w.@......TEST
    2290:	63664e5f 53746553 42307573 00657361     _NfcSetSsu0Base.
    22a0:	01920301 00910200 400a7724 400a7752     ........$w.@Rw.@
    22b0:	01040100 53455432 664e5f54 74784563     ....2TEST_NfcExt
    22c0:	74746150 006e7552 03010101 02200192     PattRun....... .
    22d0:	9b241891 9dfa2000 01202000 02730106     ..$.. ...  ...s.
    22e0:	54534554 63664e5f 69736142 74615063     TEST_NfcBasicPat
    22f0:	6e755274 74696e49 01010100 10019203     tRunInit........
    2300:	fc009102 2f20009d 1020009f 0a010601     ...... /.. .....
    2310:	5f545503 4d63664e 006e6961 03010101     .UT_NfcMain.....
    2320:	02100192 9f300091 9f9f2000 01102000     ......0.. ... ..
    2330:	011c0107 5f4c4148 73616c46 746e4968     ....HAL_FlashInt
    2340:	72746e45 01010079 00019203 a0009102     Entry...........
    2350:	a220009f 0020009f 0a010701 4c414801     .. ... ......HAL
    2360:	5441535f 746e4941 72746e45 01010079     _SATAIntEntry...
    2370:	00019203 a4009102 a620009f 0020009f     .......... ... .
    2380:	fa010401 5f4c4148 6954354c 4972656d     ....HAL_L5TimerI
    2390:	6e45746e 00797274 03010101 02000192     ntEntry.........
    23a0:	9fa80091 9fbb2000 01002000 48ea0104     ..... ... .....H
    23b0:	4c5f4c41 6d695434 6e497265 746e4574     AL_L4TimerIntEnt
    23c0:	01007972 92030101 91020001 009fbc00     ry..............
    23d0:	009fcf20 07010020 48019101 415f4c41      ... ......HAL_A
    23e0:	72657373 49504974 03010100 02000192     ssertIPI........
    23f0:	9fd00091 9fe42000 01002000 46b70104     ..... ... .....F
    2400:	68435f57 66744e6b 67734d6e 01010100     W_ChkNtfnMsg....
    2410:	10019203 54009102 b6400a77 10400a77     .......Tw.@.w.@.
    2420:	65010401 5f4c4148 646d4348 656d6954     ...eHAL_HCmdTime
    2430:	746e4972 75727265 6e457470 00797274     rInterruptEntry.
    2440:	03010101 02100192 9fe40091 9ff72000     ............. ..
    2450:	01102000 486b0104 555f4c41 45726573     . ....kHAL_UserE
    2460:	45706378 7972746e 01010100 10019203     xcpEntry........
    2470:	f8049102 7b20009f 102000a0 a4010701     ...... {.. .....
    2480:	4c414801 616c465f 65526873 50797274     .HAL_FlashRetryP
    2490:	6f436572 7469646e 01006e6f 01920301     reConditon......
    24a0:	00910200 400a77b8 400a77bc 01040100     .....w.@.w.@....
    24b0:	4c414866 616c465f 61426873 53636973     fHAL_FlashBasicS
    24c0:	52646e65 79727465 43657250 69646e6f     endRetryPreCondi
    24d0:	006e6f74 03010101 02000192 77bc0091     ton............w
    24e0:	77c0400a 0100400a 01bd0106 5f4c4148     .@.w.@......HAL_
    24f0:	73616c46 74655268 65537972 6150646e     FlashRetrySendPa
    2500:	006d6172 03010101 02200192 77c01891     ram....... ....w
    2510:	786b400a 0120400a 01db0107 5f4c4148     .@kx.@ .....HAL_
    2520:	73616c46 74655268 6e457972 03010100     FlashRetryEn....
    2530:	02000192 786c0091 7870400a 0100400a     ......lx.@px.@..
    2540:	48580104 465f4c41 6873616c 69736142     ..XHAL_FlashBasi
    2550:	6e655363 74655264 61567972 0101006c     cSendRetryVal...
    2560:	01920301 1c910220 400a7870 400a7917     .... ...px.@.y.@
    2570:	01060120 414801f0 6c465f4c 52687361      .....HAL_FlashR
    2580:	79727465 6d726554 74616e69 01010065     etryTerminate...
    2590:	01920301 0c910220 400a7918 400a7a15     .... ....y.@.z.@
    25a0:	01040120 4c414853 616c465f 61426873      ...SHAL_FlashBa
    25b0:	53636973 52646e65 79727465 6d726554     sicSendRetryTerm
    25c0:	74616e69 01010065 01920301 0c910220     inate....... ...
    25d0:	400a7a18 400a7b15 01060120 414803e8     .z.@.{.@ .....HA
    25e0:	664e5f4c 646d4363 67697254 00726567     L_NfcCmdTrigger.
    25f0:	03010101 02100192 a07c0491 a1112000     ..........|.. ..
    2600:	01102000 033d0107 5f4c4148 4763664e     . ....=.HAL_NfcG
    2610:	72507465 74537163 44747261 01010077     etPrcqStartDw...
    2620:	00019203 14009102 212000a1 002000a1     .......... !.. .
    2630:	f5010601 4c414802 63664e5f 4e746547     .....HAL_NfcGetN
    2640:	45716366 7972746e 72646441 01010100     fcqEntryAddr....
    2650:	00019203 24009102 502000a1 002000a1     .......$.. P.. .
    2660:	6e010601 4c414804 63664e5f 754c7349     ...n.HAL_NfcIsLu
    2670:	6363416e 61737365 00656c62 03010101     nAccessable.....
    2680:	02100192 a1500091 a18d2000 01102000     ......P.. ... ..
    2690:	484c0104 465f4c41 6873616c 69736142     ..LHAL_FlashBasi
    26a0:	73655263 01007465 92030101 91022001     cReset....... ..
    26b0:	0a7b180c 0a7b8540 06012040 4801ea01     ..{.@.{.@ .....H
    26c0:	475f4c41 75537465 73795362 436d6574     AL_GetSubSystemC
    26d0:	70614d45 01010100 00019203 90009102     EMap............
    26e0:	982000a1 002000a1 fa010701 4c414802     .. ... ......HAL
    26f0:	63664e5f 71637250 6c626154 696e4965     _NfcPrcqTableIni
    2700:	01010074 10019203 88009102 14400a7b     t...........{.@.
    2710:	10400a7c 41010301 5f4c4148 46636544     |.@....AHAL_DecF
    2720:	526f6669 74657365 03010100 02000192     ifoReset........
    2730:	a1980091 a1b62000 01002000 012d0106     ..... ... ....-.
    2740:	5f4c4148 4963664e 7265746e 65636166     HAL_NfcInterface
    2750:	74696e49 69736142 01010063 01920301     InitBasic.......
    2760:	00910210 400a7c14 400a7d77 01070110     .....|.@w}.@....
    2770:	414808f9 664e5f4c 74655363 49757353     ..HAL_NfcSetSsuI
    2780:	66744f6e 73614262 01010065 00019203     nOtfbBase.......
    2790:	78009102 92400a7d 00400a7d ca010701     ...x}.@.}.@.....
    27a0:	4c414808 63664e5f 52746553 6e496465     .HAL_NfcSetRedIn
    27b0:	6d617244 65736142 03010100 02000192     DramBase........
    27c0:	7d940091 7daf400a 0100400a 4c650108     ...}.@.}.@....eL
    27d0:	43465f33 6e49646d 72457274 6e494872     3_FCmdIntrErrHIn
    27e0:	01007469 10019203 b0009102 de400a7d     it..........}.@.
    27f0:	10400a7d d4010901 535f324c 65726168     }.@.....L2_Share
    2800:	66754264 696c4166 72446e67 654d6d61     dBuffAlignDramMe
    2810:	70614d6d 03010100 02100192 a1b80091     mMap............
    2820:	a2542000 01102000 4ca60109 68535f32     . T.. .....L2_Sh
    2830:	64657261 57443631 67696c41 6172446e     ared16DWAlignDra
    2840:	6d654d6d 0070614d 92030101 91021001     mMemMap.........
    2850:	00a25400 00a31f20 09011020 324c9601     .T.. ... .....L2
    2860:	6168535f 44646572 524d4152 654d6465     _SharedDRAMRedMe
    2870:	70614d6d 03010100 02100192 a3200091     mMap.......... .
    2880:	a3932000 01102000 4c870109 68535f32     . ... .....L2_Sh
    2890:	64657261 4246544f 4d646552 614d6d65     aredOTFBRedMemMa
    28a0:	01010070 00019203 94009102 ac2000a3     p............. .
    28b0:	002000a3 70010901 535f324c 65726168     .. ....pL2_Share
    28c0:	46544f64 75735342 4d6d654d 01007061     dOTFBSsuMemMap..
    28d0:	01920301 00910210 2000a3ac 2000a425     ........... %.. 
    28e0:	01090110 5f324c4a 72616853 53446465     ....JL2_SharedDS
    28f0:	314d4152 4d6d654d 01007061 01920301     RAM1MemMap......
    2900:	00910210 2000a428 2000a4d3 01070110     ....(.. ... ....
    2910:	324c010b 6168535f 4d646572 614d6d65     ..L2_SharedMemMa
    2920:	01010070 10019203 90009102 c72000b4     p............. .
    2930:	102000b4 f5010401 535f314c 65726168     .. .....L1_Share
    2940:	6d654d64 0070614d 03010101 02100192     dMemMap.........
    2950:	b4c80491 b53d2000 01102000 43620103     ..... =.. ....bC
    2960:	4d5f4d4f 64416d65 61507264 6f426567     OM_MemAddrPageBo
    2970:	61646e75 6c417972 006e6769 92030101     undaryAlign.....
    2980:	91020001 00a4d400 00a4ee20 07010020     ........ ... ...
    2990:	4c070601 72455f33 6c414872 44636f6c     ...L3_ErrHAllocD
    29a0:	006d6172 92030101 91021001 0a7de004     ram...........}.
    29b0:	0a7e4b40 03011040 4f435a01 654d5f4d     @K~.@....ZCOM_Me
    29c0:	636e496d 65736142 72646441 03010100     mIncBaseAddr....
    29d0:	02000192 a4f00091 a4f82000 01002000     ......... ... ..
    29e0:	43740103 4d5f4d4f 64416d65 36317264     ..tCOM_MemAddr16
    29f0:	6c415744 006e6769 92030101 91020001     DWAlign.........
    2a00:	00a4f800 00a51020 03010020 324c4f01     .... ... ....OL2
    2a10:	6d43465f 71655264 49737453 0074696e     _FCmdReqStsInit.
    2a20:	92030101 91020001 00a51000 00a52c20     ............ ,..
    2a30:	03010020 334c4801 7272455f 69754248      ....HL3_ErrHBui
    2a40:	7242646c 754c6874 70614d6e 03010100     ldBrthLunMap....
    2a50:	02000192 7e4c0091 7e4e400a 0100400a     ......L~.@N~.@..
    2a60:	079e0107 495f334c 43464e46 49535249     ....L3_IFNFCIRSI
    2a70:	0074696e 92030101 91021001 00a52c00     nit..........,..
    2a80:	00a54f20 04011020 334cd101 4d43465f      O.. .....L3_FCM
    2a90:	6e495144 6e497274 01007469 92030101     DQIntrInit......
    2aa0:	91021001 0a7e5000 0a7eb240 09011040     .....P~.@.~.@...
    2ab0:	334c7f01 6c6c415f 654d636f 0101006d     ..L3_AllocMem...
    2ac0:	20019203 b4109102 0f400a7e 20400a81     ... ....~.@...@ 
    2ad0:	3c010301 5f4d4f43 5a6d654d 006f7265     ...<COM_MemZero.
    2ae0:	92030101 91021001 00a55000 00a58a20     .........P.. ...
    2af0:	04011020 41483901 68435f4c 4d6e6961      ....9HAL_ChainM
    2b00:	746e6961 496e6961 0074696e 03010101     aintainInit.....
    2b10:	02100192 a58c0091 a5c42000 01102000     ......... ... ..
    2b20:	02020106 5f4c4148 49656753 4374696e     ....HAL_SgeInitC
    2b30:	6e696168 00746e43 03010101 02100192     hainCnt.........
    2b40:	a5c40091 a5e32000 01102000 01130106     ..... ... ......
    2b50:	5f4c4148 49717744 0074696e 03010101     HAL_DwqInit.....
    2b60:	02100192 a5e40091 a67d2000 01102000     ......... }.. ..
    2b70:	48930104 445f4c41 6e497172 01007469     ...HAL_DrqInit..
    2b80:	92030101 91021001 00a68000 00a71920     ............ ...
    2b90:	04011020 41483801 73485f4c 696e4967      ....8HAL_HsgIni
    2ba0:	01010074 01920301 00910200 2000a71c     t.............. 
    2bb0:	2000a77e 01040100 4c414877 726f4e5f     ~.. ....wHAL_Nor
    2bc0:	446c616d 6e496773 01007469 92030101     malDsgInit......
    2bd0:	91022001 00a78000 00a85120 0a012020     . ...... Q..  ..
    2be0:	42445601 65475f47 00686374 92030101     .VDBG_Getch.....
    2bf0:	91021001 0a811000 0a812240 04011040     ........@"..@...
    2c00:	41483301 65545f4c 7265706d 72757461     .3HAL_Temperatur
    2c10:	6e655365 5f726f73 74696e49 01010100     eSensor_Init....
    2c20:	10019203 54009102 c42000a8 102000a8     .......T.. ... .
    2c30:	72010401 5f4c4148 65447748 49677562     ...rHAL_HwDebugI
    2c40:	0074696e 03010101 02100192 a8c40091     nit.............
    2c50:	a9242000 01102000 48db0104 535f4c41     . $.. .....HAL_S
    2c60:	696e4945 01010074 01920301 00910220     EInit....... ...
    2c70:	2000a924 2000aa39 01030120 4c4148ac     $.. 9..  ....HAL
    2c80:	414d445f 696e4945 01010074 00019203     _DMAEInit.......
    2c90:	3c009102 5e2000aa 002000aa 7e010401     ...<.. ^.. ....~
    2ca0:	5f4c4148 74696e49 626f6c47 55506c61     HAL_InitGlobalPU
    2cb0:	006d754e 03010101 02000192 aa600091     Num...........`.
    2cc0:	aa6d2000 01002000 48380103 4c5f4c41     . m.. ....8HAL_L
    2cd0:	53637064 74696e49 03010100 02100192     dpcSInit........
    2ce0:	81240091 81ef400a 0110400a 01250106     ..$..@...@....%.
    2cf0:	5f4c4148 6370644c 6e776f44 64616f6c     HAL_LdpcDownload
    2d00:	74614d48 01007869 92030101 91021001     HMatix..........
    2d10:	0a81f000 0a82c740 06011040 48010901     ....@...@......H
    2d20:	465f4c41 6873616c 74696e49 01010100     AL_FlashInit....
    2d30:	10019203 c8009102 bd400a82 10400a85     ..........@...@.
    2d40:	97010401 545f334c 496b7361 0074696e     ....L3_TaskInit.
    2d50:	03010101 02100192 85c00091 86b3400a     .............@..
    2d60:	0110400a 4c580104 65535f32 68637261     .@....XL2_Search
    2d70:	69676e45 5753656e 74696e49 01010100     EngineSWInit....
    2d80:	30019203 700c9102 642000aa 302000ac     ...0...p.. d.. 0
    2d90:	45010401 495f5746 4d74696e 01004453     ...EFW_InitMSD..
    2da0:	92030101 91020001 0a86b400 0a86c540     ............@...
    2db0:	04010040 57463001 696e495f 534d5374     @....0FW_InitSMS
    2dc0:	01010047 01920301 00910200 400a86c8     G..............@
    2dd0:	400a86e4 01030100 4c414847 4348415f     ...@....GHAL_AHC
    2de0:	696e4949 01010074 10019203 e4009102     IInit...........
    2df0:	15400a86 10400a87 2a010401 5f4c4148     ..@...@....*HAL_
    2e00:	6d6d6f43 74696e49 01010100 10019203     CommInit........
    2e10:	18089102 4d400a87 10400a88 60010301     ......@M..@....`
    2e20:	6b736944 666e6f43 495f6769 6c6f4373     DiskConfig_IsCol
    2e30:	61745364 01007472 01920301 00910200     dStart..........
    2e40:	400a8850 400a8861 01060100 62640116     P..@a..@......db
    2e50:	72705f67 66746e69 01010100 e0019204     g_printf........
    2e60:	28910200 2000ac64 2000ae6c 01040160     ...(d.. l.. `...
    2e70:	73694428 6e6f436b 5f676966 74696e49     (DiskConfig_Init
    2e80:	01010100 10019203 64009102 b0400a88     ...........d..@.
    2e90:	10400a88 c8010601 53455402 664e5f54     ..@......TEST_Nf
    2ea0:	55434d63 69614d32 0101006e 01920301     cMCU2Main.......
    2eb0:	00910210 2000ae6c 2000aed9 01030110     ....l.. ... ....
    2ec0:	6d6f4352 7465536d 6e657645 01010074     RCommSetEvent...
    2ed0:	00019203 dc009102 fd2000ae 002000ae     .......... ... .
    2ee0:	bb010b01 6e69616d 01010100 10019203     ....main........
    2ef0:	00910202 2000af00 2000b09a 00000110     ....... ... ....
    2f00:	0000038d 03ff0002 01040000 6975625c     ............\bui
    2f10:	745c646c 5c656572 322d4652 2e343130     ld\tree\RF-2014.
    2f20:	756b5f31 705c616d 6f6f7234 74585c74     1_kuma\p4root\Xt
    2f30:	61736e65 7261545c 2d746567 7362696c     ensa\Target-libs
    2f40:	6c63785c 735c6269 6372756f 61725c65     \xclib\source\ra
    2f50:	632e646e 5c3a4300 6c697562 75625c64     nd.c.C:\build\bu
    2f60:	5c646c69 322d4652 2e343130 65745c31     ild\RF-2014.1\te
    2f70:	6569466e 745c646c 77676e6f 7666725c     nField\tongw\rfv
    2f80:	69746169 6f6f6c65 5c363170 39333931     iatieloop16\1939
    2f90:	785c3539 6c697562 61545c64 74656772     95\xbuild\Target
    2fa0:	62696c2d 63785c73 0062696c 782d7478     -libs\xclib.xt-x
    2fb0:	66206363 3120726f 2e302e31 4f2d2031     cc for 11.0.1 -O
    2fc0:	723a5450 646e756f 3d66666f 4f2d2030     PT:roundoff=0 -O
    2fd0:	493a5450 5f454545 74697261 74656d68     PT:IEEE_arithmet
    2fe0:	313d6369 5e000100 0200011b 00746e69     ic=1...^....int.
    2ff0:	eb030405 01000000 61686302 01080072     .........char...
    3000:	0000f804 05000400 725f1d01 746e6565     .........._reent
    3010:	0251f400 01060000 72655f1d 006f6e72     ..Q......_errno.
    3020:	000000eb 06002302 735f1d01 6f747274     .....#...._strto
    3030:	00705f6b 00000100 06042302 745f1d01     k_p......#...._t
    3040:	00667562 00000251 06082302 655f1d01     buf.Q....#...._e
    3050:	00667562 00000260 06222302 6d5f1d01     buf.`....#"..._m
    3060:	656c7262 74735f6e 00657461 000002f0     brlen_state.....
    3070:	06302302 6d5f1d01 6f747262 735f6377     .#0..._mbrtowc_s
    3080:	65746174 0002f000 38230200 5f1d0106     tate......#8..._
    3090:	7273626d 63776f74 74735f73 00657461     mbsrtowcs_state.
    30a0:	000002f0 06402302 6d5f1d01 776f7462     .....#@..._mbtow
    30b0:	74735f63 00657461 000002f0 06482302     c_state......#H.
    30c0:	775f1d01 6d6f7463 74735f62 00657461     .._wctomb_state.
    30d0:	000002f0 06502302 775f1d01 6f747263     .....#P..._wcrto
    30e0:	735f626d 65746174 0002f000 58230200     mb_state......#X
    30f0:	5f1d0106 72736377 626d6f74 74735f73     ..._wcsrtombs_st
    3100:	00657461 000002f0 06602302 525f1d01     ate......#`..._R
    3110:	69646e61 0074696e 000000f8 06682302     andinit......#h.
    3120:	525f1d01 73646e61 00646565 000002b4     .._Randseed.....
    3130:	066c2302 695f1d01 b4007864 02000002     .#l..._idx......
    3140:	01067023 76725f1d 00030100 74230200     #p..._rv......#t
    3150:	1d010700 000000f8 00026001 00190800     .........`......
    3160:	f81d0107 01000000 0000026f 05000a08     ........o.......
    3170:	4d5f1d01 61747362 00746574 0002b408     .._Mbstatet.....
    3180:	1d010600 6863575f b4007261 02000002     ...._Wchar......
    3190:	01060023 79425f1d c9006574 02000002     #...._Byte......
    31a0:	01060423 74535f1d 00657461 000002c9     #...._State.....
    31b0:	00062302 6e6f6c02 6e752067 6e676973     .#...long unsign
    31c0:	69206465 0700746e 68730204 2074726f     ed int....short 
    31d0:	69736e75 64656e67 746e6920 09020700     unsigned int....
    31e0:	4d5f1d01 61747362 00746574 0000026f     .._Mbstatet.o...
    31f0:	6d1d0109 61747362 745f6574 0002df00     ...mbstate_t....
    3200:	1d010700 000002b4 00031001 001f0800     ................
    3210:	00010704 04000400 000002b4 01040004     ................
    3220:	04000003 6e750200 6e676973 69206465     ......unsigned i
    3230:	0700746e 1a010a04 646e6172 0000eb00     nt......rand....
    3240:	03010100 02100192 b0f40091 b17b2000     ............. {.
    3250:	01102000 701c010b 74696e69 00010000     . .....pinit....
    3260:	1d010b00 65657370 03170064 010b0000     ....pseed.......
    3270:	6469701e 03170078 010b0000 7672701f     .pidx........prv
    3280:	00031700 26010b00 00eb006a 00000000     .......&j.......
    3290:	0003c100 9d000200 04000004 75625c01     .............\bu
    32a0:	5c646c69 65657274 2d46525c 34313032     ild\tree\RF-2014
    32b0:	6b5f312e 5c616d75 6f723470 585c746f     .1_kuma\p4root\X
    32c0:	736e6574 61545c61 74656772 62696c2d     tensa\Target-lib
    32d0:	63785c73 5c62696c 736e6574 63696c69     s\xclib\tensilic
    32e0:	65725c61 2e746e65 3a430063 6975625c     a\reent.c.C:\bui
    32f0:	625c646c 646c6975 2d46525c 34313032     ld\build\RF-2014
    3300:	745c312e 69466e65 5c646c65 676e6f74     .1\tenField\tong
    3310:	66725c77 74616976 6f6c6569 3631706f     w\rfviatieloop16
    3320:	3339315c 5c353939 69756278 545c646c     \193995\xbuild\T
    3330:	65677261 696c2d74 785c7362 62696c63     arget-libs\xclib
    3340:	6e65745c 696c6973 78006163 63782d74     \tensilica.xt-xc
    3350:	6f662063 31312072 312e302e 504f2d20     c for 11.0.1 -OP
    3360:	72703a54 6465636f 5f657275 726f6572     T:procedure_reor
    3370:	00726564 1c790001 01020001 65725f2a     der...y.....*_re
    3380:	00746e65 000233f4 2a010300 7272655f     ent..3.....*_err
    3390:	33006f6e 02000002 01030023 74735f2a     no.3....#...*_st
    33a0:	6b6f7472 4200705f 02000002 01030423     rtok_p.B....#...
    33b0:	62745f2a 49006675 02000002 01030823     *_tbuf.I....#...
    33c0:	62655f2a 58006675 02000002 01032223     *_ebuf.X....#"..
    33d0:	626d5f2a 6e656c72 6174735f e8006574     *_mbrlen_state..
    33e0:	02000002 01033023 626d5f2a 776f7472     ....#0..*_mbrtow
    33f0:	74735f63 00657461 000002e8 03382302     c_state......#8.
    3400:	6d5f2a01 74727362 7363776f 6174735f     .*_mbsrtowcs_sta
    3410:	e8006574 02000002 01034023 626d5f2a     te......#@..*_mb
    3420:	63776f74 6174735f e8006574 02000002     towc_state......
    3430:	01034823 63775f2a 626d6f74 6174735f     #H..*_wctomb_sta
    3440:	e8006574 02000002 01035023 63775f2a     te......#P..*_wc
    3450:	6d6f7472 74735f62 00657461 000002e8     rtomb_state.....
    3460:	03582302 775f2a01 74727363 73626d6f     .#X..*_wcsrtombs
    3470:	6174735f e8006574 02000002 01036023     _state......#`..
    3480:	61525f2a 6e69646e 3a007469 02000002     *_Randinit.:....
    3490:	01036823 61525f2a 6573646e ac006465     #h..*_Randseed..
    34a0:	02000002 01036c23 64695f2a 02ac0078     ....#l..*_idx...
    34b0:	23020000 2a010370 0076725f 000002f9     ...#p..*_rv.....
    34c0:	00742302 746e6904 04040500 72616863     .#t..int....char
    34d0:	05010800 0000023a 01060004 00023a2a     ....:.......*:..
    34e0:	02580100 19070000 2a010600 0000023a     ..X........*:...
    34f0:	00026701 000a0700 5f2a0102 7473624d     .g........*_Mbst
    3500:	74657461 02ac0800 01030000 63575f2a     atet........*_Wc
    3510:	00726168 000002ac 03002302 425f2a01     har......#...*_B
    3520:	00657479 000002c1 03042302 535f2a01     yte......#...*_S
    3530:	65746174 0002c100 06230200 6f6c0400     tate......#...lo
    3540:	7520676e 6769736e 2064656e 00746e69     ng unsigned int.
    3550:	73040407 74726f68 736e7520 656e6769     ...short unsigne
    3560:	6e692064 02070074 5f2a0108 7473624d     d int.....*_Mbst
    3570:	74657461 00026700 2a010800 7473626d     atet.g.....*mbst
    3580:	5f657461 02d70074 01060000 0002ac2a     ate_t.......*...
    3590:	03080100 1f070000 00e90500 00040000     ................
    35a0:	75040109 6769736e 2064656e 00746e69     ...unsigned int.
    35b0:	040a0407 2f010600 0000023a 00033301     ......./:....3..
    35c0:	00000700 00032405 09000400 22010b01     .....$........."
    35d0:	65725f67 00746e65 000000e9 1f400305     g_reent.......@.
    35e0:	010c1ffa 65725f24 5f746e65 00727470     ....$_reent_ptr.
    35f0:	00000308 0c900305 0d011ffa 695f2a01     .............*_i
    3600:	5f74696e 6e656572 01010074 10019203     nit_reent.......
    3610:	7c009102 a32000b1 102000b1 00039d01     ...|.. ... .....
    3620:	2a010e00 08007270 01000003 010f0052     ...*pr......R...
    3630:	6e695f36 725f7469 746e6565 7373625f     6_init_reent_bss
    3640:	03010100 02000192 b1a40091 b1b32000     ............. ..
    3650:	01002000 00d30000 00020000 00000581     . ..............
    3660:	1d420104 b1f00001 b3212000 622f2000     ..B...... !.. /b
    3670:	646c6975 6572742f 46522f65 3130322d     uild/tree/RF-201
    3680:	5f312e34 616d756b 7234702f 2f746f6f     4.1_kuma/p4root/
    3690:	6e657458 542f6173 65677261 696c2d74     Xtensa/Target-li
    36a0:	782f7362 62696c63 6e65742f 696c6973     bs/xclib/tensili
    36b0:	6d2f6163 70636d65 00532e79 625c3a43     ca/memcpy.S.C:\b
    36c0:	646c6975 6975625c 525c646c 30322d46     uild\build\RF-20
    36d0:	312e3431 6e65745c 6c656946 6f745c64     14.1\tenField\to
    36e0:	5c77676e 69766672 65697461 706f6f6c     ngw\rfviatieloop
    36f0:	315c3631 39393339 62785c35 646c6975     16\193995\xbuild
    3700:	7261545c 2d746567 7362696c 6c63785c     \Target-libs\xcl
    3710:	745c6269 69736e65 6163696c 554e4700     ib\tensilica.GNU
    3720:	20534120 33322e32 0100322e 0000d380      AS 2.23.2......
    3730:	95000200 04000005 01207f01 00b32400     .......... ..$..
    3740:	00b39820 75622f20 2f646c69 65657274      ... /build/tree
    3750:	2d46522f 34313032 6b5f312e 2f616d75     /RF-2014.1_kuma/
    3760:	6f723470 582f746f 736e6574 61542f61     p4root/Xtensa/Ta
    3770:	74656772 62696c2d 63782f73 2f62696c     rget-libs/xclib/
    3780:	736e6574 63696c69 656d2f61 7465736d     tensilica/memset
    3790:	4300532e 75625c3a 5c646c69 6c697562     .S.C:\build\buil
    37a0:	46525c64 3130322d 5c312e34 466e6574     d\RF-2014.1\tenF
    37b0:	646c6569 6e6f745c 725c7767 61697666     ield\tongw\rfvia
    37c0:	6c656974 31706f6f 39315c36 35393933     tieloop16\193995
    37d0:	7562785c 5c646c69 67726154 6c2d7465     \xbuild\Target-l
    37e0:	5c736269 696c6378 65745c62 6c69736e     ibs\xclib\tensil
    37f0:	00616369 20554e47 32205341 2e33322e     ica.GNU AS 2.23.
    3800:	80010032 000000d0 05a90002 01040000     2...............
    3810:	000121f3 2000b398 2000b3bf 6975622f     .!..... ... /bui
    3820:	742f646c 2f656572 322d4652 2e343130     ld/tree/RF-2014.
    3830:	756b5f31 742f616d 736c6f6f 7477732f     1_kuma/tools/swt
    3840:	736c6f6f 57534d2d 32336e69 3638782d     ools-MSWin32-x86
    3850:	6574782f 2d61736e 2f666c65 2f637273     /xtensa-elf/src/
    3860:	736f7478 6378652f 7379732d 6c6c6163     xtos/exc-syscall
    3870:	6e61682d 72656c64 4300532e 75625c3a     -handler.S.C:\bu
    3880:	5c646c69 6c697562 46525c64 3130322d     ild\build\RF-201
    3890:	5c312e34 466e6574 646c6569 6e6f745c     4.1\tenField\ton
    38a0:	725c7767 61697666 6c656974 31706f6f     gw\rfviatieloop1
    38b0:	39315c36 35393933 7562785c 5c646c69     6\193995\xbuild\
    38c0:	785c534f 00736f74 20554e47 32205341     OS\xtos.GNU AS 2
    38d0:	2e33322e 80010032 000000c9 05bd0002     .23.2...........
    38e0:	01040000 000122d8 20000280 2000028b     ....."..... ... 
    38f0:	6975622f 742f646c 2f656572 322d4652     /build/tree/RF-2
    3900:	2e343130 756b5f31 742f616d 736c6f6f     014.1_kuma/tools
    3910:	7477732f 736c6f6f 57534d2d 32336e69     /swtools-MSWin32
    3920:	3638782d 6574782f 2d61736e 2f666c65     -x86/xtensa-elf/
    3930:	2f637273 736f7478 6265642f 762d6775     src/xtos/debug-v
    3940:	6f746365 00532e72 625c3a43 646c6975     ector.S.C:\build
    3950:	6975625c 525c646c 30322d46 312e3431     \build\RF-2014.1
    3960:	6e65745c 6c656946 6f745c64 5c77676e     \tenField\tongw\
    3970:	69766672 65697461 706f6f6c 315c3631     rfviatieloop16\1
    3980:	39393339 62785c35 646c6975 5c534f5c     93995\xbuild\OS\
    3990:	736f7478 554e4700 20534120 33322e32     xtos.GNU AS 2.23
    39a0:	0100322e 0000ca80 d1000200 04000005     .2..............
    39b0:	01237201 0003d000 0003d620 75622f20     .r#..... ... /bu
    39c0:	2f646c69 65657274 2d46522f 34313032     ild/tree/RF-2014
    39d0:	6b5f312e 2f616d75 6c6f6f74 77732f73     .1_kuma/tools/sw
    39e0:	6c6f6f74 534d2d73 336e6957 38782d32     tools-MSWin32-x8
    39f0:	74782f36 61736e65 666c652d 6372732f     6/xtensa-elf/src
    3a00:	6f74782f 6f642f73 656c6275 6365762d     /xtos/double-vec
    3a10:	2e726f74 3a430053 6975625c 625c646c     tor.S.C:\build\b
    3a20:	646c6975 2d46525c 34313032 745c312e     uild\RF-2014.1\t
    3a30:	69466e65 5c646c65 676e6f74 66725c77     enField\tongw\rf
    3a40:	74616976 6f6c6569 3631706f 3339315c     viatieloop16\193
    3a50:	5c353939 69756278 4f5c646c 74785c53     995\xbuild\OS\xt
    3a60:	4700736f 4120554e 2e322053 322e3332     os.GNU AS 2.23.2
    3a70:	ca800100 02000000 0005e500 01010400     ................
    3a80:	00000124 06200003 2f200003 6c697562     $..... ... /buil
    3a90:	72742f64 522f6565 30322d46 312e3431     d/tree/RF-2014.1
    3aa0:	6d756b5f 6f742f61 2f736c6f 6f747773     _kuma/tools/swto
    3ab0:	2d736c6f 6957534d 2d32336e 2f363878     ols-MSWin32-x86/
    3ac0:	6e657478 652d6173 732f666c 782f6372     xtensa-elf/src/x
    3ad0:	2f736f74 6e72656b 762d6c65 6f746365     tos/kernel-vecto
    3ae0:	00532e72 625c3a43 646c6975 6975625c     r.S.C:\build\bui
    3af0:	525c646c 30322d46 312e3431 6e65745c     ld\RF-2014.1\ten
    3b00:	6c656946 6f745c64 5c77676e 69766672     Field\tongw\rfvi
    3b10:	65697461 706f6f6c 315c3631 39393339     atieloop16\19399
    3b20:	62785c35 646c6975 5c534f5c 736f7478     5\xbuild\OS\xtos
    3b30:	554e4700 20534120 33322e32 0100322e     .GNU AS 2.23.2..
    3b40:	0000c780 f9000200 04000005 01249001     ..............$.
    3b50:	0002c000 0002c320 75622f20 2f646c69     .... ... /build/
    3b60:	65657274 2d46522f 34313032 6b5f312e     tree/RF-2014.1_k
    3b70:	2f616d75 6c6f6f74 77732f73 6c6f6f74     uma/tools/swtool
    3b80:	534d2d73 336e6957 38782d32 74782f36     s-MSWin32-x86/xt
    3b90:	61736e65 666c652d 6372732f 6f74782f     ensa-elf/src/xto
    3ba0:	6d6e2f73 65762d69 726f7463 4300532e     s/nmi-vector.S.C
    3bb0:	75625c3a 5c646c69 6c697562 46525c64     :\build\build\RF
    3bc0:	3130322d 5c312e34 466e6574 646c6569     -2014.1\tenField
    3bd0:	6e6f745c 725c7767 61697666 6c656974     \tongw\rfviatiel
    3be0:	31706f6f 39315c36 35393933 7562785c     oop16\193995\xbu
    3bf0:	5c646c69 785c534f 00736f74 20554e47     ild\OS\xtos.GNU 
    3c00:	32205341 2e33322e 80010032 000000c4     AS 2.23.2.......
    3c10:	060d0002 01040000 00012516 2000b3c0     .........%..... 
    3c20:	2000b3d9 6975622f 742f646c 2f656572     ... /build/tree/
    3c30:	322d4652 2e343130 756b5f31 742f616d     RF-2014.1_kuma/t
    3c40:	736c6f6f 7477732f 736c6f6f 57534d2d     ools/swtools-MSW
    3c50:	32336e69 3638782d 6574782f 2d61736e     in32-x86/xtensa-
    3c60:	2f666c65 2f637273 2f6c6168 68636163     elf/src/hal/cach
    3c70:	73615f65 00532e6d 625c3a43 646c6975     e_asm.S.C:\build
    3c80:	6975625c 525c646c 30322d46 312e3431     \build\RF-2014.1
    3c90:	6e65745c 6c656946 6f745c64 5c77676e     \tenField\tongw\
    3ca0:	69766672 65697461 706f6f6c 315c3631     rfviatieloop16\1
    3cb0:	39393339 62785c35 646c6975 5c534f5c     93995\xbuild\OS\
    3cc0:	006c6168 20554e47 32205341 2e33322e     hal.GNU AS 2.23.
    3cd0:	80010032 000000c4 06210002 01040000     2.........!.....
    3ce0:	000125a1 2000b3dc 2000b3f5 6975622f     .%..... ... /bui
    3cf0:	742f646c 2f656572 322d4652 2e343130     ld/tree/RF-2014.
    3d00:	756b5f31 742f616d 736c6f6f 7477732f     1_kuma/tools/swt
    3d10:	736c6f6f 57534d2d 32336e69 3638782d     ools-MSWin32-x86
    3d20:	6574782f 2d61736e 2f666c65 2f637273     /xtensa-elf/src/
    3d30:	2f6c6168 68636163 73615f65 00532e6d     hal/cache_asm.S.
    3d40:	625c3a43 646c6975 6975625c 525c646c     C:\build\build\R
    3d50:	30322d46 312e3431 6e65745c 6c656946     F-2014.1\tenFiel
    3d60:	6f745c64 5c77676e 69766672 65697461     d\tongw\rfviatie
    3d70:	706f6f6c 315c3631 39393339 62785c35     loop16\193995\xb
    3d80:	646c6975 5c534f5c 006c6168 20554e47     uild\OS\hal.GNU 
    3d90:	32205341 2e33322e 80010032 000000c4     AS 2.23.2.......
    3da0:	06350002 01040000 0001262c 2000b3f8     ..5.....,&..... 
    3db0:	2000b3fa 6975622f 742f646c 2f656572     ... /build/tree/
    3dc0:	322d4652 2e343130 756b5f31 742f616d     RF-2014.1_kuma/t
    3dd0:	736c6f6f 7477732f 736c6f6f 57534d2d     ools/swtools-MSW
    3de0:	32336e69 3638782d 6574782f 2d61736e     in32-x86/xtensa-
    3df0:	2f666c65 2f637273 2f6c6168 68636163     elf/src/hal/cach
    3e00:	73615f65 00532e6d 625c3a43 646c6975     e_asm.S.C:\build
    3e10:	6975625c 525c646c 30322d46 312e3431     \build\RF-2014.1
    3e20:	6e65745c 6c656946 6f745c64 5c77676e     \tenField\tongw\
    3e30:	69766672 65697461 706f6f6c 315c3631     rfviatieloop16\1
    3e40:	39393339 62785c35 646c6975 5c534f5c     93995\xbuild\OS\
    3e50:	006c6168 20554e47 32205341 2e33322e     hal.GNU AS 2.23.
    3e60:	80010032 000000d4 06490002 01040000     2.........I.....
    3e70:	000126b1 2000b1b4 2000b1d2 2e2f3a43     .&..... ... C:/.
    3e80:	622f2e2f 646c6975 6572742f 46522f65     /./build/tree/RF
    3e90:	3130322d 5f312e34 616d756b 6f6f742f     -2014.1_kuma/too
    3ea0:	732f736c 6f6f7477 4d2d736c 6e695753     ls/swtools-MSWin
    3eb0:	782d3233 782f3638 736e6574 6c652d61     32-x86/xtensa-el
    3ec0:	6e692f66 64756c63 74782f65 61736e65     f/include/xtensa
    3ed0:	6361635c 74616568 73617274 00682e6d     \cacheattrasm.h.
    3ee0:	625c3a43 646c6975 6975625c 525c646c     C:\build\build\R
    3ef0:	30322d46 312e3431 6e65745c 6c656946     F-2014.1\tenFiel
    3f00:	6f745c64 5c77676e 69766672 65697461     d\tongw\rfviatie
    3f10:	706f6f6c 315c3631 39393339 62785c35     loop16\193995\xb
    3f20:	646c6975 5c534f5c 006c6168 20554e47     uild\OS\hal.GNU 
    3f30:	32205341 2e33322e 80010032 000000c4     AS 2.23.2.......
    3f40:	065d0002 01040000 000127a5 2000b1d4     ..]......'..... 
    3f50:	2000b1f0 6975622f 742f646c 2f656572     ... /build/tree/
    3f60:	322d4652 2e343130 756b5f31 742f616d     RF-2014.1_kuma/t
    3f70:	736c6f6f 7477732f 736c6f6f 57534d2d     ools/swtools-MSW
    3f80:	32336e69 3638782d 6574782f 2d61736e     in32-x86/xtensa-
    3f90:	2f666c65 2f637273 2f6c6168 68636163     elf/src/hal/cach
    3fa0:	73615f65 00532e6d 625c3a43 646c6975     e_asm.S.C:\build
    3fb0:	6975625c 525c646c 30322d46 312e3431     \build\RF-2014.1
    3fc0:	6e65745c 6c656946 6f745c64 5c77676e     \tenField\tongw\
    3fd0:	69766672 65697461 706f6f6c 315c3631     rfviatieloop16\1
    3fe0:	39393339 62785c35 646c6975 5c534f5c     93995\xbuild\OS\
    3ff0:	006c6168 20554e47 32205341 2e33322e     hal.GNU AS 2.23.
    4000:	80010032                                2...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	03011101 25081b08 420b1308 0006100b     .......%...B....
  10:	002e0200 053b0b3a 0c3f0803 408b0c27     ....:.;...?.'..@
  20:	2a0a400c 1201110a 0b7e8101 000b7e82     .@.*......~..~..
  30:	002e0300 053b0b3a 0c3f0803 0a400c27     ....:.;...?.'.@.
  40:	01110a2a 7e810112 0b7e820b 2e040000     *......~..~.....
  50:	3b0b3a00 3f08030b 8b0c270c 0a400c40     .:.;...?.'..@.@.
  60:	01110a2a 7e810112 0b7e820b 2e050000     *......~..~.....
  70:	3b0b3a00 27080305 0c408b0c 0a2a0a40     .:.;...'..@.@.*.
  80:	01120111 820b7e81 00000b7e 3a002e06     .....~..~......:
  90:	03053b0b 400c2708 110a2a0a 81011201     .;...'.@.*......
  a0:	7e820b7e 0700000b 0b3a002e 08030b3b     ~..~......:.;...
  b0:	0a400c27 01110a2a 7e810112 0b7e820b     '.@.*......~..~.
  c0:	2e080000 3b0b3a00 3f08030b 400c270c     .....:.;...?.'.@
  d0:	110a2a0a 81011201 7e820b7e 0900000b     .*......~..~....
  e0:	0b3a002e 08030b3b 408b0c27 2a0a400c     ..:.;...'..@.@.*
  f0:	1201110a 0b7e8101 000b7e82 11010000     ......~..~......
 100:	1b080301 13082508 100b420b 02000006     .....%...B......
 110:	0b3a002e 0803053b 0c270c3f 400c408b     ..:.;...?.'..@.@
 120:	110a2a0a 81011201 7e820b7e 0300000b     .*......~..~....
 130:	0b3a002e 0803053b 0c270c3f 0a2a0a40     ..:.;...?.'.@.*.
 140:	01120111 820b7e81 00000b7e 3a002e04     .....~..~......:
 150:	03053b0b 8b0c2708 0a400c40 01110a2a     .;...'..@.@.*...
 160:	7e810112 0b7e820b 2e050000 3b0b3a00     ...~..~......:.;
 170:	3f08030b 400c270c 110a2a0a 81011201     ...?.'.@.*......
 180:	7e820b7e 0600000b 0b3a002e 08030b3b     ~..~......:.;...
 190:	0c270c3f 400c408b 110a2a0a 81011201     ?.'..@.@.*......
 1a0:	7e820b7e 0700000b 0b3a002e 0803053b     ~..~......:.;...
 1b0:	0a400c27 01110a2a 7e810112 0b7e820b     '.@.*......~..~.
 1c0:	2e080000 3b0b3a00 2708030b 0c408b0c     .....:.;...'..@.
 1d0:	0a2a0a40 01120111 820b7e81 00000b7e     @.*......~..~...
 1e0:	3a002e09 030b3b0b 400c2708 110a2a0a     ...:.;...'.@.*..
 1f0:	81011201 7e820b7e 0000000b 03011101     ....~..~........
 200:	25081b08 420b1308 0006100b 002e0200     ...%...B........
 210:	053b0b3a 0c3f0803 0a400c27 01110a2a     :.;...?.'.@.*...
 220:	7e810112 0b7e820b 2e030000 3b0b3a00     ...~..~......:.;
 230:	27080305 2a0a400c 1201110a 0b7e8101     ...'.@.*......~.
 240:	000b7e82 002e0400 053b0b3a 0c270803     .~......:.;...'.
 250:	400c408b 110a2a0a 81011201 7e820b7e     .@.@.*......~..~
 260:	0500000b 0b3a002e 08030b3b 0c270c3f     ......:.;...?.'.
 270:	0a2a0a40 01120111 820b7e81 00000b7e     @.*......~..~...
 280:	3a002e06 03053b0b 270c3f08 0c408b0c     ...:.;...?.'..@.
 290:	0a2a0a40 01120111 820b7e81 00000b7e     @.*......~..~...
 2a0:	3a002e07 030b3b0b 270c3f08 0c408b0c     ...:.;...?.'..@.
 2b0:	0a2a0a40 01120111 820b7e81 00000b7e     @.*......~..~...
 2c0:	01110100 081b0803 0b130825 06100b42     ........%...B...
 2d0:	2e020000 3b0b3a00 27080305 0c408b0c     .....:.;...'..@.
 2e0:	0a2a0a40 01120111 820b7e81 00000b7e     @.*......~..~...
 2f0:	3a002e03 030b3b0b 270c3f08 2a0a400c     ...:.;...?.'.@.*
 300:	1201110a 0b7e8101 000b7e82 002e0400     ......~..~......
 310:	0b3b0b3a 0c3f0803 408b0c27 2a0a400c     :.;...?.'..@.@.*
 320:	1201110a 0b7e8101 000b7e82 002e0500     ......~..~......
 330:	053b0b3a 0c270803 0a2a0a40 01120111     :.;...'.@.*.....
 340:	820b7e81 00000b7e 3a002e06 03053b0b     .~..~......:.;..
 350:	270c3f08 0c408b0c 0a2a0a40 01120111     .?.'..@.@.*.....
 360:	820b7e81 00000b7e 3a002e07 03053b0b     .~..~......:.;..
 370:	270c3f08 2a0a400c 1201110a 0b7e8101     .?.'.@.*......~.
 380:	000b7e82 002e0800 0b3b0b3a 0c270803     .~......:.;...'.
 390:	0a2a0a40 01120111 820b7e81 00000b7e     @.*......~..~...
 3a0:	3a002e09 030b3b0b 8b0c2708 0a400c40     ...:.;...'..@.@.
 3b0:	01110a2a 7e810112 0b7e820b 2e0a0000     *......~..~.....
 3c0:	3b0b3a00 3f08030b 0c408b0c 0a2a0a40     .:.;...?..@.@.*.
 3d0:	01120111 820b7e81 00000b7e 3a002e0b     .....~..~......:
 3e0:	030b3b0b 270c3f08 0c408b0c 0b360a40     .;...?.'..@.@.6.
 3f0:	01110a2a 7e810112 0b7e820b 01000000     *......~..~.....
 400:	08030111 0825081b 0b420b13 00000610     ......%...B.....
 410:	03002402 0b0b3e08 0300000b 13490015     .$...>........I.
 420:	00000c27 49000f04 330b0b13 0500000b     '......I...3....
 430:	0b3a0113 08030b3b 13010b0b 0d060000     ..:.;...........
 440:	3b0b3a00 4908030b 000a3813 01010700     .:.;...I.8......
 450:	0b3b0b3a 0c3c1349 00001301 2f002108     :.;.I.<......!./
 460:	0900000b 0b3a0016 08030b3b 00001349     ......:.;...I...
 470:	3a012e0a 030b3b0b 3f134908 400c270c     ...:.;...I.?.'.@
 480:	110a2a0a 81011201 7e820b7e 0b00000b     .*......~..~....
 490:	0b3a0034 08030b3b 00001349 01110100     4.:.;...I.......
 4a0:	081b0803 0b130825 06100b42 13020000     ....%...B.......
 4b0:	3b0b3a01 0b08030b 0013010b 000d0300     .:.;............
 4c0:	0b3b0b3a 13490803 00000a38 03002404     :.;...I.8....$..
 4d0:	0b0b3e08 0500000b 1349000f 0b330b0b     .>........I...3.
 4e0:	01060000 3b0b3a01 3c13490b 0013010c     .....:.;.I.<....
 4f0:	00210700 00000b2f 3a001608 030b3b0b     ..!./......:.;..
 500:	00134908 00150900 00000c27 0b000f0a     .I......'.......
 510:	000b330b 00340b00 0b3b0b3a 13490803     .3....4.:.;...I.
 520:	00000a02 3a00340c 030b3b0b 02134908     .....4.:.;...I..
 530:	000c3f0a 012e0d00 0b3b0b3a 0c3f0803     .?......:.;...?.
 540:	0a400c27 01110a2a 7e810112 0b7e820b     '.@.*......~..~.
 550:	00001301 3a00050e 030b3b0b 02134908     .......:.;...I..
 560:	0f00000a 0b3a002e 08030b3b 0c270c3f     ......:.;...?.'.
 570:	0a2a0a40 01120111 820b7e81 00000b7e     @.*......~..~...
 580:	00110100 01110610 08030112 0825081b     ..............%.
 590:	00000513 00110100 01110610 08030112     ................
 5a0:	0825081b 00000513 00110100 01110610     ..%.............
 5b0:	08030112 0825081b 00000513 00110100     ......%.........
 5c0:	01110610 08030112 0825081b 00000513     ..........%.....
 5d0:	00110100 01110610 08030112 0825081b     ..............%.
 5e0:	00000513 00110100 01110610 08030112     ................
 5f0:	0825081b 00000513 00110100 01110610     ..%.............
 600:	08030112 0825081b 00000513 00110100     ......%.........
 610:	01110610 08030112 0825081b 00000513     ..........%.....
 620:	00110100 01110610 08030112 0825081b     ..............%.
 630:	00000513 00110100 01110610 08030112     ................
 640:	0825081b 00000513 00110100 01110610     ..%.............
 650:	08030112 0825081b 00000513 00110100     ......%.........
 660:	01110610 08030112 0825081b 00000513     ..........%.....
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	00004e82 0bcd0002 01010000 000d0efb     .N..............
      10:	01010101 01000000 44010000 4d495c3a     ...........D:\IM
      20:	5f44335f 5c434c54 6d726966 65726177     _3D_TLC\firmware
      30:	5c3a4400 335f4d49 4c545f44 69665c43     .D:\IM_3D_TLC\fi
      40:	61776d72 615c6572 726f676c 6d687469     rmware\algorithm
      50:	00324c5c 495c3a44 44335f4d 434c545f     \L2.D:\IM_3D_TLC
      60:	7269665c 7261776d 6c615c65 69726f67     \firmware\algori
      70:	5c6d6874 4400334c 4d495c3a 5f44335f     thm\L3.D:\IM_3D_
      80:	5c434c54 6d726966 65726177 676c615c     TLC\firmware\alg
      90:	7469726f 4d5c6d68 00637369 495c3a44     orithm\Misc.D:\I
      a0:	44335f4d 434c545f 7269665c 7261776d     M_3D_TLC\firmwar
      b0:	4f435c65 3a44004d 5f4d495c 545f4433     e\COM.D:\IM_3D_T
      c0:	665c434c 776d7269 5c657261 666e6f63     LC\firmware\conf
      d0:	44006769 4d495c3a 5f44335f 5c434c54     ig.D:\IM_3D_TLC\
      e0:	6d726966 65726177 4c41485c 5c3a4400     firmware\HAL.D:\
      f0:	335f4d49 4c545f44 69665c43 61776d72     IM_3D_TLC\firmwa
     100:	485c6572 445c4c41 4d617461 74696e6f     re\HAL\DataMonit
     110:	4400726f 4d495c3a 5f44335f 5c434c54     or.D:\IM_3D_TLC\
     120:	6d726966 65726177 4c41485c 6365445c     firmware\HAL\Dec
     130:	00737453 495c3a44 44335f4d 434c545f     Sts.D:\IM_3D_TLC
     140:	7269665c 7261776d 41485c65 4d445c4c     \firmware\HAL\DM
     150:	44004541 4d495c3a 5f44335f 5c434c54     AE.D:\IM_3D_TLC\
     160:	6d726966 65726177 4c41485c 4753445c     firmware\HAL\DSG
     170:	5c3a4400 335f4d49 4c545f44 69665c43     .D:\IM_3D_TLC\fi
     180:	61776d72 485c6572 455c4c41 3a44004d     rmware\HAL\EM.D:
     190:	5f4d495c 545f4433 665c434c 776d7269     \IM_3D_TLC\firmw
     1a0:	5c657261 5c4c4148 4f495047 5c3a4400     are\HAL\GPIO.D:\
     1b0:	335f4d49 4c545f44 69665c43 61776d72     IM_3D_TLC\firmwa
     1c0:	485c6572 485c4c41 44004547 4d495c3a     re\HAL\HGE.D:\IM
     1d0:	5f44335f 5c434c54 6d726966 65726177     _3D_TLC\firmware
     1e0:	4c41485c 4349495c 5c3a4400 335f4d49     \HAL\IIC.D:\IM_3
     1f0:	4c545f44 69665c43 61776d72 485c6572     D_TLC\firmware\H
     200:	495c4c41 7265746e 74707572 5c3a4400     AL\Interrupt.D:\
     210:	335f4d49 4c545f44 69665c43 61776d72     IM_3D_TLC\firmwa
     220:	485c6572 4c5c4c41 00435044 495c3a44     re\HAL\LDPC.D:\I
     230:	44335f4d 434c545f 7269665c 7261776d     M_3D_TLC\firmwar
     240:	41485c65 754d5c4c 4369746c 0065726f     e\HAL\MultiCore.
     250:	495c3a44 44335f4d 434c545f 7269665c     D:\IM_3D_TLC\fir
     260:	7261776d 41485c65 464e5c4c 3a440043     mware\HAL\NFC.D:
     270:	5f4d495c 545f4433 665c434c 776d7269     \IM_3D_TLC\firmw
     280:	5c657261 5c4c4148 61726150 6261546d     are\HAL\ParamTab
     290:	4400656c 4d495c3a 5f44335f 5c434c54     le.D:\IM_3D_TLC\
     2a0:	6d726966 65726177 4c41485c 0045535c     firmware\HAL\SE.
     2b0:	495c3a44 44335f4d 434c545f 7269665c     D:\IM_3D_TLC\fir
     2c0:	7261776d 41485c65 69545c4c 0072656d     mware\HAL\Timer.
     2d0:	495c3a44 44335f4d 434c545f 7269665c     D:\IM_3D_TLC\fir
     2e0:	7261776d 41485c65 72545c4c 00656361     mware\HAL\Trace.
     2f0:	495c3a44 44335f4d 434c545f 7269665c     D:\IM_3D_TLC\fir
     300:	7261776d 41485c65 41555c4c 44005452     mware\HAL\UART.D
     310:	4d495c3a 5f44335f 5c434c54 6d726966     :\IM_3D_TLC\firm
     320:	65726177 4c41485c 524f585c 5c3a4400     ware\HAL\XOR.D:\
     330:	335f4d49 4c545f44 69665c43 61776d72     IM_3D_TLC\firmwa
     340:	485c6572 585c4c41 736e6574 3a440061     re\HAL\Xtensa.D:
     350:	5f4d495c 545f4433 755c434c 7474696e     \IM_3D_TLC\unitt
     360:	5c747365 6e456b42 65545f64 614d7473     est\BkEnd_TestMa
     370:	44006e69 4d495c3a 5f44335f 5c434c54     in.D:\IM_3D_TLC\
     380:	74696e75 74736574 4c41485c 696e555f     unittest\HAL_Uni
     390:	73655474 61445c74 68436174 5f6b6365     tTest\DataCheck_
     3a0:	44004d45 4d495c3a 5f44335f 5c434c54     EM.D:\IM_3D_TLC\
     3b0:	74696e75 74736574 4c41485c 696e555f     unittest\HAL_Uni
     3c0:	73655474 6c465c74 44687361 65766972     tTest\FlashDrive
     3d0:	3a440072 5f4d495c 545f4433 755c434c     r.D:\IM_3D_TLC\u
     3e0:	7474696e 5c747365 5f4c4148 74696e55     nittest\HAL_Unit
     3f0:	74736554 4547485c 5c3a4400 335f4d49     Test\HGE.D:\IM_3
     400:	4c545f44 6e755c43 65747469 485c7473     D_TLC\unittest\H
     410:	555f4c41 5474696e 5c747365 4350444c     AL_UnitTest\LDPC
     420:	5c3a4400 335f4d49 4c545f44 6e755c43     .D:\IM_3D_TLC\un
     430:	65747469 485c7473 555f4c41 5474696e     ittest\HAL_UnitT
     440:	5c747365 0043464e 495c3a44 44335f4d     est\NFC.D:\IM_3D
     450:	434c545f 696e755c 73657474 41485c74     _TLC\unittest\HA
     460:	6e555f4c 65547469 4e5c7473 4e5c4346     L_UnitTest\NFC\N
     470:	425f4346 43495341 5c3a4400 335f4d49     FC_BASIC.D:\IM_3
     480:	4c545f44 6e755c43 65747469 485c7473     D_TLC\unittest\H
     490:	555f4c41 5474696e 5c747365 5c43464e     AL_UnitTest\NFC\
     4a0:	5f43464e 00545845 495c3a44 44335f4d     NFC_EXT.D:\IM_3D
     4b0:	434c545f 696e755c 73657474 41485c74     _TLC\unittest\HA
     4c0:	6e555f4c 65547469 585c7473 4400524f     L_UnitTest\XOR.D
     4d0:	4d495c3a 5f44335f 5c434c54 6d726966     :\IM_3D_TLC\firm
     4e0:	65726177 6164615c 72657470 5c334c5c     ware\adapter\L3\
     4f0:	654d564e 5c3a4400 335f4d49 4c545f44     NVMe.D:\IM_3D_TL
     500:	69665c43 61776d72 485c6572 435c4c41     C\firmware\HAL\C
     510:	6e696168 6e69614d 6e696174 5c3a4400     hainMaintain.D:\
     520:	335f4d49 4c545f44 69665c43 61776d72     IM_3D_TLC\firmwa
     530:	485c6572 485c4c41 44005443 4d495c3a     re\HAL\HCT.D:\IM
     540:	5f44335f 5c434c54 6d726966 65726177     _3D_TLC\firmware
     550:	4c41485c 4753485c 5c3a4400 335f4d49     \HAL\HSG.D:\IM_3
     560:	4c545f44 69665c43 61776d72 485c6572     D_TLC\firmware\H
     570:	485c4c41 62654477 44006775 4d495c3a     AL\HwDebug.D:\IM
     580:	5f44335f 5c434c54 6d726966 65726177     _3D_TLC\firmware
     590:	4c41485c 4547535c 5c3a4400 335f4d49     \HAL\SGE.D:\IM_3
     5a0:	4c545f44 69665c43 61776d72 485c6572     D_TLC\firmware\H
     5b0:	465c4c41 6873616c 544e495c 335f4c45     AL\Flash\INTEL_3
     5c0:	4c545f44 3a440043 5f4d495c 545f4433     D_TLC.D:\IM_3D_T
     5d0:	755c434c 7474696e 5c747365 5f4c4148     LC\unittest\HAL_
     5e0:	74696e55 74736554 43464e5c 43464e5c     UnitTest\NFC\NFC
     5f0:	5458455f 544e495c 335f4c45 4c545f44     _EXT\INTEL_3D_TL
     600:	4d000043 5f325543 6e69614d 0100632e     C..MCU2_Main.c..
     610:	324c0000 4d43465f 632e5144 00000200     ..L2_FCMDQ.c....
     620:	545f324c 656c6261 2e544242 00020063     L2_TableBBT.c...
     630:	5f324c00 65746e49 63616672 00632e65     .L2_Interface.c.
     640:	4c000002 65535f32 68637261 69676e45     ...L2_SearchEngi
     650:	632e656e 00000200 495f334c 2e74696e     ne.c....L3_Init.
     660:	00030063 5f334c00 444d4346 00632e51     c....L3_FCMDQ.c.
     670:	4c000003 6e495f33 66726574 2e656361     ...L3_Interface.
     680:	00030063 5f334c00 65686353 656c7564     c....L3_Schedule
     690:	0300632e 334c0000 616c465f 6f4d6873     .c....L3_FlashMo
     6a0:	6f74696e 00632e72 4c000003 72455f33     nitor.c....L3_Er
     6b0:	61424872 2e636973 00030063 5f334c00     rHBasic.c....L3_
     6c0:	48727245 65747845 632e646e 00000300     ErrHExtend.c....
     6d0:	535f334c 4474666f 646f6365 632e7265     L3_SoftDecoder.c
     6e0:	00000300 445f334c 52617461 766f6365     ....L3_DataRecov
     6f0:	632e7265 00000300 425f334c 674d6675     er.c....L3_BufMg
     700:	00632e72 4c000003 65445f33 2e677562     r.c....L3_Debug.
     710:	00030063 5f574600 41667542 2e726464     c....FW_BufAddr.
     720:	00040063 5f574600 61746144 696e6f4d     c....FW_DataMoni
     730:	2e726f74 00040063 5f574600 75626544     tor.c....FW_Debu
     740:	00632e67 46000004 76455f57 2e746e65     g.c....FW_Event.
     750:	00040063 5f574600 47534d53 0400632e     c....FW_SMSG.c..
     760:	57460000 6169565f 2e646d43 00040063     ..FW_ViaCmd.c...
     770:	5f574600 2e4c4453 00040063 4d4f4300     .FW_SDL.c....COM
     780:	7469425f 6b73614d 0500632e 4f430000     _BitMask.c....CO
     790:	654d5f4d 79726f6d 0500632e 4f430000     M_Memory.c....CO
     7a0:	57515f4d 2e64726f 00050063 73694400     M_QWord.c....Dis
     7b0:	6f435f6b 6769666e 0600632e 41480000     k_Config.c....HA
     7c0:	6e495f4c 632e7469 00000700 5f4c4148     L_Init.c....HAL_
     7d0:	4463664e 43617461 6b636568 0800632e     NfcDataCheck.c..
     7e0:	41480000 65445f4c 73745363 6f706552     ..HAL_DecStsRepo
     7f0:	632e7472 00000900 5f4c4148 65616d44     rt.c....HAL_Dmae
     800:	0a00632e 41480000 6f4e5f4c 6c616d72     .c....HAL_Normal
     810:	2e475344 000b0063 4c414800 636e455f     DSG.c....HAL_Enc
     820:	74706972 4d6e6f69 6c75646f 00632e65     riptionModule.c.
     830:	4800000c 475f4c41 2e4f4950 000d0063     ...HAL_GPIO.c...
     840:	4c414800 4547485f 0e00632e 41480000     .HAL_HGE.c....HA
     850:	49495f4c 00632e43 4800000f 545f4c41     L_IIC.c....HAL_T
     860:	65706d65 75746172 65536572 726f736e     emperatureSensor
     870:	0f00632e 41480000 6e495f4c 72726574     .c....HAL_Interr
     880:	2e747075 00100063 4c414800 70644c5f     upt.c....HAL_Ldp
     890:	676e4563 2e656e69 00110063 4c414800     cEngine.c....HAL
     8a0:	70644c5f 666f5363 63654474 1100632e     _LdpcSoftDec.c..
     8b0:	41480000 754d5f4c 4369746c 2e65726f     ..HAL_MultiCore.
     8c0:	00120063 4c414800 616c465f 72446873     c....HAL_FlashDr
     8d0:	72657669 69736142 00632e63 48000013     iverBasic.c....H
     8e0:	465f4c41 6873616c 76697244 78457265     AL_FlashDriverEx
     8f0:	00632e74 48000013 505f4c41 6d617261     t.c....HAL_Param
     900:	6c626154 00632e65 48000014 535f4c41     Table.c....HAL_S
     910:	63726165 676e4568 2e656e69 00150063     earchEngine.c...
     920:	4c414800 6d43485f 6d695464 632e7265     .HAL_HCmdTimer.c
     930:	00001600 5f4c4148 63617254 676f4c65     ....HAL_TraceLog
     940:	1700632e 61750000 632e7472 00001800     .c....uart.c....
     950:	5f4c4148 2e524f58 00190063 4c414800     HAL_XOR.c....HAL
     960:	6574585f 2e61736e 001a0063 456b4200     _Xtensa.c....BkE
     970:	545f646e 4d747365 2e6e6961 001b0063     nd_TestMain.c...
     980:	53455400 4d455f54 1c00632e 6c460000     .TEST_EM.c....Fl
     990:	44687361 65766972 65545f72 632e7473     ashDriver_Test.c
     9a0:	00001d00 54534554 4547485f 1e00632e     ....TEST_HGE.c..
     9b0:	45540000 4c5f5453 53637064 4474666f     ..TEST_LdpcSoftD
     9c0:	632e6365 00001f00 54534554 63664e5f     ec.c....TEST_Nfc
     9d0:	63656843 73694c6b 00632e74 54000020     CheckList.c. ..T
     9e0:	5f545345 5063664e 6f667265 6e616d72     EST_NfcPerforman
     9f0:	632e6563 00002000 54534554 63664e5f     ce.c. ..TEST_Nfc
     a00:	3255434d 2000632e 45540000 4e5f5453     MCU2.c. ..TEST_N
     a10:	61506366 2e517474 00210063 53455400     fcPattQ.c.!..TES
     a20:	664e5f54 74615063 73614274 6e496369     T_NfcPattBasicIn
     a30:	74726573 2100632e 45540000 4e5f5453     sert.c.!..TEST_N
     a40:	61506366 65477474 7361426e 632e6369     fcPattGenBasic.c
     a50:	00002100 54534554 63664e5f 636e7546     .!..TEST_NfcFunc
     a60:	69736142 00632e63 54000021 5f545345     Basic.c.!..TEST_
     a70:	4663664e 51444d43 2200632e 45540000     NfcFCMDQ.c."..TE
     a80:	4e5f5453 78456366 74614474 65684361     ST_NfcExtDataChe
     a90:	632e6b63 00002200 54534554 63664e5f     ck.c."..TEST_Nfc
     aa0:	74746150 456e6547 632e7478 00002200     PattGenExt.c."..
     ab0:	54534554 63664e5f 636e7546 2e747845     TEST_NfcFuncExt.
     ac0:	00220063 726f5800 535f7455 64656863     c."..XorUt_Sched
     ad0:	2e656c75 00230063 726f5800 435f7455     ule.c.#..XorUt_C
     ae0:	6f6d6d6f 00632e6e 58000023 7455726f     ommon.c.#..XorUt
     af0:	63664e5f 746e495f 61667265 632e6563     _Nfc_Interface.c
     b00:	00002300 55726f58 6f435f74 6769666e     .#..XorUt_Config
     b10:	2300632e 334c0000 4d564e5f 00632e65     .c.#..L3_NVMe.c.
     b20:	48000024 435f4c41 6e696168 6e69614d     $..HAL_ChainMain
     b30:	6e696174 2500632e 41480000 43485f4c     tain.c.%..HAL_HC
     b40:	00632e54 48000026 485f4c41 632e4753     T.c.&..HAL_HSG.c
     b50:	00002700 5f4c4148 65447748 2e677562     .'..HAL_HwDebug.
     b60:	00280063 4c414800 4547535f 2900632e     c.(..HAL_SGE.c.)
     b70:	41480000 6c465f4c 43687361 46706968     ..HAL_FlashChipF
     b80:	75746165 632e6572 00002a00 5f4c4148     eature.c.*..HAL_
     b90:	73616c46 646d4368 2a00632e 41480000     FlashCmd.c.*..HA
     ba0:	6c465f4c 53687361 4474666f 61506365     L_FlashSoftDecPa
     bb0:	632e6172 00002a00 54534554 63664e5f     ra.c.*..TEST_Nfc
     bc0:	73616c46 70795468 61644165 72657470     FlashTypeAdapter
     bd0:	2b00632e 04000000 0205002f 20000d7c     .c.+..../...|.. 
     be0:	01028503 00090703 4c040100 09039d03     ...........L....
     bf0:	03010004 00000902 09010301 03010009     ................
     c00:	0007096c 09020301 03010000 00090901     l...............
     c10:	034b0401 07097cb6 0c030100 01001009     ..K..|..........
     c20:	08090503 07030100 01000609 0b090103     ................
     c30:	7f030100 01000209 02090b03 79030100     ...............y
     c40:	01000209 06090103 03030100 01000309     ................
     c50:	e3031904 0002097e 034b0401 14090295     ....~.....K.....
     c60:	90030100 0002097f 097f0301 03010002     ................
     c70:	00020901 097f0301 03010003 00040901     ................
     c80:	00f00301 01000209 097ef903 03010008     ..........~.....
     c90:	11090184 03030100 01000609 10097603     .............v..
     ca0:	01030100 01001909 03090903 32040100     ...............2
     cb0:	097dda03 04010008 01be034b 01000309     ..}.....K.......
     cc0:	03090503 19040100 097ece03 04010011     ..........~.....
     cd0:	01b2034b 01000209 03091003 70030100     K..............p
     ce0:	01000309 0a090403 7f030100 01000309     ................
     cf0:	03097d03 07030100 01000609 03097903     .}...........y..
     d00:	07030100 01000209 04090103 7f030100     ................
     d10:	01000309 c7031904 0003097e 034b0401     ........~.....K.
     d20:	030901bf 4a040100 03094903 02030100     .......J.I......
     d30:	01000609 3b034b04 01000e09 bb031904     .....K.;........
     d40:	0002097e 034b0401 020901c5 02030100     ~.....K.........
     d50:	01000209 03097e03 19040100 097ebb03     .....~........~.
     d60:	04010006 01c9034b 01000e09 05090603     ....K...........
     d70:	4a040100 097fb903 03010003 00030902     ...J............
     d80:	034b0401 210900e3 03030100 01000a09     ..K....!........
     d90:	90031904 000b097e 034b0401 260901f2     ....~.....K....&
     da0:	04030100 01000309 02091f03 61030100     ...............a
     db0:	01000209 02090103 7f030100 01000209     ................
     dc0:	04090403 1b030100 01000609 04096703     .............g..
     dd0:	01030100 01000409 02097f03 19030100     ................
     de0:	01000209 f5034a04 0005097e 034b0401     .....J..~.....K.
     df0:	1109018b 6f030100 01000409 12091103     .......o........
     e00:	6f030100 01000209 07090103 10030100     ...o............
     e10:	01000309 097fbe03 03010005 00030903     ................
     e20:	09030301 03010002 0002097d 09030301     ........}.......
     e30:	03010002 0002097d 09030301 03010004     ....}...........
     e40:	0003097a 03200401 0003090a 034b0401     z..... .......K.
     e50:	00030915 03200401 0008096d 034b0401     ...... .m.....K.
     e60:	0005097d 03190401 02097ea4 4b040100     }........~.....K
     e70:	0901dc03 03010002 00020902 097e0301     ..............~.
     e80:	04010003 7ea40319 01000609 e0034b04     .......~.....K..
     e90:	000f0901 09060301 04010009 09770320     ............ .w.
     ea0:	03010003 00030902 03470401 1e097fa3     ..........G.....
     eb0:	03030100 01000b09 02097d03 03030100     .........}......
     ec0:	01000209 02097d03 03030100 01000209     .....}..........
     ed0:	03090203 01030100 01000509 03097f03     ................
     ee0:	01030100 01000309 097eea03 03010005     ..........~.....
     ef0:	0002097c 09040301 03010002 00030902     |...............
     f00:	09020301 04010007 09790332 04010008     ........2.y.....
     f10:	00e30348 01000309 0b090503 02030100     H...............
     f20:	01000309 09090103 7f030100 01000309     ................
     f30:	03090103 7f030100 01000209 05090103     ................
     f40:	47040100 06093203 06030100 01000209     ...G.2..........
     f50:	4c034804 01001109 06090103 47040100     .H.L...........G
     f60:	097f9a03 0301000b 00030904 097d0301     ..............}.
     f70:	03010002 00030903 09010301 04010006     ................
     f80:	03ad032a 01000309 d3034704 0006097c     *........G..|...
     f90:	032a0401 020903ad 47040100 097cd303     ..*........G..|.
     fa0:	04010005 03ad032a 01000309 71034c04     ....*........L.q
     fb0:	01000809 d0031904 0002097c 032a0401     ........|.....*.
     fc0:	050903bf 4c040100 03096d03 2a040100     .......L.m.....*
     fd0:	03091303 4c040100 03097103 19040100     .......L.q......
     fe0:	097cd003 04010003 03ac034c 01000609     ..|.....L.......
     ff0:	d4031904 0002097c 034c0401 070903ac     ....|.....L.....
    1000:	02030100 01000909 03097e03 01030100     .........~......
    1010:	01000309 06090103 02030100 01000609     ................
    1020:	f6034704 000d097d 7eeb0301 01000c09     .G..}......~....
    1030:	09019503 03010004 0002097c 09010301     ........|.......
    1040:	0301000a 00030903 097d0301 03010002     ..........}.....
    1050:	00080903 03480401 00070942 09010301     ......H.B.......
    1060:	03010009 0003097f 09010301 03010003     ................
    1070:	0002097f 09010301 04010005 08930308     ................
    1080:	01000609 00090403 7c030100 01000209     ...........|....
    1090:	1a090403 7c030100 01000309 05090403     .......|........
    10a0:	04030100 01000309 04097d03 01030100     .........}......
    10b0:	01000309 03097f03 01030100 01000309     ................
    10c0:	02097f03 01030100 01000409 03097f03     ................
    10d0:	03030100 01000409 02097e03 02030100     .........~......
    10e0:	01000209 03090303 7d030100 01000209     ...........}....
    10f0:	03090303 02030100 01000609 06090103     ................
    1100:	03030100 01001c09 13090c03 02030100     ................
    1110:	01000209 92030304 00030909 03080401     ................
    1120:	030976f2 7f030100 01000309 03097d03     .v...........}..
    1130:	01030100 01000309 03090103 7f030100     ................
    1140:	01000309 03090103 01030100 01000909     ................
    1150:	06090103 03040100 09098e03 0301000b     ................
    1160:	00030905 09050301 03010003 00060902     ................
    1170:	09010301 03010008 001a0975 09010301     ........u.......
    1180:	0301000c 0017090d 03080401 0f0976e2     .............v..
    1190:	01030100 01000309 05097903 02030100     .........y......
    11a0:	01000509 06097e03 03040100 09099b03     .....~..........
    11b0:	03010006 00080901 09080301 0401001b     ................
    11c0:	76ec0308 01002009 03097c03 04030100     ...v. ...|......
    11d0:	01000209 02097c03 04030100 01000609     .....|..........
    11e0:	06090a03 04030100 01000909 03097e03     .............~..
    11f0:	02030100 01000309 2d090403 4d040100     ...........-...M
    1200:	0977b303 04010012 08cd0308 01000209     ..w.............
    1210:	b3034d04 000c0977 09050301 0301000c     .M..w...........
    1220:	00060902 090a0301 0301000a 000c0902     ................
    1230:	09040301 0301000b 000b0909 09020301     ................
    1240:	03010006 000e095e 09050301 03010006     ....^...........
    1250:	00060902 090a0301 0301000a 00070924     ............$...
    1260:	03080401 020908a0 07030100 01000209     ................
    1270:	0e090403 7e030100 01000309 03090203     .......~........
    1280:	7c030100 01000309 02090403 7c030100     ...|...........|
    1290:	01000f09 03090403 02030100 01000e09     ................
    12a0:	05097703 4d040100 0977b803 03010015     .w.....M..w.....
    12b0:	00060902 09040301 0301000a 000c0909     ................
    12c0:	09020301 04010006 08b10308 01000909     ................
    12d0:	e4034d04 00090977 09020301 03010006     .M..w...........
    12e0:	000d090f 09020301 0301000b 00060901     ................
    12f0:	03080401 0c090897 77030100 01000309     ...........w....
    1300:	09096703 7e030100 01000609 03091b03     .g.....~........
    1310:	65030100 01000309 03090203 19030100     ...e............
    1320:	01001609 08097803 4d040100 0977ea03     .....x.....M..w.
    1330:	0301000a 00090902 03080401 110907e4     ................
    1340:	03040100 09099e03 04010005 76e20308     ...............v
    1350:	01000209 03090103 01030100 01000609     ................
    1360:	02090203 7e030100 01000309 03090103     .......~........
    1370:	01030100 01000509 06090103 03040100     ................
    1380:	09099903 03010008 00030905 09020301     ................
    1390:	03010003 00090901 097a0301 0301000d     ..........z.....
    13a0:	00080901 090d0301 04010009 76d70308     ...............v
    13b0:	01000e09 03090103 4d040100 09789803     ...........M..x.
    13c0:	03010005 00030902 09540301 03010009     ..........T.....
    13d0:	0005092c 09040301 04010005 118a0303     ,...............
    13e0:	01001709 85030804 001b0976 09030301     ........v.......
    13f0:	03010000 0a090392 ee030100 0006097c     ............|...
    1400:	03920301 01000209 097cf303 03010006     ..........|.....
    1410:	0002097b 09050301 03010002 00040962     {...........b...
    1420:	09030301 03010000 0a0903a8 d8030100     ................
    1430:	0006097c 03a80301 01000209 097cdd03     |.............|.
    1440:	03010006 0002097b 09050301 04010002     ....{...........
    1450:	79c3030e 01000409 11090403 01030100     ...y............
    1460:	01000509 03097f03 01030100 01000309     ................
    1470:	05090103 02030100 01000a09 08090403     ................
    1480:	75030100 01000b09 03090103 0a030100     ...u............
    1490:	01000309 02097e03 02030100 01000909     .....~..........
    14a0:	02097e03 02030100 01000809 f9030804     .~..............
    14b0:	00070905 09030301 0301000b 0002097d     ............}...
    14c0:	09030301 03010003 000c0902 097e0301     ..............~.
    14d0:	03010009 00020902 097e0301 03010003     ..........~.....
    14e0:	000f0905 09060301 0301000d 00060903     ................
    14f0:	09030301 03010007 0002097f 09010301     ................
    1500:	03010007 00050901 09510301 0301000c     ..........Q.....
    1510:	0002092d 09550301 03010003 000b0902     -.....U.........
    1520:	09040301 03010011 00120928 09020301     ........(.......
    1530:	03010003 0005097e 030e0401 030978ab     ....~........x..
    1540:	02030100 01000209 a5030804 000d0907     ................
    1550:	09320301 03010002 0004094c 09340301     ..2.....L.....4.
    1560:	03010002 0002094e 09320301 03010003     ....N.....2.....
    1570:	0009094e 09020301 04010006 78d7030e     N..............x
    1580:	01001209 e1030804 00040907 09680301     ..............h.
    1590:	0301000c 00090964 092d0301 03010011     ....d.....-.....
    15a0:	00110902 03310401 06097ae2 08040100     ......1..z......
    15b0:	09059e03 03010007 00130905 097b0301     ..............{.
    15c0:	03010002 000b0905 097b0301 03010002     ..........{.....
    15d0:	00060905 7efe0301 01000809 09094703     .......~.....G..
    15e0:	39030100 01000209 02094703 39030100     ...9.....G.....9
    15f0:	01000209 02094703 04030100 01000609     .....G..........
    1600:	fe032a04 0007090a 03080401 07097586     .*...........u..
    1610:	2a040100 090afa03 04010002 75820308     ...*...........u
    1620:	01000609 03090403 3c030100 01000209     ...........<....
    1630:	02094403 36030100 01000909 03093103     .D.....6.....1..
    1640:	51030100 01000209 04092f03 51030100     ...Q...../.....Q
    1650:	01000209 05092f03 55030100 01000709     ...../.....U....
    1660:	06090103 23030100 01000909 09090103     .......#........
    1670:	2a040100 090aaa03 0401000e 75b80308     ...*...........u
    1680:	01000709 c8032a04 0002090a 03080401     .....*..........
    1690:	08097590 ca030100 00030900 09020301     .u..............
    16a0:	03010007 000b0971 09020301 0301000d     ....q...........
    16b0:	000c0901 090c0301 03010003 0002097e     ............~...
    16c0:	7fb90301 01000209 0900c903 03010006     ................
    16d0:	02097fb7 c7030100 00060900 09020301     ................
    16e0:	03010005 00090960 097c0301 04010006     ....`.....|.....
    16f0:	79c0034d 01000209 c4030804 00020906     M..y............
    1700:	097c0301 03010003 00030904 09020301     ..|.............
    1710:	03010003 0003097a 034d0401 030979c0     ....z.....M..y..
    1720:	05030100 01000309 06090203 0a030100     ................
    1730:	01000809 0d090203 04030100 01000a09     ................
    1740:	08090903 02030100 01000909 a4030804     ................
    1750:	000a0906 09070301 03010003 00090901     ................
    1760:	097a0301 04010014 79eb034d 01000c09     ..z.....M..y....
    1770:	03090403 02030100 01000609 10090f03     ................
    1780:	02030100 01000509 06090103 6a030100     ...............j
    1790:	01002209 93030804 00020906 09010301     ."..............
    17a0:	04010007 79ea034d 01000309 03090403     ....M..y........
    17b0:	02030100 01000309 10090f03 02030100     ................
    17c0:	01000609 06090103 6a030100 01001409     ...........j....
    17d0:	94030804 00020906 034d0401 0e0979f2     ..........M..y..
    17e0:	02030100 01000309 15097e03 02030100     .........~......
    17f0:	01000309 14090203 02030100 01000309     ................
    1800:	0a097e03 02030100 01000309 0e090403     .~..............
    1810:	7c030100 01001709 05090403 08040100     ...|............
    1820:	0908af03 04010017 79dd032a 01000009     ........*..y....
    1830:	a6030804 00030906 097e0301 03010004     ..........~.....
    1840:	00020902 097e0301 03010003 00030902     ......~.........
    1850:	032a0401 030979da 08040100 0906a603     ..*..y..........
    1860:	04010003 79da032a 01000209 a7030804     ....*..y........
    1870:	00130906 032a0401 020979d9 08040100     ......*..y......
    1880:	0906a703 03010003 00080902 031f0401     ................
    1890:	05097ae5 32040100 097bb603 04010011     .z.....2..{.....
    18a0:	00d10329 01000609 09090203 04030100     )...............
    18b0:	01000e09 0a090303 1f040100 0903f703     ................
    18c0:	03010006 00030902 09140301 03010002     ................
    18d0:	0e097b82 32040100 12091703 1f040100     .{.....2........
    18e0:	0901f603 0301000b 000f0919 09400301     ..............@.
    18f0:	03010007 00110902 093e0301 03010006     ..........>.....
    1900:	05097ddf 29040100 0900c803 0401000f     .}.....)........
    1910:	04a7031f 01000309 02090a03 29040100     ...............)
    1920:	097bcf03 04010002 04b1031f 01000309     ..{.............
    1930:	097d9203 0301000c 00070956 09020301     ..}.....V.......
    1940:	03010011 00050928 7df50301 01000509     ....(......}....
    1950:	c8032904 000f0900 031f0401 030904a7     .)..............
    1960:	0a030100 01000209 cf032904 0002097b     .........)..{...
    1970:	031f0401 030904b1 72030100 01000c09     ...........r....
    1980:	097cac03 03010006 00090904 09020301     ..|.............
    1990:	03010009 00030901 7fac0301 01000309     ................
    19a0:	0904b203 03010003 03097cab d5030100     .........|......
    19b0:	00030903 09020301 03010015 000f0901     ................
    19c0:	09010301 03010006 00180901 7bd80301     ...............{
    19d0:	01002709 08090103 a9030100 000d0904     .'..............
    19e0:	7be10301 01000609 09049f03 0301000b     ...{............
    19f0:	05097be1 a1030100 00060904 7dc30301     .{.............}
    1a00:	01001809 09090203 7e030100 01000609     ...........~....
    1a10:	09090203 b6030100 0007097d 03290401     ........}.....).
    1a20:	0f0900c8 1f040100 0904ca03 03010003     ................
    1a30:	00020967 03290401 02097bcf 1f040100     g.....)..{......
    1a40:	0904b103 03010003 0b097d9d 4b030100     .........}.....K
    1a50:	01000809 17090203 33030100 01000309     ...........3....
    1a60:	097dea03 04010005 00c80329 01000f09     ..}.....).......
    1a70:	a7031f04 00030904 090a0301 04010002     ................
    1a80:	7bcf0329 01000209 b1031f04 00030904     )..{............
    1a90:	7ca50301 01000c09 06090903 02030100     ...|............
    1aa0:	01000609 03090103 7f030100 01000209     ................
    1ab0:	02090103 d6030100 0005097e 03290401     ........~.....).
    1ac0:	0f0900c8 1f040100 0904b103 04010003     ................
    1ad0:	7bcf0329 01000409 b1031f04 00030904     )..{............
    1ae0:	7bdc0301 01000b09 02090103 d6030100     ...{............
    1af0:	00030900 090c0301 03010003 00030902     ................
    1b00:	09010301 03010003 0002097f 09010301     ................
    1b10:	03010002 03097f92 f0030100 00070900     ................
    1b20:	09020301 03010003 00030901 097f0301     ................
    1b30:	03010002 05097f92 01030100 01000209     ................
    1b40:	0900da03 04010005 02c60332 01000709     ........2.......
    1b50:	08090403 60030100 01001509 de031f04     .......`........
    1b60:	000e097d 09010301 03010003 0002097f     }...............
    1b70:	09010301 04010002 09340303 03010003     ..........4.....
    1b80:	00000900 09060301 03010002 00320902     ..............2.
    1b90:	030e0401 04097e9a 01030100 01000009     .....~..........
    1ba0:	11090103 02030100 01000309 08090103     ................
    1bb0:	7c030100 01000409 04090103 31040100     ...|...........1
    1bc0:	0901bd03 03010004 00000901 09020301     ................
    1bd0:	03010003 00090901 09050301 03010003     ................
    1be0:	001b0901 09040301 03010014 000f0901     ................
    1bf0:	09030301 0301000d 00100902 096d0301     ..............m.
    1c00:	03010002 00040902 09010301 03010004     ................
    1c10:	04097f93 01030100 01000609 18090303     ................
    1c20:	20030100 01000209 09097703 09030100     ... .....w......
    1c30:	01000409 0b090203 7e030100 01001009     ...........~....
    1c40:	07092203 bb030100 0002097f 09030301     ."..............
    1c50:	03010003 00040924 09070301 0301000f     ....$...........
    1c60:	00020979 09100301 03010005 00060902     y...............
    1c70:	097e0301 03010003 00020978 09080301     ..~.....x.......
    1c80:	03010002 00030902 09030301 0301000d     ................
    1c90:	00130901 09040301 0301000f 00130901     ................
    1ca0:	09030301 03010013 00020951 09150301     ........Q.......
    1cb0:	04010007 097d0347 03010008 00120903     ....G.}.........
    1cc0:	097d0301 03010006 00030903 09020301     ..}.............
    1cd0:	04010003 02bf032a 01000909 a8034c04     ....*........L..
    1ce0:	0013097f 097e0301 04010003 00da032a     ......~.....*...
    1cf0:	01000209 a6034c04 0003097f 032a0401     .....L........*.
    1d00:	030900da 4c040100 097fa603 03010003     .......L........
    1d10:	00090902 09060301 03010003 000b0901     ................
    1d20:	03080401 03097f9a 0d030100 01000d09     ................
    1d30:	03090203 0a030100 01001009 e6034704     .............G..
    1d40:	0002097e 03080401 06090196 04030100     ~...............
    1d50:	01000209 e6034704 0007097e 03080401     .....G..~.......
    1d60:	0209019a 47040100 097ee603 04010002     .......G..~.....
    1d70:	019a0308 01000709 e6034704 0002097e     .........G..~...
    1d80:	03080401 0609019a 47040100 097ee603     ...........G..~.
    1d90:	04010004 019a0308 01000209 e6034704     .............G..
    1da0:	0005097e 034c0401 070901e0 0c030100     ~.....L.........
    1db0:	01000609 0e090103 02030100 01000909     ................
    1dc0:	09090103 04030100 01000e09 0c090203     ................
    1dd0:	47040100 097dad03 0301000a 00040902     ...G..}.........
    1de0:	097e0301 03010002 00030902 00db0301     ..~.............
    1df0:	01000309 097faa03 0301000f 000c090d     ................
    1e00:	09030301 04010006 02950348 01001109     ........H.......
    1e10:	09090303 02030100 01000309 f6034704     .............G..
    1e20:	0014097d 034a0401 070900f7 47040100     }.....J........G
    1e30:	097f8903 04010003 00f7034a 01000309     ........J.......
    1e40:	17090103 01030100 01000d09 8c034704     .............G..
    1e50:	001c097f 096b0301 04010003 02c30348     ......k.....H...
    1e60:	01001109 bf034704 000e097d 034a0401     .....G..}.....J.
    1e70:	00030962 09030301 04010006 09240347     b...........G.$.
    1e80:	0301000e 00060904 03480401 030901c7     ..........H.....
    1e90:	02030100 01000209 03097e03 02030100     .........~......
    1ea0:	01000609 10090103 1a040100 097dd703     ..............}.
    1eb0:	04010009 01ab034a 01000209 d5031a04     ....J...........
    1ec0:	0005097e 03480401 030902a9 4a040100     ~.....H........J
    1ed0:	097f8203 04010003 7ed5031a 01000209     ...........~....
    1ee0:	03090203 04030100 01000509 a5034a04     .............J..
    1ef0:	000a0901 03480401 0c0901af 59030100     ......H........Y
    1f00:	01000609 02092703 5a030100 01000209     .....'.....Z....
    1f10:	02090103 7e030100 01000209 02090203     .......~........
    1f20:	02030100 01000509 03090603 03030100     ................
    1f30:	01000909 03090303 7f030100 01000309     ................
    1f40:	05090203 7f030100 01000209 02090103     ................
    1f50:	7f030100 01000309 05090103 10030100     ................
    1f60:	01000909 02090403 7c030100 01000309     ...........|....
    1f70:	06090403 02030100 01000309 09090303     ................
    1f80:	7f030100 01000509 02090103 7f030100     ................
    1f90:	01000309 04090103 02030100 01000e09     ................
    1fa0:	09090903 06030100 01000309 11094b03     .............K..
    1fb0:	07030100 01000809 03090903 7f030100     ................
    1fc0:	01000309 05090103 02030100 01000209     ................
    1fd0:	02097e03 02030100 01000a09 09090203     .~..............
    1fe0:	01030100 01000309 05097f03 01030100     ................
    1ff0:	01000509 c4033204 0008097d 03290401     .....2..}.....).
    2000:	030900d1 02030100 01000909 09090403     ................
    2010:	03030100 01000909 06091d03 4a040100     ...............J
    2020:	03096903 08030100 01000b09 02097803     .i...........x..
    2030:	02030100 01000309 16090503 1b030100     ................
    2040:	01000609 b4032904 0016097f 03470401     .....)........G.
    2050:	0008090e 034a0401 290900d7 48040100     ......J....)...H
    2060:	09018803 0301000c 0005097f 097f0301     ................
    2070:	03010004 00050901 097f0301 03010003     ................
    2080:	00060901 097f0301 03010006 00060901     ................
    2090:	097f0301 03010006 00060901 09010301     ................
    20a0:	04010008 7ef8034a 01004009 90034804     ....J..~.@...H..
    20b0:	000a0901 09030301 0301001b 00060903     ................
    20c0:	097f0301 03010005 00180902 097f0301     ................
    20d0:	03010002 00020901 097f0301 03010003     ................
    20e0:	00050901 09140301 03010007 0005097c     ............|...
    20f0:	09040301 03010024 00030902 03470401     ....$.........G.
    2100:	0c097e96 7b030100 01000209 04097e03     .~.....{.....~..
    2110:	02030100 01000609 03097f03 01030100     ................
    2120:	01000609 07090103 02030100 01000309     ................
    2130:	02097e03 02030100 01000309 05090203     .~..............
    2140:	60030100 01000309 0900c603 0401000d     ...`............
    2150:	01a30348 01002209 1b090703 09030100     H...."..........
    2160:	01000609 05097f03 03030100 01000f09     ................
    2170:	02097d03 01030100 01000909 02090203     .}..............
    2180:	7e030100 01000309 0a090203 02030100     ...~............
    2190:	01000909 03090103 7f030100 01000509     ................
    21a0:	05090103 08040100 0e094d03 47040100     .........M.....G
    21b0:	097efb03 04010007 01f6034c 01000f09     ..~.....L.......
    21c0:	94030804 0010097f 09150301 03010002     ................
    21d0:	0003096b 091c0301 0301000d 00040903     k...............
    21e0:	097d0301 03010002 00090905 034a0401     ..}...........J.
    21f0:	0f097df3 32040100 0c095e03 29040100     .}.....2.^.....)
    2200:	0900d103 03010003 00090902 09040301     ................
    2210:	03010009 00090903 091d0301 04010006     ................
    2220:	0969034a 03010003 000e0902 09060301     J.i.............
    2230:	03010017 0002097f 091b0301 04010006     ................
    2240:	7fb40329 01001609 7a034704 01000809     )........G.z....
    2250:	03090a03 7c030100 01000509 03097f03     .......|........
    2260:	03030100 01000309 0d090103 01030100     ................
    2270:	01000209 03097f03 01030100 01000809     ................
    2280:	02090103 7f030100 01000209 06090103     ................
    2290:	08040100 0901e303 04010008 7ee60347     ............G..~
    22a0:	01000209 9a030804 00060901 09780301     ..............x.
    22b0:	03010004 00070908 03470401 05097ee6     ..........G..~..
    22c0:	0e040100 097fb603 03010009 00030902     ................
    22d0:	03080401 0a0902c6 d6030100 0010097e     ............~...
    22e0:	00e50301 01000209 03090303 01030100     ................
    22f0:	01000e09 0b090503 7c030100 01000309     ...........|....
    2300:	02090203 7e030100 01000209 03090203     .......~........
    2310:	7e030100 01000509 ac032004 0002097f     ...~..... ......
    2320:	03080401 030900d4 01030100 01000309     ................
    2330:	ab032004 000a097f 09020301 04010006     . ..............
    2340:	00da0308 01000509 b3031904 0003097d     ............}...
    2350:	03080401 0a0902cd 04030100 01000209     ................
    2360:	03097c03 04030100 01000209 03097c03     .|...........|..
    2370:	02030100 01001b09 03097f03 7f030100     ................
    2380:	01000209 02090103 01030100 01000909     ................
    2390:	08090203 20040100 03094c03 01030100     ....... .L......
    23a0:	01001409 0d090103 08040100 16093503     .............5..
    23b0:	5e030100 01000509 09090303 7f030100     ...^............
    23c0:	01000309 02090103 7f030100 01000209     ................
    23d0:	097fa003 03010003 000c0902 09030301     ................
    23e0:	03010014 00060908 09030301 03010007     ................
    23f0:	00110903 09050301 03010002 030900cb     ................
    2400:	02030100 01001b09 19090203 20040100     ............... 
    2410:	097fb803 04010008 7f940347 01001809     ........G.......
    2420:	ab030804 00080901 03470401 02097ed5     ..........G..~..
    2430:	08040100 0901ab03 04010002 7ed50347     ............G..~
    2440:	01000309 d1030804 00160901 03200401     .............. .
    2450:	000b0945 09010301 03010014 000d0901     E...............
    2460:	03080401 0016093b 7f8d0301 01000a09     ....;...........
    2470:	08097f03 01030100 01000509 d6030e04     ................
    2480:	000f097e 032a0401 04090382 47040100     ~.....*........G
    2490:	097da403 04010003 02dc032a 01000309     ..}.....*.......
    24a0:	a8034c04 0013097f 097e0301 04010003     .L........~.....
    24b0:	00da032a 01000209 a6034c04 0003097f     *........L......
    24c0:	032a0401 030900da 4c040100 097fa603     ..*........L....
    24d0:	03010003 000b0902 09060301 03010006     ................
    24e0:	000e0901 034a0401 03097dba 47040100     ......J..}.....G
    24f0:	08090b03 d4030100 00020900 03080401     ................
    2500:	1109028a 04030100 01000609 09097f03     ................
    2510:	01030100 01000609 05090103 20040100     ............... 
    2520:	097edb03 04010002 01a50308 01000309     ..~.............
    2530:	09090103 03030100 01000209 03097d03     .............}..
    2540:	01030100 01000809 d9032004 000a097e     ......... ..~...
    2550:	09020301 04010006 01ad0308 01000809     ................
    2560:	e0031904 0003097c 03080401 0a09039e     ....|...........
    2570:	04030100 01000e09 03097d03 03030100     .........}......
    2580:	01000209 03097d03 7f030100 01000309     .....}..........
    2590:	16090103 03030100 01000309 03097d03     .............}..
    25a0:	01030100 01000309 05090203 20040100     ............... 
    25b0:	097efb03 03010009 00140901 09010301     ..~.............
    25c0:	0401000d 01860308 01001609 05096003     .............`..
    25d0:	02030100 01000909 03090103 02030100     ................
    25e0:	01001509 05090203 20040100 097ee703     ........... ..~.
    25f0:	0401000e 01be0308 01000c09 ec032004     ............. ..
    2600:	000b097e 09010301 03010014 000d0901     ~...............
    2610:	03080401 16090194 4c040100 097fb403     ...........L....
    2620:	0301000a 0006090c 09010301 0301000e     ................
    2630:	00040902 09010301 03010006 00060904     ................
    2640:	09020301 04010009 7de60347 01000f09     ........G..}....
    2650:	c5030804 000c0901 09040301 0301000b     ................
    2660:	00060901 034c0401 080900d0 0e040100     ......L.........
    2670:	097dc203 04010010 09260320 04010008     ..}..... .&.....
    2680:	01fb0308 01000909 85032004 0003097e     ......... ..~...
    2690:	7fb80301 01000309 0900cf03 03010006     ................
    26a0:	04097faf 02030100 01000309 03097e03     .............~..
    26b0:	02030100 01000309 0900ce03 03010003     ................
    26c0:	03097fb2 c8030100 00070900 03320401     ..............2.
    26d0:	04097f9e 29040100 0900d103 03010003     .......)........
    26e0:	00090902 09040301 03010009 00060903     ................
    26f0:	091d0301 04010006 09360320 03010003     ........ .6.....
    2700:	000e0902 7ee00301 01000309 02097e03     .......~.....~..
    2710:	a2030100 00030901 7ede0301 01000309     ...........~....
    2720:	0901a203 03010003 02097ede a2030100     .........~......
    2730:	00030901 7ede0301 01000309 0901a203     .......~........
    2740:	03010003 03097ee0 7e030100 01000209     .....~.....~....
    2750:	03090203 32040100 06097103 29040100     .......2.q.....)
    2760:	0900d103 03010003 00090902 09040301     ................
    2770:	0301000c 00060903 091d0301 04010006     ................
    2780:	00db0320 01000309 e4032904 001c097e      ........)..~...
    2790:	03080401 0b0902a7 29040100 097dd903     ...........)..}.
    27a0:	04010002 02a70308 01000309 91032004     ............. ..
    27b0:	0003097f 03080401 030900f6 7e030100     ...............~
    27c0:	01000209 14090103 03030100 01000609     ................
    27d0:	03097e03 20040100 097f8a03 03010005     .~..... ........
    27e0:	00060902 03190401 09097e8d 08040100     .........~......
    27f0:	0902ec03 0301000a 000a0901 09040301     ................
    2800:	03010002 0003097f 097d0301 03010002     ..........}.....
    2810:	00060903 097d0301 03010006 00060903     ......}.........
    2820:	09010301 03010003 0005097c 09040301     ........|.......
    2830:	04010007 7fac0320 01000309 14090103     .... ...........
    2840:	01030100 01000d09 16095203 02030100     .........R......
    2850:	01000909 8d031904 0008097e 03080401     ........~.......
    2860:	0a0902f8 01030100 01000909 5f033104     .............1._
    2870:	01000609 21030804 01000609 14090403     .......!........
    2880:	7e030100 01000309 05097e03 02030100     ...~.....~......
    2890:	01000a09 03097e03 02030100 01000409     .....~..........
    28a0:	02090103 7d030100 01000809 03090403     .......}........
    28b0:	7c030100 01000309 02090403 7c030100     ...|...........|
    28c0:	01000209 a4032004 0005097f 09010301     ..... ..........
    28d0:	03010014 000d0901 03470401 14097ee8     ..........G..~..
    28e0:	20040100 09019803 04010006 00e20308     ... ............
    28f0:	01000209 86034704 0002097e 03080401     .....G..~.......
    2900:	020901fa 47040100 097e8603 04010005     .......G..~.....
    2910:	01fa0308 01000209 86034704 0003097e     .........G..~...
    2920:	03080401 050901a1 47040100 097edf03     ...........G..~.
    2930:	04010002 01e50308 01001109 87032004     ............. ..
    2940:	0004097f 03310401 110900e5 20040100     ......1........ 
    2950:	097f9b03 04010003 7ee5030e 01001409     ...........~....
    2960:	0c090103 01030100 01000309 02090203     ................
    2970:	7e030100 01000209 05090303 7f030100     ...~............
    2980:	01000209 03090103 01030100 01000309     ................
    2990:	03097f03 01030100 01000209 0e090103     ................
    29a0:	02030100 01000409 08090803 01030100     ................
    29b0:	01000d09 09090503 02030100 01001709     ................
    29c0:	0e090103 31040100 0901c103 03010012     .......1........
    29d0:	00080902 09010301 0401001d 7ec3030e     ...............~
    29e0:	01001709 05096d03 7d030100 01000209     .....m.....}....
    29f0:	04091c03 64030100 01000209 05091c03     .......d........
    2a00:	5a030100 01000709 03090503 7c030100     ...Z...........|
    2a10:	01000409 04091003 15030100 01000409     ................
    2a20:	0c096403 03030100 01000409 02097d03     .d...........}..
    2a30:	1c030100 01000509 09097303 31040100     .........s.....1
    2a40:	0901c103 04010004 7def030e 01000409     ...........}....
    2a50:	02090303 03030100 01000a09 07090103     ................
    2a60:	07030100 01000609 02090603 6d030100     ...............m
    2a70:	01000209 03091303 73030100 01000409     ...........s....
    2a80:	04092003 03030100 01000b09 07090103     . ..............
    2a90:	72030100 01000609 0d091303 02030100     ...r............
    2aa0:	01000209 09097603 03030100 01000409     .....v..........
    2ab0:	05090303 04030100 01000309 ac030804     ................
    2ac0:	000c090b 09010301 03010000 00020902     ................
    2ad0:	097e0301 03010002 00030902 03070401     ..~.............
    2ae0:	060976bd 08040100 0909c503 04010003     .v..............
    2af0:	76bb0307 01000309 c5030804 00030909     ...v............
    2b00:	03070401 030976bb 08040100 0909c503     .....v..........
    2b10:	04010006 76bb0307 01000309 c8030804     .......v........
    2b20:	000a0909 03070401 040976b9 02030100     .........v......
    2b30:	01000309 82030904 0013097f 01930301     ................
    2b40:	01000f09 b0030804 00120909 03090401     ................
    2b50:	020975d2 08040100 090aae03 0301000f     .u..............
    2b60:	04097f91 b4030100 000f097b 032a0401     ........{.....*.
    2b70:	02097cf2 08040100 09038e03 03010003     .|..............
    2b80:	030904cc 2a040100 0978a603 04010003     .......*..x.....
    2b90:	038f0308 01001309 f1032a04 0003097c     .........*..|...
    2ba0:	03080401 0309038f 1f040100 097c8903     ..............|.
    2bb0:	03010008 050902cc 01030100 01000a09     ................
    2bc0:	06090503 03030100 01000409 05090203     ................
    2bd0:	32040100 097ad503 04010003 05b4031f     ...2..z.........
    2be0:	01000309 cc033204 000d097a 031f0401     .....2..z.......
    2bf0:	030905b4 05030100 01000d09 02097f03     ................
    2c00:	71030100 01000309 f2030804 00030905     ...q............
    2c10:	7eda0301 01000509 0901a603 03010002     ...~............
    2c20:	02097eda a6030100 00020901 7edc0301     .~.............~
    2c30:	01000309 0901a403 03010003 03097edc     .............~..
    2c40:	18030100 01000f09 06090203 02030100     ................
    2c50:	01000809 09090203 07030100 01000809     ................
    2c60:	02090203 02030100 01000c09 0d097703     .............w..
    2c70:	02030100 01001009 0c090c03 04030100     ................
    2c80:	01000d09 02097e03 02030100 01000309     .....~..........
    2c90:	03097f03 01030100 01000209 03097f03     ................
    2ca0:	7f030100 01000209 02090103 7f030100     ................
    2cb0:	01000309 05090103 01030100 01000209     ................
    2cc0:	09090103 7f030100 01000309 15090403     ................
    2cd0:	04030100 01000809 02097f03 7f030100     ................
    2ce0:	01000209 05090103 7f030100 01000209     ................
    2cf0:	03090103 02030100 01000309 02097e03     .............~..
    2d00:	7f030100 01000209 02090203 01030100     ................
    2d10:	01000a09 03097f03 04030100 01000609     ................
    2d20:	16090203 02030100 01000309 07091203     ................
    2d30:	07030100 01000f09 03090203 01030100     ................
    2d40:	01000609 0c097f03 05030100 01000509     ................
    2d50:	0900ce03 03010007 11097ed2 01030100     .........~......
    2d60:	01000509 08090103 02030100 01000409     ................
    2d70:	02097e03 02030100 01000509 02090103     .~..............
    2d80:	7f030100 01000209 02090103 7f030100     ................
    2d90:	01000309 03090303 02030100 01000609     ................
    2da0:	12090203 75030100 01000709 04091103     .......u........
    2db0:	01030100 01000609 08090203 c0030100     ................
    2dc0:	000c0900 09010301 03010005 0011097f     ................
    2dd0:	7fbd0301 01000409 03090103 6f030100     ...............o
    2de0:	01000509 097cb903 03010004 0b097dfc     ......|......}..
    2df0:	84030100 00020902 7dfe0301 01000209     ...........}....
    2e00:	02097e03 02030100 01000209 09090703     .~..............
    2e10:	02030100 01000a09 09093f03 01030100     .........?......
    2e20:	01000909 08093f03 7c030100 01000409     .....?.....|....
    2e30:	02090403 7d030100 01000309 05097f03     .......}........
    2e40:	04030100 01000309 07090103 57030100     ...............W
    2e50:	01000309 06097e03 02030100 01000309     .....~..........
    2e60:	26092903 03030100 01000b09 03090203     .).&............
    2e70:	d7030100 00140900 09010301 03010008     ................
    2e80:	00090921 09640301 03010004 0002097f     !.....d.........
    2e90:	09010301 03010003 0003091c 09640301     ..............d.
    2ea0:	03010002 0002091c 7ed90301 01000909     ...........~....
    2eb0:	02092c03 fb030100 0008097e 097b0301     .,......~.....{.
    2ec0:	03010004 00080901 093f0301 03010014     ..........?.....
    2ed0:	00080902 7fbe0301 01000409 06090d03     ................
    2ee0:	5f030100 01000509 0e092403 44030100     ..._.....$.....D
    2ef0:	01000b09 03097e03 02030100 01000509     .....~..........
    2f00:	03090203 01030100 01000609 0900c703     ................
    2f10:	03010008 00030902 097e0301 03010002     ..........~.....
    2f20:	0f0901e7 59030100 01000609 02090b03     .......Y........
    2f30:	76030100 01000209 03090a03 7f030100     ...v............
    2f40:	01000309 03090103 1c030100 01000209     ................
    2f50:	097fbe03 0301001e 00060907 093b0301     ..............;.
    2f60:	03010006 04097fa5 3f030100 01000309     ...........?....
    2f70:	02097f03 01030100 01000309 05091c03     ................
    2f80:	8b030100 0009097f 00f50301 01001709     ................
    2f90:	097f9803 03010004 060900cc bb030100     ................
    2fa0:	0002097f 00c50301 01000209 097fb403     ................
    2fb0:	03010003 060900cc 7f030100 01000209     ................
    2fc0:	03091d03 4c030100 01000909 10090603     .......L........
    2fd0:	2e030100 01000709 02096303 72030100     .........c.....r
    2fe0:	01000309 03090f03 1c030100 01000209     ................
    2ff0:	02096403 1c030100 01000509 0a094003     .d...........@..
    3000:	69030100 01001009 03090203 03030100     ...i............
    3010:	01000609 05090703 01030100 01000209     ................
    3020:	0900ca03 03010005 04097f8f d5030100     ................
    3030:	00060900 7fbb0301 01000209 0900c503     ................
    3040:	03010002 03097fab d5030100 00060900     ................
    3050:	097f0301 03010002 0003091d 094e0301     ..............N.
    3060:	03010009 000a096d 09750301 03010010     ....m.....u.....
    3070:	00080975 7de60301 01000c09 07090303     u......}........
    3080:	7d030100 01000209 02090303 7d030100     ...}...........}
    3090:	01000209 02090303 07030100 01000909     ................
    30a0:	03090203 01030100 01000909 0c097a03     .............z..
    30b0:	2a030100 01000209 09096003 08030100     ...*.....`......
    30c0:	01000909 0f090203 02030100 01000709     ................
    30d0:	cf030904 0005097d 03080401 190902b2     ....}...........
    30e0:	02030100 01000309 0a090303 0e030100     ................
    30f0:	01000209 09097603 01030100 01000909     .....v..........
    3100:	03090203 09040100 097dc203 04010006     ..........}.....
    3110:	02bf0308 01001b09 03090203 04030100     ................
    3120:	01000c09 18095b03 79030100 01000409     .....[.....y....
    3130:	08090103 7f030100 01001409 04090803     ................
    3140:	06030100 01000409 08090203 09040100     ................
    3150:	097dfb03 0301000c 00000904 09020301     ..}.............
    3160:	04010024 18b60303 01000409 00090103     $...............
    3170:	0f040100 0967bf03 04010010 094b0317     ......g.......K.
    3180:	04010011 0935030f 04010003 094b0317     ......5.......K.
    3190:	04010003 0935030f 04010003 094b0317     ......5.......K.
    31a0:	03010002 00150901 09050301 0301001d     ................
    31b0:	0003097d 09030301 03010003 000f0903     }...............
    31c0:	09010301 03010003 00030918 030f0401     ................
    31d0:	00030915 03170401 00090976 097e0301     ........v.....~.
    31e0:	03010003 00030901 09010301 03010006     ................
    31f0:	00090901 09010301 03010009 00030903     ................
    3200:	030f0401 000c0908 03170401 0004097c     ............|...
    3210:	097f0301 03010003 00030901 097f0301     ................
    3220:	03010002 00050901 030f0401 00090901     ................
    3230:	09030301 03010002 0002097d 09030301     ........}.......
    3240:	04010012 09540317 03010007 00060902     ......T.........
    3250:	09010301 03010006 000c0901 09020301     ................
    3260:	0301000f 00060902 09010301 03010003     ................
    3270:	000c0901 090d0301 0301000f 0003097f     ................
    3280:	09020301 03010003 00030901 09750301     ..............u.
    3290:	0301000b 00090901 096b0301 0401000f     ..........k.....
    32a0:	00c0030f 01001809 00090503 53030100     ...............S
    32b0:	01001409 a1031704 000c097f 030f0401     ................
    32c0:	030900df 17040100 097fa103 04010003     ................
    32d0:	00df030f 01000309 a7031704 0008097f     ................
    32e0:	09020301 03010006 001d0901 09030301     ................
    32f0:	0301000e 00060908 09780301 03010003     ..........x.....
    3300:	00030902 09010301 03010003 00070904     ................
    3310:	09010301 03010006 000c0901 09040301     ................
    3320:	0301000c 0003090b 09750301 03010003     ..........u.....
    3330:	00030909 09010301 03010003 00060901     ................
    3340:	09010301 03010009 00090901 09050301     ................
    3350:	03010003 0003097f 09010301 03010003     ................
    3360:	0002097f 09010301 04010006 093b030f     ..............;.
    3370:	03010006 0006097d 09030301 0401001b     ....}...........
    3380:	7f9b0317 01000b09 08091b03 7f030100     ................
    3390:	01000309 03090203 01030100 01000309     ................
    33a0:	74030f04 01000a09 2d031704 01001109     ...t.......-....
    33b0:	53030f04 01000309 2d031704 01000309     ...S.......-....
    33c0:	53030f04 01000309 2d031704 01000209     ...S.......-....
    33d0:	15090103 05030100 01001d09 03097d03     .............}..
    33e0:	03030100 01000309 0f090303 01030100     ................
    33f0:	01000309 03091803 0b030100 01000309     ................
    3400:	09097e03 01030100 01000309 06090103     .~..............
    3410:	01030100 01000c09 09090103 03030100     ................
    3420:	01000309 a6030f04 000c097f 03170401     ................
    3430:	060900de 7f030100 01000309 03090103     ................
    3440:	7f030100 01000209 05090103 0f040100     ................
    3450:	097f9f03 03010009 00140903 03170401     ................
    3460:	00070936 09020301 03010006 00060901     6...............
    3470:	09010301 0301000c 000f0902 09020301     ................
    3480:	03010006 00030901 09010301 0301000c     ................
    3490:	000f090d 097f0301 03010003 00030902     ................
    34a0:	09010301 03010003 000b0975 09010301     ........u.......
    34b0:	03010009 000f096b 030f0401 0018095e     ....k.......^...
    34c0:	09070301 04010000 03bc0307 01001c09     ................
    34d0:	00090703 79030100 01000509 02090403     .......y........
    34e0:	7c030100 01000609 05090403 19040100     ...|............
    34f0:	097bb403 04010006 04cc0307 01000209     ..{.............
    3500:	b6031904 0007097b 03070401 0b0904d0     ....{...........
    3510:	7c030100 01000209 03090103 03030100     ...|............
    3520:	01000209 02097d03 01030100 01000309     .....}..........
    3530:	08090203 0f040100 097c8b03 04010008     ..........|.....
    3540:	09030317 0401000c 097d030f 04010003     ..........}.....
    3550:	09030317 04010003 097d030f 04010003     ..........}.....
    3560:	09090317 03010008 00060902 09010301     ................
    3570:	0301001d 000e0903 09080301 03010006     ................
    3580:	00030978 09020301 03010003 00030901     x...............
    3590:	09040301 03010007 00060901 09010301     ................
    35a0:	0301000c 000c0904 090b0301 03010003     ................
    35b0:	00030975 09090301 03010003 00030901     u...............
    35c0:	09010301 03010006 00090901 09010301     ................
    35d0:	03010009 00030905 097f0301 03010003     ................
    35e0:	00030901 097f0301 03010002 00050901     ................
    35f0:	030f0401 00060959 097d0301 03010003     ....Y.....}.....
    3600:	00030903 097d0301 03010003 00150903     ......}.........
    3610:	03170401 000b097d 091b0301 03010008     ....}...........
    3620:	0003097f 09020301 03010003 00030901     ................
    3630:	030f0401 0a0900fc 01030100 01000009     ................
    3640:	097f9f03 0301000c 00000901 03050401     ................
    3650:	000c092d 09030301 03010018 00060907     -...............
    3660:	09040301 03010016 00050905 09060301     ................
    3670:	0301000b 00050906 09060301 04010008     ................
    3680:	7e91032d 01000309 ef030504 00030901     -..~............
    3690:	03320401 05097e98 29040100 0900d103     ..2..~.....)....
    36a0:	03010003 00090902 09040301 03010009     ................
    36b0:	00060903 091d0301 04010009 7f83032d     ............-...
    36c0:	01000309 02097f03 01030100 01000309     ................
    36d0:	08090a03 03030100 01001209 2f032904     .............)./
    36e0:	01000a09 a8032d04 00060901 09020301     .....-..........
    36f0:	03010015 08097f92 0a030100 01000809     ................
    3700:	0900e703 03010018 16097ee3 0a030100     .........~......
    3710:	01000909 09019803 03010018 00120902     ................
    3720:	09020301 03010012 00120906 09040301     ................
    3730:	03010018 00150901 09010301 03010015     ................
    3740:	00150901 09010301 03010016 00150901     ................
    3750:	09010301 03010015 00160901 09020301     ................
    3760:	03010015 00090902 09010301 03010019     ................
    3770:	00150901 09010301 03010015 00150901     ................
    3780:	09040301 0301001c 00150903 09010301     ................
    3790:	0301001e 0018091e 09060301 03010003     ................
    37a0:	00180903 03320401 170901ec 00030100     ......2.........
    37b0:	01000209 b0032d04 0002097e 090a0301     .....-..~.......
    37c0:	03010026 000e0901 09010301 03010015     &...............
    37d0:	00160901 09320301 04010011 7cf10332     ......2.....2..|
    37e0:	01000209 d1032904 00030900 09020301     .....)..........
    37f0:	03010009 000a0904 09030301 03010006     ................
    3800:	0006091d 032d0401 03097fa6 0a030100     ......-.........
    3810:	01000809 0f032904 01001209 b7030504     .....)..........
    3820:	00030901 03290401 06097ec9 05040100     ......)..~......
    3830:	0901b703 04010005 0903032d 03010010     ........-.......
    3840:	00130902 03050401 00090956 09010301     ........V.......
    3850:	04010009 018e032d 01000c09 0c090a03     ....-...........
    3860:	95030100 000c097f 09010301 03010008     ................
    3870:	00080901 09010301 03010008 00080901     ................
    3880:	09010301 03010008 00080901 09010301     ................
    3890:	03010008 000b0930 7df60301 01001509     ....0......}....
    38a0:	13032904 01001209 b7030504 00030901     .)..............
    38b0:	03290401 06097ec9 05040100 0901b703     ..)..~..........
    38c0:	04010005 00ee032d 01000909 06090103     ....-...........
    38d0:	01030100 01000609 097da303 03010007     ..........}.....
    38e0:	150900f4 ef030100 00180900 7ee50301     ...............~
    38f0:	01000809 0901a003 03010017 08097e94     .............~..
    3900:	05040100 0901e203 04010014 090e032d     ............-...
    3910:	0301000c 00080904 09110301 03010008     ................
    3920:	00080901 09010301 03010006 00060901     ................
    3930:	09010301 03010008 00080904 7eef0301     ...............~
    3940:	01000809 15095403 53030100 01001409     .....T.....S....
    3950:	17032904 01001209 b7030504 00030901     .)..............
    3960:	03290401 06097ec9 05040100 0901b703     ..)..~..........
    3970:	04010005 0967030a 0301000b 00000901     ......g.........
    3980:	09010301 0301000f 0005096e 09010301     ........n.......
    3990:	03010000 000f0901 00020901 04010100     ................
    39a0:	02050013 400a2ca4 01038303 097dfc03     .....,.@......}.
    39b0:	0301000a 00080901 01d40301 01001e09     ................
    39c0:	097ec203 03010003 00160903 09030301     ..~.............
    39d0:	03010018 00180903 09030301 03010018     ................
    39e0:	00180903 09170301 03010018 0309019a     ................
    39f0:	e6030100 0002097e 09040301 0301000e     ....~...........
    3a00:	000b0902 09030301 03010015 00140903     ................
    3a10:	09030301 03010014 00140971 09260301     ........q.....&.
    3a20:	03010009 00130904 09020301 0301000b     ................
    3a30:	00150903 09030301 03010014 00140903     ................
    3a40:	09710301 03010014 00090925 09040301     ..q.....%.......
    3a50:	03010013 000b0902 09030301 03010015     ................
    3a60:	00140903 09030301 03010014 00140971     ............q...
    3a70:	09260301 0301000a 00090902 09030301     ..&.............
    3a80:	03010015 00140903 09030301 03010014     ................
    3a90:	00140904 09020301 03010009 00140903     ................
    3aa0:	00cd0301 01000c09 097fb303 03010004     ................
    3ab0:	080900cd 03040100 0902f603 03010007     ................
    3ac0:	000f0904 09050301 03010009 00020904     ................
    3ad0:	09010301 0301000e 000f097b 090c0301     ........{.......
    3ae0:	0301000a 000d097c 09040301 03010002     ....|...........
    3af0:	000d0971 03320401 09097ab9 13040100     q.....2..z......
    3b00:	03091503 0c040100 0902af03 0301000f     ................
    3b10:	0011090e 09770301 03010005 00020901     ......w.........
    3b20:	09030301 03010002 00030907 097a0301     ..............z.
    3b30:	03010002 00020902 097f0301 03010005     ................
    3b40:	0003097f 09010301 03010005 00020902     ................
    3b50:	09030301 03010005 120900c5 32040100     ...............2
    3b60:	097ce703 04010009 09150313 04010003     ..|.............
    3b70:	02f2030c 01000d09 06090303 7e030100     ...............~
    3b80:	01000309 03090203 02030100 01000509     ................
    3b90:	08090103 7f030100 01000209 03090103     ................
    3ba0:	08030100 01000c09 02090903 07030100     ................
    3bb0:	01000f09 097fb403 0301000b 0005097f     ................
    3bc0:	09010301 03010005 0003097f 09010301     ................
    3bd0:	03010005 00050938 09010301 03010003     ....8...........
    3be0:	0002097f 09010301 03010007 0012094e     ............N...
    3bf0:	09010301 0301000a 000b0908 097f0301     ................
    3c00:	03010002 0002097d 09020301 03010003     ....}...........
    3c10:	0002097f 097e0301 03010004 00050902     ......~.........
    3c20:	097e0301 03010002 00030902 097f0301     ..~.............
    3c30:	03010003 00030902 097e0301 03010003     ..........~.....
    3c40:	0003090a 097a0301 03010003 0002097f     ......z.........
    3c50:	097d0301 03010005 0003090b 09710301     ..}...........q.
    3c60:	03010003 00030904 09040301 03010002     ................
    3c70:	00020978 09080301 03010002 00060907     x...............
    3c80:	09790301 03010003 00020902 097f0301     ..y.............
    3c90:	03010003 00030902 09030301 03010006     ................
    3ca0:	0003097f 097f0301 03010003 00030904     ................
    3cb0:	097f0301 03010002 00170901 09070301     ................
    3cc0:	03010008 0005097d 097e0301 03010006     ....}.....~.....
    3cd0:	0005097f 09010301 03010006 00030902     ................
    3ce0:	097f0301 03010002 00050901 09030301     ................
    3cf0:	03010008 00020901 097f0301 03010002     ................
    3d00:	00050904 09050301 03010006 000f0902     ................
    3d10:	091f0301 03010003 00090903 097d0301     ..............}.
    3d20:	03010002 00060903 097d0301 03010002     ..........}.....
    3d30:	0008097d 09060301 03010002 09097dc5     }............}..
    3d40:	05030100 01001909 02090103 7f030100     ................
    3d50:	01000209 02090303 08030100 01000309     ................
    3d60:	02097a03 03030100 01000309 05097e03     .z...........~..
    3d70:	05030100 01000209 03097b03 01030100     .........{......
    3d80:	01000309 05090203 02030100 01000509     ................
    3d90:	0901ab03 04010015 7ddb0332 01000909     ........2..}....
    3da0:	15031304 01000309 f5030c04 000e0901     ................
    3db0:	09030301 0301000b 00030903 097f0301     ................
    3dc0:	03010005 00060901 097f0301 03010002     ................
    3dd0:	00050901 7fb00301 01001009 06090303     ................
    3de0:	7e030100 01000309 0c090b03 11030100     ...~............
    3df0:	01000c09 0900cd03 03010002 00030902     ................
    3e00:	090a0301 0301000f 13097e9b 08030100     .........~......
    3e10:	01000209 02097803 08030100 01000209     .....x..........
    3e20:	03097803 08030100 01000609 0c092503     .x...........%..
    3e30:	03030100 01000509 0d090403 01030100     ................
    3e40:	01000509 1a090203 fc030100 0007097e     ............~...
    3e50:	09020301 03010008 00060901 09040301     ................
    3e60:	03010003 00050979 09070301 03010003     ....y...........
    3e70:	00030979 09070301 03010003 00060979     y...........y...
    3e80:	01870301 01000309 08090103 04030100     ................
    3e90:	01000309 0c097e03 01030100 01000309     .....~..........
    3ea0:	05090103 7f030100 01000809 03097f03     ................
    3eb0:	01030100 01000309 02097f03 01030100     ................
    3ec0:	01000509 05097f03 02030100 01000309     ................
    3ed0:	09019f03 0301000e 000b0901 7df10301     ...............}
    3ee0:	01000809 17090203 03030100 01000e09     ................
    3ef0:	06090103 7a030100 01000c09 09029203     .......z........
    3f00:	0301000d 0018097d 09060301 03010002     ....}...........
    3f10:	0015095e 09010301 03010003 0003097f     ^...............
    3f20:	09010301 03010005 0003097f 09010301     ................
    3f30:	03010003 00060902 7ef20301 01000a09     ...........~....
    3f40:	03090b03 07030100 01001809 0a090103     ................
    3f50:	09030100 01000809 02097f03 7e030100     ...............~
    3f60:	01000209 02097d03 7d030100 01000609     .....}.....}....
    3f70:	02090303 08030100 01000209 02097803     .............x..
    3f80:	02030100 01000209 02097e03 02030100     .........~......
    3f90:	01000309 03097e03 01030100 01000309     .....~..........
    3fa0:	03090203 7e030100 01000309 06090203     .......~........
    3fb0:	7e030100 01000209 05090303 01030100     ...~............
    3fc0:	01000309 02097f03 01030100 01000509     ................
    3fd0:	03090203 7e030100 01000309 08090103     .......~........
    3fe0:	01030100 01000309 03090103 98030100     ................
    3ff0:	0006097f 00eb0301 01000309 03097f03     ................
    4000:	01030100 01000309 02097e03 97030100     .........~......
    4010:	0003097f 00e90301 01000609 03090103     ................
    4020:	01030100 01000309 03097d03 98030100     .........}......
    4030:	0003097f 00ed0301 01001409 03097f03     ................
    4040:	01030100 01000209 02097f03 01030100     ................
    4050:	01000209 03090203 03030100 01000b09     ................
    4060:	03097d03 7f030100 01000309 05090403     .}..............
    4070:	7d030100 01000209 02090303 01030100     ...}............
    4080:	01000209 02097f03 04030100 01000509     ................
    4090:	06090503 02030100 01000f09 03092603     .............&..
    40a0:	01030100 01000a09 08090a03 7f030100     ................
    40b0:	01000309 02097f03 78030100 01000209     ...........x....
    40c0:	02090603 7d030100 01000209 07090203     .......}........
    40d0:	7e030100 01000209 03090203 7f030100     ...~............
    40e0:	01000309 03090203 7e030100 01000309     ...........~....
    40f0:	06090203 7e030100 01000209 05090303     .......~........
    4100:	04030100 01000309 02097c03 01030100     .........|......
    4110:	01000509 0c090103 01030100 01000309     ................
    4120:	03090103 03030100 01000609 03097f03     ................
    4130:	7f030100 01000309 02090203 ce030100     ................
    4140:	0002097e 01af0301 01000609 03090103     ~...............
    4150:	01030100 01000309 03090103 01030100     ................
    4160:	01000309 097ecd03 03010008 060901b3     ......~.........
    4170:	cd030100 0002097e 01b30301 01000509     ....~...........
    4180:	097ecd03 0301000c 050901b3 cd030100     ..~.............
    4190:	0006097e 01b40301 01000809 0c090403     ~...............
    41a0:	7e030100 01000309 05097f03 01030100     ...~............
    41b0:	01000609 03090203 03030100 01000209     ................
    41c0:	03097d03 03030100 01000609 02097d03     .}...........}..
    41d0:	7f030100 01000309 03090103 7f030100     ................
    41e0:	01000209 02090403 01030100 01000209     ................
    41f0:	02097f03 04030100 01000609 06090503     ................
    4200:	03030100 01000f09 097f8303 03010005     ................
    4210:	00040903 01910301 01000409 06097f03     ................
    4220:	01030100 01000609 03097f03 01030100     ................
    4230:	01000209 097faa03 0301000d 0006097e     ............~...
    4240:	09020301 04010008 7eb90332 01000c09     ........2..~....
    4250:	15031304 01000309 bd030c04 000d0901     ................
    4260:	03830301 01001809 00091d03 63030100     ...............c
    4270:	01000309 06090103 7f030100 01000309     ................
    4280:	06091403 77030100 01000309 06090903     .......w........
    4290:	01030100 01000309 02097803 08030100     .........x......
    42a0:	01000609 03097503 02030100 01000309     .....u..........
    42b0:	02090503 7b030100 01000209 12097403     .......{.....t..
    42c0:	12030100 01000309 03097003 1b030100     .........p......
    42d0:	01000209 03097b03 05030100 01000309     .....{..........
    42e0:	03097603 7e030100 01000609 06090e03     .v.....~........
    42f0:	78030100 01000e09 02090803 78030100     ...x...........x
    4300:	01000209 03096903 1d030100 01000209     .....i..........
    4310:	03090203 7a030100 01000209 03090603     .......z........
    4320:	02030100 01001009 09018803 03010020     ............ ...
    4330:	00090901 09040301 03010003 0e097ef1     .............~..
    4340:	08030100 01000509 0e097e03 01030100     .........~......
    4350:	01000a09 08090103 05030100 01001709     ................
    4360:	f3030404 0010097d 097e0301 03010005     ....}.....~.....
    4370:	00020902 097e0301 03010006 001a096e     ......~.....n...
    4380:	030c0401 170902b4 08030100 01000e09     ................
    4390:	02097f03 01030100 01000309 03097f03     ................
    43a0:	01030100 01000509 d5030404 000b097e     ............~...
    43b0:	09060301 03010019 00050905 09030301     ................
    43c0:	03010003 00060902 09010301 03010002     ................
    43d0:	00030971 09300301 0301000a 0002097f     q.....0.........
    43e0:	09030301 03010002 0003097d 09030301     ........}.......
    43f0:	03010005 0003097d 09010301 03010003     ....}...........
    4400:	00030901 09020301 03010005 0002097f     ................
    4410:	09010301 03010002 0002097f 09010301     ................
    4420:	04010004 00df030c 01000309 fc030404     ................
    4430:	0009097c 030c0401 0e0903a5 7e030100     |..............~
    4440:	01000609 02097e03 7f030100 01000309     .....~..........
    4450:	07097f03 02030100 01000209 03097e03     .............~..
    4460:	04030100 01000309 05090203 7e030100     ...............~
    4470:	01000309 03090103 01030100 01000609     ................
    4480:	03097f03 01030100 01000209 0900dd03     ................
    4490:	03010017 03097fa3 dd030100 00060900     ................
    44a0:	7f8c0301 01000c09 0900e203 03010003     ................
    44b0:	00080901 09020301 0301000d 000d0904     ................
    44c0:	097e0301 03010013 000e0902 097f0301     ..~.............
    44d0:	03010003 00060901 097f0301 03010003     ................
    44e0:	00020901 090b0301 0301000c 000d0942     ............B...
    44f0:	09020301 0301000b 00230903 03040401     ..........#.....
    4500:	05097cbf 0c040100 0903c103 04010008     .|..............
    4510:	7cbf0304 01000209 c1030c04 000b0903     ...|............
    4520:	09050301 03010003 0011097e 09020301     ........~.......
    4530:	03010002 0002097e 09020301 03010007     ....~...........
    4540:	0002097e 09010301 03010005 00060901     ~...............
    4550:	097f0301 03010003 00020901 09340301     ..............4.
    4560:	03010016 0d097f8f 74030100 01000309     ...........t....
    4570:	82030404 0005097f 09040301 03010014     ................
    4580:	00050905 09030301 03010003 00060902     ................
    4590:	09010301 03010002 00030971 09140301     ........q.......
    45a0:	0401000b 0190030c 01000609 0c090203     ................
    45b0:	03030100 01001809 d8030404 0004097c     ............|...
    45c0:	030c0401 020903a8 04040100 097cd803     ..............|.
    45d0:	04010003 03a8030c 01000309 d8030404     ................
    45e0:	0002097c 030c0401 0c0903a8 05030100     |...............
    45f0:	01000309 13097e03 02030100 01000609     .....~..........
    4600:	03097e03 01030100 01000809 06090103     .~..............
    4610:	7f030100 01000309 02090103 cd030100     ................
    4620:	001b0900 7f940301 01000d09 02097f03     ................
    4630:	01030100 01000309 03097f03 01030100     ................
    4640:	01000509 08093f03 04040100 097d9103     .....?........}.
    4650:	03010003 00030946 030c0401 050903a9     ....F...........
    4660:	04040100 097cd703 04010002 03a9030c     ......|.........
    4670:	01000309 91030404 0002097d 030c0401     ........}.......
    4680:	030902ef 04040100 097cd703 03010005     ..........|.....
    4690:	0006093a 030c0401 050902ef 06030100     :...............
    46a0:	01000509 ed030404 000f097c 09010301     ........|.......
    46b0:	03010005 0004097f 09010301 03010002     ................
    46c0:	0003097f 09010301 03010003 0003097f     ................
    46d0:	09010301 03010008 000c097f 09010301     ................
    46e0:	03010008 000c0901 09080301 03010003     ................
    46f0:	00030978 09010301 03010009 00060907     x...............
    4700:	09010301 03010002 0002097f 030c0401     ................
    4710:	0509038c 04040100 097cf503 04010002     ..........|.....
    4720:	038a030c 01000309 f8030404 0002097c     ............|...
    4730:	097e0301 03010003 00030903 097d0301     ..~...........}.
    4740:	03010003 00050901 030c0401 0609038a     ................
    4750:	04040100 097cf603 04010002 038a030c     ......|.........
    4760:	01000309 03090303 04040100 097ca703     ..............|.
    4770:	04010004 03d9030c 01000709 a7030404     ................
    4780:	0002097c 030c0401 0b0903d9 07030100     |...............
    4790:	01000309 0e097e03 7b030100 01000209     .....~.....{....
    47a0:	03090503 03040100 091c9903 04010002     ................
    47b0:	63e7030c 01000809 99030304 0002091c     ...c............
    47c0:	030c0401 020963e7 03040100 091c9903     .....c..........
    47d0:	04010003 63e7030c 01000309 99030304     .......c........
    47e0:	0005091c 030c0401 020963e8 01030100     .........c......
    47f0:	01000609 03097f03 01030100 01000209     ................
    4800:	1c091a03 04040100 097caa03 0301000f     ..........|.....
    4810:	0008093a 030c0401 0d0902d6 7e030100     :..............~
    4820:	01000c09 0a090103 01030100 01000809     ................
    4830:	03097f03 01030100 01000209 0900c603     ................
    4840:	0301001d 10097daf 01030100 01000809     .....}..........
    4850:	02097f03 02030100 01000609 02091203     ................
    4860:	77030100 01000309 06090903 79030100     ...w...........y
    4870:	01000309 03090803 78030100 01000509     ...........x....
    4880:	03097d03 02030100 01000309 02090503     .}..............
    4890:	7b030100 01000209 12090b03 08030100     ...{............
    48a0:	01000209 03097403 0a030100 01000609     .....t..........
    48b0:	03090203 78030100 01000209 03090803     .......x........
    48c0:	7e030100 01000309 03096303 12030100     ...~.....c......
    48d0:	01000209 03090b03 74030100 01000209     ...........t....
    48e0:	06090c03 02030100 01000309 06097903     .............y..
    48f0:	07030100 01000309 04097a03 06030100     .........z......
    4900:	01000309 11090203 ef030100 001a0900     ................
    4910:	09010301 03010009 00030904 7f8a0301     ................
    4920:	01000d09 05090803 7e030100 01000f09     ...........~....
    4930:	0a090103 01030100 01000809 25090503     ...............%
    4940:	04040100 097f9603 03010012 0005097e     ............~...
    4950:	09020301 03010002 0006097e 096e0301     ........~.....n.
    4960:	0401001a 0191030c 01001709 0e090803     ................
    4970:	7f030100 01000209 03090103 7f030100     ................
    4980:	01000309 05090103 04040100 08097803     .............x..
    4990:	06030100 01001809 05090503 03030100     ................
    49a0:	01000309 06090203 01030100 01000209     ................
    49b0:	03097103 30030100 01000a09 02097f03     .q.....0........
    49c0:	03030100 01000209 03097d03 03030100     .........}......
    49d0:	01000509 03097d03 01030100 01000309     .....}..........
    49e0:	03090103 02030100 01000509 02097f03     ................
    49f0:	01030100 01000209 02097f03 01030100     ................
    4a00:	01000509 bc030c04 0003097f 03040401     ................
    4a10:	08097e9f 0c040100 09028203 0301000e     .~..............
    4a20:	000c097e 097d0301 03010002 00020905     ~.....}.........
    4a30:	097b0301 03010002 020900c9 b7030100     ..{.............
    4a40:	0003097f 097f0301 03010003 00020902     ................
    4a50:	097e0301 03010003 00030904 09020301     ..~.............
    4a60:	03010005 0003097e 09010301 03010003     ....~...........
    4a70:	00060901 097f0301 03010003 00020901     ................
    4a80:	00c40301 01002409 097fa503 0301000c     .....$..........
    4a90:	040900c9 01030100 01000809 0d090203     ................
    4aa0:	04030100 01000d09 13097e03 02030100     .........~......
    4ab0:	01000e09 03097f03 01030100 01000609     ................
    4ac0:	03097f03 01030100 01000209 1b090b03     ................
    4ad0:	42030100 01000d09 0b090203 03030100     ...B............
    4ae0:	01002309 fb030404 0005097d 030c0401     .#......}.......
    4af0:	08090285 04040100 097dfb03 04010002     ..........}.....
    4b00:	0285030c 01000d09 03090503 7e030100     ...............~
    4b10:	01001309 06090203 7e030100 01000309     ...........~....
    4b20:	08090103 01030100 01000609 03097f03     ................
    4b30:	01030100 01000209 1b093403 a8030100     .........4......
    4b40:	000d097f 09740301 04010003 09250304     ......t.......%.
    4b50:	03010005 00140904 09050301 03010005     ................
    4b60:	00030903 09020301 03010006 00020901     ................
    4b70:	09710301 03010003 000b0914 030c0401     ..q.............
    4b80:	00060958 097f0301 03010002 00030901     X...............
    4b90:	097f0301 03010003 00050901 091f0301     ................
    4ba0:	03010008 000b0906 03040401 04097df0     .............}..
    4bb0:	0c040100 09029003 04010006 7df00304     ...............}
    4bc0:	01000209 90030c04 00150902 09050301     ................
    4bd0:	04010003 7ec90304 01000309 06094603     .......~.....F..
    4be0:	3a030100 01000b09 03094603 3a030100     ...:.....F.....:
    4bf0:	01000509 b7030c04 00050901 09060301     ................
    4c00:	03010003 000f0902 03040401 02097ead     .............~..
    4c10:	03040100 091fad03 04010003 60c90304     ...............`
    4c20:	01000309 05090103 7f030100 01000409     ................
    4c30:	02090103 7f030100 01000309 03090103     ................
    4c40:	7f030100 01000309 08090103 7f030100     ................
    4c50:	01000c09 b7030304 0006091f 03040401     ................
    4c60:	020960c9 01030100 01000209 b6030304     .`..............
    4c70:	0006091f 03040401 030960ca 01030100     .........`......
    4c80:	01000609 db030c04 00030901 03040401     ................
    4c90:	03097ea5 03040100 091fb503 04010009     .~..............
    4ca0:	60d40304 01000209 02097803 03040100     ...`.....x......
    4cb0:	091fb403 04010003 60cc0304 01000309     ...........`....
    4cc0:	e1030c04 00030901 097e0301 04010003     ..........~.....
    4cd0:	7eaa0304 01000209 ab030304 0003091f     ...~............
    4ce0:	03040401 020960d3 0c040100 0901da03     .....`..........
    4cf0:	04010002 7ea60304 01000509 05090403     .......~........
    4d00:	7f030100 01000309 d7030c04 00030901     ................
    4d10:	03040401 03097ea7 01030100 01000b09     .....~..........
    4d20:	d8030c04 00030901 03040401 03097ea8     .............~..
    4d30:	0c040100 0901d803 03010003 0003097e     ............~...
    4d40:	09020301 03010002 0003097e 09010301     ........~.......
    4d50:	03010008 00030901 097f0301 03010005     ................
    4d60:	00020901 091a0301 04010022 7ea00304     ........"......~
    4d70:	01000d09 02094603 3a030100 01000909     .....F.....:....
    4d80:	aa030c04 000c0903 09050301 03010000     ................
    4d90:	0002097b 09050301 0301000a 00080901     {...............
    4da0:	09050301 03010006 000b0901 097f0301     ................
    4db0:	03010005 00020901 09110301 0401000f     ................
    4dc0:	79d20332 01000909 15031304 01000309     2..y............
    4dd0:	84030c04 000d0906 091a0301 03010002     ................
    4de0:	000a096f 09110301 03010005 000d0976     o...........v...
    4df0:	090a0301 04010003 7ce9030a 01000b09     ...........|....
    4e00:	0e090103 1b030100 01001409 c8033204     .............2..
    4e10:	000b097c 03130401 00030915 030a0401     |...............
    4e20:	0c090392 16030100 01000c09 02096a03     .............j..
    4e30:	16030100 01000509 05097103 0f030100     .........q......
    4e40:	01000c09 02097103 0f030100 01000509     .....q..........
    4e50:	05096503 1b030100 01000c09 02096503     .e...........e..
    4e60:	1b030100 01000509 05097603 0a030100     .........v......
    4e70:	01000c09 02097603 0a030100 01000509     .....v..........
    4e80:	00000509 3ff50101 00020000 00000bcd     .......?........
    4e90:	0efb0101 0101000d 00000101 00000100     ................
    4ea0:	5c3a4401 335f4d49 4c545f44 69665c43     .D:\IM_3D_TLC\fi
    4eb0:	61776d72 44006572 4d495c3a 5f44335f     rmware.D:\IM_3D_
    4ec0:	5c434c54 6d726966 65726177 676c615c     TLC\firmware\alg
    4ed0:	7469726f 4c5c6d68 3a440032 5f4d495c     orithm\L2.D:\IM_
    4ee0:	545f4433 665c434c 776d7269 5c657261     3D_TLC\firmware\
    4ef0:	6f676c61 68746972 334c5c6d 5c3a4400     algorithm\L3.D:\
    4f00:	335f4d49 4c545f44 69665c43 61776d72     IM_3D_TLC\firmwa
    4f10:	615c6572 726f676c 6d687469 73694d5c     re\algorithm\Mis
    4f20:	3a440063 5f4d495c 545f4433 665c434c     c.D:\IM_3D_TLC\f
    4f30:	776d7269 5c657261 004d4f43 495c3a44     irmware\COM.D:\I
    4f40:	44335f4d 434c545f 7269665c 7261776d     M_3D_TLC\firmwar
    4f50:	6f635c65 6769666e 5c3a4400 335f4d49     e\config.D:\IM_3
    4f60:	4c545f44 69665c43 61776d72 485c6572     D_TLC\firmware\H
    4f70:	44004c41 4d495c3a 5f44335f 5c434c54     AL.D:\IM_3D_TLC\
    4f80:	6d726966 65726177 4c41485c 7461445c     firmware\HAL\Dat
    4f90:	6e6f4d61 726f7469 5c3a4400 335f4d49     aMonitor.D:\IM_3
    4fa0:	4c545f44 69665c43 61776d72 485c6572     D_TLC\firmware\H
    4fb0:	445c4c41 74536365 3a440073 5f4d495c     AL\DecSts.D:\IM_
    4fc0:	545f4433 665c434c 776d7269 5c657261     3D_TLC\firmware\
    4fd0:	5c4c4148 45414d44 5c3a4400 335f4d49     HAL\DMAE.D:\IM_3
    4fe0:	4c545f44 69665c43 61776d72 485c6572     D_TLC\firmware\H
    4ff0:	445c4c41 44004753 4d495c3a 5f44335f     AL\DSG.D:\IM_3D_
    5000:	5c434c54 6d726966 65726177 4c41485c     TLC\firmware\HAL
    5010:	004d455c 495c3a44 44335f4d 434c545f     \EM.D:\IM_3D_TLC
    5020:	7269665c 7261776d 41485c65 50475c4c     \firmware\HAL\GP
    5030:	44004f49 4d495c3a 5f44335f 5c434c54     IO.D:\IM_3D_TLC\
    5040:	6d726966 65726177 4c41485c 4547485c     firmware\HAL\HGE
    5050:	5c3a4400 335f4d49 4c545f44 69665c43     .D:\IM_3D_TLC\fi
    5060:	61776d72 485c6572 495c4c41 44004349     rmware\HAL\IIC.D
    5070:	4d495c3a 5f44335f 5c434c54 6d726966     :\IM_3D_TLC\firm
    5080:	65726177 4c41485c 746e495c 75727265     ware\HAL\Interru
    5090:	44007470 4d495c3a 5f44335f 5c434c54     pt.D:\IM_3D_TLC\
    50a0:	6d726966 65726177 4c41485c 50444c5c     firmware\HAL\LDP
    50b0:	3a440043 5f4d495c 545f4433 665c434c     C.D:\IM_3D_TLC\f
    50c0:	776d7269 5c657261 5c4c4148 746c754d     irmware\HAL\Mult
    50d0:	726f4369 3a440065 5f4d495c 545f4433     iCore.D:\IM_3D_T
    50e0:	665c434c 776d7269 5c657261 5c4c4148     LC\firmware\HAL\
    50f0:	0043464e 495c3a44 44335f4d 434c545f     NFC.D:\IM_3D_TLC
    5100:	7269665c 7261776d 41485c65 61505c4c     \firmware\HAL\Pa
    5110:	546d6172 656c6261 5c3a4400 335f4d49     ramTable.D:\IM_3
    5120:	4c545f44 69665c43 61776d72 485c6572     D_TLC\firmware\H
    5130:	535c4c41 3a440045 5f4d495c 545f4433     AL\SE.D:\IM_3D_T
    5140:	665c434c 776d7269 5c657261 5c4c4148     LC\firmware\HAL\
    5150:	656d6954 3a440072 5f4d495c 545f4433     Timer.D:\IM_3D_T
    5160:	665c434c 776d7269 5c657261 5c4c4148     LC\firmware\HAL\
    5170:	63617254 3a440065 5f4d495c 545f4433     Trace.D:\IM_3D_T
    5180:	665c434c 776d7269 5c657261 5c4c4148     LC\firmware\HAL\
    5190:	54524155 5c3a4400 335f4d49 4c545f44     UART.D:\IM_3D_TL
    51a0:	69665c43 61776d72 485c6572 585c4c41     C\firmware\HAL\X
    51b0:	4400524f 4d495c3a 5f44335f 5c434c54     OR.D:\IM_3D_TLC\
    51c0:	6d726966 65726177 4c41485c 6574585c     firmware\HAL\Xte
    51d0:	0061736e 495c3a44 44335f4d 434c545f     nsa.D:\IM_3D_TLC
    51e0:	696e755c 73657474 6b425c74 5f646e45     \unittest\BkEnd_
    51f0:	74736554 6e69614d 5c3a4400 335f4d49     TestMain.D:\IM_3
    5200:	4c545f44 6e755c43 65747469 485c7473     D_TLC\unittest\H
    5210:	555f4c41 5474696e 5c747365 61746144     AL_UnitTest\Data
    5220:	63656843 4d455f6b 5c3a4400 335f4d49     Check_EM.D:\IM_3
    5230:	4c545f44 6e755c43 65747469 485c7473     D_TLC\unittest\H
    5240:	555f4c41 5474696e 5c747365 73616c46     AL_UnitTest\Flas
    5250:	69724468 00726576 495c3a44 44335f4d     hDriver.D:\IM_3D
    5260:	434c545f 696e755c 73657474 41485c74     _TLC\unittest\HA
    5270:	6e555f4c 65547469 485c7473 44004547     L_UnitTest\HGE.D
    5280:	4d495c3a 5f44335f 5c434c54 74696e75     :\IM_3D_TLC\unit
    5290:	74736574 4c41485c 696e555f 73655474     test\HAL_UnitTes
    52a0:	444c5c74 44004350 4d495c3a 5f44335f     t\LDPC.D:\IM_3D_
    52b0:	5c434c54 74696e75 74736574 4c41485c     TLC\unittest\HAL
    52c0:	696e555f 73655474 464e5c74 3a440043     _UnitTest\NFC.D:
    52d0:	5f4d495c 545f4433 755c434c 7474696e     \IM_3D_TLC\unitt
    52e0:	5c747365 5f4c4148 74696e55 74736554     est\HAL_UnitTest
    52f0:	43464e5c 43464e5c 5341425f 44004349     \NFC\NFC_BASIC.D
    5300:	4d495c3a 5f44335f 5c434c54 74696e75     :\IM_3D_TLC\unit
    5310:	74736574 4c41485c 696e555f 73655474     test\HAL_UnitTes
    5320:	464e5c74 464e5c43 58455f43 3a440054     t\NFC\NFC_EXT.D:
    5330:	5f4d495c 545f4433 755c434c 7474696e     \IM_3D_TLC\unitt
    5340:	5c747365 5f4c4148 74696e55 74736554     est\HAL_UnitTest
    5350:	524f585c 5c3a4400 335f4d49 4c545f44     \XOR.D:\IM_3D_TL
    5360:	69665c43 61776d72 615c6572 74706164     C\firmware\adapt
    5370:	4c5c7265 564e5c33 4400654d 4d495c3a     er\L3\NVMe.D:\IM
    5380:	5f44335f 5c434c54 6d726966 65726177     _3D_TLC\firmware
    5390:	4c41485c 6168435c 614d6e69 61746e69     \HAL\ChainMainta
    53a0:	44006e69 4d495c3a 5f44335f 5c434c54     in.D:\IM_3D_TLC\
    53b0:	6d726966 65726177 4c41485c 5443485c     firmware\HAL\HCT
    53c0:	5c3a4400 335f4d49 4c545f44 69665c43     .D:\IM_3D_TLC\fi
    53d0:	61776d72 485c6572 485c4c41 44004753     rmware\HAL\HSG.D
    53e0:	4d495c3a 5f44335f 5c434c54 6d726966     :\IM_3D_TLC\firm
    53f0:	65726177 4c41485c 4477485c 67756265     ware\HAL\HwDebug
    5400:	5c3a4400 335f4d49 4c545f44 69665c43     .D:\IM_3D_TLC\fi
    5410:	61776d72 485c6572 535c4c41 44004547     rmware\HAL\SGE.D
    5420:	4d495c3a 5f44335f 5c434c54 6d726966     :\IM_3D_TLC\firm
    5430:	65726177 4c41485c 616c465c 495c6873     ware\HAL\Flash\I
    5440:	4c45544e 5f44335f 00434c54 495c3a44     NTEL_3D_TLC.D:\I
    5450:	44335f4d 434c545f 696e755c 73657474     M_3D_TLC\unittes
    5460:	41485c74 6e555f4c 65547469 4e5c7473     t\HAL_UnitTest\N
    5470:	4e5c4346 455f4346 495c5458 4c45544e     FC\NFC_EXT\INTEL
    5480:	5f44335f 00434c54 55434d00 614d5f32     _3D_TLC..MCU2_Ma
    5490:	632e6e69 00000100 465f324c 51444d43     in.c....L2_FCMDQ
    54a0:	0200632e 324c0000 6261545f 4242656c     .c....L2_TableBB
    54b0:	00632e54 4c000002 6e495f32 66726574     T.c....L2_Interf
    54c0:	2e656361 00020063 5f324c00 72616553     ace.c....L2_Sear
    54d0:	6e456863 656e6967 0200632e 334c0000     chEngine.c....L3
    54e0:	696e495f 00632e74 4c000003 43465f33     _Init.c....L3_FC
    54f0:	2e51444d 00030063 5f334c00 65746e49     MDQ.c....L3_Inte
    5500:	63616672 00632e65 4c000003 63535f33     rface.c....L3_Sc
    5510:	75646568 632e656c 00000300 465f334c     hedule.c....L3_F
    5520:	6873616c 696e6f4d 2e726f74 00030063     lashMonitor.c...
    5530:	5f334c00 48727245 69736142 00632e63     .L3_ErrHBasic.c.
    5540:	4c000003 72455f33 78454872 646e6574     ...L3_ErrHExtend
    5550:	0300632e 334c0000 666f535f 63654474     .c....L3_SoftDec
    5560:	7265646f 0300632e 334c0000 7461445f     oder.c....L3_Dat
    5570:	63655261 7265766f 0300632e 334c0000     aRecover.c....L3
    5580:	6675425f 2e72674d 00030063 5f334c00     _BufMgr.c....L3_
    5590:	75626544 00632e67 46000003 75425f57     Debug.c....FW_Bu
    55a0:	64644166 00632e72 46000004 61445f57     fAddr.c....FW_Da
    55b0:	6f4d6174 6f74696e 00632e72 46000004     taMonitor.c....F
    55c0:	65445f57 2e677562 00040063 5f574600     W_Debug.c....FW_
    55d0:	6e657645 00632e74 46000004 4d535f57     Event.c....FW_SM
    55e0:	632e4753 00000400 565f5746 6d436169     SG.c....FW_ViaCm
    55f0:	00632e64 46000004 44535f57 00632e4c     d.c....FW_SDL.c.
    5600:	43000004 425f4d4f 614d7469 632e6b73     ...COM_BitMask.c
    5610:	00000500 5f4d4f43 6f6d654d 632e7972     ....COM_Memory.c
    5620:	00000500 5f4d4f43 726f5751 00632e64     ....COM_QWord.c.
    5630:	44000005 5f6b7369 666e6f43 632e6769     ...Disk_Config.c
    5640:	00000600 5f4c4148 74696e49 0700632e     ....HAL_Init.c..
    5650:	41480000 664e5f4c 74614463 65684361     ..HAL_NfcDataChe
    5660:	632e6b63 00000800 5f4c4148 53636544     ck.c....HAL_DecS
    5670:	65527374 74726f70 0900632e 41480000     tsReport.c....HA
    5680:	6d445f4c 632e6561 00000a00 5f4c4148     L_Dmae.c....HAL_
    5690:	6d726f4e 53446c61 00632e47 4800000b     NormalDSG.c....H
    56a0:	455f4c41 6972636e 6f697470 646f4d6e     AL_EncriptionMod
    56b0:	2e656c75 000c0063 4c414800 4950475f     ule.c....HAL_GPI
    56c0:	00632e4f 4800000d 485f4c41 632e4547     O.c....HAL_HGE.c
    56d0:	00000e00 5f4c4148 2e434949 000f0063     ....HAL_IIC.c...
    56e0:	4c414800 6d65545f 61726570 65727574     .HAL_Temperature
    56f0:	736e6553 632e726f 00000f00 5f4c4148     Sensor.c....HAL_
    5700:	65746e49 70757272 00632e74 48000010     Interrupt.c....H
    5710:	4c5f4c41 45637064 6e69676e 00632e65     AL_LdpcEngine.c.
    5720:	48000011 4c5f4c41 53637064 4474666f     ...HAL_LdpcSoftD
    5730:	632e6365 00001100 5f4c4148 746c754d     ec.c....HAL_Mult
    5740:	726f4369 00632e65 48000012 465f4c41     iCore.c....HAL_F
    5750:	6873616c 76697244 61427265 2e636973     lashDriverBasic.
    5760:	00130063 4c414800 616c465f 72446873     c....HAL_FlashDr
    5770:	72657669 2e747845 00130063 4c414800     iverExt.c....HAL
    5780:	7261505f 61546d61 2e656c62 00140063     _ParamTable.c...
    5790:	4c414800 6165535f 45686372 6e69676e     .HAL_SearchEngin
    57a0:	00632e65 48000015 485f4c41 54646d43     e.c....HAL_HCmdT
    57b0:	72656d69 1600632e 41480000 72545f4c     imer.c....HAL_Tr
    57c0:	4c656361 632e676f 00001700 74726175     aceLog.c....uart
    57d0:	1800632e 41480000 4f585f4c 00632e52     .c....HAL_XOR.c.
    57e0:	48000019 585f4c41 736e6574 00632e61     ...HAL_Xtensa.c.
    57f0:	4200001a 646e456b 7365545f 69614d74     ...BkEnd_TestMai
    5800:	00632e6e 5400001b 5f545345 632e4d45     n.c....TEST_EM.c
    5810:	00001c00 73616c46 69724468 5f726576     ....FlashDriver_
    5820:	74736554 1d00632e 45540000 485f5453     Test.c....TEST_H
    5830:	632e4547 00001e00 54534554 70644c5f     GE.c....TEST_Ldp
    5840:	666f5363 63654474 1f00632e 45540000     cSoftDec.c....TE
    5850:	4e5f5453 68436366 4c6b6365 2e747369     ST_NfcCheckList.
    5860:	00200063 53455400 664e5f54 72655063     c. ..TEST_NfcPer
    5870:	6d726f66 65636e61 2000632e 45540000     formance.c. ..TE
    5880:	4e5f5453 434d6366 632e3255 00002000     ST_NfcMCU2.c. ..
    5890:	54534554 63664e5f 74746150 00632e51     TEST_NfcPattQ.c.
    58a0:	54000021 5f545345 5063664e 42747461     !..TEST_NfcPattB
    58b0:	63697361 65736e49 632e7472 00002100     asicInsert.c.!..
    58c0:	54534554 63664e5f 74746150 426e6547     TEST_NfcPattGenB
    58d0:	63697361 2100632e 45540000 4e5f5453     asic.c.!..TEST_N
    58e0:	75466366 6142636e 2e636973 00210063     fcFuncBasic.c.!.
    58f0:	53455400 664e5f54 4d434663 632e5144     .TEST_NfcFCMDQ.c
    5900:	00002200 54534554 63664e5f 44747845     ."..TEST_NfcExtD
    5910:	43617461 6b636568 2200632e 45540000     ataCheck.c."..TE
    5920:	4e5f5453 61506366 65477474 7478456e     ST_NfcPattGenExt
    5930:	2200632e 45540000 4e5f5453 75466366     .c."..TEST_NfcFu
    5940:	7845636e 00632e74 58000022 7455726f     ncExt.c."..XorUt
    5950:	6863535f 6c756465 00632e65 58000023     _Schedule.c.#..X
    5960:	7455726f 6d6f435f 2e6e6f6d 00230063     orUt_Common.c.#.
    5970:	726f5800 4e5f7455 495f6366 7265746e     .XorUt_Nfc_Inter
    5980:	65636166 2300632e 6f580000 5f745572     face.c.#..XorUt_
    5990:	666e6f43 632e6769 00002300 4e5f334c     Config.c.#..L3_N
    59a0:	2e654d56 00240063 4c414800 6168435f     VMe.c.$..HAL_Cha
    59b0:	614d6e69 61746e69 632e6e69 00002500     inMaintain.c.%..
    59c0:	5f4c4148 2e544348 00260063 4c414800     HAL_HCT.c.&..HAL
    59d0:	4753485f 2700632e 41480000 77485f4c     _HSG.c.'..HAL_Hw
    59e0:	75626544 00632e67 48000028 535f4c41     Debug.c.(..HAL_S
    59f0:	632e4547 00002900 5f4c4148 73616c46     GE.c.)..HAL_Flas
    5a00:	69684368 61654670 65727574 2a00632e     hChipFeature.c.*
    5a10:	41480000 6c465f4c 43687361 632e646d     ..HAL_FlashCmd.c
    5a20:	00002a00 5f4c4148 73616c46 666f5368     .*..HAL_FlashSof
    5a30:	63654474 61726150 2a00632e 45540000     tDecPara.c.*..TE
    5a40:	4e5f5453 6c466366 54687361 41657079     ST_NfcFlashTypeA
    5a50:	74706164 632e7265 00002b00 00030400     dapter.c.+......
    5a60:	42940205 be03400a 03030105 01001309     ...B.@..........
    5a70:	09090503 04030100 01002009 097cbd03     ......... ....|.
    5a80:	0301000c 340921d7 03030100 01001509     .....!.4........
    5a90:	06090303 7e030100 01000209 06090203     .......~........
    5aa0:	e2030100 00270961 09100301 03010008     ....a.'.........
    5ab0:	000f096d 03320401 09097b80 13040100     m.....2..{......
    5ac0:	03091503 04040100 0902c803 0301000f     ................
    5ad0:	00000905 7fa20301 01001809 00090103     ................
    5ae0:	01030100 01001f09 ac030b04 00050902     ................
    5af0:	09060301 0301000d 0003097c 09030301     ........|.......
    5b00:	03010003 0002097d 09030301 03010008     ....}...........
    5b10:	0003097f 09020301 04010003 0584032a     ............*...
    5b20:	01000b09 12090503 01030100 01000c09     ................
    5b30:	0b090203 01030100 01000e09 09090203     ................
    5b40:	7e030100 01000209 02090203 7e030100     ...~...........~
    5b50:	01000209 07090203 0b040100 097af903     ..............z.
    5b60:	03010009 000c0901 09020301 04010003     ................
    5b70:	7bbd0332 01000b09 15031304 01000309     2..{............
    5b80:	b2030b04 000c0904 09760301 0401000d     ..........v.....
    5b90:	7bc30332 01000b09 15031304 01000309     2..{............
    5ba0:	c1031504 000c0900 09030301 03010021     ............!...
    5bb0:	00030902 09030301 03010003 00020901     ................
    5bc0:	09010301 03010002 0002097b 09020301     ........{.......
    5bd0:	03010003 0003097e 09020301 03010003     ....~...........
    5be0:	0005097e 09050301 03010002 0002097f     ~...............
    5bf0:	097f0301 03010002 0002097f 096b0301     ..............k.
    5c00:	03010002 0011091d 030b0401 060902f9     ................
    5c10:	02030100 01000309 02097e03 04030100     .........~......
    5c20:	01000209 10090803 06030100 01000609     ................
    5c30:	03090603 0c030100 01000809 11090303     ................
    5c40:	62030100 01000909 02092603 5d030100     ...b.....&.....]
    5c50:	01000809 05097d03 26030100 01000209     .....}.....&....
    5c60:	07097d03 03030100 01000209 08096303     .}...........c..
    5c70:	06030100 01000809 03090603 06030100     ................
    5c80:	01000609 09018903 0301000f 00070908     ................
    5c90:	097d0301 03010002 0003097b 09060301     ..}.....{.......
    5ca0:	03010006 00020902 097e0301 03010003     ..........~.....
    5cb0:	00030902 034d0401 06097deb 0b040100     ......M..}......
    5cc0:	09029503 04010002 7deb034d 01000309     ........M..}....
    5cd0:	85032a04 000b0908 09010301 03010003     .*..............
    5ce0:	00030902 030b0401 0f097a91 32040100     .........z.....2
    5cf0:	097ae903 0401000b 09150313 04010003     ..z.............
    5d00:	0af6032a 01000f09 0c090103 09030100     *...............
    5d10:	01000809 02097903 02030100 01000409     .....y..........
    5d20:	02090103 7f030100 01000509 06097e03     .............~..
    5d30:	05030100 01000309 05097b03 07030100     .........{......
    5d40:	01000309 06090203 7e030100 01000409     ...........~....
    5d50:	02090203 7e030100 01000309 07090203     .......~........
    5d60:	0b040100 097a8303 03010006 000c0901     ......z.........
    5d70:	09020301 04010003 7ae30332 01000b09     ........2..z....
    5d80:	15031304 01000309 92030b04 000c0905     ................
    5d90:	09010301 0301000c 00030902 03320401     ..............2.
    5da0:	0c097ad6 13040100 03091503 0b040100     .z..............
    5db0:	09059903 0301000d 0010092e 09020301     ................
    5dc0:	03010000 00020902 09040301 03010014     ................
    5dd0:	00050906 09030301 03010003 00020975     ............u...
    5de0:	090b0301 03010003 00020979 09070301     ........y.......
    5df0:	03010003 04097efb 0d030100 01000009     .....~..........
    5e00:	02097303 0d030100 01000909 06090103     .s..............
    5e10:	02030100 01000309 88033204 000c097b     .........2..{...
    5e20:	03130401 00030915 030b0401 0d0904e7     ................
    5e30:	c7030100 000c0901 09030301 03010005     ................
    5e40:	0002097d 09030301 03010002 0002097d     }...........}...
    5e50:	09030301 03010002 00030909 09070301     ................
    5e60:	03010008 0002097e 09020301 03010006     ....~...........
    5e70:	0002097e 09020301 03010005 0003097e     ~...........~...
    5e80:	09020301 0301000e 00040972 09010301     ........r.......
    5e90:	03010006 0012091b 09010301 03010000     ................
    5ea0:	0003097f 09010301 03010005 00060901     ................
    5eb0:	00da0301 01000a09 00091603 6a030100     ...............j
    5ec0:	01000209 06090b03 75030100 01000309     ...........u....
    5ed0:	06091403 02030100 01000309 02097e03     .............~..
    5ee0:	6c030100 01000309 02090b03 76030100     ...l...........v
    5ef0:	01000209 02090103 13030100 01000209     ................
    5f00:	02097803 7d030100 01000309 05090303     .x.....}........
    5f10:	08030100 01000209 03097703 0c030100     .........w......
    5f20:	01000209 03097903 07030100 01000209     .....y..........
    5f30:	03097903 01030100 01000309 03090603     .y..............
    5f40:	7a030100 01000209 02097f03 02030100     ...z............
    5f50:	01000609 03097903 0c030100 01000309     .....y..........
    5f60:	03097403 07030100 01000209 0a090303     .t..............
    5f70:	02030100 01000b09 03090203 f9030100     ................
    5f80:	001b0900 03320401 0c0977ad 13040100     ......2..w......
    5f90:	03091503 0b040100 09089203 0301000d     ................
    5fa0:	00020902 09010301 03010012 0009092e     ................
    5fb0:	09540301 03010003 0002092c 09540301     ..T.....,.....T.
    5fc0:	03010003 0003092c 7f860301 01000809     ....,...........
    5fd0:	05090603 7c030100 01001509 02090303     .......|........
    5fe0:	7d030100 01000509 03090103 03030100     ...}............
    5ff0:	01000609 03097d03 03030100 01000209     .....}..........
    6000:	17090603 05030100 01000809 0b090503     ................
    6010:	e4030100 00380900 7fa20301 01000f09     ......8.........
    6020:	02090203 7e030100 01000209 0900de03     .......~........
    6030:	03010003 03097fa4 dc030100 00030900     ................
    6040:	7fbf0301 01000b09 05090203 03030100     ................
    6050:	01000809 0c090503 37030100 01003709     ...........7.7..
    6060:	097fa803 0301000e 000e0903 03040401     ................
    6070:	0c0979d6 01030100 01000b09 03097f03     .y..............
    6080:	01030100 01000b09 ac030b04 00080906     ................
    6090:	03040401 020979d4 0b040100 0906ac03     .....y..........
    60a0:	03010005 00060904 09030301 03010008     ................
    60b0:	0007097e 09020301 03010005 00060902     ~...............
    60c0:	00c90301 01003809 0e096303 03030100     .....8...c......
    60d0:	01000d09 9b030404 000c0979 09010301     ........y.......
    60e0:	0301000b 0003097f 09010301 0401000b     ................
    60f0:	06e7030b 01000d09 09090403 02030100     ................
    6100:	01000809 02097f03 01030100 01000509     ................
    6110:	03090203 02030100 01000d09 37090d03     ...............7
    6120:	94030100 000e097f 00c50301 01001309     ................
    6130:	07090203 7f030100 01000209 05090103     ................
    6140:	02030100 01000309 37092303 46030100     .........#.7...F
    6150:	01000f09 08095303 82030100 0008097f     .....S..........
    6160:	09010301 03010014 00050901 09080301     ................
    6170:	03010002 00020903 097e0301 03010002     ..........~.....
    6180:	00030902 097d0301 03010003 00030906     ......}.........
    6190:	097a0301 03010003 00030901 09020301     ..z.............
    61a0:	03010003 0003097c 09050301 03010003     ....|...........
    61b0:	0003097e 09020301 03010006 00030901     ~...............
    61c0:	097a0301 03010002 0006097f 09070301     ..z.............
    61d0:	03010003 00050903 09020301 03010006     ................
    61e0:	00060902 09010301 03010007 00060919     ................
    61f0:	09020301 0301000b 00090903 09030301     ................
    6200:	03010010 0005097e 09020301 03010005     ....~...........
    6210:	00080907 095d0301 03010016 00080905     ......].........
    6220:	097e0301 03010002 00070901 09010301     ..~.............
    6230:	03010005 000a0905 09020301 03010002     ................
    6240:	0003097e 09020301 04010003 78e50332     ~...........2..x
    6250:	01007809 15031304 01000309 99030b04     .x..............
    6260:	000e0907 09040301 03010016 0003097c     ............|...
    6270:	09040301 03010014 0003097c 09040301     ........|.......
    6280:	03010002 0003097c 09040301 03010005     ....|...........
    6290:	0003097c 09040301 03010006 080901b4     |...............
    62a0:	17030100 01000609 03096903 14030100     .........i......
    62b0:	01000f09 03097703 09030100 01000509     .....w..........
    62c0:	03096c03 02030100 01000209 02097f03     .l..............
    62d0:	0f030100 01000409 03097a03 03030100     .........z......
    62e0:	01000309 03090803 78030100 01000509     ...........x....
    62f0:	03090303 7c030100 01000509 02090503     .......|........
    6300:	7b030100 01000509 08090603 7f030100     ...{............
    6310:	01000309 0c090203 04030100 01000609     ................
    6320:	08090203 01030100 01000a09 06090203     ................
    6330:	0c040100 097df003 03010015 000d0901     ......}.........
    6340:	09040301 03010015 000e0901 097f0301     ................
    6350:	03010002 00020901 09020301 0301000d     ................
    6360:	000a0901 09020301 03010010 00030901     ................
    6370:	097f0301 03010002 00020901 09040301     ................
    6380:	03010008 0003097f 09010301 0401000a     ................
    6390:	0292030b 01000809 05090103 7f030100     ................
    63a0:	01000209 02090103 05030100 01000909     ................
    63b0:	0f090503 03030100 01000809 0f090103     ................
    63c0:	0c040100 097df003 0301000f 00200901     ......}....... .
    63d0:	09010301 0301000a 00160901 09020301     ................
    63e0:	03010016 000c0901 09010301 0301000e     ................
    63f0:	000d0901 00e00301 01000d09 b2030b04     ................
    6400:	000b0901 09620301 03010002 0002091e     ......b.........
    6410:	09620301 03010002 0003091e 09040301     ..b.............
    6420:	03010056 0003097c 09040301 0301001d     V...|...........
    6430:	0003097c 09040301 03010006 0003097c     |...........|...
    6440:	09040301 03010003 0003097c 09040301     ........|.......
    6450:	03010006 0c0977da 01030100 01000c09     .....w..........
    6460:	1a092103 32040100 097ed303 0401000b     .!.....2..~.....
    6470:	09150313 04010003 018e030b 01000d09     ................
    6480:	09090f03 02030100 01000709 0c090103     ................
    6490:	01030100 01000b09 05090203 7e030100     ...............~
    64a0:	01000209 06090203 60030100 01000709     ...........`....
    64b0:	09090203 76030100 01000309 0904eb03     .......v........
    64c0:	0301000c 00000902 09090301 03010002     ................
    64d0:	00030979 09070301 03010002 00030979     y...........y...
    64e0:	09070301 03010003 0003097e 09020301     ........~.......
    64f0:	04010002 7c9f030a 01001109 f8030b04     .......|........
    6500:	00060903 096b0301 04010005 7c9d030a     ......k........|
    6510:	01000709 f8030b04 00030903 030a0401     ................
    6520:	04097be8 0b040100 09049803 04010006     .{..............
    6530:	7be8030a 01000209 98030b04 00030904     ...{............
    6540:	7f9f0301 01000509 f1034d04 000f097d     .........M..}...
    6550:	030b0401 0309028f 4d040100 097df103     ...........M..}.
    6560:	04010002 07d9032a 01000609 a7034d04     ....*........M..
    6570:	00020978 09020301 03010002 00030901     x...............
    6580:	032a0401 030907d6 7d030100 01000e09     ..*........}....
    6590:	03090103 02030100 01000309 12090503     ................
    65a0:	01030100 01000d09 09090403 05030100     ................
    65b0:	01000309 02097903 05030100 01000409     .....y..........
    65c0:	02097e03 02030100 01000509 02097b03     .~...........{..
    65d0:	07030100 01000609 06090203 7e030100     ...............~
    65e0:	01000409 02090203 7e030100 01000309     ...........~....
    65f0:	09090203 4d040100 09789b03 04010008     .......M..x.....
    6600:	07d9032a 01000609 0e090103 04030100     *...............
    6610:	01000909 03090103 04030100 01000309     ................
    6620:	02097903 05030100 01000409 04097b03     .y...........{..
    6630:	07030100 01000509 06090203 7e030100     ...............~
    6640:	01000409 02090203 7e030100 01000309     ...........~....
    6650:	07090203 0b040100 097ab003 03010006     ..........z.....
    6660:	000a0901 09020301 04010003 7ab60332     ............2..z
    6670:	01000b09 15031304 01000309 b9030b04     ................
    6680:	000c0905 7dd80301 01000f09 07090103     .......}........
    6690:	24030100 01000f09 b5033204 0009097c     ...$.....2..|...
    66a0:	03130401 00030915 030b0401 0c0903a4     ................
    66b0:	02030100 01000309 c5033204 0009097c     .........2..|...
    66c0:	03130401 00030915 030b0401 0c090399     ................
    66d0:	02030100 01000309 d0033204 0009097c     .........2..|...
    66e0:	03130401 00030915 030b0401 0c0903ad     ................
    66f0:	02030100 01000309 bc033204 0009097c     .........2..|...
    6700:	03130401 00030915 030b0401 0d0903bb     ................
    6710:	98030100 00080909 09010301 04010003     ................
    6720:	73970332 01000909 15031304 01000309     2..s............
    6730:	d2030b04 000d090b 09020301 03010012     ................
    6740:	0002097e 09020301 03010002 0003097f     ~...............
    6750:	09080301 03010002 0003097e 09050301     ........~.......
    6760:	03010003 0002097e 09040301 03010002     ....~...........
    6770:	0002097b 09050301 03010003 0003097b     {...........{...
    6780:	09010301 03010003 00030902 097f0301     ................
    6790:	03010003 00030901 097e0301 03010003     ..........~.....
    67a0:	00020904 09030301 03010003 000d0905     ................
    67b0:	09010301 04010007 16820303 01000a09     ................
    67c0:	c7030b04 0006096a 09020301 03010003     ....j...........
    67d0:	0002097e 09020301 03010009 00090902     ~...............
    67e0:	09030301 03010009 00100901 09020301     ................
    67f0:	03010008 00040906 09030301 03010003     ................
    6800:	0003097d 09030301 0301001d 00110979     }...........y...
    6810:	09070301 03010006 00030979 09070301     ........y.......
    6820:	03010007 00090979 09070301 03010006     ....y...........
    6830:	08097fa8 04040100 09769d03 03010003     ..........v.....
    6840:	00210903 030b0401 050909e1 02030100     ..!.............
    6850:	01000609 02097d03 03030100 01000209     .....}..........
    6860:	03097d03 01030100 01000209 06090203     .}..............
    6870:	7e030100 01000709 03090203 02030100     ...~............
    6880:	01000909 ed030404 00170976 097e0301     ........v.....~.
    6890:	03010005 00020902 097e0301 03010009     ..........~.....
    68a0:	0021096e 030b0401 150909bb 02030100     n.!.............
    68b0:	01000309 03097e03 02030100 01000509     .....~..........
    68c0:	0d090803 7f030100 01000209 03090103     ................
    68d0:	7f030100 01000309 05090103 04040100     ................
    68e0:	0975d203 04010002 0a8e030b 01001f09     ..u.............
    68f0:	ec030404 00050977 09060301 0301001c     ....w...........
    6900:	00050905 09030301 03010003 00060902     ................
    6910:	09010301 03010002 00030971 09320301     ........q.....2.
    6920:	0301000c 0003097d 09010301 03010007     ....}...........
    6930:	0002097f 09010301 03010003 00030901     ................
    6940:	09010301 03010002 0003097f 09020301     ................
    6950:	03010005 0002097f 09010301 03010002     ................
    6960:	0002097f 09010301 04010004 07e6030b     ................
    6970:	01000809 f5030404 00030975 09760301     ........u.....v.
    6980:	0401000c 0a95030b 01000309 eb030404     ................
    6990:	00020975 030b0401 05090a95 04040100     u...............
    69a0:	0975eb03 03010003 000e0936 093a0301     ..u.....6.....:.
    69b0:	0301000f 00030946 093a0301 04010006     ....F.....:.....
    69c0:	09c9030b 01000809 c7030404 00050975     ............u...
    69d0:	09360301 04010004 0a83030b 01000509     ..6.............
    69e0:	fd030404 00060975 093a0301 04010009     ....u.....:.....
    69f0:	09cc030b 01000309 0c090503 04040100     ................
    6a00:	0975d503 03010002 00040957 09290301     ..u.....W.....).
    6a10:	03010002 00030957 09290301 03010003     ....W.....).....
    6a20:	00040957 09290301 03010002 0003097c     W.....).....|...
    6a30:	095b0301 03010007 00020904 097c0301     ..[...........|.
    6a40:	03010003 00020905 097b0301 03010003     ..........{.....
    6a50:	00050905 030b0401 02090acf 04040100     ................
    6a60:	0975b103 04010003 0acf030b 01000509     ..u.............
    6a70:	e1030404 00060975 030b0401 08090aa5     ....u...........
    6a80:	04030100 01000909 c7030404 00040975     ............u...
    6a90:	030b0401 07090ab9 04040100 0975c703     ..............u.
    6aa0:	04010002 0ab9030b 01000b09 be030304     ................
    6ab0:	00050915 030b0401 02096ac2 03040100     .........j......
    6ac0:	0915be03 04010003 6a98030b 01001409     ...........j....
    6ad0:	04090303 71030100 01000409 fc030404     .......q........
    6ae0:	00050977 09040301 03010014 00050905     w...............
    6af0:	09030301 03010003 00060902 09010301     ................
    6b00:	03010002 00030971 09140301 0301000f     ....q...........
    6b10:	06097dfd 0b040100 090aa103 03010008     .}..............
    6b20:	00030966 097f0301 03010002 00030901     f...............
    6b30:	097f0301 03010003 00050901 7f8e0301     ................
    6b40:	01000709 12090103 7f030100 01000209     ................
    6b50:	02090203 06030100 01000209 03090203     ................
    6b60:	78030100 01000209 02090c03 7b030100     ...x...........{
    6b70:	01000209 03090503 7d030100 01000309     ...........}....
    6b80:	03090703 78030100 01000209 05097f03     .......x........
    6b90:	09030100 01000309 03097b03 7f030100     .........{......
    6ba0:	01000209 05090103 02030100 01000309     ................
    6bb0:	06097e03 05030100 01000209 02097e03     .~...........~..
    6bc0:	02030100 01000609 03090403 01030100     ................
    6bd0:	01000809 ad030c04 0006097b 09010301     ........{.......
    6be0:	0301000d 00150904 09010301 0301000e     ................
    6bf0:	0002097f 09010301 03010002 000d0902     ................
    6c00:	09010301 0301000a 00100902 09010301     ................
    6c10:	03010005 000a0904 097f0301 03010003     ................
    6c20:	000a0901 030b0401 090904c9 01030100     ................
    6c30:	01000b09 0b090203 03030100 01000909     ................
    6c40:	0d090103 03030100 01000809 55090403     ...............U
    6c50:	7c030100 01000909 10090403 7c030100     ...|...........|
    6c60:	01000309 11090403 0c040100 097bba03     ..............{.
    6c70:	03010010 00200901 09010301 0301000a     ...... .........
    6c80:	00160901 09020301 03010016 000c0901     ................
    6c90:	09010301 0301000e 000d0901 00e00301     ................
    6ca0:	01000d09 0a097e03 0b040100 0903a303     .....~..........
    6cb0:	03010004 00070901 09010301 03010009     ................
    6cc0:	00050902 096a0301 03010007 00070901     ......j.........
    6cd0:	09010301 03010009 00050902 7efb0301     ...............~
    6ce0:	01000709 07090103 7f030100 01000209     ................
    6cf0:	02090303 7e030100 01000309 02090203     .......~........
    6d00:	eb030100 001b0900 03320401 09097589     ..........2..u..
    6d10:	13040100 03091503 0b040100 090ad703     ................
    6d20:	0301000d 00050902 090e0301 03010009     ................
    6d30:	0a097f94 ec030100 000a0900 7f9b0301     ................
    6d40:	01000209 02090103 7f030100 01000509     ................
    6d50:	0900e503 03010003 07097fa5 02030100     ................
    6d60:	01000509 06090203 d7030100 00020900     ................
    6d70:	7fa90301 01000209 0900d703 03010003     ................
    6d80:	07097fb0 02030100 01000509 09090403     ................
    6d90:	ca030100 00030900 7fb80301 01000209     ................
    6da0:	02090103 7f030100 01000509 0900c803     ................
    6db0:	03010003 0007095d 09020301 03010008     ....]...........
    6dc0:	00090904 091d0301 03010003 00020966     ............f...
    6dd0:	097f0301 03010002 00050901 091a0301     ................
    6de0:	04010003 74ff030d 01000709 03097d03     .......t.....}..
    6df0:	03030100 01000409 06090203 0b040100     ................
    6e00:	090ac503 03010015 00060904 09360301     ..............6.
    6e10:	03010009 00020952 097f0301 03010002     ....R...........
    6e20:	00050901 092e0301 03010003 00070974     ............t...
    6e30:	090c0301 03010002 00020974 090c0301     ........t.......
    6e40:	03010003 0a097f97 7f030100 01000209     ................
    6e50:	05090103 e9030100 00030900 7fb40301     ................
    6e60:	01000709 0900cc03 03010002 02097fb4     ................
    6e70:	cc030100 00030900 09610301 03010007     ..........a.....
    6e80:	0002091f 09610301 03010002 0003091f     ......a.........
    6e90:	09480301 03010008 00080904 09010301     ..H.............
    6ea0:	03010002 0005097f 09010301 03010003     ................
    6eb0:	06097ef6 02030100 01001409 02097f03     .~..............
    6ec0:	08030100 01000409 03090203 05030100     ................
    6ed0:	01000209 02090603 7a030100 01000209     ...........z....
    6ee0:	03090103 7a030100 01000609 05090b03     .......z........
    6ef0:	7b030100 01000509 03090103 7a030100     ...{...........z
    6f00:	01000609 03097e03 02030100 01000509     .....~..........
    6f10:	04090603 02030100 01000309 05097b03     .............{..
    6f20:	04030100 01000309 06097c03 07030100     .........|......
    6f30:	01000509 03090303 7f030100 01000209     ................
    6f40:	09090103 04040100 09788103 03010009     ..........x.....
    6f50:	00060901 097f0301 03010003 000b0901     ................
    6f60:	030b0401 08090882 04040100 0977fe03     ..............w.
    6f70:	04010002 0882030b 01000509 06090303     ................
    6f80:	06030100 01000509 0f090103 02030100     ................
    6f90:	01000709 19090303 7d030100 01000909     ...........}....
    6fa0:	10090303 7d030100 01000309 0b090303     .......}........
    6fb0:	76030100 01000a09 16090103 b9030100     ...v............
    6fc0:	0008097a 032a0401 0a090281 0b030100     z.....*.........
    6fd0:	01000b09 1f091903 03030100 01000809     ................
    6fe0:	e0030b04 0022097d 7c9f0301 01000a09     ....}."....|....
    6ff0:	00090103 83030100 000c0901 09060301     ................
    7000:	03010005 00020903 097c0301 03010002     ..........|.....
    7010:	00030904 09010301 03010003 0009097f     ................
    7020:	00c10301 01000209 07094203 04030100     .........B......
    7030:	01000309 02097e03 02030100 01000209     .....~..........
    7040:	02097e03 02030100 01000309 09090603     .~..............
    7050:	01030100 01001109 03090203 04030100     ................
    7060:	01001009 16090503 20030100 01001809     ........... ....
    7070:	0e096003 04030100 01000809 0a090d03     .`..............
    7080:	01030100 01000309 09090203 02030100     ................
    7090:	01000309 06090303 03030100 01000309     ................
    70a0:	03097603 76030100 01000609 0b090303     .v.....v........
    70b0:	1d030100 01000209 07095803 28030100     .........X.....(
    70c0:	01000209 07094803 0b030100 01000709     .....H..........
    70d0:	07093d03 03030100 01000d09 0c090303     .=..............
    70e0:	0a030100 01000609 02097603 02030100     .........v......
    70f0:	01000309 08090a03 13040100 097de303     ..............}.
    7100:	04010004 029b030b 01000209 04090203     ................
    7110:	7e030100 01000209 03090203 7e030100     ...~...........~
    7120:	01000309 02090203 72030100 01000409     ...........r....
    7130:	04090e03 7e030100 01000409 05090203     .......~........
    7140:	79030100 01000709 d5033204 000d097d     ...y.....2..}...
    7150:	03130401 00030915 030b0401 0c090ce6     ................
    7160:	01030100 01000709 04090203 7d030100     ...............}
    7170:	01000209 02090303 02030100 01000309     ................
    7180:	07090303 29030100 01002009 d4033204     .......). ...2..
    7190:	000b0972 03130401 00030915 030b0401     r...............
    71a0:	0e090cf2 2a030100 01000209 02095603     .......*.....V..
    71b0:	2a030100 01000309 09096c03 14030100     ...*.....l......
    71c0:	01000209 02096c03 14030100 01000309     .....l..........
    71d0:	09097603 0a030100 01000209 02097603     .v...........v..
    71e0:	0a030100 01000309 08097103 0f030100     .........q......
    71f0:	01000509 09095b03 25030100 01000509     .....[.....%....
    7200:	09096503 1b030100 01000509 09096003     .e...........`..
    7210:	20030100 01000509 0975d003 03010009     ... ......u.....
    7220:	00000906 097a0301 03010005 00050906     ......z.........
    7230:	09010301 03010006 000a090f 7fa90301     ................
    7240:	01000a09 00090603 7a030100 01000209     ...........z....
    7250:	09090603 24030100 01000909 0c090103     .......$........
    7260:	02030100 01000c09 02090103 7f030100     ................
    7270:	01000609 04090103 03030100 01000209     ................
    7280:	02097d03 03030100 01000509 09095503     .}...........U..
    7290:	05030100 01000809 02097f03 01030100     ................
    72a0:	01000209 03097f03 01030100 01000609     ................
    72b0:	06090403 01030100 01000c09 1f090d03     ................
    72c0:	01030100 01001209 02097f03 07030100     ................
    72d0:	01000509 05090203 7e030100 01000209     ...........~....
    72e0:	05090203 0b030100 01000209 02097503     .............u..
    72f0:	0b030100 01000309 09096d03 03030100     .........m......
    7300:	01000809 fe030c04 00070904 09010301     ................
    7310:	03010009 00060905 7ee00301 01000b09     ...........~....
    7320:	14090203 01030100 01000d09 0c090203     ................
    7330:	02030100 01000f09 0c090103 7f030100     ................
    7340:	01000209 02090103 02030100 01000309     ................
    7350:	0b090303 7e030100 01000209 02090203     .......~........
    7360:	7e030100 01000209 06090203 01030100     ...~............
    7370:	01000609 0c090503 02030100 01000609     ................
    7380:	19090303 01030100 01000d09 09018703     ................
    7390:	0301000a 09097ee0 08030100 01000309     .....~..........
    73a0:	b7030b04 00040907 09030301 03010009     ................
    73b0:	00070901 09050301 03010008 0009097d     ............}...
    73c0:	09030301 03010004 0002097d 09030301     ........}.......
    73d0:	04010003 74bc034d 01000a09 00090203     ....M..t........
    73e0:	7e030100 01000309 03090203 02030100     ...~............
    73f0:	01000609 08096603 03030100 01000009     .....f..........
    7400:	04096203 01030100 01000009 03090203     .b..............
    7410:	04030100 01000209 ae031e04 0007097e     ............~...
    7420:	09040301 0301000b 0003097f 09010301     ................
    7430:	03010006 00020901 09030301 03010006     ................
    7440:	001a0902 097e0301 03010002 00160902     ......~.........
    7450:	00070901 04010100 02050004 2000b420     ............ .. 
    7460:	0102fd03 00090103 01030100 01001d09     ................
    7470:	00000209 04040101 70020500 03200040     ...........p@. .
    7480:	030106e0 00130902 03320401 08097da5     ..........2..}..
    7490:	04040100 0902f403 03010003 000b0903     ................
    74a0:	09060301 03010002 000d0901 09030301     ................
    74b0:	03010017 000e0902 09070301 03010006     ................
    74c0:	020901ae d1030100 0003097e 09010301     ........~.......
    74d0:	03010002 020901b0 d0030100 0003097e     ............~...
    74e0:	097f0301 03010003 030901af d1030100     ................
    74f0:	0006097e 01b10301 01000e09 097ed003     ~.............~.
    7500:	03010003 050901ae d2030100 0003097e     ............~...
    7510:	09010301 03010003 070901ad 02030100     ................
    7520:	01000309 06090203 02030100 01000d09     ................
    7530:	06090203 04030100 01000b09 097ed103     ..............~.
    7540:	03010008 0209019b e3030100 0003097e     ............~...
    7550:	019d0301 01000609 097ee303 0301000b     ..........~.....
    7560:	0909019d e3030100 0005097e 09020301     ........~.......
    7570:	03010003 0002097e 09020301 03010005     ....~...........
    7580:	000e0964 091c0301 03010003 00030964     d...........d...
    7590:	09010301 03010003 0003091b 03070401     ................
    75a0:	0f097bb4 00030100 01000009 03090403     .{..............
    75b0:	02030100 01000f09 0901fe03 03010002     ................
    75c0:	00000905 03090401 10097da8 04030100     .........}......
    75d0:	01000009 1f090203 47040100 05096d03     ...........G.m..
    75e0:	05030100 01000009 04090103 7f030100     ................
    75f0:	01000609 03097b03 08030100 01000209     .....{..........
    7600:	03097f03 01030100 01000309 03097903     .............y..
    7610:	07030100 01000209 02090203 03030100     ................
    7620:	01000709 13090103 01030100 01000209     ................
    7630:	02097f03 01030100 01000509 0e090703     ................
    7640:	7d030100 01000309 05090303 0f030100     ...}............
    7650:	01000309 11090103 02030100 01001f09     ................
    7660:	0b090203 02030100 01001109 06090203     ................
    7670:	32040100 097ea103 04010003 00d10329     ...2..~.....)...
    7680:	01000309 09090203 04030100 01000b09     ................
    7690:	06090303 1d030100 01000609 e8034704     .............G..
    76a0:	00030900 09010301 03010002 00080901     ................
    76b0:	03290401 0a097ed5 47040100 0901ae03     ..)..~.....G....
    76c0:	04010003 7ed20329 01000409 ae034704     ....)..~.....G..
    76d0:	00030901 093f0301 0301000b 00070901     ......?.........
    76e0:	097f0301 03010002 00020902 09020301     ................
    76f0:	0301000a 00050952 09320301 03010003     ....R.....2.....
    7700:	0004094b 09010301 03010002 00020934     K...........4...
    7710:	094e0301 03010002 00030932 094e0301     ..N.....2.....N.
    7720:	03010003 000b0901 09320301 03010006     ..........2.....
    7730:	00080905 097f0301 03010002 000b0901     ................
    7740:	09010301 03010014 00080901 09020301     ................
    7750:	03010011 00090970 09020301 03010003     ....p...........
    7760:	0004090b 030a0401 04097fb2 01030100     ................
    7770:	01000009 0f090103 03040100 0910c003     ................
    7780:	03010005 000b0904 097c0301 03010003     ..........|.....
    7790:	00020904 097c0301 03010002 00020904     ......|.........
    77a0:	09050301 03010003 00060905 09060301     ................
    77b0:	03010003 00080914 096c0301 03010002     ..........l.....
    77c0:	00060914 095e0301 0301000d 00080901     ......^.........
    77d0:	09040301 0301000c 00060901 09130301     ................
    77e0:	03010009 000d0909 09770301 03010004     ..........w.....
    77f0:	00020909 09770301 03010002 00030909     ......w.........
    7800:	09770301 03010003 00060909 09680301     ..w...........h.
    7810:	03010004 00080901 03470401 0b096fd3     ..........G..o..
    7820:	01030100 01000709 02097f03 02030100     ................
    7830:	01000209 0a090103 03030100 01000309     ................
    7840:	03097f03 01030100 01000c09 14090103     ................
    7850:	01030100 01000809 11090203 78030100     ...............x
    7860:	01000909 03090103 04030100 01000409     ................
    7870:	7d030e04 01000409 06090103 02030100     ...}............
    7880:	01000309 03097e03 02030100 01000309     .....~..........
    7890:	03090203 02030100 01000409 02097e03     .............~..
    78a0:	02030100 01000309 d2030804 00050909     ................
    78b0:	09080301 04010000 75bc0309 01001409     ...........u....
    78c0:	00090403 7c030100 01000909 02090403     .......|........
    78d0:	49030100 01001509 13090403 18030100     ...I............
    78e0:	01001209 08090103 04030100 01000609     ................
    78f0:	0c090203 7e030100 01000409 03090203     .......~........
    7900:	2b040100 0905c203 04010007 7abc0309     ...+...........z
    7910:	01000909 c4032b04 00060905 03090401     .....+..........
    7920:	02097abc 02030100 01000909 097f8403     .z..............
    7930:	0301000b 00130905 09010301 0301000e     ................
    7940:	000b097a 00fa0301 01000509 0f090203     z...............
    7950:	8c030100 000b097f 032b0401 0c0906c0     ..........+.....
    7960:	09040100 097ab203 04010009 05ce032b     ......z.....+...
    7970:	01000609 b2030904 0002097a 09020301     ........z.......
    7980:	03010006 0004097e 09020301 04010003     ....~...........
    7990:	05d1032b 01000909 a4030904 000b097a     +...........z...
    79a0:	7f8f0301 01000309 85032a04 00060903     .........*......
    79b0:	09010301 04010000 096c0307 0301000c     ..........l.....
    79c0:	00000900 09050301 03010003 110900e4     ................
    79d0:	07030100 01000209 06097903 19040100     .........y......
    79e0:	097c8103 04010003 03ff0307 01000209     ..|.............
    79f0:	02090703 19040100 097bfc03 0401000d     ..........{.....
    7a00:	04860307 01001c09 097fa203 0301000c     ................
    7a10:	00000903 09050301 0301000c 0008097b     ............{...
    7a20:	09050301 03010003 0002097e 09020301     ........~.......
    7a30:	03010003 0003097e 09020301 03010003     ....~...........
    7a40:	0003097e 09020301 04010009 7e950309     ~..............~
    7a50:	01000309 09019303 0401000f 00e50307     ................
    7a60:	01003009 9d030904 0004097e 03070401     .0......~.......
    7a70:	0f0901e3 2a040100 0901ff03 03010005     .......*........
    7a80:	00000900 090e0301 0301001c 10097eec     .............~..
    7a90:	03030100 01000009 cb030e04 0020097b     ............{. .
    7aa0:	09010301 03010000 00130904 09020301     ................
    7ab0:	0301000a 0003097e 09020301 03010002     ....~...........
    7ac0:	0003097e 09090301 03010002 00050973     ~...........s...
    7ad0:	09010301 03010004 00040907 09010301     ................
    7ae0:	03010002 00020904 03310401 00040953     ..........1.S...
    7af0:	09010301 03010000 002a0902 09020301     ..........*.....
    7b00:	03010005 00050901 09010301 03010003     ................
    7b10:	00060907 09020301 0301000b 0006097e     ............~...
    7b20:	09100301 03010006 00020965 09010301     ........e.......
    7b30:	03010003 00030901 09010301 03010004     ................
    7b40:	00040901 09120301 03010004 00050905     ................
    7b50:	097d0301 03010003 00050903 028f0301     ..}.............
    7b60:	01000309 00090103 07030100 01000809     ................
    7b70:	0b097c03 04030100 01000309 15090103     .|..............
    7b80:	09030100 01000f09 07090103 03030100     ................
    7b90:	01000709 16090103 02030100 01001009     ................
    7ba0:	10090103 02030100 01001609 df030e04     ................
    7bb0:	0004097e 09020301 03010002 00030901     ~...............
    7bc0:	09030301 03010008 0024097b 09010301     ........{.$.....
    7bd0:	03010003 00040901 03310401 00040918     ..........1.....
    7be0:	09010301 03010000 0006097f 09010301     ................
    7bf0:	03010007 00240902 09010301 03010003     ......$.........
    7c00:	00040901 09030301 03010007 00030902     ................
    7c10:	09010301 03010014 000d0902 09760301     ..............v.
    7c20:	03010009 00040901 09010301 03010004     ................
    7c30:	040901b1 01030100 01000009 08090503     ................
    7c40:	02030100 01001f09 cb030804 00050909     ................
    7c50:	09070301 03010009 00050901 090d0301     ................
    7c60:	03010003 00090975 09020301 03010005     ....u...........
    7c70:	00050902 095b0301 03010005 00020927     ......[.....'...
    7c80:	095c0301 03010003 0002097e 09020301     ..\.....~.......
    7c90:	04010003 76d9030a 01000309 16091703     .......v........
    7ca0:	01030100 01000809 ae030804 000e0908     ................
    7cb0:	030a0401 0409768c 10030100 01001109     .....v..........
    7cc0:	06091003 08040100 0909d403 03010006     ................
    7cd0:	00020903 097d0301 03010005 00040904     ......}.........
    7ce0:	097c0301 03010002 00030904 097c0301     ..|...........|.
    7cf0:	03010005 00050902 030e0401 030974ff     .............t..
    7d00:	02030100 01000509 80032a04 000b0903     .........*......
    7d10:	03080401 03090885 2a040100 097b9e03     ...........*..{.
    7d20:	04010002 04e00308 01000309 03090103     ................
    7d30:	01030100 01000509 9e032a04 0002097b     .........*..{...
    7d40:	03080401 080904e2 2a040100 0977fb03     ...........*..w.
    7d50:	03010006 170903b0 d0030100 0008097c     ............|...
    7d60:	03b00301 01000309 097cd003 03010003     ..........|.....
    7d70:	030903b0 07030100 01000809 03097903     .............y..
    7d80:	07030100 01000609 09091303 7d030100     ...............}
    7d90:	01000509 03090303 7d030100 01000309     ...........}....
    7da0:	03090303 7d030100 01000309 03090303     .......}........
    7db0:	7d030100 01000209 03090303 08040100     ...}............
    7dc0:	0905bd03 04010006 73f7030e 01000b09     ...........s....
    7dd0:	c2030a04 00030902 09010301 0301000f     ................
    7de0:	0003097a 09010301 0301000f 00040909     z...............
    7df0:	09010301 0401000f 7dba030e 01000309     ...........}....
    7e00:	b7032a04 000f0906 09130301 03010003     .*..............
    7e10:	00020970 09100301 03010002 00030970     p...........p...
    7e20:	09100301 03010003 00030970 09100301     ........p.......
    7e30:	03010003 00030970 09100301 03010002     ....p...........
    7e40:	00020970 09100301 04010003 05bd0308     p...............
    7e50:	01000609 d0030e04 000c0973 09010301     ........s.......
    7e60:	03010000 0003097f 09010301 03010005     ................
    7e70:	00120902 09010301 03010004 00030901     ................
    7e80:	09020301 03010003 00050901 097f0301     ................
    7e90:	03010002 00020901 097f0301 03010003     ................
    7ea0:	00050901 09790301 03010003 00040904     ......y.........
    7eb0:	03310401 04090181 01030100 01000009     ..1.............
    7ec0:	03090103 03030100 01001909 10090103     ................
    7ed0:	02030100 01000509 03097903 01030100     .........y......
    7ee0:	01000409 79030e04 01000409 0d090103     .......y........
    7ef0:	31040100 0901d303 04010003 7eb1030e     ...1...........~
    7f00:	01000609 1e090103 08030100 01002109     .............!..
    7f10:	cf033104 00100901 09100301 04010012     .1..............
    7f20:	7e81030e 01000d09 10090103 25030100     ...~...........%
    7f30:	01000c09 02097f03 01030100 01000d09     ................
    7f40:	8a033104 00130901 09010301 04010019     .1..............
    7f50:	7efd030e 01001709 06090403 01030100     ...~............
    7f60:	01000809 03090203 01030100 01000309     ................
    7f70:	03096a03 31040100 0901cf03 0301000a     .j.....1........
    7f80:	00140910 030e0401 0f097ebc 58030100     .........~.....X
    7f90:	01000b09 d3033104 00030901 030e0401     .....1..........
    7fa0:	04097e9a 01030100 01000409 b2030704     .~..............
    7fb0:	00040901 09030301 03010003 000e0905     ................
    7fc0:	09030301 03010006 0003097d 09030301     ........}.......
    7fd0:	03010016 0002097e 09020301 04010003     ....~...........
    7fe0:	7f820309 01000e09 09019303 0401000f     ................
    7ff0:	09760307 04010012 7f8c0309 01000409     ..v.............
    8000:	f4030704 000f0900 03080401 05090ae3     ................
    8010:	02030100 01000409 02090103 05030100     ................
    8020:	01000209 02097d03 05030100 01000809     .....}..........
    8030:	03091f03 1a030100 01000309 02090503     ................
    8040:	7b030100 01000309 03090303 02030100     ...{............
    8050:	01000209 02097e03 01030100 01000309     .....~..........
    8060:	03090103 02040100 09739e03 04010012     ..........s.....
    8070:	0ce60308 01000309 02094203 02030100     .........B......
    8080:	01000509 0e090b03 02030100 01000609     ................
    8090:	03090103 2e030100 01000509 02095403     .............T..
    80a0:	7d030100 01000d09 f6030e04 00030973     ...}........s...
    80b0:	09010301 03010009 00030901 09030301     ................
    80c0:	03010005 00060901 09050301 03010009     ................
    80d0:	00080902 09150301 0301000d 0002097b     ............{...
    80e0:	09010301 03010004 0006097f 09120301     ................
    80f0:	03010005 00030973 090d0301 03010005     ....s...........
    8100:	00070952 09050301 03010003 0004097c     R...........|...
    8110:	09070301 03010004 0003091f 09010301     ................
    8120:	03010009 00040906 097a0301 03010002     ..........z.....
    8130:	00060901 09050301 03010002 0007095c     ............\...
    8140:	09060301 03010003 00090902 09010301     ................
    8150:	03010009 000c091b 03080401 0a090b84     ................
    8160:	04030100 01000909 02097c03 04030100     .........|......
    8170:	01000209 f3032a04 00080977 09040301     .....*..w.......
    8180:	03010002 00090908 09020301 04010003     ................
    8190:	08820308 01001309 fe032a04 00020977     .........*..w...
    81a0:	03080401 03090882 2a040100 09788203     ...........*..x.
    81b0:	04010005 07fe0308 01000809 f2032a04     .............*..
    81c0:	00080977 03080401 1309088e 2a040100     w..............*
    81d0:	0977f203 04010002 088e0308 01000309     ..w.............
    81e0:	f6032a04 00050977 03080401 1309088a     .*..w...........
    81f0:	2a040100 0977f603 04010002 088a0308     ...*..w.........
    8200:	01000309 fa032a04 00050977 03080401     .....*..w.......
    8210:	13090886 2a040100 0977fa03 04010002     .......*..w.....
    8220:	08860308 01000309 a6030704 00060975     ............u...
    8230:	09050301 03010000 100900c7 03030100     ................
    8240:	01000009 0c090703 79030100 01000809     ...........y....
    8250:	03090703 7e030100 01000209 03090203     .......~........
    8260:	7e030100 01000309 03090203 7e030100     ...~...........~
    8270:	01000309 09090203 09040100 097ecb03     ..............~.
    8280:	03010003 0f090193 07040100 21092e03     ...............!
    8290:	09040100 097ed403 04010003 01ac0307     ......~.........
    82a0:	01000f09 097ef603 03010005 00000900     ......~.........
    82b0:	09050301 03010003 110901e6 03030100     ................
    82c0:	01000009 08090203 02030100 01000309     ................
    82d0:	097eee03 03010019 00000900 09050301     ..~.............
    82e0:	04010003 09f60308 01001109 0974b503     ..............t.
    82f0:	0301000f 02090bcb b5030100 00090974     ............t...
    8300:	0bcb0301 01000209 0974b703 03010002     ..........t.....
    8310:	0009091e 090e0301 03010009 08090baf     ................
    8320:	d2030100 00060974 0ba10301 01000609     ....t...........
    8330:	02090d03 4f030100 01000709 0f093103     .......O.....1..
    8340:	dd030100 000d0973 09010301 03010003     ....s...........
    8350:	0003097e 09590301 04010003 0481032a     ~.....Y.....*...
    8360:	01000e09 93030904 0013097d 03080401     ........}.......
    8370:	02097ed0 09040100 0901b003 04010003     .~..............
    8380:	7ed00308 01001209 b0030904 00030901     ...~............
    8390:	03080401 0e097ed0 09040100 0901b003     .....~..........
    83a0:	04010003 7ed00308 01000e09 b0030904     .......~........
    83b0:	00030901 03080401 08097eec 09040100     .........~......
    83c0:	09019403 04010002 7ed00308 01000609     ...........~....
    83d0:	03091c03 2d030100 01000309 04090303     .......-........
    83e0:	8e030100 0013090c 090d0301 04010002     ................
    83f0:	74ae0302 01000209 d2030804 0003090b     ...t............
    8400:	74880301 01000d09 03090803 79030100     ...t...........y
    8410:	01000209 03090403 7a030100 01000209     ...........z....
    8420:	03090603 03030100 01000209 090bc203     ................
    8430:	03010013 00050902 09020301 03010005     ................
    8440:	0005095b 09030301 03010002 0002097e     [...........~...
    8450:	09020301 04010003 76d9030a 01000309     ...........v....
    8460:	15091703 01030100 01000809 ae030804     ................
    8470:	000a0908 030a0401 0409768c 10030100     .........v......
    8480:	01001409 06091003 08040100 0909d803     ................
    8490:	03010006 0002097c 09030301 03010002     ....|...........
    84a0:	0005097d 09040301 03010004 0005097e     }...........~...
    84b0:	097e0301 04010003 7581030e 01000809     ..~........u....
    84c0:	06090203 08040100 090b8503 0401000b     ................
    84d0:	7b9e032a 01000209 e0030804 00050904     *..{............
    84e0:	032a0401 030977fd 08040100 09088403     ..*..w..........
    84f0:	04010003 77fc032a 01000309 85030804     ....*..w........
    8500:	00030908 032a0401 02097b9e 08040100     ......*..{......
    8510:	0904e203 04010006 77fb032a 01000609     ........*..w....
    8520:	0903b003 03010011 08097cd0 b0030100     .........|......
    8530:	00030903 7cd00301 01000309 0903b003     .......|........
    8540:	03010003 00080907 09790301 03010003     ..........y.....
    8550:	00060907 09100301 03010009 00030903     ................
    8560:	097d0301 03010002 00030903 097d0301     ..}...........}.
    8570:	03010003 00030903 097d0301 03010003     ..........}.....
    8580:	00030903 03080401 080905e0 2a040100     ...............*
    8590:	097aa003 04010004 05e00308 01000309     ..z.............
    85a0:	d4030e04 000c0973 030a0401 040902c2     ....s...........
    85b0:	01030100 01001209 03097a03 01030100     .........z......
    85c0:	01001209 05090903 01030100 01001209     ................
    85d0:	ba030e04 0003097d 032a0401 0f0906b7     ....}.....*.....
    85e0:	03030100 01000609 07091003 70030100     ...............p
    85f0:	01000309 06091003 08040100 0905e003     ................
    8600:	0401000d 7aa0032a 01000409 e0030804     ....*..z........
    8610:	00030905 03070401 0e0976e2 06030100     .........v......
    8620:	01000309 03097a03 1f030100 01000e09     .....z..........
    8630:	94031904 0003097c 03070401 040903d3     ....|...........
    8640:	19040100 097caf03 04010015 02940307     ......|.........
    8650:	01000409 ec031904 0008097d 03070401     ........}.......
    8660:	0b090294 c0030100 00030901 097f0301     ................
    8670:	03010003 00020901 09040301 03010003     ................
    8680:	0002097b 09050301 03010005 05097ebc     {............~..
    8690:	c4030100 00030901 09120301 04010003     ................
    86a0:	0ab00308 01000409 96030704 00110976     ............v...
    86b0:	03080401 020909ea 07040100 09769603     ..............v.
    86c0:	04010003 09ef0308 01001109 c0030704     ................
    86d0:	00080973 090a0301 0401001d 7fae0302     s...............
    86e0:	01000b09 1e030704 01000309 09029a03     ................
    86f0:	0301000a 08097de6 b5030100 00030902     .....}..........
    8700:	09670301 04010005 7cad0319 01000909     ..g........|....
    8710:	d3030704 00020903 03190401 0d097caf     .............|..
    8720:	07040100 09029403 03010014 040901bf     ................
    8730:	01030100 01000209 06097f03 c1030100     ................
    8740:	0003097e 01bf0301 01000309 d2030804     ~...............
    8750:	0002090a 03070401 020973ef 08040100     .........s......
    8760:	090c8f03 03010003 00020902 09020301     ................
    8770:	04010003 768f0307 01000709 097da903     .......v......}.
    8780:	03010003 0004090a 02810301 01000409     ................
    8790:	b3030904 0004097f 09650301 0301001d     ..........e.....
    87a0:	00060901 091e0301 0301000e 00030902     ................
    87b0:	7ee50301 01000309 1a093503 01030100     ...~.....5......
    87c0:	01000809 0c090403 e2030100 000b0900     ................
    87d0:	095e0301 03010006 00060901 09550301     ..^...........U.
    87e0:	03010012 2d0900d7 5d030100 01000e09     .......-...]....
    87f0:	0e097703 02030100 01000909 be033204     .w...........2..
    8800:	00110904 03090401 03097bc2 01030100     .........{......
    8810:	01000309 06090203 b0030100 000c097f     ................
    8820:	09010301 03010006 080900d3 77030100     ...............w
    8830:	01001009 09090203 32040100 0904be03     ...........2....
    8840:	04010011 7bc20309 01000309 03090103     .......{........
    8850:	02030100 01000609 0f092703 dd030100     .........'......
    8860:	0012097e 09010301 03010008 00070901     ~...............
    8870:	09020301 0301000c 005c0908 09160301     ..........\.....
    8880:	03010004 000c0902 09040301 0301002f     ............/...
    8890:	00050968 09020301 0301000c 002c0904     h.............,.
    88a0:	09040301 03010004 000c0902 09020301     ................
    88b0:	03010020 03090193 14040100 097da303      .............}.
    88c0:	04010008 02ea0309 01000209 96031404     ................
    88d0:	0002097d 03090401 030902ea 04030100     }...............
    88e0:	01000309 03090a03 14040100 097cf203     ..............|.
    88f0:	04010003 03910309 01000709 02093703     .............7..
    8900:	4c030100 01000709 03090403 14040100     ...L............
    8910:	097ce803 04010002 03c80309 01000709     ..|.............
    8920:	097fba03 03010008 020900c6 53030100     ...............S
    8930:	01000709 03090403 14040100 097ce103     ..............|.
    8940:	04010002 03c80309 01000709 097fbe03     ................
    8950:	03010007 00060904 03140401 03097cf6     .............|..
    8960:	09040100 0903c803 04010006 7cb80314     ...............|
    8970:	01000309 c8030904 00030903 03140401     ................
    8980:	03097cb8 09040100 0903c803 03010005     .|..............
    8990:	0004095a 09260301 03010005 07097fb5     Z.....&.........
    89a0:	cb030100 00020900 03080401 10097c8c     .............|..
    89b0:	09040100 0903d403 04010007 7cac0308     ...............|
    89c0:	01000309 81032a04 000b0904 03090401     .....*..........
    89d0:	13097d93 08040100 097ed003 04010002     .}........~.....
    89e0:	01b00309 01000309 d0030804 0012097e     ............~...
    89f0:	03090401 030901b0 08040100 097ed003     ..............~.
    8a00:	0401000e 01b00309 01000309 d0030804     ................
    8a10:	000e097e 03090401 030901b0 08040100     ~...............
    8a20:	097eec03 04010008 01940309 01000209     ..~.............
    8a30:	d0030804 0006097e 091c0301 04010003     ....~...........
    8a40:	03db0309 01000309 d1031404 0002097c     ............|...
    8a50:	03090401 070903c8 6a030100 01000709     ...........j....
    8a60:	03090303 14040100 097ccb03 04010002     ..........|.....
    8a70:	03c80309 01000809 07096203 1e030100     .........b......
    8a80:	01000209 09097003 03030100 01000309     .....p..........
    8a90:	c5031404 0002097c 03090401 080903c8     ....|...........
    8aa0:	32040100 097bf103 0401000d 04870309     ...2..{.........
    8ab0:	01000309 06090103 3e040100 0902cc03     ...........>....
    8ac0:	03010009 14097eb9 c7030100 00070901     .....~..........
    8ad0:	7eb90301 01000209 0901d703 0301000b     ...~............
    8ae0:	00050902 097e0301 03010005 00060902     ......~.........
    8af0:	097e0301 03010003 00030902 09020301     ..~.............
    8b00:	03010003 00030901 090c0301 0301000c     ................
    8b10:	0002097d 09030301 03010017 00350907     }.............5.
    8b20:	097b0301 03010002 00020905 097b0301     ..{...........{.
    8b30:	03010002 00080902 097e0301 03010002     ..........~.....
    8b40:	00030902 097e0301 03010003 00050905     ......~.........
    8b50:	091a0301 03010015 00020966 09020301     ........f.......
    8b60:	03010009 000f090a 09010301 03010003     ................
    8b70:	0012097f 09010301 03010004 00050903     ................
    8b80:	09010301 03010009 000d0903 097d0301     ..............}.
    8b90:	03010003 00030903 09020301 03010004     ................
    8ba0:	0013090a 09010301 03010012 00060902     ................
    8bb0:	094e0301 03010010 00030901 031e0401     ..N.............
    8bc0:	10097afe 07030100 01000009 04090203     .z..............
    8bd0:	7e030100 01000809 03090103 01030100     ...~............
    8be0:	01000309 02097f03 03030100 01000209     ................
    8bf0:	a6033e04 0006090b 09040301 0301000f     .>..............
    8c00:	0003097c 09040301 03010002 00040903     |...............
    8c10:	09020301 03010003 0002097f 09010301     ................
    8c20:	03010003 00030907 09010301 04010006     ................
    8c30:	7adb032a 01001d09 097be303 03010006     *..z......{.....
    8c40:	0609049d 05030100 01000809 a3033e04     .............>..
    8c50:	00080905 09370301 04010013 7684032a     ......7.....*..v
    8c60:	01000c09 09049d03 03010015 06097be3     .............{..
    8c70:	9d030100 00060904 09050301 04010008     ................
    8c80:	05e1033e 01000c09 0d090903 b9030100     >...............
    8c90:	0015097f 09030301 03010004 00080901     ................
    8ca0:	09030301 03010008 0004097d 09030301     ........}.......
    8cb0:	03010004 0002097d 09030301 04010005     ....}...........
    8cc0:	76b4032a 01000609 09049d03 03010015     *..v............
    8cd0:	06097be3 9d030100 00060904 09050301     .{..............
    8ce0:	04010008 05ae033e 01000809 b0032a04     ....>........*..
    8cf0:	000b0976 049d0301 01001509 097be303     v.............{.
    8d00:	03010006 0609049d 05030100 01000609     ................
    8d10:	097bf503 04010008 09bd033e 01001509     ..{.....>.......
    8d20:	c3032a04 00080976 033e0401 060909bd     .*..v.....>.....
    8d30:	04030100 01000609 a8032a04 001c0976     .........*..v...
    8d40:	049d0301 01001509 097be303 03010006     ..........{.....
    8d50:	0609049d 05030100 01000809 c1033e04     .............>..
    8d60:	000c0905 09010301 03010009 00030902     ................
    8d70:	09010301 0301000a 00040903 09010301     ................
    8d80:	0301000a 000a0902 09580301 03010002     ..........X.....
    8d90:	00020928 09580301 03010007 000e092f     (.....X...../...
    8da0:	09020301 03010017 00040901 09090301     ................
    8db0:	03010005 000b0905 09070301 03010017     ................
    8dc0:	000f0952 7da10301 01000e09 0e090203     R......}........
    8dd0:	7e030100 01000309 02090203 03030100     ...~............
    8de0:	01000509 fc032a04 00240978 033e0401     .....*..x.$...>.
    8df0:	06090784 04030100 01000609 09798e03     ..............y.
    8e00:	03010009 090906f8 88030100 00030979     ............y...
    8e10:	09190301 0301001d 0005091b 09650301     ..............e.
    8e20:	03010006 0003091b 091a0301 03010020     ............ ...
    8e30:	080906ac fc030100 00050979 06860301     ........y.......
    8e40:	01000309 0979fa03 03010003 18097eef     ......y......~..
    8e50:	9b030100 00050907 78e50301 01000409     ...........x....
    8e60:	09079b03 03010003 00160974 09010301     ........t.......
    8e70:	03010012 0003090b 000c0901 1a010100     ................
    8e80:	0200004f 000bcd00 fb010100 01000d0e     O...............
    8e90:	00010101 00010000 3a440100 5f4d495c     ..........D:\IM_
    8ea0:	545f4433 665c434c 776d7269 00657261     3D_TLC\firmware.
    8eb0:	495c3a44 44335f4d 434c545f 7269665c     D:\IM_3D_TLC\fir
    8ec0:	7261776d 6c615c65 69726f67 5c6d6874     mware\algorithm\
    8ed0:	4400324c 4d495c3a 5f44335f 5c434c54     L2.D:\IM_3D_TLC\
    8ee0:	6d726966 65726177 676c615c 7469726f     firmware\algorit
    8ef0:	4c5c6d68 3a440033 5f4d495c 545f4433     hm\L3.D:\IM_3D_T
    8f00:	665c434c 776d7269 5c657261 6f676c61     LC\firmware\algo
    8f10:	68746972 694d5c6d 44006373 4d495c3a     rithm\Misc.D:\IM
    8f20:	5f44335f 5c434c54 6d726966 65726177     _3D_TLC\firmware
    8f30:	4d4f435c 5c3a4400 335f4d49 4c545f44     \COM.D:\IM_3D_TL
    8f40:	69665c43 61776d72 635c6572 69666e6f     C\firmware\confi
    8f50:	3a440067 5f4d495c 545f4433 665c434c     g.D:\IM_3D_TLC\f
    8f60:	776d7269 5c657261 004c4148 495c3a44     irmware\HAL.D:\I
    8f70:	44335f4d 434c545f 7269665c 7261776d     M_3D_TLC\firmwar
    8f80:	41485c65 61445c4c 6f4d6174 6f74696e     e\HAL\DataMonito
    8f90:	3a440072 5f4d495c 545f4433 665c434c     r.D:\IM_3D_TLC\f
    8fa0:	776d7269 5c657261 5c4c4148 53636544     irmware\HAL\DecS
    8fb0:	44007374 4d495c3a 5f44335f 5c434c54     ts.D:\IM_3D_TLC\
    8fc0:	6d726966 65726177 4c41485c 414d445c     firmware\HAL\DMA
    8fd0:	3a440045 5f4d495c 545f4433 665c434c     E.D:\IM_3D_TLC\f
    8fe0:	776d7269 5c657261 5c4c4148 00475344     irmware\HAL\DSG.
    8ff0:	495c3a44 44335f4d 434c545f 7269665c     D:\IM_3D_TLC\fir
    9000:	7261776d 41485c65 4d455c4c 5c3a4400     mware\HAL\EM.D:\
    9010:	335f4d49 4c545f44 69665c43 61776d72     IM_3D_TLC\firmwa
    9020:	485c6572 475c4c41 004f4950 495c3a44     re\HAL\GPIO.D:\I
    9030:	44335f4d 434c545f 7269665c 7261776d     M_3D_TLC\firmwar
    9040:	41485c65 47485c4c 3a440045 5f4d495c     e\HAL\HGE.D:\IM_
    9050:	545f4433 665c434c 776d7269 5c657261     3D_TLC\firmware\
    9060:	5c4c4148 00434949 495c3a44 44335f4d     HAL\IIC.D:\IM_3D
    9070:	434c545f 7269665c 7261776d 41485c65     _TLC\firmware\HA
    9080:	6e495c4c 72726574 00747075 495c3a44     L\Interrupt.D:\I
    9090:	44335f4d 434c545f 7269665c 7261776d     M_3D_TLC\firmwar
    90a0:	41485c65 444c5c4c 44004350 4d495c3a     e\HAL\LDPC.D:\IM
    90b0:	5f44335f 5c434c54 6d726966 65726177     _3D_TLC\firmware
    90c0:	4c41485c 6c754d5c 6f436974 44006572     \HAL\MultiCore.D
    90d0:	4d495c3a 5f44335f 5c434c54 6d726966     :\IM_3D_TLC\firm
    90e0:	65726177 4c41485c 43464e5c 5c3a4400     ware\HAL\NFC.D:\
    90f0:	335f4d49 4c545f44 69665c43 61776d72     IM_3D_TLC\firmwa
    9100:	485c6572 505c4c41 6d617261 6c626154     re\HAL\ParamTabl
    9110:	3a440065 5f4d495c 545f4433 665c434c     e.D:\IM_3D_TLC\f
    9120:	776d7269 5c657261 5c4c4148 44004553     irmware\HAL\SE.D
    9130:	4d495c3a 5f44335f 5c434c54 6d726966     :\IM_3D_TLC\firm
    9140:	65726177 4c41485c 6d69545c 44007265     ware\HAL\Timer.D
    9150:	4d495c3a 5f44335f 5c434c54 6d726966     :\IM_3D_TLC\firm
    9160:	65726177 4c41485c 6172545c 44006563     ware\HAL\Trace.D
    9170:	4d495c3a 5f44335f 5c434c54 6d726966     :\IM_3D_TLC\firm
    9180:	65726177 4c41485c 5241555c 3a440054     ware\HAL\UART.D:
    9190:	5f4d495c 545f4433 665c434c 776d7269     \IM_3D_TLC\firmw
    91a0:	5c657261 5c4c4148 00524f58 495c3a44     are\HAL\XOR.D:\I
    91b0:	44335f4d 434c545f 7269665c 7261776d     M_3D_TLC\firmwar
    91c0:	41485c65 74585c4c 61736e65 5c3a4400     e\HAL\Xtensa.D:\
    91d0:	335f4d49 4c545f44 6e755c43 65747469     IM_3D_TLC\unitte
    91e0:	425c7473 646e456b 7365545f 69614d74     st\BkEnd_TestMai
    91f0:	3a44006e 5f4d495c 545f4433 755c434c     n.D:\IM_3D_TLC\u
    9200:	7474696e 5c747365 5f4c4148 74696e55     nittest\HAL_Unit
    9210:	74736554 7461445c 65684361 455f6b63     Test\DataCheck_E
    9220:	3a44004d 5f4d495c 545f4433 755c434c     M.D:\IM_3D_TLC\u
    9230:	7474696e 5c747365 5f4c4148 74696e55     nittest\HAL_Unit
    9240:	74736554 616c465c 72446873 72657669     Test\FlashDriver
    9250:	5c3a4400 335f4d49 4c545f44 6e755c43     .D:\IM_3D_TLC\un
    9260:	65747469 485c7473 555f4c41 5474696e     ittest\HAL_UnitT
    9270:	5c747365 00454748 495c3a44 44335f4d     est\HGE.D:\IM_3D
    9280:	434c545f 696e755c 73657474 41485c74     _TLC\unittest\HA
    9290:	6e555f4c 65547469 4c5c7473 00435044     L_UnitTest\LDPC.
    92a0:	495c3a44 44335f4d 434c545f 696e755c     D:\IM_3D_TLC\uni
    92b0:	73657474 41485c74 6e555f4c 65547469     ttest\HAL_UnitTe
    92c0:	4e5c7473 44004346 4d495c3a 5f44335f     st\NFC.D:\IM_3D_
    92d0:	5c434c54 74696e75 74736574 4c41485c     TLC\unittest\HAL
    92e0:	696e555f 73655474 464e5c74 464e5c43     _UnitTest\NFC\NF
    92f0:	41425f43 00434953 495c3a44 44335f4d     C_BASIC.D:\IM_3D
    9300:	434c545f 696e755c 73657474 41485c74     _TLC\unittest\HA
    9310:	6e555f4c 65547469 4e5c7473 4e5c4346     L_UnitTest\NFC\N
    9320:	455f4346 44005458 4d495c3a 5f44335f     FC_EXT.D:\IM_3D_
    9330:	5c434c54 74696e75 74736574 4c41485c     TLC\unittest\HAL
    9340:	696e555f 73655474 4f585c74 3a440052     _UnitTest\XOR.D:
    9350:	5f4d495c 545f4433 665c434c 776d7269     \IM_3D_TLC\firmw
    9360:	5c657261 70616461 5c726574 4e5c334c     are\adapter\L3\N
    9370:	00654d56 495c3a44 44335f4d 434c545f     VMe.D:\IM_3D_TLC
    9380:	7269665c 7261776d 41485c65 68435c4c     \firmware\HAL\Ch
    9390:	4d6e6961 746e6961 006e6961 495c3a44     ainMaintain.D:\I
    93a0:	44335f4d 434c545f 7269665c 7261776d     M_3D_TLC\firmwar
    93b0:	41485c65 43485c4c 3a440054 5f4d495c     e\HAL\HCT.D:\IM_
    93c0:	545f4433 665c434c 776d7269 5c657261     3D_TLC\firmware\
    93d0:	5c4c4148 00475348 495c3a44 44335f4d     HAL\HSG.D:\IM_3D
    93e0:	434c545f 7269665c 7261776d 41485c65     _TLC\firmware\HA
    93f0:	77485c4c 75626544 3a440067 5f4d495c     L\HwDebug.D:\IM_
    9400:	545f4433 665c434c 776d7269 5c657261     3D_TLC\firmware\
    9410:	5c4c4148 00454753 495c3a44 44335f4d     HAL\SGE.D:\IM_3D
    9420:	434c545f 7269665c 7261776d 41485c65     _TLC\firmware\HA
    9430:	6c465c4c 5c687361 45544e49 44335f4c     L\Flash\INTEL_3D
    9440:	434c545f 5c3a4400 335f4d49 4c545f44     _TLC.D:\IM_3D_TL
    9450:	6e755c43 65747469 485c7473 555f4c41     C\unittest\HAL_U
    9460:	5474696e 5c747365 5c43464e 5f43464e     nitTest\NFC\NFC_
    9470:	5c545845 45544e49 44335f4c 434c545f     EXT\INTEL_3D_TLC
    9480:	434d0000 4d5f3255 2e6e6961 00010063     ..MCU2_Main.c...
    9490:	5f324c00 444d4346 00632e51 4c000002     .L2_FCMDQ.c....L
    94a0:	61545f32 42656c62 632e5442 00000200     2_TableBBT.c....
    94b0:	495f324c 7265746e 65636166 0200632e     L2_Interface.c..
    94c0:	324c0000 6165535f 45686372 6e69676e     ..L2_SearchEngin
    94d0:	00632e65 4c000002 6e495f33 632e7469     e.c....L3_Init.c
    94e0:	00000300 465f334c 51444d43 0300632e     ....L3_FCMDQ.c..
    94f0:	334c0000 746e495f 61667265 632e6563     ..L3_Interface.c
    9500:	00000300 535f334c 64656863 2e656c75     ....L3_Schedule.
    9510:	00030063 5f334c00 73616c46 6e6f4d68     c....L3_FlashMon
    9520:	726f7469 0300632e 334c0000 7272455f     itor.c....L3_Err
    9530:	73614248 632e6369 00000300 455f334c     HBasic.c....L3_E
    9540:	45487272 6e657478 00632e64 4c000003     rrHExtend.c....L
    9550:	6f535f33 65447466 65646f63 00632e72     3_SoftDecoder.c.
    9560:	4c000003 61445f33 65526174 65766f63     ...L3_DataRecove
    9570:	00632e72 4c000003 75425f33 72674d66     r.c....L3_BufMgr
    9580:	0300632e 334c0000 6265445f 632e6775     .c....L3_Debug.c
    9590:	00000300 425f5746 64416675 632e7264     ....FW_BufAddr.c
    95a0:	00000400 445f5746 4d617461 74696e6f     ....FW_DataMonit
    95b0:	632e726f 00000400 445f5746 67756265     or.c....FW_Debug
    95c0:	0400632e 57460000 6576455f 632e746e     .c....FW_Event.c
    95d0:	00000400 535f5746 2e47534d 00040063     ....FW_SMSG.c...
    95e0:	5f574600 43616956 632e646d 00000400     .FW_ViaCmd.c....
    95f0:	535f5746 632e4c44 00000400 5f4d4f43     FW_SDL.c....COM_
    9600:	4d746942 2e6b7361 00050063 4d4f4300     BitMask.c....COM
    9610:	6d654d5f 2e79726f 00050063 4d4f4300     _Memory.c....COM
    9620:	6f57515f 632e6472 00000500 6b736944     _QWord.c....Disk
    9630:	6e6f435f 2e676966 00060063 4c414800     _Config.c....HAL
    9640:	696e495f 00632e74 48000007 4e5f4c41     _Init.c....HAL_N
    9650:	61446366 68436174 2e6b6365 00080063     fcDataCheck.c...
    9660:	4c414800 6365445f 52737453 726f7065     .HAL_DecStsRepor
    9670:	00632e74 48000009 445f4c41 2e65616d     t.c....HAL_Dmae.
    9680:	000a0063 4c414800 726f4e5f 446c616d     c....HAL_NormalD
    9690:	632e4753 00000b00 5f4c4148 72636e45     SG.c....HAL_Encr
    96a0:	69747069 6f4d6e6f 656c7564 0c00632e     iptionModule.c..
    96b0:	41480000 50475f4c 632e4f49 00000d00     ..HAL_GPIO.c....
    96c0:	5f4c4148 2e454748 000e0063 4c414800     HAL_HGE.c....HAL
    96d0:	4349495f 0f00632e 41480000 65545f4c     _IIC.c....HAL_Te
    96e0:	7265706d 72757461 6e655365 2e726f73     mperatureSensor.
    96f0:	000f0063 4c414800 746e495f 75727265     c....HAL_Interru
    9700:	632e7470 00001000 5f4c4148 6370644c     pt.c....HAL_Ldpc
    9710:	69676e45 632e656e 00001100 5f4c4148     Engine.c....HAL_
    9720:	6370644c 74666f53 2e636544 00110063     LdpcSoftDec.c...
    9730:	4c414800 6c754d5f 6f436974 632e6572     .HAL_MultiCore.c
    9740:	00001200 5f4c4148 73616c46 69724468     ....HAL_FlashDri
    9750:	42726576 63697361 1300632e 41480000     verBasic.c....HA
    9760:	6c465f4c 44687361 65766972 74784572     L_FlashDriverExt
    9770:	1300632e 41480000 61505f4c 546d6172     .c....HAL_ParamT
    9780:	656c6261 1400632e 41480000 65535f4c     able.c....HAL_Se
    9790:	68637261 69676e45 632e656e 00001500     archEngine.c....
    97a0:	5f4c4148 646d4348 656d6954 00632e72     HAL_HCmdTimer.c.
    97b0:	48000016 545f4c41 65636172 2e676f4c     ...HAL_TraceLog.
    97c0:	00170063 72617500 00632e74 48000018     c....uart.c....H
    97d0:	585f4c41 632e524f 00001900 5f4c4148     AL_XOR.c....HAL_
    97e0:	6e657458 632e6173 00001a00 6e456b42     Xtensa.c....BkEn
    97f0:	65545f64 614d7473 632e6e69 00001b00     d_TestMain.c....
    9800:	54534554 2e4d455f 001c0063 616c4600     TEST_EM.c....Fla
    9810:	72446873 72657669 7365545f 00632e74     shDriver_Test.c.
    9820:	5400001d 5f545345 2e454748 001e0063     ...TEST_HGE.c...
    9830:	53455400 644c5f54 6f536370 65447466     .TEST_LdpcSoftDe
    9840:	00632e63 5400001f 5f545345 4363664e     c.c....TEST_NfcC
    9850:	6b636568 7473694c 2000632e 45540000     heckList.c. ..TE
    9860:	4e5f5453 65506366 726f6672 636e616d     ST_NfcPerformanc
    9870:	00632e65 54000020 5f545345 4d63664e     e.c. ..TEST_NfcM
    9880:	2e325543 00200063 53455400 664e5f54     CU2.c. ..TEST_Nf
    9890:	74615063 632e5174 00002100 54534554     cPattQ.c.!..TEST
    98a0:	63664e5f 74746150 69736142 736e4963     _NfcPattBasicIns
    98b0:	2e747265 00210063 53455400 664e5f54     ert.c.!..TEST_Nf
    98c0:	74615063 6e654774 69736142 00632e63     cPattGenBasic.c.
    98d0:	54000021 5f545345 4663664e 42636e75     !..TEST_NfcFuncB
    98e0:	63697361 2100632e 45540000 4e5f5453     asic.c.!..TEST_N
    98f0:	43466366 2e51444d 00220063 53455400     fcFCMDQ.c."..TES
    9900:	664e5f54 74784563 61746144 63656843     T_NfcExtDataChec
    9910:	00632e6b 54000022 5f545345 5063664e     k.c."..TEST_NfcP
    9920:	47747461 78456e65 00632e74 54000022     attGenExt.c."..T
    9930:	5f545345 4663664e 45636e75 632e7478     EST_NfcFuncExt.c
    9940:	00002200 55726f58 63535f74 75646568     ."..XorUt_Schedu
    9950:	632e656c 00002300 55726f58 6f435f74     le.c.#..XorUt_Co
    9960:	6e6f6d6d 2300632e 6f580000 5f745572     mmon.c.#..XorUt_
    9970:	5f63664e 65746e49 63616672 00632e65     Nfc_Interface.c.
    9980:	58000023 7455726f 6e6f435f 2e676966     #..XorUt_Config.
    9990:	00230063 5f334c00 654d564e 2400632e     c.#..L3_NVMe.c.$
    99a0:	41480000 68435f4c 4d6e6961 746e6961     ..HAL_ChainMaint
    99b0:	2e6e6961 00250063 4c414800 5443485f     ain.c.%..HAL_HCT
    99c0:	2600632e 41480000 53485f4c 00632e47     .c.&..HAL_HSG.c.
    99d0:	48000027 485f4c41 62654477 632e6775     '..HAL_HwDebug.c
    99e0:	00002800 5f4c4148 2e454753 00290063     .(..HAL_SGE.c.).
    99f0:	4c414800 616c465f 68436873 65467069     .HAL_FlashChipFe
    9a00:	72757461 00632e65 4800002a 465f4c41     ature.c.*..HAL_F
    9a10:	6873616c 2e646d43 002a0063 4c414800     lashCmd.c.*..HAL
    9a20:	616c465f 6f536873 65447466 72615063     _FlashSoftDecPar
    9a30:	00632e61 5400002a 5f545345 4663664e     a.c.*..TEST_NfcF
    9a40:	6873616c 65707954 70616441 2e726574     lashTypeAdapter.
    9a50:	002b0063 2b040000 ec020500 03400a5f     c.+....+...._.@.
    9a60:	03010bea 00110908 09020301 03010003     ................
    9a70:	0002097d 09030301 03010003 00030902     }...............
    9a80:	097e0301 03010002 00020902 09060301     ..~.............
    9a90:	0301000d 000a0902 09020301 03010003     ................
    9aa0:	0004097e 09020301 03010002 0008097f     ~...............
    9ab0:	09010301 03010008 00040907 09010301     ................
    9ac0:	03010002 000c0904 09010301 0301000c     ................
    9ad0:	00080909 09010301 03010007 00030901     ................
    9ae0:	097f0301 03010002 00030901 09030301     ................
    9af0:	03010008 00030902 09050301 0301000a     ................
    9b00:	00050901 09030301 0301000b 0007097d     ............}...
    9b10:	09040301 03010003 0002097c 09040301     ........|.......
    9b20:	03010002 00030901 09010301 03010002     ................
    9b30:	0002097f 09010301 03010005 001a0901     ................
    9b40:	097f0301 03010002 00050901 09020301     ................
    9b50:	03010018 0007097e 09020301 03010002     ....~...........
    9b60:	0003097e 09020301 03010003 00090903     ~...............
    9b70:	09020301 03010008 000d0904 09020301     ................
    9b80:	0301000c 00050902 097e0301 03010004     ..........~.....
    9b90:	00040902 097e0301 03010004 00060902     ......~.........
    9ba0:	7fbf0301 01000909 0900c103 03010002     ................
    9bb0:	00100912 09080301 03010011 00030901     ................
    9bc0:	09020301 03010003 000f0906 09030301     ................
    9bd0:	0301000a 0002097f 09010301 03010005     ................
    9be0:	000d0906 09010301 03010002 00080903     ................
    9bf0:	09010301 0301000c 000a0909 09010301     ................
    9c00:	03010004 0003097f 09020301 03010003     ................
    9c10:	0002097f 09010301 03010003 00080903     ................
    9c20:	090c0301 03010009 00020979 097f0301     ........y.......
    9c30:	03010003 00050904 097c0301 03010006     ..........|.....
    9c40:	00030901 09040301 03010009 00060903     ................
    9c50:	09020301 03010003 000f0907 097d0301     ..............}.
    9c60:	03010002 00030903 09030301 03010008     ................
    9c70:	0002097d 09030301 03010005 00030904     }...............
    9c80:	097f0301 03010004 0002097f 09010301     ................
    9c90:	03010007 00060901 09010301 0301001c     ................
    9ca0:	0002097f 09010301 03010005 001f0902     ................
    9cb0:	09060301 03010011 0002097d 09030301     ........}.......
    9cc0:	0301000d 00060902 09040301 0301000b     ................
    9cd0:	00030906 09030301 0301000d 000b0901     ................
    9ce0:	09050301 03010008 0005097e 097f0301     ........~.......
    9cf0:	03010003 000b0903 097e0301 03010003     ..........~.....
    9d00:	00050902 09060301 03010016 000f0902     ................
    9d10:	096b0301 03010011 00110953 09600301     ..k.....S.....`.
    9d20:	0301000c 020900e2 2a040100 0902f303     ...........*....
    9d30:	03010010 00110908 09010301 03010003     ................
    9d40:	00030903 09050301 0301000f 000a0903     ................
    9d50:	097f0301 03010002 00050901 09060301     ................
    9d60:	0301000d 00020901 09040301 03010008     ................
    9d70:	000c0901 09090301 0301000a 00040901     ................
    9d80:	097f0301 03010003 00030902 097f0301     ................
    9d90:	03010002 00030901 09030301 03010008     ................
    9da0:	0009090c 09790301 03010002 0003097f     ......y.........
    9db0:	09040301 03010005 0006097c 09010301     ........|.......
    9dc0:	03010003 00090904 09030301 03010006     ................
    9dd0:	00030902 09060301 0301000f 0002097e     ............~...
    9de0:	09020301 03010003 00080903 097d0301     ..............}.
    9df0:	03010002 00050903 09040301 03010003     ................
    9e00:	0004097f 097f0301 03010002 00070901     ................
    9e10:	09010301 03010006 001c0901 097f0301     ................
    9e20:	03010002 00050901 09020301 03010020     ............ ...
    9e30:	00130903 09020301 0301000a 000b0904     ................
    9e40:	09060301 03010003 00110903 09010301     ................
    9e50:	0301000b 00080905 097e0301 03010008     ..........~.....
    9e60:	0003097f 09010301 0301000b 00050902     ................
    9e70:	09050301 03010016 000f0902 096c0301     ..............l.
    9e80:	03010011 00100957 09600301 0301000c     ....W.....`.....
    9e90:	020900dd 2b040100 11097b03 09030100     .......+.{......
    9ea0:	01001109 03097f03 7e030100 01000309     ...........~....
    9eb0:	02090403 7c030100 01000209 03090403     .......|........
    9ec0:	7c030100 01000509 02090703 05030100     ...|............
    9ed0:	01000e09 0f090803 04030100 01000709     ................
    9ee0:	02097e03 02030100 01000309 04097e03     .~...........~..
    9ef0:	01030100 01000209 03090103 7f030100     ................
    9f00:	01000309 05090103 05030100 01001709     ................
    9f10:	0c090103 05030100 01000809 02090403     ................
    9f20:	7a030100 01000309 04090503 7b030100     ...z...........{
    9f30:	01000609 03090103 05030100 01000309     ................
    9f40:	03097b03 01030100 01000309 09090703     .{..............
    9f50:	02030100 01000309 0f090603 7e030100     ...............~
    9f60:	01000209 03090203 03030100 01000809     ................
    9f70:	02097d03 03030100 01000509 03090203     .}..............
    9f80:	02030100 01000409 02097e03 01030100     .........~......
    9f90:	01000309 02090103 7f030100 01000209     ................
    9fa0:	06090103 01030100 01001809 02097f03     ................
    9fb0:	01030100 01000509 1c090203 03030100     ................
    9fc0:	01001309 0c090303 02030100 01000309     ................
    9fd0:	0b090403 09030100 01000809 04097703     .............w..
    9fe0:	02030100 01000209 08097e03 03030100     .........~......
    9ff0:	01000509 06090203 01030100 01000209     ................
    a000:	03097f03 01030100 01000309 05090303     ................
    a010:	02030100 01000609 0a090403 04030100     ................
    a020:	01000309 03090603 04030100 01000e09     ................
    a030:	08097f03 01030100 01000309 02097f03     ................
    a040:	01030100 01000309 06090303 02030100     ................
    a050:	01000709 04097e03 02030100 01000209     .....~..........
    a060:	04097e03 02030100 01000609 097f9f03     .~..............
    a070:	03010009 020900e1 6f030100 01001209     ...........o....
    a080:	10090203 02030100 01000309 0978db03     ..............x.
    a090:	03010013 00110909 097d0301 03010003     ..........}.....
    a0a0:	00020902 097e0301 03010003 00030906     ......~.........
    a0b0:	097a0301 03010002 00020906 09060301     ..z.............
    a0c0:	0301000d 000a0902 09020301 03010003     ................
    a0d0:	0004097e 09020301 03010002 0008097f     ~...............
    a0e0:	09010301 03010008 00040907 09010301     ................
    a0f0:	03010002 000c0904 09010301 0301000c     ................
    a100:	000a0909 09010301 03010004 0003097f     ................
    a110:	09020301 03010003 0002097f 09010301     ................
    a120:	03010003 00080903 090c0301 03010009     ................
    a130:	00020979 097f0301 03010003 00050905     y...............
    a140:	097f0301 03010003 00060901 097b0301     ..............{.
    a150:	03010003 00030901 09070301 03010009     ................
    a160:	00030902 09060301 0301000f 0002097e     ............~...
    a170:	09020301 03010003 00080903 097d0301     ..............}.
    a180:	03010002 00050903 09020301 03010003     ................
    a190:	00040902 097e0301 03010002 00030901     ......~.........
    a1a0:	09010301 03010002 0002097f 09010301     ................
    a1b0:	03010006 00180901 097f0301 03010002     ................
    a1c0:	00050901 09020301 0301001c 00110903     ................
    a1d0:	09030301 0301000c 00030902 09040301     ................
    a1e0:	0301000d 00020927 09590301 03010002     ....'.....Y.....
    a1f0:	00060902 09040301 0301000a 00030904     ................
    a200:	09060301 03010006 000e0903 09010301     ................
    a210:	0301000b 00090906 097e0301 03010008     ..........~.....
    a220:	0003097f 09010301 0301000b 00050902     ................
    a230:	09030301 03010008 0002097d 09030301     ........}.......
    a240:	03010005 00050902 09060301 03010009     ................
    a250:	000f0902 09610301 03010010 00100902     ......a.........
    a260:	09020301 03010006 00110913 7fb70301     ................
    a270:	01000f09 0c095d03 f4030100 00020900     .....]..........
    a280:	032a0401 100901f0 09030100 01000009     ..*.............
    a290:	03097703 08030100 01000d09 02097803     .w...........x..
    a2a0:	08030100 01000209 05097803 09030100     .........x......
    a2b0:	01000209 08090403 7f030100 01000309     ................
    a2c0:	03097d03 06030100 01000c09 04097a03     .}...........z..
    a2d0:	06030100 01000209 0b090d03 02030100     ................
    a2e0:	01000a09 03090203 7e030100 01000409     ...........~....
    a2f0:	02090203 7f030100 01000709 07090103     ................
    a300:	08030100 01000309 10090503 01030100     ................
    a310:	01000c09 0a090903 01030100 01000409     ................
    a320:	02097f03 02030100 01000309 02097f03     ................
    a330:	01030100 01000309 09090303 13030100     ................
    a340:	01000909 02097203 7f030100 01000309     .....r..........
    a350:	05090c03 7f030100 01000309 06090103     ................
    a360:	74030100 01000309 03090103 0e030100     ...t............
    a370:	01000909 03090203 06030100 01000f09     ................
    a380:	02097e03 02030100 01000309 08090303     .~..............
    a390:	7d030100 01000209 05090303 04030100     ...}............
    a3a0:	01000309 04097e03 01030100 01000409     .....~..........
    a3b0:	02097f03 01030100 01000309 06090103     ................
    a3c0:	01030100 01001c09 02097f03 01030100     ................
    a3d0:	01000509 20090203 03030100 01001109     ....... ........
    a3e0:	0a090203 04030100 01000a09 0b090303     ................
    a3f0:	06030100 01000309 0f090303 01030100     ................
    a400:	01000b09 0a090603 7e030100 01000309     ...........~....
    a410:	03097f03 01030100 01000b09 03090203     ................
    a420:	7e030100 01000609 02090203 05030100     ...~............
    a430:	01001909 0f090203 6b030100 01001109     ...........k....
    a440:	11094d03 55030100 01000c09 0900f303     .M.....U........
    a450:	04010002 7396031e 01001009 07090303     .......s........
    a460:	01030100 01000309 05097f03 02030100     ................
    a470:	01000209 08090303 02030100 01002809     .............(..
    a480:	a4032b04 0007090e 09080301 03010003     .+..............
    a490:	00020978 090b0301 0301000c 0003097f     x...............
    a4a0:	09760301 03010003 0002090d 097f0301     ..v.............
    a4b0:	03010005 0002097c 09040301 03010005     ....|...........
    a4c0:	00050903 09050301 0301000e 000a0906     ................
    a4d0:	09060301 0301000e 000e0901 09080301     ................
    a4e0:	0301000a 0002090d 09010301 03010003     ................
    a4f0:	00030972 09020301 03010003 000e0966     r...........f...
    a500:	00dd0301 01000209 097fbd03 0301000f     ................
    a510:	0006090a 09010301 03010007 00030902     ................
    a520:	09030301 03010002 0003097c 09010301     ........|.......
    a530:	03010003 00060903 09010301 03010003     ................
    a540:	00030901 097f0301 03010003 00030901     ................
    a550:	09030301 03010003 0003097f 09010301     ................
    a560:	03010003 00050903 09020301 03010005     ................
    a570:	000e0905 09020301 03010002 0002097e     ............~...
    a580:	09020301 0301000d 00080903 097d0301     ..............}.
    a590:	03010002 00050903 09020301 03010003     ................
    a5a0:	00040901 097f0301 03010002 00030901     ................
    a5b0:	09010301 03010005 001a0901 09010301     ................
    a5c0:	0301000a 00230902 09030301 03010011     ......#.........
    a5d0:	00050904 09060301 03010003 000f0905     ................
    a5e0:	097e0301 0301000a 00030902 097e0301     ..~...........~.
    a5f0:	03010002 00030902 09030301 03010006     ................
    a600:	00050902 097e0301 03010004 00040902     ......~.........
    a610:	097e0301 03010004 00060902 096e0301     ..~...........n.
    a620:	0301000a 00100902 09020301 03010003     ................
    a630:	130978b2 0c030100 01001109 03097f03     .x..............
    a640:	02030100 01000309 02097c03 05030100     .........|......
    a650:	01000209 05097b03 04030100 01000309     .....{..........
    a660:	05097c03 07030100 01000209 0e090503     .|..............
    a670:	06030100 01000e09 0c090103 09030100     ................
    a680:	01000809 22092e03 01030100 01000b09     ......."........
    a690:	09090403 01030100 01000b09 09090d03     ................
    a6a0:	7f030100 01000209 03097f03 77030100     ...............w
    a6b0:	01000209 0b090903 01030100 01000309     ................
    a6c0:	03090103 01030100 01000309 02097f03     ................
    a6d0:	01030100 01000309 08090303 02030100     ................
    a6e0:	01000309 0a090503 02030100 01000209     ................
    a6f0:	02097e03 02030100 01000609 08090303     .~..............
    a700:	7d030100 01000209 05090303 04030100     ...}............
    a710:	01000309 04097e03 01030100 01000409     .....~..........
    a720:	02097f03 01030100 01000309 05090103     ................
    a730:	01030100 01001609 0d090103 03030100     ................
    a740:	01002509 11090303 0a030100 01000e09     .%..............
    a750:	0e090403 7e030100 01000309 05090203     .......~........
    a760:	7e030100 01000209 03090103 01030100     ...~............
    a770:	01000209 03097f03 01030100 01000609     ................
    a780:	08090203 7e030100 01000209 06090203     .......~........
    a790:	02030100 01000809 09090503 02030100     ................
    a7a0:	01000509 04097e03 02030100 01000409     .....~..........
    a7b0:	04097e03 02030100 01000609 097ef703     .~............~.
    a7c0:	03010009 02090189 94030100 000f097f     ................
    a7d0:	090e0301 0301000b 190900c7 04030100     ................
    a7e0:	01001409 14090c03 40030100 01001009     ...........@....
    a7f0:	0c095b03 2a040100 09059603 0301001a     .[.....*........
    a800:	0000090c 09740301 03010003 000d090b     ......t.........
    a810:	097e0301 03010002 00020902 097e0301     ..~...........~.
    a820:	03010003 00060902 09750301 03010002     ..........u.....
    a830:	0004090c 09010301 03010015 00090903     ................
    a840:	097f0301 03010003 00030902 097c0301     ..............|.
    a850:	03010002 00030905 097b0301 03010006     ..........{.....
    a860:	00030904 097c0301 03010005 00050907     ......|.........
    a870:	09050301 0301000d 000c0906 09010301     ................
    a880:	0301000e 0008091d 090b0301 03010002     ................
    a890:	00020975 09270301 03010008 0008091d     u.....'.........
    a8a0:	097f0301 03010002 00020902 097e0301     ..............~.
    a8b0:	03010002 00030902 097e0301 03010003     ..........~.....
    a8c0:	00030901 09040301 03010003 00030901     ................
    a8d0:	097c0301 03010003 00030903 09010301     ..|.............
    a8e0:	03010006 00090907 097d0301 03010002     ..........}.....
    a8f0:	000d0903 09020301 03010003 000a0905     ................
    a900:	09020301 03010002 0002097e 09020301     ........~.......
    a910:	03010006 00080903 097d0301 03010002     ..........}.....
    a920:	00050903 09040301 03010003 0004097e     ............~...
    a930:	09010301 03010005 0002097f 09010301     ................
    a940:	03010003 00050901 09010301 03010017     ................
    a950:	000a0901 09020301 03010024 00110903     ........$.......
    a960:	09030301 03010011 000e0901 09070301     ................
    a970:	03010009 0008097b 09010301 03010002     ....{...........
    a980:	0003097f 09010301 03010003 00050904     ................
    a990:	09060301 03010018 00070902 097e0301     ..............~.
    a9a0:	03010004 00020902 097e0301 03010004     ..........~.....
    a9b0:	00060902 7edf0301 01000909 0901a103     .......~........
    a9c0:	03010002 10097f93 3c030100 01001809     ...........<....
    a9d0:	10095003 7e030100 01000309 02097c03     .P.....~.....|..
    a9e0:	04030100 01000209 02097c03 04030100     .........|......
    a9f0:	01000509 06090203 07030100 01000e09     ................
    aa00:	09090103 7a030100 01001909 0b090103     .......z........
    aa10:	e6030100 0011097a 09050301 03010009     ....z...........
    aa20:	0003097f 09010301 03010005 00020903     ................
    aa30:	09020301 03010008 0002090a 09790301     ..............y.
    aa40:	03010009 000c0901 09020301 03010008     ................
    aa50:	000a0902 097e0301 03010002 00020902     ......~.........
    aa60:	097e0301 03010003 00050902 09020301     ..~.............
    aa70:	0301000a 0e09018d 05030100 01000d09     ................
    aa80:	03097f03 01030100 01000509 02090203     ................
    aa90:	02030100 01000809 02091103 72030100     ...............r
    aaa0:	01000909 0c090103 02030100 01000809     ................
    aab0:	02090303 02030100 01000209 02097d03     .............}..
    aac0:	03030100 01000709 02097b03 03030100     .........{......
    aad0:	01000209 03097d03 07030100 01000509     .....}..........
    aae0:	09090203 7e030100 01000209 02090203     .......~........
    aaf0:	7e030100 01000209 02090203 7e030100     ...~...........~
    ab00:	01000309 03090203 7e030100 01000209     ...........~....
    ab10:	02090203 02030100 01000609 097e9c03     ..............~.
    ab20:	0301000c 00090905 097f0301 03010003     ................
    ab30:	00050901 09020301 03010002 00080902     ................
    ab40:	090b0301 03010002 00090978 09010301     ........x.......
    ab50:	0301000c 00080902 09010301 0301000f     ................
    ab60:	0003097f 09010301 03010002 000a0902     ................
    ab70:	097e0301 03010002 00050902 09020301     ..~.............
    ab80:	03010007 0002097e 09020301 03010006     ....~...........
    ab90:	0a0902f0 03030100 01000009 03097d03     .............}..
    aba0:	03030100 01000709 08090203 02030100     ................
    abb0:	01000d09 0b090403 02030100 01000809     ................
    abc0:	02092203 71030100 01000709 0d090103     .".....q........
    abd0:	09030100 01000a09 08090103 7f030100     ................
    abe0:	01000209 02090103 7f030100 01000209     ................
    abf0:	05090103 02030100 01000d09 02097e03     .............~..
    ac00:	02030100 01000209 02097e03 02030100     .........~......
    ac10:	01000209 03097e03 02030100 01000709     .....~..........
    ac20:	06090203 d7030100 000a0979 09010301     ........y.......
    ac30:	03010007 00060903 09030301 03010025     ............%...
    ac40:	000a0955 09010301 03010007 0006090b     U...............
    ac50:	09030301 04010025 0ea9032b 01000a09     ....%...+.......
    ac60:	09090503 7f030100 01000309 05090103     ................
    ac70:	02030100 01000209 08090203 0c030100     ................
    ac80:	01000209 09097803 01030100 01000c09     .....x..........
    ac90:	08090203 01030100 01000f09 03097f03     ................
    aca0:	01030100 01000209 0a090203 7e030100     ...............~
    acb0:	01000209 05090203 02030100 01000709     ................
    acc0:	02097e03 02030100 01000609 0973b103     .~............s.
    acd0:	0301000a 00000904 097c0301 03010003     ..........|.....
    ace0:	00070904 09020301 03010008 000d0902     ................
    acf0:	09040301 0301000b 00080902 091c0301     ................
    ad00:	03010002 00080967 09010301 0301000c     ....g...........
    ad10:	00080912 09020301 0301000c 00110902     ................
    ad20:	097e0301 03010002 00020902 097e0301     ..~...........~.
    ad30:	03010002 00020902 097e0301 03010003     ..........~.....
    ad40:	00070902 09020301 09010006 01000009     ................
    ad50:	003e0401 5d200205 f2032000 02030107     ..>... ]. ......
    ad60:	01000009 0901af03 03010004 00000902     ................
    ad70:	034c0401 04097abd 0e030100 01002309     ..L..z.......#..
    ad80:	d0031904 0003097c 034c0401 050903a2     ....|.....L.....
    ad90:	19040100 097cde03 04010003 03a2034c     ......|.....L...
    ada0:	01000309 03090e03 19040100 097cd003     ..............|.
    adb0:	04010003 03ac034c 01000609 d4031904     ....L...........
    adc0:	0003097c 034c0401 070903ac 01030100     |.....L.........
    add0:	01000e09 03090303 7d030100 01000209     ...........}....
    ade0:	03090103 02030100 01000609 12090303     ................
    adf0:	a7030100 000b097f 090d0301 03010023     ............#...
    ae00:	0003097e 09750301 03010002 0003090b     ~.....u.........
    ae10:	09750301 03010006 0003090b 09020301     ..u.............
    ae20:	03010009 00030906 09010301 0301000b     ................
    ae30:	00050979 090c0301 03010008 000b0901     y...............
    ae40:	09020301 03010003 000b0901 09040301     ................
    ae50:	03010008 00090906 097a0301 03010002     ..........z.....
    ae60:	00030906 097c0301 03010011 00060904     ......|.........
    ae70:	097c0301 03010003 00030901 09030301     ..|.............
    ae80:	04010003 04b0032b 01000909 00090503     ....+...........
    ae90:	02030100 01000309 03097d03 02030100     .........}......
    aea0:	01000509 05090103 7d030100 01000209     ...........}....
    aeb0:	05090303 7e030100 01000309 05090203     .......~........
    aec0:	02030100 01000209 03096203 04030100     .........b......
    aed0:	01000009 02097d03 01030100 01000309     .....}..........
    aee0:	02097f03 01030100 01000209 03097f03     ................
    aef0:	01030100 01000509 02090103 01030100     ................
    af00:	01000309 03090203 65030100 01000309     ...........e....
    af10:	00090403 7d030100 01000209 03090103     .......}........
    af20:	7f030100 01000209 02090103 7f030100     ................
    af30:	01000309 05090103 01030100 01000209     ................
    af40:	03090103 02030100 01000309 81032004     ............. ..
    af50:	0003097b 090f0301 03010000 001a0901     {...............
    af60:	09010301 0301000d 00160903 032a0401     ..............*.
    af70:	030902f6 05030100 01000009 d3032004     ............. ..
    af80:	0010097c 09010301 03010005 00060907     |...............
    af90:	097b0301 03010011 00060901 09040301     ..{.............
    afa0:	04010002 09bf032a 01000809 0d090403     ....*...........
    afb0:	0d030100 01000909 03090503 2f030100     .............../
    afc0:	01001909 06090103 05030100 01000809     ................
    afd0:	08090503 7b030100 01000209 03090503     .......{........
    afe0:	7d030100 01000909 07090303 61030100     ...}...........a
    aff0:	01000709 05090503 7b030100 01000309     ...........{....
    b000:	86034d04 00060975 09050301 03010006     .M..u...........
    b010:	00060902 090a0301 03010008 000d0902     ................
    b020:	09040301 0301000b 00070909 09020301     ................
    b030:	04010009 0ade032a 01000a09 03090803     ....*...........
    b040:	7f030100 01000209 09090103 5c030100     ...............\
    b050:	01000b09 03090103 04030100 01000409     ................
    b060:	03090203 02030100 01000209 02097d03     .............}..
    b070:	02030100 01000209 02097e03 01030100     .........~......
    b080:	01000209 03090203 7d030100 01000309     ...........}....
    b090:	03090303 7e030100 01000309 05090203     .......~........
    b0a0:	7f030100 01000209 05090203 04030100     ................
    b0b0:	01000309 05090103 04030100 01000309     ................
    b0c0:	03090203 7f030100 01000209 09090103     ................
    b0d0:	01030100 01000809 03090803 4d040100     ...............M
    b0e0:	0975b103 0301000f 00030904 09020301     ..u.............
    b0f0:	03010006 0017090f 09020301 03010006     ................
    b100:	00060901 096a0301 04010022 0acd032a     ......j."...*...
    b110:	01000209 b1034d04 00070975 09040301     .....M..u.......
    b120:	03010003 00030902 090f0301 03010016     ................
    b130:	00030902 09010301 03010006 000e096a     ............j...
    b140:	032a0401 02090ace 4d040100 0975b803     ..*........M..u.
    b150:	0301000d 00030902 097e0301 03010014     ..........~.....
    b160:	00030902 09020301 03010015 00030902     ................
    b170:	097e0301 03010009 00030902 09040301     ..~.............
    b180:	0301000b 0017097c 09040301 04010002     ....|...........
    b190:	06b8032a 01001909 00090c03 74030100     *..............t
    b1a0:	01000709 03090c03 19040100 09789803     ..............x.
    b1b0:	0301002e 00080903 09020301 03010008     ................
    b1c0:	00360902 032a0401 0a0907b1 00030100     ..6...*.........
    b1d0:	01000009 03090b03 eb030100 0021097b     ............{.!.
    b1e0:	09030301 03010000 200908d8 01030100     ........... ....
    b1f0:	01000009 0a090303 03030100 01000609     ................
    b200:	06090103 01030100 01000609 06090303     ................
    b210:	02030100 01000709 b9032004 00030974     ......... ..t...
    b220:	09060301 0301000e 0006097a 09060301     ........z.......
    b230:	03010003 03097fb8 cf030100 00060900     ................
    b240:	7faf0301 01000409 03090203 7e030100     ...............~
    b250:	01000309 0900d003 03010003 03097fb2     ................
    b260:	c8030100 00060900 090b0301 04010004     ................
    b270:	7f930332 01000309 d1032904 00030900     2........)......
    b280:	09020301 03010009 000b0904 09030301     ................
    b290:	03010006 0006091d 03200401 00030936     .......... .6...
    b2a0:	09020301 03010008 0003097e 09020301     ........~.......
    b2b0:	03010003 03097ee0 7e030100 01000209     .....~.....~....
    b2c0:	0901a203 03010003 03097ede a2030100     .........~......
    b2d0:	00030901 7ede0301 01000309 0901a203     .......~........
    b2e0:	03010003 03097ee0 7e030100 01000309     .....~.....~....
    b2f0:	03090203 32040100 06097103 29040100     .......2.q.....)
    b300:	0900d103 03010003 00090902 09040301     ................
    b310:	03010009 00060903 091d0301 04010006     ................
    b320:	00db0320 01000509 06097d03 03030100      ........}......
    b330:	01000209 e4032904 0013097e 03200401     .....)..~..... .
    b340:	090900cc 29040100 097fb403 04010002     .......)........
    b350:	00cc0320 01000309 19034d04 01000d09      ........M......
    b360:	05090303 04030100 01000609 06090203     ................
    b370:	0f030100 01001009 08090603 6d030100     ...............m
    b380:	01000b09 06090203 02030100 01001609     ................
    b390:	06090203 04030100 01000f09 17097003     .............p..
    b3a0:	19030100 01000209 07097c03 01030100     .........|......
    b3b0:	01000609 09090303 2a040100 09078903     ...........*....
    b3c0:	0301000c 00000903 034d0401 040978a3     ..........M..x..
    b3d0:	03030100 01000d09 06090503 02030100     ................
    b3e0:	01000609 09090a03 0f030100 01000309     ................
    b3f0:	09090203 0a030100 01000809 04096503     .............e..
    b400:	02030100 01000609 0a090403 15030100     ................
    b410:	01000509 09096903 17030100 01000209     .....i..........
    b420:	e7033e04 00020908 09010301 03010000     .>..............
    b430:	0002097f 09010301 03010015 00060903     ................
    b440:	7a800301 01000609 09068203 03010009     ...z............
    b450:	030979fe 19030100 01001f09 05091b03     .y..............
    b460:	65030100 01000609 03091b03 1a030100     ...e............
    b470:	01002009 0905b603 03010008 05097af2     . ...........z..
    b480:	90030100 00030905 7af00301 01000309     ...........z....
    b490:	097eef03 03010019 080906a4 2a040100     ..~............*
    b4a0:	0979e103 04010009 06a1033e 01000309     ..y.....>.......
    b4b0:	df032a04 00060979 049d0301 01001409     .*..y...........
    b4c0:	097be303 03010006 0609049d 05030100     ..{.............
    b4d0:	01000609 81033e04 00090902 09010301     .....>..........
    b4e0:	0301000b 000f0902 09050301 0301000e     ................
    b4f0:	00080902 09010301 0301000c 000c0923     ............#...
    b500:	7ee80301 01000f09 00090303 7e030100     ...~...........~
    b510:	01000309 03090203 10030100 01000309     ................
    b520:	02097003 10030100 01000309 b3034d04     .p...........M..
    b530:	000a0977 09050301 03010005 00060902     w...............
    b540:	090a0301 03010008 000c0902 09040301     ................
    b550:	0301000a 00080909 09020301 04010009     ................
    b560:	08ab033e 01000b09 03090903 7a030100     >..............z
    b570:	01000409 05090103 05030100 01000309     ................
    b580:	8c032b04 0004097e 09050301 03010005     .+..~...........
    b590:	0002097b 09070301 03010004 00130903     {...............
    b5a0:	097f0301 03010006 00030901 09010301     ................
    b5b0:	03010003 0002097f 09010301 03010005     ................
    b5c0:	0003097e 09010301 03010003 00090901     ~...............
    b5d0:	097f0301 03010002 00060901 097f0301     ................
    b5e0:	03010003 000d0905 09040301 04010003     ................
    b5f0:	798b034d 01000c09 05090503 02030100     M..y............
    b600:	01000609 08090a03 02030100 01000d09     ................
    b610:	0b090403 09030100 01000709 09090203     ................
    b620:	2b040100 0906d303 0301000a 00030906     ...+............
    b630:	09130301 03010005 00060903 097f0301     ................
    b640:	0301000a 00030901 097d0301 03010003     ..........}.....
    b650:	00020904 097f0301 03010002 00050901     ................
    b660:	097c0301 03010003 00030903 09060301     ..|.............
    b670:	04010008 799c034d 01000809 06091503     ....M..y........
    b680:	6f030100 01000309 06090203 0f030100     ...o............
    b690:	01001409 03090203 01030100 01000609     ................
    b6a0:	0e096a03 2b040100 0906c203 04010002     .j.....+........
    b6b0:	79c4034d 01000709 06090203 02030100     M..y............
    b6c0:	01001609 03090203 04030100 01000e09     ................
    b6d0:	9b032a04 00170903 09040301 04010000     .*..............
    b6e0:	12a7033e 01002009 0979d103 03010015     >.... ....y.....
    b6f0:	030906b9 c9030100 00060979 07900301     ........y.......
    b700:	01000609 097fae03 03010010 00060902     ................
    b710:	09020301 03010003 00050903 09010301     ................
    b720:	03010006 00050903 097d0301 03010008     ..........}.....
    b730:	00130903 09030301 0301000e 0003097f     ................
    b740:	09010301 03010003 00030901 09010301     ................
    b750:	0301000b 00030901 097f0301 03010006     ................
    b760:	00090901 09020301 03010009 000b0903     ................
    b770:	091b0301 03010011 00060902 09020301     ................
    b780:	0301000d 00060961 09040301 03010017     ....a...........
    b790:	0008097f 09010301 0301000b 00030901     ................
    b7a0:	09010301 0301000e 00110902 090b0301     ................
    b7b0:	0301000a 000b0902 097e0301 03010003     ..........~.....
    b7c0:	00030902 09750301 0301000b 000b0902     ......u.........
    b7d0:	090b0301 03010009 000d0902 091c0301     ................
    b7e0:	0301000c 00080901 09010301 0301000e     ................
    b7f0:	00030901 09020301 03010009 00030902     ................
    b800:	097e0301 03010004 00030902 7f800301     ..~.............
    b810:	01000b09 0977b103 03010007 020908cf     ......w.........
    b820:	01030100 01001809 0977b303 03010006     ..........w.....
    b830:	0003097b 09040301 03010003 0006097c     {...........|...
    b840:	09020301 03010002 0003097e 09040301     ........~.......
    b850:	03010006 0003097e 09030301 03010013     ....~...........
    b860:	200908d4 eb030100 00030977 097f0301     ... ....w.......
    b870:	03010003 03090896 01030100 01000309     ................
    b880:	06097f03 ea030100 00030977 09010301     ........w.......
    b890:	03010003 0002097f 09010301 03010008     ................
    b8a0:	06097ab5 7f030100 01000309 03097f03     .z..............
    b8b0:	7f030100 01000309 03097f03 04030100     ................
    b8c0:	01000309 05090603 76030100 01000309     ...........v....
    b8d0:	03090a03 76030100 01000209 02090a03     .......v........
    b8e0:	76030100 01000509 02090403 7c030100     ...v...........|
    b8f0:	01000809 02090903 77030100 01000509     ...........w....
    b900:	09090103 05030100 01000209 03097b03     .............{..
    b910:	01030100 01000309 03090103 01030100     ................
    b920:	01000309 06090103 01030100 01000309     ................
    b930:	03090103 7f030100 01000309 06090103     ................
    b940:	01030100 01000309 05090403 03030100     ................
    b950:	01000909 03097f03 01030100 01000309     ................
    b960:	03097f03 09030100 01000609 05090303     ................
    b970:	ba030100 00170905 09020301 03010008     ................
    b980:	0006097e 09030301 03010008 120900d6     ~...............
    b990:	aa030100 0003097f 00d60301 01000309     ................
    b9a0:	097faa03 03010008 00060902 09010301     ................
    b9b0:	03010006 000e0903 09390301 03010006     ..........9.....
    b9c0:	00080944 09020301 03010006 00060901     D...............
    b9d0:	09370301 0301000a 00030949 09370301     ..7.....I.....7.
    b9e0:	03010003 00080949 09020301 03010003     ....I...........
    b9f0:	00060901 09020301 03010003 00060903     ................
    ba00:	097d0301 03010003 00030903 74e40301     ..}............t
    ba10:	01000309 090b9e03 03010008 00020901     ................
    ba20:	74e10301 01000209 090b9f03 03010003     ...t............
    ba30:	030974e1 9e030100 0003090b 74e20301     .t.............t
    ba40:	01000609 090b9f03 03010003 030974e1     .............t..
    ba50:	2a040100 09090e03 3e040100 03097803     ...*.......>.x..
    ba60:	2a040100 03090803 3e040100 03097803     ...*.......>.x..
    ba70:	2a040100 03090803 3e040100 03097803     ...*.......>.x..
    ba80:	9d030100 0003090b 09010301 03010003     ................
    ba90:	00030901 097f0301 04010003 7599032a     ............*..u
    baa0:	01000609 e9033e04 0006090a 032a0401     .....>........*.
    bab0:	06097597 3e040100 090ae903 03010006     .u.....>........
    bac0:	0006090d 09120301 0301000c 000c0902     ................
    bad0:	09020301 03010006 0003094e 09320301     ........N.....2.
    bae0:	03010003 0008094e 74e90301 01000909     ....N......t....
    baf0:	090b9103 03010008 0003093f 09020301     ........?.......
    bb00:	0301000c 00090902 09020301 03010009     ................
    bb10:	000f097c 097e0301 03010017 100907d1     |.....~.........
    bb20:	03030100 01000309 0a097d03 01030100     .........}......
    bb30:	01000509 03090203 a3030100 00070977     ............w...
    bb40:	092b0301 03010003 00030955 092b0301     ..+.....U.....+.
    bb50:	03010003 00050955 092b0301 03010003     ....U.....+.....
    bb60:	00030955 03380401 0609739d 09030100     U.....8..s......
    bb70:	01000509 09097703 3e040100 090ce503     .....w.....>....
    bb80:	04010006 739b0338 01000609 02090d03     ....8..s........
    bb90:	77030100 01000509 03090903 2a040100     ...w...........*
    bba0:	0902b503 03010006 1a09049d e3030100     ................
    bbb0:	0006097b 049d0301 01000609 06090503     {...............
    bbc0:	38040100 0979ac03 03010009 000f0902     ...8..y.........
    bbd0:	09030301 0401000f 02ad032a 01000909     ........*.......
    bbe0:	09049d03 0301001e 06097be3 9d030100     .........{......
    bbf0:	00060904 09050301 04010006 79b40338     ............8..y
    bc00:	01000909 09090203 3e040100 090ccf03     ...........>....
    bc10:	03010009 00120903 09100301 03010006     ................
    bc20:	0008096d 09020301 03010003 00060901     m...............
    bc30:	09060301 03010011 000c0906 09740301     ..............t.
    bc40:	0301000c 0003090e 09720301 04010009     ..........r.....
    bc50:	75ed032a 01000309 95033e04 001a090a     *..u.....>......
    bc60:	032a0401 060975eb 3e040100 090a9503     ..*..u.....>....
    bc70:	03010006 00080906 090b0301 0301000f     ................
    bc80:	000f0902 09020301 03010009 000c0902     ................
    bc90:	09010301 03010012 0006097b 097e0301     ........{.....~.
    bca0:	03010018 0f097ae7 93030100 0008090d     .....z..........
    bcb0:	09050301 0301000d 0002097b 09050301     ........{.......
    bcc0:	03010003 00050903 09040301 03010011     ................
    bcd0:	00080902 09010301 03010009 00030902     ................
    bce0:	09020301 03010018 00060902 09020301     ................
    bcf0:	0301000a 00180906 09010301 0301000a     ................
    bd00:	000a0975 09130301 03010011 00090901     u...............
    bd10:	09020301 03010005 0002097e 09020301     ........~.......
    bd20:	04010002 6fa7032a 01000d09 00091103     ....*..o........
    bd30:	84030100 001c0902 09010301 03010021     ............!...
    bd40:	08097be3 9d030100 00060904 09050301     .{..............
    bd50:	03010006 00060905 097d0301 0301000d     ..........}.....
    bd60:	00020903 033e0401 0a0907af 01030100     ......>.........
    bd70:	01000009 03097f03 01030100 01000f09     ................
    bd80:	02097f03 02030100 01000609 06097f03     ................
    bd90:	01030100 01000609 097c9f03 03010003     ..........|.....
    bda0:	00030901 09020301 03010003 00020903     ................
    bdb0:	097f0301 03010002 00020901 09030301     ................
    bdc0:	03010007 0003097b 09020301 03010003     ....{...........
    bdd0:	0003097f 09010301 03010003 0003097f     ................
    bde0:	09070301 03010003 0003097a 09020301     ........z.......
    bdf0:	03010006 0003097e 097d0301 03010003     ....~.....}.....
    be00:	00030904 09010301 03010003 0003097b     ............{...
    be10:	09050301 03010003 00030903 097f0301     ................
    be20:	03010003 0003097a 09050301 03010003     ....z...........
    be30:	00050901 09010301 03010003 00030901     ................
    be40:	09020301 03010005 00090903 097f0301     ................
    be50:	03010003 00030901 097f0301 03010002     ................
    be60:	00060908 09020301 03010008 000b0907     ................
    be70:	03c30301 01001509 03090203 02030100     ................
    be80:	01000209 03097e03 02030100 01000709     .....~..........
    be90:	06090103 7d030100 01000309 0e090303     .......}........
    bea0:	03030100 01000f09 0900df03 03010009     ................
    beb0:	08097f9e 02030100 01000609 06090103     ................
    bec0:	03030100 01000a09 0900da03 03010006     ................
    bed0:	08097fa3 02030100 01000309 06090103     ................
    bee0:	03030100 01000909 0900d503 03010006     ................
    bef0:	08097fa8 02030100 01000309 09090103     ................
    bf00:	15030100 01000609 20093103 05030100     .........1. ....
    bf10:	01000809 07090303 02030100 01000709     ................
    bf20:	06090303 ad030100 0003097f 00d30301     ................
    bf30:	01000309 097fad03 03010008 0309768d     .............v..
    bf40:	f8030100 00030909 097f0301 03010006     ................
    bf50:	05097689 f8030100 00030909 097f0301     .v..............
    bf60:	03010007 00030901 097f0301 03010002     ................
    bf70:	00020901 768e0301 01001109 d4032a04     .......v.....*..
    bf80:	000f097d 033e0401 03090c9f 2a040100     }.....>........*
    bf90:	0973e103 04010005 0c9f033e 01000309     ..s.....>.......
    bfa0:	e1032a04 00090973 033e0401 05090c9f     .*..s.....>.....
    bfb0:	2a040100 0973e103 04010002 09a2033e     ...*..s.....>...
    bfc0:	01000b09 de032a04 00030976 033e0401     .....*..v.....>.
    bfd0:	03090ca0 2a040100 0973e003 04010003     .......*..s.....
    bfe0:	0ca0033e 01000309 097d8403 03010009     >.........}.....
    bff0:	00030902 097e0301 03010003 00030902     ......~.........
    c000:	76e40301 01002409 090c9703 03010003     ...v.$..........
    c010:	030973e9 2a040100 03090e03 3e040100     .s.....*.......>
    c020:	03097803 2a040100 03090803 3e040100     .x.....*.......>
    c030:	03097803 2a040100 03090803 3e040100     .x.....*.......>
    c040:	03097803 92030100 0003090c 09030301     .x..............
    c050:	03010003 0003097e 09020301 03010003     ....~...........
    c060:	0002097f 097f0301 03010003 00060902     ................
    c070:	032a0401 060974a2 3e040100 0901e103     ..*..t.....>....
    c080:	0301001f 05097de2 ae030100 0007090c     .....}..........
    c090:	09060301 03010008 00080970 09050301     ........p.......
    c0a0:	03010008 0008090b 09070301 03010008     ................
    c0b0:	000b0902 09010301 03010011 00100902     ................
    c0c0:	09010301 03010008 0008096c 09010301     ........l.......
    c0d0:	03010008 00080922 09010301 03010008     ...."...........
    c0e0:	00080975 09010301 03010008 000b0901     u...............
    c0f0:	09010301 03010011 00100902 09010301     ................
    c100:	03010008 03097fba e6030100 00030900     ................
    c110:	09020301 03010012 0006097e 09020301     ........~.......
    c120:	0401000e 77da032a 01000c09 a6033e04     ....*..w.....>..
    c130:	00090908 032a0401 110973b8 9d030100     ......*..s......
    c140:	001c0904 7be30301 01000609 09049d03     .......{........
    c150:	04010006 08af033e 01000609 0c090103     ....>...........
    c160:	01030100 01000c09 17090203 06030100     ................
    c170:	01000909 097bb603 03010010 080902d2     ......{.........
    c180:	02030100 01000009 02097f03 7f030100     ................
    c190:	01000309 13090203 7e030100 01000209     ...........~....
    c1a0:	02090103 01030100 01000209 02097f03     ................
    c1b0:	01030100 01000609 097ab903 03010003     ..........z.....
    c1c0:	0003097a 097f0301 03010003 00030909     z...............
    c1d0:	097a0301 03010005 0005097c 09040301     ..z.....|.......
    c1e0:	03010003 0002097c 09040301 03010002     ....|...........
    c1f0:	00030906 09760301 03010005 00050907     ......v.........
    c200:	09790301 03010003 000b0901 09080301     ..y.............
    c210:	03010002 00050978 09010301 03010003     ....x...........
    c220:	00030901 09010301 03010003 0003097f     ................
    c230:	09010301 03010003 00060901 09010301     ................
    c240:	03010003 000c0901 09010301 03010003     ................
    c250:	00050904 09030301 03010009 0003097f     ................
    c260:	09010301 03010003 0002097f 09090301     ................
    c270:	03010006 00050903 05bd0301 01001709     ................
    c280:	03097d03 02030100 01000609 06097e03     .}...........~..
    c290:	03030100 01000e09 0900d603 03010013     ................
    c2a0:	03097faa d6030100 00030900 7faa0301     ................
    c2b0:	01000809 06090203 01030100 01000609     ................
    c2c0:	0e090303 39030100 01000609 08094403     .......9.....D..
    c2d0:	02030100 01000609 06090103 37030100     ...............7
    c2e0:	01000a09 03094903 37030100 01000309     .....I.....7....
    c2f0:	08094903 02030100 01000309 06090103     .I..............
    c300:	02030100 01000309 06090303 7d030100     ...............}
    c310:	01000309 03090303 e4030100 00030974     ............t...
    c320:	0b9e0301 01000809 0974e203 03010002     ..........t.....
    c330:	03090b9f e1030100 00070974 0b9e0301     ........t.......
    c340:	01000209 0974e203 03010005 03090b9f     ......t.........
    c350:	e1030100 00030974 032a0401 0009090e     ....t.....*.....
    c360:	033e0401 00030978 032a0401 00030908     ..>.x.....*.....
    c370:	033e0401 00030978 032a0401 00030908     ..>.x.....*.....
    c380:	033e0401 00030978 0b9d0301 01000309     ..>.x...........
    c390:	03090103 01030100 01000309 03097f03     ................
    c3a0:	2a040100 09759903 04010006 0ae9033e     ...*..u.....>...
    c3b0:	01000609 97032a04 00060975 033e0401     .....*..u.....>.
    c3c0:	06090ae9 04030100 01000709 09091503     ................
    c3d0:	06030100 01000809 09090203 02030100     ................
    c3e0:	01000609 03094e03 32030100 01000309     .....N.....2....
    c3f0:	08094e03 e9030100 00090974 0bb40301     .N......t.......
    c400:	01000809 08090603 74030100 01000809     ...........t....
    c410:	10090503 01030100 01000809 05095d03     .............]..
    c420:	3f030100 01000309 0c090203 02030100     ...?............
    c430:	01000909 09090203 7c030100 01000f09     ...........|....
    c440:	17097e03 16030100 01000e09 0979e403     .~............y.
    c450:	0301000f 070904f7 03030100 01000009     ................
    c460:	04097d03 01030100 01001009 03090503     .}..............
    c470:	7b030100 01000309 02090203 02030100     ...{............
    c480:	01000309 03097c03 04030100 01000409     .....|..........
    c490:	03097e03 03030100 01001109 06092b03     .~...........+..
    c4a0:	55030100 01000309 03092b03 55030100     ...U.....+.....U
    c4b0:	01000809 a6033804 00060973 09770301     .....8..s.....w.
    c4c0:	04010009 0ce5033e 01000509 9b033804     ....>........8..
    c4d0:	00060973 09090301 03010008 00030904     s...............
    c4e0:	09770301 03010005 00030909 032a0401     ..w...........*.
    c4f0:	060902b5 9d030100 00190904 7be30301     ...............{
    c500:	01000609 09049d03 03010006 00060905     ................
    c510:	03380401 090979ac 02030100 01000f09     ..8..y..........
    c520:	0e090303 2a040100 0902ad03 03010008     .......*........
    c530:	1c09049d e3030100 0006097b 049d0301     ........{.......
    c540:	01000609 07090503 38040100 0979b403     ...........8..y.
    c550:	0301000b 000c0902 033e0401 0c090ccf     ..........>.....
    c560:	03030100 01000f09 03091003 6d030100     ...............m
    c570:	01000809 03090203 01030100 01000609     ................
    c580:	0e090603 06030100 01000e09 06097403     .............t..
    c590:	0e030100 01000309 09097203 2a040100     .........r.....*
    c5a0:	0975ed03 04010003 0a95033e 01001609     ..u.....>.......
    c5b0:	eb032a04 00060975 033e0401 06090a95     .*..u.....>.....
    c5c0:	06030100 01000809 0b090b03 02030100     ................
    c5d0:	01000f09 09090203 02030100 01000c09     ................
    c5e0:	12090103 7b030100 01000609 18097e03     .......{.....~..
    c5f0:	11030100 01000f09 0909ab03 03010010     ................
    c600:	00060901 09020301 03010003 00030902     ................
    c610:	09020301 03010003 09097dc5 05030100     .........}......
    c620:	01000009 07097c03 7f030100 01000309     .....|..........
    c630:	0d090103 7f030100 01000209 03090103     ................
    c640:	07030100 01000209 06097d03 7c030100     .........}.....|
    c650:	01000609 02090503 7f030100 01000609     ................
    c660:	0b090303 2b040100 09718203 04010023     .......+..q.#...
    c670:	0f81033e 01000f09 ff032b04 00030970     >........+..p...
    c680:	033e0401 02090f81 01030100 01001409     ..>.............
    c690:	0c090203 02030100 01001209 14097c03     .............|..
    c6a0:	08030100 01002009 0e090303 7d030100     ..... .........}
    c6b0:	01000809 f6032b04 00150970 033e0401     .....+..p.....>.
    c6c0:	0a090f91 01030100 01000f09 06090203     ................
    c6d0:	02030100 01001209 14097c03 2b040100     .........|.....+
    c6e0:	0970f803 04010026 0f91033e 01000509     ..p.&...>.......
    c6f0:	0e090103 02030100 01000609 10090203     ................
    c700:	7c030100 01001309 20090803 03030100     ...|....... ....
    c710:	01000c09 08097d03 2b040100 0970e603     .....}.....+..p.
    c720:	04010015 0fa1033e 01000a09 0f090103     ....>...........
    c730:	02030100 01000609 12090203 7c030100     ...............|
    c740:	01001409 d9032b04 00260970 033e0401     .....+..p.&...>.
    c750:	05090fb0 01030100 01000e09 06090203     ................
    c760:	02030100 01001009 13097c03 07030100     .........|......
    c770:	01002009 0a090203 03030100 01000409     . ..............
    c780:	08097d03 7e030100 01000509 c8032b04     .}.....~.....+..
    c790:	00150970 033e0401 0c090fc2 01030100     p.....>.........
    c7a0:	01000e09 06090203 02030100 01001009     ................
    c7b0:	16097c03 09030100 01000b09 82032a04     .|...........*..
    c7c0:	00080972 033e0401 06090dfe 2a040100     r.....>........*
    c7d0:	096de003 0301000e 1909049d e3030100     ..m.............
    c7e0:	0006097b 049d0301 01000609 8e033e04     {............>..
    c7f0:	0006090e 7e9f0301 01001009 00090603     .......~........
    c800:	7b030100 01000509 03097f03 01030100     ...{............
    c810:	01000f09 02097f03 01030100 01000309     ................
    c820:	02090703 7e030100 01000309 06097b03     .......~.....{..
    c830:	06030100 01000209 06097f03 02030100     ................
    c840:	01000b09 b8032b04 00030971 033e0401     .....+..q.....>.
    c850:	09090ecb 01030100 01000309 03097f03     ................
    c860:	01030100 01000309 06090203 02030100     ................
    c870:	01000909 12097c03 08030100 01000809     .....|..........
    c880:	03097803 08030100 01000209 03090203     .x..............
    c890:	03030100 01000509 08097d03 7e030100     .........}.....~
    c8a0:	01000309 ac032b04 00110971 033e0401     .....+..q.....>.
    c8b0:	08090ede 01030100 01000509 03090203     ................
    c8c0:	02030100 01000909 12097c03 2b040100     .........|.....+
    c8d0:	0971ad03 0401000b 0edc033e 01000509     ..q.....>.......
    c8e0:	06090103 02030100 01000309 09090203     ................
    c8f0:	7c030100 01001209 08090803 02030100     ...|............
    c900:	01000609 06090303 7d030100 01000909     ...........}....
    c910:	03097e03 2b040100 09719b03 04010011     .~.....+..q.....
    c920:	0eef033e 01000809 05090103 02030100     >...............
    c930:	01000309 09090203 7c030100 01001209     ...........|....
    c940:	8a032b04 000b0971 033e0401 05090eff     .+..q.....>.....
    c950:	01030100 01000609 03090203 02030100     ................
    c960:	01000909 12097c03 07030100 01000809     .....|..........
    c970:	03090103 02030100 01000209 06090303     ................
    c980:	7d030100 01000909 03097e03 2b040100     ...}.....~.....+
    c990:	0970f803 04010005 0f92033e 01000909     ..p.....>.......
    c9a0:	03090103 7f030100 01000609 03090103     ................
    c9b0:	02030100 01000309 08090203 7c030100     ...............|
    c9c0:	01001409 08090903 02030100 01001d09     ................
    c9d0:	f4032a04 00080972 033e0401 06090d8c     .*..r.....>.....
    c9e0:	2a040100 096ed203 0301000e 1909049d     ...*..n.........
    c9f0:	e3030100 0006097b 049d0301 01000609     ....{...........
    ca00:	9c033e04 0006090d 7df80301 01001009     .>.........}....
    ca10:	0d091103 99030100 000c097d 02ee0301     ........}.......
    ca20:	01000609 06090203 01030100 01000309     ................
    ca30:	0d090103 02030100 01000509 06097f03     ................
    ca40:	01030100 01000e09 03090203 71030100     ...............q
    ca50:	01000609 06091103 06030100 01000609     ................
    ca60:	02090203 01030100 01000609 03090203     ................
    ca70:	7f030100 01000209 06090103 02030100     ................
    ca80:	01000309 07097f03 01030100 01000609     ................
    ca90:	03097903 09030100 01000609 06090603     .y..............
    caa0:	02030100 01000309 06090103 02030100     ................
    cab0:	01000309 02097f03 01030100 01000609     ................
    cac0:	03090203 7f030100 01000809 06090103     ................
    cad0:	79030100 01000309 05090903 07030100     ...y............
    cae0:	01000609 05090203 01030100 01000909     ................
    caf0:	03090203 7f030100 01000209 06090103     ................
    cb00:	02030100 01000309 02097f03 06030100     ................
    cb10:	01000609 0f090103 7a030100 01000609     ...........z....
    cb20:	03097903 10030100 01000609 06090c03     .y..............
    cb30:	7e030100 01000409 02090203 7e030100     ...~...........~
    cb40:	01000209 03090203 c9030100 0009097c     ............|...
    cb50:	01ed0301 01000c09 06090203 7e030100     ...............~
    cb60:	01000309 18090203 d5030100 000f097b     ............{...
    cb70:	097d0301 03010003 0007097e 04b40301     ..}.....~.......
    cb80:	01000309 02097f03 01030100 01000509     ................
    cb90:	03097f03 01030100 01000309 097bcc03     ..............{.
    cba0:	03010003 00040902 097e0301 03010003     ..........~.....
    cbb0:	00040902 09020301 03010003 0006097e     ............~...
    cbc0:	09020301 03010005 0003097e 09030301     ........~.......
    cbd0:	03010008 002c093f 097f0301 03010003     ....?.,.........
    cbe0:	000e0901 7ab80301 01000709 03097f03     .......z........
    cbf0:	7b030100 01000309 03097f03 0a030100     ...{............
    cc00:	01000309 05097a03 05030100 01000709     .....z..........
    cc10:	03097703 09030100 01000309 02097a03     .w...........z..
    cc20:	7d030100 01000309 02090403 06030100     ...}............
    cc30:	01000309 05097c03 7a030100 01000309     .....|.....z....
    cc40:	02090403 7c030100 01000309 02090203     .......|........
    cc50:	7e030100 01000309 09090103 03030100     ...~............
    cc60:	01000209 03097d03 01030100 01000309     .....}..........
    cc70:	03090103 01030100 01000309 06090103     ................
    cc80:	01030100 01000309 06090103 01030100     ................
    cc90:	01000309 05090403 03030100 01000909     ................
    cca0:	03097f03 01030100 01000309 02097f03     ................
    ccb0:	09030100 01000609 05090303 ba030100     ................
    ccc0:	00170905 09020301 03010008 0006097e     ............~...
    ccd0:	09030301 03010008 120900d6 aa030100     ................
    cce0:	0003097f 00d60301 01000309 097faa03     ................
    ccf0:	03010008 00060902 09010301 03010006     ................
    cd00:	000e0903 09390301 03010006 00080944     ......9.....D...
    cd10:	09020301 03010006 00060901 09370301     ..............7.
    cd20:	0301000a 00030949 09370301 03010003     ....I.....7.....
    cd30:	00080949 09020301 03010003 00060901     I...............
    cd40:	09020301 03010003 00060903 097d0301     ..............}.
    cd50:	03010003 00030903 74e40301 01000309     ...........t....
    cd60:	090b9e03 03010008 00020901 74e10301     ...............t
    cd70:	01000209 090b9f03 03010003 030974e1     .............t..
    cd80:	9e030100 0002090b 74e20301 01000609     ...........t....
    cd90:	090b9f03 03010003 030974e1 2a040100     .........t.....*
    cda0:	09090e03 3e040100 03097803 2a040100     .......>.x.....*
    cdb0:	03090803 3e040100 03097803 2a040100     .......>.x.....*
    cdc0:	03090803 3e040100 03097803 9d030100     .......>.x......
    cdd0:	0003090b 09010301 03010003 00030901     ................
    cde0:	097f0301 04010003 7599032a 01000609     ........*..u....
    cdf0:	e9033e04 0006090a 032a0401 08097597     .>........*..u..
    ce00:	3e040100 090ae903 03010006 0006090d     ...>............
    ce10:	09120301 0301000c 000c0902 09020301     ................
    ce20:	03010006 0003094e 09320301 03010003     ....N.....2.....
    ce30:	0008094e 74e90301 01000909 090b9103     N......t........
    ce40:	03010007 0003093f 09020301 0301000c     ....?...........
    ce50:	00090902 09020301 03010009 000f097c     ............|...
    ce60:	097e0301 03010017 100903af 03030100     ..~.............
    ce70:	01000c09 15090603 7d030100 01000509     ...........}....
    ce80:	03090103 02030100 01000309 097bbf03     ..............{.
    ce90:	0301000c 0003092b 09550301 03010003     ....+.....U.....
    cea0:	0003092b 09550301 03010005 0003092b     +.....U.....+...
    ceb0:	09550301 04010003 739d0338 01000609     ..U.....8..s....
    cec0:	05090903 77030100 01000909 e5033e04     .......w.....>..
    ced0:	0006090c 03380401 0609739b 0d030100     ......8..s......
    cee0:	01000209 05097703 09030100 01000309     .....w..........
    cef0:	b5032a04 00060902 049d0301 01001a09     .*..............
    cf00:	097be303 03010006 0609049d 05030100     ..{.............
    cf10:	01000609 ac033804 00090979 09020301     .....8..y.......
    cf20:	0301000f 000f0903 032a0401 090902ad     ..........*.....
    cf30:	9d030100 001e0904 7be30301 01000609     ...........{....
    cf40:	09049d03 03010006 00070905 03380401     ..............8.
    cf50:	080979b4 02030100 01000c09 cf033e04     .y...........>..
    cf60:	0009090c 09030301 03010012 00060910     ................
    cf70:	096d0301 03010008 00060902 09010301     ..m.............
    cf80:	03010006 00130906 09060301 0301000c     ................
    cf90:	000c0974 090e0301 03010003 00090972     t...........r...
    cfa0:	032a0401 030975ed 3e040100 090a9503     ..*..u.....>....
    cfb0:	0401001a 75eb032a 01000609 95033e04     ....*..u.....>..
    cfc0:	0006090a 09060301 03010008 000f090b     ................
    cfd0:	09020301 0301000f 00090902 09020301     ................
    cfe0:	0301000c 00120901 097b0301 03010006     ..........{.....
    cff0:	0018097e 7ae70301 01000f09 09099003     ~......z........
    d000:	03010008 05097bea 96030100 00020904     .....{..........
    d010:	09010301 03010018 03097be9 97030100     .........{......
    d020:	00020904 7bec0301 01000309 03097b03     .......{.....{..
    d030:	04030100 01000309 06097c03 02030100     .........|......
    d040:	01000409 03097e03 02030100 01000409     .....~..........
    d050:	03090203 7e030100 01000309 10090303     .......~........
    d060:	3f030100 01002109 03097f03 01030100     ...?.!..........
    d070:	01000e09 097ab503 03010007 0003097f     ......z.........
    d080:	097f0301 03010003 0003097f 097f0301     ................
    d090:	03010003 00030904 09060301 03010005     ................
    d0a0:	00030976 090a0301 03010003 00020976     v...........v...
    d0b0:	090a0301 03010002 0005097a 097c0301     ........z.....|.
    d0c0:	03010002 00020904 09030301 03010003     ................
    d0d0:	0003097d 097c0301 03010003 000b0901     }.....|.........
    d0e0:	09050301 03010002 0003097b 09080301     ........{.......
    d0f0:	03010003 00030979 09010301 03010003     ....y...........
    d100:	00030901 09010301 03010006 00030901     ................
    d110:	09030301 03010003 0002097d 09010301     ........}.......
    d120:	03010006 00030901 09040301 03010005     ................
    d130:	00090903 097f0301 03010003 00030901     ................
    d140:	097f0301 03010002 00060909 09030301     ................
    d150:	03010005 170905ba 02030100 01000809     ................
    d160:	06097e03 03030100 01000809 0900d603     .~..............
    d170:	03010012 03097faa d6030100 00030900     ................
    d180:	7faa0301 01000809 06090203 01030100     ................
    d190:	01000609 0e090303 39030100 01000609     ...........9....
    d1a0:	08094403 02030100 01000609 06090103     .D..............
    d1b0:	37030100 01000a09 03094903 37030100     ...7.....I.....7
    d1c0:	01000309 08094903 02030100 01000309     .....I..........
    d1d0:	06090103 02030100 01000309 06090303     ................
    d1e0:	7d030100 01000309 03090303 e4030100     ...}............
    d1f0:	00030974 0b9e0301 01000809 02090103     t...............
    d200:	e1030100 00020974 0b9f0301 01000309     ....t...........
    d210:	0974e103 03010003 02090b9e e2030100     ..t.............
    d220:	00060974 0b9f0301 01000309 0974e103     t.............t.
    d230:	04010003 090e032a 04010009 0978033e     ....*.......>.x.
    d240:	04010003 0908032a 04010003 0978033e     ....*.......>.x.
    d250:	04010003 0908032a 04010003 0978033e     ....*.......>.x.
    d260:	03010003 03090b9d 01030100 01000309     ................
    d270:	03090103 7f030100 01000309 99032a04     .............*..
    d280:	00060975 033e0401 06090ae9 2a040100     u.....>........*
    d290:	09759703 04010008 0ae9033e 01000609     ..u.....>.......
    d2a0:	06090d03 12030100 01000c09 0c090203     ................
    d2b0:	02030100 01000609 03094e03 32030100     .........N.....2
    d2c0:	01000309 08094e03 e9030100 00090974     .....N......t...
    d2d0:	0b910301 01000709 03093f03 02030100     .........?......
    d2e0:	01000c09 09090203 02030100 01000909     ................
    d2f0:	0f097c03 7e030100 01001709 09039203     .|.....~........
    d300:	0301000e 000a0902 7be30301 01001109     ...........{....
    d310:	03092b03 55030100 01000309 03092b03     .+.....U.....+..
    d320:	55030100 01000609 03092b03 55030100     ...U.....+.....U
    d330:	01000309 9d033804 00060973 09090301     .....8..s.......
    d340:	03010005 00090977 033e0401 07090ce5     ....w.....>.....
    d350:	38040100 09739b03 03010006 0002090d     ...8..s.........
    d360:	09770301 03010006 00030909 032a0401     ..w...........*.
    d370:	060902b5 9d030100 001a0904 7be30301     ...............{
    d380:	01000609 09049d03 03010006 00060905     ................
    d390:	03380401 090979ac 02030100 01000f09     ..8..y..........
    d3a0:	0f090303 2a040100 0902ad03 03010009     .......*........
    d3b0:	1e09049d e3030100 0006097b 049d0301     ........{.......
    d3c0:	01000609 06090503 38040100 0979b403     ...........8..y.
    d3d0:	03010009 00090902 033e0401 09090ccf     ..........>.....
    d3e0:	03030100 01001209 06091003 6d030100     ...............m
    d3f0:	01000809 03090203 01030100 01000609     ................
    d400:	11090603 06030100 01000c09 0c097403     .............t..
    d410:	0e030100 01000309 09097203 2a040100     .........r.....*
    d420:	0975ed03 04010003 0a95033e 01001a09     ..u.....>.......
    d430:	eb032a04 00060975 033e0401 06090a95     .*..u.....>.....
    d440:	06030100 01000809 0f090b03 02030100     ................
    d450:	01000f09 09090203 02030100 01000c09     ................
    d460:	12090103 7b030100 01000609 18097e03     .......{.....~..
    d470:	e7030100 000f097a 08c20301 01000809     ....z...........
    d480:	097cb803 03010005 020903c8 07030100     ..|.............
    d490:	01001809 097cb103 03010003 020903cf     ......|.........
    d4a0:	b4030100 0003097c 097b0301 03010003     ....|.....{.....
    d4b0:	00030904 097c0301 03010006 00040902     ......|.........
    d4c0:	097e0301 03010003 00040902 09020301     ..~.............
    d4d0:	03010003 0003097e 09030301 03010010     ....~...........
    d4e0:	0021093f 097f0301 03010003 000e0901     ?.!.............
    d4f0:	7ab50301 01000709 03097f03 7f030100     ...z............
    d500:	01000309 03097f03 7f030100 01000309     ................
    d510:	03090403 06030100 01000509 03097603     .............v..
    d520:	0a030100 01000309 02097603 0a030100     .........v......
    d530:	01000209 05097a03 7c030100 01000209     .....z.....|....
    d540:	02090403 03030100 01000309 03097d03     .............}..
    d550:	7c030100 01000309 0b090103 05030100     ...|............
    d560:	01000209 03097b03 08030100 01000309     .....{..........
    d570:	03097903 01030100 01000309 03090103     .y..............
    d580:	01030100 01000609 03090103 03030100     ................
    d590:	01000309 02097d03 01030100 01000609     .....}..........
    d5a0:	03090103 04030100 01000509 09090303     ................
    d5b0:	7f030100 01000309 03090103 7f030100     ................
    d5c0:	01000209 06090903 03030100 01000509     ................
    d5d0:	0905ba03 03010017 00080902 097e0301     ..............~.
    d5e0:	03010006 00080903 00d60301 01001209     ................
    d5f0:	097faa03 03010003 030900d6 aa030100     ................
    d600:	0008097f 09020301 03010006 00060901     ................
    d610:	09030301 0301000e 00060939 09440301     ........9.....D.
    d620:	03010008 00060902 09010301 03010006     ................
    d630:	000a0937 09490301 03010003 00030937     7.....I.....7...
    d640:	09490301 03010008 00030902 09010301     ..I.............
    d650:	03010006 00030902 09030301 03010006     ................
    d660:	0003097d 09030301 03010003 030974e4     }............t..
    d670:	9e030100 0008090b 09010301 03010002     ................
    d680:	020974e1 9f030100 0003090b 74e10301     .t.............t
    d690:	01000309 090b9e03 03010002 060974e2     .............t..
    d6a0:	9f030100 0003090b 74e10301 01000309     ...........t....
    d6b0:	0e032a04 01000909 78033e04 01000309     .*.......>.x....
    d6c0:	08032a04 01000309 78033e04 01000309     .*.......>.x....
    d6d0:	08032a04 01000309 78033e04 01000309     .*.......>.x....
    d6e0:	090b9d03 03010003 00030901 09010301     ................
    d6f0:	03010003 0003097f 032a0401 06097599     ..........*..u..
    d700:	3e040100 090ae903 04010006 7597032a     ...>........*..u
    d710:	01000809 e9033e04 0006090a 090d0301     .....>..........
    d720:	03010006 000c0912 09020301 0301000c     ................
    d730:	00060902 094e0301 03010003 00030932     ......N.....2...
    d740:	094e0301 03010008 090974e9 91030100     ..N......t......
    d750:	0007090b 093f0301 03010003 000c0902     ......?.........
    d760:	09020301 03010009 00090902 097c0301     ..............|.
    d770:	0301000f 0017097e 02cc0301 01000e09     ....~...........
    d780:	05090503 01030100 01000d09 06097a03     .............z..
    d790:	08030100 01000309 097ca303 03010013     ..........|.....
    d7a0:	0003092b 09550301 03010003 0003092b     +.....U.....+...
    d7b0:	09550301 03010005 0003092b 09550301     ..U.....+.....U.
    d7c0:	04010003 739d0338 01000609 05090903     ....8..s........
    d7d0:	77030100 01000909 e5033e04 0006090c     ...w.....>......
    d7e0:	03380401 0609739b 0d030100 01000209     ..8..s..........
    d7f0:	05097703 09030100 01000309 b5032a04     .w...........*..
    d800:	00060902 049d0301 01001a09 097be303     ..............{.
    d810:	03010006 0609049d 05030100 01000609     ................
    d820:	ac033804 00090979 09020301 0301000f     .8..y...........
    d830:	000f0903 032a0401 090902ad 9d030100     ......*.........
    d840:	001e0904 7be30301 01000609 09049d03     .......{........
    d850:	03010006 00070905 03380401 080979b4     ..........8..y..
    d860:	02030100 01000c09 cf033e04 0009090c     .........>......
    d870:	09030301 03010012 00060910 096d0301     ..............m.
    d880:	03010008 00030902 09010301 03010006     ................
    d890:	00120906 09060301 0301000f 000c0974     ............t...
    d8a0:	090e0301 03010003 00080972 032a0401     ........r.....*.
    d8b0:	030975ed 3e040100 090a9503 0401001a     .u.....>........
    d8c0:	75eb032a 01000809 95033e04 0006090a     *..u.....>......
    d8d0:	09060301 03010008 000f090b 09020301     ................
    d8e0:	0301000f 00090902 09020301 0301000c     ................
    d8f0:	00120901 097b0301 03010006 0018097e     ......{.....~...
    d900:	7ae70301 01000e09 0908ea03 03010009     ...z............
    d910:	05097c90 f0030100 00020903 09070301     .|..............
    d920:	03010018 03097c89 f7030100 00020903     .....|..........
    d930:	7c8c0301 01000309 03097b03 04030100     ...|.....{......
    d940:	01000309 06097c03 02030100 01000409     .....|..........
    d950:	03097e03 02030100 01000409 03090203     .~..............
    d960:	7e030100 01000309 10090303 3f030100     ...~...........?
    d970:	01002109 03097f03 01030100 01000e09     .!..............
    d980:	097ab503 03010007 0003097f 097f0301     ..z.............
    d990:	03010003 0003097f 097f0301 03010003     ................
    d9a0:	00030904 09060301 03010005 00030976     ............v...
    d9b0:	090a0301 03010003 00020976 090a0301     ........v.......
    d9c0:	03010002 0005097a 097c0301 03010002     ....z.....|.....
    d9d0:	00020904 09030301 03010003 0003097d     ............}...
    d9e0:	097c0301 03010003 000b0901 09050301     ..|.............
    d9f0:	03010002 0003097b 09080301 03010003     ....{...........
    da00:	00030979 09010301 03010003 00030901     y...............
    da10:	09010301 03010006 00030901 09030301     ................
    da20:	03010003 0002097d 09010301 03010006     ....}...........
    da30:	00030901 09040301 03010005 00090903     ................
    da40:	097f0301 03010003 00030901 097f0301     ................
    da50:	03010002 00060909 09030301 03010005     ................
    da60:	170905ba 02030100 01000809 06097e03     .............~..
    da70:	03030100 01000809 0900d603 03010012     ................
    da80:	03097faa d6030100 00030900 7faa0301     ................
    da90:	01000809 06090203 01030100 01000609     ................
    daa0:	0e090303 39030100 01000609 08094403     .......9.....D..
    dab0:	02030100 01000609 06090103 37030100     ...............7
    dac0:	01000a09 03094903 37030100 01000309     .....I.....7....
    dad0:	08094903 02030100 01000309 06090103     .I..............
    dae0:	02030100 01000309 06090303 7d030100     ...............}
    daf0:	01000309 03090303 e4030100 00030974     ............t...
    db00:	0b9e0301 01000809 02090103 e1030100     ................
    db10:	00020974 0b9f0301 01000309 0974e103     t.............t.
    db20:	03010003 02090b9e e2030100 00060974     ............t...
    db30:	0b9f0301 01000309 0974e103 04010003     ..........t.....
    db40:	090e032a 04010009 0978033e 04010003     *.......>.x.....
    db50:	0908032a 04010003 0978033e 04010003     *.......>.x.....
    db60:	0908032a 04010003 0978033e 03010003     *.......>.x.....
    db70:	03090b9d 01030100 01000309 03090103     ................
    db80:	7f030100 01000309 99032a04 00060975     .........*..u...
    db90:	033e0401 06090ae9 2a040100 09759703     ..>........*..u.
    dba0:	04010008 0ae9033e 01000609 06090d03     ....>...........
    dbb0:	12030100 01000c09 0c090203 02030100     ................
    dbc0:	01000609 03094e03 32030100 01000309     .....N.....2....
    dbd0:	08094e03 e9030100 00090974 0b910301     .N......t.......
    dbe0:	01000709 03093f03 02030100 01000c09     .....?..........
    dbf0:	09090203 02030100 01000909 0f097c03     .............|..
    dc00:	7e030100 01001709 0902f403 0301000e     ...~............
    dc10:	00050904 09010301 0301000d 0006097b     ............{...
    dc20:	09080301 03010003 13097bfb 2b030100     .........{.....+
    dc30:	01000309 03095503 2b030100 01000309     .....U.....+....
    dc40:	05095503 2b030100 01000309 03095503     .U.....+.....U..
    dc50:	38040100 09739d03 03010006 00050909     ...8..s.........
    dc60:	09770301 04010009 0ce5033e 01000609     ..w.....>.......
    dc70:	9b033804 00060973 090d0301 03010002     .8..s...........
    dc80:	00050977 09090301 04010003 02b5032a     w...........*...
    dc90:	01000609 09049d03 0301001a 06097be3     .............{..
    dca0:	9d030100 00060904 09050301 04010006     ................
    dcb0:	79ac0338 01000909 0f090203 03030100     8..y............
    dcc0:	01000f09 ad032a04 00090902 049d0301     .....*..........
    dcd0:	01001e09 097be303 03010006 0609049d     ......{.........
    dce0:	05030100 01000709 b4033804 00080979     .........8..y...
    dcf0:	09020301 0401000c 0ccf033e 01000909     ........>.......
    dd00:	12090303 10030100 01000609 08096d03     .............m..
    dd10:	02030100 01000309 06090103 06030100     ................
    dd20:	01001209 0c090603 74030100 01000b09     ...........t....
    dd30:	03090e03 72030100 01000809 ed032a04     .......r.....*..
    dd40:	00030975 033e0401 1a090a95 2a040100     u.....>........*
    dd50:	0975eb03 04010008 0a95033e 01000609     ..u.....>.......
    dd60:	08090603 0b030100 01000f09 0f090203     ................
    dd70:	02030100 01000909 0c090203 01030100     ................
    dd80:	01001209 06097b03 7e030100 01001809     .....{.....~....
    dd90:	097ae703 0901000f 01000007 003dbd01     ..z...........=.
    dda0:	cd000200 0100000b 0d0efb01 01010100     ................
    ddb0:	00000001 01000001 495c3a44 44335f4d     ........D:\IM_3D
    ddc0:	434c545f 7269665c 7261776d 3a440065     _TLC\firmware.D:
    ddd0:	5f4d495c 545f4433 665c434c 776d7269     \IM_3D_TLC\firmw
    dde0:	5c657261 6f676c61 68746972 324c5c6d     are\algorithm\L2
    ddf0:	5c3a4400 335f4d49 4c545f44 69665c43     .D:\IM_3D_TLC\fi
    de00:	61776d72 615c6572 726f676c 6d687469     rmware\algorithm
    de10:	00334c5c 495c3a44 44335f4d 434c545f     \L3.D:\IM_3D_TLC
    de20:	7269665c 7261776d 6c615c65 69726f67     \firmware\algori
    de30:	5c6d6874 6373694d 5c3a4400 335f4d49     thm\Misc.D:\IM_3
    de40:	4c545f44 69665c43 61776d72 435c6572     D_TLC\firmware\C
    de50:	44004d4f 4d495c3a 5f44335f 5c434c54     OM.D:\IM_3D_TLC\
    de60:	6d726966 65726177 6e6f635c 00676966     firmware\config.
    de70:	495c3a44 44335f4d 434c545f 7269665c     D:\IM_3D_TLC\fir
    de80:	7261776d 41485c65 3a44004c 5f4d495c     mware\HAL.D:\IM_
    de90:	545f4433 665c434c 776d7269 5c657261     3D_TLC\firmware\
    dea0:	5c4c4148 61746144 696e6f4d 00726f74     HAL\DataMonitor.
    deb0:	495c3a44 44335f4d 434c545f 7269665c     D:\IM_3D_TLC\fir
    dec0:	7261776d 41485c65 65445c4c 73745363     mware\HAL\DecSts
    ded0:	5c3a4400 335f4d49 4c545f44 69665c43     .D:\IM_3D_TLC\fi
    dee0:	61776d72 485c6572 445c4c41 0045414d     rmware\HAL\DMAE.
    def0:	495c3a44 44335f4d 434c545f 7269665c     D:\IM_3D_TLC\fir
    df00:	7261776d 41485c65 53445c4c 3a440047     mware\HAL\DSG.D:
    df10:	5f4d495c 545f4433 665c434c 776d7269     \IM_3D_TLC\firmw
    df20:	5c657261 5c4c4148 44004d45 4d495c3a     are\HAL\EM.D:\IM
    df30:	5f44335f 5c434c54 6d726966 65726177     _3D_TLC\firmware
    df40:	4c41485c 4950475c 3a44004f 5f4d495c     \HAL\GPIO.D:\IM_
    df50:	545f4433 665c434c 776d7269 5c657261     3D_TLC\firmware\
    df60:	5c4c4148 00454748 495c3a44 44335f4d     HAL\HGE.D:\IM_3D
    df70:	434c545f 7269665c 7261776d 41485c65     _TLC\firmware\HA
    df80:	49495c4c 3a440043 5f4d495c 545f4433     L\IIC.D:\IM_3D_T
    df90:	665c434c 776d7269 5c657261 5c4c4148     LC\firmware\HAL\
    dfa0:	65746e49 70757272 3a440074 5f4d495c     Interrupt.D:\IM_
    dfb0:	545f4433 665c434c 776d7269 5c657261     3D_TLC\firmware\
    dfc0:	5c4c4148 4350444c 5c3a4400 335f4d49     HAL\LDPC.D:\IM_3
    dfd0:	4c545f44 69665c43 61776d72 485c6572     D_TLC\firmware\H
    dfe0:	4d5c4c41 69746c75 65726f43 5c3a4400     AL\MultiCore.D:\
    dff0:	335f4d49 4c545f44 69665c43 61776d72     IM_3D_TLC\firmwa
    e000:	485c6572 4e5c4c41 44004346 4d495c3a     re\HAL\NFC.D:\IM
    e010:	5f44335f 5c434c54 6d726966 65726177     _3D_TLC\firmware
    e020:	4c41485c 7261505c 61546d61 00656c62     \HAL\ParamTable.
    e030:	495c3a44 44335f4d 434c545f 7269665c     D:\IM_3D_TLC\fir
    e040:	7261776d 41485c65 45535c4c 5c3a4400     mware\HAL\SE.D:\
    e050:	335f4d49 4c545f44 69665c43 61776d72     IM_3D_TLC\firmwa
    e060:	485c6572 545c4c41 72656d69 5c3a4400     re\HAL\Timer.D:\
    e070:	335f4d49 4c545f44 69665c43 61776d72     IM_3D_TLC\firmwa
    e080:	485c6572 545c4c41 65636172 5c3a4400     re\HAL\Trace.D:\
    e090:	335f4d49 4c545f44 69665c43 61776d72     IM_3D_TLC\firmwa
    e0a0:	485c6572 555c4c41 00545241 495c3a44     re\HAL\UART.D:\I
    e0b0:	44335f4d 434c545f 7269665c 7261776d     M_3D_TLC\firmwar
    e0c0:	41485c65 4f585c4c 3a440052 5f4d495c     e\HAL\XOR.D:\IM_
    e0d0:	545f4433 665c434c 776d7269 5c657261     3D_TLC\firmware\
    e0e0:	5c4c4148 6e657458 44006173 4d495c3a     HAL\Xtensa.D:\IM
    e0f0:	5f44335f 5c434c54 74696e75 74736574     _3D_TLC\unittest
    e100:	456b425c 545f646e 4d747365 006e6961     \BkEnd_TestMain.
    e110:	495c3a44 44335f4d 434c545f 696e755c     D:\IM_3D_TLC\uni
    e120:	73657474 41485c74 6e555f4c 65547469     ttest\HAL_UnitTe
    e130:	445c7473 43617461 6b636568 004d455f     st\DataCheck_EM.
    e140:	495c3a44 44335f4d 434c545f 696e755c     D:\IM_3D_TLC\uni
    e150:	73657474 41485c74 6e555f4c 65547469     ttest\HAL_UnitTe
    e160:	465c7473 6873616c 76697244 44007265     st\FlashDriver.D
    e170:	4d495c3a 5f44335f 5c434c54 74696e75     :\IM_3D_TLC\unit
    e180:	74736574 4c41485c 696e555f 73655474     test\HAL_UnitTes
    e190:	47485c74 3a440045 5f4d495c 545f4433     t\HGE.D:\IM_3D_T
    e1a0:	755c434c 7474696e 5c747365 5f4c4148     LC\unittest\HAL_
    e1b0:	74696e55 74736554 50444c5c 3a440043     UnitTest\LDPC.D:
    e1c0:	5f4d495c 545f4433 755c434c 7474696e     \IM_3D_TLC\unitt
    e1d0:	5c747365 5f4c4148 74696e55 74736554     est\HAL_UnitTest
    e1e0:	43464e5c 5c3a4400 335f4d49 4c545f44     \NFC.D:\IM_3D_TL
    e1f0:	6e755c43 65747469 485c7473 555f4c41     C\unittest\HAL_U
    e200:	5474696e 5c747365 5c43464e 5f43464e     nitTest\NFC\NFC_
    e210:	49534142 3a440043 5f4d495c 545f4433     BASIC.D:\IM_3D_T
    e220:	755c434c 7474696e 5c747365 5f4c4148     LC\unittest\HAL_
    e230:	74696e55 74736554 43464e5c 43464e5c     UnitTest\NFC\NFC
    e240:	5458455f 5c3a4400 335f4d49 4c545f44     _EXT.D:\IM_3D_TL
    e250:	6e755c43 65747469 485c7473 555f4c41     C\unittest\HAL_U
    e260:	5474696e 5c747365 00524f58 495c3a44     nitTest\XOR.D:\I
    e270:	44335f4d 434c545f 7269665c 7261776d     M_3D_TLC\firmwar
    e280:	64615c65 65747061 334c5c72 4d564e5c     e\adapter\L3\NVM
    e290:	3a440065 5f4d495c 545f4433 665c434c     e.D:\IM_3D_TLC\f
    e2a0:	776d7269 5c657261 5c4c4148 69616843     irmware\HAL\Chai
    e2b0:	69614d6e 6961746e 3a44006e 5f4d495c     nMaintain.D:\IM_
    e2c0:	545f4433 665c434c 776d7269 5c657261     3D_TLC\firmware\
    e2d0:	5c4c4148 00544348 495c3a44 44335f4d     HAL\HCT.D:\IM_3D
    e2e0:	434c545f 7269665c 7261776d 41485c65     _TLC\firmware\HA
    e2f0:	53485c4c 3a440047 5f4d495c 545f4433     L\HSG.D:\IM_3D_T
    e300:	665c434c 776d7269 5c657261 5c4c4148     LC\firmware\HAL\
    e310:	65447748 00677562 495c3a44 44335f4d     HwDebug.D:\IM_3D
    e320:	434c545f 7269665c 7261776d 41485c65     _TLC\firmware\HA
    e330:	47535c4c 3a440045 5f4d495c 545f4433     L\SGE.D:\IM_3D_T
    e340:	665c434c 776d7269 5c657261 5c4c4148     LC\firmware\HAL\
    e350:	73616c46 4e495c68 5f4c4554 545f4433     Flash\INTEL_3D_T
    e360:	4400434c 4d495c3a 5f44335f 5c434c54     LC.D:\IM_3D_TLC\
    e370:	74696e75 74736574 4c41485c 696e555f     unittest\HAL_Uni
    e380:	73655474 464e5c74 464e5c43 58455f43     tTest\NFC\NFC_EX
    e390:	4e495c54 5f4c4554 545f4433 0000434c     T\INTEL_3D_TLC..
    e3a0:	3255434d 69614d5f 00632e6e 4c000001     MCU2_Main.c....L
    e3b0:	43465f32 2e51444d 00020063 5f324c00     2_FCMDQ.c....L2_
    e3c0:	6c626154 54424265 0200632e 324c0000     TableBBT.c....L2
    e3d0:	746e495f 61667265 632e6563 00000200     _Interface.c....
    e3e0:	535f324c 63726165 676e4568 2e656e69     L2_SearchEngine.
    e3f0:	00020063 5f334c00 74696e49 0300632e     c....L3_Init.c..
    e400:	334c0000 4d43465f 632e5144 00000300     ..L3_FCMDQ.c....
    e410:	495f334c 7265746e 65636166 0300632e     L3_Interface.c..
    e420:	334c0000 6863535f 6c756465 00632e65     ..L3_Schedule.c.
    e430:	4c000003 6c465f33 4d687361 74696e6f     ...L3_FlashMonit
    e440:	632e726f 00000300 455f334c 42487272     or.c....L3_ErrHB
    e450:	63697361 0300632e 334c0000 7272455f     asic.c....L3_Err
    e460:	74784548 2e646e65 00030063 5f334c00     HExtend.c....L3_
    e470:	74666f53 6f636544 2e726564 00030063     SoftDecoder.c...
    e480:	5f334c00 61746144 6f636552 2e726576     .L3_DataRecover.
    e490:	00030063 5f334c00 4d667542 632e7267     c....L3_BufMgr.c
    e4a0:	00000300 445f334c 67756265 0300632e     ....L3_Debug.c..
    e4b0:	57460000 6675425f 72646441 0400632e     ..FW_BufAddr.c..
    e4c0:	57460000 7461445f 6e6f4d61 726f7469     ..FW_DataMonitor
    e4d0:	0400632e 57460000 6265445f 632e6775     .c....FW_Debug.c
    e4e0:	00000400 455f5746 746e6576 0400632e     ....FW_Event.c..
    e4f0:	57460000 534d535f 00632e47 46000004     ..FW_SMSG.c....F
    e500:	69565f57 646d4361 0400632e 57460000     W_ViaCmd.c....FW
    e510:	4c44535f 0400632e 4f430000 69425f4d     _SDL.c....COM_Bi
    e520:	73614d74 00632e6b 43000005 4d5f4d4f     tMask.c....COM_M
    e530:	726f6d65 00632e79 43000005 515f4d4f     emory.c....COM_Q
    e540:	64726f57 0500632e 69440000 435f6b73     Word.c....Disk_C
    e550:	69666e6f 00632e67 48000006 495f4c41     onfig.c....HAL_I
    e560:	2e74696e 00070063 4c414800 63664e5f     nit.c....HAL_Nfc
    e570:	61746144 63656843 00632e6b 48000008     DataCheck.c....H
    e580:	445f4c41 74536365 70655273 2e74726f     AL_DecStsReport.
    e590:	00090063 4c414800 616d445f 00632e65     c....HAL_Dmae.c.
    e5a0:	4800000a 4e5f4c41 616d726f 4753446c     ...HAL_NormalDSG
    e5b0:	0b00632e 41480000 6e455f4c 70697263     .c....HAL_Encrip
    e5c0:	6e6f6974 75646f4d 632e656c 00000c00     tionModule.c....
    e5d0:	5f4c4148 4f495047 0d00632e 41480000     HAL_GPIO.c....HA
    e5e0:	47485f4c 00632e45 4800000e 495f4c41     L_HGE.c....HAL_I
    e5f0:	632e4349 00000f00 5f4c4148 706d6554     IC.c....HAL_Temp
    e600:	74617265 53657275 6f736e65 00632e72     eratureSensor.c.
    e610:	4800000f 495f4c41 7265746e 74707572     ...HAL_Interrupt
    e620:	1000632e 41480000 644c5f4c 6e456370     .c....HAL_LdpcEn
    e630:	656e6967 1100632e 41480000 644c5f4c     gine.c....HAL_Ld
    e640:	6f536370 65447466 00632e63 48000011     pcSoftDec.c....H
    e650:	4d5f4c41 69746c75 65726f43 1200632e     AL_MultiCore.c..
    e660:	41480000 6c465f4c 44687361 65766972     ..HAL_FlashDrive
    e670:	73614272 632e6369 00001300 5f4c4148     rBasic.c....HAL_
    e680:	73616c46 69724468 45726576 632e7478     FlashDriverExt.c
    e690:	00001300 5f4c4148 61726150 6261546d     ....HAL_ParamTab
    e6a0:	632e656c 00001400 5f4c4148 72616553     le.c....HAL_Sear
    e6b0:	6e456863 656e6967 1500632e 41480000     chEngine.c....HA
    e6c0:	43485f4c 6954646d 2e72656d 00160063     L_HCmdTimer.c...
    e6d0:	4c414800 6172545f 6f4c6563 00632e67     .HAL_TraceLog.c.
    e6e0:	75000017 2e747261 00180063 4c414800     ...uart.c....HAL
    e6f0:	524f585f 1900632e 41480000 74585f4c     _XOR.c....HAL_Xt
    e700:	61736e65 1a00632e 6b420000 5f646e45     ensa.c....BkEnd_
    e710:	74736554 6e69614d 1b00632e 45540000     TestMain.c....TE
    e720:	455f5453 00632e4d 4600001c 6873616c     ST_EM.c....Flash
    e730:	76697244 545f7265 2e747365 001d0063     Driver_Test.c...
    e740:	53455400 47485f54 00632e45 5400001e     .TEST_HGE.c....T
    e750:	5f545345 6370644c 74666f53 2e636544     EST_LdpcSoftDec.
    e760:	001f0063 53455400 664e5f54 65684363     c....TEST_NfcChe
    e770:	694c6b63 632e7473 00002000 54534554     ckList.c. ..TEST
    e780:	63664e5f 66726550 616d726f 2e65636e     _NfcPerformance.
    e790:	00200063 53455400 664e5f54 55434d63     c. ..TEST_NfcMCU
    e7a0:	00632e32 54000020 5f545345 5063664e     2.c. ..TEST_NfcP
    e7b0:	51747461 2100632e 45540000 4e5f5453     attQ.c.!..TEST_N
    e7c0:	61506366 61427474 49636973 7265736e     fcPattBasicInser
    e7d0:	00632e74 54000021 5f545345 5063664e     t.c.!..TEST_NfcP
    e7e0:	47747461 61426e65 2e636973 00210063     attGenBasic.c.!.
    e7f0:	53455400 664e5f54 6e754663 73614263     .TEST_NfcFuncBas
    e800:	632e6369 00002100 54534554 63664e5f     ic.c.!..TEST_Nfc
    e810:	444d4346 00632e51 54000022 5f545345     FCMDQ.c."..TEST_
    e820:	4563664e 61447478 68436174 2e6b6365     NfcExtDataCheck.
    e830:	00220063 53455400 664e5f54 74615063     c."..TEST_NfcPat
    e840:	6e654774 2e747845 00220063 53455400     tGenExt.c."..TES
    e850:	664e5f54 6e754663 74784563 2200632e     T_NfcFuncExt.c."
    e860:	6f580000 5f745572 65686353 656c7564     ..XorUt_Schedule
    e870:	2300632e 6f580000 5f745572 6d6d6f43     .c.#..XorUt_Comm
    e880:	632e6e6f 00002300 55726f58 664e5f74     on.c.#..XorUt_Nf
    e890:	6e495f63 66726574 2e656361 00230063     c_Interface.c.#.
    e8a0:	726f5800 435f7455 69666e6f 00632e67     .XorUt_Config.c.
    e8b0:	4c000023 564e5f33 632e654d 00002400     #..L3_NVMe.c.$..
    e8c0:	5f4c4148 69616843 69614d6e 6961746e     HAL_ChainMaintai
    e8d0:	00632e6e 48000025 485f4c41 632e5443     n.c.%..HAL_HCT.c
    e8e0:	00002600 5f4c4148 2e475348 00270063     .&..HAL_HSG.c.'.
    e8f0:	4c414800 4477485f 67756265 2800632e     .HAL_HwDebug.c.(
    e900:	41480000 47535f4c 00632e45 48000029     ..HAL_SGE.c.)..H
    e910:	465f4c41 6873616c 70696843 74616546     AL_FlashChipFeat
    e920:	2e657275 002a0063 4c414800 616c465f     ure.c.*..HAL_Fla
    e930:	6d436873 00632e64 4800002a 465f4c41     shCmd.c.*..HAL_F
    e940:	6873616c 74666f53 50636544 2e617261     lashSoftDecPara.
    e950:	002a0063 53455400 664e5f54 616c4663     c.*..TEST_NfcFla
    e960:	79546873 64416570 65747061 00632e72     shTypeAdapter.c.
    e970:	0000002b 05003e04 00935802 11be0320     +....>...X.. ...
    e980:	7d8f0301 01000509 0902f103 03010002     ...}............
    e990:	00180901 7d8e0301 01000309 0902f203     .......}........
    e9a0:	03010002 03097d91 7b030100 01000309     .....}.....{....
    e9b0:	03090403 7c030100 01000609 04090203     .......|........
    e9c0:	7e030100 01000309 04090203 02030100     ...~............
    e9d0:	01000309 03097e03 03030100 01001009     .....~..........
    e9e0:	21093f03 7f030100 01000309 0e090103     .?.!............
    e9f0:	b5030100 0007097a 097f0301 03010003     ....z...........
    ea00:	0003097f 097f0301 03010003 0003097f     ................
    ea10:	09040301 03010003 00050906 09760301     ..............v.
    ea20:	03010003 0003090a 09760301 03010002     ..........v.....
    ea30:	0002090a 097a0301 03010005 0002097c     ......z.....|...
    ea40:	09040301 03010002 00030903 097d0301     ..............}.
    ea50:	03010003 0003097c 09010301 0301000b     ....|...........
    ea60:	00020905 097b0301 03010003 00030908     ......{.........
    ea70:	09790301 03010003 00030901 09010301     ..y.............
    ea80:	03010003 00060901 09010301 03010003     ................
    ea90:	00030903 097d0301 03010002 00060901     ......}.........
    eaa0:	09010301 03010003 00050904 09030301     ................
    eab0:	03010009 0003097f 09010301 03010003     ................
    eac0:	0002097f 09090301 03010006 00050903     ................
    ead0:	05ba0301 01001709 08090203 7e030100     ...............~
    eae0:	01000609 08090303 d6030100 00120900     ................
    eaf0:	7faa0301 01000309 0900d603 03010003     ................
    eb00:	08097faa 02030100 01000609 06090103     ................
    eb10:	03030100 01000e09 06093903 44030100     .........9.....D
    eb20:	01000809 06090203 01030100 01000609     ................
    eb30:	0a093703 49030100 01000309 03093703     .7.....I.....7..
    eb40:	49030100 01000809 03090203 01030100     ...I............
    eb50:	01000609 03090203 03030100 01000609     ................
    eb60:	03097d03 03030100 01000309 0974e403     .}............t.
    eb70:	03010003 09090b9e 01030100 01000309     ................
    eb80:	0974e103 03010003 03090b9f e1030100     ..t.............
    eb90:	00030974 0b9e0301 01000209 0974e203     t.............t.
    eba0:	03010005 03090b9f e1030100 00020974     ............t...
    ebb0:	032a0401 0009090e 033e0401 00030978     ..*.......>.x...
    ebc0:	032a0401 00030908 033e0401 00030978     ..*.......>.x...
    ebd0:	032a0401 00030908 033e0401 00030978     ..*.......>.x...
    ebe0:	0b9d0301 01000309 03090103 01030100     ................
    ebf0:	01000309 03097f03 2a040100 09759903     ...........*..u.
    ec00:	04010006 0ae9033e 01000609 97032a04     ....>........*..
    ec10:	00060975 033e0401 06090ae9 0d030100     u.....>.........
    ec20:	01000609 0c091203 02030100 01000f09     ................
    ec30:	06090203 4e030100 01000309 03093203     .......N.....2..
    ec40:	4e030100 01000809 0974e903 03010009     ...N......t.....
    ec50:	05090b91 3f030100 01000309 0c090203     .......?........
    ec60:	02030100 01000909 09090203 7c030100     ...............|
    ec70:	01000f09 17097e03 ec030100 000e0901     .....~..........
    ec80:	09020301 0301000a 11097d89 2b030100     .........}.....+
    ec90:	01000309 03095503 2b030100 01000309     .....U.....+....
    eca0:	06095503 2b030100 01000309 03095503     .U.....+.....U..
    ecb0:	38040100 09739d03 03010006 00050909     ...8..s.........
    ecc0:	09770301 04010009 0ce5033e 01000709     ..w.....>.......
    ecd0:	9b033804 00060973 090d0301 03010002     .8..s...........
    ece0:	00060977 09090301 04010003 02b5032a     w...........*...
    ecf0:	01000609 09049d03 0301001a 06097be3     .............{..
    ed00:	9d030100 00060904 09050301 04010007     ................
    ed10:	79ac0338 01000b09 0e090203 03030100     8..y............
    ed20:	01000e09 ad032a04 00090902 049d0301     .....*..........
    ed30:	01001d09 097be303 03010006 0609049d     ......{.........
    ed40:	05030100 01000609 b4033804 00080979     .........8..y...
    ed50:	09020301 04010009 0ccf033e 01000909     ........>.......
    ed60:	12090303 10030100 01000609 08096d03     .............m..
    ed70:	02030100 01000309 06090103 06030100     ................
    ed80:	01001209 0f090603 74030100 01000c09     ...........t....
    ed90:	03090e03 72030100 01000809 ed032a04     .......r.....*..
    eda0:	00030975 033e0401 1a090a95 2a040100     u.....>........*
    edb0:	0975eb03 04010008 0a95033e 01000609     ..u.....>.......
    edc0:	08090603 0b030100 01000f09 0f090203     ................
    edd0:	02030100 01000909 0c090203 01030100     ................
    ede0:	01001209 06097b03 7e030100 01001809     .....{.....~....
    edf0:	097ae703 0301000f 080912f6 05030100     ..z.............
    ee00:	01000709 05090a03 76030100 01001c09     ...........v....
    ee10:	0900eb03 03010005 00060901 033b0401     ..............;.
    ee20:	150963a9 dd030100 00030900 7fa30301     .c..............
    ee30:	01000509 de033e04 000e091c 033b0401     .....>........;.
    ee40:	050963a2 3e040100 091cde03 03010005     .c.....>........
    ee50:	00080901 73c80301 01000809 06090203     .......s........
    ee60:	d1030100 0006090b 09010301 03010009     ................
    ee70:	060900cc 01030100 01000309 09090103     ................
    ee80:	e4030100 0006097d 097e0301 03010003     ....}.....~.....
    ee90:	0003097f 09020301 03010003 00030902     ................
    eea0:	097a0301 03010003 00030906 097a0301     ..z...........z.
    eeb0:	03010002 00060906 097a0301 03010009     ..........z.....
    eec0:	00020904 097e0301 03010003 00030901     ......~.........
    eed0:	09030301 03010003 0002097f 09010301     ................
    eee0:	03010003 00030902 097e0301 03010003     ..........~.....
    eef0:	00030902 09020301 03010011 0006097e     ............~...
    ef00:	02920301 01001509 09090103 b1030100     ................
    ef10:	00030977 097d0301 03010003 00060905     w.....}.........
    ef20:	09020301 03010006 00030901 09020301     ................
    ef30:	03010006 00090901 09040301 03010006     ................
    ef40:	000b0902 09010301 03010003 00050902     ................
    ef50:	09010301 0301000a 060908b6 cc030100     ................
    ef60:	00030977 08b40301 01000809 06090103     w...............
    ef70:	78030100 01000309 03090103 01030100     ...x............
    ef80:	01000909 03097803 01030100 01000309     .....x..........
    ef90:	09090103 9e030100 00040976 097a0301     ........v.....z.
    efa0:	03010002 030909d6 aa030100 00030976     ............v...
    efb0:	09030301 0301000f 00030906 09050301     ................
    efc0:	03010003 0002097e 09010301 0301000b     ....~...........
    efd0:	00030901 09050301 03010003 0005097e     ............~...
    efe0:	09010301 0301000b 00030901 09020301     ................
    eff0:	03010005 00060971 09150301 03010003     ....q...........
    f000:	0005097e 09010301 03010003 00030901     ~...............
    f010:	09030301 03010003 150909bd 01030100     ................
    f020:	01000909 03090403 01030100 01000309     ................
    f030:	09090103 72030100 01000409 03090103     .......r........
    f040:	01030100 01000909 04097803 01030100     .........x......
    f050:	01000309 09090103 78030100 01000409     ...........x....
    f060:	03090103 01030100 01000909 0974f503     ..............t.
    f070:	03010006 00060902 0b820301 01000609     ................
    f080:	09090103 78030100 01000509 03090103     .......x........
    f090:	01030100 01000909 03097803 01030100     .........x......
    f0a0:	01000309 09090103 c0030100 00030974     ............t...
    f0b0:	09030301 03010009 00030903 09030301     ................
    f0c0:	03010005 000b0902 00c50301 01001009     ................
    f0d0:	06090303 03030100 01000309 06090303     ................
    f0e0:	05030100 01000509 12090103 7a030100     ...............z
    f0f0:	01000909 03090903 42040100 096eab03     ...........B..n.
    f100:	0301000e 00000901 097f0301 03010003     ................
    f110:	00080901 03090401 050904cb 0e030100     ................
    f120:	01000909 09090103 02030100 01000309     ................
    f130:	03090603 01030100 01000c09 b1032a04     .............*..
    f140:	0009097f 030b0401 140909e4 7b030100     ...............{
    f150:	01000309 05090503 07040100 09768003     ..............v.
    f160:	0401000d 0a86030b 01000309 17090203     ................
    f170:	07040100 09758103 04010003 0b82030b     ......u.........
    f180:	01000209 fe030704 00020974 030b0401     ........t.......
    f190:	02090b82 07040100 0974fe03 04010003     ..........t.....
    f1a0:	0b82030b 01000209 fe030704 00020974     ............t...
    f1b0:	030b0401 09090b82 07040100 0974fe03     ..............t.
    f1c0:	03010003 180900f7 09040100 097df003     ..............}.
    f1d0:	03010005 0f090388 01030100 01000709     ................
    f1e0:	09090203 07040100 097f8503 04010009     ................
    f1f0:	0ad00308 01000609 097ec103 04010011     ..........~.....
    f200:	77f3032a 01000a09 0e090c03 02030100     *..w............
    f210:	01000309 c0030804 00190909 030e0401     ................
    f220:	0a097281 02030100 01000309 d0030804     .r..............
    f230:	0009090c 09020301 03010004 0a0901b9     ................
    f240:	01030100 01000609 b5032a04 000e0976     .........*..v...
    f250:	03090401 0006096b 09010301 03010008     ....k...........
    f260:	00060902 09060301 03010006 00060901     ................
    f270:	09020301 04010006 7b820342 01000609     ........B..{....
    f280:	f1030704 000c0903 030e0401 04097cd3     .............|..
    f290:	2a040100 0904b303 03010004 001c0904     ...*............
    f2a0:	03070401 1c097e86 7e030100 01000509     .....~.....~....
    f2b0:	03090203 09040100 097ecb03 03010013     ..........~.....
    f2c0:	0f090193 07040100 21092703 2a040100     .........'.!...*
    f2d0:	0901f903 04010005 7bc7030e 01001c09     ...........{....
    f2e0:	81030804 000b090e 09030301 0301000a     ................
    f2f0:	00060901 7ecd0301 01000d09 05090603     .......~........
    f300:	7f030100 01000509 03090103 02030100     ................
    f310:	01000809 0f090403 19040100 0972f703     ..............r.
    f320:	04010019 049e033a 01002b09 03090403     ....:....+......
    f330:	7c030100 01000309 07090403 7c030100     ...|...........|
    f340:	01000209 03090403 01030100 01000c09     ................
    f350:	13090103 01030100 01001409 18090103     ................
    f360:	01030100 01001809 17090403 01030100     ................
    f370:	01000f09 09090103 01030100 01000909     ................
    f380:	09090103 04030100 01000609 05097c03     .............|..
    f390:	04030100 01000309 02090103 7f030100     ................
    f3a0:	01000309 08090403 7d030100 01000309     ...........}....
    f3b0:	05097f03 04030100 01000509 0b090203     ................
    f3c0:	7e030100 01000409 06090203 04030100     ...~............
    f3d0:	01000409 06090b03 f8030100 0003097d     ............}...
    f3e0:	097f0301 03010003 00030917 09690301     ..............i.
    f3f0:	03010006 00030901 02880301 01000609     ................
    f400:	06090103 02030100 01000609 03090203     ................
    f410:	7e030100 01000509 03090203 e8030100     ...~............
    f420:	00080900 09010301 04010003 7b960314     ...............{
    f430:	01000609 93033a04 00080904 00db0301     .....:..........
    f440:	01000309 06090203 a5030100 0003097f     ................
    f450:	092a0301 0301000c 0003096f 03380401     ..*.....o.....8.
    f460:	03097b8e 3a040100 0904f203 03010006     .{.....:........
    f470:	00090911 09010301 03010006 00090901     ................
    f480:	09010301 04010009 7ac40339 01000909     ........9..z....
    f490:	03090103 3a040100 0905d003 03010007     .......:........
    f4a0:	00030902 03260401 04097ca2 01030100     ......&..|......
    f4b0:	01000009 04096d03 04030100 01000009     .....m..........
    f4c0:	04096c03 32040100 0903bc03 03010000     .l.....2........
    f4d0:	05097bfd 02030100 01000309 c7032604     .{...........&..
    f4e0:	00090900 096e0301 04010003 03c30332     ......n.....2...
    f4f0:	01000009 097c8603 03010005 00030902     ......|.........
    f500:	03260401 00090937 01a50301 01000309     ..&.7...........
    f510:	00090903 02030100 01001209 c9032e04     ................
    f520:	0002097d 09070301 03010006 0006090f     }...............
    f530:	03260401 00080970 03320401 050901c2     ..&.p.....2.....
    f540:	1e030100 01000309 a5032604 0003097e     .........&..~...
    f550:	03320401 030901db 26040100 097eb303     ..2........&..~.
    f560:	0401000b 018c0332 01000709 b6032604     ....2........&..
    f570:	0003097f 09020301 03010003 030901e1     ................
    f580:	05030100 01000309 02097b03 0e030100     .........{......
    f590:	01000409 03090903 8b030100 0005097e     ............~...
    f5a0:	03320401 030903d9 95030100 0005097c     ..2.........|...
    f5b0:	09020301 04010003 091a0326 03010009     ........&.......
    f5c0:	03097faf 32040100 08094603 26040100     .......2.F.....&
    f5d0:	09038103 03010005 0e097db9 b5030100     .........}......
    f5e0:	00090902 09020301 04010008 04b3032a     ............*...
    f5f0:	01000709 097c9803 03010000 030903e8     ......|.........
    f600:	bb030100 0003097f 7cdd0301 01000309     ...........|....
    f610:	0903a303 03010003 03097cdd a3030100     .........|......
    f620:	00020903 09030301 03010003 030900c2     ................
    f630:	98030100 0003097c 03b00301 01000f09     ....|...........
    f640:	097cd003 03010006 030903b0 d0030100     ..|.............
    f650:	0008097c 03b00301 01000309 09090703     |...............
    f660:	13030100 01000d09 05097003 10030100     .........p......
    f670:	01000609 03097003 10030100 01000209     .....p..........
    f680:	02097003 10030100 01000309 06092503     .p...........%..
    f690:	5b030100 01000609 05097d03 03030100     ...[.....}......
    f6a0:	01000609 03097d03 03030100 01000309     .....}..........
    f6b0:	02097d03 03030100 01000309 06092503     .}...........%..
    f6c0:	4e040100 097ece03 03010008 00000901     ...N..~.........
    f6d0:	032a0401 10097fb7 00030100 01000009     ..*.............
    f6e0:	17090403 7c030100 01000209 03090403     .......|........
    f6f0:	7c030100 01000309 03090403 f5030100     ...|............
    f700:	000a0902 7bd90301 01000609 0904a803     .......{........
    f710:	0301001b 00090904 097e0301 0301000a     ..........~.....
    f720:	00020902 032c0401 0a097af7 0c030100     ......,..z......
    f730:	01000009 cb031e04 0008097c 09010301     ........|.......
    f740:	03010000 001c0904 03040401 0409018e     ................
    f750:	0b030100 01000009 06097703 7e030100     .........w.....~
    f760:	01000309 0f090103 7f030100 01000209     ................
    f770:	02090103 19040100 097f9503 03010002     ................
    f780:	0003097e 09020301 03010003 0002097e     ~...........~...
    f790:	03040401 030900f1 19040100 097f8c03     ................
    f7a0:	03010003 00020905 097e0301 03010003     ..........~.....
    f7b0:	00030902 097e0301 04010002 00f70304     ......~.........
    f7c0:	01000309 86031904 0007097f 03040401     ................
    f7d0:	05090181 19040100 097eff03 04010003     ..........~.....
    f7e0:	01810304 01000309 ff031904 0003097e     ............~...
    f7f0:	09030301 03010002 00030902 097e0301     ..............~.
    f800:	04010005 00fe0304 01000309 de033204     .............2..
    f810:	0005097e 03040401 030901a8 02030100     ~...............
    f820:	01001709 02090203 32040100 097ed403     ...........2..~.
    f830:	0401000c 01a40304 01000309 06090103     ................
    f840:	bd030100 000b097f 03190401 00030956     ............V...
    f850:	03040401 00030934 09760301 04010003     ....4.....v.....
    f860:	09560319 0401000d 092c0304 03010003     ..V.......,.....
    f870:	00020908 09780301 04010002 09520319     ......x.......R.
    f880:	03010002 00030902 09030301 03010006     ................
    f890:	00050978 03040401 0002093b 03190401     x.......;.......
    f8a0:	00050945 03040401 00020939 03190401     E.......9.......
    f8b0:	0002094a 09020301 03010003 00060903     J...............
    f8c0:	03040401 00020938 03190401 000a0940     ....8.......@...
    f8d0:	03040401 030900c2 19040100 097fbe03     ................
    f8e0:	04010005 00c00304 01000209 43031904     ...............C
    f8f0:	01000209 03090203 03030100 01000609     ................
    f900:	3f030404 01000209 b9031904 0008097f     ...?............
    f910:	03040401 030900c9 19040100 097fb703     ................
    f920:	04010005 00c70304 01000209 bc031904     ................
    f930:	0002097f 09020301 03010003 00060903     ................
    f940:	03040401 020900c7 78030100 01000309     ...........x....
    f950:	03090803 32040100 097efe03 04010005     .......2..~.....
    f960:	01880304 01000309 14090203 02030100     ................
    f970:	01000209 f4033204 000d097e 03040401     .....2..~.......
    f980:	03090184 01030100 01000609 0f094d03     .............M..
    f990:	02030100 01000a09 03097e03 01030100     .........~......
    f9a0:	01000209 a8031904 0002097f 09380301     ..............8.
    f9b0:	03010003 00020948 093b0301 03010009     ....H.....;.....
    f9c0:	00030902 03040401 0006091f 09010301     ................
    f9d0:	04010003 095b0319 03010002 00040948     ......[.....H...
    f9e0:	09020301 0301000d 001a0939 09020301     ........9.......
    f9f0:	04010003 09250304 03010006 00020901     ......%.........
    fa00:	097f0301 03010007 00020901 09650301     ..............e.
    fa10:	03010008 00000901 03190401 00020972     ............r...
    fa20:	09020301 04010005 09160304 03010009     ................
    fa30:	00020901 097f0301 03010002 00020901     ................
    fa40:	095d0301 03010002 00020902 097e0301     ..]...........~.
    fa50:	04010003 09070319 04010009 09790304     ..............y.
    fa60:	03010002 00020901 097f0301 03010003     ................
    fa70:	00030901 03190401 00030909 09020301     ................
    fa80:	04010003 09790304 03010006 00030901     ......y.........
    fa90:	03190401 00020901 03040401 00030903     ................
    faa0:	03190401 00030900 09020301 04010003     ................
    fab0:	097e0304 04010006 094a0332 04010008     ..~.....2.J.....
    fac0:	093c0304 03010003 00150902 09020301     ..<.............
    fad0:	04010002 09400332 0401000b 09380304     ....2.@.......8.
    fae0:	03010003 00060901 094d0301 0301000e     ..........M.....
    faf0:	000e0901 097f0301 03010002 00020901     ................
    fb00:	03190401 0002092f 09020301 04010003     ..../...........
    fb10:	09550304 04010006 09260319 03010003     ..U.......&.....
    fb20:	00050903 09020301 04010003 09590304     ..............Y.
    fb30:	04010006 09220319 03010002 00080903     ......".........
    fb40:	09020301 03010003 0006097b 03040401     ........{.......
    fb50:	00030962 03190401 0003091e 09030301     b...............
    fb60:	03010003 00030902 03040401 00060962     ............b...
    fb70:	03190401 00030919 09030301 03010003     ................
    fb80:	00030902 03040401 00060966 03320401     ........f.....2.
    fb90:	000b0962 03040401 00030924 09020301     b.......$.......
    fba0:	03010015 00020902 03320401 000d0958     ..........2.X...
    fbb0:	03040401 00030920 09010301 04010009     .... ...........
    fbc0:	097d0319 0301000c 00000903 09050301     ..}.............
    fbd0:	03010002 0003097e 09020301 03010005     ....~...........
    fbe0:	00080903 09020301 03010002 0002097e     ............~...
    fbf0:	09020301 03010002 0004096b 09010301     ........k.......
    fc00:	03010000 00060902 09170301 03010002     ................
    fc10:	00000903 09030301 03010002 00050902     ................
    fc20:	09030301 03010009 00020902 097e0301     ..............~.
    fc30:	03010002 00020902 03020401 0002094e     ............N...
    fc40:	09040301 03010003 00090907 09790301     ..............y.
    fc50:	0301000c 0002090c 03080401 02090ebf     ................
    fc60:	01030100 01000809 09090103 02030100     ................
    fc70:	01000b09 9a031904 00080971 09030301     ........q.......
    fc80:	0301000a 000c0902 09020301 0401001d     ................
    fc90:	09760348 03010009 00000902 097e0301     H.v...........~.
    fca0:	03010003 00030902 03320401 00080909     ..........2.....
    fcb0:	03190401 0003097b 03480401 00020900     ....{.....H.....
    fcc0:	03190401 00030900 09020301 04010008     ................
    fcd0:	09030348 04010013 03be034c 01000709     H.......L.......
    fce0:	c2033204 0006097c 034c0401 030903bf     .2..|.....L.....
    fcf0:	32040100 097cc103 04010003 03c4034c     ...2..|.....L...
    fd00:	01000309 03090703 02030100 01000609     ................
    fd10:	097e8203 04010008 7eb10332 01000509     ..~.....2..~....
    fd20:	d0034c04 00080901 09030301 03010003     .L..............
    fd30:	00080914 03190401 05097e96 4c040100     .........~.....L
    fd40:	0901ea03 04010013 7e990332 01000509     ........2..~....
    fd50:	d6034c04 00030901 09030301 03010003     .L..............
    fd60:	0008090e 03190401 05097e96 4c040100     .........~.....L
    fd70:	0901ea03 04010013 7e990332 01000609     ........2..~....
    fd80:	dc034c04 00030901 09030301 03010003     .L..............
    fd90:	00080908 03190401 05097e96 4c040100     .........~.....L
    fda0:	0901ea03 03010013 0005097d 09030301     ........}.......
    fdb0:	03010006 0a097ee8 32040100 097fb103     .....~.....2....
    fdc0:	04010005 00d0034c 01000809 03090303     ....L...........
    fdd0:	13030100 01000809 97031904 0005097f     ................
    fde0:	034c0401 130900e9 32040100 097f9a03     ..L........2....
    fdf0:	04010005 00d6034c 01000309 03090303     ....L...........
    fe00:	0d030100 01000809 97031904 0005097f     ................
    fe10:	034c0401 130900e9 32040100 097f9a03     ..L........2....
    fe20:	04010006 00dc034c 01000309 03090303     ....L...........
    fe30:	07030100 01000809 97031904 0005097f     ................
    fe40:	034c0401 130900e9 7e030100 01000509     ..L........~....
    fe50:	06090203 4a040100 097f8e03 0401000a     .......J........
    fe60:	090c0332 04010000 097d034a 03010006     2.......J.}.....
    fe70:	00030978 09010301 03010003 00030907     x...............
    fe80:	090b0301 0301000c 00020975 090b0301     ........u.......
    fe90:	03010003 000f0902 096f0301 03010002     ..........o.....
    fea0:	00120901 097f0301 03010003 00030901     ................
    feb0:	090e0301 03010003 00020975 090b0301     ........u.......
    fec0:	03010003 000f0902 03200401 00040929     .......... .)...
    fed0:	03320401 000d094d 03200401 00080934     ..2.M..... .4...
    fee0:	09050301 03010006 12097fb7 bd030100     ................
    fef0:	000b0901 09020301 04010009 7ed10332     ............2..~
    ff00:	01000f09 d1032904 00030900 09020301     .....)..........
    ff10:	03010009 00090904 09030301 03010006     ................
    ff20:	0006091d 03200401 030900db 29040100     ...... ........)
    ff30:	097ee403 0401001c 7fbf0320 01000309     ..~..... .......
    ff40:	c1032904 00030900 03200401 05097fbf     .)........ .....
    ff50:	02030100 01000609 0900cf03 03010008     ................
    ff60:	0a097fb6 7f030100 01000209 08090103     ................
    ff70:	ca030100 00030900 09710301 04010005     ..........q.....
    ff80:	7fb80325 01000f09 11033204 01000509     %........2......
    ff90:	08032504 01000309 02096d03 13030100     .%.......m......
    ffa0:	01000609 09096d03 02030100 01000809     .....m..........
    ffb0:	03090203 7e030100 01000209 03090303     .......~........
    ffc0:	7e030100 01000609 03090203 7f030100     ...~............
    ffd0:	01000309 06090203 03030100 01001509     ................
    ffe0:	06090103 09030100 01000609 0b097b03     .............{..
    fff0:	05030100 01000409 26034b04 01000509     .........K.&....
   10000:	08090403 32040100 06094e03 4b040100     .......2.N.....K
   10010:	0900c503 03010003 00030970 09060301     ........p.......
   10020:	03010003 00060903 09090301 03010003     ................
   10030:	0002097e 09020301 03010003 0003097e     ~...........~...
   10040:	09020301 03010006 00020970 09070301     ........p.......
   10050:	03010005 00030902 09010301 03010009     ................
   10060:	000c0904 09020301 03010003 0002097e     ............~...
   10070:	09020301 03010003 0003097e 09020301     ........~.......
   10080:	04010006 00d0032d 01000209 e9033204     ....-........2..
   10090:	000d097e 032d0401 0609019b 21030100     ~.....-........!
   100a0:	01001409 06090103 01030100 01000609     ................
   100b0:	097ede03 04010003 09640332 04010003     ..~.....2.d.....
   100c0:	00d10329 01000309 09090203 04030100     )...............
   100d0:	01000c09 06090303 1d030100 01000609     ................
   100e0:	a6032d04 0003097f 09040301 03010003     .-..............
   100f0:	00030906 03290401 0012090f 032d0401     ......).......-.
   10100:	0509018e 29040100 097ef203 04010003     .......)..~.....
   10110:	018e032d 01000309 03090403 7e030100     -..............~
   10120:	01000409 03097f03 7f030100 01000309     ................
   10130:	06090403 7c030100 01000209 02090103     .......|........
   10140:	01030100 01000209 03097e03 02030100     .........~......
   10150:	01000309 05090203 70030100 01000909     ...........p....
   10160:	05090103 0f030100 01000309 02097e03     .............~..
   10170:	7f030100 01000309 03090103 7f030100     ................
   10180:	01000609 03090103 02030100 01000309     ................
   10190:	097edb03 0301000d 1509018d ef030100     ..~.............
   101a0:	000a097e 01950301 01001509 05090103     ~...............
   101b0:	1f040100 097fb303 03010006 00000901     ................
   101c0:	097f0301 03010002 00030901 09010301     ................
   101d0:	0301000f 000c0902 032c0401 0004094e     ..........,.N...
   101e0:	09060301 03010000 000b0902 03050401     ................
   101f0:	00050952 09030301 03010000 0014097d     R...........}...
   10200:	09030301 0301000d 002c0909 09070301     ..........,.....
   10210:	03010003 00020979 09020301 03010002     ....y...........
   10220:	00020901 09010301 03010002 00020901     ................
   10230:	09010301 03010002 00020903 09010301     ................
   10240:	03010003 0003097d 09030301 03010003     ....}...........
   10250:	00030901 09010301 03010003 00030901     ................
   10260:	09010301 03010003 00080969 09030301     ........i.......
   10270:	04010009 09630319 04010005 09200305     ......c....... .
   10280:	03010014 220900e2 9e030100 0003097f     ......."........
   10290:	00e20301 01000309 03090203 01030100     ................
   102a0:	01000309 03090103 02030100 01000309     ................
   102b0:	03090303 7e030100 01000309 03097e03     .......~.....~..
   102c0:	02030100 01000609 03090303 01030100     ................
   102d0:	01000c09 03090103 01030100 01000309     ................
   102e0:	03090103 02030100 01000609 097fa403     ................
   102f0:	03010003 00030907 09790301 03010002     ..........y.....
   10300:	00030902 09010301 03010003 00030901     ................
   10310:	09010301 03010003 00030901 09010301     ................
   10320:	03010003 00030902 09010301 03010003     ................
   10330:	000c0901 09010301 03010003 00030901     ................
   10340:	09010301 03010003 00060902 00d30301     ................
   10350:	01000309 097fb003 03010010 00030905     ................
   10360:	097b0301 03010002 00030902 09010301     ..{.............
   10370:	03010003 00030901 09010301 03010003     ................
   10380:	00030901 09030301 03010003 00030901     ................
   10390:	097d0301 03010003 00030903 09010301     ..}.............
   103a0:	03010003 00030901 09010301 03010003     ................
   103b0:	00030901 09020301 03010006 00030903     ................
   103c0:	09050301 03010003 0002097b 09020301     ........{.......
   103d0:	03010003 00030901 09010301 03010003     ................
   103e0:	00030902 097f0301 03010003 00030902     ................
   103f0:	09020301 03010003 00030901 09010301     ................
   10400:	0301000c 00030901 09010301 03010003     ................
   10410:	00030901 09020301 03010006 00030903     ................
   10420:	09050301 03010003 0003097b 09020301     ........{.......
   10430:	03010002 00030901 09010301 03010003     ................
   10440:	00030902 09030301 03010003 00030901     ................
   10450:	097b0301 03010003 00030905 09010301     ..{.............
   10460:	03010003 00030901 09010301 03010003     ................
   10470:	00030901 09790301 03010006 00060909     ......y.........
   10480:	03300401 030900d6 07030100 01002109     ..0..........!..
   10490:	a7033204 0003097e 03290401 030900d1     .2..~.....).....
   104a0:	02030100 01000909 09090403 03030100     ................
   104b0:	01000609 06091d03 30040100 0900e303     ...........0....
   104c0:	03010003 00080902 09010301 03010005     ................
   104d0:	0003097f 09010301 03010002 00100901     ................
   104e0:	09010301 03010003 0002096d 09110301     ........m.......
   104f0:	03010006 00050901 09040301 03010003     ................
   10500:	001a091a 09040301 04010006 7eb60329     ............)..~
   10510:	01000709 cf033004 00030901 03290401     .....0........).
   10520:	04097eb1 30040100 0901cf03 04010002     .~.....0........
   10530:	7eb10329 01000209 cf033004 00030901     )..~.....0......
   10540:	09660301 03010008 1d097fab 07030100     ..f.............
   10550:	01000309 03090403 03030100 01000309     ................
   10560:	0a090403 03030100 01000609 02097f03     ................
   10570:	01030100 01000309 03097f03 01030100     ................
   10580:	01000509 03097903 04030100 01000909     .....y..........
   10590:	08090803 3d030100 01000b09 09090203     .......=........
   105a0:	7e030100 01000909 0b097703 01030100     ...~.....w......
   105b0:	01001d09 06090203 7e030100 01000609     ...........~....
   105c0:	0b090e03 4a030100 01001909 03093603     .......J.....6..
   105d0:	4a030100 01000409 02093603 4d030100     ...J.....6.....M
   105e0:	01000909 03097d03 03030100 01000309     .....}..........
   105f0:	03097d03 03030100 01000309 1e090303     .}..............
   10600:	32030100 01000509 03094e03 32030100     ...2.....N.....2
   10610:	01000309 03090103 7f030100 01000909     ................
   10620:	097fa303 0301000b 00020901 097f0301     ................
   10630:	03010002 00080901 09080301 03010008     ................
   10640:	0003097e 09020301 0401000a 03e3033a     ~...........:...
   10650:	01000309 d9031404 0005097b 033a0401     ........{.....:.
   10660:	07090493 18030100 01000309 0a091403     ................
   10670:	6f030100 01000309 8e033804 0003097b     ...o.....8..{...
   10680:	033a0401 060904f2 11030100 01000909     ..:.............
   10690:	06090103 01030100 01000909 09090103     ................
   106a0:	39040100 097ac403 03010009 00030901     ...9..z.........
   106b0:	033a0401 070905d0 02030100 01000309     ..:.............
   106c0:	097fbc03 03010004 00060916 03140401     ................
   106d0:	0a097b86 06030100 01000009 15090603     .{..............
   106e0:	7e030100 01000509 05090203 01040100     ...~............
   106f0:	0900dd03 03010005 03097fa8 32040100     ...............2
   10700:	0902d503 03010006 03097d8c 29040100     .........}.....)
   10710:	0900d103 03010003 00090902 09040301     ................
   10720:	03010009 00060903 091d0301 04010006     ................
   10730:	01fd0332 01000309 05090103 29040100     2..............)
   10740:	097dc103 0401000f 094a0332 04010006     ..}.....2.J.....
   10750:	09240301 04010003 095c0332 0401000a     ..$.....2.\.....
   10760:	09260301 03010003 00060901 03320401     ..&...........2.
   10770:	00050959 031b0401 12090190 02030100     Y...............
   10780:	01000209 05090103 7e030100 01000309     ...........~....
   10790:	05090203 7f030100 01000209 04090103     ................
   107a0:	0d030100 01000409 03090603 7d030100     ...............}
   107b0:	01000309 03097a03 7a030100 01000309     .....z.....z....
   107c0:	05090603 06030100 01000209 02090303     ................
   107d0:	7a030100 01000209 02097a03 01040100     ...z.....z......
   107e0:	097f9203 03010005 00090902 09050301     ................
   107f0:	03010006 00060903 09010301 03010006     ................
   10800:	00060903 09040301 03010003 00090908     ................
   10810:	09030301 03010006 00060903 03320401     ..............2.
   10820:	06097fb4 9a030100 000e0903 7ce60301     ...............|
   10830:	01000309 d1032904 00030900 09020301     .....)..........
   10840:	03010009 000b0904 09030301 03010006     ................
   10850:	0008091d 03320401 030902a7 29040100     ......2........)
   10860:	097d9803 04010015 02eb0332 01000809     ..}.....2.......
   10870:	03090103 08030100 01000309 06090103     ................
   10880:	01040100 097dad03 04010003 096f0314     ......}.......o.
   10890:	03010003 0002094d 03010401 020900c4     ....M...........
   108a0:	14040100 097fbc03 03010003 00030904     ................
   108b0:	092f0301 04010006 093c0301 03010009     ../.......<.....
   108c0:	00030901 031b0401 00030902 09040301     ................
   108d0:	03010002 0003097f 097f0301 03010003     ................
   108e0:	0003097f 09010301 03010005 00020901     ................
   108f0:	09010301 04010002 02860332 01000509     ........2.......
   10900:	07090403 06090100 01010000 05003804     .............8..
   10910:	00b44002 01370320 09090503 01030100     .@.. .7.........
   10920:	01000609 05090603 01030100 01000809     ................
   10930:	03090503 02030100 01000809 16090303     ................
   10940:	01030100 01000209 02097f03 01030100     ................
   10950:	01000209 09097a03 04040100 0901c103     .....z..........
   10960:	03010004 00090901 09010301 03010006     ................
   10970:	00060901 09010301 03010006 00060901     ................
   10980:	09010301 03010008 00020901 097f0301     ................
   10990:	03010002 00030901 09630301 03010008     ..........c.....
   109a0:	000a0901 09010301 03010006 00030902     ................
   109b0:	09010301 0301000a 00080901 09020301     ................
   109c0:	04010003 7ec70332 01000d09 bf030404     ....2..~........
   109d0:	00030901 09020301 0301001b 00030902     ................
   109e0:	097e0301 03010002 00020902 03320401     ..~...........2.
   109f0:	07097ebd 04040100 0901bb03 03010003     .~..............
   10a00:	00060901 000b0901 04010100 0205003b     ............;...
   10a10:	400a7648 04012a03 09190332 04010000     Hv.@.*..2.......
   10a20:	096d033b 03010003 00180902 097e0301     ;.m...........~.
   10a30:	03010006 00020902 09020301 04010006     ................
   10a40:	00ce033d 01000309 0b096303 01030100     =........c......
   10a50:	01000709 06090303 02030100 01000509     ................
   10a60:	02097e03 02030100 01000509 08090103     .~..............
   10a70:	03030100 01000609 07090103 01030100     ................
   10a80:	01000a09 08090303 7f030100 01000209     ................
   10a90:	05090103 01030100 01000809 06090203     ................
   10aa0:	02030100 01000d09 14090303 32040100     ...............2
   10ab0:	04094703 3d040100 0900c703 03010003     .G.....=........
   10ac0:	0002097c 09040301 03010003 000b096d     |...........m...
   10ad0:	09110301 03010004 00090902 033a0401     ..............:.
   10ae0:	0b0901f5 04030100 01000009 03097c03     .............|..
   10af0:	04030100 01000609 10090103 02030100     ................
   10b00:	01001309 b0031504 0004097e 03320401     ........~.....2.
   10b10:	05097f8d 15040100 09018f03 03010006     ................
   10b20:	000e0917 097e0301 03010002 00030902     ......~.........
   10b30:	097e0301 03010003 00050902 09760301     ..~...........v.
   10b40:	03010004 000a0908 09020301 03010003     ................
   10b50:	0002097e 09020301 03010003 0003097e     ~...........~...
   10b60:	09020301 03010005 0002096d 09130301     ........m.......
   10b70:	0301000d 0002097e 09020301 03010003     ....~...........
   10b80:	0003097e 09020301 04010005 01ba034d     ~...........M...
   10b90:	01000409 00090103 16040100 097dc103     ..............}.
   10ba0:	03010004 00000906 034d0401 040902d1     ..........M.....
   10bb0:	05030100 01000c09 0f090503 2a040100     ...............*
   10bc0:	09088103 04010002 77ff034d 01000509     ........M..w....
   10bd0:	80032a04 000a0908 09030301 04010006     .*..............
   10be0:	77fd034d 01000a09 88032a04 000a0908     M..w.....*......
   10bf0:	09010301 0301000c 00080909 09790301     ..............y.
   10c00:	03010002 00020903 09020301 03010002     ................
   10c10:	0002097d 09030301 03010007 0002097b     }...........{...
   10c20:	09030301 03010003 0003097d 09070301     ........}.......
   10c30:	03010005 00060902 097e0301 03010002     ..........~.....
   10c40:	00020902 097e0301 03010002 00020902     ......~.........
   10c50:	097e0301 03010003 00030902 097e0301     ..~...........~.
   10c60:	04010002 77ee034d 01000209 94032a04     ....M..w.....*..
   10c70:	00020908 034d0401 080977ec 7d030100     ......M..w.....}
   10c80:	01000809 02090303 14030100 01000a09     ................
   10c90:	00090103 16040100 097cfc03 03010004     ..........|.....
   10ca0:	00050902 09020301 0301000c 00030901     ................
   10cb0:	034d0401 030902e5 05030100 01000909     ..M.............
   10cc0:	81032a04 00020908 097f0301 03010003     .*..............
   10cd0:	00050901 034d0401 020977ff 2a040100     ......M..w.....*
   10ce0:	09088303 0401000a 75980316 01000a09     ...........u....
   10cf0:	ed032a04 0008090a 09010301 0301000c     .*..............
   10d00:	00080909 09790301 03010002 00020902     ......y.........
   10d10:	09010301 03010002 0002097f 09030301     ................
   10d20:	03010002 0004097e 097d0301 03010003     ....~.....}.....
   10d30:	00020902 097e0301 03010003 00050907     ......~.........
   10d40:	09020301 0301000a 0003097e 09020301     ........~.......
   10d50:	04010007 75870316 01000c09 e0034d04     .......u.....M..
   10d60:	00070902 03160401 02097da0 4d040100     .........}.....M
   10d70:	09038e03 03010008 000f0901 097f0301     ................
   10d80:	03010003 00020901 032a0401 060907d9     ..........*.....
   10d90:	4d040100 0978a703 03010002 00020902     ...M..x.........
   10da0:	09010301 04010003 07d6032a 01000309     ........*.......
   10db0:	10097d03 01030100 01000309 03090203     .}..............
   10dc0:	05030100 01001209 0c090103 04030100     ................
   10dd0:	01000909 03090303 02030100 01000209     ................
   10de0:	02097903 03030100 01000409 05097d03     .y...........}..
   10df0:	07030100 01000509 06090203 7e030100     ...............~
   10e00:	01000409 02090203 7e030100 01000309     ...........~....
   10e10:	07090203 4d040100 09789b03 03010008     .......M..x.....
   10e20:	00030902 032a0401 110907d7 01030100     ......*.........
   10e30:	01000c09 09090403 01030100 01000309     ................
   10e40:	03090203 02030100 01000209 02097903     .............y..
   10e50:	07030100 01000909 06090203 4d040100     ...............M
   10e60:	09789d03 04010007 07e1032a 01000409     ..x.....*.......
   10e70:	9f034d04 00020978 032a0401 020907e1     .M..x.....*.....
   10e80:	4d040100 09789f03 04010007 07e3032a     ...M..x.....*...
   10e90:	01000209 9d034d04 00060978 03160401     .....M..x.......
   10ea0:	0c097cdb 4d040100 09039e03 0401000f     .|.....M........
   10eb0:	7ce20316 01000309 9e034d04 00020903     ...|.....M......
   10ec0:	032a0401 060907d9 4d040100 0978a703     ..*........M..x.
   10ed0:	03010002 00020902 09010301 04010003     ................
   10ee0:	07d6032a 01000309 10097d03 01030100     *........}......
   10ef0:	01000309 03090203 05030100 01001209     ................
   10f00:	0c090103 04030100 01000909 03090303     ................
   10f10:	02030100 01000209 02097903 03030100     .........y......
   10f20:	01000409 05097d03 07030100 01000509     .....}..........
   10f30:	06090203 7e030100 01000409 02090203     .......~........
   10f40:	7e030100 01000309 07090203 4d040100     ...~...........M
   10f50:	09789b03 04010008 7cdf0316 01000309     ..x........|....
   10f60:	fa032a04 0011090a 09010301 0301000c     .*..............
   10f70:	00090904 09010301 03010003 00030902     ................
   10f80:	09020301 03010002 00020979 09070301     ........y.......
   10f90:	03010009 00060902 03160401 070974fa     .............t..
   10fa0:	2a040100 090b8403 04010004 74fc0316     ...*...........t
   10fb0:	01000209 84032a04 0002090b 03160401     .....*..........
   10fc0:	070974fc 2a040100 090b8603 04010002     .t.....*........
   10fd0:	74fa0316 01000609 0c097703 01030100     ...t.....w......
   10fe0:	01000009 03097f03 01030100 01000909     ................
   10ff0:	08090103 2a040100 0908e203 04010008     .......*........
   11000:	779f0316 01000a09 e6032a04 000a0908     ...w.....*......
   11010:	09010301 0301000c 00080902 09020301     ................
   11020:	03010008 0002097e 09020301 03010002     ....~...........
   11030:	0002097e 09020301 04010007 77950316     ~..............w
   11040:	01000309 eb032a04 00020908 03160401     .....*..........
   11050:	08097795 4e040100 0905ab03 0301000a     .w.....N........
   11060:	0000090a 09760301 03010013 00090917     ......v.........
   11070:	09030301 03010004 00030970 09030301     ........p.......
   11080:	03010009 00100905 09020301 03010002     ................
   11090:	0003097f 09010301 03010002 00060903     ................
   110a0:	090a0301 0301000f 00090903 09050301     ................
   110b0:	0301000f 00020901 097f0301 03010003     ................
   110c0:	00020901 09770301 03010006 0008090e     ......w.........
   110d0:	032a0401 07097c84 5f030100 01000609     ..*..|....._....
   110e0:	03090503 7c030100 01000309 03090503     .......|........
   110f0:	77030100 01000309 03092403 68030100     ...w.....$.....h
   11100:	01000a09 03097403 09030100 01000309     .....t..........
   11110:	03090303 78030100 01000309 03090403     .......x........
   11120:	7b030100 01000309 93034e04 00030903     ...{.....N......
   11130:	09020301 03010010 00090901 097d0301     ..............}.
   11140:	03010009 00080906 09020301 0301000e     ................
   11150:	00090901 097d0301 03010009 00080905     ......}.........
   11160:	09020301 0301000a 0009097e 09210301     ........~.....!.
   11170:	03010004 0017090a 09760301 03010004     ..........v.....
   11180:	000d0904 09020301 03010006 0002097e     ............~...
   11190:	09020301 03010003 00020902 097d0301     ..............}.
   111a0:	03010003 00020903 09020301 03010006     ................
   111b0:	000d0904 09020301 03010002 00110904     ................
   111c0:	09020301 03010009 0002097e 09020301     ........~.......
   111d0:	03010002 00020902 097d0301 03010006     ..........}.....
   111e0:	00020903 09780301 04010008 7cd9032a     ......x.....*..|
   111f0:	01000b09 03090303 98030100 0003090f     ................
   11200:	09010301 03010004 1009709c ce030100     .........p......
   11210:	00060900 7fb20301 01000209 02090103     ................
   11220:	7f030100 01000309 03090103 7f030100     ................
   11230:	01000309 0900ce03 03010008 08090fbf     ................
   11240:	00030100 01000009 03090403 02030100     ................
   11250:	01001509 04094b03 00030100 01000009     .....K..........
   11260:	03090503 01030100 01000409 12090203     ................
   11270:	07040100 096f9303 03010003 00080904     ......o.........
   11280:	09020301 03010003 00030909 09020301     ................
   11290:	03010011 0009097a 030b0401 08090d96     ....z...........
   112a0:	01030100 01000909 06090103 03030100     ................
   112b0:	01000809 05090103 7f030100 01000209     ................
   112c0:	03090103 01030100 01000e09 06090203     ................
   112d0:	01030100 01002b09 02090203 b6030100     .....+..........
   112e0:	000a0972 09040301 04010000 01850307     r...............
   112f0:	01000409 097ef903 0301000e 00030902     ......~.........
   11300:	09090301 03010003 110900fe 41030100     ...............A
   11310:	01000509 09097503 03030100 01000309     .....u..........
   11320:	06090d03 01030100 01000309 03090103     ................
   11330:	01030100 01000309 03097803 c2030100     .........x......
   11340:	00020900 7efb0301 01000b09 0900c003     .......~........
   11350:	04010007 096e0306 04010008 09330307     ......n.......3.
   11360:	0301000d 00060901 09030301 03010008     ................
   11370:	00050901 097f0301 03010002 00030901     ................
   11380:	09010301 0301000b 00090904 097f0301     ................
   11390:	03010002 00060901 09010301 0301000e     ................
   113a0:	00060902 09010301 04010027 7f84030a     ........'.......
   113b0:	01000809 fd030704 00020900 030a0401     ................
   113c0:	02097f82 01030100 01000209 06090403     ................
   113d0:	7f030100 01000509 02090103 7f030100     ................
   113e0:	01000209 03090103 01030100 01000c09     ................
   113f0:	08090203 01030100 01002009 0b030604     ......... ......
   11400:	01000809 76030a04 01000309 0a030604     .......v........
   11410:	01000209 9d030c04 00030907 097f0301     ................
   11420:	03010002 00050901 09040301 03010006     ................
   11430:	00130901 09040301 03010008 0005097f     ................
   11440:	09010301 03010002 0002097f 09010301     ................
   11450:	03010003 000c0901 09030301 03010008     ................
   11460:	0005097f 09010301 03010002 0002097f     ................
   11470:	09010301 03010003 00090901 09030301     ................
   11480:	03010008 0005097f 09010301 03010002     ................
   11490:	0002097f 09010301 03010003 000c0901     ................
   114a0:	09030301 03010008 0005097f 09010301     ................
   114b0:	03010002 0002097f 09010301 03010003     ................
   114c0:	000c0901 09040301 03010008 0005097f     ................
   114d0:	09010301 03010002 0002097f 09010301     ................
   114e0:	03010003 000c0901 09010301 03010014     ................
   114f0:	00080902 030f0401 290978db 0c040100     .........x.)....
   11500:	0907a603 04010002 78d8030f 01000209     ...........x....
   11510:	02090203 02030100 01000609 0b090203     ................
   11520:	02030100 01000809 0b090203 06040100     ................
   11530:	20097803 0f040100 02090903 06040100     .x. ............
   11540:	02097703 02030100 01000609 08091703     .w..............
   11550:	07040100 0e093a03 0a040100 097f8c03     .....:..........
   11560:	04010004 07c6030c 01000409 e3030f04     ................
   11570:	00040978 03130401 00040961 03320401     x.......a.....2.
   11580:	0003096e 03130401 00030915 03280401     n.............(.
   11590:	000e095f 09010301 03010014 00030901     _...............
   115a0:	09010301 03010003 0003097d 09050301     ........}.......
   115b0:	03010002 00030906 097a0301 03010002     ..........z.....
   115c0:	000d0901 09010301 0301000d 00100901     ................
   115d0:	09010301 03010016 000d0902 09020301     ................
   115e0:	0301001b 000d0902 09040301 03010011     ................
   115f0:	0003097f 09010301 03010006 00060902     ................
   11600:	09020301 0401000b 01d60327 01000809     ........'.......
   11610:	097fa203 03010003 0003097d 00e10301     ........}.......
   11620:	01000309 097fa503 03010006 050900de     ................
   11630:	a2030100 0003097f 09790301 03010003     ..........y.....
   11640:	00030909 097d0301 03010003 0003097d     ......}.....}...
   11650:	097e0301 03010003 00030903 00e60301     ..~.............
   11660:	01000309 097fa003 03010002 00030979     ............y...
   11670:	09030301 03010003 00030903 09010301     ................
   11680:	03010003 00030976 09030301 0301000c     ....v...........
   11690:	00030906 097a0301 03010006 030900e7     ......z.........
   116a0:	9f030100 0005097f 097a0301 03010003     ..........z.....
   116b0:	030900e7 9c030100 0003097f 00e40301     ................
   116c0:	01000909 05097803 03030100 01000309     .....x..........
   116d0:	06090503 03030100 01000709 0d090103     ................
   116e0:	01030100 01001009 0a090703 05030100     ................
   116f0:	01001009 18090703 2b040100 08094403     ...........+.D..
   11700:	1e040100 097ed303 03010000 0003097f     ......~.........
   11710:	09020301 04010003 01ac032b 01000309     ........+.......
   11720:	d5031e04 0003097e 032b0401 030901ab     ....~.....+.....
   11730:	1e040100 097ed503 03010008 0003097f     ......~.........
   11740:	097e0301 03010003 00030901 032b0401     ..~...........+.
   11750:	030901ad 1e040100 097ed803 03010002     ..........~.....
   11760:	00060903 09030301 04010009 01a5032b     ............+...
   11770:	01000609 c6034d04 0003097e 032b0401     .....M..~.....+.
   11780:	030901bc bf030100 000d097f 09020301     ................
   11790:	03010003 0006097f 09010301 03010006     ................
   117a0:	0003097e 00c10301 01000309 c4034d04     ~............M..
   117b0:	0009097e 090b0301 0301000d 00100904     ~...............
   117c0:	09010301 03010010 00160909 09030301     ................
   117d0:	03010010 000f0908 09010301 03010012     ................
   117e0:	00130903 032b0401 160900ef 2a040100     ......+........*
   117f0:	09109403 03010011 00150916 09520301     ..............R.
   11800:	03010010 00270901 09010301 04010027     ......'.....'...
   11810:	6fac034d 01002709 0a090203 7e030100     M..o.'.........~
   11820:	01000309 11090203 7e030100 01001509     ...........~....
   11830:	84032b04 00020901 032a0401 06097fa3     .+........*.....
   11840:	2b040100 0900dd03 0401000a 7fa3032a     ...+........*...
   11850:	01000209 0b090203 01030100 01001d09     ................
   11860:	12097d03 07030100 01000509 0b090203     .}..............
   11870:	02030100 01000309 1d090103 7b030100     ...............{
   11880:	01001409 05090a03 02030100 01000709     ................
   11890:	14090203 7c030100 01001409 cd032b04     .......|.....+..
   118a0:	00050900 032a0401 06097ed9 2b040100     ......*..~.....+
   118b0:	0901a703 04010007 7edb032a 01000709     ........*..~....
   118c0:	03090203 01030100 01000509 05097b03     .............{..
   118d0:	0a030100 01000509 0b090203 7e030100     ...............~
   118e0:	01000209 02090203 7e030100 01000309     ...........~....
   118f0:	9f032b04 00030901 03060401 0c097efd     .+...........~..
   11900:	01030100 01000609 03090203 01030100     ................
   11910:	01000509 06090203 02030100 01000609     ................
   11920:	a5030904 0003097f 09020301 0301000f     ................
   11930:	00090901 09010301 03010006 00060901     ................
   11940:	09010301 03010006 00060901 09010301     ................
   11950:	03010006 00060901 09010301 03010006     ................
   11960:	00060976 01ea0301 01000509 05090203     v...............
   11970:	03030100 01003209 bd030a04 000b097e     .....2......~...
   11980:	03090401 070903f7 0a040100 097c8903     ..............|.
   11990:	03010005 00080902 097e0301 03010003     ..........~.....
   119a0:	00020902 097e0301 03010003 00030902     ......~.........
   119b0:	09010301 03010003 00030901 09020301     ................
   119c0:	03010003 00030901 09010301 03010003     ................
   119d0:	00030902 09010301 03010003 00030903     ................
   119e0:	03060401 00030925 09080301 04010006     ....%...........
   119f0:	7f9a0315 01000809 7f033204 01000009     .........2......
   11a00:	08031504 01000909 06090303 61030100     ...............a
   11a10:	01000509 14033204 01000009 79031504     .....2.........y
   11a20:	01000e09 03090103 32040100 03090603     ...........2....
   11a30:	15040100 06097c03 1c040100 02090703     .....|..........
   11a40:	01030100 01000609 06090103 01030100     ................
   11a50:	01000609 06090103 01030100 01000609     ................
   11a60:	06090103 02030100 01000609 0a095b03     .............[..
   11a70:	f3030100 00100900 09010301 03010005     ................
   11a80:	00050901 09010301 03010016 00160909     ................
   11a90:	09010301 03010016 00130901 09020301     ................
   11aa0:	03010013 00140901 09010301 03010016     ................
   11ab0:	00160901 09010301 03010016 00130901     ................
   11ac0:	09020301 03010013 000c0901 7ef90301     ...............~
   11ad0:	01000c09 06090403 04030100 01000609     ................
   11ae0:	06090203 01030100 01000609 27031b04     ...............'
   11af0:	01000a09 00090103 02030100 01000909     ................
   11b00:	02090403 41030100 01000909 00090803     .......A........
   11b10:	78030100 01000309 0c090603 7f030100     ...x............
   11b20:	01000309 06090103 05030100 01000309     ................
   11b30:	09090203 7e030100 01000209 11033204     .......~.....2..
   11b40:	01001109 01031b04 01000309 05090203     ................
   11b50:	02030100 01000609 00000709 01170101     ................
   11b60:	00020000 0000005f 0efb0101 0101000d     ...._...........
   11b70:	00000101 00000100 75625c01 5c646c69     .........\build\
   11b80:	65657274 2d46525c 34313032 6b5f312e     tree\RF-2014.1_k
   11b90:	5c616d75 6f723470 585c746f 736e6574     uma\p4root\Xtens
   11ba0:	61545c61 74656772 62696c2d 63785c73     a\Target-libs\xc
   11bb0:	5c62696c 72756f73 00006563 646e6172     lib\source..rand
   11bc0:	0100632e 00000000 b0f40205 19032000     .c........... ..
   11bd0:	09030301 03010003 0003097d 09030301     ........}.......
   11be0:	03010003 00070901 090a0301 03010003     ................
   11bf0:	00030977 09090301 03010003 00020903     w...............
   11c00:	097f0301 03010003 00030901 09020301     ................
   11c10:	03010013 0005097e 09020301 03010008     ....~...........
   11c20:	0003097f 09010301 03010002 000b0902     ................
   11c30:	097f0301 03010002 00060901 09020301     ................
   11c40:	03010003 00080906 097a0301 03010003     ..........z.....
   11c50:	00040901 09050301 03010002 0002097b     ............{...
   11c60:	09010301 03010003 00070901 09030301     ................
   11c70:	09010004 0100000a 0000c501 63000200     ...............c
   11c80:	01000000 0d0efb01 01010100 00000001     ................
   11c90:	01000001 6975625c 745c646c 5c656572     ....\build\tree\
   11ca0:	322d4652 2e343130 756b5f31 705c616d     RF-2014.1_kuma\p
   11cb0:	6f6f7234 74585c74 61736e65 7261545c     4root\Xtensa\Tar
   11cc0:	2d746567 7362696c 6c63785c 745c6269     get-libs\xclib\t
   11cd0:	69736e65 6163696c 65720000 2e746e65     ensilica..reent.
   11ce0:	00010063 05000000 00b17c02 01290320     c........|.. .).
   11cf0:	11090103 04030100 01000309 03097f03     ................
   11d00:	01030100 01000509 02090103 09090100     ................
   11d10:	01010000 a4020500 032000b1 02030135     .......... .5...
   11d20:	01000009 03097e03 01030100 01000309     .....~..........
   11d30:	05090103 01030100 01000209 00000209     ................
   11d40:	03390101 00020000 00000064 0efb0101     ..9.....d.......
   11d50:	0101000d 00000101 00000100 75622f01     ............./bu
   11d60:	2f646c69 65657274 2d46522f 34313032     ild/tree/RF-2014
   11d70:	6b5f312e 2f616d75 6f723470 582f746f     .1_kuma/p4root/X
   11d80:	736e6574 61542f61 74656772 62696c2d     tensa/Target-lib
   11d90:	63782f73 2f62696c 736e6574 63696c69     s/xclib/tensilic
   11da0:	6d000061 70636d65 00532e79 00000001     a..memcpy.S.....
   11db0:	f1020500 032000b1 030100c3 00030905     ...... .........
   11dc0:	09010301 03010003 00020901 09010301     ................
   11dd0:	03010003 00020904 09090301 03010002     ................
   11de0:	00030903 09010301 03010003 00020901     ................
   11df0:	09010301 03010003 00030901 09030301     ................
   11e00:	03010003 00030905 09030301 03010003     ................
   11e10:	00030901 09010301 03010003 00020901     ................
   11e20:	09010301 03010003 00030901 09010301     ................
   11e30:	03010003 00020903 090a0301 03010006     ................
   11e40:	00020901 09010301 03010003 00030904     ................
   11e50:	09030301 03010003 00030901 09040301     ................
   11e60:	03010003 00030906 09010301 03010002     ................
   11e70:	00020901 09010301 03010002 00020901     ................
   11e80:	09010301 03010002 00020901 09010301     ................
   11e90:	03010002 00030901 09010301 03010002     ................
   11ea0:	00030906 09030301 03010003 00020901     ................
   11eb0:	09010301 03010002 00020901 09010301     ................
   11ec0:	03010002 00020901 09020301 03010002     ................
   11ed0:	00030901 09010301 03010003 00030901     ................
   11ee0:	09040301 03010002 00020901 09010301     ................
   11ef0:	03010002 00020901 09010301 03010002     ................
   11f00:	00030901 09010301 03010003 00020903     ................
   11f10:	09010301 03010003 00020901 09010301     ................
   11f20:	03010003 00020901 09010301 03010003     ................
   11f30:	00030903 09010301 03010003 00030903     ................
   11f40:	09080301 03010002 00030904 09020301     ................
   11f50:	03010003 00030901 09020301 03010003     ................
   11f60:	00020902 09060301 03010003 00020901     ................
   11f70:	09010301 03010002 00030901 09010301     ................
   11f80:	03010002 00020901 09010301 03010003     ................
   11f90:	00020901 09010301 03010002 00030901     ................
   11fa0:	09010301 03010002 00030901 09010301     ................
   11fb0:	03010003 00020901 09050301 03010003     ................
   11fc0:	00030903 09010301 03010002 00020901     ................
   11fd0:	09010301 03010003 00020901 09010301     ................
   11fe0:	03010002 00030901 09010301 03010002     ................
   11ff0:	00030901 09020301 03010003 00030903     ................
   12000:	09010301 03010002 00020901 09010301     ................
   12010:	03010003 00020901 09010301 03010002     ................
   12020:	00020903 09020301 03010002 00030901     ................
   12030:	09010301 03010003 00040903 09010301     ................
   12040:	03010003 00030901 09010301 03010002     ................
   12050:	00030901 09010301 03010003 00020901     ................
   12060:	09010301 03010003 00020903 09010301     ................
   12070:	03010003 00030901 00020901 70010100     ...............p
   12080:	02000001 00006400 fb010100 01000d0e     .....d..........
   12090:	00010101 00010000 622f0100 646c6975     ........../build
   120a0:	6572742f 46522f65 3130322d 5f312e34     /tree/RF-2014.1_
   120b0:	616d756b 7234702f 2f746f6f 6e657458     kuma/p4root/Xten
   120c0:	542f6173 65677261 696c2d74 782f7362     sa/Target-libs/x
   120d0:	62696c63 6e65742f 696c6973 00006163     clib/tensilica..
   120e0:	736d656d 532e7465 00000100 02050000     memset.S........
   120f0:	2000b325 03013903 00030905 09010301     %.. .9..........
   12100:	03010003 00020904 090a0301 03010003     ................
   12110:	00030903 09010301 03010003 00020901     ................
   12120:	09030301 03010002 00030905 09030301     ................
   12130:	03010003 00030901 09010301 03010002     ................
   12140:	00030903 090b0301 03010004 00030901     ................
   12150:	09010301 03010003 00030901 09010301     ................
   12160:	03010003 00030902 09030301 03010003     ................
   12170:	00030901 09040301 03010003 00030904     ................
   12180:	09070301 03010003 00020901 09010301     ................
   12190:	03010002 00020901 09010301 03010002     ................
   121a0:	00030906 09030301 03010003 00030901     ................
   121b0:	09010301 03010003 00030902 09030301     ................
   121c0:	03010003 00020901 09020301 03010002     ................
   121d0:	00030903 09010301 03010003 00020902     ................
   121e0:	09030301 03010003 00030901 00020901     ................
   121f0:	e1010100 02000000 00007500 fb010100     .........u......
   12200:	01000d0e 00010101 00010000 622f0100     ............../b
   12210:	646c6975 6572742f 46522f65 3130322d     uild/tree/RF-201
   12220:	5f312e34 616d756b 6f6f742f 732f736c     4.1_kuma/tools/s
   12230:	6f6f7477 4d2d736c 6e695753 782d3233     wtools-MSWin32-x
   12240:	782f3638 736e6574 6c652d61 72732f66     86/xtensa-elf/sr
   12250:	74782f63 0000736f 2d637865 63737973     c/xtos..exc-sysc
   12260:	2d6c6c61 646e6168 2e72656c 00010053     all-handler.S...
   12270:	05000000 00b39802 00d70320 09060301     ........ .......
   12280:	03010003 00030901 09010301 03010002     ................
   12290:	00030901 09010301 03010003 00020901     ................
   122a0:	09010301 03010002 00030901 09010301     ................
   122b0:	03010003 00020906 09010301 03010003     ................
   122c0:	020900cb 01030100 01000209 03090103     ................
   122d0:	03090100 01010000 00000096 006e0002     ..............n.
   122e0:	01010000 000d0efb 01010101 01000000     ................
   122f0:	2f010000 6c697562 72742f64 522f6565     .../build/tree/R
   12300:	30322d46 312e3431 6d756b5f 6f742f61     F-2014.1_kuma/to
   12310:	2f736c6f 6f747773 2d736c6f 6957534d     ols/swtools-MSWi
   12320:	2d32336e 2f363878 6e657478 652d6173     n32-x86/xtensa-e
   12330:	732f666c 782f6372 00736f74 62656400     lf/src/xtos..deb
   12340:	762d6775 6f746365 00532e72 00000001     ug-vector.S.....
   12350:	80020500 03200002 0103012c 01000309     ...... .,.......
   12360:	02090103 0c030100 01000309 00000309     ................
   12370:	008b0101 00020000 0000006f 0efb0101     ........o.......
   12380:	0101000d 00000101 00000100 75622f01     ............./bu
   12390:	2f646c69 65657274 2d46522f 34313032     ild/tree/RF-2014
   123a0:	6b5f312e 2f616d75 6c6f6f74 77732f73     .1_kuma/tools/sw
   123b0:	6c6f6f74 534d2d73 336e6957 38782d32     tools-MSWin32-x8
   123c0:	74782f36 61736e65 666c652d 6372732f     6/xtensa-elf/src
   123d0:	6f74782f 64000073 6c62756f 65762d65     /xtos..double-ve
   123e0:	726f7463 0100532e 00000000 03d00205     ctor.S..........
   123f0:	3e032000 09080301 09010003 01000003     . .>............
   12400:	00008b01 6f000200 01000000 0d0efb01     .......o........
   12410:	01010100 00000001 01000001 6975622f     ............/bui
   12420:	742f646c 2f656572 322d4652 2e343130     ld/tree/RF-2014.
   12430:	756b5f31 742f616d 736c6f6f 7477732f     1_kuma/tools/swt
   12440:	736c6f6f 57534d2d 32336e69 3638782d     ools-MSWin32-x86
   12450:	6574782f 2d61736e 2f666c65 2f637273     /xtensa-elf/src/
   12460:	736f7478 656b0000 6c656e72 6365762d     xtos..kernel-vec
   12470:	2e726f74 00010053 05000000 00030002     tor.S...........
   12480:	013f0320 03090803 03090100 01010000      .?.............
   12490:	00000082 006c0002 01010000 000d0efb     ......l.........
   124a0:	01010101 01000000 2f010000 6c697562     .........../buil
   124b0:	72742f64 522f6565 30322d46 312e3431     d/tree/RF-2014.1
   124c0:	6d756b5f 6f742f61 2f736c6f 6f747773     _kuma/tools/swto
   124d0:	2d736c6f 6957534d 2d32336e 2f363878     ols-MSWin32-x86/
   124e0:	6e657478 652d6173 732f666c 782f6372     xtensa-elf/src/x
   124f0:	00736f74 696d6e00 6365762d 2e726f74     tos..nmi-vector.
   12500:	00010053 05000000 0002c002 01370320     S........... .7.
   12510:	00000309 00870101 00020000 0000006a     ............j...
   12520:	0efb0101 0101000d 00000101 00000100     ................
   12530:	75622f01 2f646c69 65657274 2d46522f     ./build/tree/RF-
   12540:	34313032 6b5f312e 2f616d75 6c6f6f74     2014.1_kuma/tool
   12550:	77732f73 6c6f6f74 534d2d73 336e6957     s/swtools-MSWin3
   12560:	38782d32 74782f36 61736e65 666c652d     2-x86/xtensa-elf
   12570:	6372732f 6c61682f 61630000 5f656863     /src/hal..cache_
   12580:	2e6d7361 00010053 05000000 00b3c002     asm.S...........
   12590:	02ee0320 09010301 09010017 01000002      ...............
   125a0:	00008701 6a000200 01000000 0d0efb01     .......j........
   125b0:	01010100 00000001 01000001 6975622f     ............/bui
   125c0:	742f646c 2f656572 322d4652 2e343130     ld/tree/RF-2014.
   125d0:	756b5f31 742f616d 736c6f6f 7477732f     1_kuma/tools/swt
   125e0:	736c6f6f 57534d2d 32336e69 3638782d     ools-MSWin32-x86
   125f0:	6574782f 2d61736e 2f666c65 2f637273     /xtensa-elf/src/
   12600:	006c6168 63616300 615f6568 532e6d73     hal..cache_asm.S
   12610:	00000100 02050000 2000b3dc 0103ce03     ........... ....
   12620:	17090103 02090100 01010000 00000081     ................
   12630:	006a0002 01010000 000d0efb 01010101     ..j.............
   12640:	01000000 2f010000 6c697562 72742f64     ......./build/tr
   12650:	522f6565 30322d46 312e3431 6d756b5f     ee/RF-2014.1_kum
   12660:	6f742f61 2f736c6f 6f747773 2d736c6f     a/tools/swtools-
   12670:	6957534d 2d32336e 2f363878 6e657478     MSWin32-x86/xten
   12680:	652d6173 732f666c 682f6372 00006c61     sa-elf/src/hal..
   12690:	68636163 73615f65 00532e6d 00000001     cache_asm.S.....
   126a0:	f8020500 032000b3 09010782 01000002     ...... .........
   126b0:	0000f001 d1000200 01000000 0d0efb01     ................
   126c0:	01010100 00000001 01000001 2e2f3a43     ............C:/.
   126d0:	622f2e2f 646c6975 6572742f 46522f65     /./build/tree/RF
   126e0:	3130322d 5f312e34 616d756b 6f6f742f     -2014.1_kuma/too
   126f0:	732f736c 6f6f7477 4d2d736c 6e695753     ls/swtools-MSWin
   12700:	782d3233 782f3638 736e6574 6c652d61     32-x86/xtensa-el
   12710:	6e692f66 64756c63 74782f65 61736e65     f/include/xtensa
   12720:	75622f00 2f646c69 65657274 2d46522f     ./build/tree/RF-
   12730:	34313032 6b5f312e 2f616d75 6c6f6f74     2014.1_kuma/tool
   12740:	77732f73 6c6f6f74 534d2d73 336e6957     s/swtools-MSWin3
   12750:	38782d32 74782f36 61736e65 666c652d     2-x86/xtensa-elf
   12760:	6372732f 6c61682f 61630000 61656863     /src/hal..cachea
   12770:	61727474 682e6d73 00000100 68636163     ttrasm.h....cach
   12780:	73615f65 00532e6d 00000002 b4020500     e_asm.S.........
   12790:	032000b1 040100ef 09570302 0901001c     .. .......W.....
   127a0:	01000002 0000fa01 d1000200 01000000     ................
   127b0:	0d0efb01 01010100 00000001 01000001     ................
   127c0:	6975622f 742f646c 2f656572 322d4652     /build/tree/RF-2
   127d0:	2e343130 756b5f31 742f616d 736c6f6f     014.1_kuma/tools
   127e0:	7477732f 736c6f6f 57534d2d 32336e69     /swtools-MSWin32
   127f0:	3638782d 6574782f 2d61736e 2f666c65     -x86/xtensa-elf/
   12800:	2f637273 006c6168 2e2f3a43 622f2e2f     src/hal.C:/././b
   12810:	646c6975 6572742f 46522f65 3130322d     uild/tree/RF-201
   12820:	5f312e34 616d756b 6f6f742f 732f736c     4.1_kuma/tools/s
   12830:	6f6f7477 4d2d736c 6e695753 782d3233     wtools-MSWin32-x
   12840:	782f3638 736e6574 6c652d61 6e692f66     86/xtensa-elf/in
   12850:	64756c63 74782f65 61736e65 61630000     clude/xtensa..ca
   12860:	5f656863 2e6d7361 00010053 63616300     che_asm.S....cac
   12870:	74616568 73617274 00682e6d 00000002     heattrasm.h.....
   12880:	d4020500 032000b1 040101b5 01be0302     ...... .........
   12890:	01000b09 c3030104 000f097e 00020901     ........~.......
   128a0:	00010100                                         ...

Disassembly of section .xt.prop:

00000000 <.xt.prop>:
       0:	20000700 00000204 00000001 400a2800     ... .........(.@
      10:	00000124 00000001 20000d7c 00000002     $.......|.. ....
      20:	00000082 20000d7e 00000000 00002808     ....~.. .....(..
      30:	20000d80 0000000e 00000082 20000d8e     ... ........... 
      40:	00000000 00002808 20000d90 0000000e     .....(..... ....
      50:	00000082 20000d9e 00000000 00002808     ....... .....(..
      60:	20000da0 00000064 00000082 20000e04     ... d.......... 
      70:	00000000 00000008 20000e05 00000008     ........... ....
      80:	000000a2 20000e0d 0000000f 000000a2     ....... ........
      90:	20000e1c 0000000b 000000a2 20000e27     ... ........'.. 
      a0:	00000000 00000008 20000e28 00000027     ........(.. '...
      b0:	000000a2 20000e4f 00000000 00000008     ....O.. ........
      c0:	20000e50 00000058 000000a2 20000ea8     P.. X.......... 
      d0:	00000000 00000008 20000ea9 00000005     ........... ....
      e0:	000000a2 20000eae 00000039 000000a2     ....... 9.......
      f0:	20000ee7 00000000 00000008 20000ee9     ... ........... 
     100:	00000049 000000a2 20000f32 00000003     I.......2.. ....
     110:	00000092 20000f35 00000023 000000a2     ....5.. #.......
     120:	20000f58 00000000 00000008 20000f58     X.. ........X.. 
     130:	00000011 000000a2 20000f69 00000000     ........i.. ....
     140:	00000008 20000f69 00000027 000000a2     ....i.. '.......
     150:	20000f90 00000000 00000008 20000f90     ... ........... 
     160:	00000020 000000a2 20000fb0 00000000      .......... ....
     170:	00000008 20000fb0 00000005 000000a2     ....... ........
     180:	20000fb5 0000003b 000000a2 20000ff0     ... ;.......... 
     190:	00000000 00000008 20000ff0 0000000e     ........... ....
     1a0:	000000a2 20000ffe 00000000 00002808     ....... .....(..
     1b0:	20001000 00000069 00000082 20001069     ... i.......i.. 
     1c0:	00000000 00000008 20001069 00000013     ........i.. ....
     1d0:	000000a2 2000107c 00000000 00000008     ....|.. ........
     1e0:	2000107c 00000011 000000a2 2000108d     |.. ........... 
     1f0:	0000007e 000000a2 2000110b 00000000     ~.......... ....
     200:	00000008 2000110c 00000003 000000a2     ....... ........
     210:	2000110f 00000000 00000008 20001110     ... ........... 
     220:	00000020 000000a2 20001130 00000000      .......0.. ....
     230:	00000008 20001130 0000001c 000000a2     ....0.. ........
     240:	2000114c 00000000 00002808 2000114c     L.. .....(..L.. 
     250:	00000064 00000082 200011b0 00000029     d.......... )...
     260:	000000a2 200011d9 0000005d 000000a2     ....... ].......
     270:	20001236 00000000 00000008 20001236     6.. ........6.. 
     280:	00000023 000000a2 20001259 0000000d     #.......Y.. ....
     290:	000000a2 20001266 0000001a 000000a2     ....f.. ........
     2a0:	20001280 00000000 00000008 20001281     ... ........... 
     2b0:	00000022 000000a2 200012a3 00000000     ".......... ....
     2c0:	00000008 200012a4 0000001f 000000a2     ....... ........
     2d0:	200012c3 00000000 00000008 200012c4     ... ........... 
     2e0:	00000047 000000a2 2000130b 00000031     G.......... 1...
     2f0:	00000092 2000133c 00000019 000000a2     ....<.. ........
     300:	20001355 00000000 00000008 20001355     U.. ........U.. 
     310:	00000003 000000a2 20001358 0000001c     ........X.. ....
     320:	000000a2 20001374 00000011 000000a2     ....t.. ........
     330:	20001385 0000001c 000000a2 200013a1     ... ........... 
     340:	00000000 00000008 200013a2 00000002     ........... ....
     350:	000000a2 200013a4 00000002 000000a2     ....... ........
     360:	200013a6 00000039 000000a2 200013df     ... 9.......... 
     370:	00000005 00000092 200013e4 00000014     ........... ....
     380:	000000a2 200013f8 00000000 00000008     ....... ........
     390:	200013f9 00000003 000000a2 200013fc     ... ........... 
     3a0:	0000001c 000000a2 20001418 0000000f     ........... ....
     3b0:	000000a2 20001427 00000019 000000a2     ....'.. ........
     3c0:	20001440 0000001a 000000a2 2000145a     @.. ........Z.. 
     3d0:	00000003 00000008 2000145d 00000003     ........].. ....
     3e0:	000000a2 20001460 00000000 00000008     ....`.. ........
     3f0:	20001460 00000036 000000a2 20001496     `.. 6.......... 
     400:	00000000 00000008 20001496 00000008     ........... ....
     410:	000000a2 2000149e 00000000 00000008     ....... ........
     420:	200014a0 0000001a 000000a2 200014ba     ... ........... 
     430:	00000000 00000008 200014ba 00000046     ........... F...
     440:	000000a2 20001500 00000000 00000008     ....... ........
     450:	20001501 0000001f 000000a2 20001520     ... ........ .. 
     460:	00000008 000000a2 20001528 00000000     ........(.. ....
     470:	00000008 20001528 0000000c 000000a2     ....(.. ........
     480:	20001534 00000000 00000008 20001534     4.. ........4.. 
     490:	00000005 000000a2 20001539 00000000     ........9.. ....
     4a0:	00000008 20001539 0000001c 000000a2     ....9.. ........
     4b0:	20001555 00000000 00000008 20001555     U.. ........U.. 
     4c0:	00000019 000000a2 2000156e 00000000     ........n.. ....
     4d0:	00002808 20001570 0000001a 00000082     .(..p.. ........
     4e0:	2000158a 00000000 00000008 2000158a     ... ........... 
     4f0:	00000004 000000a2 2000158e 00000000     ........... ....
     500:	00002808 20001590 0000001a 00000082     .(..... ........
     510:	200015aa 00000000 00000008 200015aa     ... ........... 
     520:	00000004 000000a2 200015ae 00000000     ........... ....
     530:	00002808 200015b0 0000003e 00000082     .(..... >.......
     540:	200015ee 00000000 00000008 200015ee     ... ........... 
     550:	00000003 000000a2 200015f1 00000000     ........... ....
     560:	00000008 200015f1 00000003 000000a2     ....... ........
     570:	200015f4 00000000 00000008 200015f4     ... ........... 
     580:	0000001c 000000a2 20001610 00000000     ........... ....
     590:	00002808 20001610 00000035 00000082     .(..... 5.......
     5a0:	20001645 00000003 00000092 20001648     E.. ........H.. 
     5b0:	00000000 00000008 20001649 00000013     ........I.. ....
     5c0:	000000a2 2000165c 00000042 000000a2     ....\.. B.......
     5d0:	2000169e 00000000 00000008 2000169e     ... ........... 
     5e0:	00000012 000000a2 200016b0 00000047     ........... G...
     5f0:	000000a2 200016f7 00000000 00000008     ....... ........
     600:	200016f8 00000003 000000a2 200016fb     ... ........... 
     610:	00000000 00000008 200016fc 0000000b     ........... ....
     620:	00000082 20001707 00000000 00000008     ....... ........
     630:	20001708 00000009 000000a2 20001711     ... ........... 
     640:	00000000 00000008 20001711 00000011     ........... ....
     650:	000000a2 20001722 0000001a 000000a2     ....".. ........
     660:	2000173c 00000003 000000a2 2000173f     <.. ........?.. 
     670:	00000000 00000008 20001740 0000002f     ........@.. /...
     680:	000000a2 2000176f 00000000 00002808     ....o.. .....(..
     690:	20001770 00000040 00000082 200017b0     p.. @.......... 
     6a0:	00000014 000000a2 200017c4 00000000     ........... ....
     6b0:	00000008 200017c4 00000026 000000a2     ....... &.......
     6c0:	200017ea 00000026 000000a2 20001810     ... &.......... 
     6d0:	00000000 00000008 20001810 0000000d     ........... ....
     6e0:	000000a2 2000181d 0000000f 000000a2     ....... ........
     6f0:	2000182c 00000000 00000008 2000182c     ,.. ........,.. 
     700:	0000001e 000000a2 2000184a 00000000     ........J.. ....
     710:	00000008 2000184c 0000001c 000000a2     ....L.. ........
     720:	20001868 00000014 000000a2 2000187c     h.. ........|.. 
     730:	00000000 00000008 2000187d 00000003     ........}.. ....
     740:	000000a2 20001880 00000018 000000a2     ....... ........
     750:	20001898 0000002e 000000a2 200018c6     ... ........... 
     760:	00000000 00000008 200018c8 00000025     ........... %...
     770:	000000a2 200018ed 0000002c 000000a2     ....... ,.......
     780:	20001919 00000000 00000008 2000191a     ... ........... 
     790:	00000022 000000a2 2000193c 00000020     ".......<..  ...
     7a0:	000000a2 2000195c 00000000 00000008     ....\.. ........
     7b0:	2000195c 0000000f 000000a2 2000196b     \.. ........k.. 
     7c0:	00000000 00000008 2000196c 00000017     ........l.. ....
     7d0:	000000a2 20001983 00000000 00000008     ....... ........
     7e0:	20001984 00000017 000000a2 2000199b     ... ........... 
     7f0:	00000000 00000008 2000199b 0000000c     ........... ....
     800:	000000a2 200019a7 00000000 00000008     ....... ........
     810:	200019a8 0000000c 000000a2 200019b4     ... ........... 
     820:	00000000 00000008 200019b4 0000001c     ........... ....
     830:	000000a2 200019d0 00000000 00000008     ....... ........
     840:	200019d0 0000001c 000000a2 200019ec     ... ........... 
     850:	00000000 00002808 200019ec 00000039     .....(..... 9...
     860:	00000082 20001a25 00000000 00002808     ....%.. .....(..
     870:	20001a28 00000029 00000082 20001a51     (.. ).......Q.. 
     880:	00000000 00000008 20001a52 0000000e     ........R.. ....
     890:	000000a2 20001a60 00000018 000000a2     ....`.. ........
     8a0:	20001a78 00000000 00000008 20001a79     x.. ........y.. 
     8b0:	0000004f 000000a2 20001ac8 00000024     O.......... $...
     8c0:	00000092 20001aec 00000000 00000008     ....... ........
     8d0:	20001aed 00000022 000000a2 20001b0f     ... ".......... 
     8e0:	00000024 000000a2 20001b33 00000000     $.......3.. ....
     8f0:	00000008 20001b34 0000001e 000000a2     ....4.. ........
     900:	20001b52 00000087 000000a2 20001bd9     R.. ........... 
     910:	0000004f 000000a2 20001c28 00000003     O.......(.. ....
     920:	00000092 20001c2b 00000000 00000008     ....+.. ........
     930:	20001c2c 00000024 000000a2 20001c50     ,.. $.......P.. 
     940:	00000000 00000008 20001c50 00000027     ........P.. '...
     950:	000000a2 20001c77 00000024 00000092     ....w.. $.......
     960:	20001c9b 00000000 00000008 20001c9c     ... ........... 
     970:	00000016 000000a2 20001cb2 00000000     ........... ....
     980:	00000008 20001cb4 00000024 000000a2     ....... $.......
     990:	20001cd8 00000000 00000008 20001cd8     ... ........... 
     9a0:	00000005 000000a2 20001cdd 00000000     ........... ....
     9b0:	00000008 20001cdd 00000003 000000a2     ....... ........
     9c0:	20001ce0 0000000d 000000a2 20001ced     ... ........... 
     9d0:	00000000 00000008 20001ced 00000005     ........... ....
     9e0:	000000a2 20001cf2 00000000 00000008     ....... ........
     9f0:	20001cf4 0000000d 000000a2 20001d01     ... ........... 
     a00:	00000000 00000008 20001d01 00000005     ........... ....
     a10:	000000a2 20001d06 00000000 00000008     ....... ........
     a20:	20001d06 00000026 000000a2 20001d2c     ... &.......,.. 
     a30:	00000008 000000a2 20001d34 00000010     ........4.. ....
     a40:	000000a2 20001d44 00000000 00002808     ....D.. .....(..
     a50:	20001d44 00000036 00000082 20001d7a     D.. 6.......z.. 
     a60:	00000000 00002808 20001d7c 0000001e     .....(..|.. ....
     a70:	00000082 20001d9a 00000000 00000008     ....... ........
     a80:	20001d9c 00000003 000000a2 20001d9f     ... ........... 
     a90:	00000000 00000008 20001da0 00000003     ........... ....
     aa0:	000000a2 20001da3 00000000 00002808     ....... .....(..
     ab0:	20001da4 0000006c 00000082 20001e10     ... l.......... 
     ac0:	00000000 00000008 20001e10 00000003     ........... ....
     ad0:	000000a2 20001e13 00000000 00000008     ....... ........
     ae0:	20001e14 00000003 000000a2 20001e17     ... ........... 
     af0:	00000000 00000008 20001e18 00000003     ........... ....
     b00:	000000a2 20001e1b 00000000 00002808     ....... .....(..
     b10:	20001e1c 0000002d 00000082 20001e49     ... -.......I.. 
     b20:	00000020 000000a2 20001e69 00000004      .......i.. ....
     b30:	00000092 20001e6d 00000000 00000008     ....m.. ........
     b40:	20001e6d 00000003 000000a2 20001e70     m.. ........p.. 
     b50:	00000000 00000008 20001e70 00000003     ........p.. ....
     b60:	000000a2 20001e73 00000000 00000008     ....s.. ........
     b70:	20001e74 0000001c 000000a2 20001e90     t.. ........... 
     b80:	00000061 000000a2 20001ef1 00000000     a.......... ....
     b90:	00000008 20001ef1 00000007 000000a2     ....... ........
     ba0:	20001ef8 00000000 00000008 20001ef8     ... ........... 
     bb0:	00000008 000000a2 20001f00 00000000     ........... ....
     bc0:	00002808 20001f00 00000062 00000082     .(..... b.......
     bd0:	20001f62 00000000 00000008 20001f62     b.. ........b.. 
     be0:	0000000a 000000a2 20001f6c 00000032     ........l.. 2...
     bf0:	000000a2 20001f9e 00000000 00000008     ....... ........
     c00:	20001f9e 0000001a 00000082 20001fb8     ... ........... 
     c10:	00000000 00000008 20001fb8 00000017     ........... ....
     c20:	000000a2 20001fcf 00000000 00000008     ....... ........
     c30:	20001fd0 0000001c 000000a2 20001fec     ... ........... 
     c40:	00000016 000000a2 20002002 0000001b     ......... . ....
     c50:	000000a2 2000201d 00000000 00000008     ..... . ........
     c60:	2000201d 0000000f 000000a2 2000202c     . . ........, . 
     c70:	00000014 000000a2 20002040 00000000     ........@ . ....
     c80:	00000008 20002040 00000009 000000a2     ....@ . ........
     c90:	20002049 00000003 000000a2 2000204c     I . ........L . 
     ca0:	00000014 000000a2 20002060 00000061     ........` . a...
     cb0:	000000a2 200020c1 00000025 000000a2     ..... . %.......
     cc0:	200020e6 00000000 00000008 200020e6     . . ......... . 
     cd0:	00000006 000000a2 200020ec 0000003e     ......... . >...
     ce0:	000000a2 2000212a 00000000 00000008     ....*!. ........
     cf0:	2000212a 0000000a 000000a2 20002134     *!. ........4!. 
     d00:	00000030 000000a2 20002164 0000001d     0.......d!. ....
     d10:	000000a2 20002181 00000017 000000a2     .....!. ........
     d20:	20002198 00000028 000000a2 200021c0     .!. (........!. 
     d30:	00000011 000000a2 200021d1 00000000     .........!. ....
     d40:	00000008 200021d1 0000000b 000000a2     .....!. ........
     d50:	200021dc 00000034 000000a2 20002210     .!. 4........". 
     d60:	00000000 00000008 20002210 00000015     .........". ....
     d70:	000000a2 20002225 00000000 00000008     ....%". ........
     d80:	20002225 00000009 000000a2 2000222e     %". .........". 
     d90:	0000002f 000000a2 2000225d 00000000     /.......]". ....
     da0:	00000008 2000225d 00000006 000000a2     ....]". ........
     db0:	20002263 0000003d 000000a2 200022a0     c". =........". 
     dc0:	00000000 00000008 200022a0 000000b8     .........". ....
     dd0:	000000a2 20002358 00000030 000000a2     ....X#. 0.......
     de0:	20002388 00000038 000000a2 200023c0     .#. 8........#. 
     df0:	00000000 00000008 200023c0 0000002c     .........#. ,...
     e00:	000000a2 200023ec 0000001c 000000a2     .....#. ........
     e10:	20002408 00000000 00000008 20002408     .$. .........$. 
     e20:	0000000f 00000082 20002417 00000000     .........$. ....
     e30:	00000008 20002419 00000023 000000a2     .....$. #.......
     e40:	2000243c 0000004c 000000a2 20002488     <$. L........$. 
     e50:	00000000 00000008 20002488 00000006     .........$. ....
     e60:	000000a2 2000248e 00000016 000000a2     .....$. ........
     e70:	200024a4 00000000 00000008 200024a4     .$. .........$. 
     e80:	00000010 000000a2 200024b4 00000000     .........$. ....
     e90:	00000008 200024b4 00000012 000000a2     .....$. ........
     ea0:	200024c6 0000001d 000000a2 200024e3     .$. .........$. 
     eb0:	00000000 00000008 200024e4 0000000c     .........$. ....
     ec0:	000000a2 200024f0 00000015 000000a2     .....$. ........
     ed0:	20002505 00000000 00000008 20002505     .%. .........%. 
     ee0:	00000009 000000a2 2000250e 0000002d     .........%. -...
     ef0:	000000a2 2000253b 00000000 00000008     ....;%. ........
     f00:	2000253c 00000008 000000a2 20002544     <%. ........D%. 
     f10:	00000021 000000a2 20002565 00000037     !.......e%. 7...
     f20:	000000a2 2000259c 00000000 00000008     .....%. ........
     f30:	2000259c 00000021 000000a2 200025bd     .%. !........%. 
     f40:	00000000 00000008 200025bd 0000000d     .........%. ....
     f50:	000000a2 200025ca 0000000e 000000a2     .....%. ........
     f60:	200025d8 00000000 00000008 200025da     .%. .........%. 
     f70:	00000002 000000a2 200025dc 00000003     .........%. ....
     f80:	000000a2 200025df 00000045 000000a2     .....%. E.......
     f90:	20002624 00000089 000000a2 200026ad     $&. .........&. 
     fa0:	00000009 000000a2 200026b6 00000016     .........&. ....
     fb0:	000000a2 200026cc 00000000 00000008     .....&. ........
     fc0:	200026cc 00000006 000000a2 200026d2     .&. .........&. 
     fd0:	0000002c 000000a2 200026fe 00000000     ,........&. ....
     fe0:	00000008 200026fe 00000002 000000a2     .....&. ........
     ff0:	20002700 0000003c 000000a2 2000273c     .'. <.......<'. 
    1000:	00000000 00000008 2000273c 0000001b     ........<'. ....
    1010:	000000a2 20002757 00000000 00000008     ....W'. ........
    1020:	20002757 00000014 000000a2 2000276b     W'. ........k'. 
    1030:	00000000 00000008 2000276c 0000000f     ........l'. ....
    1040:	000000a2 2000277b 00000000 00000008     ....{'. ........
    1050:	2000277c 0000004c 000000a2 200027c8     |'. L........'. 
    1060:	00000000 00000008 200027c8 00000006     .........'. ....
    1070:	000000a2 200027ce 00000016 000000a2     .....'. ........
    1080:	200027e4 00000000 00000008 200027e4     .'. .........'. 
    1090:	00000003 000000a2 200027e7 00000000     .........'. ....
    10a0:	00000008 200027e8 00000049 000000a2     .....'. I.......
    10b0:	20002831 00000000 00000008 20002831     1(. ........1(. 
    10c0:	00000008 000000a2 20002839 00000000     ........9(. ....
    10d0:	00000008 20002839 00000011 000000a2     ....9(. ........
    10e0:	2000284a 00000000 00000008 2000284c     J(. ........L(. 
    10f0:	00000006 000000a2 20002852 00000047     ........R(. G...
    1100:	000000a2 20002899 0000008f 000000a2     .....(. ........
    1110:	20002928 00000009 000000a2 20002931     (). ........1). 
    1120:	00000028 000000a2 20002959 00000003     (.......Y). ....
    1130:	00000008 2000295c 0000000b 000000a2     ....\). ........
    1140:	20002967 00000000 00000008 20002968     g). ........h). 
    1150:	0000004c 000000a2 200029b4 00000000     L........). ....
    1160:	00000008 200029b4 00000017 000000a2     .....). ........
    1170:	200029cb 00000000 00000008 200029cc     .). .........). 
    1180:	0000000c 000000a2 200029d8 00000018     .........). ....
    1190:	000000a2 200029f0 0000000c 000000a2     .....). ........
    11a0:	200029fc 00000000 00000008 200029fc     .). .........). 
    11b0:	00000017 000000a2 20002a13 00000000     .........*. ....
    11c0:	00000008 20002a15 0000000d 000000a2     .....*. ........
    11d0:	20002a22 00000003 00000008 20002a25     "*. ........%*. 
    11e0:	00000036 000000a2 20002a5b 00000000     6.......[*. ....
    11f0:	00000008 20002a5c 00000004 000000a2     ....\*. ........
    1200:	20002a60 00000015 000000a2 20002a75     `*. ........u*. 
    1210:	00000000 00000008 20002a75 00000006     ........u*. ....
    1220:	000000a2 20002a7b 0000003e 000000a2     ....{*. >.......
    1230:	20002ab9 00000015 000000a2 20002ace     .*. .........*. 
    1240:	00000000 00000008 20002ad1 00000006     .........*. ....
    1250:	000000a2 20002ad7 0000006e 000000a2     .....*. n.......
    1260:	20002b45 00000087 000000a2 20002bcc     E+. .........+. 
    1270:	000000b5 000000a2 20002c81 00000000     .........,. ....
    1280:	00000008 20002c81 00000011 000000a2     .....,. ........
    1290:	20002c92 00000000 00000008 20002c94     .,. .........,. 
    12a0:	00000003 000000a2 20002c97 00000000     .........,. ....
    12b0:	00000008 20002c98 00000011 000000a2     .....,. ........
    12c0:	20002ca9 00000000 00000008 20002ca9     .,. .........,. 
    12d0:	00000003 000000a2 20002cac 00000000     .........,. ....
    12e0:	00000008 20002cac 00000014 000000a2     .....,. ........
    12f0:	20002cc0 00000000 00002808 20002cc0     .,. .....(...,. 
    1300:	000000e1 00000082 20002da1 00000000     .........-. ....
    1310:	00000008 20002da1 00000003 000000a2     .....-. ........
    1320:	20002da4 00000000 00000008 20002da4     .-. .........-. 
    1330:	00000003 000000a2 20002da7 00000000     .........-. ....
    1340:	00000008 20002da8 00000003 000000a2     .....-. ........
    1350:	20002dab 00000000 00000008 20002dac     .-. .........-. 
    1360:	00000003 000000a2 20002daf 00000000     .........-. ....
    1370:	00000008 20002db0 0000000b 000000a2     .....-. ........
    1380:	20002dbb 00000000 00000008 20002dbc     .-. .........-. 
    1390:	00000014 000000a2 20002dd0 00000000     .........-. ....
    13a0:	00000008 20002dd0 00000003 000000a2     .....-. ........
    13b0:	20002dd3 00000000 00000008 20002dd4     .-. .........-. 
    13c0:	00000003 000000a2 20002dd7 00000000     .........-. ....
    13d0:	00002808 20002dd8 00000019 00000082     .(...-. ........
    13e0:	20002df1 00000004 000000a2 20002df5     .-. .........-. 
    13f0:	00000000 00000008 20002df5 00000003     .........-. ....
    1400:	000000a2 20002df8 00000000 00000008     .....-. ........
    1410:	20002df8 00000004 00000082 20002dfc     .-. .........-. 
    1420:	00000000 00000008 20002dfc 00000003     .........-. ....
    1430:	000000a2 20002dff 00000000 00002808     .....-. .....(..
    1440:	20002e00 00000018 00000082 20002e18     ... ........... 
    1450:	00000018 000000a2 20002e30 00000000     ........0.. ....
    1460:	00000008 20002e30 00000003 000000a2     ....0.. ........
    1470:	20002e33 00000000 00000008 20002e34     3.. ........4.. 
    1480:	00000003 000000a2 20002e37 00000000     ........7.. ....
    1490:	00000008 20002e39 0000000e 00000082     ....9.. ........
    14a0:	20002e47 00000000 00002808 20002e48     G.. .....(..H.. 
    14b0:	00000028 00000082 20002e70 00000003     (.......p.. ....
    14c0:	000000a2 20002e73 00000000 00000008     ....s.. ........
    14d0:	20002e74 00000002 000000a2 20002e76     t.. ........v.. 
    14e0:	00000000 00000008 20002e78 00000039     ........x.. 9...
    14f0:	00000082 20002eb1 00000000 00000008     ....... ........
    1500:	20002eb1 00000011 000000a2 20002ec2     ... ........... 
    1510:	00000000 00002808 20002ec4 00000050     .....(..... P...
    1520:	00000082 20002f14 00000009 000000a2     ...../. ........
    1530:	20002f1d 00000013 000000a2 20002f30     ./. ........0/. 
    1540:	00000010 000000a2 20002f40 00000063     ........@/. c...
    1550:	000000a2 20002fa3 00000000 00000008     ...../. ........
    1560:	20002fa5 0000001c 000000a2 20002fc1     ./. ........./. 
    1570:	00000049 000000a2 2000300a 00000032     I........0. 2...
    1580:	000000a2 2000303c 00000020 000000a2     ....<0.  .......
    1590:	2000305c 00000020 000000a2 2000307c     \0.  .......|0. 
    15a0:	00000003 000000a2 2000307f 00000000     .........0. ....
    15b0:	00000008 20003080 00000003 000000a2     .....0. ........
    15c0:	20003083 00000000 00000008 20003085     .0. .........0. 
    15d0:	00000007 000000a2 2000308c 0000000f     .........0. ....
    15e0:	000000a2 2000309b 00000000 00000008     .....0. ........
    15f0:	2000309d 00000042 000000a2 200030df     .0. B........0. 
    1600:	00000000 00000008 200030e0 00000003     .........0. ....
    1610:	000000a2 200030e3 00000000 00000008     .....0. ........
    1620:	200030e4 0000001a 000000a2 200030fe     .0. .........0. 
    1630:	00000000 00000008 200030fe 00000013     .........0. ....
    1640:	000000a2 20003111 00000003 000000a2     .....1. ........
    1650:	20003114 00000000 00000008 20003114     .1. .........1. 
    1660:	00000003 000000a2 20003117 00000000     .........1. ....
    1670:	00000008 20003118 00000003 000000a2     .....1. ........
    1680:	2000311b 00000000 00000008 2000311b     .1. .........1. 
    1690:	00000003 000000a2 2000311e 00000000     .........1. ....
    16a0:	00000008 20003120 00000003 000000a2     .... 1. ........
    16b0:	20003123 00000000 00002808 20003124     #1. .....(..$1. 
    16c0:	00000040 00000082 20003164 0000004a     @.......d1. J...
    16d0:	000000a2 200031ae 00000000 00000008     .....1. ........
    16e0:	200031ae 0000000e 000000a2 200031bc     .1. .........1. 
    16f0:	00000025 000000a2 200031e1 00000017     %........1. ....
    1700:	000000a2 200031f8 00000000 00000008     .....1. ........
    1710:	200031fa 00000002 000000a2 200031fc     .1. .........1. 
    1720:	00000003 000000a2 200031ff 00000003     .........1. ....
    1730:	000000a2 20003202 00000000 00000008     .....2. ........
    1740:	20003204 00000003 000000a2 20003207     .2. .........2. 
    1750:	00000000 00000008 20003208 00000019     .........2. ....
    1760:	000000a2 20003221 00000003 000000a2     ....!2. ........
    1770:	20003224 00000000 00000008 20003224     $2. ........$2. 
    1780:	0000000b 000000a2 2000322f 00000000     ......../2. ....
    1790:	00000008 20003230 00000003 000000a2     ....02. ........
    17a0:	20003233 00000000 00000008 20003234     32. ........42. 
    17b0:	00000020 000000a2 20003254 00000019      .......T2. ....
    17c0:	000000a2 2000326d 00000011 000000a2     ....m2. ........
    17d0:	2000327e 00000003 00000008 20003281     ~2. .........2. 
    17e0:	0000001c 000000a2 2000329d 00000000     .........2. ....
    17f0:	00000008 2000329d 00000023 000000a2     .....2. #.......
    1800:	200032c0 0000001a 000000a2 200032da     .2. .........2. 
    1810:	00000000 00000008 200032da 0000003c     .........2. <...
    1820:	000000a2 20003316 00000000 00000008     .....3. ........
    1830:	20003316 00000017 000000a2 2000332d     .3. ........-3. 
    1840:	0000001a 000000a2 20003347 00000000     ........G3. ....
    1850:	00000008 20003348 00000010 000000a2     ....H3. ........
    1860:	20003358 00000000 00000008 20003358     X3. ........X3. 
    1870:	00000009 000000a2 20003361 0000000c     ........a3. ....
    1880:	000000a2 2000336d 00000000 00000008     ....m3. ........
    1890:	2000336d 00000025 000000a2 20003392     m3. %........3. 
    18a0:	00000000 00000008 20003392 0000000a     .........3. ....
    18b0:	000000a2 2000339c 00000000 00000008     .....3. ........
    18c0:	2000339c 00000010 000000a2 200033ac     .3. .........3. 
    18d0:	00000000 00000008 200033ac 00000007     .........3. ....
    18e0:	000000a2 200033b3 00000000 00000008     .....3. ........
    18f0:	200033b4 00000009 000000a2 200033bd     .3. .........3. 
    1900:	00000000 00002808 200033c0 00000030     .....(...3. 0...
    1910:	00000082 200033f0 0000000b 000000a2     .....3. ........
    1920:	200033fb 00000000 00000008 200033fb     .3. .........3. 
    1930:	00000009 000000a2 20003404 00000041     .........4. A...
    1940:	000000a2 20003445 0000000b 000000a2     ....E4. ........
    1950:	20003450 00000000 00000008 20003450     P4. ........P4. 
    1960:	00000047 00000082 20003497 00000000     G........4. ....
    1970:	00000008 20003498 0000000b 00000082     .....4. ........
    1980:	200034a3 00000000 00000008 200034a4     .4. .........4. 
    1990:	00000003 000000a2 200034a7 00000000     .........4. ....
    19a0:	00000008 200034a8 00000019 000000a2     .....4. ........
    19b0:	200034c1 00000003 000000a2 200034c4     .4. .........4. 
    19c0:	00000000 00000008 200034c4 00000003     .........4. ....
    19d0:	000000a2 200034c7 00000000 00000008     .....4. ........
    19e0:	200034c8 00000003 000000a2 200034cb     .4. .........4. 
    19f0:	00000000 00000008 200034cc 00000013     .........4. ....
    1a00:	000000a2 200034df 00000000 00002808     .....4. .....(..
    1a10:	200034e0 00000026 00000082 20003506     .4. &........5. 
    1a20:	00000000 00002808 20003508 0000000d     .....(...5. ....
    1a30:	00000082 20003515 00000000 00002808     .....5. .....(..
    1a40:	20003518 00000031 00000082 20003549     .5. 1.......I5. 
    1a50:	0000001d 000000a2 20003566 00000015     ........f5. ....
    1a60:	000000a2 2000357b 00000006 000000a2     ....{5. ........
    1a70:	20003581 0000002d 000000a2 200035ae     .5. -........5. 
    1a80:	0000003c 000000a2 200035ea 00000007     <........5. ....
    1a90:	000000a2 200035f1 00000000 00000008     .....5. ........
    1aa0:	200035f1 00000027 000000a2 20003618     .5. '........6. 
    1ab0:	00000000 00000008 20003618 00000024     .........6. $...
    1ac0:	000000a2 2000363c 00000000 00000008     ....<6. ........
    1ad0:	2000363c 00000012 000000a2 2000364e     <6. ........N6. 
    1ae0:	00000000 00000008 20003650 00000018     ........P6. ....
    1af0:	000000a2 20003668 00000000 00000008     ....h6. ........
    1b00:	20003668 00000018 000000a2 20003680     h6. .........6. 
    1b10:	00000000 00002808 20003680 00000014     .....(...6. ....
    1b20:	00000082 20003694 00000000 00002808     .....6. .....(..
    1b30:	20003694 00000040 00000082 200036d4     .6. @........6. 
    1b40:	00000023 000000a2 200036f7 00000000     #........6. ....
    1b50:	00000008 200036f8 0000001e 000000a2     .....6. ........
    1b60:	20003716 00000027 000000a2 2000373d     .7. '.......=7. 
    1b70:	00000014 000000a2 20003751 00000021     ........Q7. !...
    1b80:	000000a2 20003772 0000000b 000000a2     ....r7. ........
    1b90:	2000377d 00000000 00000008 2000377d     }7. ........}7. 
    1ba0:	00000008 000000a2 20003785 00000000     .........7. ....
    1bb0:	00000008 20003785 00000012 000000a2     .....7. ........
    1bc0:	20003797 00000000 00002808 20003798     .7. .....(...7. 
    1bd0:	00000031 00000082 200037c9 0000001d     1........7. ....
    1be0:	000000a2 200037e6 00000015 000000a2     .....7. ........
    1bf0:	200037fb 00000006 000000a2 20003801     .7. .........8. 
    1c00:	0000002d 000000a2 2000382e 0000003c     -........8. <...
    1c10:	000000a2 2000386a 00000007 000000a2     ....j8. ........
    1c20:	20003871 00000000 00000008 20003871     q8. ........q8. 
    1c30:	00000027 000000a2 20003898 00000000     '........8. ....
    1c40:	00000008 20003898 00000024 000000a2     .....8. $.......
    1c50:	200038bc 00000000 00000008 200038bc     .8. .........8. 
    1c60:	00000012 000000a2 200038ce 00000000     .........8. ....
    1c70:	00000008 200038d0 00000018 000000a2     .....8. ........
    1c80:	200038e8 00000000 00000008 200038e8     .8. .........8. 
    1c90:	00000018 000000a2 20003900 00000000     .........9. ....
    1ca0:	00002808 20003900 0000001c 00000082     .(...9. ........
    1cb0:	2000391c 00000000 00002808 2000391c     .9. .....(...9. 
    1cc0:	0000002c 00000082 20003948 00000019     ,.......H9. ....
    1cd0:	00000092 20003961 00000000 00002808     ....a9. .....(..
    1ce0:	20003964 00000040 00000082 200039a4     d9. @........9. 
    1cf0:	00000023 000000a2 200039c7 00000000     #........9. ....
    1d00:	00000008 200039c8 0000001e 000000a2     .....9. ........
    1d10:	200039e6 00000027 000000a2 20003a0d     .9. '........:. 
    1d20:	00000013 000000a2 20003a20 0000001e     ........ :. ....
    1d30:	000000a2 20003a3e 0000000b 000000a2     ....>:. ........
    1d40:	20003a49 00000000 00000008 20003a49     I:. ........I:. 
    1d50:	00000008 000000a2 20003a51 00000000     ........Q:. ....
    1d60:	00000008 20003a51 00000012 000000a2     ....Q:. ........
    1d70:	20003a63 00000000 00002808 20003a64     c:. .....(..d:. 
    1d80:	0000000b 00000082 20003a6f 00000000     ........o:. ....
    1d90:	00002808 20003a70 0000000b 00000082     .(..p:. ........
    1da0:	20003a7b 00000000 00002808 20003a7c     {:. .....(..|:. 
    1db0:	00000031 00000082 20003aad 00000011     1........:. ....
    1dc0:	000000a2 20003abe 0000000f 000000a2     .....:. ........
    1dd0:	20003acd 0000000b 000000a2 20003ad8     .:. .........:. 
    1de0:	00000015 000000a2 20003aed 00000000     .........:. ....
    1df0:	00000008 20003aed 00000006 000000a2     .....:. ........
    1e00:	20003af3 0000002b 000000a2 20003b1e     .:. +........;. 
    1e10:	00000047 000000a2 20003b65 00000006     G.......e;. ....
    1e20:	000000a2 20003b6b 00000005 000000a2     ....k;. ........
    1e30:	20003b70 0000000f 000000a2 20003b7f     p;. .........;. 
    1e40:	00000000 00000008 20003b81 0000001b     .........;. ....
    1e50:	000000a2 20003b9c 00000006 000000a2     .....;. ........
    1e60:	20003ba2 00000006 000000a2 20003ba8     .;. .........;. 
    1e70:	00000009 000000a2 20003bb1 0000001b     .........;. ....
    1e80:	000000a2 20003bcc 0000000c 000000a2     .....;. ........
    1e90:	20003bd8 00000009 000000a2 20003be1     .;. .........;. 
    1ea0:	00000017 000000a2 20003bf8 00000015     .........;. ....
    1eb0:	000000a2 20003c0d 00000015 000000a2     .....<. ........
    1ec0:	20003c22 00000016 000000a2 20003c38     "<. ........8<. 
    1ed0:	00000015 000000a2 20003c4d 00000015     ........M<. ....
    1ee0:	000000a2 20003c62 00000016 000000a2     ....b<. ........
    1ef0:	20003c78 00000016 000000a2 20003c8e     x<. .........<. 
    1f00:	0000001b 000000a2 20003ca9 0000001b     .........<. ....
    1f10:	000000a2 20003cc4 00000015 000000a2     .....<. ........
    1f20:	20003cd9 00000015 000000a2 20003cee     .<. .........<. 
    1f30:	00000016 000000a2 20003d04 0000000a     .........=. ....
    1f40:	000000a2 20003d0e 00000000 00000008     .....=. ........
    1f50:	20003d11 0000000b 000000a2 20003d1c     .=. .........=. 
    1f60:	0000000d 000000a2 20003d29 00000054     ........)=. T...
    1f70:	000000a2 20003d7d 0000001b 000000a2     ....}=. ........
    1f80:	20003d98 0000001d 00000092 20003db5     .=. .........=. 
    1f90:	00000003 00000092 20003db8 00000000     .........=. ....
    1fa0:	00000008 20003db8 00000006 000000a2     .....=. ........
    1fb0:	20003dbe 00000016 000000a2 20003dd4     .=. .........=. 
    1fc0:	00000015 000000a2 20003de9 00000017     .........=. ....
    1fd0:	000000a2 20003e00 00000008 000000a2     .....>. ........
    1fe0:	20003e08 00000002 000000a2 20003e0a     .>. .........>. 
    1ff0:	00000015 000000a2 20003e1f 00000000     .........>. ....
    2000:	00000008 20003e20 00000006 000000a2     .... >. ........
    2010:	20003e26 0000003a 000000a2 20003e60     &>. :.......`>. 
    2020:	00000000 00000008 20003e61 0000000b     ........a>. ....
    2030:	000000a2 20003e6c 00000014 000000a2     ....l>. ........
    2040:	20003e80 00000000 00000008 20003e80     .>. .........>. 
    2050:	00000018 000000a2 20003e98 00000000     .........>. ....
    2060:	00000008 20003e98 00000018 000000a2     .....>. ........
    2070:	20003eb0 00000000 00000008 20003eb0     .>. .........>. 
    2080:	00000006 000000a2 20003eb6 00000000     .........>. ....
    2090:	00000008 20003eb8 00000006 000000a2     .....>. ........
    20a0:	20003ebe 00000000 00000008 20003ec0     .>. .........>. 
    20b0:	00000006 000000a2 20003ec6 00000000     .........>. ....
    20c0:	00000008 20003ec8 00000006 000000a2     .....>. ........
    20d0:	20003ece 00000000 00000008 20003ed0     .>. .........>. 
    20e0:	00000006 000000a2 20003ed6 00000000     .........>. ....
    20f0:	00000008 20003ed8 00000006 000000a2     .....>. ........
    2100:	20003ede 00000000 00000008 20003ee0     .>. .........>. 
    2110:	00000006 000000a2 20003ee6 00000000     .........>. ....
    2120:	00000008 20003ee8 00000006 000000a2     .....>. ........
    2130:	20003eee 00000000 00000008 20003ef0     .>. .........>. 
    2140:	00000018 000000a2 20003f08 00000000     .........?. ....
    2150:	00000008 20003f08 00000029 000000a2     .....?. ).......
    2160:	20003f31 00000000 00000008 20003f31     1?. ........1?. 
    2170:	00000006 000000a2 20003f37 00000000     ........7?. ....
    2180:	00000008 20003f37 00000006 000000a2     ....7?. ........
    2190:	20003f3d 00000000 00000008 20003f3d     =?. ........=?. 
    21a0:	00000006 000000a2 20003f43 00000000     ........C?. ....
    21b0:	00000008 20003f44 00000015 000000a2     ....D?. ........
    21c0:	20003f59 00000000 00000008 20003f59     Y?. ........Y?. 
    21d0:	00000018 000000a2 20003f71 00000006     ........q?. ....
    21e0:	000000a2 20003f77 00000000 00000008     ....w?. ........
    21f0:	20003f79 00000017 000000a2 20003f90     y?. .........?. 
    2200:	00000006 000000a2 20003f96 00000000     .........?. ....
    2210:	00000008 20003f98 00000012 000000a2     .....?. ........
    2220:	20003faa 00000000 00000008 20003fac     .?. .........?. 
    2230:	0000000b 000000a2 20003fb7 00000000     .........?. ....
    2240:	00000008 20003fb8 00000006 000000a2     .....?. ........
    2250:	20003fbe 00000000 00000008 20003fc0     .?. .........?. 
    2260:	00000006 000000a2 20003fc6 00000000     .........?. ....
    2270:	00000008 20003fc8 00000006 000000a2     .....?. ........
    2280:	20003fce 00000000 00000008 20003fd0     .?. .........?. 
    2290:	00000006 000000a2 20003fd6 00000000     .........?. ....
    22a0:	00000008 20003fd6 00000006 000000a2     .....?. ........
    22b0:	20003fdc 00000000 00000008 20003fdc     .?. .........?. 
    22c0:	00000006 000000a2 20003fe2 00000000     .........?. ....
    22d0:	00000008 20003fe4 00000006 000000a2     .....?. ........
    22e0:	20003fea 00000000 00000008 20003fec     .?. .........?. 
    22f0:	00000006 000000a2 20003ff2 00000000     .........?. ....
    2300:	00000008 20003ff4 00000015 000000a2     .....?. ........
    2310:	20004009 00000000 00000008 20004009     .@. .........@. 
    2320:	00000014 000000a2 2000401d 00000000     .........@. ....
    2330:	00000008 2000401d 00000029 000000a2     .....@. ).......
    2340:	20004046 00000000 00002808 20004048     F@. .....(..H@. 
    2350:	00000011 00000082 20004059 00000000     ........Y@. ....
    2360:	00002808 2000405c 00000011 00000082     .(..\@. ........
    2370:	2000406d 00000000 00000008 400a2ca4     m@. .........,.@
    2380:	000000c9 00000082 400a2d6d 00000077     ........m-.@w...
    2390:	000000a2 400a2de4 00000078 000000a2     .....-.@x.......
    23a0:	400a2e5c 00000108 000000a2 400a2f64     \..@........d/.@
    23b0:	00000000 00002808 400a2f64 0000001a     .....(..d/.@....
    23c0:	00000082 400a2f7e 00000034 000000a2     ....~/.@4.......
    23d0:	400a2fb2 00000000 00000008 400a2fb2     ./.@........./.@
    23e0:	0000000f 000000a2 400a2fc1 00000000     ........./.@....
    23f0:	00000008 400a2fc1 00000015 000000a2     ...../.@........
    2400:	400a2fd6 00000003 000000a2 400a2fd9     ./.@........./.@
    2410:	00000000 00002808 400a2fdc 0000005c     .....(.../.@\...
    2420:	00000082 400a3038 00000003 000000a2     ....80.@........
    2430:	400a303b 00000000 00000008 400a303c     ;0.@........<0.@
    2440:	0000002a 000000a2 400a3066 00000002     *.......f0.@....
    2450:	000000a2 400a3068 0000001a 000000a2     ....h0.@........
    2460:	400a3082 00000000 00000008 400a3082     .0.@.........0.@
    2470:	00000017 000000a2 400a3099 00000000     .........0.@....
    2480:	00000008 400a3099 0000001e 000000a2     .....0.@........
    2490:	400a30b7 00000000 00000008 400a30b7     .0.@.........0.@
    24a0:	000000db 000000a2 400a3192 00000000     .........1.@....
    24b0:	00000008 400a3192 00000024 000000a2     .....1.@$.......
    24c0:	400a31b6 00000000 00002808 400a31b8     .1.@.....(...1.@
    24d0:	00000068 00000082 400a3220 00000003     h....... 2.@....
    24e0:	000000a2 400a3223 00000000 00000008     ....#2.@........
    24f0:	400a3225 0000002b 000000a2 400a3250     %2.@+.......P2.@
    2500:	00000005 000000a2 400a3255 00000000     ........U2.@....
    2510:	00000008 400a3255 00000021 000000a2     ....U2.@!.......
    2520:	400a3276 00000002 000000a2 400a3278     v2.@........x2.@
    2530:	00000025 000000a2 400a329d 00000000     %........2.@....
    2540:	00000008 400a329d 0000001b 000000a2     .....2.@........
    2550:	400a32b8 00000012 000000a2 400a32ca     .2.@.........2.@
    2560:	00000000 00000008 400a32ca 0000002e     .........2.@....
    2570:	000000a2 400a32f8 00000020 000000a2     .....2.@ .......
    2580:	400a3318 00000047 000000a2 400a335f     .3.@G......._3.@
    2590:	00000000 00000008 400a3362 0000002a     ........b3.@*...
    25a0:	000000a2 400a338c 00000020 000000a2     .....3.@ .......
    25b0:	400a33ac 0000000d 000000a2 400a33b9     .3.@.........3.@
    25c0:	0000002d 000000a2 400a33e6 00000000     -........3.@....
    25d0:	00000008 400a33e8 00000021 000000a2     .....3.@!.......
    25e0:	400a3409 00000000 00000008 400a3409     .4.@.........4.@
    25f0:	00000003 000000a2 400a340c 00000018     .........4.@....
    2600:	000000a2 400a3424 00000000 00000008     ....$4.@........
    2610:	400a3424 000000e3 000000a2 400a3507     $4.@.........5.@
    2620:	00000000 00000008 400a3507 00000107     .........5.@....
    2630:	000000a2 400a360e 00000000 00000008     .....6.@........
    2640:	400a3610 00000003 000000a2 400a3613     .6.@.........6.@
    2650:	00000000 00000008 400a3614 00000003     .........6.@....
    2660:	000000a2 400a3617 00000000 00000008     .....6.@........
    2670:	400a3618 0000001c 000000a2 400a3634     .6.@........46.@
    2680:	00000000 00000008 400a3636 00000026     ........66.@&...
    2690:	000000a2 400a365c 00000003 000000a2     ....\6.@........
    26a0:	400a365f 00000000 00000008 400a3660     _6.@........`6.@
    26b0:	00000017 000000a2 400a3677 00000000     ........w6.@....
    26c0:	00002808 400a3678 000000ba 00000082     .(..x6.@........
    26d0:	400a3732 0000000d 000000a2 400a373f     27.@........?7.@
    26e0:	00000000 00000008 400a3740 00000003     ........@7.@....
    26f0:	000000a2 400a3743 00000000 00000008     ....C7.@........
    2700:	400a3745 00000037 000000a2 400a377c     E7.@7.......|7.@
    2710:	00000020 000000a2 400a379c 0000004c      ........7.@L...
    2720:	00000092 400a37e8 00000008 000000a2     .....7.@........
    2730:	400a37f0 00000000 00000008 400a37f0     .7.@.........7.@
    2740:	00000030 000000a2 400a3820 00000006     0....... 8.@....
    2750:	00000092 400a3826 00000027 000000a2     ....&8.@'.......
    2760:	400a384d 00000017 000000a2 400a3864     M8.@........d8.@
    2770:	0000005a 000000a2 400a38be 00000000     Z........8.@....
    2780:	00000008 400a38c0 00000003 000000a2     .....8.@........
    2790:	400a38c3 00000000 00000008 400a38c3     .8.@.........8.@
    27a0:	0000006a 000000a2 400a392d 00000000     j.......-9.@....
    27b0:	00000008 400a392d 0000009c 000000a2     ....-9.@........
    27c0:	400a39c9 00000000 00000008 400a39c9     .9.@.........9.@
    27d0:	00000003 000000a2 400a39cc 00000000     .........9.@....
    27e0:	00000008 400a39cc 00000003 000000a2     .....9.@........
    27f0:	400a39cf 00000000 00000008 400a39d1     .9.@.........9.@
    2800:	0000002c 000000a2 400a39fd 00000006     ,........9.@....
    2810:	00000092 400a3a03 00000006 000000a2     .....:.@........
    2820:	400a3a09 00000000 00000008 400a3a09     .:.@.........:.@
    2830:	00000098 000000a2 400a3aa1 00000000     .........:.@....
    2840:	00000008 400a3aa1 00000012 000000a2     .....:.@........
    2850:	400a3ab3 00000000 00000008 400a3ab4     .:.@.........:.@
    2860:	0000002a 000000a2 400a3ade 0000010b     *........:.@....
    2870:	000000a2 400a3be9 00000000 00000008     .....;.@........
    2880:	400a3be9 00000015 000000a2 400a3bfe     .;.@.........;.@
    2890:	00000000 00000008 400a3c00 0000004d     .........<.@M...
    28a0:	000000a2 400a3c4d 00000000 00002808     ....M<.@.....(..
    28b0:	400a3c50 000000b2 00000082 400a3d02     P<.@.........=.@
    28c0:	0000000d 000000a2 400a3d0f 00000000     .........=.@....
    28d0:	00000008 400a3d0f 00000003 000000a2     .....=.@........
    28e0:	400a3d12 00000000 00000008 400a3d14     .=.@.........=.@
    28f0:	00000046 000000a2 400a3d5a 00000022     F.......Z=.@"...
    2900:	000000a2 400a3d7c 0000004c 00000092     ....|=.@L.......
    2910:	400a3dc8 00000005 000000a2 400a3dcd     .=.@.........=.@
    2920:	00000000 00000008 400a3dcd 0000002f     .........=.@/...
    2930:	000000a2 400a3dfc 00000006 00000092     .....=.@........
    2940:	400a3e02 00000028 000000a2 400a3e2a     .>.@(.......*>.@
    2950:	00000016 000000a2 400a3e40 00000066     ........@>.@f...
    2960:	000000a2 400a3ea6 00000000 00000008     .....>.@........
    2970:	400a3ea8 00000003 000000a2 400a3eab     .>.@.........>.@
    2980:	00000000 00000008 400a3eac 00000079     .........>.@y...
    2990:	000000a2 400a3f25 00000000 00000008     ....%?.@........
    29a0:	400a3f25 000000a4 000000a2 400a3fc9     %?.@.........?.@
    29b0:	00000000 00000008 400a3fc9 00000003     .........?.@....
    29c0:	000000a2 400a3fcc 00000000 00000008     .....?.@........
    29d0:	400a3fcc 00000003 000000a2 400a3fcf     .?.@.........?.@
    29e0:	00000000 00000008 400a3fd1 0000002c     .........?.@,...
    29f0:	000000a2 400a3ffd 00000006 00000092     .....?.@........
    2a00:	400a4003 00000006 000000a2 400a4009     .@.@.........@.@
    2a10:	00000000 00000008 400a4009 00000012     .........@.@....
    2a20:	000000a2 400a401b 00000000 00000008     .....@.@........
    2a30:	400a401e 00000053 000000a2 400a4071     .@.@S.......q@.@
    2a40:	000000f0 000000a2 400a4161 00000000     ........aA.@....
    2a50:	00000008 400a4161 00000016 000000a2     ....aA.@........
    2a60:	400a4177 00000000 00002808 400a4178     wA.@.....(..xA.@
    2a70:	00000035 00000082 400a41ad 0000001b     5........A.@....
    2a80:	000000a2 400a41c8 00000003 000000a2     .....A.@........
    2a90:	400a41cb 00000000 00000008 400a41cc     .A.@.........A.@
    2aa0:	0000000b 000000a2 400a41d7 00000000     .........A.@....
    2ab0:	00000008 400a41d8 00000010 00000082     .....A.@........
    2ac0:	400a41e8 00000000 00000008 400a41e8     .A.@.........A.@
    2ad0:	0000000e 000000a2 400a41f6 00000000     .........A.@....
    2ae0:	00002808 400a41f8 00000014 00000082     .(...A.@........
    2af0:	400a420c 00000025 000000a2 400a4231     .B.@%.......1B.@
    2b00:	00000003 000000a2 400a4234 00000000     ........4B.@....
    2b10:	00000008 400a4234 00000018 000000a2     ....4B.@........
    2b20:	400a424c 00000000 00000008 400a424c     LB.@........LB.@
    2b30:	00000018 000000a2 400a4264 00000000     ........dB.@....
    2b40:	00000008 400a4264 00000018 00000082     ....dB.@........
    2b50:	400a427c 00000000 00000008 400a427c     |B.@........|B.@
    2b60:	00000018 000000a2 400a4294 00000000     .........B.@....
    2b70:	00000008 400a0000 00000004 00000104     .......@........
    2b80:	400a0010 00000000 00004904 400a2924     ...@.....I..$).@
    2b90:	00000140 00000001 2000b3fc 00000004     @.......... ....
    2ba0:	00000001 20000904 000000b4 00000001     ....... ........
    2bb0:	20004070 00000063 00000082 200040d3     p@. c........@. 
    2bc0:	0000004f 000000a2 20004122 00000000     O......."A. ....
    2bd0:	00000008 20004124 00000011 000000a2     ....$A. ........
    2be0:	20004135 00000000 00000008 20004135     5A. ........5A. 
    2bf0:	00000042 000000a2 20004177 00000000     B.......wA. ....
    2c00:	00000008 20004179 00000019 000000a2     ....yA. ........
    2c10:	20004192 00000000 00002808 20004194     .A. .....(...A. 
    2c20:	00000014 00000082 200041a8 00000000     .........A. ....
    2c30:	00002808 200041a8 00000010 00000082     .(...A. ........
    2c40:	200041b8 00000000 00002808 200041b8     .A. .....(...A. 
    2c50:	00000021 00000082 200041d9 00000000     !........A. ....
    2c60:	00002808 200041dc 0000004f 00000082     .(...A. O.......
    2c70:	2000422b 00000000 00000008 2000422c     +B. ........,B. 
    2c80:	00000007 000000a2 20004233 00000000     ........3B. ....
    2c90:	00002808 20004234 0000002b 00000082     .(..4B. +.......
    2ca0:	2000425f 00000003 00000092 20004262     _B. ........bB. 
    2cb0:	00000000 00000008 20004264 00000022     ........dB. "...
    2cc0:	000000a2 20004286 00000003 000000a2     .....B. ........
    2cd0:	20004289 00000015 000000a2 2000429e     .B. .........B. 
    2ce0:	00000000 00000008 200042a0 00000006     .........B. ....
    2cf0:	000000a2 200042a6 00000032 000000a2     .....B. 2.......
    2d00:	200042d8 00000000 00002808 200042d8     .B. .....(...B. 
    2d10:	0000005c 00000082 20004334 0000000b     \.......4C. ....
    2d20:	000000a2 2000433f 00000011 000000a2     ....?C. ........
    2d30:	20004350 00000008 000000a2 20004358     PC. ........XC. 
    2d40:	00000009 000000a2 20004361 00000000     ........aC. ....
    2d50:	00000008 20004361 00000003 000000a2     ....aC. ........
    2d60:	20004364 00000000 00000008 20004364     dC. ........dC. 
    2d70:	00000003 000000a2 20004367 00000000     ........gC. ....
    2d80:	00000008 20004368 00000003 000000a2     ....hC. ........
    2d90:	2000436b 00000000 00002808 2000436c     kC. .....(..lC. 
    2da0:	00000011 00000082 2000437d 00000000     ........}C. ....
    2db0:	00002808 20004380 00000020 00000082     .(...C.  .......
    2dc0:	200043a0 0000001b 000000a2 200043bb     .C. .........C. 
    2dd0:	00000000 00000008 200043bd 00000011     .........C. ....
    2de0:	000000a2 200043ce 00000003 00000008     .....C. ........
    2df0:	200043d1 0000000f 000000a2 200043e0     .C. .........C. 
    2e00:	00000000 00000008 200043e0 00000023     .........C. #...
    2e10:	000000a2 20004403 00000000 00000008     .....D. ........
    2e20:	20004405 00000011 000000a2 20004416     .D. .........D. 
    2e30:	00000000 00002808 20004418 00000030     .....(...D. 0...
    2e40:	00000082 20004448 0000000b 000000a2     ....HD. ........
    2e50:	20004453 00000011 000000a2 20004464     SD. ........dD. 
    2e60:	00000008 000000a2 2000446c 00000009     ........lD. ....
    2e70:	000000a2 20004475 00000000 00000008     ....uD. ........
    2e80:	20004475 00000003 000000a2 20004478     uD. ........xD. 
    2e90:	00000000 00000008 20004478 00000003     ........xD. ....
    2ea0:	000000a2 2000447b 00000000 00000008     ....{D. ........
    2eb0:	2000447c 00000003 000000a2 2000447f     |D. .........D. 
    2ec0:	00000000 00002808 20004480 00000020     .....(...D.  ...
    2ed0:	00000082 200044a0 00000000 00002808     .....D. .....(..
    2ee0:	200044a0 00000012 00000082 200044b2     .D. .........D. 
    2ef0:	00000000 00002808 200044b4 00000020     .....(...D.  ...
    2f00:	00000082 200044d4 00000000 00002808     .....D. .....(..
    2f10:	200044d4 00000033 00000082 20004507     .D. 3........E. 
    2f20:	0000001a 000000a2 20004521 00000000     ........!E. ....
    2f30:	00000008 20004521 00000025 000000a2     ....!E. %.......
    2f40:	20004546 00000000 00000008 20004546     FE. ........FE. 
    2f50:	0000002c 000000a2 20004572 00000005     ,.......rE. ....
    2f60:	000000a2 20004577 0000001a 000000a2     ....wE. ........
    2f70:	20004591 00000000 00000008 20004591     .E. .........E. 
    2f80:	0000000c 000000a2 2000459d 00000000     .........E. ....
    2f90:	00000008 2000459d 00000025 000000a2     .....E. %.......
    2fa0:	200045c2 00000000 00000008 200045c4     .E. .........E. 
    2fb0:	0000000e 000000a2 200045d2 00000000     .........E. ....
    2fc0:	00000008 200045d2 00000005 000000a2     .....E. ........
    2fd0:	200045d7 00000000 00002808 200045d8     .E. .....(...E. 
    2fe0:	0000000a 00000082 200045e2 00000000     .........E. ....
    2ff0:	00002808 200045e4 00000014 00000082     .(...E. ........
    3000:	200045f8 00000000 00002808 200045f8     .E. .....(...E. 
    3010:	00000020 00000082 20004618 00000018      ........F. ....
    3020:	00000092 20004630 00000009 00000092     ....0F. ........
    3030:	20004639 00000000 00002808 2000463c     9F. .....(..<F. 
    3040:	00000009 00000082 20004645 00000003     ........EF. ....
    3050:	000000a2 20004648 00000000 00000008     ....HF. ........
    3060:	20004648 00000066 00000082 200046ae     HF. f........F. 
    3070:	00000000 00000008 200046b0 00000011     .........F. ....
    3080:	000000a2 200046c1 00000000 00002808     .....F. .....(..
    3090:	200046c4 00000029 00000082 200046ed     .F. )........F. 
    30a0:	00000000 00002808 200046f0 0000001f     .....(...F. ....
    30b0:	00000082 2000470f 00000000 00002808     .....G. .....(..
    30c0:	20004710 00000027 00000082 20004737     .G. '.......7G. 
    30d0:	00000004 00000092 2000473b 00000000     ........;G. ....
    30e0:	00000008 2000473c 00000003 000000a2     ....<G. ........
    30f0:	2000473f 00000000 00000008 20004740     ?G. ........@G. 
    3100:	00000003 000000a2 20004743 00000000     ........CG. ....
    3110:	00000008 20004744 00000006 000000a2     ....DG. ........
    3120:	2000474a 00000000 00002808 2000474c     JG. .....(..LG. 
    3130:	00000052 00000082 2000479e 00000004     R........G. ....
    3140:	00000092 200047a2 00000000 00000008     .....G. ........
    3150:	200047a2 00000003 000000a2 200047a5     .G. .........G. 
    3160:	00000000 00000008 200047a5 00000003     .........G. ....
    3170:	000000a2 200047a8 00000000 00000008     .....G. ........
    3180:	200047a8 00000003 000000a2 200047ab     .G. .........G. 
    3190:	00000000 00000008 200047ac 00000003     .........G. ....
    31a0:	000000a2 200047af 00000000 00000008     .....G. ........
    31b0:	200047b0 00000003 000000a2 200047b3     .G. .........G. 
    31c0:	00000000 00000008 200047b4 00000007     .........G. ....
    31d0:	000000a2 200047bb 00000000 00000008     .....G. ........
    31e0:	200047bc 00000007 000000a2 200047c3     .G. .........G. 
    31f0:	00000000 00002808 200047c4 00000003     .....(...G. ....
    3200:	00000082 200047c7 00000003 000000a2     .....G. ........
    3210:	200047ca 00000000 00000008 200047cc     .G. .........G. 
    3220:	0000008e 000000a2 2000485a 00000000     ........ZH. ....
    3230:	00002808 2000485c 00000031 00000082     .(..\H. 1.......
    3240:	2000488d 00000000 00000008 2000488d     .H. .........H. 
    3250:	00000003 000000a2 20004890 00000000     .........H. ....
    3260:	00000008 20004890 00000003 000000a2     .....H. ........
    3270:	20004893 00000000 00000008 20004894     .H. .........H. 
    3280:	00000003 000000a2 20004897 00000000     .........H. ....
    3290:	00002808 20004898 0000006a 00000082     .(...H. j.......
    32a0:	20004902 00000000 00000008 20004904     .I. .........I. 
    32b0:	00000003 000000a2 20004907 00000000     .........I. ....
    32c0:	00000008 20004908 00000003 000000a2     .....I. ........
    32d0:	2000490b 00000000 00000008 2000490c     .I. .........I. 
    32e0:	00000003 000000a2 2000490f 00000000     .........I. ....
    32f0:	00002808 20004910 00000003 00000082     .(...I. ........
    3300:	20004913 00000003 000000a2 20004916     .I. .........I. 
    3310:	00000000 00000008 20004918 00000021     .........I. !...
    3320:	000000a2 20004939 00000000 00002808     ....9I. .....(..
    3330:	2000493c 0000001a 00000082 20004956     <I. ........VI. 
    3340:	00000000 00000008 20004956 00000048     ........VI. H...
    3350:	000000a2 2000499e 0000004c 000000a2     .....I. L.......
    3360:	200049ea 00000002 000000a2 200049ec     .I. .........I. 
    3370:	00000062 000000a2 20004a4e 0000002a     b.......NJ. *...
    3380:	000000a2 20004a78 00000000 00000008     ....xJ. ........
    3390:	20004a78 00000003 000000a2 20004a7b     xJ. ........{J. 
    33a0:	00000000 00000008 20004a7b 00000012     ........{J. ....
    33b0:	000000a2 20004a8d 00000000 00000008     .....J. ........
    33c0:	20004a8d 00000012 000000a2 20004a9f     .J. .........J. 
    33d0:	00000000 00000008 20004aa0 00000012     .........J. ....
    33e0:	000000a2 20004ab2 00000000 00000008     .....J. ........
    33f0:	20004ab2 0000000f 000000a2 20004ac1     .J. .........J. 
    3400:	00000000 00000008 20004ac1 0000002e     .........J. ....
    3410:	000000a2 20004aef 00000000 00002808     .....J. .....(..
    3420:	20004af0 00000037 00000082 20004b27     .J. 7.......'K. 
    3430:	00000000 00000008 20004b28 00000003     ........(K. ....
    3440:	000000a2 20004b2b 00000000 00000008     ....+K. ........
    3450:	20004b2c 00000003 000000a2 20004b2f     ,K. ......../K. 
    3460:	00000000 00002808 20004b30 00000033     .....(..0K. 3...
    3470:	00000082 20004b63 00000000 00000008     ....cK. ........
    3480:	20004b64 00000003 000000a2 20004b67     dK. ........gK. 
    3490:	00000000 00000008 20004b68 00000003     ........hK. ....
    34a0:	000000a2 20004b6b 00000000 00002808     ....kK. .....(..
    34b0:	20004b6c 00000065 00000082 20004bd1     lK. e........K. 
    34c0:	00000093 000000a2 20004c64 00000049     ........dL. I...
    34d0:	000000a2 20004cad 00000000 00000008     .....L. ........
    34e0:	20004cad 00000003 000000a2 20004cb0     .L. .........L. 
    34f0:	00000000 00000008 20004cb0 00000003     .........L. ....
    3500:	000000a2 20004cb3 00000000 00000008     .....L. ........
    3510:	20004cb4 00000003 000000a2 20004cb7     .L. .........L. 
    3520:	00000000 00000008 20004cb8 00000003     .........L. ....
    3530:	000000a2 20004cbb 00000000 00002808     .....L. .....(..
    3540:	20004cbc 00000009 00000082 20004cc5     .L. .........L. 
    3550:	00000003 000000a2 20004cc8 00000000     .........L. ....
    3560:	00000008 20004cc8 00000020 00000082     .....L.  .......
    3570:	20004ce8 00000003 000000a2 20004ceb     .L. .........L. 
    3580:	00000000 00000008 20004cec 00000036     .........L. 6...
    3590:	00000082 20004d22 00000000 00000008     ...."M. ........
    35a0:	20004d24 00000011 000000a2 20004d35     $M. ........5M. 
    35b0:	00000000 00002808 20004d38 00000015     .....(..8M. ....
    35c0:	00000082 20004d4d 00000003 000000a2     ....MM. ........
    35d0:	20004d50 00000020 000000a2 20004d70     PM.  .......pM. 
    35e0:	00000003 000000a2 20004d73 00000000     ........sM. ....
    35f0:	00000008 20004d74 00000005 000000a2     ....tM. ........
    3600:	20004d79 00000000 00000008 20004d79     yM. ........yM. 
    3610:	00000012 000000a2 20004d8b 00000000     .........M. ....
    3620:	00000008 20004d8c 0000000e 000000a2     .....M. ........
    3630:	20004d9a 00000000 00000008 20004d9a     .M. .........M. 
    3640:	00000002 000000a2 20004d9c 00000000     .........M. ....
    3650:	00000008 20004d9c 0000000d 000000a2     .....M. ........
    3660:	20004da9 00000000 00000008 20004da9     .M. .........M. 
    3670:	00000003 000000a2 20004dac 00000000     .........M. ....
    3680:	00002808 20004dac 00000020 00000082     .(...M.  .......
    3690:	20004dcc 00000035 000000a2 20004e01     .M. 5........N. 
    36a0:	00000000 00000008 20004e01 00000003     .........N. ....
    36b0:	000000a2 20004e04 00000000 00000008     .....N. ........
    36c0:	20004e04 00000003 000000a2 20004e07     .N. .........N. 
    36d0:	00000000 00000008 20004e08 00000003     .........N. ....
    36e0:	000000a2 20004e0b 00000000 00000008     .....N. ........
    36f0:	20004e0c 00000021 00000082 20004e2d     .N. !.......-N. 
    3700:	00000000 00000008 20004e2d 00000003     ........-N. ....
    3710:	000000a2 20004e30 00000000 00000008     ....0N. ........
    3720:	20004e30 00000027 000000a2 20004e57     0N. '.......WN. 
    3730:	00000000 00002808 20004e58 00000040     .....(..XN. @...
    3740:	00000082 20004e98 00000000 00000008     .....N. ........
    3750:	20004e98 0000000f 000000a2 20004ea7     .N. .........N. 
    3760:	00000000 00000008 20004ea8 0000001d     .........N. ....
    3770:	000000a2 20004ec5 00000000 00000008     .....N. ........
    3780:	20004ec5 0000001d 000000a2 20004ee2     .N. .........N. 
    3790:	00000000 00000008 20004ee2 0000001d     .........N. ....
    37a0:	000000a2 20004eff 00000000 00002808     .....N. .....(..
    37b0:	20004f00 0000000e 00000082 20004f0e     .O. .........O. 
    37c0:	00000000 00002808 20004f10 00000009     .....(...O. ....
    37d0:	00000082 20004f19 00000003 000000a2     .....O. ........
    37e0:	20004f1c 00000000 00000008 20004f1c     .O. .........O. 
    37f0:	00000057 00000082 20004f73 00000000     W.......sO. ....
    3800:	00000008 20004f74 00000011 000000a2     ....tO. ........
    3810:	20004f85 00000000 00002808 20004f88     .O. .....(...O. 
    3820:	00000014 00000082 20004f9c 00000000     .........O. ....
    3830:	00002808 20004f9c 00000003 00000082     .(...O. ........
    3840:	20004f9f 00000003 000000a2 20004fa2     .O. .........O. 
    3850:	00000000 00000008 20004fa4 0000001c     .........O. ....
    3860:	000000a2 20004fc0 00000000 00002808     .....O. .....(..
    3870:	20004fc0 00000014 00000082 20004fd4     .O. .........O. 
    3880:	00000000 00002808 20004fd4 0000004d     .....(...O. M...
    3890:	00000082 20005021 00000000 00000008     ....!P. ........
    38a0:	20005021 0000001c 000000a2 2000503d     !P. ........=P. 
    38b0:	00000000 00000008 2000503d 0000007c     ........=P. |...
    38c0:	000000a2 200050b9 00000004 00000092     .....P. ........
    38d0:	200050bd 0000000f 000000a2 200050cc     .P. .........P. 
    38e0:	00000003 000000a2 200050cf 00000000     .........P. ....
    38f0:	00000008 200050d0 00000012 000000a2     .....P. ........
    3900:	200050e2 00000000 00000008 200050e4     .P. .........P. 
    3910:	0000001c 000000a2 20005100 00000003     .........Q. ....
    3920:	000000a2 20005103 00000000 00000008     .....Q. ........
    3930:	20005106 00000040 000000a2 20005146     .Q. @.......FQ. 
    3940:	00000050 000000a2 20005196 00000002     P........Q. ....
    3950:	000000a2 20005198 0000005d 000000a2     .....Q. ].......
    3960:	200051f5 0000002e 000000a2 20005223     .Q. ........#R. 
    3970:	00000000 00000008 20005224 00000003     ........$R. ....
    3980:	000000a2 20005227 00000000 00000008     ....'R. ........
    3990:	20005228 00000015 000000a2 2000523d     (R. ........=R. 
    39a0:	00000000 00000008 2000523d 00000015     ........=R. ....
    39b0:	000000a2 20005252 00000000 00000008     ....RR. ........
    39c0:	20005254 00000015 000000a2 20005269     TR. ........iR. 
    39d0:	00000000 00000008 20005269 0000000f     ........iR. ....
    39e0:	000000a2 20005278 00000000 00000008     ....xR. ........
    39f0:	20005278 00000035 000000a2 200052ad     xR. 5........R. 
    3a00:	00000000 00002808 200052b0 00000034     .....(...R. 4...
    3a10:	00000082 200052e4 00000013 00000092     .....R. ........
    3a20:	200052f7 0000001c 00000092 20005313     .R. .........S. 
    3a30:	00000000 00000008 20005314 00000003     .........S. ....
    3a40:	000000a2 20005317 00000000 00002808     .....S. .....(..
    3a50:	20005318 00000090 00000082 200053a8     .S. .........S. 
    3a60:	00000010 00000092 200053b8 00000025     .........S. %...
    3a70:	00000092 200053dd 00000000 00000008     .....S. ........
    3a80:	200053dd 00000003 000000a2 200053e0     .S. .........S. 
    3a90:	00000000 00000008 200053e0 00000003     .........S. ....
    3aa0:	000000a2 200053e3 00000000 00000008     .....S. ........
    3ab0:	200053e4 00000003 000000a2 200053e7     .S. .........S. 
    3ac0:	00000000 00000008 200053e8 00000003     .........S. ....
    3ad0:	000000a2 200053eb 00000000 00002808     .....S. .....(..
    3ae0:	200053ec 00000031 00000082 2000541d     .S. 1........T. 
    3af0:	00000000 00000008 2000541d 00000034     .........T. 4...
    3b00:	000000a2 20005451 00000023 000000a2     ....QT. #.......
    3b10:	20005474 00000006 000000a2 2000547a     tT. ........zT. 
    3b20:	0000003a 000000a2 200054b4 00000000     :........T. ....
    3b30:	00000008 200054b5 00000017 000000a2     .....T. ........
    3b40:	200054cc 00000029 000000a2 200054f5     .T. )........T. 
    3b50:	00000000 00000008 200054f5 00000009     .........T. ....
    3b60:	000000a2 200054fe 00000000 00000008     .....T. ........
    3b70:	20005500 00000003 000000a2 20005503     .U. .........U. 
    3b80:	00000000 00000008 20005503 00000019     .........U. ....
    3b90:	000000a2 2000551c 0000002c 000000a2     .....U. ,.......
    3ba0:	20005548 00000010 000000a2 20005558     HU. ........XU. 
    3bb0:	00000000 00000008 2000555a 0000007a     ........ZU. z...
    3bc0:	000000a2 200055d4 00000000 00000008     .....U. ........
    3bd0:	200055d5 0000003e 000000a2 20005613     .U. >........V. 
    3be0:	00000000 00000008 20005615 0000003b     .........V. ;...
    3bf0:	000000a2 20005650 00000000 00000008     ....PV. ........
    3c00:	20005651 0000002f 000000a2 20005680     QV. /........V. 
    3c10:	00000000 00002808 20005680 00000028     .....(...V. (...
    3c20:	00000082 200056a8 00000000 00000008     .....V. ........
    3c30:	200056a8 00000013 000000a2 200056bb     .V. .........V. 
    3c40:	00000000 00000008 200056bc 00000009     .........V. ....
    3c50:	000000a2 200056c5 00000000 00000008     .....V. ........
    3c60:	200056c5 00000013 000000a2 200056d8     .V. .........V. 
    3c70:	00000000 00000008 200056d8 0000001f     .........V. ....
    3c80:	000000a2 200056f7 00000000 00000008     .....V. ........
    3c90:	200056f9 00000003 000000a2 200056fc     .V. .........V. 
    3ca0:	00000009 000000a2 20005705 00000000     .........W. ....
    3cb0:	00000008 20005705 00000009 000000a2     .....W. ........
    3cc0:	2000570e 00000000 00000008 20005711     .W. .........W. 
    3cd0:	00000080 000000a2 20005791 00000010     .........W. ....
    3ce0:	00000092 200057a1 00000000 00000008     .....W. ........
    3cf0:	200057a1 00000014 000000a2 200057b5     .W. .........W. 
    3d00:	00000000 00000008 200057b5 00000009     .........W. ....
    3d10:	000000a2 200057be 00000000 00000008     .....W. ........
    3d20:	200057c0 00000014 000000a2 200057d4     .W. .........W. 
    3d30:	00000000 00000008 200057d4 00000018     .........W. ....
    3d40:	000000a2 200057ec 00000000 00002808     .....W. .....(..
    3d50:	200057ec 00000050 00000082 2000583c     .W. P.......<X. 
    3d60:	0000003d 000000a2 20005879 00000000     =.......yX. ....
    3d70:	00000008 20005879 00000011 000000a2     ....yX. ........
    3d80:	2000588a 00000030 000000a2 200058ba     .X. 0........X. 
    3d90:	00000000 00000008 200058ba 00000002     .........X. ....
    3da0:	000000a2 200058bc 00000009 000000a2     .....X. ........
    3db0:	200058c5 0000005a 000000a2 2000591f     .X. Z........Y. 
    3dc0:	00000000 00000008 20005922 0000002b     ........"Y. +...
    3dd0:	000000a2 2000594d 00000000 00000008     ....MY. ........
    3de0:	2000594d 00000012 000000a2 2000595f     MY. ........_Y. 
    3df0:	00000000 00002808 20005960 0000001a     .....(..`Y. ....
    3e00:	00000082 2000597a 00000000 00002808     ....zY. .....(..
    3e10:	2000597c 00000055 00000082 200059d1     |Y. U........Y. 
    3e20:	00000003 00000092 200059d4 00000000     .........Y. ....
    3e30:	00000008 200059d6 0000001b 000000a2     .....Y. ........
    3e40:	200059f1 00000030 000000a2 20005a21     .Y. 0.......!Z. 
    3e50:	00000003 00000092 20005a24 00000000     ........$Z. ....
    3e60:	00000008 20005a26 0000000c 000000a2     ....&Z. ........
    3e70:	20005a32 00000022 000000a2 20005a54     2Z. ".......TZ. 
    3e80:	00000000 00000008 20005a54 00000004     ........TZ. ....
    3e90:	000000a2 20005a58 00000049 000000a2     ....XZ. I.......
    3ea0:	20005aa1 00000003 00000092 20005aa4     .Z. .........Z. 
    3eb0:	00000000 00000008 20005aa6 00000037     .........Z. 7...
    3ec0:	000000a2 20005add 00000003 00000092     .....Z. ........
    3ed0:	20005ae0 00000000 00000008 20005ae0     .Z. .........Z. 
    3ee0:	00000020 000000a2 20005b00 0000000e      ........[. ....
    3ef0:	000000a2 20005b0e 00000003 00000092     .....[. ........
    3f00:	20005b11 00000000 00000008 20005b11     .[. .........[. 
    3f10:	0000001c 000000a2 20005b2d 00000024     ........-[. $...
    3f20:	000000a2 20005b51 00000003 00000092     ....Q[. ........
    3f30:	20005b54 00000000 00000008 20005b56     T[. ........V[. 
    3f40:	00000026 000000a2 20005b7c 0000002d     &.......|[. -...
    3f50:	000000a2 20005ba9 00000000 00000008     .....[. ........
    3f60:	20005ba9 0000001e 000000a2 20005bc7     .[. .........[. 
    3f70:	00000000 00000008 20005bc9 0000000b     .........[. ....
    3f80:	000000a2 20005bd4 00000000 00000008     .....[. ........
    3f90:	20005bd4 00000026 000000a2 20005bfa     .[. &........[. 
    3fa0:	00000000 00000008 20005bfa 0000000d     .........[. ....
    3fb0:	000000a2 20005c07 00000000 00002808     .....\. .....(..
    3fc0:	20005c08 00000045 00000082 20005c4d     .\. E.......M\. 
    3fd0:	00000003 00000092 20005c50 00000000     ........P\. ....
    3fe0:	00000008 20005c50 0000002d 000000a2     ....P\. -.......
    3ff0:	20005c7d 00000003 00000092 20005c80     }\. .........\. 
    4000:	00000000 00000008 20005c82 0000002a     .........\. *...
    4010:	000000a2 20005cac 00000003 00000092     .....\. ........
    4020:	20005caf 00000000 00000008 20005cb0     .\. .........\. 
    4030:	00000008 000000a2 20005cb8 00000020     .........\.  ...
    4040:	000000a2 20005cd8 00000003 00000092     .....\. ........
    4050:	20005cdb 00000000 00000008 20005cdb     .\. .........\. 
    4060:	00000015 000000a2 20005cf0 00000000     .........\. ....
    4070:	00000008 20005cf0 0000000d 000000a2     .....\. ........
    4080:	20005cfd 00000000 00000008 20005cfd     .\. .........\. 
    4090:	00000021 000000a2 20005d1e 00000000     !........]. ....
    40a0:	00000008 400a4294 0000003c 00000082     .....B.@<.......
    40b0:	400a42d0 000000a1 000000a2 400a4371     .B.@........qC.@
    40c0:	00000000 00000008 400a4371 00000015     ........qC.@....
    40d0:	000000a2 400a4386 00000003 000000a2     .....C.@........
    40e0:	400a4389 00000000 00002808 400a438c     .C.@.....(...C.@
    40f0:	00000016 00000082 400a43a2 00000000     .........C.@....
    4100:	00002808 400a43a4 00000021 00000082     .(...C.@!.......
    4110:	400a43c5 00000000 00002808 400a43c8     .C.@.....(...C.@
    4120:	000000aa 00000082 400a4472 00000003     ........rD.@....
    4130:	000000a2 400a4475 00000000 00000008     ....uD.@........
    4140:	400a4475 0000000d 000000a2 400a4482     uD.@.........D.@
    4150:	00000000 00000008 400a4482 00000017     .........D.@....
    4160:	000000a2 400a4499 00000003 000000a2     .....D.@........
    4170:	400a449c 00000000 00002808 400a449c     .D.@.....(...D.@
    4180:	00000058 00000082 400a44f4 00000000     X........D.@....
    4190:	00000008 400a44f4 00000002 000000a2     .....D.@........
    41a0:	400a44f6 00000000 00002808 400a44f8     .D.@.....(...D.@
    41b0:	0000001d 00000082 400a4515 00000003     .........E.@....
    41c0:	000000a2 400a4518 00000008 000000a2     .....E.@........
    41d0:	400a4520 00000003 000000a2 400a4523      E.@........#E.@
    41e0:	0000000e 000000a2 400a4531 00000012     ........1E.@....
    41f0:	000000a2 400a4543 00000000 00000008     ....CE.@........
    4200:	400a4544 00000005 000000a2 400a4549     DE.@........IE.@
    4210:	00000009 000000a2 400a4552 00000000     ........RE.@....
    4220:	00000008 400a4552 00000009 00000082     ....RE.@........
    4230:	400a455b 00000000 00000008 400a455c     [E.@........\E.@
    4240:	00000008 000000a2 400a4564 00000000     ........dE.@....
    4250:	00000008 400a4564 00000009 000000a2     ....dE.@........
    4260:	400a456d 00000000 00000008 400a456d     mE.@........mE.@
    4270:	0000000e 000000a2 400a457b 00000000     ........{E.@....
    4280:	00002808 400a457c 00000045 00000082     .(..|E.@E.......
    4290:	400a45c1 00000017 000000a2 400a45d8     .E.@.........E.@
    42a0:	00000003 000000a2 400a45db 00000000     .........E.@....
    42b0:	00000008 400a45de 00000074 000000a2     .....E.@t.......
    42c0:	400a4652 00000003 000000a2 400a4655     RF.@........UF.@
    42d0:	00000000 00000008 400a4655 00000027     ........UF.@'...
    42e0:	000000a2 400a467c 00000003 000000a2     ....|F.@........
    42f0:	400a467f 00000000 00000008 400a4680     .F.@.........F.@
    4300:	0000000d 000000a2 400a468d 00000000     .........F.@....
    4310:	00002808 400a4690 00000020 00000082     .(...F.@ .......
    4320:	400a46b0 00000000 00000008 400a46b0     .F.@.........F.@
    4330:	00000005 000000a2 400a46b5 00000000     .........F.@....
    4340:	00000008 400a46b5 00000005 000000a2     .....F.@........
    4350:	400a46ba 00000000 00002808 400a46bc     .F.@.....(...F.@
    4360:	0000002c 00000082 400a46e8 00000003     ,........F.@....
    4370:	000000a2 400a46eb 00000000 00000008     .....F.@........
    4380:	400a46ec 00000009 000000a2 400a46f5     .F.@.........F.@
    4390:	00000000 00002808 400a46f8 00000010     .....(...F.@....
    43a0:	00000082 400a4708 0000002a 000000a2     .....G.@*.......
    43b0:	400a4732 00000000 00000008 400a4734     2G.@........4G.@
    43c0:	00000017 000000a2 400a474b 00000000     ........KG.@....
    43d0:	00002808 400a474c 00000017 00000082     .(..LG.@........
    43e0:	400a4763 00000000 00002808 400a4764     cG.@.....(..dG.@
    43f0:	000000a0 00000082 400a4804 00000003     .........H.@....
    4400:	000000a2 400a4807 00000000 00000008     .....H.@........
    4410:	400a4808 00000030 000000a2 400a4838     .H.@0.......8H.@
    4420:	00000000 00000008 400a4838 00000046     ........8H.@F...
    4430:	000000a2 400a487e 00000008 000000a2     ....~H.@........
    4440:	400a4886 0000000b 000000a2 400a4891     .H.@.........H.@
    4450:	00000038 000000a2 400a48c9 0000000e     8........H.@....
    4460:	000000a2 400a48d7 00000000 00000008     .....H.@........
    4470:	400a48d8 00000018 000000a2 400a48f0     .H.@.........H.@
    4480:	00000000 00000008 400a48f0 0000000d     .........H.@....
    4490:	000000a2 400a48fd 0000000c 000000a2     .....H.@........
    44a0:	400a4909 00000045 000000a2 400a494e     .I.@E.......NI.@
    44b0:	00000000 00000008 400a494e 00000048     ........NI.@H...
    44c0:	000000a2 400a4996 00000060 000000a2     .....I.@`.......
    44d0:	400a49f6 00000000 00000008 400a49f6     .I.@.........I.@
    44e0:	00000048 000000a2 400a4a3e 00000064     H.......>J.@d...
    44f0:	000000a2 400a4aa2 00000000 00000008     .....J.@........
    4500:	400a4aa2 00000011 000000a2 400a4ab3     .J.@.........J.@
    4510:	00000000 00000008 400a4ab5 00000056     .........J.@V...
    4520:	000000a2 400a4b0b 00000000 00000008     .....K.@........
    4530:	400a4b0c 00000008 000000a2 400a4b14     .K.@.........K.@
    4540:	00000000 00000008 400a4b14 00000008     .........K.@....
    4550:	000000a2 400a4b1c 00000000 00002808     .....K.@.....(..
    4560:	400a4b1c 0000006c 00000082 400a4b88     .K.@l........K.@
    4570:	00000014 000000a2 400a4b9c 00000036     .........K.@6...
    4580:	000000a2 400a4bd2 00000000 00000008     .....K.@........
    4590:	400a4bd4 0000001f 000000a2 400a4bf3     .K.@.........K.@
    45a0:	00000000 00000008 400a4bf4 0000008c     .........K.@....
    45b0:	000000a2 400a4c80 00000003 000000a2     .....L.@........
    45c0:	400a4c83 00000000 00000008 400a4c85     .L.@.........L.@
    45d0:	0000004b 000000a2 400a4cd0 00000000     K........L.@....
    45e0:	00002808 400a4cd0 000000b4 00000082     .(...L.@........
    45f0:	400a4d84 00000048 000000a2 400a4dcc     .M.@H........M.@
    4600:	00000013 000000a2 400a4ddf 00000000     .........M.@....
    4610:	00000008 400a4de1 00000021 000000a2     .....M.@!.......
    4620:	400a4e02 00000008 000000a2 400a4e0a     .N.@.........N.@
    4630:	00000019 000000a2 400a4e23 00000000     ........#N.@....
    4640:	00000008 400a4e25 00000098 000000a2     ....%N.@........
    4650:	400a4ebd 000000a1 000000a2 400a4f5e     .N.@........^O.@
    4660:	00000000 00002808 400a4f60 00000018     .....(..`O.@....
    4670:	00000082 400a4f78 00000025 000000a2     ....xO.@%.......
    4680:	400a4f9d 00000003 000000a2 400a4fa0     .O.@.........O.@
    4690:	00000000 00000008 400a4fa1 00000009     .........O.@....
    46a0:	00000082 400a4faa 00000032 000000a2     .....O.@2.......
    46b0:	400a4fdc 00000000 00000008 400a4fdc     .O.@.........O.@
    46c0:	0000000c 000000a2 400a4fe8 00000000     .........O.@....
    46d0:	00000008 400a4fe8 0000000c 000000a2     .....O.@........
    46e0:	400a4ff4 00000000 00002808 400a4ff4     .O.@.....(...O.@
    46f0:	0000002b 00000082 400a501f 00000000     +........P.@....
    4700:	00000008 400a5020 00000002 000000a2     .... P.@........
    4710:	400a5022 00000000 00000008 400a5022     "P.@........"P.@
    4720:	0000000c 000000a2 400a502e 00000000     .........P.@....
    4730:	00000008 400a5030 00000008 000000a2     ....0P.@........
    4740:	400a5038 00000000 00000008 400a5038     8P.@........8P.@
    4750:	00000005 000000a2 400a503d 00000000     ........=P.@....
    4760:	00002808 400a5040 00000032 00000082     .(..@P.@2.......
    4770:	400a5072 00000017 000000a2 400a5089     rP.@.........P.@
    4780:	00000000 00000008 400a508a 0000004e     .........P.@N...
    4790:	000000a2 400a50d8 00000006 000000a2     .....P.@........
    47a0:	400a50de 00000000 00000008 400a50de     .P.@.........P.@
    47b0:	00000048 000000a2 400a5126 00000024     H.......&Q.@$...
    47c0:	000000a2 400a514a 00000003 000000a2     ....JQ.@........
    47d0:	400a514d 00000000 00000008 400a514d     MQ.@........MQ.@
    47e0:	0000000f 000000a2 400a515c 00000000     ........\Q.@....
    47f0:	00002808 400a515c 0000000d 00000082     .(..\Q.@........
    4800:	400a5169 00000009 000000a2 400a5172     iQ.@........rQ.@
    4810:	00000015 000000a2 400a5187 00000003     .........Q.@....
    4820:	000000a2 400a518a 00000000 00000008     .....Q.@........
    4830:	400a518a 00000018 000000a2 400a51a2     .Q.@.........Q.@
    4840:	00000003 000000a2 400a51a5 00000000     .........Q.@....
    4850:	00000008 400a51a5 00000018 000000a2     .....Q.@........
    4860:	400a51bd 00000003 000000a2 400a51c0     .Q.@.........Q.@
    4870:	00000000 00000008 400a51c0 00000018     .........Q.@....
    4880:	000000a2 400a51d8 00000003 000000a2     .....Q.@........
    4890:	400a51db 00000000 00000008 400a51dc     .Q.@.........Q.@
    48a0:	00000007 000000a2 400a51e3 00000000     .........Q.@....
    48b0:	00002808 400a51e4 00000018 00000082     .(...Q.@........
    48c0:	400a51fc 00000003 000000a2 400a51ff     .Q.@.........Q.@
    48d0:	00000000 00002808 400a5200 0000004e     .....(...R.@N...
    48e0:	00000082 400a524e 00000017 000000a2     ....NR.@........
    48f0:	400a5265 00000020 000000a2 400a5285     eR.@ ........R.@
    4900:	00000050 000000a2 400a52d5 00000000     P........R.@....
    4910:	00000008 400a52d5 00000027 000000a2     .....R.@'.......
    4920:	400a52fc 00000000 00000008 400a52fc     .R.@.........R.@
    4930:	00000022 000000a2 400a531e 00000000     "........S.@....
    4940:	00000008 400a5320 00000005 000000a2     .... S.@........
    4950:	400a5325 00000052 000000a2 400a5377     %S.@R.......wS.@
    4960:	0000005a 00000092 400a53d1 0000001e     Z........S.@....
    4970:	000000a2 400a53ef 00000000 00000008     .....S.@........
    4980:	400a53f0 00000003 000000a2 400a53f3     .S.@.........S.@
    4990:	00000000 00000008 400a53f5 00000033     .........S.@3...
    49a0:	000000a2 400a5428 00000008 00000092     ....(T.@........
    49b0:	400a5430 00000028 000000a2 400a5458     0T.@(.......XT.@
    49c0:	0000002c 000000a2 400a5484 00000000     ,........T.@....
    49d0:	00000008 400a5484 00000004 000000a2     .....T.@........
    49e0:	400a5488 00000023 000000a2 400a54ab     .T.@#........T.@
    49f0:	00000000 00000008 400a54ad 00000004     .........T.@....
    4a00:	000000a2 400a54b1 00000017 000000a2     .....T.@........
    4a10:	400a54c8 00000051 000000a2 400a5519     .T.@Q........U.@
    4a20:	0000003d 000000a2 400a5556 00000000     =.......VU.@....
    4a30:	00000008 400a5558 00000003 000000a2     ....XU.@........
    4a40:	400a555b 00000000 00000008 400a555c     [U.@........\U.@
    4a50:	00000003 000000a2 400a555f 00000000     ........_U.@....
    4a60:	00000008 400a5560 00000003 000000a2     ....`U.@........
    4a70:	400a5563 00000000 00000008 400a5565     cU.@........eU.@
    4a80:	0000002c 000000a2 400a5591 00000008     ,........U.@....
    4a90:	00000092 400a5599 00000008 000000a2     .....U.@........
    4aa0:	400a55a1 00000000 00000008 400a55a1     .U.@.........U.@
    4ab0:	0000000b 000000a2 400a55ac 00000000     .........U.@....
    4ac0:	00000008 400a55ac 00000012 000000a2     .....U.@........
    4ad0:	400a55be 00000000 00002808 400a55c0     .U.@.....(...U.@
    4ae0:	00000084 00000082 400a5644 00000048     ........DV.@H...
    4af0:	000000a2 400a568c 00000013 000000a2     .....V.@........
    4b00:	400a569f 00000000 00000008 400a56a2     .V.@.........V.@
    4b10:	0000001f 000000a2 400a56c1 00000015     .........V.@....
    4b20:	000000a2 400a56d6 0000008c 000000a2     .....V.@........
    4b30:	400a5762 00000000 00000008 400a5765     bW.@........eW.@
    4b40:	0000009a 000000a2 400a57ff 00000000     .........W.@....
    4b50:	00002808 400a5800 0000001c 00000082     .(...X.@........
    4b60:	400a581c 00000000 00002808 400a581c     .X.@.....(...X.@
    4b70:	0000001c 00000082 400a5838 00000000     ........8X.@....
    4b80:	00002808 400a5838 00000040 00000082     .(..8X.@@.......
    4b90:	400a5878 00000003 000000a2 400a587b     xX.@........{X.@
    4ba0:	00000000 00000008 400a587c 0000000e     ........|X.@....
    4bb0:	000000a2 400a588a 00000009 000000a2     .....X.@........
    4bc0:	400a5893 00000000 00000008 400a5894     .X.@.........X.@
    4bd0:	0000001d 000000a2 400a58b1 00000000     .........X.@....
    4be0:	00000008 400a58b1 00000019 000000a2     .....X.@........
    4bf0:	400a58ca 00000000 00000008 400a58ca     .X.@.........X.@
    4c00:	00000024 000000a2 400a58ee 00000000     $........X.@....
    4c10:	00000008 400a58ee 00000027 000000a2     .....X.@'.......
    4c20:	400a5915 00000000 00000008 400a5915     .Y.@.........Y.@
    4c30:	00000044 000000a2 400a5959 00000000     D.......YY.@....
    4c40:	00000008 400a5959 0000000e 000000a2     ....YY.@........
    4c50:	400a5967 00000000 00000008 400a5968     gY.@........hY.@
    4c60:	00000013 000000a2 400a597b 00000000     ........{Y.@....
    4c70:	00000008 400a597b 0000000e 000000a2     ....{Y.@........
    4c80:	400a5989 00000000 00000008 400a5989     .Y.@.........Y.@
    4c90:	0000000e 000000a2 400a5997 00000000     .........Y.@....
    4ca0:	00000008 400a5998 00000008 000000a2     .....Y.@........
    4cb0:	400a59a0 00000000 00000008 400a59a0     .Y.@.........Y.@
    4cc0:	0000000d 000000a2 400a59ad 00000000     .........Y.@....
    4cd0:	00002808 400a59b0 000000a1 00000082     .(...Y.@........
    4ce0:	400a5a51 00000005 000000a2 400a5a56     QZ.@........VZ.@
    4cf0:	0000005e 000000a2 400a5ab4 00000000     ^........Z.@....
    4d00:	00000008 400a5ab6 0000001e 000000a2     .....Z.@........
    4d10:	400a5ad4 00000000 00002808 400a5ad4     .Z.@.....(...Z.@
    4d20:	00000067 00000082 400a5b3b 00000000     g.......;[.@....
    4d30:	00002808 400a5b3c 0000000c 00000082     .(..<[.@........
    4d40:	400a5b48 00000000 00002808 400a5b48     H[.@.....(..H[.@
    4d50:	00000018 00000082 400a5b60 00000009     ........`[.@....
    4d60:	000000a2 400a5b69 00000000 00000008     ....i[.@........
    4d70:	400a5b69 00000021 000000a2 400a5b8a     i[.@!........[.@
    4d80:	00000000 00000008 400a5b8a 00000002     .........[.@....
    4d90:	000000a2 400a5b8c 0000000f 000000a2     .....[.@........
    4da0:	400a5b9b 00000000 00000008 400a5b9d     .[.@.........[.@
    4db0:	00000018 000000a2 400a5bb5 00000003     .........[.@....
    4dc0:	000000a2 400a5bb8 00000003 000000a2     .....[.@........
    4dd0:	400a5bbb 00000014 000000a2 400a5bcf     .[.@.........[.@
    4de0:	00000000 00000008 400a5bd0 0000000e     .........[.@....
    4df0:	000000a2 400a5bde 00000008 000000a2     .....[.@........
    4e00:	400a5be6 00000022 000000a2 400a5c08     .[.@"........\.@
    4e10:	00000006 000000a2 400a5c0e 00000003     .........\.@....
    4e20:	00000092 400a5c11 00000000 00000008     .....\.@........
    4e30:	400a5c11 0000000b 000000a2 400a5c1c     .\.@.........\.@
    4e40:	00000009 000000a2 400a5c25 00000000     ........%\.@....
    4e50:	00000008 400a5c25 00000009 000000a2     ....%\.@........
    4e60:	400a5c2e 00000000 00000008 400a5c2e     .\.@.........\.@
    4e70:	00000007 000000a2 400a5c35 00000000     ........5\.@....
    4e80:	00000008 400a5c35 00000005 000000a2     ....5\.@........
    4e90:	400a5c3a 00000000 00002808 400a5c3c     :\.@.....(..<\.@
    4ea0:	00000042 00000082 400a5c7e 00000000     B.......~\.@....
    4eb0:	00000008 400a5c80 00000003 000000a2     .....\.@........
    4ec0:	400a5c83 00000000 00000008 400a5c84     .\.@.........\.@
    4ed0:	00000010 000000a2 400a5c94 00000000     .........\.@....
    4ee0:	00000008 400a5c94 00000019 000000a2     .....\.@........
    4ef0:	400a5cad 00000003 000000a2 400a5cb0     .\.@.........\.@
    4f00:	00000000 00002808 400a5cb0 00000019     .....(...\.@....
    4f10:	00000082 400a5cc9 0000000c 000000a2     .....\.@........
    4f20:	400a5cd5 0000002b 000000a2 400a5d00     .\.@+........].@
    4f30:	00000003 000000a2 400a5d03 00000000     .........].@....
    4f40:	00000008 400a5d05 0000000e 000000a2     .....].@........
    4f50:	400a5d13 00000000 00000008 400a5d15     .].@.........].@
    4f60:	0000000e 000000a2 400a5d23 00000000     ........#].@....
    4f70:	00000008 400a5d25 0000000e 000000a2     ....%].@........
    4f80:	400a5d33 00000000 00000008 400a5d34     3].@........4].@
    4f90:	0000000e 000000a2 400a5d42 00000000     ........B].@....
    4fa0:	00000008 400a5d42 0000000e 000000a2     ....B].@........
    4fb0:	400a5d50 00000000 00000008 400a5d50     P].@........P].@
    4fc0:	0000000e 000000a2 400a5d5e 00000000     ........^].@....
    4fd0:	00000008 400a5d5e 0000000e 000000a2     ....^].@........
    4fe0:	400a5d6c 00000000 00002808 400a5d6c     l].@.....(..l].@
    4ff0:	00000023 00000082 400a5d8f 00000000     #........].@....
    5000:	00002808 400a5d90 00000034 00000082     .(...].@4.......
    5010:	400a5dc4 00000003 000000a2 400a5dc7     .].@.........].@
    5020:	00000000 00000008 400a5dc8 00000012     .........].@....
    5030:	000000a2 400a5dda 00000000 00000008     .....].@........
    5040:	400a5dda 0000005f 000000a2 400a5e39     .].@_.......9^.@
    5050:	0000001c 000000a2 400a5e55 00000000     ........U^.@....
    5060:	00000008 400a5e55 0000000f 000000a2     ....U^.@........
    5070:	400a5e64 00000000 00002808 400a5e64     d^.@.....(..d^.@
    5080:	00000018 00000082 400a5e7c 00000000     ........|^.@....
    5090:	00000008 400a5e7e 0000003c 000000a2     ....~^.@<.......
    50a0:	400a5eba 0000007b 000000a2 400a5f35     .^.@{.......5_.@
    50b0:	00000000 00000008 400a5f35 00000003     ........5_.@....
    50c0:	000000a2 400a5f38 00000000 00000008     ....8_.@........
    50d0:	400a5f38 00000003 000000a2 400a5f3b     8_.@........;_.@
    50e0:	00000000 00002808 400a5f3c 00000021     .....(..<_.@!...
    50f0:	00000082 400a5f5d 00000000 00000008     ....]_.@........
    5100:	400a5f5d 00000010 000000a2 400a5f6d     ]_.@........m_.@
    5110:	00000000 00002808 400a5f70 00000011     .....(..p_.@....
    5120:	00000082 400a5f81 00000000 00002808     ....._.@.....(..
    5130:	400a5f84 00000004 00000082 400a5f88     ._.@........._.@
    5140:	00000000 00002808 400a5f88 00000007     .....(..._.@....
    5150:	00000082 400a5f8f 00000000 00000008     ....._.@........
    5160:	400a5f90 00000004 000000a2 400a5f94     ._.@........._.@
    5170:	00000000 00002808 400a5f94 00000055     .....(..._.@U...
    5180:	00000082 400a5fe9 00000000 00000008     ....._.@........
    5190:	2000b420 0000001f 00000082 2000b43f      .. ........?.. 
    51a0:	00000000 00000008 400a0018 00000001     ...........@....
    51b0:	00000104 400a0020 00000000 00002904     .... ..@.....)..
    51c0:	400a2a64 00000068 00000001 200009b8     d*.@h.......... 
    51d0:	00000128 00000001 20005d20 00000002     (....... ]. ....
    51e0:	00000082 20005d22 00000000 00002808     ...."]. .....(..
    51f0:	20005d24 00000002 00000082 20005d26     $]. ........&]. 
    5200:	00000000 00002808 20005d28 0000007e     .....(..(]. ~...
    5210:	00000082 20005da6 00000000 00002808     .....]. .....(..
    5220:	20005da8 0000004e 00000082 20005df6     .]. N........]. 
    5230:	00000000 00000008 20005df6 00000018     .........]. ....
    5240:	000000a2 20005e0e 00000000 00000008     .....^. ........
    5250:	20005e0e 00000013 000000a2 20005e21     .^. ........!^. 
    5260:	0000001f 000000a2 20005e40 00000000     ........@^. ....
    5270:	00000008 20005e40 00000016 000000a2     ....@^. ........
    5280:	20005e56 00000000 00002808 20005e58     V^. .....(..X^. 
    5290:	00000023 00000082 20005e7b 00000000     #.......{^. ....
    52a0:	00002808 20005e7c 0000001b 00000082     .(..|^. ........
    52b0:	20005e97 00000000 00002808 20005e98     .^. .....(...^. 
    52c0:	0000001b 00000082 20005eb3 00000000     .........^. ....
    52d0:	00002808 20005eb4 0000003f 00000082     .(...^. ?.......
    52e0:	20005ef3 00000000 00002808 20005ef4     .^. .....(...^. 
    52f0:	00000010 00000082 20005f04 00000000     ........._. ....
    5300:	00002808 20005f04 0000001a 00000082     .(..._. ........
    5310:	20005f1e 00000000 00000008 20005f20     ._. ........ _. 
    5320:	0000000f 000000a2 20005f2f 00000000     ......../_. ....
    5330:	00002808 20005f30 00000040 00000082     .(..0_. @.......
    5340:	20005f70 0000000d 000000a2 20005f7d     p_. ........}_. 
    5350:	00000009 000000a2 20005f86 00000000     ........._. ....
    5360:	00000008 20005f86 0000000e 000000a2     ....._. ........
    5370:	20005f94 00000000 00000008 20005f94     ._. ........._. 
    5380:	00000014 000000a2 20005fa8 00000014     ........._. ....
    5390:	000000a2 20005fbc 00000000 00000008     ....._. ........
    53a0:	20005fbd 00000003 000000a2 20005fc0     ._. ........._. 
    53b0:	00000018 000000a2 20005fd8 00000029     ........._. )...
    53c0:	000000a2 20006001 00000000 00000008     .....`. ........
    53d0:	20006001 00000006 000000a2 20006007     .`. .........`. 
    53e0:	00000000 00000008 20006008 00000028     .........`. (...
    53f0:	000000a2 20006030 00000000 00000008     ....0`. ........
    5400:	20006030 00000008 000000a2 20006038     0`. ........8`. 
    5410:	00000000 00000008 20006038 00000019     ........8`. ....
    5420:	000000a2 20006051 00000000 00000008     ....Q`. ........
    5430:	20006051 00000029 000000a2 2000607a     Q`. ).......z`. 
    5440:	00000033 000000a2 200060ad 00000000     3........`. ....
    5450:	00000008 200060ae 0000001f 000000a2     .....`. ........
    5460:	200060cd 0000001d 000000a2 200060ea     .`. .........`. 
    5470:	00000000 00000008 200060ea 0000000f     .........`. ....
    5480:	000000a2 200060f9 00000000 00000008     .....`. ........
    5490:	200060f9 00000017 000000a2 20006110     .`. .........a. 
    54a0:	00000000 00000008 20006110 00000017     .........a. ....
    54b0:	000000a2 20006127 00000000 00000008     ....'a. ........
    54c0:	20006128 0000000c 000000a2 20006134     (a. ........4a. 
    54d0:	00000000 00000008 20006134 0000000c     ........4a. ....
    54e0:	000000a2 20006140 00000000 00000008     ....@a. ........
    54f0:	20006140 00000019 000000a2 20006159     @a. ........Ya. 
    5500:	00000000 00000008 20006159 00000019     ........Ya. ....
    5510:	000000a2 20006172 00000000 00002808     ....ra. .....(..
    5520:	20006174 00000035 00000082 200061a9     ta. 5........a. 
    5530:	00000000 00002808 200061ac 00000018     .....(...a. ....
    5540:	00000082 200061c4 0000002e 00000092     .....a. ........
    5550:	200061f2 00000007 000000a2 200061f9     .a. .........a. 
    5560:	00000000 00002808 200061fc 00000022     .....(...a. "...
    5570:	00000082 2000621e 00000000 00002808     .....b. .....(..
    5580:	20006220 0000001f 00000082 2000623f      b. ........?b. 
    5590:	00000000 00002808 20006240 0000002b     .....(..@b. +...
    55a0:	00000082 2000626b 00000000 00002808     ....kb. .....(..
    55b0:	2000626c 00000036 00000082 200062a2     lb. 6........b. 
    55c0:	00000000 00000008 200062a2 00000004     .........b. ....
    55d0:	000000a2 200062a6 00000003 000000a2     .....b. ........
    55e0:	200062a9 00000015 000000a2 200062be     .b. .........b. 
    55f0:	00000000 00000008 200062c0 00000006     .........b. ....
    5600:	000000a2 200062c6 0000003a 000000a2     .....b. :.......
    5610:	20006300 00000015 000000a2 20006315     .c. .........c. 
    5620:	00000000 00000008 20006315 00000006     .........c. ....
    5630:	000000a2 2000631b 0000003f 000000a2     .....c. ?.......
    5640:	2000635a 00000000 00002808 2000635c     Zc. .....(..\c. 
    5650:	00000021 00000082 2000637d 00000011     !.......}c. ....
    5660:	000000a2 2000638e 00000000 00000008     .....c. ........
    5670:	20006390 0000001a 000000a2 200063aa     .c. .........c. 
    5680:	00000000 00000008 200063ac 0000000f     .........c. ....
    5690:	000000a2 200063bb 00000000 00000008     .....c. ........
    56a0:	200063bc 0000001c 000000a2 200063d8     .c. .........c. 
    56b0:	00000000 00000008 200063d8 00000009     .........c. ....
    56c0:	000000a2 200063e1 00000000 00000008     .....c. ........
    56d0:	200063e1 00000018 000000a2 200063f9     .c. .........c. 
    56e0:	00000000 00002808 200063fc 00000004     .....(...c. ....
    56f0:	00000082 20006400 00000000 00002808     .....d. .....(..
    5700:	20006400 00000025 00000082 20006425     .d. %.......%d. 
    5710:	00000003 000000a2 20006428 00000012     ........(d. ....
    5720:	000000a2 2000643a 00000000 00000008     ....:d. ........
    5730:	2000643a 00000003 000000a2 2000643d     :d. ........=d. 
    5740:	00000016 000000a2 20006453 00000000     ........Sd. ....
    5750:	00000008 20006454 00000004 00000082     ....Td. ........
    5760:	20006458 00000000 00000008 20006458     Xd. ........Xd. 
    5770:	00000004 000000a2 2000645c 00000000     ........\d. ....
    5780:	00002808 2000645c 00000048 00000082     .(..\d. H.......
    5790:	200064a4 00000003 00000092 200064a7     .d. .........d. 
    57a0:	00000000 00000008 200064aa 0000002a     .........d. *...
    57b0:	000000a2 200064d4 00000003 00000092     .....d. ........
    57c0:	200064d7 00000000 00000008 200064d8     .d. .........d. 
    57d0:	00000008 000000a2 200064e0 00000020     .........d.  ...
    57e0:	000000a2 20006500 00000003 00000092     .....e. ........
    57f0:	20006503 00000000 00000008 20006504     .e. .........e. 
    5800:	00000008 000000a2 2000650c 00000035     .........e. 5...
    5810:	000000a2 20006541 00000003 00000092     ....Ae. ........
    5820:	20006544 00000000 00000008 20006544     De. ........De. 
    5830:	0000002f 000000a2 20006573 00000000     /.......se. ....
    5840:	00000008 20006575 00000008 000000a2     ....ue. ........
    5850:	2000657d 00000018 000000a2 20006595     }e. .........e. 
    5860:	0000000f 000000a2 200065a4 00000000     .........e. ....
    5870:	00002808 200065a4 0000001d 00000082     .(...e. ........
    5880:	200065c1 00000014 000000a2 200065d5     .e. .........e. 
    5890:	00000000 00000008 200065d5 00000003     .........e. ....
    58a0:	000000a2 200065d8 00000018 000000a2     .....e. ........
    58b0:	200065f0 00000018 000000a2 20006608     .e. .........f. 
    58c0:	00000000 00000008 20006608 0000000c     .........f. ....
    58d0:	000000a2 20006614 00000000 00002808     .....f. .....(..
    58e0:	20006614 00000056 00000082 2000666a     .f. V.......jf. 
    58f0:	00000016 00000092 20006680 00000014     .........f. ....
    5900:	000000a2 20006694 00000000 00000008     .....f. ........
    5910:	20006695 00000003 000000a2 20006698     .f. .........f. 
    5920:	00000018 000000a2 200066b0 00000018     .........f. ....
    5930:	000000a2 200066c8 0000002d 000000a2     .....f. -.......
    5940:	200066f5 00000007 000000a2 200066fc     .f. .........f. 
    5950:	00000000 00000008 200066fd 00000021     .........f. !...
    5960:	000000a2 2000671e 00000016 000000a2     .....g. ........
    5970:	20006734 00000003 00000008 20006737     4g. ........7g. 
    5980:	00000007 000000a2 2000673e 00000000     ........>g. ....
    5990:	00000008 20006740 0000001a 000000a2     ....@g. ........
    59a0:	2000675a 00000000 00000008 2000675c     Zg. ........\g. 
    59b0:	0000000c 000000a2 20006768 00000000     ........hg. ....
    59c0:	00000008 20006768 0000001c 000000a2     ....hg. ........
    59d0:	20006784 00000000 00002808 20006784     .g. .....(...g. 
    59e0:	0000001f 00000082 200067a3 00000000     .........g. ....
    59f0:	00002808 200067a4 00000033 00000082     .(...g. 3.......
    5a00:	200067d7 00000000 00000008 200067d8     .g. .........g. 
    5a10:	0000002f 000000a2 20006807 00000000     /........h. ....
    5a20:	00000008 20006808 00000002 000000a2     .....h. ........
    5a30:	2000680a 00000010 000000a2 2000681a     .h. .........h. 
    5a40:	00000049 000000a2 20006863 00000000     I.......ch. ....
    5a50:	00000008 20006865 00000019 000000a2     ....eh. ........
    5a60:	2000687e 00000017 000000a2 20006895     ~h. .........h. 
    5a70:	0000003f 000000a2 200068d4 0000001a     ?........h. ....
    5a80:	000000a2 200068ee 00000000 00000008     .....h. ........
    5a90:	200068f0 00000014 000000a2 20006904     .h. .........i. 
    5aa0:	00000000 00000008 20006904 00000016     .........i. ....
    5ab0:	000000a2 2000691a 00000003 00000008     .....i. ........
    5ac0:	2000691d 00000037 000000a2 20006954     .i. 7.......Ti. 
    5ad0:	00000000 00002808 20006954 0000005a     .....(..Ti. Z...
    5ae0:	00000082 200069ae 00000000 00000008     .....i. ........
    5af0:	200069ae 0000001a 000000a2 200069c8     .i. .........i. 
    5b00:	000000a8 000000a2 20006a70 0000001c     ........pj. ....
    5b10:	000000a2 20006a8c 00000027 000000a2     .....j. '.......
    5b20:	20006ab3 00000000 00000008 20006ab4     .j. .........j. 
    5b30:	00000014 000000a2 20006ac8 00000012     .........j. ....
    5b40:	000000a2 20006ada 00000000 00000008     .....j. ........
    5b50:	20006adc 00000006 000000a2 20006ae2     .j. .........j. 
    5b60:	0000000e 000000a2 20006af0 0000000f     .........j. ....
    5b70:	000000a2 20006aff 00000000 00000008     .....j. ........
    5b80:	20006b00 00000011 000000a2 20006b11     .k. .........k. 
    5b90:	00000009 000000a2 20006b1a 0000004b     .........k. K...
    5ba0:	000000a2 20006b65 00000024 000000a2     ....ek. $.......
    5bb0:	20006b89 00000003 00000092 20006b8c     .k. .........k. 
    5bc0:	00000000 00000008 20006b8c 0000001e     .........k. ....
    5bd0:	000000a2 20006baa 00000017 000000a2     .....k. ........
    5be0:	20006bc1 00000000 00000008 20006bc1     .k. .........k. 
    5bf0:	00000005 000000a2 20006bc6 00000000     .........k. ....
    5c00:	00000008 20006bc9 00000003 000000a2     .....k. ........
    5c10:	20006bcc 0000000c 000000a2 20006bd8     .k. .........k. 
    5c20:	00000009 000000a2 20006be1 00000018     .........k. ....
    5c30:	000000a2 20006bf9 00000017 000000a2     .....k. ........
    5c40:	20006c10 0000000e 000000a2 20006c1e     .l. .........l. 
    5c50:	00000000 00000008 20006c20 0000001c     ........ l. ....
    5c60:	000000a2 20006c3c 00000000 00000008     ....<l. ........
    5c70:	20006c3c 0000001a 000000a2 20006c56     <l. ........Vl. 
    5c80:	00000053 000000a2 20006ca9 00000003     S........l. ....
    5c90:	00000092 20006cac 00000000 00000008     .....l. ........
    5ca0:	20006cac 00000018 000000a2 20006cc4     .l. .........l. 
    5cb0:	00000045 000000a2 20006d09 00000003     E........m. ....
    5cc0:	00000092 20006d0c 00000000 00000008     .....m. ........
    5cd0:	20006d0c 00000012 000000a2 20006d1e     .m. .........m. 
    5ce0:	0000001b 000000a2 20006d39 00000000     ........9m. ....
    5cf0:	00000008 20006d39 00000006 000000a2     ....9m. ........
    5d00:	20006d3f 0000000b 000000a2 20006d4a     ?m. ........Jm. 
    5d10:	00000017 000000a2 20006d61 00000000     ........am. ....
    5d20:	00000008 20006d61 00000018 000000a2     ....am. ........
    5d30:	20006d79 0000000f 000000a2 20006d88     ym. .........m. 
    5d40:	00000029 000000a2 20006db1 00000003     )........m. ....
    5d50:	00000092 20006db4 00000000 00000008     .....m. ........
    5d60:	20006db6 0000000d 000000a2 20006dc3     .m. .........m. 
    5d70:	00000000 00000008 20006dc5 0000000f     .........m. ....
    5d80:	000000a2 20006dd4 00000009 000000a2     .....m. ........
    5d90:	20006ddd 00000024 000000a2 20006e01     .m. $........n. 
    5da0:	00000018 000000a2 20006e19 0000000e     .........n. ....
    5db0:	000000a2 20006e27 00000000 00000008     ....'n. ........
    5dc0:	20006e28 00000007 000000a2 20006e2f     (n. ......../n. 
    5dd0:	00000000 00002808 20006e30 0000001c     .....(..0n. ....
    5de0:	00000082 20006e4c 00000000 00000008     ....Ln. ........
    5df0:	20006e4e 0000000a 000000a2 20006e58     Nn. ........Xn. 
    5e00:	00000023 000000a2 20006e7b 00000000     #.......{n. ....
    5e10:	00000008 20006e7c 00000008 000000a2     ....|n. ........
    5e20:	20006e84 00000006 000000a2 20006e8a     .n. .........n. 
    5e30:	00000022 000000a2 20006eac 00000000     "........n. ....
    5e40:	00000008 20006eac 00000014 000000a2     .....n. ........
    5e50:	20006ec0 00000011 000000a2 20006ed1     .n. .........n. 
    5e60:	00000000 00000008 20006ed1 0000001f     .........n. ....
    5e70:	000000a2 20006ef0 00000000 00002808     .....n. .....(..
    5e80:	20006ef0 00000019 00000082 20006f09     .n. .........o. 
    5e90:	00000000 00002808 20006f0c 00000024     .....(...o. $...
    5ea0:	00000082 20006f30 0000000e 000000a2     ....0o. ........
    5eb0:	20006f3e 00000003 00000092 20006f41     >o. ........Ao. 
    5ec0:	00000000 00000008 20006f41 00000012     ........Ao. ....
    5ed0:	000000a2 20006f53 00000000 00000008     ....So. ........
    5ee0:	20006f54 00000009 000000a2 20006f5d     To. ........]o. 
    5ef0:	00000000 00002808 20006f60 0000009c     .....(..`o. ....
    5f00:	00000082 20006ffc 00000011 000000a2     .....o. ........
    5f10:	2000700d 00000017 000000a2 20007024     .p. ........$p. 
    5f20:	00000035 000000a2 20007059 00000000     5.......Yp. ....
    5f30:	00000008 20007059 00000009 000000a2     ....Yp. ........
    5f40:	20007062 0000000e 000000a2 20007070     bp. ........pp. 
    5f50:	0000000f 000000a2 2000707f 00000000     .........p. ....
    5f60:	00000008 20007080 00000006 000000a2     .....p. ........
    5f70:	20007086 0000000b 000000a2 20007091     .p. .........p. 
    5f80:	0000000f 000000a2 200070a0 00000000     .........p. ....
    5f90:	00000008 200070a0 00000006 000000a2     .....p. ........
    5fa0:	200070a6 0000000b 000000a2 200070b1     .p. .........p. 
    5fb0:	0000000f 000000a2 200070c0 00000000     .........p. ....
    5fc0:	00000008 200070c0 00000026 000000a2     .....p. &.......
    5fd0:	200070e6 00000016 000000a2 200070fc     .p. .........p. 
    5fe0:	00000011 000000a2 2000710d 0000003f     .........q. ?...
    5ff0:	000000a2 2000714c 00000065 000000a2     ....Lq. e.......
    6000:	200071b1 00000000 00000008 200071b2     .q. .........q. 
    6010:	00000002 000000a2 200071b4 0000001b     .........q. ....
    6020:	000000a2 200071cf 00000035 000000a2     .....q. 5.......
    6030:	20007204 00000003 00000092 20007207     .r. .........r. 
    6040:	00000000 00000008 20007208 00000005     .........r. ....
    6050:	000000a2 2000720d 00000000 00000008     .....r. ........
    6060:	2000720d 00000005 000000a2 20007212     .r. .........r. 
    6070:	00000000 00000008 20007212 0000000d     .........r. ....
    6080:	000000a2 2000721f 00000000 00000008     .....r. ........
    6090:	20007222 0000000d 000000a2 2000722f     "r. ......../r. 
    60a0:	00000000 00000008 20007232 00000041     ........2r. A...
    60b0:	000000a2 20007273 00000000 00000008     ....sr. ........
    60c0:	20007276 0000000d 000000a2 20007283     vr. .........r. 
    60d0:	00000000 00000008 20007286 0000000d     .........r. ....
    60e0:	000000a2 20007293 00000000 00000008     .....r. ........
    60f0:	20007296 00000041 000000a2 200072d7     .r. A........r. 
    6100:	00000000 00000008 200072d7 00000003     .........r. ....
    6110:	000000a2 200072da 00000012 000000a2     .....r. ........
    6120:	200072ec 00000000 00000008 200072ec     .r. .........r. 
    6130:	00000006 000000a2 200072f2 0000000e     .........r. ....
    6140:	000000a2 20007300 0000000c 000000a2     .....s. ........
    6150:	2000730c 00000000 00000008 2000730c     .s. .........s. 
    6160:	00000009 000000a2 20007315 00000011     .........s. ....
    6170:	000000a2 20007326 0000002b 000000a2     ....&s. +.......
    6180:	20007351 00000003 00000092 20007354     Qs. ........Ts. 
    6190:	00000000 00000008 20007354 00000038     ........Ts. 8...
    61a0:	000000a2 2000738c 00000000 00000008     .....s. ........
    61b0:	2000738c 0000000f 000000a2 2000739b     .s. .........s. 
    61c0:	00000000 00000008 2000739c 00000007     .........s. ....
    61d0:	000000a2 200073a3 00000000 00002808     .....s. .....(..
    61e0:	200073a4 000000a8 00000082 2000744c     .s. ........Lt. 
    61f0:	0000001c 000000a2 20007468 0000002f     ........ht. /...
    6200:	000000a2 20007497 00000000 00000008     .....t. ........
    6210:	20007498 00000014 000000a2 200074ac     .t. .........t. 
    6220:	00000012 000000a2 200074be 00000000     .........t. ....
    6230:	00000008 200074c0 00000006 000000a2     .....t. ........
    6240:	200074c6 0000000e 000000a2 200074d4     .t. .........t. 
    6250:	0000000f 000000a2 200074e3 00000000     .........t. ....
    6260:	00000008 200074e4 00000011 000000a2     .....t. ........
    6270:	200074f5 00000009 000000a2 200074fe     .t. .........t. 
    6280:	0000004b 000000a2 20007549 00000024     K.......Iu. $...
    6290:	000000a2 2000756d 00000003 00000092     ....mu. ........
    62a0:	20007570 00000000 00000008 20007571     pu. ........qu. 
    62b0:	0000000f 000000a2 20007580 00000011     .........u. ....
    62c0:	000000a2 20007591 00000017 000000a2     .....u. ........
    62d0:	200075a8 00000000 00000008 200075a8     .u. .........u. 
    62e0:	00000005 000000a2 200075ad 00000000     .........u. ....
    62f0:	00000008 200075ae 0000000d 000000a2     .....u. ........
    6300:	200075bb 00000000 00000008 200075be     .u. .........u. 
    6310:	0000000d 000000a2 200075cb 00000000     .........u. ....
    6320:	00000008 200075ce 0000000d 000000a2     .....u. ........
    6330:	200075db 00000000 00000008 200075dd     .u. .........u. 
    6340:	00000003 000000a2 200075e0 0000000c     .........u. ....
    6350:	000000a2 200075ec 00000009 000000a2     .....u. ........
    6360:	200075f5 00000018 000000a2 2000760d     .u. .........v. 
    6370:	00000017 000000a2 20007624 0000000e     ........$v. ....
    6380:	000000a2 20007632 00000000 00000008     ....2v. ........
    6390:	20007632 0000000f 000000a2 20007641     2v. ........Av. 
    63a0:	00000000 00000008 20007641 00000007     ........Av. ....
    63b0:	000000a2 20007648 00000000 00002808     ....Hv. .....(..
    63c0:	20007648 00000040 00000082 20007688     Hv. @........v. 
    63d0:	00000000 00000008 20007688 00000014     .........v. ....
    63e0:	000000a2 2000769c 00000055 000000a2     .....v. U.......
    63f0:	200076f1 00000003 00000092 200076f4     .v. .........v. 
    6400:	00000000 00000008 200076f4 00000018     .........v. ....
    6410:	000000a2 2000770c 00000041 000000a2     .....w. A.......
    6420:	2000774d 00000003 00000092 20007750     Mw. ........Pw. 
    6430:	00000000 00000008 20007751 00000017     ........Qw. ....
    6440:	000000a2 20007768 0000001b 000000a2     ....hw. ........
    6450:	20007783 00000000 00000008 20007783     .w. .........w. 
    6460:	00000003 000000a2 20007786 0000000b     .........w. ....
    6470:	000000a2 20007791 00000014 000000a2     .....w. ........
    6480:	200077a5 00000000 00000008 200077a5     .w. .........w. 
    6490:	00000014 000000a2 200077b9 0000000f     .........w. ....
    64a0:	000000a2 200077c8 00000025 000000a2     .....w. %.......
    64b0:	200077ed 00000003 00000092 200077f0     .w. .........w. 
    64c0:	00000000 00000008 200077f0 0000000b     .........w. ....
    64d0:	000000a2 200077fb 00000000 00000008     .....w. ........
    64e0:	200077fd 0000000f 000000a2 2000780c     .w. .........x. 
    64f0:	00000009 000000a2 20007815 00000024     .........x. $...
    6500:	000000a2 20007839 00000018 000000a2     ....9x. ........
    6510:	20007851 0000000e 000000a2 2000785f     Qx. ........_x. 
    6520:	00000000 00000008 20007860 0000000f     ........`x. ....
    6530:	000000a2 2000786f 00000000 00002808     ....ox. .....(..
    6540:	20007870 00000016 00000082 20007886     px. .........x. 
    6550:	00000000 00002808 20007888 0000004c     .....(...x. L...
    6560:	00000082 200078d4 00000000 00000008     .....x. ........
    6570:	200078d4 00000014 000000a2 200078e8     .x. .........x. 
    6580:	00000034 000000a2 2000791c 00000026     4........y. &...
    6590:	000000a2 20007942 00000020 000000a2     ....By.  .......
    65a0:	20007962 0000000c 000000a2 2000796e     by. ........ny. 
    65b0:	0000001f 000000a2 2000798d 0000001f     .........y. ....
    65c0:	000000a2 200079ac 00000026 000000a2     .....y. &.......
    65d0:	200079d2 00000026 000000a2 200079f8     .y. &........y. 
    65e0:	00000019 000000a2 20007a11 00000023     .........z. #...
    65f0:	000000a2 20007a34 00000020 000000a2     ....4z.  .......
    6600:	20007a54 0000000a 000000a2 20007a5e     Tz. ........^z. 
    6610:	0000001f 000000a2 20007a7d 0000001f     ........}z. ....
    6620:	000000a2 20007a9c 00000026 000000a2     .....z. &.......
    6630:	20007ac2 00000026 000000a2 20007ae8     .z. &........z. 
    6640:	00000019 000000a2 20007b01 00000023     .........{. #...
    6650:	000000a2 20007b24 00000020 000000a2     ....${.  .......
    6660:	20007b44 0000000a 000000a2 20007b4e     D{. ........N{. 
    6670:	00000002 000000a2 20007b50 00000024     ........P{. $...
    6680:	000000a2 20007b74 00000020 000000a2     ....t{.  .......
    6690:	20007b94 00000026 000000a2 20007bba     .{. &........{. 
    66a0:	0000000b 000000a2 20007bc5 00000008     .........{. ....
    66b0:	000000a2 20007bcd 00000000 00000008     .....{. ........
    66c0:	20007bcd 00000014 000000a2 20007be1     .{. .........{. 
    66d0:	00000028 000000a2 20007c09 00000003     (........|. ....
    66e0:	00000092 20007c0c 00000000 00000008     .....|. ........
    66f0:	20007c0c 0000000f 000000a2 20007c1b     .|. .........|. 
    6700:	00000000 00002808 20007c1c 00000055     .....(...|. U...
    6710:	00000082 20007c71 0000001b 000000a2     ....q|. ........
    6720:	20007c8c 00000008 000000a2 20007c94     .|. .........|. 
    6730:	00000008 000000a2 20007c9c 00000021     .........|. !...
    6740:	000000a2 20007cbd 00000010 000000a2     .....|. ........
    6750:	20007ccd 0000001b 000000a2 20007ce8     .|. .........|. 
    6760:	0000000b 000000a2 20007cf3 0000000e     .........|. ....
    6770:	000000a2 20007d01 0000001b 000000a2     .....}. ........
    6780:	20007d1c 00000008 000000a2 20007d24     .}. ........$}. 
    6790:	00000006 000000a2 20007d2a 00000023     ........*}. #...
    67a0:	000000a2 20007d4d 00000010 000000a2     ....M}. ........
    67b0:	20007d5d 0000001b 000000a2 20007d78     ]}. ........x}. 
    67c0:	0000000b 000000a2 20007d83 0000000e     .........}. ....
    67d0:	000000a2 20007d91 0000001b 000000a2     .....}. ........
    67e0:	20007dac 00000008 000000a2 20007db4     .}. .........}. 
    67f0:	00000005 000000a2 20007db9 0000002f     .........}. /...
    6800:	000000a2 20007de8 0000001c 000000a2     .....}. ........
    6810:	20007e04 00000008 000000a2 20007e0c     .~. .........~. 
    6820:	0000000c 000000a2 20007e18 00000000     .........~. ....
    6830:	00000008 20007e18 00000011 000000a2     .....~. ........
    6840:	20007e29 00000008 000000a2 20007e31     )~. ........1~. 
    6850:	00000000 00000008 20007e31 00000014     ........1~. ....
    6860:	000000a2 20007e45 00000028 000000a2     ....E~. (.......
    6870:	20007e6d 00000003 00000092 20007e70     m~. ........p~. 
    6880:	00000000 00000008 20007e70 0000000f     ........p~. ....
    6890:	000000a2 20007e7f 00000000 00002808     .....~. .....(..
    68a0:	20007e80 00000019 00000082 20007e99     .~. .........~. 
    68b0:	00000044 000000a2 20007edd 00000008     D........~. ....
    68c0:	000000a2 20007ee5 00000033 000000a2     .....~. 3.......
    68d0:	20007f18 00000035 000000a2 20007f4d     ... 5.......M.. 
    68e0:	0000001f 000000a2 20007f6c 00000038     ........l.. 8...
    68f0:	000000a2 20007fa4 00000000 00000008     ....... ........
    6900:	20007fa4 00000009 000000a2 20007fad     ... ........... 
    6910:	00000003 00002808 20007fb0 00000077     .....(..... w...
    6920:	00000082 20008027 00000000 00000008     ....'.. ........
    6930:	20008029 00000024 000000a2 2000804d     ).. $.......M.. 
    6940:	00000097 000000a2 200080e4 0000001c     ........... ....
    6950:	000000a2 20008100 00000027 000000a2     ....... '.......
    6960:	20008127 00000000 00000008 20008128     '.. ........(.. 
    6970:	00000014 000000a2 2000813c 00000012     ........<.. ....
    6980:	000000a2 2000814e 00000000 00000008     ....N.. ........
    6990:	20008150 00000006 000000a2 20008156     P.. ........V.. 
    69a0:	0000000e 000000a2 20008164 0000000f     ........d.. ....
    69b0:	000000a2 20008173 00000000 00000008     ....s.. ........
    69c0:	20008174 00000011 000000a2 20008185     t.. ........... 
    69d0:	00000009 000000a2 2000818e 0000004a     ........... J...
    69e0:	000000a2 200081d8 00000018 000000a2     ....... ........
    69f0:	200081f0 0000000e 000000a2 200081fe     ... ........... 
    6a00:	00000003 00000092 20008201 00000000     ........... ....
    6a10:	00000008 20008201 0000001e 000000a2     ....... ........
    6a20:	2000821f 00000017 000000a2 20008236     ... ........6.. 
    6a30:	00000000 00000008 20008236 00000005     ........6.. ....
    6a40:	000000a2 2000823b 00000000 00000008     ....;.. ........
    6a50:	2000823d 00000003 000000a2 20008240     =.. ........@.. 
    6a60:	0000000c 000000a2 2000824c 00000009     ........L.. ....
    6a70:	000000a2 20008255 00000018 000000a2     ....U.. ........
    6a80:	2000826d 00000017 000000a2 20008284     m.. ........... 
    6a90:	0000000e 000000a2 20008292 00000000     ........... ....
    6aa0:	00000008 20008292 0000003a 000000a2     ....... :.......
    6ab0:	200082cc 00000000 00000008 200082cc     ... ........... 
    6ac0:	0000001a 000000a2 200082e6 00000053     ........... S...
    6ad0:	000000a2 20008339 00000003 00000092     ....9.. ........
    6ae0:	2000833c 00000000 00000008 2000833c     <.. ........<.. 
    6af0:	00000018 000000a2 20008354 00000045     ........T.. E...
    6b00:	000000a2 20008399 00000003 00000092     ....... ........
    6b10:	2000839c 00000000 00000008 2000839d     ... ........... 
    6b20:	00000014 000000a2 200083b1 0000001b     ........... ....
    6b30:	000000a2 200083cc 00000000 00000008     ....... ........
    6b40:	200083cc 00000006 000000a2 200083d2     ... ........... 
    6b50:	0000000e 000000a2 200083e0 00000017     ........... ....
    6b60:	000000a2 200083f7 00000000 00000008     ....... ........
    6b70:	200083f9 00000018 000000a2 20008411     ... ........... 
    6b80:	0000000f 000000a2 20008420 00000029     ........ .. )...
    6b90:	000000a2 20008449 00000003 00000092     ....I.. ........
    6ba0:	2000844c 00000000 00000008 2000844e     L.. ........N.. 
    6bb0:	0000000d 000000a2 2000845b 00000000     ........[.. ....
    6bc0:	00000008 2000845d 0000000f 000000a2     ....].. ........
    6bd0:	2000846c 00000009 000000a2 20008475     l.. ........u.. 
    6be0:	00000024 000000a2 20008499 00000018     $.......... ....
    6bf0:	000000a2 200084b1 0000000e 000000a2     ....... ........
    6c00:	200084bf 00000000 00000008 200084c0     ... ........... 
    6c10:	00000007 000000a2 200084c7 00000000     ........... ....
    6c20:	00002808 200084c8 0000005a 00000082     .(..... Z.......
    6c30:	20008522 00000000 00000008 20008525     ".. ........%.. 
    6c40:	00000018 000000a2 2000853d 00000097     ........=.. ....
    6c50:	000000a2 200085d4 0000001c 000000a2     ....... ........
    6c60:	200085f0 00000027 000000a2 20008617     ... '.......... 
    6c70:	00000000 00000008 20008618 00000014     ........... ....
    6c80:	000000a2 2000862c 00000012 000000a2     ....,.. ........
    6c90:	2000863e 00000000 00000008 20008640     >.. ........@.. 
    6ca0:	00000006 000000a2 20008646 0000000e     ........F.. ....
    6cb0:	000000a2 20008654 0000000f 000000a2     ....T.. ........
    6cc0:	20008663 00000000 00000008 20008664     c.. ........d.. 
    6cd0:	00000011 000000a2 20008675 00000009     ........u.. ....
    6ce0:	000000a2 2000867e 0000004a 000000a2     ....~.. J.......
    6cf0:	200086c8 00000018 000000a2 200086e0     ... ........... 
    6d00:	0000000e 000000a2 200086ee 00000003     ........... ....
    6d10:	00000092 200086f1 00000000 00000008     ....... ........
    6d20:	200086f1 0000001e 000000a2 2000870f     ... ........... 
    6d30:	00000017 000000a2 20008726 00000000     ........&.. ....
    6d40:	00000008 20008726 00000005 000000a2     ....&.. ........
    6d50:	2000872b 00000000 00000008 2000872d     +.. ........-.. 
    6d60:	00000003 000000a2 20008730 0000000c     ........0.. ....
    6d70:	000000a2 2000873c 00000009 000000a2     ....<.. ........
    6d80:	20008745 00000018 000000a2 2000875d     E.. ........].. 
    6d90:	00000017 000000a2 20008774 0000000e     ........t.. ....
    6da0:	000000a2 20008782 00000000 00000008     ....... ........
    6db0:	20008782 0000001b 000000a2 2000879d     ... ........... 
    6dc0:	00000000 00000008 2000879d 0000001b     ........... ....
    6dd0:	000000a2 200087b8 00000055 000000a2     ....... U.......
    6de0:	2000880d 00000003 00000092 20008810     ... ........... 
    6df0:	00000000 00000008 20008810 00000018     ........... ....
    6e00:	000000a2 20008828 00000045 000000a2     ....(.. E.......
    6e10:	2000886d 00000003 00000092 20008870     m.. ........p.. 
    6e20:	00000000 00000008 20008870 00000012     ........p.. ....
    6e30:	000000a2 20008882 0000001b 000000a2     ....... ........
    6e40:	2000889d 00000000 00000008 2000889d     ... ........... 
    6e50:	00000006 000000a2 200088a3 0000000b     ........... ....
    6e60:	000000a2 200088ae 00000017 000000a2     ....... ........
    6e70:	200088c5 00000000 00000008 200088c5     ... ........... 
    6e80:	00000018 000000a2 200088dd 0000000f     ........... ....
    6e90:	000000a2 200088ec 00000029 000000a2     ....... ).......
    6ea0:	20008915 00000003 00000092 20008918     ... ........... 
    6eb0:	00000000 00000008 2000891a 0000000d     ........... ....
    6ec0:	000000a2 20008927 00000000 00000008     ....'.. ........
    6ed0:	20008929 0000000f 000000a2 20008938     ).. ........8.. 
    6ee0:	00000009 000000a2 20008941 00000024     ........A.. $...
    6ef0:	000000a2 20008965 00000018 000000a2     ....e.. ........
    6f00:	2000897d 0000000e 000000a2 2000898b     }.. ........... 
    6f10:	00000000 00000008 2000898c 00000007     ........... ....
    6f20:	000000a2 20008993 00000000 00002808     ....... .....(..
    6f30:	20008994 0000005a 00000082 200089ee     ... Z.......... 
    6f40:	00000000 00000008 200089f1 00000018     ........... ....
    6f50:	000000a2 20008a09 00000097 000000a2     ....... ........
    6f60:	20008aa0 0000001c 000000a2 20008abc     ... ........... 
    6f70:	00000027 000000a2 20008ae3 00000000     '.......... ....
    6f80:	00000008 20008ae4 00000014 000000a2     ....... ........
    6f90:	20008af8 00000012 000000a2 20008b0a     ... ........... 
    6fa0:	00000000 00000008 20008b0c 00000006     ........... ....
    6fb0:	000000a2 20008b12 0000000e 000000a2     ....... ........
    6fc0:	20008b20 0000000f 000000a2 20008b2f      .. ......../.. 
    6fd0:	00000000 00000008 20008b30 00000011     ........0.. ....
    6fe0:	000000a2 20008b41 00000009 000000a2     ....A.. ........
    6ff0:	20008b4a 0000004a 000000a2 20008b94     J.. J.......... 
    7000:	00000018 000000a2 20008bac 0000000e     ........... ....
    7010:	000000a2 20008bba 00000003 00000092     ....... ........
    7020:	20008bbd 00000000 00000008 20008bbd     ... ........... 
    7030:	0000001e 000000a2 20008bdb 00000017     ........... ....
    7040:	000000a2 20008bf2 00000000 00000008     ....... ........
    7050:	20008bf2 00000005 000000a2 20008bf7     ... ........... 
    7060:	00000000 00000008 20008bf9 00000003     ........... ....
    7070:	000000a2 20008bfc 0000000c 000000a2     ....... ........
    7080:	20008c08 00000009 000000a2 20008c11     ... ........... 
    7090:	00000018 000000a2 20008c29 00000017     ........).. ....
    70a0:	000000a2 20008c40 0000000e 000000a2     ....@.. ........
    70b0:	20008c4e 00000000 00000008 20008c4e     N.. ........N.. 
    70c0:	00000005 000000a2 20008c53 00000027     ........S.. '...
    70d0:	000000a2 20008c7a 00000000 00000008     ....z.. ........
    70e0:	20008c7c 0000001a 000000a2 20008c96     |.. ........... 
    70f0:	00000053 000000a2 20008ce9 00000003     S.......... ....
    7100:	00000092 20008cec 00000000 00000008     ....... ........
    7110:	20008cec 00000018 000000a2 20008d04     ... ........... 
    7120:	00000045 000000a2 20008d49 00000003     E.......I.. ....
    7130:	00000092 20008d4c 00000000 00000008     ....L.. ........
    7140:	20008d4d 00000014 000000a2 20008d61     M.. ........a.. 
    7150:	0000001b 000000a2 20008d7c 00000000     ........|.. ....
    7160:	00000008 20008d7c 00000006 000000a2     ....|.. ........
    7170:	20008d82 0000000b 000000a2 20008d8d     ... ........... 
    7180:	00000017 000000a2 20008da4 00000000     ........... ....
    7190:	00000008 20008da5 0000001b 000000a2     ....... ........
    71a0:	20008dc0 0000000e 000000a2 20008dce     ... ........... 
    71b0:	0000001d 000000a2 20008deb 0000000e     ........... ....
    71c0:	000000a2 20008df9 00000003 00000092     ....... ........
    71d0:	20008dfc 00000000 00000008 20008dfe     ... ........... 
    71e0:	0000000d 000000a2 20008e0b 00000000     ........... ....
    71f0:	00000008 20008e0d 0000000f 000000a2     ....... ........
    7200:	20008e1c 00000009 000000a2 20008e25     ... ........%.. 
    7210:	00000024 000000a2 20008e49 00000018     $.......I.. ....
    7220:	000000a2 20008e61 0000000e 000000a2     ....a.. ........
    7230:	20008e6f 00000000 00000008 20008e6f     o.. ........o.. 
    7240:	00000007 000000a2 20008e76 00000000     ........v.. ....
    7250:	00002808 20008e78 0000005a 00000082     .(..x.. Z.......
    7260:	20008ed2 00000000 00000008 20008ed5     ... ........... 
    7270:	00000018 000000a2 20008eed 00000097     ........... ....
    7280:	000000a2 20008f84 0000001c 000000a2     ....... ........
    7290:	20008fa0 00000027 000000a2 20008fc7     ... '.......... 
    72a0:	00000000 00000008 20008fc8 00000014     ........... ....
    72b0:	000000a2 20008fdc 00000012 000000a2     ....... ........
    72c0:	20008fee 00000000 00000008 20008ff0     ... ........... 
    72d0:	00000006 000000a2 20008ff6 0000000e     ........... ....
    72e0:	000000a2 20009004 0000000f 000000a2     ....... ........
    72f0:	20009013 00000000 00000008 20009014     ... ........... 
    7300:	00000011 000000a2 20009025 00000009     ........%.. ....
    7310:	000000a2 2000902e 0000004a 000000a2     ....... J.......
    7320:	20009078 00000018 000000a2 20009090     x.. ........... 
    7330:	0000000e 000000a2 2000909e 00000003     ........... ....
    7340:	00000092 200090a1 00000000 00000008     ....... ........
    7350:	200090a1 0000001e 000000a2 200090bf     ... ........... 
    7360:	00000017 000000a2 200090d6 00000000     ........... ....
    7370:	00000008 200090d6 00000005 000000a2     ....... ........
    7380:	200090db 00000000 00000008 200090dd     ... ........... 
    7390:	00000003 000000a2 200090e0 0000000c     ........... ....
    73a0:	000000a2 200090ec 00000009 000000a2     ....... ........
    73b0:	200090f5 00000018 000000a2 2000910d     ... ........... 
    73c0:	00000017 000000a2 20009124 0000000e     ........$.. ....
    73d0:	000000a2 20009132 00000000 00000008     ....2.. ........
    73e0:	20009132 00000005 000000a2 20009137     2.. ........7.. 
    73f0:	00000027 000000a2 2000915e 00000000     '.......^.. ....
    7400:	00000008 20009160 0000001a 000000a2     ....`.. ........
    7410:	2000917a 00000053 000000a2 200091cd     z.. S.......... 
    7420:	00000003 00000092 200091d0 00000000     ........... ....
    7430:	00000008 200091d0 00000018 000000a2     ....... ........
    7440:	200091e8 00000045 000000a2 2000922d     ... E.......-.. 
    7450:	00000003 00000092 20009230 00000000     ........0.. ....
    7460:	00000008 20009231 00000014 000000a2     ....1.. ........
    7470:	20009245 0000001b 000000a2 20009260     E.. ........`.. 
    7480:	00000000 00000008 20009260 00000006     ........`.. ....
    7490:	000000a2 20009266 0000000b 000000a2     ....f.. ........
    74a0:	20009271 00000017 000000a2 20009288     q.. ........... 
    74b0:	00000000 00000008 20009289 00000017     ........... ....
    74c0:	000000a2 200092a0 0000000e 000000a2     ....... ........
    74d0:	200092ae 0000001d 000000a2 200092cb     ... ........... 
    74e0:	0000000e 000000a2 200092d9 00000003     ........... ....
    74f0:	00000092 200092dc 00000000 00000008     ....... ........
    7500:	200092de 0000000d 000000a2 200092eb     ... ........... 
    7510:	00000000 00000008 200092ed 0000000f     ........... ....
    7520:	000000a2 200092fc 00000009 000000a2     ....... ........
    7530:	20009305 00000024 000000a2 20009329     ... $.......).. 
    7540:	00000018 000000a2 20009341 0000000e     ........A.. ....
    7550:	000000a2 2000934f 00000000 00000008     ....O.. ........
    7560:	20009350 00000007 000000a2 20009357     P.. ........W.. 
    7570:	00000000 00000008 400a5fec 00000053     ........._.@S...
    7580:	00000082 400a603f 00000001 00000008     ....?`.@........
    7590:	400a6040 0000000e 000000a2 400a604e     @`.@........N`.@
    75a0:	00000038 000000a2 400a6086 0000008e     8........`.@....
    75b0:	000000a2 400a6114 0000002e 000000a2     .....a.@........
    75c0:	400a6142 00000000 00000008 400a6142     Ba.@........Ba.@
    75d0:	00000011 000000a2 400a6153 00000000     ........Sa.@....
    75e0:	00002808 400a6154 00000044 00000082     .(..Ta.@D.......
    75f0:	400a6198 00000000 00000008 400a6198     .a.@.........a.@
    7600:	0000000a 000000a2 400a61a2 00000036     .........a.@6...
    7610:	000000a2 400a61d8 00000034 000000a2     .....a.@4.......
    7620:	400a620c 0000006c 000000a2 400a6278     .b.@l.......xb.@
    7630:	00000026 000000a2 400a629e 0000000b     &........b.@....
    7640:	000000a2 400a62a9 00000003 000000a2     .....b.@........
    7650:	400a62ac 00000071 000000a2 400a631d     .b.@q........c.@
    7660:	00000000 00000008 400a631d 0000000e     .........c.@....
    7670:	000000a2 400a632b 00000001 00000008     ....+c.@........
    7680:	400a632c 0000000e 000000a2 400a633a     ,c.@........:c.@
    7690:	00000000 00000008 400a633a 00000011     ........:c.@....
    76a0:	000000a2 400a634b 00000000 00002808     ....Kc.@.....(..
    76b0:	400a634c 00000043 00000082 400a638f     Lc.@C........c.@
    76c0:	00000001 00000008 400a6390 0000000a     .........c.@....
    76d0:	000000a2 400a639a 00000036 000000a2     .....c.@6.......
    76e0:	400a63d0 00000034 000000a2 400a6404     .c.@4........d.@
    76f0:	0000006d 000000a2 400a6471 0000001d     m.......qd.@....
    7700:	000000a2 400a648e 0000000b 000000a2     .....d.@........
    7710:	400a6499 00000003 000000a2 400a649c     .d.@.........d.@
    7720:	00000075 000000a2 400a6511 00000000     u........e.@....
    7730:	00000008 400a6511 0000000e 000000a2     .....e.@........
    7740:	400a651f 00000000 00000008 400a651f     .e.@.........e.@
    7750:	0000000e 000000a2 400a652d 00000000     ........-e.@....
    7760:	00000008 400a652d 00000011 000000a2     ....-e.@........
    7770:	400a653e 00000000 00002808 400a6540     >e.@.....(..@e.@
    7780:	0000006a 00000082 400a65aa 00000000     j........e.@....
    7790:	00000008 400a65aa 0000000c 000000a2     .....e.@........
    77a0:	400a65b6 0000004a 000000a2 400a6600     .e.@J........f.@
    77b0:	00000065 000000a2 400a6665 0000002d     e.......ef.@-...
    77c0:	000000a2 400a6692 00000034 000000a2     .....f.@4.......
    77d0:	400a66c6 0000000a 000000a2 400a66d0     .f.@.........f.@
    77e0:	00000006 000000a2 400a66d6 00000044     .........f.@D...
    77f0:	000000a2 400a671a 00000000 00000008     .....g.@........
    7800:	400a671a 00000011 000000a2 400a672b     .g.@........+g.@
    7810:	00000003 00000008 400a672e 00000013     .........g.@....
    7820:	000000a2 400a6741 00000012 000000a2     ....Ag.@........
    7830:	400a6753 00000000 00002808 400a6754     Sg.@.....(..Tg.@
    7840:	00000053 00000082 400a67a7 00000001     S........g.@....
    7850:	00000008 400a67a8 0000000e 000000a2     .....g.@........
    7860:	400a67b6 00000036 000000a2 400a67ec     .g.@6........g.@
    7870:	00000034 000000a2 400a6820 00000065     4....... h.@e...
    7880:	000000a2 400a6885 0000002d 000000a2     .....h.@-.......
    7890:	400a68b2 0000000a 000000a2 400a68bc     .h.@.........h.@
    78a0:	0000000a 000000a2 400a68c6 00000009     .........h.@....
    78b0:	000000a2 400a68cf 0000004f 000000a2     .....h.@O.......
    78c0:	400a691e 00000029 000000a2 400a6947     .i.@).......Gi.@
    78d0:	00000001 00000008 400a6948 00000016     ........Hi.@....
    78e0:	000000a2 400a695e 00000011 000000a2     ....^i.@........
    78f0:	400a696f 00000000 00000008 400a696f     oi.@........oi.@
    7900:	0000000d 000000a2 400a697c 00000000     ........|i.@....
    7910:	00000008 400a697c 0000000e 000000a2     ....|i.@........
    7920:	400a698a 00000000 00000008 400a698a     .i.@.........i.@
    7930:	00000011 000000a2 400a699b 00000000     .........i.@....
    7940:	00002808 400a699c 0000006a 00000082     .(...i.@j.......
    7950:	400a6a06 00000000 00000008 400a6a06     .j.@.........j.@
    7960:	00000010 000000a2 400a6a16 00000036     .........j.@6...
    7970:	000000a2 400a6a4c 00000034 000000a2     ....Lj.@4.......
    7980:	400a6a80 0000006d 000000a2 400a6aed     .j.@m........j.@
    7990:	0000001b 000000a2 400a6b08 0000000a     .........k.@....
    79a0:	000000a2 400a6b12 0000000e 000000a2     .....k.@........
    79b0:	400a6b20 00000079 000000a2 400a6b99      k.@y........k.@
    79c0:	00000000 00000008 400a6b99 0000000e     .........k.@....
    79d0:	000000a2 400a6ba7 00000001 00000008     .....k.@........
    79e0:	400a6ba8 0000000e 000000a2 400a6bb6     .k.@.........k.@
    79f0:	00000000 00000008 400a6bb6 00000011     .........k.@....
    7a00:	000000a2 400a6bc7 00000000 00002808     .....k.@.....(..
    7a10:	400a6bc8 00000048 00000082 400a6c10     .k.@H........l.@
    7a20:	00000000 00002808 400a6c10 00000081     .....(...l.@....
    7a30:	00000082 400a6c91 00000000 00000008     .....l.@........
    7a40:	400a6c91 00000011 000000a2 400a6ca2     .l.@.........l.@
    7a50:	00000000 00000008 400a6ca2 00000004     .........l.@....
    7a60:	000000a2 400a6ca6 00000047 000000a2     .....l.@G.......
    7a70:	400a6ced 00000078 000000a2 400a6d65     .l.@x.......em.@
    7a80:	00000019 000000a2 400a6d7e 00000047     ........~m.@G...
    7a90:	000000a2 400a6dc5 00000001 00000008     .....m.@........
    7aa0:	400a6dc6 00000013 000000a2 400a6dd9     .m.@.........m.@
    7ab0:	00000012 000000a2 400a6deb 00000000     .........m.@....
    7ac0:	00002808 400a6dec 0000007a 00000082     .(...m.@z.......
    7ad0:	400a6e66 00000016 000000a2 400a6e7c     fn.@........|n.@
    7ae0:	00000049 000000a2 400a6ec5 00000074     I........n.@t...
    7af0:	000000a2 400a6f39 0000001b 000000a2     ....9o.@........
    7b00:	400a6f54 00000006 000000a2 400a6f5a     To.@........Zo.@
    7b10:	0000003c 000000a2 400a6f96 0000002b     <........o.@+...
    7b20:	000000a2 400a6fc1 00000000 00000008     .....o.@........
    7b30:	400a6fc1 00000011 000000a2 400a6fd2     .o.@.........o.@
    7b40:	00000000 00000008 400a6fd2 00000023     .........o.@#...
    7b50:	000000a2 400a6ff5 00000001 00000008     .....o.@........
    7b60:	400a6ff6 00000013 000000a2 400a7009     .o.@.........p.@
    7b70:	00000001 00000008 400a700a 00000011     .........p.@....
    7b80:	000000a2 400a701b 00000003 00000008     .....p.@........
    7b90:	400a701e 0000000d 000000a2 400a702b     .p.@........+p.@
    7ba0:	00000001 00000008 400a702c 0000000e     ........,p.@....
    7bb0:	000000a2 400a703a 00000000 00000008     ....:p.@........
    7bc0:	400a703a 00000018 000000a2 400a7052     :p.@........Rp.@
    7bd0:	00000000 00002808 400a7054 000000a2     .....(..Tp.@....
    7be0:	00000082 400a70f6 0000002a 000000a2     .....p.@*.......
    7bf0:	400a7120 0000001c 000000a2 400a713c      q.@........<q.@
    7c00:	00000074 000000a2 400a71b0 00000086     t........q.@....
    7c10:	000000a2 400a7236 00000000 00000008     ....6r.@........
    7c20:	400a7236 00000011 000000a2 400a7247     6r.@........Gr.@
    7c30:	00000001 00000008 400a7248 00000017     ........Hr.@....
    7c40:	000000a2 400a725f 00000001 00000008     ...._r.@........
    7c50:	400a7260 0000000e 000000a2 400a726e     `r.@........nr.@
    7c60:	00000002 00000008 400a7270 00000038     ........pr.@8...
    7c70:	000000a2 400a72a8 0000000b 000000a2     .....r.@........
    7c80:	400a72b3 00000001 00000008 400a72b4     .r.@.........r.@
    7c90:	0000001b 000000a2 400a72cf 00000000     .........r.@....
    7ca0:	00002808 400a72d0 00000026 00000082     .(...r.@&.......
    7cb0:	400a72f6 00000000 00000008 400a72f6     .r.@.........r.@
    7cc0:	0000003f 000000a2 400a7335 00000000     ?.......5s.@....
    7cd0:	00002808 400a7338 0000002a 00000082     .(..8s.@*.......
    7ce0:	400a7362 00000000 00000008 400a7362     bs.@........bs.@
    7cf0:	00000059 000000a2 400a73bb 00000000     Y........s.@....
    7d00:	00002808 400a73bc 00000026 00000082     .(...s.@&.......
    7d10:	400a73e2 00000000 00000008 400a73e2     .s.@.........s.@
    7d20:	00000051 000000a2 400a7433 00000000     Q.......3t.@....
    7d30:	00002808 400a7434 0000003b 00000082     .(..4t.@;.......
    7d40:	400a746f 00000000 00000008 400a746f     ot.@........ot.@
    7d50:	00000058 000000a2 400a74c7 00000000     X........t.@....
    7d60:	00002808 400a74c8 00000039 00000082     .(...t.@9.......
    7d70:	400a7501 00000000 00002808 400a7504     .u.@.....(...u.@
    7d80:	00000039 00000082 400a753d 00000000     9.......=u.@....
    7d90:	00002808 400a7540 00000026 00000082     .(..@u.@&.......
    7da0:	400a7566 00000000 00000008 400a7566     fu.@........fu.@
    7db0:	00000051 000000a2 400a75b7 00000000     Q........u.@....
    7dc0:	00002808 400a75b8 0000003b 00000082     .(...u.@;.......
    7dd0:	400a75f3 00000001 00000008 400a75f4     .u.@.........u.@
    7de0:	00000052 000000a2 400a7646 00000000     R.......Fv.@....
    7df0:	00000008 400a0024 00000001 00000104     ....$..@........
    7e00:	400a0034 00000000 00002904 400a0034     4..@.....)..4..@
    7e10:	00000001 00000104 400a003c 00000000     ........<..@....
    7e20:	00002904 400a003c 00000001 00000104     .)..<..@........
    7e30:	400a0044 00000000 00002904 400a0044     D..@.....)..D..@
    7e40:	00000001 00000104 400a004c 00000000     ........L..@....
    7e50:	00002904 400a004c 00000001 00000104     .)..L..@........
    7e60:	400a0054 00000000 00002904 400a0054     T..@.....)..T..@
    7e70:	00000001 00000104 400a005c 00000000     ........\..@....
    7e80:	00002904 400a005c 00000001 00000104     .)..\..@........
    7e90:	400a0064 00000000 00002904 400a0064     d..@.....)..d..@
    7ea0:	00000001 00000104 400a006c 00000000     ........l..@....
    7eb0:	00002904 400a006c 00000001 00000104     .)..l..@........
    7ec0:	400a0074 00000000 00002904 400a0074     t..@.....)..t..@
    7ed0:	00000001 00000104 400a0090 00000000     ...........@....
    7ee0:	00002904 400a0090 00000001 00000104     .).....@........
    7ef0:	400a0098 00000000 00002904 20000ae0     ...@.....)..... 
    7f00:	00000270 00000001 2000b400 00000020     p..........  ...
    7f10:	00000001 400a2acc 000001d8 00000001     .....*.@........
    7f20:	20009358 0000005a 00000082 200093b2     X.. Z.......... 
    7f30:	00000000 00000008 200093b5 00000018     ........... ....
    7f40:	000000a2 200093cd 00000097 000000a2     ....... ........
    7f50:	20009464 0000001c 000000a2 20009480     d.. ........... 
    7f60:	00000027 000000a2 200094a7 00000000     '.......... ....
    7f70:	00000008 200094a8 00000014 000000a2     ....... ........
    7f80:	200094bc 00000012 000000a2 200094ce     ... ........... 
    7f90:	00000000 00000008 200094d0 00000006     ........... ....
    7fa0:	000000a2 200094d6 0000000e 000000a2     ....... ........
    7fb0:	200094e4 0000000f 000000a2 200094f3     ... ........... 
    7fc0:	00000000 00000008 200094f4 00000011     ........... ....
    7fd0:	000000a2 20009505 00000009 000000a2     ....... ........
    7fe0:	2000950e 0000004b 000000a2 20009559     ... K.......Y.. 
    7ff0:	00000024 000000a2 2000957d 00000003     $.......}.. ....
    8000:	00000092 20009580 00000000 00000008     ....... ........
    8010:	20009580 00000021 000000a2 200095a1     ... !.......... 
    8020:	00000017 000000a2 200095b8 00000000     ........... ....
    8030:	00000008 200095b8 00000005 000000a2     ....... ........
    8040:	200095bd 00000000 00000008 200095bd     ... ........... 
    8050:	00000003 000000a2 200095c0 0000000c     ........... ....
    8060:	000000a2 200095cc 00000009 000000a2     ....... ........
    8070:	200095d5 00000018 000000a2 200095ed     ... ........... 
    8080:	00000017 000000a2 20009604 0000000e     ........... ....
    8090:	000000a2 20009612 00000000 00000008     ....... ........
    80a0:	20009612 0000001b 000000a2 2000962d     ... ........-.. 
    80b0:	00000000 00000008 2000962d 0000001b     ........-.. ....
    80c0:	000000a2 20009648 00000055 000000a2     ....H.. U.......
    80d0:	2000969d 00000003 00000092 200096a0     ... ........... 
    80e0:	00000000 00000008 200096a1 00000019     ........... ....
    80f0:	000000a2 200096ba 00000043 000000a2     ....... C.......
    8100:	200096fd 00000003 00000092 20009700     ... ........... 
    8110:	00000000 00000008 20009700 00000011     ........... ....
    8120:	000000a2 20009711 0000001b 000000a2     ....... ........
    8130:	2000972c 00000000 00000008 2000972c     ,.. ........,.. 
    8140:	00000006 000000a2 20009732 0000000b     ........2.. ....
    8150:	000000a2 2000973d 00000017 000000a2     ....=.. ........
    8160:	20009754 00000000 00000008 20009755     T.. ........U.. 
    8170:	0000001b 000000a2 20009770 0000000e     ........p.. ....
    8180:	000000a2 2000977e 0000001d 000000a2     ....~.. ........
    8190:	2000979b 0000000e 000000a2 200097a9     ... ........... 
    81a0:	00000003 00000092 200097ac 00000000     ........... ....
    81b0:	00000008 200097ae 0000000d 000000a2     ....... ........
    81c0:	200097bb 00000000 00000008 200097bd     ... ........... 
    81d0:	0000000f 000000a2 200097cc 00000009     ........... ....
    81e0:	000000a2 200097d5 00000024 000000a2     ....... $.......
    81f0:	200097f9 00000018 000000a2 20009811     ... ........... 
    8200:	0000000e 000000a2 2000981f 00000000     ........... ....
    8210:	00000008 20009820 00000007 000000a2     .... .. ........
    8220:	20009827 00000000 00002808 20009828     '.. .....(..(.. 
    8230:	00000026 00000082 2000984e 00000000     &.......N.. ....
    8240:	00000008 20009850 00000003 000000a2     ....P.. ........
    8250:	20009853 00000000 00000008 20009855     S.. ........U.. 
    8260:	0000000f 000000a2 20009864 0000003b     ........d.. ;...
    8270:	000000a2 2000989f 00000000 00000008     ....... ........
    8280:	200098a0 0000000c 00000082 200098ac     ... ........... 
    8290:	0000000c 000000a2 200098b8 00000000     ........... ....
    82a0:	00000008 200098bb 0000000f 00000082     ....... ........
    82b0:	200098ca 00000003 00000008 200098cd     ... ........... 
    82c0:	0000004b 00000082 20009918 0000001d     K.......... ....
    82d0:	000000a2 20009935 0000000c 000000a2     ....5.. ........
    82e0:	20009941 00000000 00000008 20009941     A.. ........A.. 
    82f0:	00000027 00000082 20009968 00000037     '.......h.. 7...
    8300:	000000a2 2000999f 00000000 00000008     ....... ........
    8310:	2000999f 0000000f 00000082 200099ae     ... ........... 
    8320:	00000000 00000008 200099ae 0000000f     ........... ....
    8330:	00000082 200099bd 00000000 00000008     ....... ........
    8340:	200099be 0000001a 00000082 200099d8     ... ........... 
    8350:	00000066 000000a2 20009a3e 00000000     f.......>.. ....
    8360:	00000008 20009a3e 0000000f 00000082     ....>.. ........
    8370:	20009a4d 00000000 00000008 20009a4e     M.. ........N.. 
    8380:	0000000f 00000082 20009a5d 00000000     ........].. ....
    8390:	00000008 20009a5e 0000000f 00000082     ....^.. ........
    83a0:	20009a6d 00000000 00000008 20009a6e     m.. ........n.. 
    83b0:	0000000f 00000082 20009a7d 00000003     ........}.. ....
    83c0:	00000008 20009a80 0000000c 00000082     ....... ........
    83d0:	20009a8c 0000000c 000000a2 20009a98     ... ........... 
    83e0:	00000000 00000008 20009a9a 0000000f     ........... ....
    83f0:	00000082 20009aa9 00000000 00000008     ....... ........
    8400:	20009aa9 0000000f 00000082 20009ab8     ... ........... 
    8410:	00000000 00000008 20009ab8 0000002a     ........... *...
    8420:	000000a2 20009ae2 00000000 00000008     ....... ........
    8430:	20009ae4 00000014 000000a2 20009af8     ... ........... 
    8440:	0000002c 000000a2 20009b24 00000000     ,.......$.. ....
    8450:	00002808 20009b24 00000028 00000082     .(..$.. (.......
    8460:	20009b4c 00000088 000000a2 20009bd4     L.. ........... 
    8470:	00000003 000000a2 20009bd7 00000000     ........... ....
    8480:	00000008 20009bd8 00000003 000000a2     ....... ........
    8490:	20009bdb 00000000 00000008 20009bdd     ... ........... 
    84a0:	0000000f 000000a2 20009bec 00000064     ........... d...
    84b0:	000000a2 20009c50 00000016 000000a2     ....P.. ........
    84c0:	20009c66 0000000e 000000a2 20009c74     f.. ........t.. 
    84d0:	00000014 000000a2 20009c88 00000000     ........... ....
    84e0:	00000008 20009c88 00000006 000000a2     ....... ........
    84f0:	20009c8e 00000014 000000a2 20009ca2     ... ........... 
    8500:	0000001d 000000a2 20009cbf 00000000     ........... ....
    8510:	00000008 20009cc0 00000003 000000a2     ....... ........
    8520:	20009cc3 00000000 00000008 20009cc4     ... ........... 
    8530:	00000003 000000a2 20009cc7 00000000     ........... ....
    8540:	00000008 20009cc8 0000001c 000000a2     ....... ........
    8550:	20009ce4 00000000 00000008 20009ce4     ... ........... 
    8560:	0000001c 000000a2 20009d00 00000000     ........... ....
    8570:	00000008 20009d00 0000004e 00000082     ....... N.......
    8580:	20009d4e 00000000 00000008 20009d50     N.. ........P.. 
    8590:	0000001c 000000a2 20009d6c 00000000     ........l.. ....
    85a0:	00000008 20009d6c 00000028 000000a2     ....l.. (.......
    85b0:	20009d94 00000000 00000008 20009d94     ... ........... 
    85c0:	00000023 000000a2 20009db7 00000000     #.......... ....
    85d0:	00000008 20009db8 00000014 000000a2     ....... ........
    85e0:	20009dcc 0000002b 000000a2 20009df7     ... +.......... 
    85f0:	00000003 00000092 20009dfa 00000000     ........... ....
    8600:	00002808 20009dfc 00000133 00000082     .(..... 3.......
    8610:	20009f2f 00000000 00002808 20009f30     /.. .....(..0.. 
    8620:	00000014 00000082 20009f44 00000006     ........D.. ....
    8630:	000000a2 20009f4a 00000003 000000a2     ....J.. ........
    8640:	20009f4d 00000000 00000008 20009f4d     M.. ........M.. 
    8650:	00000009 000000a2 20009f56 00000000     ........V.. ....
    8660:	00000008 20009f59 00000040 000000a2     ....Y.. @.......
    8670:	20009f99 00000006 000000a2 20009f9f     ... ........... 
    8680:	00000000 00002808 20009fa0 00000002     .....(..... ....
    8690:	00000082 20009fa2 00000000 00002808     ....... .....(..
    86a0:	20009fa4 00000002 00000082 20009fa6     ... ........... 
    86b0:	00000000 00002808 20009fa8 00000013     .....(..... ....
    86c0:	00000082 20009fbb 00000000 00002808     ....... .....(..
    86d0:	20009fbc 00000013 00000082 20009fcf     ... ........... 
    86e0:	00000000 00002808 20009fd0 00000014     .....(..... ....
    86f0:	00000082 20009fe4 00000000 00002808     ....... .....(..
    8700:	20009fe4 00000013 00000082 20009ff7     ... ........... 
    8710:	00000000 00002808 20009ff8 00000015     .....(..... ....
    8720:	00000082 2000a00d 00000003 000000a2     ....... ........
    8730:	2000a010 00000000 00000008 2000a011     ... ........... 
    8740:	00000007 00000082 2000a018 00000000     ........... ....
    8750:	00000008 2000a018 00000015 000000a2     ....... ........
    8760:	2000a02d 00000005 000000a2 2000a032     -.. ........2.. 
    8770:	00000014 000000a2 2000a046 0000000a     ........F.. ....
    8780:	000000a2 2000a050 00000000 00000008     ....P.. ........
    8790:	2000a051 0000001a 000000a2 2000a06b     Q.. ........k.. 
    87a0:	00000000 00000008 2000a06d 0000000e     ........m.. ....
    87b0:	000000a2 2000a07b 00000000 00002808     ....{.. .....(..
    87c0:	2000a07c 00000073 00000082 2000a0ef     |.. s.......... 
    87d0:	00000000 00000008 2000a0f0 00000021     ........... !...
    87e0:	00000082 2000a111 00000000 00002808     ....... .....(..
    87f0:	2000a114 0000000d 00000082 2000a121     ... ........!.. 
    8800:	00000000 00002808 2000a124 0000002c     .....(..$.. ,...
    8810:	00000082 2000a150 00000000 00002808     ....P.. .....(..
    8820:	2000a150 00000034 00000082 2000a184     P.. 4.......... 
    8830:	00000000 00000008 2000a184 00000009     ........... ....
    8840:	000000a2 2000a18d 00000000 00002808     ....... .....(..
    8850:	2000a190 00000008 00000082 2000a198     ... ........... 
    8860:	00000000 00002808 2000a198 0000001e     .....(..... ....
    8870:	00000082 2000a1b6 00000000 00002808     ....... .....(..
    8880:	2000a1b8 00000060 00000082 2000a218     ... `.......... 
    8890:	00000027 000000a2 2000a23f 00000000     '.......?.. ....
    88a0:	00000008 2000a240 00000014 000000a2     ....@.. ........
    88b0:	2000a254 00000000 00002808 2000a254     T.. .....(..T.. 
    88c0:	00000028 00000082 2000a27c 00000019     (.......|.. ....
    88d0:	000000a2 2000a295 00000002 000000a2     ....... ........
    88e0:	2000a297 0000001f 00000092 2000a2b6     ... ........... 
    88f0:	00000002 000000a2 2000a2b8 0000001d     ........... ....
    8900:	00000092 2000a2d5 00000002 000000a2     ....... ........
    8910:	2000a2d7 0000000b 000000a2 2000a2e2     ... ........... 
    8920:	00000024 000000a2 2000a306 00000000     $.......... ....
    8930:	00000008 2000a308 00000017 000000a2     ....... ........
    8940:	2000a31f 00000000 00002808 2000a320     ... .....(.. .. 
    8950:	00000028 00000082 2000a348 00000030     (.......H.. 0...
    8960:	000000a2 2000a378 00000012 000000a2     ....x.. ........
    8970:	2000a38a 00000000 00000008 2000a38a     ... ........... 
    8980:	00000009 000000a2 2000a393 00000000     ........... ....
    8990:	00002808 2000a394 00000014 00000082     .(..... ........
    89a0:	2000a3a8 00000000 00000008 2000a3a8     ... ........... 
    89b0:	00000004 000000a2 2000a3ac 00000000     ........... ....
    89c0:	00002808 2000a3ac 00000024 00000082     .(..... $.......
    89d0:	2000a3d0 00000014 000000a2 2000a3e4     ... ........... 
    89e0:	00000008 000000a2 2000a3ec 00000025     ........... %...
    89f0:	000000a2 2000a411 00000000 00000008     ....... ........
    8a00:	2000a411 00000014 000000a2 2000a425     ... ........%.. 
    8a10:	00000000 00002808 2000a428 0000001d     .....(..(.. ....
    8a20:	00000082 2000a445 00000011 000000a2     ....E.. ........
    8a30:	2000a456 00000013 000000a2 2000a469     V.. ........i.. 
    8a40:	00000012 000000a2 2000a47b 0000000f     ........{.. ....
    8a50:	000000a2 2000a48a 0000000b 000000a2     ....... ........
    8a60:	2000a495 00000025 000000a2 2000a4ba     ... %.......... 
    8a70:	00000000 00000008 2000a4bc 00000017     ........... ....
    8a80:	000000a2 2000a4d3 00000000 00002808     ....... .....(..
    8a90:	2000a4d4 00000016 00000082 2000a4ea     ... ........... 
    8aa0:	00000000 00000008 2000a4ea 00000004     ........... ....
    8ab0:	000000a2 2000a4ee 00000000 00002808     ....... .....(..
    8ac0:	2000a4f0 00000008 00000082 2000a4f8     ... ........... 
    8ad0:	00000000 00002808 2000a4f8 00000014     .....(..... ....
    8ae0:	00000082 2000a50c 00000000 00000008     ....... ........
    8af0:	2000a50c 00000004 000000a2 2000a510     ... ........... 
    8b00:	00000000 00002808 2000a510 0000001a     .....(..... ....
    8b10:	00000082 2000a52a 00000002 00000092     ....*.. ........
    8b20:	2000a52c 00000000 00002808 2000a52c     ,.. .....(..,.. 
    8b30:	00000023 00000082 2000a54f 00000000     #.......O.. ....
    8b40:	00002808 2000a550 0000001a 00000082     .(..P.. ........
    8b50:	2000a56a 00000019 00000092 2000a583     j.. ........... 
    8b60:	00000007 000000a2 2000a58a 00000000     ........... ....
    8b70:	00002808 2000a58c 00000031 00000082     .(..... 1.......
    8b80:	2000a5bd 00000007 000000a2 2000a5c4     ... ........... 
    8b90:	00000000 00002808 2000a5c4 0000001f     .....(..... ....
    8ba0:	00000082 2000a5e3 00000000 00002808     ....... .....(..
    8bb0:	2000a5e4 00000030 00000082 2000a614     ... 0.......... 
    8bc0:	00000005 00000092 2000a619 00000000     ........... ....
    8bd0:	00000008 2000a619 00000026 000000a2     ....... &.......
    8be0:	2000a63f 00000005 00000092 2000a644     ?.. ........D.. 
    8bf0:	00000000 00000008 2000a645 00000026     ........E.. &...
    8c00:	000000a2 2000a66b 00000005 00000092     ....k.. ........
    8c10:	2000a670 00000000 00000008 2000a670     p.. ........p.. 
    8c20:	0000000d 000000a2 2000a67d 00000000     ........}.. ....
    8c30:	00002808 2000a680 00000030 00000082     .(..... 0.......
    8c40:	2000a6b0 00000005 00000092 2000a6b5     ... ........... 
    8c50:	00000000 00000008 2000a6b5 00000026     ........... &...
    8c60:	000000a2 2000a6db 00000005 00000092     ....... ........
    8c70:	2000a6e0 00000000 00000008 2000a6e1     ... ........... 
    8c80:	00000026 000000a2 2000a707 00000005     &.......... ....
    8c90:	00000092 2000a70c 00000000 00000008     ....... ........
    8ca0:	2000a70c 0000000d 000000a2 2000a719     ... ........... 
    8cb0:	00000000 00002808 2000a71c 00000031     .....(..... 1...
    8cc0:	00000082 2000a74d 00000000 00000008     ....M.. ........
    8cd0:	2000a74d 00000031 000000a2 2000a77e     M.. 1.......~.. 
    8ce0:	00000000 00002808 2000a780 0000002d     .....(..... -...
    8cf0:	00000082 2000a7ad 00000008 000000a2     ....... ........
    8d00:	2000a7b5 00000000 00000008 2000a7b5     ... ........... 
    8d10:	00000003 000000a2 2000a7b8 00000018     ........... ....
    8d20:	000000a2 2000a7d0 00000015 000000a2     ....... ........
    8d30:	2000a7e5 00000000 00000008 2000a7e5     ... ........... 
    8d40:	00000006 000000a2 2000a7eb 0000003e     ........... >...
    8d50:	000000a2 2000a829 00000000 00000008     ....).. ........
    8d60:	2000a829 0000001c 000000a2 2000a845     ).. ........E.. 
    8d70:	00000000 00000008 2000a845 0000000c     ........E.. ....
    8d80:	000000a2 2000a851 00000000 00002808     ....Q.. .....(..
    8d90:	2000a854 00000010 00000082 2000a864     T.. ........d.. 
    8da0:	00000007 000000a2 2000a86b 00000000     ........k.. ....
    8db0:	00000008 2000a86d 0000004c 000000a2     ....m.. L.......
    8dc0:	2000a8b9 00000000 00000008 2000a8b9     ... ........... 
    8dd0:	0000000b 00000082 2000a8c4 00000000     ........... ....
    8de0:	00002808 2000a8c4 00000020 00000082     .(.....  .......
    8df0:	2000a8e4 00000010 000000a2 2000a8f4     ... ........... 
    8e00:	00000000 00000008 2000a8f4 00000008     ........... ....
    8e10:	000000a2 2000a8fc 00000028 000000a2     ....... (.......
    8e20:	2000a924 00000000 00002808 2000a924     $.. .....(..$.. 
    8e30:	00000036 00000082 2000a95a 00000003     6.......Z.. ....
    8e40:	000000a2 2000a95d 00000015 000000a2     ....].. ........
    8e50:	2000a972 00000000 00000008 2000a975     r.. ........u.. 
    8e60:	00000006 000000a2 2000a97b 00000021     ........{.. !...
    8e70:	000000a2 2000a99c 00000038 000000a2     ....... 8.......
    8e80:	2000a9d4 00000000 00000008 2000a9d4     ... ........... 
    8e90:	00000008 000000a2 2000a9dc 00000000     ........... ....
    8ea0:	00000008 2000a9dc 00000021 000000a2     ....... !.......
    8eb0:	2000a9fd 00000000 00000008 2000a9fd     ... ........... 
    8ec0:	00000015 000000a2 2000aa12 00000000     ........... ....
    8ed0:	00000008 2000aa12 00000008 000000a2     ....... ........
    8ee0:	2000aa1a 00000000 00000008 2000aa1c     ... ........... 
    8ef0:	00000015 000000a2 2000aa31 00000000     ........1.. ....
    8f00:	00000008 2000aa31 00000008 000000a2     ....1.. ........
    8f10:	2000aa39 00000000 00002808 2000aa3c     9.. .....(..<.. 
    8f20:	00000022 00000082 2000aa5e 00000000     ".......^.. ....
    8f30:	00002808 2000aa60 0000000d 00000082     .(..`.. ........
    8f40:	2000aa6d 00000000 00002808 2000aa70     m.. .....(..p.. 
    8f50:	0000004d 00000082 2000aabd 00000000     M.......... ....
    8f60:	00000008 2000aabd 0000002c 000000a2     ....... ,.......
    8f70:	2000aae9 0000000b 000000a2 2000aaf4     ... ........... 
    8f80:	00000009 000000a2 2000aafd 00000010     ........... ....
    8f90:	00000092 2000ab0d 00000064 00000092     ....... d.......
    8fa0:	2000ab71 00000000 00000008 2000ab71     q.. ........q.. 
    8fb0:	0000003b 000000a2 2000abac 00000000     ;.......... ....
    8fc0:	00000008 2000abac 0000000f 000000a2     ....... ........
    8fd0:	2000abbb 00000000 00000008 2000abbc     ... ........... 
    8fe0:	00000035 000000a2 2000abf1 00000000     5.......... ....
    8ff0:	00000008 2000abf1 0000003b 000000a2     ....... ;.......
    9000:	2000ac2c 00000000 00000008 2000ac2c     ,.. ........,.. 
    9010:	00000038 000000a2 2000ac64 00000000     8.......d.. ....
    9020:	00002808 2000ac64 00000024 00000082     .(..d.. $.......
    9030:	2000ac88 00000015 000000a2 2000ac9d     ... ........... 
    9040:	00000000 00000008 2000ac9d 00000006     ........... ....
    9050:	000000a2 2000aca3 0000002e 000000a2     ....... ........
    9060:	2000acd1 00000008 000000a2 2000acd9     ... ........... 
    9070:	00000008 000000a2 2000ace1 00000020     ...........  ...
    9080:	000000a2 2000ad01 00000005 000000a2     ....... ........
    9090:	2000ad06 00000000 00000008 2000ad08     ... ........... 
    90a0:	00000015 00000082 2000ad1d 00000000     ........... ....
    90b0:	00000008 2000ad1e 00000010 000000a2     ....... ........
    90c0:	2000ad2e 00000002 000000a2 2000ad30     ... ........0.. 
    90d0:	00000014 000000a2 2000ad44 00000010     ........D.. ....
    90e0:	000000a2 2000ad54 00000010 000000a2     ....T.. ........
    90f0:	2000ad64 00000006 000000a2 2000ad6a     d.. ........j.. 
    9100:	00000003 00000092 2000ad6d 00000000     ........m.. ....
    9110:	00000008 2000ad6d 00000006 000000a2     ....m.. ........
    9120:	2000ad73 00000000 00000008 2000ad75     s.. ........u.. 
    9130:	0000000b 000000a2 2000ad80 0000001a     ........... ....
    9140:	000000a2 2000ad9a 00000003 00000092     ....... ........
    9150:	2000ad9d 00000000 00000008 2000ad9d     ... ........... 
    9160:	00000011 000000a2 2000adae 00000002     ........... ....
    9170:	000000a2 2000adb0 00000010 000000a2     ....... ........
    9180:	2000adc0 00000011 000000a2 2000add1     ... ........... 
    9190:	00000000 00000008 2000add1 0000000e     ........... ....
    91a0:	000000a2 2000addf 00000000 00000008     ....... ........
    91b0:	2000ade1 00000007 000000a2 2000ade8     ... ........... 
    91c0:	00000002 000000a2 2000adea 0000003c     ........... <...
    91d0:	000000a2 2000ae26 0000000e 00000092     ....&.. ........
    91e0:	2000ae34 00000014 000000a2 2000ae48     4.. ........H.. 
    91f0:	00000000 00000008 2000ae48 00000012     ........H.. ....
    9200:	000000a2 2000ae5a 00000000 00000008     ....Z.. ........
    9210:	2000ae5c 00000010 000000a2 2000ae6c     \.. ........l.. 
    9220:	00000000 00002808 2000ae6c 00000016     .....(..l.. ....
    9230:	00000082 2000ae82 00000000 00000008     ....... ........
    9240:	2000ae85 00000040 000000a2 2000aec5     ... @.......... 
    9250:	00000006 000000a2 2000aecb 00000000     ........... ....
    9260:	00000008 2000aecc 0000000d 000000a2     ....... ........
    9270:	2000aed9 00000000 00002808 2000aedc     ... .....(..... 
    9280:	00000017 00000082 2000aef3 00000000     ........... ....
    9290:	00000008 2000aef4 00000009 000000a2     ....... ........
    92a0:	2000aefd 00000000 00002808 2000af00     ... .....(..... 
    92b0:	0000000c 00000082 2000af0c 00000015     ........... ....
    92c0:	000000a2 2000af21 00000000 00000008     ....!.. ........
    92d0:	2000af21 00000006 000000a2 2000af27     !.. ........'.. 
    92e0:	00000039 000000a2 2000af60 00000003     9.......`.. ....
    92f0:	000000a2 2000af63 00000000 00000008     ....c.. ........
    9300:	2000af65 00000027 000000a2 2000af8c     e.. '.......... 
    9310:	0000004f 000000a2 2000afdb 00000023     O.......... #...
    9320:	000000a2 2000affe 00000015 000000a2     ....... ........
    9330:	2000b013 00000000 00000008 2000b015     ... ........... 
    9340:	00000006 000000a2 2000b01b 0000004a     ........... J...
    9350:	000000a2 2000b065 00000009 000000a2     ....e.. ........
    9360:	2000b06e 00000006 000000a2 2000b074     n.. ........t.. 
    9370:	00000000 00000008 2000b074 00000019     ........t.. ....
    9380:	000000a2 2000b08d 00000000 00000008     ....... ........
    9390:	2000b08d 00000006 000000a2 2000b093     ... ........... 
    93a0:	00000000 00000008 2000b094 00000006     ........... ....
    93b0:	000000a2 2000b09a 00000000 00000008     ....... ........
    93c0:	400a00a0 0000003c 00000104 400a00e0     ...@<..........@
    93d0:	00000000 00004904 400a00e0 00000001     .....I.....@....
    93e0:	00000104 400a00e8 00000000 00003904     .......@.....9..
    93f0:	400a00e8 00000001 00000104 400a00f0     ...@...........@
    9400:	00000000 00004904 2000b440 0000004a     .....I..@.. J...
    9410:	00000082 2000b48a 00000000 00000008     ....... ........
    9420:	2000b48c 00000003 000000a2 2000b48f     ... ........... 
    9430:	00000000 00002808 2000b490 00000037     .....(..... 7...
    9440:	00000082 2000b4c7 00000000 00002808     ....... .....(..
    9450:	2000b4c8 00000035 00000082 2000b4fd     ... 5.......... 
    9460:	0000002c 000000a2 2000b529 00000000     ,.......).. ....
    9470:	00000008 2000b529 00000014 000000a2     ....).. ........
    9480:	2000b53d 00000000 00000008 400a7648     =.. ........Hv.@
    9490:	0000002b 00000082 400a7673 00000000     +.......sv.@....
    94a0:	00002808 400a7674 00000096 00000082     .(..tv.@........
    94b0:	400a770a 00000002 00000008 400a770c     .w.@.........w.@
    94c0:	00000003 000000a2 400a770f 00000001     .........w.@....
    94d0:	00000008 400a7710 00000014 000000a2     .....w.@........
    94e0:	400a7724 00000000 00002808 400a7724     $w.@.....(..$w.@
    94f0:	0000002e 00000082 400a7752 00000000     ........Rw.@....
    9500:	00002808 400a7754 00000019 00000082     .(..Tw.@........
    9510:	400a776d 0000000f 000000a2 400a777c     mw.@........|w.@
    9520:	00000002 00000008 400a777e 0000001c     ........~w.@....
    9530:	000000a2 400a779a 00000000 00000008     .....w.@........
    9540:	400a779a 0000001c 000000a2 400a77b6     .w.@.........w.@
    9550:	00000000 00002808 400a77b8 00000004     .....(...w.@....
    9560:	00000082 400a77bc 00000000 00002808     .....w.@.....(..
    9570:	400a77bc 00000004 00000082 400a77c0     .w.@.........w.@
    9580:	00000000 00002808 400a77c0 00000045     .....(...w.@E...
    9590:	00000082 400a7805 00000001 00000008     .....x.@........
    95a0:	400a7806 00000059 000000a2 400a785f     .x.@Y......._x.@
    95b0:	00000001 00000008 400a7860 0000000b     ........`x.@....
    95c0:	000000a2 400a786b 00000000 00002808     ....kx.@.....(..
    95d0:	400a786c 00000004 00000082 400a7870     lx.@........px.@
    95e0:	00000000 00002808 400a7870 00000047     .....(..px.@G...
    95f0:	00000082 400a78b7 00000001 00000008     .....x.@........
    9600:	400a78b8 00000056 000000a2 400a790e     .x.@V........y.@
    9610:	00000000 00000008 400a790e 00000009     .........y.@....
    9620:	000000a2 400a7917 00000000 00002808     .....y.@.....(..
    9630:	400a7918 00000034 00000082 400a794c     .y.@4.......Ly.@
    9640:	00000017 000000a2 400a7963 00000001     ........cy.@....
    9650:	00000008 400a7964 00000048 000000a2     ....dy.@H.......
    9660:	400a79ac 00000014 000000a2 400a79c0     .y.@.........y.@
    9670:	00000000 00000008 400a79c0 00000055     .........y.@U...
    9680:	000000a2 400a7a15 00000000 00002808     .....z.@.....(..
    9690:	400a7a18 00000034 00000082 400a7a4c     .z.@4.......Lz.@
    96a0:	00000017 000000a2 400a7a63 00000001     ........cz.@....
    96b0:	00000008 400a7a64 00000048 000000a2     ....dz.@H.......
    96c0:	400a7aac 00000014 000000a2 400a7ac0     .z.@.........z.@
    96d0:	00000000 00000008 400a7ac0 00000055     .........z.@U...
    96e0:	000000a2 400a7b15 00000000 00002808     .....{.@.....(..
    96f0:	400a7b18 0000002f 00000082 400a7b47     .{.@/.......G{.@
    9700:	00000001 00000008 400a7b48 0000003d     ........H{.@=...
    9710:	000000a2 400a7b85 00000000 00002808     .....{.@.....(..
    9720:	400a7b88 0000001b 00000082 400a7ba3     .{.@.........{.@
    9730:	00000001 00000008 400a7ba4 00000002     .........{.@....
    9740:	000000a2 400a7ba6 0000000e 000000a2     .....{.@........
    9750:	400a7bb4 0000001a 000000a2 400a7bce     .{.@.........{.@
    9760:	00000003 00000092 400a7bd1 00000000     .........{.@....
    9770:	00000008 400a7bd1 0000000d 000000a2     .....{.@........
    9780:	400a7bde 00000002 00000008 400a7be0     .{.@.........{.@
    9790:	00000009 000000a2 400a7be9 00000019     .........{.@....
    97a0:	000000a2 400a7c02 00000003 00000092     .....|.@........
    97b0:	400a7c05 00000000 00000008 400a7c05     .|.@.........|.@
    97c0:	0000000f 000000a2 400a7c14 00000000     .........|.@....
    97d0:	00002808 400a7c14 0000005e 00000082     .(...|.@^.......
    97e0:	400a7c72 00000028 00000092 400a7c9a     r|.@(........|.@
    97f0:	00000017 00000092 400a7cb1 00000016     .........|.@....
    9800:	00000092 400a7cc7 00000001 00000008     .....|.@........
    9810:	400a7cc8 00000002 000000a2 400a7cca     .|.@.........|.@
    9820:	0000000a 000000a2 400a7cd4 0000001a     .........|.@....
    9830:	000000a2 400a7cee 00000003 00000092     .....|.@........
    9840:	400a7cf1 00000000 00000008 400a7cf1     .|.@.........|.@
    9850:	0000000d 000000a2 400a7cfe 00000000     .........|.@....
    9860:	00000008 400a7cfe 0000000b 000000a2     .....|.@........
    9870:	400a7d09 00000003 000000a2 400a7d0c     .}.@.........}.@
    9880:	0000001f 000000a2 400a7d2b 00000003     ........+}.@....
    9890:	00000092 400a7d2e 00000002 00000008     .....}.@........
    98a0:	400a7d30 00000047 000000a2 400a7d77     0}.@G.......w}.@
    98b0:	00000000 00002808 400a7d78 0000001a     .....(..x}.@....
    98c0:	00000082 400a7d92 00000000 00002808     .....}.@.....(..
    98d0:	400a7d94 0000001b 00000082 400a7daf     .}.@.........}.@
    98e0:	00000000 00002808 400a7db0 0000000e     .....(...}.@....
    98f0:	00000082 400a7dbe 00000018 000000a2     .....}.@........
    9900:	400a7dd6 00000002 00000008 400a7dd8     .}.@.........}.@
    9910:	00000006 000000a2 400a7dde 00000000     .........}.@....
    9920:	00002808 400a7de0 0000005c 00000082     .(...}.@\.......
    9930:	400a7e3c 00000003 000000a2 400a7e3f     <~.@........?~.@
    9940:	00000001 00000008 400a7e40 0000000b     ........@~.@....
    9950:	000000a2 400a7e4b 00000000 00002808     ....K~.@.....(..
    9960:	400a7e4c 00000002 00000082 400a7e4e     L~.@........N~.@
    9970:	00000000 00002808 400a7e50 00000014     .....(..P~.@....
    9980:	00000082 400a7e64 00000036 000000a2     ....d~.@6.......
    9990:	400a7e9a 0000000b 00000092 400a7ea5     .~.@.........~.@
    99a0:	00000000 00000008 400a7ea5 00000006     .........~.@....
    99b0:	000000a2 400a7eab 00000001 00000008     .....~.@........
    99c0:	400a7eac 00000006 000000a2 400a7eb2     .~.@.........~.@
    99d0:	00000000 00002808 400a7eb4 0000024b     .....(...~.@K...
    99e0:	00000082 400a80ff 00000001 00000008     .......@........
    99f0:	400a8100 00000003 000000a2 400a8103     ...@...........@
    9a00:	00000001 00000008 400a8104 00000003     ...........@....
    9a10:	000000a2 400a8107 00000001 00000008     .......@........
    9a20:	400a8108 00000003 000000a2 400a810b     ...@...........@
    9a30:	00000001 00000008 400a810c 00000003     ...........@....
    9a40:	000000a2 400a810f 00000000 00002808     .......@.....(..
    9a50:	400a8110 0000000f 00000082 400a811f     ...@...........@
    9a60:	00000003 000000a2 400a8122 00000000     ........"..@....
    9a70:	00002808 400a8124 000000cb 00000082     .(..$..@........
    9a80:	400a81ef 00000000 00002808 400a81f0     ...@.....(.....@
    9a90:	0000007a 00000082 400a826a 00000000     z.......j..@....
    9aa0:	00000008 400a826a 00000007 000000a2     ....j..@........
    9ab0:	400a8271 0000004b 000000a2 400a82bc     q..@K..........@
    9ac0:	00000003 00000092 400a82bf 00000001     ...........@....
    9ad0:	00000008 400a82c0 00000007 000000a2     .......@........
    9ae0:	400a82c7 00000000 00002808 400a82c8     ...@.....(.....@
    9af0:	000001e8 00000082 400a84b0 00000051     ...........@Q...
    9b00:	00000092 400a8501 0000003f 00000092     .......@?.......
    9b10:	400a8540 00000005 000000a2 400a8545     @..@........E..@
    9b20:	0000002f 00000092 400a8574 00000005     /.......t..@....
    9b30:	000000a2 400a8579 00000021 00000092     ....y..@!.......
    9b40:	400a859a 00000005 000000a2 400a859f     ...@...........@
    9b50:	00000015 00000092 400a85b4 00000009     ...........@....
    9b60:	000000a2 400a85bd 00000000 00002808     .......@.....(..
    9b70:	400a85c0 0000006a 00000082 400a862a     ...@j.......*..@
    9b80:	0000007c 00000092 400a86a6 0000000d     |..........@....
    9b90:	00000092 400a86b3 00000000 00002808     .......@.....(..
    9ba0:	400a86b4 00000011 00000082 400a86c5     ...@...........@
    9bb0:	00000000 00002808 400a86c8 0000001c     .....(.....@....
    9bc0:	00000082 400a86e4 00000000 00002808     .......@.....(..
    9bd0:	400a86e4 00000031 00000082 400a8715     ...@1..........@
    9be0:	00000000 00002808 400a8718 00000135     .....(.....@5...
    9bf0:	00000082 400a884d 00000000 00002808     ....M..@.....(..
    9c00:	400a8850 0000000d 00000082 400a885d     P..@........]..@
    9c10:	00000000 00000008 400a885d 00000004     ........]..@....
    9c20:	000000a2 400a8861 00000000 00002808     ....a..@.....(..
    9c30:	400a8864 0000002f 00000082 400a8893     d..@/..........@
    9c40:	00000003 00000092 400a8896 00000002     ...........@....
    9c50:	00000008 400a8898 00000018 000000a2     .......@........
    9c60:	400a88b0 00000000 00000008 1ffa0800     ...@............
    9c70:	0000000a 00000104 1ffa0810 00000000     ................
    9c80:	00004904 1ffa0810 0000006c 00000104     .I......l.......
    9c90:	1ffa0880 00000000 00004904 1ffa0880     .........I......
    9ca0:	00000002 00000104 1ffa088c 00000003     ................
    9cb0:	00000104 1ffa0898 00000002 00000104     ................
    9cc0:	1ffa08a4 00000002 00000104 1ffa08b0     ................
    9cd0:	00000002 00000104 1ffa08bc 00000003     ................
    9ce0:	00000104 1ffa08d0 00000000 00004804     .............H..
    9cf0:	400a0100 00000011 00000104 400a0114     ...@...........@
    9d00:	00000000 00002904 400a0114 00000012     .....).....@....
    9d10:	00000104 400a0128 00000000 00003904     ....(..@.....9..
    9d20:	400a0128 00000012 00000104 400a013c     (..@........<..@
    9d30:	00000000 00002904 400a013c 00000016     .....)..<..@....
    9d40:	00000104 400a0154 00000000 00002904     ....T..@.....)..
    9d50:	400a0154 0000001b 00000104 400a0170     T..@........p..@
    9d60:	00000000 00004904 400a0170 0000001a     .....I..p..@....
    9d70:	00000104 400a018c 00000000 00002904     .......@.....)..
    9d80:	400a018c 0000001a 00000104 400a01a8     ...@...........@
    9d90:	00000000 00003904 400a01a8 00000002     .....9.....@....
    9da0:	00001904 400a01aa 00000001 00000104     .......@........
    9db0:	400a01ac 00000000 00002904 400a01ac     ...@.....).....@
    9dc0:	00000001 00000104 400a01b4 00000000     ...........@....
    9dd0:	00002904 400a01b4 00000004 00000104     .).....@........
    9de0:	400a01c0 00000000 00004904 400a01c0     ...@.....I.....@
    9df0:	00000004 00000104 400a01d0 00000000     ...........@....
    9e00:	00004904 400a01d0 00000001 00000104     .I.....@........
    9e10:	400a01d8 00000000 00003904 400a01d8     ...@.....9.....@
    9e20:	00000001 00000104 400a01e0 00000000     ...........@....
    9e30:	00004904 400a01e0 00000002 00000104     .I.....@........
    9e40:	400a01f8 00000000 00003904 400a01f8     ...@.....9.....@
    9e50:	00000001 00000104 400a0200 00000000     ...........@....
    9e60:	00004904 400a0200 00000001 00000104     .I.....@........
    9e70:	400a0208 00000000 00003904 400a0208     ...@.....9.....@
    9e80:	00000001 00000104 400a0210 00000080     ...........@....
    9e90:	00004904 400a0290 00000011 00000104     .I.....@........
    9ea0:	400a02b0 00000000 00004804 400a88b0     ...@.....H.....@
    9eb0:	00000004 00000104 400a88b8 00000000     ...........@....
    9ec0:	00003904 400a88b8 000001a8 00004904     .9.....@.....I..
    9ed0:	400a8a60 00000194 00000104 400a8c00     `..@...........@
    9ee0:	00000030 00004904 400a8c30 00000004     0....I..0..@....
    9ef0:	00000104 400a8c38 00000000 00003904     ....8..@.....9..
    9f00:	400a8c38 00000008 00004904 400a8c40     8..@.....I..@..@
    9f10:	0000000c 00000104 400a8c50 00000010     ........P..@....
    9f20:	00004904 400a8c60 00000014 00000104     .I..`..@........
    9f30:	400a8c80 00000000 00004904 400a8c80     ...@.....I.....@
    9f40:	00000028 00000104 400a8cb0 00000000     (..........@....
    9f50:	00004904 400a8cd0 00000000 00004904     .I.....@.....I..
    9f60:	400a8cd4 00000000 00002904 400a8cd8     ...@.....).....@
    9f70:	00000000 00003904 400a8cdc 00000000     .....9.....@....
    9f80:	00002904 400a8ce0 00000000 00004904     .).....@.....I..
    9f90:	400a8cf0 00000000 00004904 400a8d00     ...@.....I.....@
    9fa0:	00000000 00004904 400a8d10 00000000     .....I.....@....
    9fb0:	00004904 1ffd7c04 00000000 00002904     .I...|.......)..
    9fc0:	1ffd7c08 00000000 00003904 1ffd7c0c     .|.......9...|..
    9fd0:	00000000 00002904 1ffd7c10 00000000     .....)...|......
    9fe0:	00004904 1ffd7c20 00000000 00004904     .I.. |.......I..
    9ff0:	1ffd7c60 00000000 00004904 1ffd7c64     `|.......I..d|..
    a000:	00000000 00002904 1ffd7c68 00000000     .....)..h|......
    a010:	00003904 1ffd7c6c 00000000 00002904     .9..l|.......)..
    a020:	20000400 00000003 00000082 20000403     ... ........... 
    a030:	00000000 00002808 20000404 00000010     .....(..... ....
    a040:	00002801 20000414 00000014 000000a2     .(..... ........
    a050:	20000428 0000001c 000000a2 20000d50     (.. ........P.. 
    a060:	00000014 00000001 2000b09c 00000029     ........... )...
    a070:	00000082 2000b0c5 0000001d 00000092     ....... ........
    a080:	2000b0e2 00000003 000000b2 2000b0e5     ... ........... 
    a090:	00000006 000000a2 2000b0eb 00000000     ........... ....
    a0a0:	00002808 2000b0ec 00000005 00000082     .(..... ........
    a0b0:	2000b0f1 00000000 00000008 20000378     ... ........x.. 
    a0c0:	00000004 00000001 20000000 00000003     ........... ....
    a0d0:	00002882 20000004 0000000b 00000082     .(..... ........
    a0e0:	2000000f 00000000 00002808 20000010     ... .....(..... 
    a0f0:	0000000b 00000082 2000001b 00000000     ........... ....
    a100:	00000008 200003c0 0000000d 00000082     ....... ........
    a110:	200003cd 00000003 000000a2 200003d0     ... ........... 
    a120:	00000000 00000008 20000180 0000001e     ........... ....
    a130:	00000082 2000019e 00000000 00000008     ....... ........
    a140:	200001c0 0000001e 00000082 200001de     ... ........... 
    a150:	00000000 00000008 20000200 0000001e     ........... ....
    a160:	00000082 2000021e 00000000 00000008     ....... ........
    a170:	20000240 0000001e 00000082 2000025e     @.. ........^.. 
    a180:	00000000 00000008 20000340 0000001e     ........@.. ....
    a190:	00000082 2000035e 00000000 00000008     ....^.. ........
    a1a0:	20000d64 0000000c 00000001 2000b0f4     d.. ........... 
    a1b0:	00000034 00000082 2000b128 0000001d     4.......(.. ....
    a1c0:	00000092 2000b145 0000000b 00000092     ....E.. ........
    a1d0:	2000b150 0000002b 000000a2 2000b17b     P.. +.......{.. 
    a1e0:	00000000 00000008 20000d70 00000004     ........p.. ....
    a1f0:	00000001 20000d74 00000004 00000001     ....t.. ........
    a200:	2000b17c 00000027 00000082 2000b1a3     |.. '.......... 
    a210:	00000000 00000008 2000b1a4 0000000f     ........... ....
    a220:	00000082 2000b1b3 00000000 00000008     ....... ........
    a230:	2000b1f1 0000000d 00000022 2000b1fe     ... ...."...... 
    a240:	00000002 00000012 2000b200 00000000     ........... ....
    a250:	00002808 2000b200 00000014 00000022     .(..... ...."...
    a260:	2000b214 00000019 00000022 2000b22d     ... ...."...-.. 
    a270:	00000000 00002808 2000b230 00000002     .....(..0.. ....
    a280:	00000002 2000b232 00000006 00000106     ....2.. ........
    a290:	2000b238 00000006 00000022 2000b23e     8.. ...."...>.. 
    a2a0:	00000003 00000106 2000b241 00000019     ........A.. ....
    a2b0:	00000002 2000b25a 0000000f 00000012     ....Z.. ........
    a2c0:	2000b269 0000000b 00000022 2000b274     i.. ...."...t.. 
    a2d0:	00000000 00002808 2000b274 00000010     .....(..t.. ....
    a2e0:	00000022 2000b284 00000000 00000008     "...... ........
    a2f0:	2000b284 0000000f 00000022 2000b293     ... ...."...... 
    a300:	00000001 00000008 2000b294 00000006     ........... ....
    a310:	00000022 2000b29a 00000002 00000022     "...... ...."...
    a320:	2000b29c 00000000 00002808 2000b29c     ... .....(..... 
    a330:	00000003 00000126 2000b29f 00000030     ....&...... 0...
    a340:	00000002 2000b2cf 00000019 00000012     ....... ........
    a350:	2000b2e8 00000010 00000022 2000b2f8     ... ...."...... 
    a360:	0000000a 00000022 2000b302 00000002     ...."...... ....
    a370:	00000008 2000b304 00000015 00000022     ....... ...."...
    a380:	2000b319 00000000 00000008 2000b319     ... ........... 
    a390:	00000008 00000022 2000b321 00000000     ...."...!.. ....
    a3a0:	00000008 2000b325 00000008 00000022     ....%.. ...."...
    a3b0:	2000b32d 00000002 00000012 2000b32f     -.. ......../.. 
    a3c0:	00000000 00002808 2000b330 0000000a     .....(..0.. ....
    a3d0:	00000022 2000b33a 00000003 00000106     "...:.. ........
    a3e0:	2000b33d 0000000e 00000022 2000b34b     =.. ...."...K.. 
    a3f0:	00000000 00002808 2000b34c 00000012     .....(..L.. ....
    a400:	00000002 2000b35e 00000006 00000106     ....^.. ........
    a410:	2000b364 00000011 00000022 2000b375     d.. ...."...u.. 
    a420:	0000000c 00000012 2000b381 00000007     ........... ....
    a430:	00000022 2000b388 00000008 00000022     "...... ...."...
    a440:	2000b390 00000006 00000022 2000b396     ... ...."...... 
    a450:	00000002 00000022 2000b398 00000000     ...."...... ....
    a460:	00000008 2000b398 00000018 00000082     ....... ........
    a470:	2000b3b0 0000000f 000000a2 2000b3bf     ... ........... 
    a480:	00000000 00000008 20000280 00000008     ........... ....
    a490:	00000082 20000288 00000003 000000a2     ....... ........
    a4a0:	2000028b 00000000 00000008 200003d0     ... ........... 
    a4b0:	00000006 000000a2 200003d6 00000000     ........... ....
    a4c0:	00000008 20000300 00000006 000000a2     ....... ........
    a4d0:	20000306 00000000 00000008 200002c0     ... ........... 
    a4e0:	00000003 00000082 200002c3 00000000     ........... ....
    a4f0:	00000008 2000b3c0 00000017 00000082     ....... ........
    a500:	2000b3d7 00000002 00000092 2000b3d9     ... ........... 
    a510:	00000000 00000008 2000b3dc 00000017     ........... ....
    a520:	00000082 2000b3f3 00000002 00000092     ....... ........
    a530:	2000b3f5 00000000 00000008 2000b3f8     ... ........... 
    a540:	00000002 00000082 2000b3fa 00000000     ........... ....
    a550:	00000008 20000d78 00000004 00000001     ....x.. ........
    a560:	2000b1b4 00000008 00000082 2000b1bc     ... ........... 
    a570:	00000016 000000a2 2000b1d2 00000000     ........... ....
    a580:	00000008 2000b1d4 00000008 00000082     ....... ........
    a590:	2000b1dc 00000014 000000a2 2000b1f0     ... ........... 
    a5a0:	00000000 00000008                       ........

Disassembly of section .xt.lit:

00000000 <.xt.lit>:
   0:	20000700 00000204 400a2800 00000124     ... .....(.@$...
  10:	400a2924 00000140 2000b3fc 00000004     $).@@...... ....
  20:	20000904 000000b4 400a2a64 00000068     ... ....d*.@h...
  30:	200009b8 00000128 20000ae0 00000270     ... (...... p...
  40:	2000b400 00000020 400a2acc 000001d8     ...  ....*.@....
  50:	20000404 00000010 20000d50 00000014     ... ....P.. ....
  60:	20000378 00000004 20000d64 0000000c     x.. ....d.. ....
  70:	20000d70 00000004 20000d74 00000004     p.. ....t.. ....
  80:	20000d78 00000004                       x.. ....

Disassembly of section .comment:

00000000 <.comment>:
   0:	65745823 2061736e 706d6f43 72656c69     #Xtensa Compiler
  10:	72655620 6e6f6973 2e313120 20312e30      Version 11.0.1 
  20:	3120203a 63204d2e 69706d6f 2064656c     :  1.M compiled 
  30:	68746977 2d203a20 2d20324f 692d3367     with : -O2 -g3-i
  40:	00206170 65745823 2061736e 706d6f43     pa .#Xtensa Comp
  50:	72656c69 72655620 6e6f6973 2e313120     iler Version 11.
  60:	20312e30 3220203a 63204d2e 69706d6f     0.1 :  2.M compi
  70:	2064656c 68746977 2d203a20 2d20324f     led with : -O2 -
  80:	692d3367 00206170 65745823 2061736e     g3-ipa .#Xtensa 
  90:	706d6f43 72656c69 72655620 6e6f6973     Compiler Version
  a0:	2e313120 20312e30 3320203a 63204d2e      11.0.1 :  3.M c
  b0:	69706d6f 2064656c 68746977 2d203a20     ompiled with : -
  c0:	2d20324f 692d3367 00206170 65745823     O2 -g3-ipa .#Xte
  d0:	2061736e 706d6f43 72656c69 72655620     nsa Compiler Ver
  e0:	6e6f6973 2e313120 20312e30 3420203a     sion 11.0.1 :  4
  f0:	63204d2e 69706d6f 2064656c 68746977     .M compiled with
 100:	2d203a20 2d20324f 692d3367 00206170      : -O2 -g3-ipa .
 110:	65745823 2061736e 706d6f43 72656c69     #Xtensa Compiler
 120:	72655620 6e6f6973 2e313120 20312e30      Version 11.0.1 
 130:	2f20203a 6c697562 72742f64 522f6565     :  /build/tree/R
 140:	30322d46 312e3431 6d756b5f 34702f61     F-2014.1_kuma/p4
 150:	746f6f72 6574582f 2f61736e 67726154     root/Xtensa/Targ
 160:	6c2d7465 2f736269 696c6378 6f732f62     et-libs/xclib/so
 170:	65637275 6e61722f 20632e64 706d6f63     urce/rand.c comp
 180:	64656c69 74697720 203a2068 20324f2d     iled with : -O2 
 190:	0033672d 65745823 2061736e 706d6f43     -g3.#Xtensa Comp
 1a0:	72656c69 72655620 6e6f6973 2e313120     iler Version 11.
 1b0:	20312e30 2f20203a 6c697562 72742f64     0.1 :  /build/tr
 1c0:	522f6565 30322d46 312e3431 6d756b5f     ee/RF-2014.1_kum
 1d0:	34702f61 746f6f72 6574582f 2f61736e     a/p4root/Xtensa/
 1e0:	67726154 6c2d7465 2f736269 696c6378     Target-libs/xcli
 1f0:	65742f62 6c69736e 2f616369 6e656572     b/tensilica/reen
 200:	20632e74 706d6f63 64656c69 74697720     t.c compiled wit
 210:	203a2068 20324f2d 0033672d              h : -O2 -g3.

Disassembly of section .xtensa.info:

00000000 <.xtensa.info>:
   0:	0000000c 000001cc 00000001 6e657458     ............Xten
  10:	495f6173 006f666e 435f5748 49464e4f     sa_Info.HW_CONFI
  20:	30444947 6378303d 66336432 0a656662     GID0=0xc2d3fbfe.
  30:	435f5748 49464e4f 31444947 3178303d     HW_CONFIGID1=0x1
  40:	31353463 0a396637 4c495542 4e555f44     c4517f9.BUILD_UN
  50:	45555149 3d44495f 30307830 37313530     IQUE_ID=0x000517
  60:	410a3966 313d4942 4553550a 5342415f     f9.ABI=1.USE_ABS
  70:	54554c4f 494c5f45 41524554 303d534c     OLUTE_LITERALS=0
  80:	5f57480a 53524556 3d4e4f49 36584c22     .HW_VERSION="LX6
  90:	312e302e 57480a22 4e494d5f 5245565f     .0.1".HW_MIN_VER
  a0:	4e4f4953 4a414d5f 323d524f 0a303036     SION_MAJOR=2600.
  b0:	4d5f5748 565f4e49 49535245 4d5f4e4f     HW_MIN_VERSION_M
  c0:	524f4e49 480a313d 414d5f57 45565f58     INOR=1.HW_MAX_VE
  d0:	4f495352 414d5f4e 3d524f4a 30303632     RSION_MAJOR=2600
  e0:	5f57480a 5f58414d 53524556 5f4e4f49     .HW_MAX_VERSION_
  f0:	4f4e494d 0a313d52 454c4552 5f455341     MINOR=1.RELEASE_
 100:	454d414e 4652223d 3130322d 22312e34     NAME="RF-2014.1"
 110:	4c45520a 45534145 5245565f 4e4f4953     .RELEASE_VERSION
 120:	3131223d 312e302e 45520a22 5341454c     ="11.0.1".RELEAS
 130:	414d5f45 3d524f4a 30307830 61323030     E_MAJOR=0x00002a
 140:	520a3866 41454c45 4d5f4553 524f4e49     f8.RELEASE_MINOR
 150:	430a313d 5f45524f 454d414e 6672223d     =1.CORE_NAME="rf
 160:	74616976 6f6c6569 3631706f 49540a22     viatieloop16".TI
 170:	48435f45 534b4345 305f4d55 6478303d     E_CHECKSUM_0=0xd
 180:	64613035 0a396136 5f454954 43454843     50ad6a9.TIE_CHEC
 190:	4d55534b 303d315f 38323278 38323732     KSUM_1=0x2282728
 1a0:	49540a33 48435f45 534b4345 325f4d55     3.TIE_CHECKSUM_2
 1b0:	6378303d 62393239 0a373931 5f454954     =0xc929b197.TIE_
 1c0:	43454843 4d55534b 303d335f 66656178     CHECKSUM_3=0xaef
 1d0:	37623763 44540a37 41505f4b 223d4854     c7b77.TDK_PATH="
 1e0:	00000a22                                "...
