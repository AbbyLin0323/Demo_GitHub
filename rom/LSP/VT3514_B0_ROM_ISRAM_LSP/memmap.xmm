//  Memory map file to generate linker scripts for programs run on the ISS.

// $Id: //depot/rel/Eagleridge/Xtensa/SWConfig/ldscripts/sim.parm#1 $

// Customer ID=5586; Build=0x4c3c6; Copyright (c) 2004-2007 by Tensilica Inc.  ALL RIGHTS RESERVED.
// These coded instructions, statements, and computer programs are the
// copyrighted works and confidential proprietary information of Tensilica Inc.
// They may not be modified, copied, reproduced, distributed, or disclosed to
// third parties in any manner, medium, or form, in whole or in part, without
// the prior written consent of Tensilica Inc.


// A memory map is a sequence of memory descriptions and
// optional parameter assignments.
//
// Each memory description has the following format:
//   BEGIN <name>
//     <addr> [,<paddr>] : <mem-type> : <mem-name> : <size> [,<psize>]
//                       : [writable] [,executable] [,device] ;
//     <segment>*
//   END <name>
//
// where each <segment> description has the following format:
//     <seg-name> : F|C : <start-addr> - <end-addr> [ : STACK ] [ : HEAP ]
//                : <section-name>* ;
//
// Each parameter assignment is a keyword/value pair in the following format:
//   <keyword> = <value>                (no spaces in <value>)
// or
//   <keyword> = "<value>"              (spaces allowed in <value>)
//
// The following primitive is also defined:
//   PLACE SECTIONS( <section-name>* ) { WITH_SECTION(<section-name>)
//                                       | IN_SEGMENT(<seg-name>) }
//
// Please refer to the Xtensa LSP Reference Manual for more details.
//

BEGIN dram0
0x1ff80000: dataRam : dram0 : 0x80000 : writable ;
 dram0_reg : F : 0x1ff80000 - 0x1ff83fff : ;
 dram0_hsg : F : 0x1ff84000 - 0x1ff86fff : ;
 dram0_blank : F : 0x1ffb8000 - 0x1ffbffff : ;
 dram0_usr : F : 0x1ffa4800 - 0x1ffb7fff : .rodata .data .bss;
 dram0_nfcq : F : 0x1ff87000 - 0x1ff87fff : ;
 dram0_dsg : F : 0x1ff88000 - 0x1ff89fff : ;
 dram0_prcq : F : 0x1ff8a000 - 0x1ff8bfff : ;
 dram0_sgeq : F : 0x1ff8c000 - 0x1ff8c3ff : ;
 dram0_ldpc_n1 : F : 0x1ff8c400 - 0x1ff8c7ff : ;
 dram0_blank0 : F : 0x1ff8d800 - 0x1ffa3fff : ;
 dram0_ldpc_sv : F : 0x1ff8c800 - 0x1ff8d7ff : ;
 dram0_stack : C : 0x1ffa4000 - 0x1ffa47ff :  STACK :  HEAP : ;
 dram1_com0 : F : 0x1ffc8000 - 0x1ffcffff : ;
 dram1_trace : F : 0x1ffd0000 - 0x1ffd7fff : ;
 dram1_blank : F : 0x1ffe0000 - 0x1fffffff : ;
 dram1_com1 : F : 0x1ffd8000 - 0x1ffdffff : ;
 drma1_usr : F : 0x1ffc0000 - 0x1ffc7fff : ;
END dram0

BEGIN iram0
0x20000000: instRam : iram0 : 0x80000 : executable, writable ;
 iram0_0 : F : 0x20000000 - 0x20000177 : .WindowVectors.text;
 iram0_1 : C : 0x20000178 - 0x2000017f : .Level2InterruptVector.literal;
 iram0_2 : F : 0x20000180 - 0x200001b7 : .Level2InterruptVector.text;
 iram0_3 : C : 0x200001b8 - 0x200001bf : .Level3InterruptVector.literal;
 iram0_4 : F : 0x200001c0 - 0x200001f7 : .Level3InterruptVector.text;
 iram0_5 : C : 0x200001f8 - 0x200001ff : .Level4InterruptVector.literal;
 iram0_6 : F : 0x20000200 - 0x20000237 : .Level4InterruptVector.text;
 iram0_7 : C : 0x20000238 - 0x2000023f : .Level5InterruptVector.literal;
 iram0_8 : F : 0x20000240 - 0x20000277 : .Level5InterruptVector.text;
 iram0_9 : C : 0x20000278 - 0x2000027f : .DebugExceptionVector.literal;
 iram0_10 : F : 0x20000280 - 0x200002b7 : .DebugExceptionVector.text;
 iram0_11 : C : 0x200002b8 - 0x200002bf : .NMIExceptionVector.literal;
 iram0_12 : F : 0x200002c0 - 0x200002f7 : .NMIExceptionVector.text;
 iram0_13 : C : 0x200002f8 - 0x200002ff : .KernelExceptionVector.literal;
 iram0_14 : F : 0x20000300 - 0x20000337 : .KernelExceptionVector.text;
 iram0_15 : C : 0x20000338 - 0x2000033f : .UserExceptionVector.literal;
 iram0_16 : F : 0x20000340 - 0x20000377 : .UserExceptionVector.text;
 iram0_17 : C : 0x20000378 - 0x2000037f : .DoubleExceptionVector.literal;
 iram0_18 : F : 0x20000380 - 0x2000039f : .DoubleExceptionVector.text;
 iram0_usr : C : 0x20000400 - 0x20027fff : .literal .text rom_func_table;
 iram0_blank : F : 0x20028000 - 0x2007ffff : ;
 iram_alt_rst_vec : F : 0x200003c0 - 0x200003ff : .ResetVector.text;
 iram_alt_rst_lit : C : 0x200003a0 - 0x200003bf : .ResetVector.literal;
END iram0

BEGIN sram_4
0x40000000: sysram : sram_4 : 0x40000000 : executable, writable ;
 sram0 : C : 0x40008000 - 0x40017fff : ;
 blank : C : 0x40004000 - 0x4000400f : ;
 head : C : 0x40000010 - 0x40003fff : ;
 entrance : C : 0x40000000 - 0x4000000f : ;
END sram_4

BEGIN sram_8
0x80000000: sysram : sram_8 : 0x40000000 : executable, writable ;
 sram_remap8 : C : 0x80000000 - 0xbfffffff : ;
END sram_8

BEGIN rom
0xffe00000: sysrom : rom : 0x6000 : executable ;
 srom0 : C : 0xffe00000 - 0xffe000ff : ;
 srom1 : F : 0xffe00100 - 0xffe003df : ;
 srom2 : C : 0xffe003e0 - 0xffe05fff : .srom.rodata .srom.literal .srom.text .rom.store;
END rom

INCLUDE_XT2000_MEMORIES=try
VECBASE=0x20000000
VECSELECT=1
BEGIN spi
0xc0000000: sysram : spi : 0x10000000 : writable, executable ;
 spi_0 : F : 0xc0000000 - 0xcfffffff : .spi.data .spi.bss;
END spi
BEGIN apb
0xffe07000: sysrom : apb : 0x9000 :  ;
 apb_0 : F : 0xffe07000 - 0xffe0ffff : ;
END apb
BEGIN otfb
0xfff00000: sysram : otfb : 0x50000 : writable, executable ;
 otfb_usr : F : 0xfff00000 - 0xfff04fff : .entry.literal .entry.text;
 otfb_usr1 : C : 0xfff05000 - 0xfff4ffff : .otfb_usr0.literal .otfb_usr0.text;
END otfb