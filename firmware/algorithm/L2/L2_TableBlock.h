/*******************************************************************************
* Copyright (C), 2015 VIA Technologies, Inc. All Rights Reserved.              *
*                                                                              *
* This PROPRIETARY SOFTWARE is the property of VIA Technologies, Inc.          *
* and may contain trade secrets and/or other confidential information of VIA   *
* Technologies,Inc.                                                            *
* This file shall not be disclosed to any third party, in whole or in part,    *
* without prior written consent of VIA.                                        *
*                                                                              *
* THIS PROPRIETARY SOFTWARE AND ANY RELATED DOCUMENTATION ARE PROVIDED AS IS,  *
* WITH ALL FAULTS, AND WITHOUT WARRANTY OF ANY KIND EITHER EXPRESS OR IMPLIED, *
* AND VIA TECHNOLOGIES, INC. DISCLAIMS ALL EXPRESS OR IMPLIED WARRANTIES OF    *
* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR        *
* NON-INFRINGEMENT.                                                            *
********************************************************************************
File Name     : L2_TableBlock.h
Version       : Initial version
Author        : henryluo
Created       : 2015/02/28
Description   : table block management
Function List :
History       :
1.Date        : 2012/09/10
Author      : AwayWei
Modification: Created file

*******************************************************************************/
#include "L2_PMTPage.h"
#include "L2_StripeInfo.h"
#include "L2_Defines.h"

#ifndef _L2_TABLE_BLOCK_H
#define _L2_TABLE_BLOCK_H

#define L2_TB_FAIL    0
#define L2_TB_SUCCESS 1
#define L2_TB_WAIT    2

#define TEMP_BLK_CNT_PER_TARGET (RPMT_BUFFER_DEPTH)

typedef enum _L2_TB_SAVE_STATUS
{
    L2_TB_SAVE_START = 0,
    L2_TB_SAVE_WRITE_PAGE,
    L2_TB_SAVE_WAIT_PAGE,
    L2_TB_SAVE_FAIL_MOVE_BLK,
    L2_TB_SAVE_CHECK_ERASE,
    L2_TB_SAVE_ERASE_BLOCK,
    L2_TB_SAVE_WAIT_ERASE,
    L2_TB_SAVE_ERASE_BLK_FAIL_MOVE_BLK,
    L2_TB_SAVE_FAIL,
    L2_TB_SAVE_SUCCESS
}L2_TB_SAVE_STATUS;

typedef enum _L2_TB_LOAD_STATUS
{
    L2_TB_LOAD_START = 0,
    L2_TB_LOAD_READ_PAGE,
    L2_TB_LOAD_WAIT_PAGE,
    L2_TB_LOAD_FAIL,
    L2_TB_LOAD_SUCCESS
}L2_TB_LOAD_STATUS;

typedef enum _L2_TB_CHECK_STATUS
{
    L2_TB_CHECK_START = 0,
    L2_TB_CHECK_READ_FIRST_PAGE,
    L2_TB_CHECK_WAIT_FIRST_PAGE,
    L2_TB_CHECK_READ_PPO_PAGE,
    L2_TB_CHECK_WAIT_PPO_PAGE,
    L2_TB_CHECK_READ_LAST_PAGE,
    L2_TB_CHECK_WAIT_LAST_PAGE,
    L2_TB_CHECK_PMT,
    L2_TB_CHECK_DATA_BLK,
    L2_TB_CHECK_FAIL,
    L2_TB_CHECK_SUCCESS
}L2_TB_CHECK_STATUS;

typedef enum _L2_TB_CHECK_PMT_STATUS
{
    L2_TB_CHECK_PMT_START = 0,
    L2_TB_CHECK_PMT_READ_FIRST_PAGE,
    L2_TB_CHECK_PMT_WAIT_FIRST_PAGE,
    L2_TB_CHECK_PMT_READ_LAST_PAGE,
    L2_TB_CHECK_PMT_WAIT_LAST_PAGE,
    L2_TB_CHECK_PMT_READ_NEXT_PAGE,
    L2_TB_CHECK_PMT_WAIT_NEXT_PAGE,
    L2_TB_CHECK_PMT_FAIL,
    L2_TB_CHECK_PMT_SUCCESS
}L2_TB_CHECK_PMT_STATUS;

typedef enum _L2_TB_CHECK_DATA_BLK_STATUS
{
    L2_TB_CHECK_DATA_BLK_START = 0,
    L2_TB_CHECK_DATA_BLK_READ_FIRST_PAGE,
    L2_TB_CHECK_DATA_BLK_WAIT_FIRST_PAGE,
    L2_TB_CHECK_DATA_BLK_READ_LAST_PAGE,
    L2_TB_CHECK_DATA_BLK_WAIT_LAST_PAGE,
    L2_TB_CHECK_DATA_BLK_READ_NEXT_PAGE,
    L2_TB_CHECK_DATA_BLK_WAIT_NEXT_PAGE,
    L2_TB_CHECK_DATA_BLK_FAIL,
    L2_TB_CHECK_DATA_BLK_SUCCESS
}L2_TB_CHECK_DATA_BLK_STATUS;

typedef enum _L2_ERR_HANDLE_MOVE_ONE_BLOCK_STATE
{
    L2_ERR_HANDLE_MOVE_BLOCK_INIT = 0,
    L2_ERR_HANDLE_MOVE_BLOCK_HANDLE_RD,
    L2_ERR_HANDLE_MOVE_BLOCK_HANDLE_RD_STATUS,
    L2_ERR_HANDLE_MOVE_BLOCK_HANDLE_PRG,
    L2_ERR_HANDLE_MOVE_BLOCK_HANDLE_PRG_STATUS,
    L2_ERR_HANDLE_MOVE_BLOCK_HANDLE_ERS,
    L2_ERR_HANDLE_MOVE_BLOCK_HANDLE_ERS_STATUS,
    L2_ERR_HANDLE_MOVE_BLOCK_CALC_ADDR,
    L2_ERR_HANDLE_MOVE_BLOCK_FINISH
}L2_ERR_HANDLE_MOVE_ONE_BLOCK_STATE;

typedef enum _L2_ERR_HANDLE_MOVE_STATE
{
    L2_ERR_HANDLE_MOVE_INIT = 0,
    L2_ERR_HANDLE_NO_RESEVED_BLOCK,
    L2_ERR_HANDLE_MOVE_HANDLE,
    L2_ERR_HANDLE_MOVE_HANDLE_RD,
    L2_ERR_HANDLE_MOVE_HANDLE_PRG,
    L2_ERR_HANDLE_MOVE_HANDLE_ERS,
    L2_ERR_HANDLE_MOVE_ONE_BLOCK_FINISH,
    L2_ERR_HANDLE_MOVE_FINISH
}L2_ERR_HANDLE_MOVE_STATE;

typedef enum _L2_SAVE_BBT_STATE
{
    L2_SAVE_BBT_STATE_SEND_REQ = 0,
    L2_SAVE_BBT_STATE_WAIT_STATUS
}L2_SAVE_BBT_STATE;

typedef enum _L2_ERR_HANDLING_MOVE_STATUS
{
    L2_ERR_HANDLING_SUCCESS = 0,
    L2_ERR_HANDLING_PENDING,
    L2_ERR_HANDLING_NO_BLOCK,
    L2_ERR_HANDLING_FAIL
}L2_ERR_HANDLING_MOVE_STATUS;

typedef enum _L2_TB_BOOT_STATUS
{
    L2_TB_BOOT_START = 0,
    L2_TB_BOOT_LOAD_RT,
    L2_TB_BOOT_CHECK_RT,
    L2_TB_BOOT_LOAD_PBIT,
    L2_TB_BOOT_LOAD_VBT,
    L2_TB_BOOT_CHECK_TS,
    L2_TB_BOOT_LOAD_DPBM,
    L2_TB_BOOT_LOAD_RPMT,
#ifdef SHUTDOWN_IMPROVEMENT_STAGE2
    L2_TB_BOOT_LOAD_TLCW,
#endif    
    L2_TB_BOOT_LOAD_PMTI,
#ifndef LCT_VALID_REMOVED
    L2_TB_BOOT_LOAD_VBMT,
#endif
    L2_TB_BOOT_FAIL,
    L2_TB_BOOT_SUCCESS
}L2_TB_BOOT_STATUS;

typedef enum _L2_TB_SHUTDOWN_STATUS
{
    L2_TB_SHUTDOWN_START = 0,
#ifndef LCT_VALID_REMOVED
    L2_TB_SHUTDOWN_SAVE_VBMT,
#endif
    L2_TB_SHUTDOWN_SAVE_PMTI,
    L2_TB_SHUTDOWN_SAVE_RPMT,
#ifdef SHUTDOWN_IMPROVEMENT_STAGE2
    L2_TB_SHUTDOWN_SAVE_TLCW,
#endif    
    L2_TB_SHUTDOWN_SAVE_DPBM,
    L2_TB_SHUTDOWN_SAVE_VBT,
    L2_TB_SHUTDOWN_SAVE_PBIT,
    L2_TB_SHUTDOWN_SAVE_RT,
    L2_TB_SHUTDOWN_FAIL,
    L2_TB_SHUTDOWN_SUCCESS
}L2_TB_SHUTDOWN_STATUS;

typedef enum _L2_TB_FULLRECOVERY_STATUS
{
    L2_TB_FULLRECOVERY_START,
    L2_TB_FULLRECOVERY_REBUILD_RT,
    L2_TB_FULLRECOVERY_REBUILD_TABLE,
    L2_TB_FULLRECOVERY_REBUILD_DATA,
    L2_TB_FULLRECOVERY_REBUILD_CHECK_SCAN_DATABLK,
    L2_TB_FULLRECOVERY_FAIL,
    L2_TB_FULLRECOVERY_SUCCESS
}L2_TB_FULLRECOVERY_STATUS;

typedef enum _L2_TB_FINDPBIT_STATUS
{
    L2_TB_RECOVER_PBIT_FIND_AT0,
    L2_TB_RECOVER_PBIT_INIT,
    L2_TB_RECOVER_PBIT_PROCESS,
    L2_TB_RECOVER_PBIT_DONE,
    L2_TB_RECOVER_PBIT_LOAD_PBN_BINDING_TABLE
}L2_TB_FINDPBIT_STATUS;

typedef enum _L2_TB_REBUILD_STATUS
{
    L2_TB_REBUILD_START,
    L2_TB_REBUILD_READ_FIRST_PAGE,
    L2_TB_REBUILD_CHECK_FIRST_PAGE,
    L2_TB_REBUILD_READ_LAST_PAGE,
    L2_TB_REBUILD_CHECK_LAST_PAGE,
    L2_TB_REBUILD_READ_NEXT_PAGE,
    L2_TB_REBUILD_CHECK_NEXT_PAGE,
    L2_TB_REBUILD_CURRENT_BLOCK_FINISH,
    L2_TB_REBUILD_READ_ERASEINFO,
    L2_TB_REBUILD_CHECK_READ_ERASEINFO,

    /* only for rebuild Table Block */
    L2_TB_REBUILD_DUMMY_WRITE,
    L2_TB_REBUILD_CHECK_DUMMY_WRITE,
    L2_TB_REBUILD_READ_LATEST_PBIT,
    L2_TB_REBUILD_WAIT_LATEST_PBIT,
    L2_TB_REBUILD_READ_RSVD_BLOCK,
    L2_TB_REBUILD_WAIT_RSVD_BLOCK,
    L2_TB_REBUILD_ERROR_ERASE_ONE_BLOCK,
    //L2_TB_REBUILD_ERRORHANDLE_UECC,
    L2_TB_REBUILD_DUMMY_WRITE_FAIL_MOVEBLOCK,
    L2_TB_REBUILD_ERROR_ERASE_ALL,

    /* only for rebuild Data Block */
    L2_TB_REBUILD_ERASE_BLOCK,
    L2_TB_REBUILD_WAIT_ERASE_BLOCK,
    L2_TB_REBUILD_ERASE_TLC_BLOCK,
    L2_TB_REBUILD_WAIT_ERASE_TLC_BLOCK,
    L2_TB_REBUILD_ERASE_SAVE_BBT,
    L2_TB_REBUILD_ERRTLC_HANDLING,
    L2_TB_REBUILD_ALL_FINISH,
    L2_TB_REBUILD_FAIL,
    L2_TB_REBUILD_SUCCESS,

    /* only for scan RT block*/
    L2_TB_REBUILD_RT_READ_FIRST_SUPER_PAGE,
    L2_TB_REBUILD_RT_CHECK_FIRST_SUPER_PAGE,
    L2_TB_REBUILD_RT_READ_SECOND_PAGE,
    L2_TB_REBUILD_RT_CHECK_SECOND_PAGE,
    L2_TB_REBUILD_RT_READ_LAST_PAGE,
    L2_TB_REBUILD_RT_CHECK_LAST_PAGE,
    L2_TB_REBUILD_RT_READ_NEXT_PAGE,
    L2_TB_REBUILD_RT_CHECK_NEXT_PAGE,
    L2_TB_REBUILD_RT_READ_HEALTH_INFOR,
    L2_TB_REBUILD_RT_CHECK_READ_HEALTH_INFOR,
    L2_TB_REBUILD_RT_ERASE_BLOCK,
    L2_TB_REBUILD_RT_FINISH
}L2_TB_REBUILD_STATUS;

typedef enum _L2_TB_TLC_ERR_HANDLE_STATUS
{
   L2_TB_TLC_ERR_HANDLE_INIT = 1,
   L2_TB_TLC_ERR_HANDLE_READFIRSTPAGE = 2,
   L2_TB_TLC_ERR_HANDLE_FINISH = 8,
}L2_TB_TLC_ERR_HANDLE_STATUS;

typedef enum _L2_TB_UECC_STATUS
{
    L2_TB_UECC_START,
    L2_TB_UECC_READ_NEXT_PAGE,
    L2_TB_UECC_CHECK_NEXT_PAGE,
    L2_TB_UECC_ERASE_BLOCK,
    L2_TB_UECC_WAIT_ERASE_BLOCK,
    L2_TB_UECC_ERASE_FAIL_MOVEBLOCK,
    L2_TB_UECC_FAIL,
    L2_TB_UECC_SUCCESS
}L2_TB_UECC_STATUS;

typedef enum _L2_TB_ERASEALL_STATUS
{
    L2_TB_ERASEALL_START,
    L2_TB_ERASEALL_ERASE_BLOCK,
    L2_TB_ERASEALL_WAIT_ERASE_BLOCK,
    L2_TB_ERASEALL_ERASE_FAIL_ADDBBT,
    L2_TB_ERASEALL_CURRENT_BLOCK_FINISH,
    L2_TB_ERASEALL_FAIL,
    L2_TB_ERASEALL_SUCCESS
}L2_TB_ERASEALL_STATUS;

typedef enum _L2_TB_REBUILD_CHECK_STATUS
{
    L2_TB_REBUILD_CHECK_START,
    L2_TB_REBUILD_CHECK_PROCESS_TARGET_BLOCK,
    L2_TB_REBUILD_CHECK_VBN_PBN_MAPPING,
    L2_TB_REBUILD_CHECK_LOAD_TARGET_RPMT,
    L2_TB_REBUILD_CHECK_WAIT_LOAD_TARGET_RPMT,
    L2_TB_REBUILD_CHECK_READ_NEXT_PAGE,
    L2_TB_REBUILD_CHECK_WAIT_READ_NEXT_PAGE,
    L2_TB_REBUILD_CHECK_HANLDE_ERASE_INFO,
    L2_TB_REBUILD_CHECK_DUMMYWRITE_AT1,
    L2_TB_REBUILD_CHECK_WAIT_DUMMYWRITE_AT1,
    L2_TB_REBUILD_CHECK_ERASE_BLOCK,
    L2_TB_REBUILD_CHECK_WAIT_ERASE_BLOCK,
    L2_TB_REBUILD_CHECK_ERASE_SAVE_BBT,
    L2_TB_REBUILD_CHECK_FINISH,
    L2_TB_REBUILD_CHECK_SUCCESS,
    L2_TB_REBUILD_CHECK_FAIL
}L2_TB_REBUILD_CHECK_STATUS;

typedef enum _L2_TB_ERASE_STATUS
{
    L2_TB_ERASE_START,
    L2_TB_ERASE_BLOCK,
    L2_TB_ERASE_WAIT,
    L2_TB_ERASE_FAIL_MOVEBLOCK,
    L2_TB_ERASE_FAIL,
    L2_TB_ERASE_SUCCESS
}L2_TB_ERASE_STATUS;

typedef enum _L2_TB_PBIT_STATUS
{
    L2_TB_PBIT_CMD_SEND,
    L2_TB_PBIT_CMD_WAIT,
    L2_TB_PBIT_CMD_SUCCESS,
    L2_TB_PBIT_CMD_FAIL,
    L2_TB_PBIT_CMD_EMPTYPG,
    L2_TB_PBIT_SEARCH_DONE,
    
}L2_TB_PBIT_STATUS;

typedef enum _L2_TB_ERRTLC_HANDLE_STATUS
{
    L2_TB_ERRTLC_HANDLE_START,
    L2_TB_ERRTLC_HANDLE_READ,
    L2_TB_ERRTLC_HANDLE_WAIT,
    L2_TB_ERRTLC_HANDLE_FINDSLCBLK,
    L2_TB_ERRTLC_HANDLE_ERASE,
    L2_TB_ERRTLC_HANDLE_WAIT_ERASE,
    L2_TB_ERRTLC_HANDLE_NEXTBLK,   

}L2_TB_ERRTLC_HANDLE_STATUS;


#define MAX_ERR_TLC_NUM 20

typedef struct _TB_BOOT
{
    U16 usPageIndex[SUBSYSTEM_SUPERPU_MAX];
    U16 usBlockIndex[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];         /* for TB Rebuild */
    U8  ucFlashStatus[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
    U8  ucNeedCheckPMTTS[SUBSYSTEM_SUPERPU_MAX];     /* for bootup check PMT TS*/
    L2_TB_SAVE_STATUS SaveStatus[SUBSYSTEM_SUPERPU_MAX];
    L2_TB_LOAD_STATUS LoadStatus[SUBSYSTEM_SUPERPU_MAX];
    L2_TB_CHECK_STATUS CheckStatus[SUBSYSTEM_SUPERPU_MAX];
    L2_TB_CHECK_PMT_STATUS CheckPMTStatus[SUBSYSTEM_SUPERPU_MAX]; /* for bootup check PMT TS*/

    U32 ulLunLoadBitmap[SUBSYSTEM_SUPERPU_MAX];
    U32 ulLunBootCheckPMTBitmap[SUBSYSTEM_SUPERPU_MAX];
    U32 ulLunBootCheckReadBitmap[SUBSYSTEM_SUPERPU_MAX];
    U32 ulLunBootCheckNoAddrBitmap[SUBSYSTEM_SUPERPU_MAX];
    U32 ulLunSaveBitmap[SUBSYSTEM_SUPERPU_MAX];
    U32 ulLunEraseBitmap[SUBSYSTEM_SUPERPU_MAX];

    L2_TB_BOOT_STATUS BootStatus;
    L2_TB_SHUTDOWN_STATUS ShutdownStatus;
} TB_BOOT;


typedef struct _TB_MANAGEMENT
{
    U16 usPageIndex[SUBSYSTEM_SUPERPU_MAX];
    U16 usBlockIndex[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
    U8  ucFlashStatus[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
    U8  ucNeedCheckPMTTS[SUBSYSTEM_SUPERPU_MAX];     /* for bootup check PMT TS*/
    L2_TB_SAVE_STATUS SaveStatus[SUBSYSTEM_SUPERPU_MAX];
    L2_TB_LOAD_STATUS LoadStatus[SUBSYSTEM_SUPERPU_MAX];
    L2_TB_CHECK_STATUS CheckStatus[SUBSYSTEM_SUPERPU_MAX];
    L2_TB_CHECK_PMT_STATUS CheckPMTStatus[SUBSYSTEM_SUPERPU_MAX]; /* for bootup check PMT TS*/
    L2_TB_CHECK_DATA_BLK_STATUS CheckDataBlkStatus[SUBSYSTEM_SUPERPU_MAX];
    L2_TB_REBUILD_STATUS RebuildStatus[SUBSYSTEM_SUPERPU_MAX];
    L2_TB_UECC_STATUS UECCStatus[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
    L2_TB_ERASEALL_STATUS EraseAllStatus[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];

    U32 ulLunLoadBitmap[SUBSYSTEM_SUPERPU_MAX];
    U32 ulLunBootCheckPMTBitmap[SUBSYSTEM_SUPERPU_MAX];
    U32 ulLunBootCheckReadBitmap[SUBSYSTEM_SUPERPU_MAX];
    U32 ulLunBootCheckNoAddrBitmap[SUBSYSTEM_SUPERPU_MAX];
    U32 ulLunSaveBitmap[SUBSYSTEM_SUPERPU_MAX];
    U32 ulLunEraseBitmap[SUBSYSTEM_SUPERPU_MAX];

    L2_TB_BOOT_STATUS BootStatus;
    L2_TB_SHUTDOWN_STATUS ShutdownStatus;
} TB_MANAGEMENT;

//For FullRecovery table rebuild
typedef struct _TB_REBUILD_MANAGEMENT
{
    /* for scan data block*/
    U8  ucFirstPageEmpty[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
    U8  ucFirstPageUECC[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
    U8  ucLastPageUECC[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
    U8  ucFirstPageBlkTypeErr[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU]; // for L3 move UECC block use
    U8  ucSLCMode[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
    U16 usUECCErrCnt[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
    U16 usBlkTypeErrCnt[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];

    U8  ucTargetIndex[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU][TARGET_ALL];
    U16 usTargetBlock[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU][TARGET_ALL][TEMP_BLK_CNT_PER_TARGET];
    U16 usTargetPPO[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU][TARGET_ALL][TEMP_BLK_CNT_PER_TARGET];
    U16 usTargetBlkUECCErrCnt[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU][TARGET_ALL][TEMP_BLK_CNT_PER_TARGET];
    U16 usSameVirBlock[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];

    /* for scan data and table block*/
    U16 usPageIndex[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
    U16 usBlockIndex[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
    U16 usBlockErase[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
    U8  ucFlashStatus[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
    /* for scan data block */
    U32 ulCurBlockMaxTS[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
    U32 ulDataBlockMaxTS[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];

    /* scan table block state machine*/
    L2_TB_REBUILD_STATUS RebuildStatus[SUBSYSTEM_SUPERPU_MAX];
    /* scan table block UECC error handling state machine*/
    L2_TB_UECC_STATUS UECCStatus[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
    /* scan table block erase all table block error handling state machine*/
    L2_TB_ERASEALL_STATUS EraseAllStatus[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];

    /* load LUN bitmap for send command*/
    U32 ulLunLoadBitmap[SUBSYSTEM_SUPERPU_MAX];
    U32 ulLunEraseBitmap[SUBSYSTEM_SUPERPU_MAX];
    U32 ulTempLunBitmap[SUBSYSTEM_SUPERPU_MAX];
    U32 ulLunDummyWrBitmap[SUBSYSTEM_SUPERPU_MAX];

	/* L2_FullRecovery state machine*/
    L2_TB_FULLRECOVERY_STATUS FullRecoveryStatus;

    //statistic Last page err TLC Blk ( Physical Blk)
    U16 usErrTLCBlk[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU][MAX_ERR_TLC_NUM];
    U16 usErrTLCBlkCnt[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];

    //Find 3 source slc blk of err tlc
    L2_TB_ERRTLC_HANDLE_STATUS ErrTLCHandleStatus[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
    U32 ulErrTLCHandleSN[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
    U32 ulTheFirstThreePageTime[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU][PG_PER_WL];
    U8 ucTheFirstThreePageStatus[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU][PG_PER_WL];
    //RED ulTheFirstThreePageRed[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU][PG_PER_WL];	
    RED* (*ulTheFirstThreePageRed)[LUN_NUM_PER_SUPERPU][PG_PER_WL];

    U16 usThreeSrcSlcBlk[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU][PG_PER_WL];

    /* new add for scan super page table block*/
    U8 ucReadLunEmptyCnt[SUBSYSTEM_SUPERPU_MAX];
    U8 ucReadLunSuccessCnt[SUBSYSTEM_SUPERPU_MAX];
    U8 ucReadLunUECCCnt[SUBSYSTEM_SUPERPU_MAX];
    U8 usReadSuccessLun[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];    
    BOOL bIsEraseFail[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU]; // record debug information
    BOOL bIsAT0NeedErase[SUBSYSTEM_SUPERPU_MAX][AT0_BLOCK_COUNT];
    BOOL bIsAllRPMTUECC[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
	/* new add for scan data block*/
    U32 ulTargetOffsetTS[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU][TARGET_ALL];

    /*scan data block state machine*/
    L2_TB_REBUILD_STATUS RebuildDataBlockStatus[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU]; 

    /*scan erase one table block state machine*/
    L2_TB_ERASE_STATUS TableBlkEraseStatus[SUBSYSTEM_SUPERPU_MAX];

    /*check  data block VBN and PBN mapping state machine*/
    L2_TB_REBUILD_CHECK_STATUS CheckScanResultStatus[SUBSYSTEM_SUPERPU_MAX];
} TB_REBUILD_MANAGEMENT;

typedef struct _TB_PBIT_SEARCH
{
    L2_TB_FINDPBIT_STATUS FindPbitStatus;

    U32 ucBitMapMsk[SUBSYSTEM_SUPERPU_MAX];
    L2_TB_PBIT_STATUS  ucPbitPuStatus[SUBSYSTEM_SUPERPU_MAX];
    U16 usAt0PhyBlk[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU][AT0_BLOCK_COUNT];
    U16 usAt0LogicPage[SUBSYSTEM_SUPERPU_MAX];
    U16 usAt0LogicBlk[SUBSYSTEM_SUPERPU_MAX];
    U16 usPbitPageIndex[SUBSYSTEM_SUPERPU_MAX];

    U32 ulAt0PbitMaxTsNum[SUBSYSTEM_SUPERPU_MAX];
    U8  ucFlashStatus[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
    RED  PbitPuRed[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
}TB_PBIT_SEARCH;

typedef struct _TB_RED_INFO
{
    RED PBIT_Red[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
    RED Data_Red[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
} TB_RED_INFO;

typedef struct _TB_MOVE_BLOCK_MANAGEMENT
{
    U32 m_MoveState[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
    U32 m_MoveOneBlockState[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
    U16 m_MoveSrcBlock[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
    U16 m_MoveTgtBlock[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];

    U16 m_ErrorBlock[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
    U16 m_ErrorPage[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
    PhysicalAddr m_RdAddr[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
    PhysicalAddr m_PrgAddr[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
    PhysicalAddr m_ErsAddr[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
    U8 m_MoveStatus[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
    RED m_TBSpare[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
}TB_MOVEBLOCK_MANAGEMENT;

extern GLOBAL  TB_MANAGEMENT *pTBManagement;
extern GLOBAL  TB_REBUILD_MANAGEMENT *pTBRebManagement;
extern GLOBAL  TB_PBIT_SEARCH *pPbitSearch;
extern GLOBAL  TB_RED_INFO *pTBRedInfo;
extern GLOBAL  TB_MOVEBLOCK_MANAGEMENT* pTBMoveBlockManagement;

extern GLOBAL  U32 gTBSaveBBTState;
extern GLOBAL  U32 g_ulTableBlockEnd[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
extern GLOBAL  U32 g_ulDataBlockStart[SUBSYSTEM_SUPERPU_MAX][LUN_NUM_PER_SUPERPU];
extern GLOBAL  BOOL bRTHasLoad[SUBSYSTEM_SUPERPU_MAX];

extern void MCU1_DRAM_TEXT L2_BbtInit(void);
void L2_TB_Reset_All(void);
void L2_TBManagement_Init(void);
void L2_TBRebManagement_Init(void);
void L2_TableBlock_LLF(BOOL bKeepEraseCnt);
U32 L2_TableBlock_Boot(void);
U32 L2_TableBlock_Shutdown(void);
U32 L2_TableErrorHandlingMoveBlock(U8 ucSuperPuNum, U8 ucLunInSuperPu, U16 usStartBlock, U16 usErrorPage, U8 ucErrType);
RED* L2_TB_GetRedAddr(PAGE_TYPE PageType, U8 ucSuperPuNum, U8 ucLunInSuperPu);
U32 L2_TB_GetDRAMBufAddr(U8 ucSuperPuNum, U8 ucLunInSuperPu);
U32 L2_TB_GetDataLength(PAGE_TYPE PageType, U8 ucSuperPuNum, U8 ucLunInSuperPu, U16 usPageIndex);
U16 L2_TB_GetPageCntPerCE(PAGE_TYPE PageType);
void L2_TB_ResetRebuildStatus(void);
void L2_TB_ResetUECCStatus(void);
void L2_TB_ResetEraseAllStatus(void);
void L2_TB_ResetFullRecoveryStatus(void);
U32 L2_TB_GetDataAddr(PAGE_TYPE PageType, U8 ucSuperPuNum, U8 ucLunInSuperPu, U16 usPageIndex);
void L2_TB_ResetDataBlockMaxTS(U8 ucSuperPuNum, U8 ucLunInSuperPu);
U32 L2_TB_GetDataBlockMaxTS(U8 ucSuperPuNum);
void L2_TB_ResetCurBlockMaxTS(U8 ucSuperPuNum, U8 ucLunInSuperPu);
void L2_TB_UpdateDataBlockMaxTS(U8 ucSuperPuNum, U8 ucLunInSuperPu);
U32 L2_LoadRTBeforBoot(void);
BOOL MCU1_DRAM_TEXT L2_TB_RecoverPbit();
U32 MCU1_DRAM_TEXT L2_TB_SaveTableBlock(U8 ucSuperPuNum, PAGE_TYPE PageType);
BOOL MCU1_DRAM_TEXT L2_TB_SavePbitBlock(U32 *pSuperPuMsk);

#ifdef SHUTDOWN_IMPROVEMENT_STAGE2
U32 MCU1_DRAM_TEXT L2_TB_CheckGetTimeStamp(U8 ucSuperPuNum, U8 ucLunInSuperPu, U16 usPageIndex);
#endif

#endif

/********************** FILE END ***************/
